!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
!rm	src/testdir/amiga.vim	/^cmap !rm !Delete all$/;"	m
#	runtime/indent/dictconf.vim	/^inoremap <buffer> # X#$/;"	m
#	runtime/indent/dictdconf.vim	/^inoremap <buffer> # X#$/;"	m
$	runtime/tutor/tutor.cs	/^		$ (do konce øádku), atd.$/;"	m	signature:(do konce øádku)
$TUTOR	runtime/tutor/tutor.vim	/^  let $TUTOR = $VIMRUNTIME . s:tutorfile$/;"	v
$TUTOR	runtime/tutor/tutor.vim	/^  let $TUTOR = s:tutorxx$/;"	v
$VAR	src/testdir/test49.vim	/^	let $VAR = "let(" . THROW("var") . ")"$/;"	v
$VAR	src/testdir/test49.vim	/^	let $VAR = "old_value"$/;"	v
%	runtime/macros/less.vim	/^noremap <script> % %<SID>L$/;"	m
%	runtime/macros/matchit.vim	/^nnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	m
%	runtime/macros/matchit.vim	/^onoremap <silent> %  v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	m
%	runtime/macros/matchit.vim	/^vnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	m
&	runtime/macros/life/life.vim	/^map & :%s\/^\\(-[ A-Z]*-\\)\\(-[ A-Z]*-\\)\\(-[.]*-\\)$\/\\2\\3\\3\/$/;"	m
&Edit.&Find\.\.\.		y:promptfind	runtime/menu.vim	/^  vnoremenu <silent>	 &Edit.&Find\\.\\.\\.		y:promptfind <C-R>=<SID>FixFText()<CR><CR>$/;"	m
&Edit.&Paste<Tab>"+gP		<C-R>+	runtime/menu.vim	/^cnoremenu	 &Edit.&Paste<Tab>"+gP		<C-R>+$/;"	m
&Edit.Find\	runtime/menu.vim	/^  vnoremenu	 &Edit.Find\\ and\\ Rep&lace<Tab>:s	:s\/$/;"	m
&Edit.Find\	runtime/menu.vim	/^  vnoremenu <silent>	 &Edit.Find\\ and\\ Rep&lace\\.\\.\\. y:promptrepl <C-R>=<SID>FixFText()<CR><CR>$/;"	m
&Edit.Put\	runtime/menu.vim	/^inoremenu	 &Edit.Put\\ &After<Tab>]p	<C-O>]p$/;"	m
&Edit.Put\	runtime/menu.vim	/^inoremenu	 &Edit.Put\\ &Before<Tab>[p	<C-O>[p$/;"	m
&File.&Print			:hardcopy<CR>	runtime/menu.vim	/^  vnoremenu &File.&Print			:hardcopy<CR>$/;"	m
&File.&Print			:w	runtime/menu.vim	/^  vnoremenu &File.&Print			:w !lpr<CR>$/;"	m
&Tools.&Diff.&Get\	runtime/menu.vim	/^  vnoremenu &Tools.&Diff.&Get\\ Block		:diffget<CR>$/;"	m
&Tools.&Diff.&Put\	runtime/menu.vim	/^  vnoremenu &Tools.&Diff.&Put\\ Block		:diffput<CR>$/;"	m
&Tools.&Jump\	runtime/menu.vim	/^vnoremenu &Tools.&Jump\\ to\\ this\\ tag<Tab>g^]	g<C-]>$/;"	m
(	runtime/macros/life/life.vim	/^map ( ,s,i,X0i?^#A $/;"	m
)0	runtime/macros/life/life.vim	/^map )0 o-                    --....................--....................-$/;"	m
)1	runtime/macros/life/life.vim	/^map )1 o-        VIM         --....................--....................-$/;"	m
)2	runtime/macros/life/life.vim	/^map )2 o-       LIVES        --....................--....................-$/;"	m
*	runtime/macros/urm/urm.vim	/^map * 1G\/INIT$/;"	m
+	runtime/macros/life/life.vim	/^map + <1C<2$/;"	m
,!	runtime/macros/life/life.vim	/^map ,! "byy$/;"	m
,#	runtime/macros/life/life.vim	/^map ,# "bP$/;"	m
,$	runtime/macros/life/life.vim	/^map ,$ dd$/;"	m
,%	runtime/macros/life/life.vim	/^map ,% "cp$/;"	m
,&	runtime/macros/life/life.vim	/^map ,& 0"gd\$$/;"	m
,*	runtime/macros/life/life.vim	/^map ,* @g$/;"	m
,-	runtime/macros/life/life.vim	/^map ,- :s\/.\/-\/g$/;"	m
,1	runtime/macros/life/life.vim	/^map ,1 y G$p$/;"	m
,2	runtime/macros/life/life.vim	/^map ,2 2y G$p$/;"	m
,3	runtime/macros/life/life.vim	/^map ,3 3y G$p$/;"	m
,@	runtime/macros/life/life.vim	/^map ,@ "cyy$/;"	m
,IIN	runtime/macros/life/life.vim	/^map ,IIN G?^top$/;"	m
,Iaa	runtime/macros/life/life.vim	/^map ,Iaa o=AB =BC =CD =DE =EF =FG =GH =HI =IJ =JK =KL =LM =MN =NO =OP =PQ =QR$/;"	m
,Iab	runtime/macros/life/life.vim	/^map ,Iab o=RS =ST =TU =UV =VW =WX =XY =YZ =Z $/;"	m
,Id0	runtime/macros/life/life.vim	/^map ,Id0 o#  .`a22lr $/;"	m
,Id1	runtime/macros/life/life.vim	/^map ,Id1 o# X .`a22lr $/;"	m
,Id2	runtime/macros/life/life.vim	/^map ,Id2 o# XX .`a22lr $/;"	m
,Id3	runtime/macros/life/life.vim	/^map ,Id3 o# XXX .`a22lrA$/;"	m
,Id4	runtime/macros/life/life.vim	/^map ,Id4 o# XXXX .`a22lr $/;"	m
,Id5	runtime/macros/life/life.vim	/^map ,Id5 o# XXXXX .`a22lr $/;"	m
,Id6	runtime/macros/life/life.vim	/^map ,Id6 o# XXXXXX .`a22lr $/;"	m
,Id7	runtime/macros/life/life.vim	/^map ,Id7 o# XXXXXXX .`a22lr $/;"	m
,Id8	runtime/macros/life/life.vim	/^map ,Id8 o# XXXXXXXX .`a22lr $/;"	m
,Il0	runtime/macros/life/life.vim	/^map ,Il0 o#XX .`a22lr $/;"	m
,Il1	runtime/macros/life/life.vim	/^map ,Il1 o#XXX .`a22lr $/;"	m
,Il2	runtime/macros/life/life.vim	/^map ,Il2 o#XXXX .,a$/;"	m
,Il3	runtime/macros/life/life.vim	/^map ,Il3 o#XXXXX .,a$/;"	m
,Il4	runtime/macros/life/life.vim	/^map ,Il4 o#XXXXXX .`a22lr $/;"	m
,Il5	runtime/macros/life/life.vim	/^map ,Il5 o#XXXXXXX .`a22lr $/;"	m
,Il6	runtime/macros/life/life.vim	/^map ,Il6 o#XXXXXXXX .`a22lr $/;"	m
,Il7	runtime/macros/life/life.vim	/^map ,Il7 o#XXXXXXXXX .`a22lr $/;"	m
,Il8	runtime/macros/life/life.vim	/^map ,Il8 O#XXXXXXXXXX .`a22lr $/;"	m
,R	runtime/macros/life/life.vim	/^map ,R 03stop$/;"	m
,X	runtime/macros/life/life.vim	/^map ,X :.g\/[A-Z]\/s\/\/X\/g$/;"	m
,Y	runtime/macros/life/life.vim	/^map ,Y "qy$@q$/;"	m
,^	runtime/macros/life/life.vim	/^map ,^ AiC$/;"	m
,a	runtime/macros/life/life.vim	/^map ,a `a,jGi?=,ma$/;"	m
,c	runtime/macros/life/life.vim	/^map ,c c$$/;"	m
,d	runtime/macros/life/life.vim	/^map ,d "qd$@q$/;"	m
,gq	runtime/macros/justify.vim	/^nmap ,gq :%s\/\\s\\+\/ \/g<CR>gq1G$/;"	m
,gq	runtime/macros/justify.vim	/^vmap ,gq :s\/\\s\\+\/ \/g<CR>gvgq$/;"	m
,i	runtime/macros/life/life.vim	/^map ,i `ay GP$/;"	m
,j	runtime/macros/life/life.vim	/^map ,j y $/;"	m
,m	runtime/macros/life/life.vim	/^map ,m p$/;"	m
,n	runtime/macros/life/life.vim	/^map ,n x$/;"	m
,o	runtime/macros/life/life.vim	/^map ,o oPut 'X's in the left box, then hit 'C' or 'R'$/;"	m
,r	runtime/macros/life/life.vim	/^map ,r makh,2`akF-l,1`ah,2`aF-l,1`ajh,2`ajF-l,1($/;"	m
,s	runtime/macros/life/life.vim	/^map ,s :.g\/ \/s\/\/\/g$/;"	m
-H	src/Make_bc3.mak	/^-H=VIM.SYM$/;"	m
-H	src/Make_w16.mak	/^-H=$(INTDIR)\\gvim16.csm	; gvim16.csm is the precompiled header filename$/;"	m
.path.c	src/Make_bc5.mak	/^.path.c = .$/;"	m
.path.c	src/Make_w16.mak	/^.path.c = .$/;"	m
/	runtime/macros/less.vim	/^noremap <script> \/ H$:call <SID>Forward()<CR>\/$/;"	m
/tmp	src/testdir/amiga.vim	/^map! \/tmp t:$/;"	m
0	runtime/syntax/hitest.vim	/^normal 0$/;"	m
1.100	runtime/menu.vim	/^cnoremenu <script> <silent> 1.100 PopUp.Select\\ &All	<C-U>call <SID>SelectAll()<CR>$/;"	m
1.100	runtime/menu.vim	/^inoremenu <script> <silent> 1.100 PopUp.Select\\ &All	<C-O>:call <SID>SelectAll()<CR>$/;"	m
1.100	runtime/menu.vim	/^noremenu  <script> <silent> 1.100 PopUp.Select\\ &All	:<C-U>call <SID>SelectAll()<CR>$/;"	m
1.20	runtime/menu.vim	/^vnoremenu 1.20 PopUp.Cu&t		"+x$/;"	m
1.30	runtime/menu.vim	/^cnoremenu 1.30 PopUp.&Copy		<C-Y>$/;"	m
1.30	runtime/menu.vim	/^vnoremenu 1.30 PopUp.&Copy		"+y$/;"	m
1.40	runtime/menu.vim	/^cnoremenu 1.40 PopUp.&Paste		<C-R>+$/;"	m
1.40	runtime/menu.vim	/^nnoremenu 1.40 PopUp.&Paste		"+gP$/;"	m
1.50	runtime/menu.vim	/^vnoremenu 1.50 PopUp.&Delete		x$/;"	m
1.60	runtime/menu.vim	/^vnoremenu 1.60 PopUp.Select\\ Blockwise	<C-V>$/;"	m
1.70	runtime/menu.vim	/^  vnoremenu 1.70 ToolBar.Cut		"+x$/;"	m
1.70	runtime/menu.vim	/^cnoremenu 1.70 PopUp.Select\\ &Word	<C-C>vaw$/;"	m
1.70	runtime/menu.vim	/^inoremenu 1.70 PopUp.Select\\ &Word	<C-O>vaw$/;"	m
1.70	runtime/menu.vim	/^nnoremenu 1.70 PopUp.Select\\ &Word	vaw$/;"	m
1.70	runtime/menu.vim	/^onoremenu 1.70 PopUp.Select\\ &Word	aw$/;"	m
1.70	runtime/menu.vim	/^vnoremenu 1.70 PopUp.Select\\ &Word	<C-C>vaw$/;"	m
1.73	runtime/menu.vim	/^cnoremenu 1.73 PopUp.Select\\ &Sentence	<C-C>vas$/;"	m
1.73	runtime/menu.vim	/^inoremenu 1.73 PopUp.Select\\ &Sentence	<C-O>vas$/;"	m
1.73	runtime/menu.vim	/^nnoremenu 1.73 PopUp.Select\\ &Sentence	vas$/;"	m
1.73	runtime/menu.vim	/^onoremenu 1.73 PopUp.Select\\ &Sentence	as$/;"	m
1.73	runtime/menu.vim	/^vnoremenu 1.73 PopUp.Select\\ &Sentence	<C-C>vas$/;"	m
1.77	runtime/menu.vim	/^cnoremenu 1.77 PopUp.Select\\ Pa&ragraph	<C-C>vap$/;"	m
1.77	runtime/menu.vim	/^inoremenu 1.77 PopUp.Select\\ Pa&ragraph	<C-O>vap$/;"	m
1.77	runtime/menu.vim	/^nnoremenu 1.77 PopUp.Select\\ Pa&ragraph	vap$/;"	m
1.77	runtime/menu.vim	/^onoremenu 1.77 PopUp.Select\\ Pa&ragraph	ap$/;"	m
1.77	runtime/menu.vim	/^vnoremenu 1.77 PopUp.Select\\ Pa&ragraph	<C-C>vap$/;"	m
1.80	runtime/menu.vim	/^  cnoremenu 1.80 ToolBar.Copy		<C-Y>$/;"	m
1.80	runtime/menu.vim	/^  vnoremenu 1.80 ToolBar.Copy		"+y$/;"	m
1.80	runtime/menu.vim	/^cnoremenu 1.80 PopUp.Select\\ &Line	<C-C>V$/;"	m
1.80	runtime/menu.vim	/^inoremenu 1.80 PopUp.Select\\ &Line	<C-O>V$/;"	m
1.80	runtime/menu.vim	/^nnoremenu 1.80 PopUp.Select\\ &Line	V$/;"	m
1.80	runtime/menu.vim	/^onoremenu 1.80 PopUp.Select\\ &Line	<C-C>V$/;"	m
1.80	runtime/menu.vim	/^vnoremenu 1.80 PopUp.Select\\ &Line	<C-C>V$/;"	m
1.90	runtime/menu.vim	/^  nnoremenu 1.90 ToolBar.Paste		"+gP$/;"	m
1.90	runtime/menu.vim	/^cnoremenu 1.90 PopUp.Select\\ &Block	<C-C><C-V>$/;"	m
1.90	runtime/menu.vim	/^inoremenu 1.90 PopUp.Select\\ &Block	<C-O><C-V>$/;"	m
1.90	runtime/menu.vim	/^nnoremenu 1.90 PopUp.Select\\ &Block	<C-V>$/;"	m
1.90	runtime/menu.vim	/^onoremenu 1.90 PopUp.Select\\ &Block	<C-C><C-V>$/;"	m
1.90	runtime/menu.vim	/^vnoremenu 1.90 PopUp.Select\\ &Block	<C-C><C-V>$/;"	m
20.340	runtime/menu.vim	/^vnoremenu 20.340 &Edit.Cu&t<Tab>"+x		"+x$/;"	m
20.350	runtime/menu.vim	/^cnoremenu 20.350 &Edit.&Copy<Tab>"+y		<C-Y>$/;"	m
20.350	runtime/menu.vim	/^vnoremenu 20.350 &Edit.&Copy<Tab>"+y		"+y$/;"	m
20.360	runtime/menu.vim	/^nnoremenu 20.360 &Edit.&Paste<Tab>"+gP		"+gP$/;"	m
20.370	runtime/menu.vim	/^nnoremenu 20.370 &Edit.Put\\ &Before<Tab>[p	[p$/;"	m
20.380	runtime/menu.vim	/^nnoremenu 20.380 &Edit.Put\\ &After<Tab>]p	]p$/;"	m
20.390	runtime/menu.vim	/^  vnoremenu 20.390 &Edit.&Delete<Tab>x		x$/;"	m
20.400	runtime/menu.vim	/^cnoremenu <script> <silent> 20.400 &Edit.&Select\\ All<Tab>ggVG	<C-U>call <SID>SelectAll()<CR>$/;"	m
20.400	runtime/menu.vim	/^inoremenu <script> <silent> 20.400 &Edit.&Select\\ All<Tab>ggVG	<C-O>:call <SID>SelectAll()<CR>$/;"	m
20.400	runtime/menu.vim	/^noremenu  <script> <silent> 20.400 &Edit.&Select\\ All<Tab>ggVG	:<C-U>call <SID>SelectAll()<CR>$/;"	m
40.340.220	runtime/menu.vim	/^  vnoremenu 40.340.220 &Tools.&Folding.Create\\ &Fold<Tab>zf	zf$/;"	m
<	runtime/ftplugin/cobol.vim	/^        nnoremap <silent> <buffer> < :set opfunc=<SID>DecreaseFunc<CR>g@$/;"	m
<	runtime/ftplugin/cobol.vim	/^    vnoremap <silent> <buffer> < :call CobolIndentBlock(-v:count1)<CR>$/;"	m
<	runtime/macros/less.vim	/^map < g$/;"	m
<1	runtime/macros/life/life.vim	/^map <1 G?^top$/;"	m
<2	runtime/macros/life/life.vim	/^map <2 G?^top$/;"	m
<2-LeftMouse>	<2-RightMouse>	runtime/macros/swapmous.vim	/^noremap	 <2-LeftMouse>	<2-RightMouse>$/;"	m
<2-RightMouse>	<2-LeftMouse>	runtime/macros/swapmous.vim	/^noremap	 <2-RightMouse>	<2-LeftMouse>$/;"	m
<3-LeftMouse>	<3-RightMouse>	runtime/macros/swapmous.vim	/^noremap	 <3-LeftMouse>	<3-RightMouse>$/;"	m
<3-RightMouse>	<3-LeftMouse>	runtime/macros/swapmous.vim	/^noremap	 <3-RightMouse>	<3-LeftMouse>$/;"	m
<4-LeftMouse>	<4-RightMouse>	runtime/macros/swapmous.vim	/^noremap	 <4-LeftMouse>	<4-RightMouse>$/;"	m
<4-RightMouse>	<4-LeftMouse>	runtime/macros/swapmous.vim	/^noremap	 <4-RightMouse>	<4-LeftMouse>$/;"	m
<<	runtime/ftplugin/cobol.vim	/^    nnoremap <silent> <buffer> << :call CobolIndentBlock(-1)<CR>$/;"	m
<<	runtime/macros/life/life.vim	/^map << :r!date$/;"	m
<BS>	runtime/mswin.vim	/^vnoremap <BS> d$/;"	m
<C-A>	runtime/mswin.vim	/^cnoremap <C-A> <C-C>gggH<C-O>G$/;"	m
<C-A>	runtime/mswin.vim	/^inoremap <C-A> <C-O>gg<C-O>gH<C-O>G$/;"	m
<C-A>	runtime/mswin.vim	/^noremap <C-A> gggH<C-O>G$/;"	m
<C-A>	runtime/mswin.vim	/^onoremap <C-A> <C-C>gggH<C-O>G$/;"	m
<C-B>	runtime/macros/less.vim	/^map <C-B> b$/;"	m
<C-C>	runtime/mswin.vim	/^vnoremap <C-C> "+y$/;"	m
<C-D>	runtime/ftplugin/cobol.vim	/^    inoremap <silent> <buffer> <C-D> <C-R>=<SID>DecreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<C-D>	runtime/macros/less.vim	/^map <C-D> d$/;"	m
<C-E>	runtime/macros/less.vim	/^map <C-E> <CR>$/;"	m
<C-F4>	runtime/mswin.vim	/^cnoremap <C-F4> <C-C><C-W>c$/;"	m
<C-F4>	runtime/mswin.vim	/^inoremap <C-F4> <C-O><C-W>c$/;"	m
<C-F4>	runtime/mswin.vim	/^noremap <C-F4> <C-W>c$/;"	m
<C-F4>	runtime/mswin.vim	/^onoremap <C-F4> <C-C><C-W>c$/;"	m
<C-F>	runtime/evim.vim	/^cnoremap <silent> <C-F> <C-C>:promptfind<CR>$/;"	m
<C-F>	runtime/evim.vim	/^inoremap <silent> <C-F> <C-O>:promptfind<CR>$/;"	m
<C-F>	runtime/evim.vim	/^noremap <silent> <C-F> :promptfind<CR>$/;"	m
<C-F>	runtime/evim.vim	/^onoremap <silent> <C-F> <C-C>:promptfind<CR>$/;"	m
<C-F>	runtime/evim.vim	/^vnoremap <silent> <C-F> y:promptfind <C-R>"<CR>$/;"	m
<C-F>	runtime/macros/less.vim	/^map <C-F> <Space>$/;"	m
<C-Insert>	runtime/mswin.vim	/^vnoremap <C-Insert> "+y$/;"	m
<C-J>	runtime/macros/less.vim	/^map <C-J> <CR>$/;"	m
<C-K>	runtime/macros/less.vim	/^map <C-K> k$/;"	m
<C-N>	runtime/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-N> <C-R>=ada#Completion("\\<lt>C-N>")<cr>$/;"	m
<C-N>	runtime/macros/less.vim	/^map <C-N> <CR>$/;"	m
<C-P>	runtime/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-P> <C-R>=ada#Completion("\\<lt>C-P>")<cr>$/;"	m
<C-P>	runtime/macros/less.vim	/^map <C-P> k$/;"	m
<C-Q>		<C-V>	runtime/mswin.vim	/^noremap <C-Q>		<C-V>$/;"	m
<C-R>	runtime/macros/less.vim	/^noremap <script> <C-R> <C-L><SID>L$/;"	m
<C-S>		:update<CR>	runtime/mswin.vim	/^noremap <C-S>		:update<CR>$/;"	m
<C-S>		<C-C>:update<CR>	runtime/mswin.vim	/^vnoremap <C-S>		<C-C>:update<CR>$/;"	m
<C-S>		<C-O>:update<CR>	runtime/mswin.vim	/^inoremap <C-S>		<C-O>:update<CR>$/;"	m
<C-T>	runtime/ftplugin/cobol.vim	/^    inoremap <silent> <buffer> <C-T> <C-R>=<SID>IncreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<C-T>	runtime/ftplugin/pdf.vim	/^nnoremap <silent><buffer> <C-T> :if len(b:pdf_tagstack) > 0 <Bar> call setpos('.',remove(b:pdf_tagstack, -1)) <Bar> else <Bar> exe "norm! \\<Lt>C-T>" <Bar> endif<CR>$/;"	m
<C-Tab>	runtime/mswin.vim	/^cnoremap <C-Tab> <C-C><C-W>w$/;"	m
<C-Tab>	runtime/mswin.vim	/^inoremap <C-Tab> <C-O><C-W>w$/;"	m
<C-Tab>	runtime/mswin.vim	/^noremap <C-Tab> <C-W>w$/;"	m
<C-Tab>	runtime/mswin.vim	/^onoremap <C-Tab> <C-C><C-W>w$/;"	m
<C-U>	runtime/macros/less.vim	/^noremap <script> <C-U> <C-U><SID>L$/;"	m
<C-U>	runtime/vimrc_example.vim	/^inoremap <C-U> <C-G>u<C-U>$/;"	m
<C-V>		"+gP	runtime/mswin.vim	/^map <C-V>		"+gP$/;"	m
<C-V>		<C-R>+	runtime/mswin.vim	/^cmap <C-V>		<C-R>+$/;"	m
<C-V>	runtime/macros/less.vim	/^map <C-V> <Space>$/;"	m
<C-W><C-]>	runtime/ftplugin/cucumber.vim	/^  nmap <silent><buffer> <C-W><C-]>  :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W><C-]>	runtime/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-]>  :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>]	runtime/ftplugin/cucumber.vim	/^  nmap <silent><buffer> <C-W>]      :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W>]	runtime/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>]      :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g<C-]>	runtime/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g<C-]> :<C-U>exe        "stjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g]	runtime/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g]     :<C-U>exe      "stselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g}	runtime/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g}     :<C-U>exe        "ptjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>}	runtime/ftplugin/cucumber.vim	/^  nmap <silent><buffer> <C-W>}      :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
<C-W>}	runtime/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>}      :<C-U>exe          "ptag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-X>	runtime/mswin.vim	/^vnoremap <C-X> "+x$/;"	m
<C-X><C-]>	runtime/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-X><C-]> <C-R>=<SID>ada#Completion("\\<lt>C-X>\\<lt>C-]>")<cr>$/;"	m
<C-Y>	runtime/macros/less.vim	/^map <C-Y> k$/;"	m
<C-Y>	runtime/mswin.vim	/^inoremap <C-Y> <C-O><C-R>$/;"	m
<C-Y>	runtime/mswin.vim	/^noremap <C-Y> <C-R>$/;"	m
<C-Z>	runtime/mswin.vim	/^inoremap <C-Z> <C-O>u$/;"	m
<C-Z>	runtime/mswin.vim	/^noremap <C-Z> u$/;"	m
<C-]>	runtime/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#Jump_Tag ('', 'tjump')<cr>$/;"	m
<C-]>	runtime/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#List_Tag ()<cr>$/;"	m
<C-]>	runtime/ftplugin/cucumber.vim	/^  nmap <silent><buffer> <C-]>       :<C-U>exe <SID>jump('edit',v:count)<CR>$/;"	m
<C-]>	runtime/ftplugin/pdf.vim	/^nnoremap <silent><buffer> <C-]> :call <SID>Tag()<CR>$/;"	m
<C-]>	runtime/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-]>       :<C-U>exe  v:count1."tag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<CR>	runtime/macros/less.vim	/^noremap <script> <CR> <C-E><SID>L$/;"	m
<CR>	runtime/optwin.vim	/^inoremap <silent> <buffer> <CR> <Esc>:call <SID>CR()<CR>$/;"	m
<CR>	runtime/optwin.vim	/^noremap <silent> <buffer> <CR> <C-\\><C-N>:call <SID>CR()<CR>$/;"	m
<D-S-s>	runtime/macmap.vim	/^cmap <special> <D-S-s> <C-C><D-s>$/;"	m
<D-S-s>	runtime/macmap.vim	/^imap <special> <D-S-s> <C-O><D-s>$/;"	m
<D-S-s>	runtime/macmap.vim	/^nnoremap <special> <D-S-s> :browse confirm saveas<CR>$/;"	m
<D-S-s>	runtime/macmap.vim	/^omap <special> <D-S-s> <Esc><D-s>$/;"	m
<D-S-s>	runtime/macmap.vim	/^vmap <special> <D-S-s> <Esc><D-s>gv$/;"	m
<D-a>	runtime/macmap.vim	/^cmap <special> <D-a> <C-C><D-a>$/;"	m
<D-a>	runtime/macmap.vim	/^imap <special> <D-a> <Esc><D-a>$/;"	m
<D-a>	runtime/macmap.vim	/^nnoremap <silent> <special> <D-a> :if &slm != ""<Bar>exe ":norm gggH<C-O>G"<Bar> else<Bar>exe ":norm ggVG"<Bar>endif<CR>$/;"	m
<D-a>	runtime/macmap.vim	/^omap <special> <D-a> <Esc><D-a>$/;"	m
<D-a>	runtime/macmap.vim	/^vmap <special> <D-a> <Esc><D-a>$/;"	m
<D-c>	runtime/macmap.vim	/^cnoremap <special> <D-c> <C-Y>$/;"	m
<D-c>	runtime/macmap.vim	/^vnoremap <special> <D-c> "+y$/;"	m
<D-f>	runtime/macmap.vim	/^cmap <special> <D-f> <C-C><D-f>$/;"	m
<D-f>	runtime/macmap.vim	/^imap <special> <D-f> <Esc><D-f>$/;"	m
<D-f>	runtime/macmap.vim	/^nnoremap <special> <D-f> \/$/;"	m
<D-f>	runtime/macmap.vim	/^omap <special> <D-f> <Esc><D-f>$/;"	m
<D-f>	runtime/macmap.vim	/^vmap <special> <D-f> <Esc><D-f>$/;"	m
<D-g>	runtime/macmap.vim	/^cmap <special> <D-g> <C-C><D-g>$/;"	m
<D-g>	runtime/macmap.vim	/^imap <special> <D-g> <C-O><D-g>$/;"	m
<D-g>	runtime/macmap.vim	/^nnoremap <special> <D-g> n$/;"	m
<D-g>	runtime/macmap.vim	/^omap <special> <D-g> <Esc><D-g>$/;"	m
<D-g>	runtime/macmap.vim	/^vmap <special> <D-g> <Esc><D-g>$/;"	m
<D-n>	runtime/macmap.vim	/^cmap <special> <D-n> <C-C><D-n>$/;"	m
<D-n>	runtime/macmap.vim	/^imap <special> <D-n> <C-O><D-n>$/;"	m
<D-n>	runtime/macmap.vim	/^nnoremap <special> <D-n> :confirm enew<CR>$/;"	m
<D-n>	runtime/macmap.vim	/^omap <special> <D-n> <Esc><D-n>$/;"	m
<D-n>	runtime/macmap.vim	/^vmap <special> <D-n> <Esc><D-n>gv$/;"	m
<D-o>	runtime/macmap.vim	/^cmap <special> <D-o> <C-C><D-o>$/;"	m
<D-o>	runtime/macmap.vim	/^imap <special> <D-o> <C-O><D-o>$/;"	m
<D-o>	runtime/macmap.vim	/^nnoremap <special> <D-o> :browse confirm e<CR>$/;"	m
<D-o>	runtime/macmap.vim	/^omap <special> <D-o> <Esc><D-o>$/;"	m
<D-o>	runtime/macmap.vim	/^vmap <special> <D-o> <Esc><D-o>gv$/;"	m
<D-s>	runtime/macmap.vim	/^cmap <special> <D-s> <C-C><D-s>$/;"	m
<D-s>	runtime/macmap.vim	/^imap <special> <D-s> <C-O><D-s>$/;"	m
<D-s>	runtime/macmap.vim	/^nnoremap <silent> <special> <D-s> :if expand("%") == ""<Bar>browse confirm w<Bar> else<Bar>confirm w<Bar>endif<CR>$/;"	m
<D-s>	runtime/macmap.vim	/^omap <special> <D-s> <Esc><D-s>$/;"	m
<D-s>	runtime/macmap.vim	/^vmap <special> <D-s> <Esc><D-s>gv$/;"	m
<D-v>	runtime/macmap.vim	/^cnoremap <special> <D-v> <C-R>+$/;"	m
<D-v>	runtime/macmap.vim	/^nnoremap <special> <D-v> "+gP$/;"	m
<D-w>	runtime/macmap.vim	/^cmap <special> <D-w> <C-C><D-w>$/;"	m
<D-w>	runtime/macmap.vim	/^imap <special> <D-w> <C-O><D-w>$/;"	m
<D-w>	runtime/macmap.vim	/^nnoremap <silent> <special> <D-w> :if winheight(2) < 0 <Bar> confirm enew <Bar> else <Bar> confirm close <Bar> endif<CR>$/;"	m
<D-w>	runtime/macmap.vim	/^omap <special> <D-w> <Esc><D-w>$/;"	m
<D-w>	runtime/macmap.vim	/^vmap <special> <D-w> <Esc><D-w>gv$/;"	m
<D-x>	runtime/macmap.vim	/^vnoremap <special> <D-x> "+x$/;"	m
<D-z>	runtime/macmap.vim	/^cmap <special> <D-z> <C-C><D-z>$/;"	m
<D-z>	runtime/macmap.vim	/^imap <special> <D-z> <C-O><D-z>$/;"	m
<D-z>	runtime/macmap.vim	/^nnoremap <special> <D-z> u$/;"	m
<D-z>	runtime/macmap.vim	/^omap <special> <D-z> <Esc><D-z>$/;"	m
<D-z>	runtime/macmap.vim	/^vmap <special> <D-z> <Esc><D-z>gv$/;"	m
<Down>	runtime/evim.vim	/^inoremap <silent> <Down> <C-R>=pumvisible() ? "\\<lt>Down>" : "\\<lt>C-O>gj"<CR>$/;"	m
<Down>	runtime/ftplugin/flexwiki.vim	/^      imap <buffer> <Down>   <C-o>gj$/;"	m
<Down>	runtime/ftplugin/flexwiki.vim	/^  nmap <buffer> <Down> gj$/;"	m
<Down>	runtime/ftplugin/flexwiki.vim	/^  vmap <buffer> <Down> gj$/;"	m
<Esc><	runtime/macros/less.vim	/^map <Esc>< g$/;"	m
<Esc><Space>	runtime/macros/less.vim	/^map <Esc><Space> <Space>$/;"	m
<Esc>>	runtime/macros/less.vim	/^map <Esc>> G$/;"	m
<Esc>v	runtime/macros/less.vim	/^map <Esc>v b$/;"	m
<Leader>K	runtime/ftplugin/man.vim	/^  nmap <Leader>K :call <SID>PreGetPage(0)<CR>$/;"	m
<Leader>o	runtime/ftplugin/changelog.vim	/^    noremap <buffer> <silent> <Leader>o <Esc>:call <SID>new_changelog_entry()<CR>$/;"	m
<Leader>o	runtime/ftplugin/changelog.vim	/^  nnoremap <silent> <Leader>o :call <SID>open_changelog()<CR>$/;"	m
<LeftDrag>	<RightDrag>	runtime/macros/swapmous.vim	/^noremap	 <LeftDrag>	<RightDrag>$/;"	m
<LeftDrag>	<RightDrag>	runtime/macros/swapmous.vim	/^noremap! <LeftDrag>	<RightDrag>$/;"	m
<LeftMouse>	<RightMouse>	runtime/macros/swapmous.vim	/^noremap	 <LeftMouse>	<RightMouse>$/;"	m
<LeftMouse>	<RightMouse>	runtime/macros/swapmous.vim	/^noremap! <LeftMouse>	<RightMouse>$/;"	m
<LeftRelease>	<RightRelease>	runtime/macros/swapmous.vim	/^noremap	 <LeftRelease>	<RightRelease>$/;"	m
<LeftRelease>	<RightRelease>	runtime/macros/swapmous.vim	/^noremap! <LeftRelease>	<RightRelease>$/;"	m
<LocalLeader><LocalLeader>	runtime/ftplugin/abaqus.vim	/^noremap <silent><buffer> <LocalLeader><LocalLeader> $/;"	m
<LocalLeader>C	runtime/ftplugin/lprolog.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	runtime/ftplugin/lprolog.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>C	runtime/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	runtime/ftplugin/ocaml.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>S	runtime/ftplugin/ocaml.vim	/^  map <LocalLeader>S :call OCaml_switch(1)<CR>$/;"	m
<LocalLeader>c	runtime/ftplugin/lprolog.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	runtime/ftplugin/lprolog.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	runtime/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	runtime/ftplugin/ocaml.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	runtime/ftplugin/spec.vim	/^		map <buffer> <LocalLeader>c <Plug>SpecChangelog$/;"	m
<LocalLeader>h	runtime/ftplugin/man.vim	/^      nmap <buffer> <LocalLeader>h <Plug>ManBS$/;"	m
<LocalLeader>q	runtime/ftplugin/mail.vim	/^    nmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>q	runtime/ftplugin/mail.vim	/^    vmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>s	runtime/ftplugin/ocaml.vim	/^  map <LocalLeader>s :call OCaml_switch(0)<CR>$/;"	m
<LocalLeader>t	runtime/ftplugin/ocaml.vim	/^  map  <silent> <LocalLeader>t :call Ocaml_print_type("normal")<CR>$/;"	m
<LocalLeader>t	runtime/ftplugin/ocaml.vim	/^  vmap <silent> <LocalLeader>t :<C-U>call Ocaml_print_type("visual")<CR>`<$/;"	m
<M-Space>	runtime/mswin.vim	/^  cnoremap <M-Space> <C-C>:simalt ~<CR>$/;"	m
<M-Space>	runtime/mswin.vim	/^  inoremap <M-Space> <C-O>:simalt ~<CR>$/;"	m
<M-Space>	runtime/mswin.vim	/^  noremap <M-Space> :simalt ~<CR>$/;"	m
<Plug>BUncomOff	runtime/ftplugin/lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOff	runtime/ftplugin/ocaml.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOn	runtime/ftplugin/lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i\/*<ESC>`>o<ESC>0i*\/<ESC>`<$/;"	m
<Plug>BUncomOn	runtime/ftplugin/ocaml.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i(*<ESC>`>o<ESC>0i*)<ESC>`<$/;"	m
<Plug>Comment	runtime/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>Comment          :call <SID>Comment('c')<CR>$/;"	m
<Plug>DeComment	runtime/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>DeComment        :call <SID>Comment('u')<CR>$/;"	m
<Plug>LUncomOff	runtime/ftplugin/lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOff <ESC>:s\/^\\\/\\* \\(.*\\) \\*\\\/\/\\1\/<CR>$/;"	m
<Plug>LUncomOff	runtime/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOff :s\/^(\\* \\(.*\\) \\*)\/\\1\/<CR>:noh<CR>$/;"	m
<Plug>LUncomOn	runtime/ftplugin/lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i\/* <ESC>$A *\/<ESC>`z$/;"	m
<Plug>LUncomOn	runtime/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i(* <ESC>$A *)<ESC>`z$/;"	m
<Plug>MailQuote	runtime/ftplugin/mail.vim	/^  nnoremap <buffer> <Plug>MailQuote :.,$s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>MailQuote	runtime/ftplugin/mail.vim	/^  vnoremap <buffer> <Plug>MailQuote :s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>ManBS	runtime/ftplugin/man.vim	/^    nnoremap <buffer> <Plug>ManBS :%s\/.\\b\/\/g<CR>:setl nomod<CR>''$/;"	m
<Plug>NetrwBrowseX	runtime/plugin/netrwPlugin.vim	/^ nno <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)<cr>$/;"	m
<Plug>SpecChangelog	runtime/ftplugin/spec.vim	/^noremap <buffer> <unique> <script> <Plug>SpecChangelog :call <SID>SpecChangelog("")<CR>$/;"	m
<Plug>Traditional	runtime/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>Traditional      :call <SID>Comment('t')<CR>$/;"	m
<Plug>VisualComment	runtime/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualComment     :'<,'>call <SID>Comment('c')<CR>$/;"	m
<Plug>VisualDeComment	runtime/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualDeComment   :'<,'>call <SID>Comment('u')<CR>$/;"	m
<Plug>VisualTraditional	runtime/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualTraditional :'<,'>call <SID>Comment('t')<CR>$/;"	m
<RightDrag>	<LeftDrag>	runtime/macros/swapmous.vim	/^noremap	 <RightDrag>	<LeftDrag>$/;"	m
<RightDrag>	<LeftDrag>	runtime/macros/swapmous.vim	/^noremap! <RightDrag>	<LeftDrag>$/;"	m
<RightMouse>	<LeftMouse>	runtime/macros/swapmous.vim	/^noremap	 <RightMouse>	<LeftMouse>$/;"	m
<RightMouse>	<LeftMouse>	runtime/macros/swapmous.vim	/^noremap! <RightMouse>	<LeftMouse>$/;"	m
<RightRelease>	<LeftRelease>	runtime/macros/swapmous.vim	/^noremap	 <RightRelease>	<LeftRelease>$/;"	m
<RightRelease>	<LeftRelease>	runtime/macros/swapmous.vim	/^noremap! <RightRelease>	<LeftRelease>$/;"	m
<S-Del>	runtime/mswin.vim	/^vnoremap <S-Del> "+x$/;"	m
<S-Down>	runtime/ftplugin/flexwiki.vim	/^  imap <buffer> <S-Down>   <C-o>gj$/;"	m
<S-Insert>		"+gP	runtime/mswin.vim	/^map <S-Insert>		"+gP$/;"	m
<S-Insert>		<C-R>+	runtime/mswin.vim	/^cmap <S-Insert>		<C-R>+$/;"	m
<S-Insert>		<C-V>	runtime/mswin.vim	/^imap <S-Insert>		<C-V>$/;"	m
<S-Insert>		<C-V>	runtime/mswin.vim	/^vmap <S-Insert>		<C-V>$/;"	m
<S-Insert>	runtime/gvimrc_example.vim	/^map <S-Insert> <MiddleMouse>$/;"	m
<S-Insert>	runtime/gvimrc_example.vim	/^map! <S-Insert> <MiddleMouse>$/;"	m
<S-Up>	runtime/ftplugin/flexwiki.vim	/^  imap <buffer> <S-Up>     <C-o>gk$/;"	m
<SID>L	runtime/macros/less.vim	/^  noremap <SID>L L0:redraw<CR>:file<CR>$/;"	m
<SID>L	runtime/macros/less.vim	/^  noremap <SID>L Lg0:redraw<CR>:file<CR>$/;"	m
<Space>	runtime/macros/less.vim	/^noremap <script> <Space> :call <SID>NextPage()<CR><SID>L$/;"	m
<Space>	runtime/optwin.vim	/^noremap <silent> <buffer> <Space> :call <SID>Space()<CR>$/;"	m
<Tab>	runtime/ftplugin/cobol.vim	/^        inoremap <silent> <buffer> <Tab> <C-R>=<SID>Tab()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<Up>	runtime/evim.vim	/^inoremap <silent> <Up> <C-R>=pumvisible() ? "\\<lt>Up>" : "\\<lt>C-O>gk"<CR>$/;"	m
<Up>	runtime/ftplugin/flexwiki.vim	/^      imap <buffer> <Up>     <C-o>gk$/;"	m
<Up>	runtime/ftplugin/flexwiki.vim	/^  nmap <buffer> <Up>   gk$/;"	m
<Up>	runtime/ftplugin/flexwiki.vim	/^  vmap <buffer> <Up>   gk$/;"	m
<bs>	runtime/ftplugin/ada.vim	/^      inoremap <silent> <unique> <buffer> <bs> <C-R>=ada#Insert_Backspace ()<cr>$/;"	m
<c-]>	runtime/ftplugin/man.vim	/^    nnoremap <buffer> <c-]> :call <SID>PreGetPage(v:count)<CR>$/;"	m
<c-t>	runtime/ftplugin/man.vim	/^    nnoremap <buffer> <c-t> :call <SID>PopPage()<CR>$/;"	m
<char-166><char-201><char-161>	runtime/keymap/tamil_tscii.vim	/^no     <char-166><char-201><char-161>$/;"	m
<char-167><char-201><char-161>	runtime/keymap/tamil_tscii.vim	/^noo    <char-167><char-201><char-161>$/;"	m
=	runtime/macros/urm/urm.vim	/^map = 'kf,$/;"	m
>	runtime/ftplugin/cobol.vim	/^        nnoremap <silent> <buffer> > :set opfunc=<SID>IncreaseFunc<CR>g@$/;"	m
>	runtime/ftplugin/cobol.vim	/^    vnoremap <silent> <buffer> > :call CobolIndentBlock(v:count1)<CR>$/;"	m
>	runtime/macros/less.vim	/^map > G$/;"	m
>	runtime/macros/life/life.vim	/^map > 0 LWWWWWWWWWWWWWWWWWW,rj$/;"	m
>>	runtime/ftplugin/cobol.vim	/^    nnoremap <silent> <buffer> >> :call CobolIndentBlock(1)<CR>$/;"	m
?	runtime/macros/less.vim	/^  noremap <script> ? H0:call <SID>Backward()<CR>?$/;"	m
?	runtime/macros/less.vim	/^  noremap <script> ? Hg0:call <SID>Backward()<CR>?$/;"	m
A	runtime/macros/hanoi/hanoi.vim	/^map A "fyl$/;"	m
A	runtime/macros/maze/maze.c	/^char*M,A,Z,E=40,J[40],T[40];main(C){for(*J=A=scanf(M="%d",&C);$/;"	v
A	runtime/macros/maze/mazeansi.c	/^char*M,A,Z,E=40,J[80],T[3];main(C){for(M=J+E,*J=A=scanf("%d",&$/;"	v
A	runtime/macros/maze/mazeclean.c	/^char *M, A, Z, E = 40, line[80], T[3];$/;"	v
AARGLIST	src/structs.h	653;"	d
ABBREV	src/vim.h	692;"	d
ABBR_OFF	src/keymap.h	43;"	d
ABS	src/gui_at_fs.c	1068;"	d	file:
ABS	src/gui_at_fs.c	1070;"	d	file:
ACCESS_MASK	src/os_win32.c	/^typedef int ACCESS_MASK;$/;"	t	file:
ACTION_EXPAND	src/vim.h	852;"	d
ACTION_GOTO	src/vim.h	848;"	d
ACTION_SHOW	src/vim.h	847;"	d
ACTION_SHOW_ALL	src/vim.h	850;"	d
ACTION_SPLIT	src/vim.h	849;"	d
AChar	src/os_win32.c	578;"	d	file:
AChar	src/os_win32.c	580;"	d	file:
ADDPATH	src/testdir/test49.vim	/^    function ADDPATH(p)$/;"	f
ADD_ICON	src/gui_gtk.c	262;"	d	file:
ADD_ICON	src/gui_gtk.c	278;"	d	file:
ADD_NL	src/regexp.c	168;"	d	file:
ADJUSTINFO	src/vimtbar.h	/^} ADJUSTINFO;$/;"	t	typeref:struct:tagADJUSTINFO
ADVANCE_REGINPUT	src/regexp.c	3790;"	d	file:
AFT_CAPLONG	src/spell.c	4810;"	d	file:
AFT_CHAR	src/spell.c	4808;"	d	file:
AFT_LONG	src/spell.c	4809;"	d	file:
AFT_NUM	src/spell.c	4811;"	d	file:
AFX_COMMANDS_H__AC726717_2977_11D1_B2F3_006008040780__INCLUDED_	src/VisVim/Commands.h	5;"	d
AFX_DSADDIN_H__AC726715_2977_11D1_B2F3_006008040780__INCLUDED_	src/VisVim/DSAddIn.h	5;"	d
AFX_STDAFX_H__3389658B_AD83_11D3_9C1E_0090278BBD99__INCLUDED_	src/GvimExt/gvimext.h	15;"	d
AFX_STDAFX_H__AC72670E_2977_11D1_B2F3_006008040780__INCLUDED_	src/VisVim/StdAfx.h	7;"	d
AFX_VISVIM_H__AC72670B_2977_11D1_B2F3_006008040780__INCLUDED_	src/VisVim/VisVim.h	5;"	d
AH_KEY_LEN	src/spell.c	4828;"	d	file:
AH_KEY_LEN	src/spell.c	4830;"	d	file:
AKEYLEN	src/eval.c	7126;"	d	file:
ALEF	src/farsi.h	110;"	d
ALEF_	src/farsi.h	29;"	d
ALEF_A	src/farsi.h	109;"	d
ALEF_D_H	src/farsi.h	168;"	d
ALEF_U_H	src/farsi.h	166;"	d
ALEF_U_H_	src/farsi.h	28;"	d
ALIGN	src/Make_bc5.mak	/^ALIGN = 2$/;"	m
ALIGN	src/Make_bc5.mak	/^ALIGN = 4$/;"	m
ALIGNARG	src/Make_bc5.mak	/^ALIGNARG = -a$(ALIGN)$/;"	m
ALIGN_LONG	src/structs.h	349;"	d
ALIGN_MASK	src/structs.h	355;"	d
ALIGN_SIZE	src/structs.h	350;"	d
ALIGN_SIZE	src/structs.h	352;"	d
ALIST	src/structs.h	646;"	d
ALIST	src/structs.h	648;"	d
ALL_BUILTIN_TCAPS	src/feature.h	576;"	d
ALL_CFLAGS	src/Makefile	/^ALL_CFLAGS = $(PRE_DEFS) $(CFLAGS) $(PROFILE_CFLAGS) $(POST_DEFS)$/;"	m
ALL_GUI_PRO	src/Makefile	/^ALL_GUI_PRO  = gui.pro gui_gtk.pro gui_motif.pro gui_xmdlg.pro gui_athena.pro gui_gtk_x11.pro gui_x11.pro gui_w16.pro gui_w32.pro gui_photon.pro$/;"	m
ALL_GUI_SRC	src/Makefile	/^ALL_GUI_SRC  = gui.c gui_gtk.c gui_gtk_f.c gui_motif.c gui_xmdlg.c gui_xmebw.c gui_athena.c gui_gtk_x11.c gui_x11.c gui_at_sb.c gui_at_fs.c pty.c$/;"	m
ALL_LIBS	src/Makefile	/^ALL_LIBS = \\$/;"	m
ALL_LIB_DIRS	src/Makefile	/^ALL_LIB_DIRS = $(GUI_LIBS_DIR) $(X_LIBS_DIR)$/;"	m
ALL_SRC	src/Makefile	/^ALL_SRC = $(BASIC_SRC) $(ALL_GUI_SRC) $(EXTRA_SRC)$/;"	m
ALPHA	src/regexp.c	194;"	d	file:
ALT	src/os_win32.c	486;"	d	file:
ALT_GR	src/os_win32.c	487;"	d	file:
ALT_INPUT_LOCK_OFF	src/vim.h	2009;"	d
ALT_INPUT_LOCK_ON	src/vim.h	2010;"	d
ALT_X_INPUT	src/feature.h	1290;"	d
ALWAYS_USE_GUI	src/gui.h	71;"	d
AL_ADD	src/ex_cmds2.c	1723;"	d	file:
AL_DEL	src/ex_cmds2.c	1724;"	d	file:
AL_SET	src/ex_cmds2.c	1722;"	d	file:
ANCHOR_BUF_SIZE	src/os_amiga.c	1446;"	d	file:
ANCHOR_BUF_SIZE	src/os_amiga.c	1448;"	d	file:
ANCHOR_SIZE	src/os_amiga.c	1449;"	d	file:
ANY	src/regexp.c	170;"	d	file:
ANYBUT	src/regexp.c	172;"	d	file:
ANYOF	src/regexp.c	171;"	d	file:
APIENTRY	src/gui_w48.c	81;"	d	file:
APPDIR	src/Makefile	/^APPDIR = $(VIMNAME).app$/;"	m
APPENDBIN	src/vim.h	1457;"	d
APPENDBIN	src/vim.h	1461;"	d
APPVER	src/GvimExt/Makefile	/^APPVER=4.0$/;"	m
ARABIC_CHAR	src/arabic.h	258;"	d
ARCH	src/Make_cyg.mak	/^ARCH = i386$/;"	m
ARCH	src/Make_ming.mak	/^ARCH=i386$/;"	m
ARG	src/testdir/test49.vim	/^function! ARG(x, n)$/;"	f
ARGCOUNT	src/structs.h	655;"	d
ARGLIST	src/structs.h	651;"	d
ARGOPT	src/ex_cmds.h	52;"	d
ARGTYPE_EDIT	src/main.c	3540;"	d	file:
ARGTYPE_EDIT_WAIT	src/main.c	3541;"	d	file:
ARGTYPE_OTHER	src/main.c	3539;"	d	file:
ARGTYPE_SEND	src/main.c	3542;"	d	file:
ARG_BACKGROUND	src/gui_gtk_x11.c	283;"	d	file:
ARG_COMPAT_LONG	src/gui_gtk_x11.c	294;"	d	file:
ARG_FONT	src/gui_gtk_x11.c	279;"	d	file:
ARG_FOREGROUND	src/gui_gtk_x11.c	284;"	d	file:
ARG_FOR_GTK	src/gui_gtk_x11.c	293;"	d	file:
ARG_GEOMETRY	src/gui_gtk_x11.c	280;"	d	file:
ARG_HAS_VALUE	src/gui_gtk_x11.c	291;"	d	file:
ARG_ICONIC	src/gui_gtk_x11.c	285;"	d	file:
ARG_INDEX_MASK	src/gui_gtk_x11.c	290;"	d	file:
ARG_KEEP	src/gui_gtk_x11.c	295;"	d	file:
ARG_MENUFONT	src/gui_gtk_x11.c	289;"	d	file:
ARG_NEEDS_GUI	src/gui_gtk_x11.c	292;"	d	file:
ARG_NETBEANS	src/gui_gtk_x11.c	287;"	d	file:
ARG_NOREVERSE	src/gui_gtk_x11.c	282;"	d	file:
ARG_REVERSE	src/gui_gtk_x11.c	281;"	d	file:
ARG_ROLE	src/gui_gtk_x11.c	286;"	d	file:
ARG_XRM	src/gui_gtk_x11.c	288;"	d	file:
ARRAY_LENGTH	src/blowfish.c	18;"	d	file:
ARRAY_LENGTH	src/gui_photon.c	34;"	d	file:
ASCII_ISALNUM	src/macros.h	106;"	d
ASCII_ISALNUM	src/macros.h	111;"	d
ASCII_ISALPHA	src/macros.h	105;"	d
ASCII_ISALPHA	src/macros.h	110;"	d
ASCII_ISLOWER	src/macros.h	107;"	d
ASCII_ISLOWER	src/macros.h	112;"	d
ASCII_ISUPPER	src/macros.h	108;"	d
ASCII_ISUPPER	src/macros.h	113;"	d
ASKMORE	src/vim.h	690;"	d
ASMFLAGS	src/Make_ro.mak	/^ASMFLAGS   = -throwback -objasm -gcc$/;"	m
ASSEMBLY_ARCHITECTURE	src/Make_mvc.mak	/^ASSEMBLY_ARCHITECTURE = $(PROCESSOR_ARCHITECTURE)$/;"	m
ASSEMBLY_ARCHITECTURE	src/Make_mvc.mak	/^ASSEMBLY_ARCHITECTURE = x86$/;"	m
ASSEMBLY_ARCHITECTURE	src/Make_mvc.mak	/^ASSEMBLY_ARCHITECTURE=$(CPU)$/;"	m
ASSERT	src/nbdebug.h	17;"	d
ASSERT	src/nbdebug.h	56;"	d
ASSERT	src/os_win16.h	103;"	d
ASSERT	src/os_win16.h	106;"	d
ASSERT	src/os_win16.h	122;"	d
ASSERT	src/os_win32.h	152;"	d
ASSERT	src/os_win32.h	155;"	d
ASSERT	src/os_win32.h	172;"	d
ASSERT	src/workshop.h	22;"	d
ASSERT	src/wsdebug.h	17;"	d
ASSERT	src/wsdebug.h	57;"	d
ASSERT_NULL_OR_POINTER	src/os_win16.h	135;"	d
ASSERT_NULL_OR_POINTER	src/os_win32.h	186;"	d
ASSERT_POINTER	src/os_win16.h	132;"	d
ASSERT_POINTER	src/os_win32.h	183;"	d
ATC_FROM_TERM	src/term.c	3572;"	d	file:
ATHENA_BUNDLE	src/Makefile	/^ATHENA_BUNDLE	=$/;"	m
ATHENA_DEFS	src/Makefile	/^ATHENA_DEFS	= -DFEAT_GUI_ATHENA $(NARROW_PROTO)$/;"	m
ATHENA_INSTALL	src/Makefile	/^ATHENA_INSTALL  = install_normal install_gui_extra$/;"	m
ATHENA_IPATH	src/Makefile	/^ATHENA_IPATH	= $(GUI_INC_LOC)$/;"	m
ATHENA_LIBS1	src/Makefile	/^ATHENA_LIBS1	= $(XAW_LIB)$/;"	m
ATHENA_LIBS2	src/Makefile	/^ATHENA_LIBS2	= -lXt$/;"	m
ATHENA_LIBS_DIR	src/Makefile	/^ATHENA_LIBS_DIR = $(GUI_LIB_LOC)$/;"	m
ATHENA_MAN_TARGETS	src/Makefile	/^ATHENA_MAN_TARGETS = yes$/;"	m
ATHENA_OBJ	src/Makefile	/^ATHENA_OBJ	= objects\/gui.o objects\/gui_athena.o objects\/gui_x11.o \\$/;"	m
ATHENA_SRC	src/Makefile	/^ATHENA_SRC	= gui.c gui_athena.c gui_x11.c pty.c gui_beval.c \\$/;"	m
ATHENA_TARGETS	src/Makefile	/^ATHENA_TARGETS	= installglinks$/;"	m
ATHENA_TESTTARGET	src/Makefile	/^ATHENA_TESTTARGET = gui$/;"	m
ATTR_OFF	src/syntax.c	112;"	d	file:
AT_CURSOR	src/farsi.h	178;"	d
AT_MAX	src/gui_at_sb.c	217;"	d	file:
AT_MIN	src/gui_at_sb.c	216;"	d	file:
AUGROUP_ALL	src/fileio.c	83;"	d	file:
AUGROUP_DEFAULT	src/fileio.c	81;"	d	file:
AUGROUP_ERROR	src/fileio.c	82;"	d	file:
AUGROUP_NAME	src/fileio.c	7746;"	d	file:
AUTOLOAD_CHAR	src/eval.c	843;"	d	file:
AUTOMATA_CORRECT	src/hangulin.c	17;"	d	file:
AUTOMATA_CORRECT_NEW	src/hangulin.c	19;"	d	file:
AUTOMATA_ERROR	src/hangulin.c	20;"	d	file:
AUTOMATA_NEW	src/hangulin.c	16;"	d	file:
AUTOMATA_NULL	src/hangulin.c	21;"	d	file:
AUTOMATA_SPECIAL	src/hangulin.c	18;"	d	file:
AUTOSOURCE	src/Makefile	/^AUTOSOURCE = ..\/runtime\/autoload$/;"	m
AUTOSUBDIR	src/Makefile	/^AUTOSUBDIR = \/autoload$/;"	m
AUTOSUBLOC	src/Makefile	/^AUTOSUBLOC	= $(VIMRTLOC)$(AUTOSUBDIR)$/;"	m
AWK	runtime/doc/Makefile	/^AWK = awk$/;"	m
AWK	src/auto/config.mk	/^AWK		= gawk$/;"	m
AYN	src/farsi.h	131;"	d
AYN_	src/farsi.h	44;"	d
A_firstc_laa	src/arabic.c	/^A_firstc_laa(c, c1)$/;"	f	file:
A_firstc_laa	src/arabic.c	/^static int  A_firstc_laa __ARGS((int c1, int c));$/;"	p	file:	signature:(int c1, int c)
A_is_a	src/arabic.c	/^A_is_a(cur_c)$/;"	f	file:
A_is_a	src/arabic.c	/^static int  A_is_a __ARGS((int cur_c));$/;"	p	file:	signature:(int cur_c)
A_is_f	src/arabic.c	/^A_is_f(cur_c)$/;"	f	file:
A_is_f	src/arabic.c	/^static int  A_is_f __ARGS((int cur_c));$/;"	p	file:	signature:(int cur_c)
A_is_formb	src/arabic.c	/^A_is_formb(c)$/;"	f	file:
A_is_formb	src/arabic.c	/^static int  A_is_formb __ARGS((int c));$/;"	p	file:	signature:(int c)
A_is_harakat	src/arabic.c	/^A_is_harakat(c)$/;"	f	file:
A_is_harakat	src/arabic.c	/^static int  A_is_harakat __ARGS((int c));$/;"	p	file:	signature:(int c)
A_is_iso	src/arabic.c	/^A_is_iso(c)$/;"	f	file:
A_is_iso	src/arabic.c	/^static int  A_is_iso __ARGS((int c));$/;"	p	file:	signature:(int c)
A_is_ok	src/arabic.c	/^A_is_ok(c)$/;"	f	file:
A_is_ok	src/arabic.c	/^static int  A_is_ok __ARGS((int c));$/;"	p	file:	signature:(int c)
A_is_s	src/arabic.c	/^A_is_s(cur_c)$/;"	f	file:
A_is_s	src/arabic.c	/^static int  A_is_s __ARGS((int cur_c));$/;"	p	file:	signature:(int cur_c)
A_is_special	src/arabic.c	/^A_is_special(c)$/;"	f	file:
A_is_special	src/arabic.c	/^static int  A_is_special __ARGS((int c));$/;"	p	file:	signature:(int c)
A_is_valid	src/arabic.c	/^A_is_valid(c)$/;"	f	file:
A_is_valid	src/arabic.c	/^static int  A_is_valid __ARGS((int c));$/;"	p	file:	signature:(int c)
Abaqus_ToggleComment	runtime/ftplugin/abaqus.vim	/^function! <SID>Abaqus_ToggleComment() range$/;"	f
AbortProc	src/os_mswin.c	/^AbortProc(HDC hdcPrn, int iCode)$/;"	f	file:	signature:(HDC hdcPrn, int iCode)
Accents	runtime/syntax/tex.vim	/^   fun! s:Accents(chr,...)$/;"	f
Add	runtime/syntax/cucumber.vim	/^function! s:Add(name)$/;"	f
Add	src/if_cscope.h	/^typedef enum { Add, Find, Help, Kill, Reset, Show } csid_e;$/;"	e	enum:__anon87
AddCommand	src/VisVim/DSAddIn.cpp	/^bool CDSAddIn::AddCommand (IApplication* pApp, char* MethodName, char* CmdName,$/;"	f	class:CDSAddIn	signature:(IApplication* pApp, char* MethodName, char* CmdName, UINT StrResId, UINT GlyphIndex, VARIANT_BOOL bFirstTime)
AddCommand	src/VisVim/DSAddIn.h	/^	bool AddCommand (IApplication* pApp, char* MethodName, char* CmdName,$/;"	p	class:CDSAddIn	access:protected	signature:(IApplication* pApp, char* MethodName, char* CmdName, UINT StrResId, UINT GlyphIndex, VARIANT_BOOL bFirstTime)
AddEntry	runtime/ftplugin/debchangelog.vim	/^function AddEntry()$/;"	f
AddRef	src/GvimExt/gvimext.cpp	/^STDMETHODIMP_(ULONG) CShellExt::AddRef()$/;"	f	class:CShellExt	signature:()
AddRef	src/GvimExt/gvimext.cpp	/^STDMETHODIMP_(ULONG) CShellExtClassFactory::AddRef()$/;"	f	class:CShellExtClassFactory	signature:()
AddRef	src/GvimExt/gvimext.h	/^	STDMETHODIMP_(ULONG)	AddRef();$/;"	p	class:CShellExtClassFactory	access:public	signature:()
AddRef	src/GvimExt/gvimext.h	/^    STDMETHODIMP_(ULONG) AddRef();$/;"	p	class:CShellExt	access:public	signature:()
AddRef	src/if_ole.cpp	/^CVim::AddRef()$/;"	f	class:CVim	signature:()
AddRef	src/if_ole.cpp	/^CVimCF::AddRef()$/;"	f	class:CVimCF	signature:()
AddRef	src/if_ole.h	/^	ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )($/;"	m	struct:IVimVtbl	access:public
AllocBotShadowGC	src/gui_at_sb.c	/^AllocBotShadowGC(w)$/;"	f	file:
AllocBotShadowGC	src/gui_at_sb.c	/^static void AllocBotShadowGC __ARGS((Widget));$/;"	p	file:	signature:(Widget)
AllocTopShadowGC	src/gui_at_sb.c	/^AllocTopShadowGC(w)$/;"	f	file:
AllocTopShadowGC	src/gui_at_sb.c	/^static void AllocTopShadowGC __ARGS((Widget));$/;"	p	file:	signature:(Widget)
AntSyntaxScript	runtime/syntax/ant.vim	/^    fun AntSyntaxScript(tagname, synfilename)$/;"	f
AppendCharToRedobuff	src/getchar.c	/^AppendCharToRedobuff(c)$/;"	f
AppendNumberToRedobuff	src/getchar.c	/^AppendNumberToRedobuff(n)$/;"	f
AppendPropCarefully	runtime/tools/xcmdsrv_client.c	/^AppendPropCarefully(dpy, window, property, value, length)$/;"	f	file:
AppendPropCarefully	runtime/tools/xcmdsrv_client.c	/^static int	AppendPropCarefully __ARGS((Display *display,$/;"	p	file:	signature:(Display *display, Window window, Atom property, char *value, int length)
AppendPropCarefully	src/if_xcmdsrv.c	/^AppendPropCarefully(dpy, window, property, value, length)$/;"	f	file:
AppendPropCarefully	src/if_xcmdsrv.c	/^static int	AppendPropCarefully __ARGS((Display *display, Window window, Atom property, char_u *value, int length));$/;"	p	file:	signature:(Display *display, Window window, Atom property, char_u *value, int length)
AppendToRedobuff	src/getchar.c	/^AppendToRedobuff(s)$/;"	f
AppendToRedobuffLit	src/getchar.c	/^AppendToRedobuffLit(str, len)$/;"	f
ArglistW	src/os_win32.c	/^static LPWSTR	*ArglistW = NULL;$/;"	v	file:
ArpBase	src/os_amiga.c	/^struct ArpBase		*ArpBase = NULL;$/;"	v	typeref:struct:ArpBase
AutoCmd	src/fileio.c	/^typedef struct AutoCmd$/;"	s	file:
AutoCmd	src/fileio.c	/^} AutoCmd;$/;"	t	typeref:struct:AutoCmd	file:
AutoCmd::cmd	src/fileio.c	/^    char_u	    *cmd;		\/* The command to be executed (NULL$/;"	m	struct:AutoCmd	file:	access:public
AutoCmd::last	src/fileio.c	/^    char	    last;		\/* last command in list *\/$/;"	m	struct:AutoCmd	file:	access:public
AutoCmd::nested	src/fileio.c	/^    char	    nested;		\/* If autocommands nest here *\/$/;"	m	struct:AutoCmd	file:	access:public
AutoCmd::next	src/fileio.c	/^    struct AutoCmd  *next;		\/* Next AutoCmd in list *\/$/;"	m	struct:AutoCmd	typeref:struct:AutoCmd::AutoCmd	file:	access:public
AutoCmd::scriptID	src/fileio.c	/^    scid_T	    scriptID;		\/* script ID where defined *\/$/;"	m	struct:AutoCmd	file:	access:public
AutoPat	src/fileio.c	/^typedef struct AutoPat$/;"	s	file:
AutoPat	src/fileio.c	/^} AutoPat;$/;"	t	typeref:struct:AutoPat	file:
AutoPat::allow_dirs	src/fileio.c	/^    char	    allow_dirs;		\/* Pattern may match whole path *\/$/;"	m	struct:AutoPat	file:	access:public
AutoPat::buflocal_nr	src/fileio.c	/^    int		    buflocal_nr;	\/* !=0 for buffer-local AutoPat *\/$/;"	m	struct:AutoPat	file:	access:public
AutoPat::cmds	src/fileio.c	/^    AutoCmd	    *cmds;		\/* list of commands to do *\/$/;"	m	struct:AutoPat	file:	access:public
AutoPat::group	src/fileio.c	/^    int		    group;		\/* group ID *\/$/;"	m	struct:AutoPat	file:	access:public
AutoPat::last	src/fileio.c	/^    char	    last;		\/* last pattern for apply_autocmds() *\/$/;"	m	struct:AutoPat	file:	access:public
AutoPat::next	src/fileio.c	/^    struct AutoPat  *next;		\/* next AutoPat in AutoPat list *\/$/;"	m	struct:AutoPat	typeref:struct:AutoPat::AutoPat	file:	access:public
AutoPat::pat	src/fileio.c	/^    char_u	    *pat;		\/* pattern as typed (NULL when pattern$/;"	m	struct:AutoPat	file:	access:public
AutoPat::patlen	src/fileio.c	/^    int		    patlen;		\/* strlen() of pat *\/$/;"	m	struct:AutoPat	file:	access:public
AutoPat::reg_prog	src/fileio.c	/^    regprog_T	    *reg_prog;		\/* compiled regprog for pattern *\/$/;"	m	struct:AutoPat	file:	access:public
AutoPatCmd	src/fileio.c	/^typedef struct AutoPatCmd$/;"	s	file:
AutoPatCmd	src/fileio.c	/^} AutoPatCmd;$/;"	t	typeref:struct:AutoPatCmd	file:
AutoPatCmd::arg_bufnr	src/fileio.c	/^    int		arg_bufnr;	\/* initially equal to <abuf>, set to zero when$/;"	m	struct:AutoPatCmd	file:	access:public
AutoPatCmd::curpat	src/fileio.c	/^    AutoPat	*curpat;	\/* next AutoPat to examine *\/$/;"	m	struct:AutoPatCmd	file:	access:public
AutoPatCmd::event	src/fileio.c	/^    event_T	event;		\/* current event *\/$/;"	m	struct:AutoPatCmd	file:	access:public
AutoPatCmd::fname	src/fileio.c	/^    char_u	*fname;		\/* fname to match with *\/$/;"	m	struct:AutoPatCmd	file:	access:public
AutoPatCmd::group	src/fileio.c	/^    int		group;		\/* group being used *\/$/;"	m	struct:AutoPatCmd	file:	access:public
AutoPatCmd::next	src/fileio.c	/^    struct AutoPatCmd   *next;	\/* chain of active apc-s for auto-invalidation*\/$/;"	m	struct:AutoPatCmd	typeref:struct:AutoPatCmd::AutoPatCmd	file:	access:public
AutoPatCmd::nextcmd	src/fileio.c	/^    AutoCmd	*nextcmd;	\/* next AutoCmd to execute *\/$/;"	m	struct:AutoPatCmd	file:	access:public
AutoPatCmd::sfname	src/fileio.c	/^    char_u	*sfname;	\/* sfname to match with *\/$/;"	m	struct:AutoPatCmd	file:	access:public
AutoPatCmd::tail	src/fileio.c	/^    char_u	*tail;		\/* tail of fname *\/$/;"	m	struct:AutoPatCmd	file:	access:public
B	runtime/macros/hanoi/hanoi.vim	/^map B "hyl$/;"	m
B	runtime/macros/life/life.vim	/^map B ,%k>,\$$/;"	m
B	src/testdir/test49.vim	/^    function! B(jump)$/;"	f
B0_DIRTY	src/memline.c	183;"	d	file:
B0_FF_MASK	src/memline.c	200;"	d	file:
B0_FNAME_SIZE_CRYPT	src/memline.c	134;"	d	file:
B0_FNAME_SIZE_NOCRYPT	src/memline.c	133;"	d	file:
B0_FNAME_SIZE_ORG	src/memline.c	132;"	d	file:
B0_HAS_FENC	src/memline.c	208;"	d	file:
B0_HNAME_SIZE	src/memline.c	136;"	d	file:
B0_MAGIC_CHAR	src/memline.c	145;"	d	file:
B0_MAGIC_INT	src/memline.c	143;"	d	file:
B0_MAGIC_LONG	src/memline.c	142;"	d	file:
B0_MAGIC_SHORT	src/memline.c	144;"	d	file:
B0_SAME_DIR	src/memline.c	204;"	d	file:
B0_UNAME_SIZE	src/memline.c	135;"	d	file:
BACK	src/regexp.c	145;"	d	file:
BACKGROUND	src/gui_x11_pm.h	88;"	d
BACKPOS_INITIAL	src/regexp.c	3282;"	d	file:
BACKREF	src/regexp.c	208;"	d	file:
BACKSLASH_IN_FILENAME	src/os_dos.h	122;"	d
BACKSLASH_IN_FILENAME	src/os_os2_cfg.h	6;"	d
BACKSPACE_CHAR	src/edit.c	175;"	d	file:
BACKSPACE_LINE	src/edit.c	178;"	d	file:
BACKSPACE_WORD	src/edit.c	176;"	d	file:
BACKSPACE_WORD_NOT_SPACE	src/edit.c	177;"	d	file:
BACKWARD	src/vim.h	703;"	d
BACKWARD_FILE	src/vim.h	705;"	d
BAD_DROP	src/vim.h	2172;"	d
BAD_GETCWD	src/os_os2_cfg.h	103;"	d
BAD_KEEP	src/vim.h	2171;"	d
BAD_REPLACE	src/vim.h	2170;"	d
BANG	src/ex_cmds.h	34;"	d
BASENAMELEN	src/os_amiga.h	51;"	d
BASENAMELEN	src/os_mac.h	223;"	d
BASENAMELEN	src/os_msdos.h	84;"	d
BASENAMELEN	src/os_msdos.h	86;"	d
BASENAMELEN	src/os_riscos.h	27;"	d
BASENAMELEN	src/os_unix.h	185;"	d
BASENAMELEN	src/os_win16.h	83;"	d
BASENAMELEN	src/os_win32.h	116;"	d
BASIC_SRC	src/Makefile	/^BASIC_SRC = \\$/;"	m
BC	src/term.c	/^char *UP, *BC, PC;$/;"	v
BC	src/termlib.c	/^char	*UP = 0, *BC = 0;     \/* Pointers to UP and BC strings from database *\/$/;"	v
BCC	src/Make_w16.mak	/^BCC     = Bcc +BccW16.cfg$/;"	m
BCC	src/xxd/Make_bc5.mak	/^BCC = bcc32$/;"	m
BCO_ALWAYS	src/vim.h	1043;"	d
BCO_ENTER	src/vim.h	1042;"	d
BCO_NOHELP	src/vim.h	1044;"	d
BE	src/farsi.h	112;"	d
BEHIND	src/regexp.c	154;"	d	file:
BELL	src/ascii.h	108;"	d
BELL	src/ascii.h	25;"	d
BEOS_DR8	src/os_beos.h	20;"	d
BEOS_PR_OR_BETTER	src/os_beos.h	21;"	d
BEVAL_NETBEANS	src/globals.h	1205;"	d
BEVAL_TEXT_LEN	src/gui_w32.c	184;"	d	file:
BEVAL_WORKSHOP	src/globals.h	1206;"	d
BFA_DEL	src/vim.h	2186;"	d
BFA_KEEP_UNDO	src/vim.h	2188;"	d
BFA_WIPE	src/vim.h	2187;"	d
BF_BLOCK	src/blowfish.c	20;"	d	file:
BF_BLOCK_MASK	src/blowfish.c	21;"	d	file:
BF_CHECK_RO	src/vim.h	717;"	d
BF_DUMMY	src/vim.h	728;"	d
BF_NEVERLOADED	src/vim.h	720;"	d
BF_NEW	src/vim.h	725;"	d
BF_NEW_W	src/vim.h	726;"	d
BF_NOTEDITED	src/vim.h	722;"	d
BF_OFB_LEN	src/blowfish.c	22;"	d	file:
BF_OFB_UPDATE	src/blowfish.c	581;"	d	file:
BF_PRESERVED	src/vim.h	729;"	d
BF_RANBYTE	src/blowfish.c	587;"	d	file:
BF_READERR	src/vim.h	727;"	d
BF_RECOVERED	src/vim.h	716;"	d
BF_WRITE_MASK	src/vim.h	732;"	d
BHPOS	src/regexp.c	164;"	d	file:
BH_DIRTY	src/structs.h	405;"	d
BH_LOCKED	src/structs.h	406;"	d
BINARY_FILE_IO	src/os_mac.h	95;"	d
BINARY_FILE_IO	src/os_mint.h	13;"	d
BINARY_FILE_IO	src/os_msdos.h	15;"	d
BINARY_FILE_IO	src/os_os2_cfg.h	7;"	d
BINARY_FILE_IO	src/os_unix.h	42;"	d
BINARY_FILE_IO	src/os_vms_conf.h	6;"	d
BINARY_FILE_IO	src/os_win16.h	15;"	d
BINARY_FILE_IO	src/os_win32.h	24;"	d
BINDIR	src/auto/config.mk	/^BINDIR		= ${exec_prefix}\/bin$/;"	m
BINMOD	src/Makefile	/^BINMOD = 755$/;"	m
BIN_ASSIGN	src/xxd/xxd.c	161;"	d	file:
BIN_ASSIGN	src/xxd/xxd.c	167;"	d	file:
BIN_ASSIGN	src/xxd/xxd.c	174;"	d	file:
BIN_ASSIGN	src/xxd/xxd.c	181;"	d	file:
BIN_CREAT	src/xxd/xxd.c	160;"	d	file:
BIN_CREAT	src/xxd/xxd.c	166;"	d	file:
BIN_CREAT	src/xxd/xxd.c	173;"	d	file:
BIN_CREAT	src/xxd/xxd.c	180;"	d	file:
BIN_READ	src/xxd/xxd.c	158;"	d	file:
BIN_READ	src/xxd/xxd.c	164;"	d	file:
BIN_READ	src/xxd/xxd.c	171;"	d	file:
BIN_READ	src/xxd/xxd.c	178;"	d	file:
BIN_WRITE	src/xxd/xxd.c	159;"	d	file:
BIN_WRITE	src/xxd/xxd.c	165;"	d	file:
BIN_WRITE	src/xxd/xxd.c	172;"	d	file:
BIN_WRITE	src/xxd/xxd.c	179;"	d	file:
BIOSTICK	src/os_msdos.c	79;"	d	file:
BKC_AUTO	src/option.h	330;"	d
BKC_BREAKHARDLINK	src/option.h	333;"	d
BKC_BREAKSYMLINK	src/option.h	332;"	d
BKC_NO	src/option.h	331;"	d
BKC_YES	src/option.h	329;"	d
BLINK_NONE	src/gui_gtk_x11.c	673;"	d	file:
BLINK_NONE	src/gui_photon.c	/^    BLINK_NONE,$/;"	e	enum:__anon6	file:
BLINK_NONE	src/gui_w48.c	358;"	d	file:
BLINK_NONE	src/gui_x11.c	3211;"	d	file:
BLINK_OFF	src/gui_gtk_x11.c	674;"	d	file:
BLINK_OFF	src/gui_photon.c	/^    BLINK_OFF,$/;"	e	enum:__anon6	file:
BLINK_OFF	src/gui_w48.c	359;"	d	file:
BLINK_OFF	src/gui_x11.c	3212;"	d	file:
BLINK_ON	src/gui_gtk_x11.c	675;"	d	file:
BLINK_ON	src/gui_photon.c	/^    BLINK_ON$/;"	e	enum:__anon6	file:
BLINK_ON	src/gui_w48.c	360;"	d	file:
BLINK_ON	src/gui_x11.c	3213;"	d	file:
BLN_CURBUF	src/vim.h	920;"	d
BLN_DUMMY	src/vim.h	922;"	d
BLN_LISTED	src/vim.h	921;"	d
BLOCK0_ID0	src/memline.c	70;"	d	file:
BLOCK0_ID1	src/memline.c	71;"	d	file:
BLOCK0_ID1_C0	src/memline.c	72;"	d	file:
BLOCK0_ID1_C1	src/memline.c	73;"	d	file:
BL_FIX	src/vim.h	1033;"	d
BL_SOL	src/vim.h	1032;"	d
BL_WHITE	src/vim.h	1031;"	d
BMAdd	runtime/menu.vim	/^func! s:BMAdd()$/;"	f
BMFilename	runtime/menu.vim	/^func! s:BMFilename(name, num)$/;"	f
BMHash	runtime/menu.vim	/^func! s:BMHash(name)$/;"	f
BMHash2	runtime/menu.vim	/^func! s:BMHash2(name)$/;"	f
BMMunge	runtime/menu.vim	/^func! s:BMMunge(fname, bnum)$/;"	f
BMRemove	runtime/menu.vim	/^func! s:BMRemove()$/;"	f
BMShow	runtime/menu.vim	/^func! s:BMShow(...)$/;"	f
BMTruncName	runtime/menu.vim	/^func! s:BMTruncName(fname)$/;"	f
BOL	src/regexp.c	141;"	d	file:
BOOL	src/gui_w48.c	/^typedef int BOOL;$/;"	t	file:
BOOL	src/os_mswin.c	/^typedef int BOOL;$/;"	t	file:
BOOL	src/os_win16.c	/^typedef int BOOL;$/;"	t	file:
BOOL	src/os_win32.c	/^typedef int BOOL;$/;"	t	file:
BOR	src/GvimExt/Make_bc5.mak	/^BOR = c:\\bc5$/;"	m
BOR	src/Make_bc3.mak	/^BOR = E:\\BORLANDC$/;"	m
BOR	src/Make_bc5.mak	/^BOR = c:\\bc5$/;"	m
BOR	src/Make_w16.mak	/^BOR = D:\\BC5$/;"	m
BOR	src/xxd/Make_bc3.mak	/^BOR	= e:\\bc4$/;"	m
BOR	src/xxd/Make_bc5.mak	/^BOR = c:\\bc5$/;"	m
BOTTOM_SHADOW	src/gui_x11_pm.h	90;"	d
BOW	src/regexp.c	159;"	d	file:
BRACE_AT_END	src/misc1.c	6239;"	d	file:
BRACE_AT_START	src/misc1.c	6238;"	d	file:
BRACE_COMPLEX	src/regexp.c	217;"	d	file:
BRACE_IN_COL0	src/misc1.c	6237;"	d	file:
BRACE_LIMITS	src/regexp.c	161;"	d	file:
BRACE_SIMPLE	src/regexp.c	157;"	d	file:
BRANCH	src/regexp.c	143;"	d	file:
BRC	src/GvimExt/Make_bc5.mak	/^BRC	= $(BOR)\\bin\\brc32$/;"	m
BRC	src/Make_bc5.mak	/^BRC = $(BOR)\\BIN\\brc32$/;"	m
BRC	src/Make_bc5.mak	/^BRC =$/;"	m
BRC	src/Make_w16.mak	/^BRC     = Brc$/;"	m
BREAKCHECK_SKIP	src/misc1.c	8504;"	d	file:
BREAKCHECK_SKIP	src/misc1.c	8506;"	d	file:
BREAKCHECK_SKIP	src/os_mac.h	88;"	d
BREAKCHECK_SKIP	src/os_msdos.h	42;"	d
BREAKCHECK_SKIP	src/os_win32.h	78;"	d
BREAKP	src/ex_cmds2.c	414;"	d	file:
BROKEN_LOCALE	src/os_vms_conf.h	168;"	d
BROKEN_LOCALE	src/os_vms_conf.h	179;"	d
BROKEN_TOUPPER	src/os_os2_cfg.h	94;"	d
BROKEN_TOUPPER	src/os_win16.h	54;"	d
BROKEN_TOUPPER	src/os_win32.h	90;"	d
BROWSE_DIR	src/vim.h	1986;"	d
BROWSE_FILTER_ALL_FILES	src/vim.h	1975;"	d
BROWSE_FILTER_ALL_FILES	src/vim.h	1981;"	d
BROWSE_FILTER_DEFAULT	src/vim.h	1976;"	d
BROWSE_FILTER_DEFAULT	src/vim.h	1982;"	d
BROWSE_FILTER_MACROS	src/vim.h	1973;"	d
BROWSE_FILTER_MACROS	src/vim.h	1979;"	d
BROWSE_SAVE	src/vim.h	1985;"	d
BS	src/ascii.h	109;"	d
BS	src/ascii.h	26;"	d
BSC32	src/Make_dvc.mak	/^BSC32=bscmake.exe$/;"	m
BSC32_FLAGS	src/Make_dvc.mak	/^BSC32_FLAGS=\/nologo \/o"$(OUTDIR)\/Make_dvc.bsc"$/;"	m
BSC32_SBRS	src/Make_dvc.mak	/^BSC32_SBRS=$/;"	m
BSTR_UserFree	src/if_ole.h	/^void			  __RPC_USER  BSTR_UserFree(	 unsigned long __RPC_FAR *, BSTR __RPC_FAR * );$/;"	p	signature:( unsigned long __RPC_FAR *, BSTR __RPC_FAR * )
BSTR_UserMarshal	src/if_ole.h	/^unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * );$/;"	p	signature:( unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * )
BSTR_UserSize	src/if_ole.h	/^unsigned long		  __RPC_USER  BSTR_UserSize(	 unsigned long __RPC_FAR *, unsigned long	     , BSTR __RPC_FAR * );$/;"	p	signature:( unsigned long __RPC_FAR *, unsigned long , BSTR __RPC_FAR * )
BSTR_UserUnmarshal	src/if_ole.h	/^unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * );$/;"	p	signature:(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * )
BS_EOL	src/option.h	297;"	d
BS_INDENT	src/option.h	296;"	d
BS_START	src/option.h	298;"	d
BT_EXTRA_KEYS	src/term.c	75;"	d	file:
BUF2SIZE	src/os_amiga.c	299;"	d	file:
BUFFER_SIZE	src/if_python.c	687;"	d	file:
BUFFER_SIZE	src/if_python3.c	671;"	d	file:
BUFNAME	src/ex_cmds.h	50;"	d
BUFPATHLEN	src/gui_w48.c	3576;"	d	file:
BUFSIZE	src/GvimExt/gvimext.cpp	43;"	d	file:
BUFSIZE	src/dosinst.h	73;"	d
BUFSIZE	src/fileio.c	32;"	d	file:
BUFUNL	src/ex_cmds.h	51;"	d
BUTTON_MASK	src/gui_xmebw.c	481;"	d	file:
BV_AI	src/option.h	/^    BV_AI = 0$/;"	e	enum:__anon21
BV_AR	src/option.h	/^    , BV_AR$/;"	e	enum:__anon21
BV_BEXPR	src/option.h	/^    , BV_BEXPR$/;"	e	enum:__anon21
BV_BH	src/option.h	/^    , BV_BH$/;"	e	enum:__anon21
BV_BIN	src/option.h	/^    , BV_BIN$/;"	e	enum:__anon21
BV_BL	src/option.h	/^    , BV_BL$/;"	e	enum:__anon21
BV_BOMB	src/option.h	/^    , BV_BOMB$/;"	e	enum:__anon21
BV_BT	src/option.h	/^    , BV_BT$/;"	e	enum:__anon21
BV_CFU	src/option.h	/^    , BV_CFU$/;"	e	enum:__anon21
BV_CI	src/option.h	/^    , BV_CI$/;"	e	enum:__anon21
BV_CIN	src/option.h	/^    , BV_CIN$/;"	e	enum:__anon21
BV_CINK	src/option.h	/^    , BV_CINK$/;"	e	enum:__anon21
BV_CINO	src/option.h	/^    , BV_CINO$/;"	e	enum:__anon21
BV_CINW	src/option.h	/^    , BV_CINW$/;"	e	enum:__anon21
BV_CM	src/option.h	/^    , BV_CM$/;"	e	enum:__anon21
BV_CMS	src/option.h	/^    , BV_CMS$/;"	e	enum:__anon21
BV_COM	src/option.h	/^    , BV_COM$/;"	e	enum:__anon21
BV_COUNT	src/option.h	/^    , BV_COUNT	    \/* must be the last one *\/$/;"	e	enum:__anon21
BV_CPT	src/option.h	/^    , BV_CPT$/;"	e	enum:__anon21
BV_DEF	src/option.h	/^    , BV_DEF$/;"	e	enum:__anon21
BV_DICT	src/option.h	/^    , BV_DICT$/;"	e	enum:__anon21
BV_EFM	src/option.h	/^    , BV_EFM$/;"	e	enum:__anon21
BV_EOL	src/option.h	/^    , BV_EOL$/;"	e	enum:__anon21
BV_EP	src/option.h	/^    , BV_EP$/;"	e	enum:__anon21
BV_ET	src/option.h	/^    , BV_ET$/;"	e	enum:__anon21
BV_FENC	src/option.h	/^    , BV_FENC$/;"	e	enum:__anon21
BV_FEX	src/option.h	/^    , BV_FEX$/;"	e	enum:__anon21
BV_FF	src/option.h	/^    , BV_FF$/;"	e	enum:__anon21
BV_FLP	src/option.h	/^    , BV_FLP$/;"	e	enum:__anon21
BV_FO	src/option.h	/^    , BV_FO$/;"	e	enum:__anon21
BV_FT	src/option.h	/^    , BV_FT$/;"	e	enum:__anon21
BV_GP	src/option.h	/^    , BV_GP$/;"	e	enum:__anon21
BV_IMI	src/option.h	/^    , BV_IMI$/;"	e	enum:__anon21
BV_IMS	src/option.h	/^    , BV_IMS$/;"	e	enum:__anon21
BV_INC	src/option.h	/^    , BV_INC$/;"	e	enum:__anon21
BV_INDE	src/option.h	/^    , BV_INDE$/;"	e	enum:__anon21
BV_INDK	src/option.h	/^    , BV_INDK$/;"	e	enum:__anon21
BV_INEX	src/option.h	/^    , BV_INEX$/;"	e	enum:__anon21
BV_INF	src/option.h	/^    , BV_INF$/;"	e	enum:__anon21
BV_ISK	src/option.h	/^    , BV_ISK$/;"	e	enum:__anon21
BV_KEY	src/option.h	/^    , BV_KEY$/;"	e	enum:__anon21
BV_KMAP	src/option.h	/^    , BV_KMAP$/;"	e	enum:__anon21
BV_KP	src/option.h	/^    , BV_KP$/;"	e	enum:__anon21
BV_LISP	src/option.h	/^    , BV_LISP$/;"	e	enum:__anon21
BV_MA	src/option.h	/^    , BV_MA$/;"	e	enum:__anon21
BV_ML	src/option.h	/^    , BV_ML$/;"	e	enum:__anon21
BV_MOD	src/option.h	/^    , BV_MOD$/;"	e	enum:__anon21
BV_MP	src/option.h	/^    , BV_MP$/;"	e	enum:__anon21
BV_MPS	src/option.h	/^    , BV_MPS$/;"	e	enum:__anon21
BV_NF	src/option.h	/^    , BV_NF$/;"	e	enum:__anon21
BV_OFT	src/option.h	/^    , BV_OFT$/;"	e	enum:__anon21
BV_OFU	src/option.h	/^    , BV_OFU$/;"	e	enum:__anon21
BV_PATH	src/option.h	/^    , BV_PATH$/;"	e	enum:__anon21
BV_PI	src/option.h	/^    , BV_PI$/;"	e	enum:__anon21
BV_QE	src/option.h	/^    , BV_QE$/;"	e	enum:__anon21
BV_RO	src/option.h	/^    , BV_RO$/;"	e	enum:__anon21
BV_SI	src/option.h	/^    , BV_SI$/;"	e	enum:__anon21
BV_SMC	src/option.h	/^    , BV_SMC$/;"	e	enum:__anon21
BV_SN	src/option.h	/^    , BV_SN$/;"	e	enum:__anon21
BV_SPC	src/option.h	/^    , BV_SPC$/;"	e	enum:__anon21
BV_SPF	src/option.h	/^    , BV_SPF$/;"	e	enum:__anon21
BV_SPL	src/option.h	/^    , BV_SPL$/;"	e	enum:__anon21
BV_STS	src/option.h	/^    , BV_STS$/;"	e	enum:__anon21
BV_SUA	src/option.h	/^    , BV_SUA$/;"	e	enum:__anon21
BV_SW	src/option.h	/^    , BV_SW$/;"	e	enum:__anon21
BV_SWF	src/option.h	/^    , BV_SWF$/;"	e	enum:__anon21
BV_SYN	src/option.h	/^    , BV_SYN$/;"	e	enum:__anon21
BV_TAGS	src/option.h	/^    , BV_TAGS$/;"	e	enum:__anon21
BV_TS	src/option.h	/^    , BV_TS$/;"	e	enum:__anon21
BV_TSR	src/option.h	/^    , BV_TSR$/;"	e	enum:__anon21
BV_TW	src/option.h	/^    , BV_TW$/;"	e	enum:__anon21
BV_TX	src/option.h	/^    , BV_TX$/;"	e	enum:__anon21
BV_UDF	src/option.h	/^    , BV_UDF$/;"	e	enum:__anon21
BV_WM	src/option.h	/^    , BV_WM$/;"	e	enum:__anon21
BYTE	src/gui_w48.c	/^typedef int BYTE;$/;"	t	file:
BY_FLAGS	src/spell.c	383;"	d	file:
BY_FLAGS2	src/spell.c	385;"	d	file:
BY_INDEX	src/spell.c	382;"	d	file:
BY_NOFLAGS	src/spell.c	380;"	d	file:
BY_SPECIAL	src/spell.c	387;"	d	file:
B_IMODE_IM	src/structs.h	1411;"	d
B_IMODE_LAST	src/structs.h	1409;"	d
B_IMODE_LAST	src/structs.h	1412;"	d
B_IMODE_LMAP	src/structs.h	1407;"	d
B_IMODE_NONE	src/structs.h	1406;"	d
B_IMODE_USE_INSERT	src/structs.h	1405;"	d
B_SPELL	src/structs.h	1171;"	d
B_SPELL	src/structs.h	1173;"	d
Backward	runtime/macros/less.vim	/^fun! s:Backward()$/;"	f
BalloonEval	src/gui_beval.h	/^} BalloonEval;$/;"	t	typeref:struct:BalloonEvalStruct
BalloonEval	src/proto.h	204;"	d
BalloonEvalStruct	src/gui_beval.h	/^typedef struct BalloonEvalStruct$/;"	s
BalloonEvalStruct::balloonLabel	src/gui_beval.h	/^    GtkWidget		*balloonLabel;$/;"	m	struct:BalloonEvalStruct	access:public
BalloonEvalStruct::balloonShell	src/gui_beval.h	/^    GtkWidget		*balloonShell;$/;"	m	struct:BalloonEvalStruct	access:public
BalloonEvalStruct::clientData	src/gui_beval.h	/^    void		*clientData;	\/* For callback *\/$/;"	m	struct:BalloonEvalStruct	access:public
BalloonEvalStruct::msg	src/gui_beval.h	/^    char_u		*msg;$/;"	m	struct:BalloonEvalStruct	access:public
BalloonEvalStruct::msgCB	src/gui_beval.h	/^    void		(*msgCB)__ARGS((struct BalloonEvalStruct *, int));$/;"	m	struct:BalloonEvalStruct	access:public
BalloonEvalStruct::screen_height	src/gui_beval.h	/^    Dimension		screen_height;	\/* screen height in pixels *\/$/;"	m	struct:BalloonEvalStruct	access:public
BalloonEvalStruct::screen_width	src/gui_beval.h	/^    Dimension		screen_width;	\/* screen width in pixels *\/$/;"	m	struct:BalloonEvalStruct	access:public
BalloonEvalStruct::showState	src/gui_beval.h	/^    BeState		showState;	\/* tells us whats currently going on *\/$/;"	m	struct:BalloonEvalStruct	access:public
BalloonEvalStruct::state	src/gui_beval.h	/^    unsigned int	state;		\/* Button\/Modifier key state *\/$/;"	m	struct:BalloonEvalStruct	access:public
BalloonEvalStruct::target	src/gui_beval.h	/^    GtkWidget		*target;	\/* widget we are monitoring *\/$/;"	m	struct:BalloonEvalStruct	access:public
BalloonEvalStruct::timerID	src/gui_beval.h	/^    unsigned int	timerID;	\/* timer for run *\/$/;"	m	struct:BalloonEvalStruct	access:public
BalloonEvalStruct::ts	src/gui_beval.h	/^    int			ts;		\/* tabstop setting for this buffer *\/$/;"	m	struct:BalloonEvalStruct	access:public
BalloonEvalStruct::x	src/gui_beval.h	/^    int			x;$/;"	m	struct:BalloonEvalStruct	access:public
BalloonEvalStruct::y	src/gui_beval.h	/^    int			y;$/;"	m	struct:BalloonEvalStruct	access:public
Bar	src/testdir/test49.vim	/^function! Bar()$/;"	f
BasePath	runtime/tools/ccfilter.c	/^char	       BasePath[1024];$/;"	v
BeState	src/gui_beval.h	/^} BeState;$/;"	t	typeref:enum:__anon23
BeforeApplicationShutDown	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::BeforeApplicationShutDown()$/;"	f	class:CCommands::XApplicationEvents	signature:()
BeforeApplicationShutDown	src/VisVim/Commands.h	/^		STDMETHOD (BeforeApplicationShutDown) (THIS);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS)
BeforeBuildStart	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::BeforeBuildStart()$/;"	f	class:CCommands::XApplicationEvents	signature:()
BeforeBuildStart	src/VisVim/Commands.h	/^		STDMETHOD (BeforeBuildStart) (THIS);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS)
BeforeDocumentClose	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::BeforeDocumentClose(IDispatch * theDocument)$/;"	f	class:CCommands::XApplicationEvents	signature:(IDispatch * theDocument)
BeforeDocumentClose	src/VisVim/Commands.h	/^		STDMETHOD (BeforeDocumentClose) (THIS_ IDispatch * theDocument);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS_ IDispatch * theDocument)
BevalTimerId	src/gui_w32.c	/^static UINT_PTR	    BevalTimerId = 0;$/;"	v	file:
BevalTimerProc	src/gui_w32.c	/^BevalTimerProc(hwnd, uMsg, idEvent, dwTime)$/;"	f	file:
BevalTimerProc	src/gui_w32.c	/^static VOID CALLBACK BevalTimerProc __ARGS((HWND hwnd, UINT uMsg, UINT_PTR idEvent, DWORD dwTime));$/;"	p	file:	signature:(HWND hwnd, UINT uMsg, UINT_PTR idEvent, DWORD dwTime)
BinOptionG	runtime/optwin.vim	/^fun! <SID>BinOptionG(name, val)$/;"	f
BinOptionL	runtime/optwin.vim	/^fun! <SID>BinOptionL(name)$/;"	f
BindzoneCheck	runtime/filetype.vim	/^func! s:BindzoneCheck(default)$/;"	f
Block_pattern	runtime/ftplugin/ocaml.vim	/^    function! s:Block_pattern(lin1,lin2,col1,col2)$/;"	f
Blue	src/gui_mac.c	183;"	d	file:
BorderHighlight	src/gui_xmebw.c	/^BorderHighlight(Widget w)$/;"	f	file:	signature:(Widget w)
BorderHighlight	src/gui_xmebw.c	/^static void BorderHighlight(Widget);$/;"	p	file:
BorderUnhighlight	src/gui_xmebw.c	/^BorderUnhighlight(Widget w)$/;"	f	file:	signature:(Widget w)
BorderUnhighlight	src/gui_xmebw.c	/^static void BorderUnhighlight(Widget);$/;"	p	file:
BreakpointHit	src/VisVim/Commands.cpp	/^HRESULT CCommands::XDebuggerEvents::BreakpointHit(IDispatch * pBreakpoint)$/;"	f	class:CCommands::XDebuggerEvents	signature:(IDispatch * pBreakpoint)
BreakpointHit	src/VisVim/Commands.h	/^		STDMETHOD (BreakpointHit) (THIS_ IDispatch * pBreakpoint);$/;"	p	class:CCommands::XDebuggerEvents	access:public	signature:(THIS_ IDispatch * pBreakpoint)
BrowserMaps	runtime/autoload/netrw.vim	/^fun! s:BrowserMaps(islocal)$/;"	f
BufListAsSeq	src/if_python.c	/^static PySequenceMethods BufListAsSeq = {$/;"	v	file:
BufListAsSeq	src/if_python3.c	/^static PySequenceMethods BufListAsSeq = {$/;"	v	file:
BufListItem	src/if_py_both.h	/^BufListItem(PyObject *self UNUSED, PyInt n)$/;"	f	signature:(PyObject *self UNUSED, PyInt n)
BufListLength	src/if_py_both.h	/^BufListLength(PyObject *self UNUSED)$/;"	f	signature:(PyObject *self UNUSED)
BufListObject	src/if_python.c	/^} BufListObject;$/;"	t	typeref:struct:__anon94	file:
BufListObject	src/if_python3.c	/^} BufListObject;$/;"	t	typeref:struct:__anon108	file:
BufListType	src/if_python.c	/^static PyTypeObject BufListType = {$/;"	v	file:
BufListType	src/if_python3.c	/^static PyTypeObject BufListType;$/;"	v	file:
Buffer	src/os_win32.c	/^    PCHAR_INFO			Buffer;$/;"	m	struct:ConsoleBufferStruct	file:	access:public
BufferAppend	src/if_py_both.h	/^BufferAppend(PyObject *self, PyObject *args)$/;"	f	signature:(PyObject *self, PyObject *args)
BufferAsItem	src/if_python3.c	/^BufferAsItem(PyObject *self, Py_ssize_t n, PyObject *val)$/;"	f	file:	signature:(PyObject *self, Py_ssize_t n, PyObject *val)
BufferAsItem	src/if_python3.c	/^static Py_ssize_t BufferAsItem(PyObject *, Py_ssize_t, PyObject *);$/;"	p	file:	signature:(PyObject *, Py_ssize_t, PyObject *)
BufferAsMapping	src/if_python3.c	/^PyMappingMethods BufferAsMapping = {$/;"	v
BufferAsSeq	src/if_python.c	/^static PySequenceMethods BufferAsSeq = {$/;"	v	file:
BufferAsSeq	src/if_python3.c	/^static PySequenceMethods BufferAsSeq = {$/;"	v	file:
BufferAssItem	src/if_python.c	/^BufferAssItem(PyObject *self, PyInt n, PyObject *val)$/;"	f	file:	signature:(PyObject *self, PyInt n, PyObject *val)
BufferAssItem	src/if_python.c	/^static PyInt BufferAssItem(PyObject *, PyInt, PyObject *);$/;"	p	file:	signature:(PyObject *, PyInt, PyObject *)
BufferAssSlice	src/if_python.c	/^BufferAssSlice(PyObject *self, PyInt lo, PyInt hi, PyObject *val)$/;"	f	file:	signature:(PyObject *self, PyInt lo, PyInt hi, PyObject *val)
BufferAssSlice	src/if_python.c	/^static PyInt BufferAssSlice(PyObject *, PyInt, PyInt, PyObject *);$/;"	p	file:	signature:(PyObject *, PyInt, PyInt, PyObject *)
BufferDestructor	src/if_python.c	/^BufferDestructor(PyObject *self)$/;"	f	file:	signature:(PyObject *self)
BufferDestructor	src/if_python.c	/^static void BufferDestructor(PyObject *);$/;"	p	file:	signature:(PyObject *)
BufferDestructor	src/if_python3.c	/^BufferDestructor(PyObject *self)$/;"	f	file:	signature:(PyObject *self)
BufferGetattr	src/if_python.c	/^BufferGetattr(PyObject *self, char *name)$/;"	f	file:	signature:(PyObject *self, char *name)
BufferGetattr	src/if_python.c	/^static PyObject *BufferGetattr(PyObject *, char *);$/;"	p	file:	signature:(PyObject *, char *)
BufferGetattro	src/if_python3.c	/^BufferGetattro(PyObject *self, PyObject*nameobj)$/;"	f	file:	signature:(PyObject *self, PyObject*nameobj)
BufferItem	src/if_python.c	/^BufferItem(PyObject *self, PyInt n)$/;"	f	file:	signature:(PyObject *self, PyInt n)
BufferItem	src/if_python.c	/^static PyObject *BufferItem(PyObject *, PyInt);$/;"	p	file:	signature:(PyObject *, PyInt)
BufferItem	src/if_python3.c	/^BufferItem(PyObject *self, Py_ssize_t n)$/;"	f	file:	signature:(PyObject *self, Py_ssize_t n)
BufferItem	src/if_python3.c	/^static PyObject *BufferItem(PyObject *, Py_ssize_t);$/;"	p	file:	signature:(PyObject *, Py_ssize_t)
BufferLength	src/if_python.c	/^BufferLength(PyObject *self)$/;"	f	file:	signature:(PyObject *self)
BufferLength	src/if_python.c	/^static PyInt BufferLength(PyObject *);$/;"	p	file:	signature:(PyObject *)
BufferLength	src/if_python3.c	/^BufferLength(PyObject *self)$/;"	f	file:	signature:(PyObject *self)
BufferLength	src/if_python3.c	/^static Py_ssize_t BufferLength(PyObject *);$/;"	p	file:	signature:(PyObject *)
BufferMark	src/if_py_both.h	/^BufferMark(PyObject *self, PyObject *args)$/;"	f	signature:(PyObject *self, PyObject *args)
BufferMethods	src/if_py_both.h	/^static struct PyMethodDef BufferMethods[] = {$/;"	v	typeref:struct:PyMethodDef
BufferNew	src/if_python.c	/^BufferNew(buf_T *buf)$/;"	f	file:	signature:(buf_T *buf)
BufferNew	src/if_python.c	/^static PyObject *BufferNew (buf_T *);$/;"	p	file:	signature:(buf_T *)
BufferNew	src/if_python3.c	/^BufferNew(buf_T *buf)$/;"	f	file:	signature:(buf_T *buf)
BufferNew	src/if_python3.c	/^static PyObject *BufferNew (buf_T *);$/;"	p	file:	signature:(buf_T *)
BufferObject	src/if_py_both.h	/^BufferObject;$/;"	t	typeref:struct:__anon11
BufferRange	src/if_py_both.h	/^BufferRange(PyObject *self, PyObject *args)$/;"	f	signature:(PyObject *self, PyObject *args)
BufferRepr	src/if_python.c	/^BufferRepr(PyObject *self)$/;"	f	file:	signature:(PyObject *self)
BufferRepr	src/if_python.c	/^static PyObject *BufferRepr(PyObject *);$/;"	p	file:	signature:(PyObject *)
BufferRepr	src/if_python3.c	/^BufferRepr(PyObject *self)$/;"	f	file:	signature:(PyObject *self)
BufferSize	src/os_win32.c	/^    COORD			BufferSize;$/;"	m	struct:ConsoleBufferStruct	file:	access:public
BufferSlice	src/if_python.c	/^BufferSlice(PyObject *self, PyInt lo, PyInt hi)$/;"	f	file:	signature:(PyObject *self, PyInt lo, PyInt hi)
BufferSlice	src/if_python.c	/^static PyObject *BufferSlice(PyObject *, PyInt, PyInt);$/;"	p	file:	signature:(PyObject *, PyInt, PyInt)
BufferSlice	src/if_python3.c	/^BufferSlice(PyObject *self, Py_ssize_t lo, Py_ssize_t hi)$/;"	f	file:	signature:(PyObject *self, Py_ssize_t lo, Py_ssize_t hi)
BufferSubscript	src/if_python3.c	/^BufferSubscript(PyObject *self, PyObject* idx)$/;"	f	file:	signature:(PyObject *self, PyObject* idx)
BufferSubscript	src/if_python3.c	/^static PyObject* BufferSubscript(PyObject *self, PyObject* idx);$/;"	p	file:	signature:(PyObject *self, PyObject* idx)
BufferType	src/if_python.c	/^static PyTypeObject BufferType = {$/;"	v	file:
BufferType	src/if_python3.c	/^static PyTypeObject BufferType;$/;"	v	file:
BufferType_Check	src/if_python.c	798;"	d	file:
BufferType_Check	src/if_python3.c	804;"	d	file:
BuildCaseTable	runtime/tools/unicode.vim	/^func! BuildCaseTable(name, index)$/;"	f
BuildCombiningTable	runtime/tools/unicode.vim	/^func! BuildCombiningTable()$/;"	f
BuildFinish	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::BuildFinish(long nNumErrors, long nNumWarnings)$/;"	f	class:CCommands::XApplicationEvents	signature:(long nNumErrors, long nNumWarnings)
BuildFinish	src/VisVim/Commands.h	/^		STDMETHOD (BuildFinish) (THIS_ long nNumErrors, long nNumWarnings);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS_ long nNumErrors, long nNumWarnings)
BuildFoldTable	runtime/tools/unicode.vim	/^func! BuildFoldTable()$/;"	f
BuildWidthTable	runtime/tools/unicode.vim	/^func! BuildWidthTable(pattern, tableName)$/;"	f
Builtin	runtime/syntax/reva.vim	/^com! -nargs=+ Builtin syn keyword revaBuiltin <args>$/;"	c
Builtins.cd	runtime/macros/shellmenu.vim	/^imenu Builtins.cd cd$/;"	m
Builtins.echo	runtime/macros/shellmenu.vim	/^imenu Builtins.echo echo$/;"	m
Builtins.eval	runtime/macros/shellmenu.vim	/^imenu Builtins.eval eval$/;"	m
Builtins.exec	runtime/macros/shellmenu.vim	/^imenu Builtins.exec exec$/;"	m
Builtins.export	runtime/macros/shellmenu.vim	/^imenu Builtins.export export$/;"	m
Builtins.getopts	runtime/macros/shellmenu.vim	/^imenu Builtins.getopts getopts$/;"	m
Builtins.hash	runtime/macros/shellmenu.vim	/^imenu Builtins.hash hash$/;"	m
Builtins.newgrp	runtime/macros/shellmenu.vim	/^imenu Builtins.newgrp newgrp$/;"	m
Builtins.pwd	runtime/macros/shellmenu.vim	/^imenu Builtins.pwd pwd$/;"	m
Builtins.read	runtime/macros/shellmenu.vim	/^imenu Builtins.read read$/;"	m
Builtins.readonly	runtime/macros/shellmenu.vim	/^imenu Builtins.readonly readonly$/;"	m
Builtins.return	runtime/macros/shellmenu.vim	/^imenu Builtins.return return$/;"	m
Builtins.times	runtime/macros/shellmenu.vim	/^imenu Builtins.times times$/;"	m
Builtins.type	runtime/macros/shellmenu.vim	/^imenu Builtins.type type$/;"	m
Builtins.umask	runtime/macros/shellmenu.vim	/^imenu Builtins.umask umask$/;"	m
Builtins.wait	runtime/macros/shellmenu.vim	/^imenu Builtins.wait wait$/;"	m
C	runtime/macros/hanoi/hanoi.vim	/^map C "fp$/;"	m
C	runtime/macros/life/life.vim	/^map C T>>>>>>>>B&$/;"	m
C	src/testdir/test49.vim	/^    function! C(jump)$/;"	f
C	src/testdir/test49.vim	/^function! C()$/;"	f
C2PascalString	src/gui_mac.c	/^C2PascalString(char_u *CString, Str255 *PascalString)$/;"	f	signature:(char_u *CString, Str255 *PascalString)
C2Pascal_save	src/gui_mac.c	/^C2Pascal_save(char_u *Cstring)$/;"	f	signature:(char_u *Cstring)
C2Pascal_save_and_remove_backslash	src/gui_mac.c	/^C2Pascal_save_and_remove_backslash(char_u *Cstring)$/;"	f	signature:(char_u *Cstring)
CALL	src/testdir/test49.vim	/^    com! -nargs=1 CALL$/;"	c
CALLBACK	src/gui_w48.c	82;"	d	file:
CALLBACK	src/os_mswin.c	/^typedef int CALLBACK;$/;"	t	file:
CAR	src/ascii.h	114;"	d
CAR	src/ascii.h	31;"	d
CARBONGUI_BUNDLE	src/Makefile	/^CARBONGUI_BUNDLE = gui_bundle$/;"	m
CARBONGUI_DEFS	src/Makefile	/^CARBONGUI_DEFS	= -DFEAT_GUI_MAC -fno-common -fpascal-strings \\$/;"	m
CARBONGUI_INSTALL	src/Makefile	/^CARBONGUI_INSTALL = install_macosx$/;"	m
CARBONGUI_IPATH	src/Makefile	/^CARBONGUI_IPATH	= -I. -Iproto$/;"	m
CARBONGUI_LIBS1	src/Makefile	/^CARBONGUI_LIBS1	= -framework Carbon$/;"	m
CARBONGUI_LIBS2	src/Makefile	/^CARBONGUI_LIBS2	=$/;"	m
CARBONGUI_LIBS_DIR	src/Makefile	/^CARBONGUI_LIBS_DIR =$/;"	m
CARBONGUI_MAN_TARGETS	src/Makefile	/^CARBONGUI_MAN_TARGETS =$/;"	m
CARBONGUI_OBJ	src/Makefile	/^CARBONGUI_OBJ	= objects\/gui.o objects\/gui_mac.o objects\/pty.o$/;"	m
CARBONGUI_SRC	src/Makefile	/^CARBONGUI_SRC	= gui.c gui_mac.c$/;"	m
CARBONGUI_TARGETS	src/Makefile	/^CARBONGUI_TARGETS =$/;"	m
CARBONGUI_TESTARG	src/Makefile	/^CARBONGUI_TESTARG = VIMPROG=..\/$(APPDIR)\/Contents\/MacOS\/$(VIMTARGET)$/;"	m
CARBONGUI_TESTTARGET	src/Makefile	/^CARBONGUI_TESTTARGET = gui$/;"	m
CARDINAL	src/gui_x11.c	1269;"	d	file:
CARDINAL	src/gui_x11.c	1272;"	d	file:
CARDINAL	src/gui_x11.c	1274;"	d	file:
CASE_INSENSITIVE_FILENAME	src/os_amiga.h	13;"	d
CASE_INSENSITIVE_FILENAME	src/os_dos.h	120;"	d
CASE_INSENSITIVE_FILENAME	src/os_mac.h	86;"	d
CASE_INSENSITIVE_FILENAME	src/os_os2_cfg.h	4;"	d
CASE_INSENSITIVE_FILENAME	src/os_riscos.h	18;"	d
CASE_INSENSITIVE_FILENAME	src/os_unix.h	44;"	d
CASE_INSENSITIVE_FILENAME	src/os_vms_conf.h	3;"	d
CASE_SCODE	src/VisVim/OleAut.cpp	407;"	d	file:
CA_COMMAND_BUSY	src/structs.h	2193;"	d
CA_NO_ADJ_OP_END	src/structs.h	2194;"	d
CBUFLEN	src/misc1.c	3083;"	d	file:
CC	src/GvimExt/Make_bc5.mak	/^CC	= $(BOR)\\bin\\Bcc32$/;"	m
CC	src/Make_bc3.mak	/^CC = $(BOR)\\bin\\bcc.exe +VIM.CFG$/;"	m
CC	src/Make_bc5.mak	/^CC   = $(BOR)\\BIN\\Bcc$/;"	m
CC	src/Make_bc5.mak	/^CC   = $(BOR)\\BIN\\Bcc32$/;"	m
CC	src/Make_cyg.mak	/^CC = gcc$/;"	m
CC	src/Make_dice.mak	/^CC = dcc$/;"	m
CC	src/Make_djg.mak	/^CC = gcc$/;"	m
CC	src/Make_manx.mak	/^CC = cc$/;"	m
CC	src/Make_ming.mak	/^CC := $(CROSS_COMPILE)gcc$/;"	m
CC	src/Make_mint.mak	/^CC = gcc -mint$/;"	m
CC	src/Make_morph.mak	/^CC =		gcc$/;"	m
CC	src/Make_os2.mak	/^CC = gcc$/;"	m
CC	src/Make_ro.mak	/^CC         = $(GCC) $(CFLAGS) -O2$/;"	m
CC	src/Make_sas.mak	/^CC	= sc$/;"	m
CC	src/Makefile	/^	CC="$(CC) $(OSDEF_CFLAGS)" srcdir=$(srcdir) sh $(srcdir)\/osdef.sh$/;"	m
CC	src/Makefile	/^	cd xxd; CC="$(CC)" CFLAGS="$(CPPFLAGS) $(CFLAGS)" \\$/;"	m
CC	src/Makefile	/^CC=$/;"	m
CC	src/auto/config.mk	/^CC		= gcc$/;"	m
CC	src/tee/Makefile	/^CC=gcc$/;"	m
CC	src/xxd/Make_bc3.mak	/^CC	= $(BOR)\\bin\\bcc$/;"	m
CC	src/xxd/Make_cyg.mak	/^CC = gcc$/;"	m
CC	src/xxd/Make_os2.mak	/^CC=gcc$/;"	m
CC1	src/Make_bc5.mak	/^CC1 = -c$/;"	m
CC2	src/Make_bc5.mak	/^CC2 = -o$/;"	m
CCARG	src/Make_bc5.mak	/^CCARG = +$(OBJDIR)\\bcc.cfg$/;"	m
CCC	src/Makefile	/^CCC = $(CC) -c -I$(srcdir) $(ALL_CFLAGS)$/;"	m
CCM_SETUNICODEFORMAT	src/gui_w48.c	2456;"	d	file:
CCNOSYM	src/Make_manx.mak	/^CCNOSYM = $(CC) $(CFLAGS) -o$/;"	m
CCSYM	src/Make_manx.mak	/^CCSYM = $(CC) $(CFLAGS) -hi$(SYMS) -o$/;"	m
CClink	src/Makefile	/^CClink = $(CC)$/;"	m
CCommands	src/VisVim/Commands.cpp	/^CCommands::CCommands()$/;"	f	class:CCommands	signature:()
CCommands	src/VisVim/Commands.h	/^	CCommands ();$/;"	p	class:CCommands	access:public	signature:()
CCommands	src/VisVim/Commands.h	/^class CCommands :$/;"	c	inherits:CComDualImpl,CComObjectRoot,CComCoClass
CCommands::CCommands	src/VisVim/Commands.cpp	/^CCommands::CCommands()$/;"	f	class:CCommands	signature:()
CCommands::CCommands	src/VisVim/Commands.h	/^	CCommands ();$/;"	p	class:CCommands	access:public	signature:()
CCommands::GetApplicationObject	src/VisVim/Commands.h	/^	IApplication *GetApplicationObject ()$/;"	f	class:CCommands	access:public	signature:()
CCommands::SetApplicationObject	src/VisVim/Commands.cpp	/^void CCommands::SetApplicationObject(IApplication * pApplication)$/;"	f	class:CCommands	signature:(IApplication * pApplication)
CCommands::SetApplicationObject	src/VisVim/Commands.h	/^	void SetApplicationObject (IApplication * m_pApplication);$/;"	p	class:CCommands	access:public	signature:(IApplication * m_pApplication)
CCommands::UnadviseFromEvents	src/VisVim/Commands.cpp	/^void CCommands::UnadviseFromEvents()$/;"	f	class:CCommands	signature:()
CCommands::UnadviseFromEvents	src/VisVim/Commands.h	/^	void UnadviseFromEvents ();$/;"	p	class:CCommands	access:public	signature:()
CCommands::VisVimDialog	src/VisVim/Commands.cpp	/^STDMETHODIMP CCommands::VisVimDialog()$/;"	f	class:CCommands	signature:()
CCommands::VisVimDialog	src/VisVim/Commands.h	/^	STDMETHOD (VisVimDialog) (THIS);$/;"	p	class:CCommands	access:public	signature:(THIS)
CCommands::VisVimDisable	src/VisVim/Commands.cpp	/^STDMETHODIMP CCommands::VisVimDisable()$/;"	f	class:CCommands	signature:()
CCommands::VisVimDisable	src/VisVim/Commands.h	/^	STDMETHOD (VisVimDisable) (THIS);$/;"	p	class:CCommands	access:public	signature:(THIS)
CCommands::VisVimEnable	src/VisVim/Commands.cpp	/^STDMETHODIMP CCommands::VisVimEnable()$/;"	f	class:CCommands	signature:()
CCommands::VisVimEnable	src/VisVim/Commands.h	/^	STDMETHOD (VisVimEnable) (THIS);$/;"	p	class:CCommands	access:public	signature:(THIS)
CCommands::VisVimLoad	src/VisVim/Commands.cpp	/^STDMETHODIMP CCommands::VisVimLoad()$/;"	f	class:CCommands	signature:()
CCommands::VisVimLoad	src/VisVim/Commands.h	/^	STDMETHOD (VisVimLoad) (THIS);$/;"	p	class:CCommands	access:public	signature:(THIS)
CCommands::VisVimToggle	src/VisVim/Commands.cpp	/^STDMETHODIMP CCommands::VisVimToggle()$/;"	f	class:CCommands	signature:()
CCommands::VisVimToggle	src/VisVim/Commands.h	/^	STDMETHOD (VisVimToggle) (THIS);$/;"	p	class:CCommands	access:public	signature:(THIS)
CCommands::XApplicationEvents	src/VisVim/Commands.h	/^	class XApplicationEvents : public XEventHandler < IApplicationEvents,$/;"	c	class:CCommands	inherits:XEventHandler	access:protected
CCommands::XApplicationEvents::BeforeApplicationShutDown	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::BeforeApplicationShutDown()$/;"	f	class:CCommands::XApplicationEvents	signature:()
CCommands::XApplicationEvents::BeforeApplicationShutDown	src/VisVim/Commands.h	/^		STDMETHOD (BeforeApplicationShutDown) (THIS);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS)
CCommands::XApplicationEvents::BeforeBuildStart	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::BeforeBuildStart()$/;"	f	class:CCommands::XApplicationEvents	signature:()
CCommands::XApplicationEvents::BeforeBuildStart	src/VisVim/Commands.h	/^		STDMETHOD (BeforeBuildStart) (THIS);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS)
CCommands::XApplicationEvents::BeforeDocumentClose	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::BeforeDocumentClose(IDispatch * theDocument)$/;"	f	class:CCommands::XApplicationEvents	signature:(IDispatch * theDocument)
CCommands::XApplicationEvents::BeforeDocumentClose	src/VisVim/Commands.h	/^		STDMETHOD (BeforeDocumentClose) (THIS_ IDispatch * theDocument);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS_ IDispatch * theDocument)
CCommands::XApplicationEvents::BuildFinish	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::BuildFinish(long nNumErrors, long nNumWarnings)$/;"	f	class:CCommands::XApplicationEvents	signature:(long nNumErrors, long nNumWarnings)
CCommands::XApplicationEvents::BuildFinish	src/VisVim/Commands.h	/^		STDMETHOD (BuildFinish) (THIS_ long nNumErrors, long nNumWarnings);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS_ long nNumErrors, long nNumWarnings)
CCommands::XApplicationEvents::DocumentOpen	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::DocumentOpen(IDispatch * theDocument)$/;"	f	class:CCommands::XApplicationEvents	signature:(IDispatch * theDocument)
CCommands::XApplicationEvents::DocumentOpen	src/VisVim/Commands.h	/^		STDMETHOD (DocumentOpen) (THIS_ IDispatch * theDocument);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS_ IDispatch * theDocument)
CCommands::XApplicationEvents::DocumentSave	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::DocumentSave(IDispatch * theDocument)$/;"	f	class:CCommands::XApplicationEvents	signature:(IDispatch * theDocument)
CCommands::XApplicationEvents::DocumentSave	src/VisVim/Commands.h	/^		STDMETHOD (DocumentSave) (THIS_ IDispatch * theDocument);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS_ IDispatch * theDocument)
CCommands::XApplicationEvents::NewDocument	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::NewDocument(IDispatch * theDocument)$/;"	f	class:CCommands::XApplicationEvents	signature:(IDispatch * theDocument)
CCommands::XApplicationEvents::NewDocument	src/VisVim/Commands.h	/^		STDMETHOD (NewDocument) (THIS_ IDispatch * theDocument);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS_ IDispatch * theDocument)
CCommands::XApplicationEvents::NewWorkspace	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::NewWorkspace()$/;"	f	class:CCommands::XApplicationEvents	signature:()
CCommands::XApplicationEvents::NewWorkspace	src/VisVim/Commands.h	/^		STDMETHOD (NewWorkspace) (THIS);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS)
CCommands::XApplicationEvents::WindowActivate	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::WindowActivate(IDispatch * theWindow)$/;"	f	class:CCommands::XApplicationEvents	signature:(IDispatch * theWindow)
CCommands::XApplicationEvents::WindowActivate	src/VisVim/Commands.h	/^		STDMETHOD (WindowActivate) (THIS_ IDispatch * theWindow);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS_ IDispatch * theWindow)
CCommands::XApplicationEvents::WindowDeactivate	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::WindowDeactivate(IDispatch * theWindow)$/;"	f	class:CCommands::XApplicationEvents	signature:(IDispatch * theWindow)
CCommands::XApplicationEvents::WindowDeactivate	src/VisVim/Commands.h	/^		STDMETHOD (WindowDeactivate) (THIS_ IDispatch * theWindow);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS_ IDispatch * theWindow)
CCommands::XApplicationEvents::WorkspaceClose	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::WorkspaceClose()$/;"	f	class:CCommands::XApplicationEvents	signature:()
CCommands::XApplicationEvents::WorkspaceClose	src/VisVim/Commands.h	/^		STDMETHOD (WorkspaceClose) (THIS);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS)
CCommands::XApplicationEvents::WorkspaceOpen	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::WorkspaceOpen()$/;"	f	class:CCommands::XApplicationEvents	signature:()
CCommands::XApplicationEvents::WorkspaceOpen	src/VisVim/Commands.h	/^		STDMETHOD (WorkspaceOpen) (THIS);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS)
CCommands::XApplicationEventsObj	src/VisVim/Commands.h	/^	typedef CComObject < XApplicationEvents > XApplicationEventsObj;$/;"	t	class:CCommands	access:protected
CCommands::XDebuggerEvents	src/VisVim/Commands.h	/^	class XDebuggerEvents : public XEventHandler < IDebuggerEvents,$/;"	c	class:CCommands	inherits:XEventHandler	access:protected
CCommands::XDebuggerEvents::BreakpointHit	src/VisVim/Commands.cpp	/^HRESULT CCommands::XDebuggerEvents::BreakpointHit(IDispatch * pBreakpoint)$/;"	f	class:CCommands::XDebuggerEvents	signature:(IDispatch * pBreakpoint)
CCommands::XDebuggerEvents::BreakpointHit	src/VisVim/Commands.h	/^		STDMETHOD (BreakpointHit) (THIS_ IDispatch * pBreakpoint);$/;"	p	class:CCommands::XDebuggerEvents	access:public	signature:(THIS_ IDispatch * pBreakpoint)
CCommands::XDebuggerEventsObj	src/VisVim/Commands.h	/^	typedef CComObject < XDebuggerEvents > XDebuggerEventsObj;$/;"	t	class:CCommands	access:protected
CCommands::XEventHandler	src/VisVim/Commands.h	/^		class XEventHandler :$/;"	c	class:CCommands	inherits:CComDualImpl,CComObjectRoot,CComCoClass	access:protected
CCommands::XEventHandler::Connect	src/VisVim/Commands.h	/^		void Connect (IUnknown * pUnk)$/;"	f	class:CCommands::XEventHandler	access:public	signature:(IUnknown * pUnk)
CCommands::XEventHandler::Disconnect	src/VisVim/Commands.h	/^		void Disconnect (IUnknown * pUnk)$/;"	f	class:CCommands::XEventHandler	access:public	signature:(IUnknown * pUnk)
CCommands::XEventHandler::m_dwAdvise	src/VisVim/Commands.h	/^		DWORD m_dwAdvise;$/;"	m	class:CCommands::XEventHandler	access:protected
CCommands::XEventHandler::m_pCommands	src/VisVim/Commands.h	/^		CCommands *m_pCommands;$/;"	m	class:CCommands::XEventHandler	access:public
CCommands::m_pApplication	src/VisVim/Commands.h	/^	IApplication * m_pApplication;$/;"	m	class:CCommands	access:protected
CCommands::m_pApplicationEventsObj	src/VisVim/Commands.h	/^	XApplicationEventsObj *m_pApplicationEventsObj;$/;"	m	class:CCommands	access:protected
CCommands::m_pDebuggerEventsObj	src/VisVim/Commands.h	/^	XDebuggerEventsObj *m_pDebuggerEventsObj;$/;"	m	class:CCommands	access:protected
CCommands::~CCommands	src/VisVim/Commands.cpp	/^CCommands::~CCommands()$/;"	f	class:CCommands	signature:()
CCommands::~CCommands	src/VisVim/Commands.h	/^	~CCommands ();$/;"	p	class:CCommands	access:public	signature:()
CCommandsObj	src/VisVim/Commands.h	/^typedef CComObject < CCommands > CCommandsObj;$/;"	t
CDSAddIn	src/VisVim/DSAddIn.h	/^	CDSAddIn ()$/;"	f	class:CDSAddIn	access:public	signature:()
CDSAddIn	src/VisVim/DSAddIn.h	/^class CDSAddIn :$/;"	c	inherits:IDSAddIn,CComObjectRoot,CComCoClass
CDSAddIn::AddCommand	src/VisVim/DSAddIn.cpp	/^bool CDSAddIn::AddCommand (IApplication* pApp, char* MethodName, char* CmdName,$/;"	f	class:CDSAddIn	signature:(IApplication* pApp, char* MethodName, char* CmdName, UINT StrResId, UINT GlyphIndex, VARIANT_BOOL bFirstTime)
CDSAddIn::AddCommand	src/VisVim/DSAddIn.h	/^	bool AddCommand (IApplication* pApp, char* MethodName, char* CmdName,$/;"	p	class:CDSAddIn	access:protected	signature:(IApplication* pApp, char* MethodName, char* CmdName, UINT StrResId, UINT GlyphIndex, VARIANT_BOOL bFirstTime)
CDSAddIn::CDSAddIn	src/VisVim/DSAddIn.h	/^	CDSAddIn ()$/;"	f	class:CDSAddIn	access:public	signature:()
CDSAddIn::OnConnection	src/VisVim/DSAddIn.cpp	/^STDMETHODIMP CDSAddIn::OnConnection (IApplication * pApp, VARIANT_BOOL bFirstTime,$/;"	f	class:CDSAddIn	signature:(IApplication * pApp, VARIANT_BOOL bFirstTime, long dwCookie, VARIANT_BOOL * OnConnection)
CDSAddIn::OnConnection	src/VisVim/DSAddIn.h	/^	STDMETHOD (OnConnection) (THIS_ IApplication * pApp, VARIANT_BOOL bFirstTime,$/;"	p	class:CDSAddIn	access:public	signature:(THIS_ IApplication * pApp, VARIANT_BOOL bFirstTime, long dwCookie, VARIANT_BOOL * OnConnection)
CDSAddIn::OnDisconnection	src/VisVim/DSAddIn.cpp	/^STDMETHODIMP CDSAddIn::OnDisconnection (VARIANT_BOOL bLastTime)$/;"	f	class:CDSAddIn	signature:(VARIANT_BOOL bLastTime)
CDSAddIn::OnDisconnection	src/VisVim/DSAddIn.h	/^	STDMETHOD (OnDisconnection) (THIS_ VARIANT_BOOL bLastTime);$/;"	p	class:CDSAddIn	access:public	signature:(THIS_ VARIANT_BOOL bLastTime)
CDSAddIn::m_dwCookie	src/VisVim/DSAddIn.h	/^	DWORD m_dwCookie;$/;"	m	class:CDSAddIn	access:protected
CDSAddIn::m_pCommands	src/VisVim/DSAddIn.h	/^	CCommandsObj * m_pCommands;$/;"	m	class:CDSAddIn	access:protected
CD_NONE	src/VisVim/Commands.cpp	18;"	d	file:
CD_SOURCE	src/VisVim/Commands.cpp	16;"	d	file:
CD_SOURCE_PARENT	src/VisVim/Commands.cpp	17;"	d	file:
CENT	src/syntax.c	6447;"	d	file:
CENT	src/syntax.c	6449;"	d	file:
CFG	src/Make_dvc.mak	/^CFG=Vim - Win32 IDE for Make_mvc.mak$/;"	m
CFG	src/Make_ivc.mak	/^CFG=Vim - Win32 Release gvim OLE$/;"	m
CFG	src/VisVim/VisVim.mak	/^CFG=VisVim - Win32 Release$/;"	m
CFLAGS	src/Make_bc5.mak	/^CFLAGS = $(CFLAGS) -H- $(HEADERS)$/;"	m
CFLAGS	src/Make_bc5.mak	/^CFLAGS = $(CFLAGS) -d -RT- -k- -Oi $(HEADERS) -f-$/;"	m
CFLAGS	src/Make_bc5.mak	/^CFLAGS = -w-aus -w-par -w-pch -w-ngu -w-csu -I$(INCLUDE)$/;"	m
CFLAGS	src/Make_cyg.mak	/^CFLAGS = $(OPTFLAG) $(DEFINES) $(INCLUDES)$/;"	m
CFLAGS	src/Make_dice.mak	/^CFLAGS = -c -DAMIGA -Iproto $(DEFINES)$/;"	m
CFLAGS	src/Make_djg.mak	/^CFLAGS = -O2 -DMSDOS -Iproto $(DEFINES) -Wall -Dinterrupt= -Dfar= -DMAXMEM=512 -D_NAIVE_DOS_REGS$/;"	m
CFLAGS	src/Make_manx.mak	/^CFLAGS = $(OPTIONS) -wapruq -ps -qf -Iproto $(DEFINES) -DAMIGA$/;"	m
CFLAGS	src/Make_ming.mak	/^CFLAGS = -Iproto $(DEFINES) -pipe -w -march=$(ARCH) -Wall$/;"	m
CFLAGS	src/Make_mint.mak	/^CFLAGS = -g -O -Iproto$/;"	m
CFLAGS	src/Make_morph.mak	/^CFLAGS =	-c						\\$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS  = $(CFLAGS) -DFEAT_TCL -DDYNAMIC_TCL -DDYNAMIC_TCL_DLL=\\"$(TCL_DLL)\\" \\$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS  = $(CFLAGS) -DFEAT_TCL$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) $(OPTFLAG) -DNDEBUG $(CPUARG)$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DDYNAMIC_GETTEXT$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DDYNAMIC_ICONV$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DDYNAMIC_IME$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DDYNAMIC_LUA \\$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DDYNAMIC_MZSCHEME \\$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DDYNAMIC_PERL -DDYNAMIC_PERL_DLL=\\"$(PERL_DLL)\\"$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DDYNAMIC_PYTHON \\$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DDYNAMIC_PYTHON3 \\$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DDYNAMIC_RUBY -DDYNAMIC_RUBY_VER=$(RUBY_VER) \\$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DFEAT_$(FEATURES)$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DFEAT_GUI_W32$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DFEAT_LUA$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DFEAT_MBYTE$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DFEAT_MBYTE_IME$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DFEAT_MZSCHEME -I $(MZSCHEME)\\include$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DFEAT_OLE$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DFEAT_PERL$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DFEAT_PYTHON$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DFEAT_PYTHON3$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DFEAT_RUBY$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DGLOBAL_IME$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DINCLUDE_MZSCHEME_BASE$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DMSWINPS$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DMZSCHEME_FORCE_GC$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -DMZ_PRECISE_GC$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) -D_DEBUG -DDEBUG \/Od$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) \/Fd$(OUTDIR)\/ $(DEBUGINFO)$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) \/MD$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) \/MDd$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) \/Zl \/MT$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = $(CFLAGS) \/Zl \/MTd$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS = -c \/W3 \/nologo $(CVARS) -I. -Iproto -DHAVE_PATHDEF -DWIN32 \\$/;"	m
CFLAGS	src/Make_mvc.mak	/^CFLAGS=$(CFLAGS) $(WP64CHECK)$/;"	m
CFLAGS	src/Make_os2.mak	/^CFLAGS = -O2 -fno-strength-reduce -DOS2 -Wall -Iproto $(DEFINES)$/;"	m
CFLAGS	src/Make_ro.mak	/^CFLAGS     = -DRISCOS -DFEAT_GUI$/;"	m
CFLAGS	src/Make_sas.mak	/^CFLAGS  = NOLINK $(DBG) CPU=$(CPU) NOSTACKCHECK DEF=AMIGA CODE=FAR idir=proto ignore=317$/;"	m
CFLAGS	src/auto/config.mk	/^CFLAGS		= -g -O2 -D_FORTIFY_SOURCE=1$/;"	m
CFLAGS	src/tee/Makefile	/^CFLAGS=-O2 -fno-strength-reduce$/;"	m
CFLAGS	src/xxd/Make_amiga.mak	/^CFLAGS = $(OPTIONS) -wapruq -ps -qf -DAMIGA -Dconst=$/;"	m
CFLAGS	src/xxd/Make_bc3.mak	/^CFLAGS	= -A -mc -DMSDOS $(DEBUG_FLAG) $(OPTIMIZE) $(INC) $(LIB)$/;"	m
CFLAGS	src/xxd/Make_cyg.mak	/^CFLAGS = -O2 -Wall -DWIN32 $(DEFINES)$/;"	m
CFLAGS	src/xxd/Make_djg.mak	/^CFLAGS = -O2 -Wall$/;"	m
CFLAGS	src/xxd/Make_os2.mak	/^CFLAGS=-O2 -fno-strength-reduce -DOS2$/;"	m
CFLAGS2	src/Make_sas.mak	/^CFLAGS2 = $(OPTIMIZE) $(ERROR) GSTIMMEDIATE GST=$(GST)$/;"	m
CFLAGS3	src/Make_sas.mak	/^CFLAGS3 = $(COPTS) STRINGMERGE MEMSIZE=$(MEMSIZE)$/;"	m
CFLAGS4	src/Make_sas.mak	/^CFLAGS4 = $(DEFINES) DATAMEMORY=$(MEMORYTYPE)$/;"	m
CFStringRef	src/os_mac_conv.c	/^typedef int CFStringRef;$/;"	t	file:
CF_OEMTEXT	src/os_msdos.c	2199;"	d	file:
CF_TEXT	src/os_msdos.c	2198;"	d	file:
CF_UPPER	src/spell.c	746;"	d	file:
CF_VIMCLIP	src/os_msdos.c	2200;"	d	file:
CF_WORD	src/spell.c	745;"	d	file:
CHARSIZE	src/macros.h	125;"	d
CHAR_CELLS	src/screen.c	5364;"	d	file:
CHAR_CLASS	src/ui.c	1261;"	d	file:
CHE	src/farsi.h	117;"	d
CHECK	src/memline.c	12;"	d	file:
CHECK	src/testdir/test49.vim	/^    function! CHECK(n, ...)$/;"	f
CHECK	src/testdir/test49.vim	/^function! CHECK(n, exception, throwname, throwline)$/;"	f
CHECKFILES	src/po/Makefile	/^CHECKFILES = \\$/;"	m
CHECK_CMDWIN	src/window.c	117;"	d	file:
CHECK_DOUBLE_CLICK	src/vim.h	1780;"	d
CHECK_INODE	src/os_unix.h	443;"	d
CHECK_INODE	src/vim.h	308;"	d
CHECK_PATH	src/vim.h	845;"	d
CHECK_REG_ERROR	src/dosinst.c	23;"	d	file:
CHILD_BOTTOM	src/gui_riscos.h	24;"	d
CHILD_FIX_TO_BOTTOM	src/gui_riscos.h	16;"	d
CHILD_FIX_TO_LEFT	src/gui_riscos.h	15;"	d
CHILD_FIX_TO_RIGHT	src/gui_riscos.h	17;"	d
CHILD_FIX_TO_TOP	src/gui_riscos.h	18;"	d
CHILD_FIX_TO_WORKAREA	src/gui_riscos.h	14;"	d
CHILD_LEFT	src/gui_riscos.h	23;"	d
CHILD_PARENT_SCROLL	src/gui_riscos.h	21;"	d
CHILD_RIGHT	src/gui_riscos.h	25;"	d
CHILD_SCROLL_X	src/gui_riscos.h	27;"	d
CHILD_SCROLL_Y	src/gui_riscos.h	28;"	d
CHILD_SELF_SCROLL	src/gui_riscos.h	20;"	d
CHILD_TOP	src/gui_riscos.h	26;"	d
CLASS_ALNUM	src/regexp.c	437;"	d	file:
CLASS_ALPHA	src/regexp.c	439;"	d	file:
CLASS_BACKSPACE	src/regexp.c	465;"	d	file:
CLASS_BLANK	src/regexp.c	441;"	d	file:
CLASS_CNTRL	src/regexp.c	443;"	d	file:
CLASS_DIGIT	src/regexp.c	445;"	d	file:
CLASS_ESCAPE	src/regexp.c	467;"	d	file:
CLASS_GRAPH	src/regexp.c	447;"	d	file:
CLASS_LOWER	src/regexp.c	449;"	d	file:
CLASS_NONE	src/regexp.c	469;"	d	file:
CLASS_PRINT	src/regexp.c	451;"	d	file:
CLASS_PUNCT	src/regexp.c	453;"	d	file:
CLASS_RETURN	src/regexp.c	463;"	d	file:
CLASS_SPACE	src/regexp.c	455;"	d	file:
CLASS_TAB	src/regexp.c	461;"	d	file:
CLASS_UPPER	src/regexp.c	457;"	d	file:
CLASS_XDIGIT	src/regexp.c	459;"	d	file:
CLEAR	src/vim.h	617;"	d
CLIP_CLEAR	src/ui.c	589;"	d	file:
CLIP_SET	src/ui.c	590;"	d	file:
CLIP_TOGGLE	src/ui.c	591;"	d	file:
CLIP_TYPE_TEXT	src/os_qnx.c	37;"	d	file:
CLIP_TYPE_VIM	src/os_qnx.c	36;"	d	file:
CLSID	src/iid_ole.c	/^typedef IID CLSID;$/;"	t	file:
CLSID_DEFINED	src/iid_ole.c	43;"	d	file:
CLSID_Vim	src/if_ole.h	/^EXTERN_C const CLSID CLSID_Vim;$/;"	v
CLSID_Vim	src/iid_ole.c	/^const CLSID CLSID_Vim = {0x0F0BFAE1,0x4C90,0x11d1,{0x82,0xD7,0x00,0x04,0xAC,0x36,0x85,0x19}};$/;"	v
CLUSTER_ADD	src/syntax.c	215;"	d	file:
CLUSTER_REPLACE	src/syntax.c	214;"	d	file:
CLUSTER_SUBTRACT	src/syntax.c	216;"	d	file:
CMB_DISCARDABLE	src/vimtbar.h	61;"	d
CMB_MASKED	src/vimtbar.h	62;"	d
CMDBUFFSIZE	src/os_mac.h	219;"	d
CMDBUFFSIZE	src/os_riscos.h	135;"	d
CMDBUFFSIZE	src/os_unix.h	434;"	d
CMDBUFFSIZE	src/os_win16.h	80;"	d
CMDBUFFSIZE	src/os_win32.h	109;"	d
CMDBUFFSIZE	src/vim.h	1419;"	d
CMDBUFSIZ	src/integration.c	91;"	d	file:
CMDLINE	src/vim.h	675;"	d
CMDWIN	src/ex_cmds.h	54;"	d
CMD_CONT	src/ex_cmds2.c	102;"	d	file:
CMD_FINISH	src/ex_cmds2.c	105;"	d	file:
CMD_INTERRUPT	src/ex_cmds2.c	107;"	d	file:
CMD_NEXT	src/ex_cmds2.c	103;"	d	file:
CMD_QUIT	src/ex_cmds2.c	106;"	d	file:
CMD_STEP	src/ex_cmds2.c	104;"	d	file:
CMD_TB_BASE	src/gui_w16.c	36;"	d	file:
CMP_INTERNAL	src/option.h	365;"	d
CMP_KEEPASCII	src/option.h	366;"	d
CMainDialog	src/VisVim/Commands.cpp	/^	CMainDialog(CWnd * pParent = NULL);	\/\/ Standard constructor$/;"	p	class:CMainDialog	file:	access:public	signature:(CWnd * pParent = NULL)
CMainDialog	src/VisVim/Commands.cpp	/^CMainDialog::CMainDialog(CWnd * pParent \/* =NULL *\/ )$/;"	f	class:CMainDialog	signature:(CWnd * pParent )
CMainDialog	src/VisVim/Commands.cpp	/^class CMainDialog : public CDialog$/;"	c	file:	inherits:CDialog
CMainDialog::CMainDialog	src/VisVim/Commands.cpp	/^	CMainDialog(CWnd * pParent = NULL);	\/\/ Standard constructor$/;"	p	class:CMainDialog	file:	access:public	signature:(CWnd * pParent = NULL)
CMainDialog::CMainDialog	src/VisVim/Commands.cpp	/^CMainDialog::CMainDialog(CWnd * pParent \/* =NULL *\/ )$/;"	f	class:CMainDialog	signature:(CWnd * pParent )
CMainDialog::DoDataExchange	src/VisVim/Commands.cpp	/^	virtual void DoDataExchange(CDataExchange * pDX);	\/\/ DDX\/DDV support$/;"	p	class:CMainDialog	file:	access:protected	signature:(CDataExchange * pDX)
CMainDialog::DoDataExchange	src/VisVim/Commands.cpp	/^void CMainDialog::DoDataExchange(CDataExchange * pDX)$/;"	f	class:CMainDialog	signature:(CDataExchange * pDX)
CMainDialog::IDD	src/VisVim/Commands.cpp	/^	enum { IDD = IDD_ADDINMAIN };$/;"	e	enum:CMainDialog::__anon85	file:
CMainDialog::OnDisable	src/VisVim/Commands.cpp	/^	afx_msg void OnDisable();$/;"	p	class:CMainDialog	file:	access:protected	signature:()
CMainDialog::OnEnable	src/VisVim/Commands.cpp	/^	afx_msg void OnEnable();$/;"	p	class:CMainDialog	file:	access:protected	signature:()
CMainDialog::m_ChangeDir	src/VisVim/Commands.cpp	/^	int	m_ChangeDir;$/;"	m	class:CMainDialog	file:	access:public
CMainDialog::m_bDevStudioEditor	src/VisVim/Commands.cpp	/^	BOOL	m_bDevStudioEditor;$/;"	m	class:CMainDialog	file:	access:public
CMainDialog::m_bNewTabs	src/VisVim/Commands.cpp	/^	BOOL	m_bNewTabs;$/;"	m	class:CMainDialog	file:	access:public
CMakeGetIndent	runtime/indent/cmake.vim	/^fun! CMakeGetIndent(lnum)$/;"	f
CNT	src/spell.c	15014;"	d	file:
COBJMACROS	src/os_win16.h	73;"	d
COBJMACROS	src/os_win32.h	102;"	d
COCU_ALL	src/option.h	192;"	d
CODEGUARD_FLAG	src/Make_bc5.mak	/^CODEGUARD_FLAG = -vG$/;"	m
COLORREF	src/os_mswin.c	/^typedef int COLORREF;$/;"	t	file:
COLORREF	src/os_win32.c	/^typedef int COLORREF;$/;"	t	file:
COLS	src/xxd/xxd.c	215;"	d	file:
COLSOURCE	src/Makefile	/^COLSOURCE = ..\/runtime\/colors$/;"	m
COLSUBDIR	src/Makefile	/^COLSUBDIR = \/colors$/;"	m
COLSUBLOC	src/Makefile	/^COLSUBLOC	= $(VIMRTLOC)$(COLSUBDIR)$/;"	m
COL_RULER	src/option.c	9366;"	d	file:
COMMENT_D16	Makefile	/^COMMENT_D16 = comment\/$(VERSION)-bin-d16$/;"	m
COMMENT_D32	Makefile	/^COMMENT_D32 = comment\/$(VERSION)-bin-d32$/;"	m
COMMENT_FARSI	Makefile	/^COMMENT_FARSI = comment\/$(VERSION)-farsi$/;"	m
COMMENT_GVIM	Makefile	/^COMMENT_GVIM = comment\/$(VERSION)-bin-gvim$/;"	m
COMMENT_HTML	Makefile	/^COMMENT_HTML = comment\/$(VERSION)-html$/;"	m
COMMENT_OLE	Makefile	/^COMMENT_OLE = comment\/$(VERSION)-bin-ole$/;"	m
COMMENT_OS2	Makefile	/^COMMENT_OS2 = comment\/$(VERSION)-bin-os2$/;"	m
COMMENT_RT	Makefile	/^COMMENT_RT = comment\/$(VERSION)-rt$/;"	m
COMMENT_SRC	Makefile	/^COMMENT_SRC = comment\/$(VERSION)-src$/;"	m
COMMENT_W32	Makefile	/^COMMENT_W32 = comment\/$(VERSION)-bin-w32$/;"	m
COMMENT_W32S	Makefile	/^COMMENT_W32S = comment\/$(VERSION)-bin-w32s$/;"	m
COMPILEDBY	src/auto/config.mk	/^COMPILEDBY	= $/;"	m
COMPILER_AIX	runtime/tools/ccfilter.c	37;"	d	file:
COMPILER_ATT	runtime/tools/ccfilter.c	38;"	d	file:
COMPILER_DEFAULT	runtime/tools/ccfilter.c	57;"	d	file:
COMPILER_DEFAULT	runtime/tools/ccfilter.c	59;"	d	file:
COMPILER_DEFAULT	runtime/tools/ccfilter.c	61;"	d	file:
COMPILER_DEFAULT	runtime/tools/ccfilter.c	63;"	d	file:
COMPILER_DEFAULT	runtime/tools/ccfilter.c	65;"	d	file:
COMPILER_DEFAULT	runtime/tools/ccfilter.c	67;"	d	file:
COMPILER_DEFAULT	runtime/tools/ccfilter.c	69;"	d	file:
COMPILER_GCC	runtime/tools/ccfilter.c	36;"	d	file:
COMPILER_HPUX	runtime/tools/ccfilter.c	41;"	d	file:
COMPILER_IRIX	runtime/tools/ccfilter.c	39;"	d	file:
COMPILER_Names	runtime/tools/ccfilter.c	/^char	*COMPILER_Names[][2] =$/;"	v
COMPILER_QTY	runtime/tools/ccfilter.c	54;"	d	file:
COMPILER_SOLARIS	runtime/tools/ccfilter.c	40;"	d	file:
COMPILER_UNKNOWN	runtime/tools/ccfilter.c	35;"	d	file:
COMPOSITIONFORM	src/gui_w32.c	/^} COMPOSITIONFORM, *PCOMPOSITIONFORM, NEAR *NPCOMPOSITIONFORM, FAR *LPCOMPOSITIONFORM;$/;"	t	typeref:struct:tagCOMPOSITIONFORM	file:
COMPSOURCE	src/Makefile	/^COMPSOURCE = ..\/runtime\/compiler$/;"	m
COMPSUBDIR	src/Makefile	/^COMPSUBDIR = \/compiler$/;"	m
COMPSUBLOC	src/Makefile	/^COMPSUBLOC	= $(VIMRTLOC)$(COMPSUBDIR)$/;"	m
COMP_CHECKCASE	src/spell.c	375;"	d	file:
COMP_CHECKDUP	src/spell.c	373;"	d	file:
COMP_CHECKREP	src/spell.c	374;"	d	file:
COMP_CHECKTRIPLE	src/spell.c	376;"	d	file:
COM_ALL	src/option.h	248;"	d
COM_AUTO_END	src/option.h	243;"	d
COM_BLANK	src/option.h	239;"	d
COM_END	src/option.h	242;"	d
COM_FIRST	src/option.h	244;"	d
COM_LEFT	src/option.h	245;"	d
COM_MAX_LEN	src/option.h	249;"	d
COM_MIDDLE	src/option.h	241;"	d
COM_NEST	src/option.h	238;"	d
COM_NOBACK	src/option.h	247;"	d
COM_RIGHT	src/option.h	246;"	d
COM_START	src/option.h	240;"	d
CONDIT_AFF	src/spell.c	5043;"	d	file:
CONDIT_CFIX	src/spell.c	5041;"	d	file:
CONDIT_COMB	src/spell.c	5040;"	d	file:
CONDIT_SUF	src/spell.c	5042;"	d	file:
CONFIRM	src/vim.h	695;"	d
CONNECT	src/if_sniff.c	37;"	d	file:
CONSOLE_CURSOR_INFO	src/os_mswin.c	/^typedef int CONSOLE_CURSOR_INFO;$/;"	t	file:
CONSOLE_CURSOR_INFO	src/os_win16.c	/^typedef int CONSOLE_CURSOR_INFO;$/;"	t	file:
CONSOLE_CURSOR_INFO	src/os_win32.c	/^typedef int CONSOLE_CURSOR_INFO;$/;"	t	file:
CONST	src/gui_w48.c	83;"	d	file:
CONST84	src/if_tcl.c	111;"	d	file:
CONT	src/testdir/test49.vim	/^    function! CONT(n)$/;"	f
CONT_ADDING	src/globals.h	135;"	d
CONT_INTRPT	src/globals.h	136;"	d
CONT_LOCAL	src/globals.h	143;"	d
CONT_N_ADDS	src/globals.h	138;"	d
CONT_SOL	src/globals.h	141;"	d
CONT_S_IPOS	src/globals.h	139;"	d
CONV	src/gui_gtk.c	1559;"	d	file:
CONV	src/gui_gtk.c	1770;"	d	file:
CONVERTED	runtime/doc/Makefile	/^CONVERTED = \\$/;"	m
CONVERTED	src/po/Makefile	/^CONVERTED = \\$/;"	m
CONVERT_FROM_UTF8	src/gui.h	537;"	d
CONVERT_FROM_UTF8	src/gui.h	550;"	d
CONVERT_FROM_UTF8_FREE	src/gui.h	542;"	d
CONVERT_FROM_UTF8_FREE	src/gui.h	551;"	d
CONVERT_TO_UTF8	src/gui.h	527;"	d
CONVERT_TO_UTF8	src/gui.h	548;"	d
CONVERT_TO_UTF8_FREE	src/gui.h	532;"	d
CONVERT_TO_UTF8_FREE	src/gui.h	549;"	d
CONV_9_TO_UTF8	src/structs.h	961;"	d
CONV_CODEPAGE	src/structs.h	966;"	d
CONV_ICONV	src/structs.h	964;"	d
CONV_LATIN1_MAC	src/structs.h	970;"	d
CONV_MAC_LATIN1	src/structs.h	969;"	d
CONV_MAC_UTF8	src/structs.h	971;"	d
CONV_NONE	src/structs.h	959;"	d
CONV_RESTLEN	src/fileio.c	110;"	d	file:
CONV_TO_LATIN1	src/structs.h	962;"	d
CONV_TO_LATIN9	src/structs.h	963;"	d
CONV_TO_UTF8	src/structs.h	960;"	d
CONV_UTF8_MAC	src/structs.h	972;"	d
CON_LIB	src/Make_mvc.mak	/^CON_LIB = $(CON_LIB) \/DELAYLOAD:comdlg32.dll \/DELAYLOAD:ole32.dll DelayImp.lib$/;"	m
CON_LIB	src/Make_mvc.mak	/^CON_LIB = oldnames.lib kernel32.lib advapi32.lib shell32.lib gdi32.lib \\$/;"	m
COORD	src/os_mswin.c	/^typedef int COORD;$/;"	t	file:
COORD	src/os_win16.c	/^typedef int COORD;$/;"	t	file:
COORD	src/os_win32.c	/^typedef int COORD;$/;"	t	file:
COPTS	src/Make_sas.mak	/^COPTS	= SINT SCODE SDATA$/;"	m
COPYDATA_ENCODING	src/os_mswin.c	2525;"	d	file:
COPYDATA_ERROR_RESULT	src/os_mswin.c	2524;"	d	file:
COPYDATA_EXPR	src/os_mswin.c	2522;"	d	file:
COPYDATA_KEYS	src/os_mswin.c	2520;"	d	file:
COPYDATA_REPLY	src/os_mswin.c	2521;"	d	file:
COPYDATA_RESULT	src/os_mswin.c	2523;"	d	file:
COPYID_INC	src/eval.c	142;"	d	file:
COPYID_MASK	src/eval.c	143;"	d	file:
COUNT	src/ex_cmds.h	44;"	d
COleAutomationControl	src/VisVim/OleAut.cpp	/^COleAutomationControl::COleAutomationControl ()$/;"	f	class:COleAutomationControl	signature:()
COleAutomationControl	src/VisVim/OleAut.h	/^	COleAutomationControl ();$/;"	p	class:COleAutomationControl	access:public	signature:()
COleAutomationControl	src/VisVim/OleAut.h	/^class COleAutomationControl : public CObject$/;"	c	inherits:CObject
COleAutomationControl::COleAutomationControl	src/VisVim/OleAut.cpp	/^COleAutomationControl::COleAutomationControl ()$/;"	f	class:COleAutomationControl	signature:()
COleAutomationControl::COleAutomationControl	src/VisVim/OleAut.h	/^	COleAutomationControl ();$/;"	p	class:COleAutomationControl	access:public	signature:()
COleAutomationControl::CreateObject	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::CreateObject (char* ProgId)$/;"	f	class:COleAutomationControl	signature:(char* ProgId)
COleAutomationControl::CreateObject	src/VisVim/OleAut.h	/^	bool CreateObject (char* ProgId);$/;"	p	class:COleAutomationControl	access:public	signature:(char* ProgId)
COleAutomationControl::DeleteObject	src/VisVim/OleAut.cpp	/^void COleAutomationControl::DeleteObject ()$/;"	f	class:COleAutomationControl	signature:()
COleAutomationControl::DeleteObject	src/VisVim/OleAut.h	/^	void DeleteObject ();$/;"	p	class:COleAutomationControl	access:public	signature:()
COleAutomationControl::ErrDiag	src/VisVim/OleAut.cpp	/^void COleAutomationControl::ErrDiag ()$/;"	f	class:COleAutomationControl	signature:()
COleAutomationControl::ErrDiag	src/VisVim/OleAut.h	/^	void ErrDiag ();$/;"	p	class:COleAutomationControl	access:public	signature:()
COleAutomationControl::GetDispatchId	src/VisVim/OleAut.cpp	/^DISPID COleAutomationControl::GetDispatchId (char* Name)$/;"	f	class:COleAutomationControl	signature:(char* Name)
COleAutomationControl::GetDispatchId	src/VisVim/OleAut.h	/^	DISPID GetDispatchId (char* Name);$/;"	p	class:COleAutomationControl	access:public	signature:(char* Name)
COleAutomationControl::GetErrArgNr	src/VisVim/OleAut.h	/^	UINT GetErrArgNr ()$/;"	f	class:COleAutomationControl	access:public	signature:()
COleAutomationControl::GetExceptionInfo	src/VisVim/OleAut.h	/^	EXCEPINFO* GetExceptionInfo ()$/;"	f	class:COleAutomationControl	access:public	signature:()
COleAutomationControl::GetProperty	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::GetProperty (DISPID DispatchId)$/;"	f	class:COleAutomationControl	signature:(DISPID DispatchId)
COleAutomationControl::GetProperty	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::GetProperty (char* Name)$/;"	f	class:COleAutomationControl	signature:(char* Name)
COleAutomationControl::GetProperty	src/VisVim/OleAut.h	/^	bool GetProperty (DISPID DispatchId);$/;"	p	class:COleAutomationControl	access:public	signature:(DISPID DispatchId)
COleAutomationControl::GetProperty	src/VisVim/OleAut.h	/^	bool GetProperty (char* Name);$/;"	p	class:COleAutomationControl	access:public	signature:(char* Name)
COleAutomationControl::GetResult	src/VisVim/OleAut.h	/^	HRESULT GetResult ()$/;"	f	class:COleAutomationControl	access:public	signature:()
COleAutomationControl::GetResultVariant	src/VisVim/OleAut.h	/^	LPVARIANT GetResultVariant ()$/;"	f	class:COleAutomationControl	access:public	signature:()
COleAutomationControl::Invoke	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::Invoke (WORD Flags, DISPID DispatchId,$/;"	f	class:COleAutomationControl	signature:(WORD Flags, DISPID DispatchId, LPCTSTR Format, va_list ArgList)
COleAutomationControl::Invoke	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::Invoke (WORD Flags, char* Name,$/;"	f	class:COleAutomationControl	signature:(WORD Flags, char* Name, LPCTSTR Format, va_list ArgList)
COleAutomationControl::Invoke	src/VisVim/OleAut.h	/^	bool Invoke (WORD Flags, DISPID DispatchId, LPCTSTR Format, va_list ArgList);$/;"	p	class:COleAutomationControl	access:protected	signature:(WORD Flags, DISPID DispatchId, LPCTSTR Format, va_list ArgList)
COleAutomationControl::Invoke	src/VisVim/OleAut.h	/^	bool Invoke (WORD Flags, char* Name, LPCTSTR Format, va_list ArgList);$/;"	p	class:COleAutomationControl	access:protected	signature:(WORD Flags, char* Name, LPCTSTR Format, va_list ArgList)
COleAutomationControl::IsAlive	src/VisVim/OleAut.h	/^	bool IsAlive ();$/;"	p	class:COleAutomationControl	access:public	signature:()
COleAutomationControl::IsCreated	src/VisVim/OleAut.h	/^	bool IsCreated ()$/;"	f	class:COleAutomationControl	access:public	signature:()
COleAutomationControl::Method	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::Method (DISPID DispatchId, LPCTSTR Format, ...)$/;"	f	class:COleAutomationControl	signature:(DISPID DispatchId, LPCTSTR Format, ...)
COleAutomationControl::Method	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::Method (char* Name, LPCTSTR Format, ...)$/;"	f	class:COleAutomationControl	signature:(char* Name, LPCTSTR Format, ...)
COleAutomationControl::Method	src/VisVim/OleAut.h	/^	bool Method (DISPID DispatchId, LPCTSTR Format = NULL, ...);$/;"	p	class:COleAutomationControl	access:public	signature:(DISPID DispatchId, LPCTSTR Format = NULL, ...)
COleAutomationControl::Method	src/VisVim/OleAut.h	/^	bool Method (char* Name, LPCTSTR Format = NULL, ...);$/;"	p	class:COleAutomationControl	access:public	signature:(char* Name, LPCTSTR Format = NULL, ...)
COleAutomationControl::PutProperty	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::PutProperty (DISPID DispatchId, LPCTSTR Format, ...)$/;"	f	class:COleAutomationControl	signature:(DISPID DispatchId, LPCTSTR Format, ...)
COleAutomationControl::PutProperty	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::PutProperty (char* Name, LPCTSTR Format, ...)$/;"	f	class:COleAutomationControl	signature:(char* Name, LPCTSTR Format, ...)
COleAutomationControl::PutProperty	src/VisVim/OleAut.h	/^	bool PutProperty (DISPID DispatchId, LPCTSTR Format, ...);$/;"	p	class:COleAutomationControl	access:public	signature:(DISPID DispatchId, LPCTSTR Format, ...)
COleAutomationControl::PutProperty	src/VisVim/OleAut.h	/^	bool PutProperty (char* Name, LPCTSTR Format, ...);$/;"	p	class:COleAutomationControl	access:public	signature:(char* Name, LPCTSTR Format, ...)
COleAutomationControl::m_ExceptionInfo	src/VisVim/OleAut.h	/^	EXCEPINFO	m_ExceptionInfo;$/;"	m	class:COleAutomationControl	access:protected
COleAutomationControl::m_VariantResult	src/VisVim/OleAut.h	/^	VARIANTARG	m_VariantResult;$/;"	m	class:COleAutomationControl	access:protected
COleAutomationControl::m_hResult	src/VisVim/OleAut.h	/^	HRESULT		m_hResult;$/;"	m	class:COleAutomationControl	access:protected
COleAutomationControl::m_nErrArg	src/VisVim/OleAut.h	/^	UINT		m_nErrArg;$/;"	m	class:COleAutomationControl	access:protected
COleAutomationControl::m_pDispatch	src/VisVim/OleAut.h	/^	IDispatch*	m_pDispatch;$/;"	m	class:COleAutomationControl	access:protected
COleAutomationControl::~COleAutomationControl	src/VisVim/OleAut.cpp	/^COleAutomationControl::~COleAutomationControl ()$/;"	f	class:COleAutomationControl	signature:()
COleAutomationControl::~COleAutomationControl	src/VisVim/OleAut.h	/^	~COleAutomationControl ();$/;"	p	class:COleAutomationControl	access:public	signature:()
CP	src/po/Make_cyg.mak	/^CP = cp -f$/;"	m
CP	src/po/Make_ming.mak	/^CP = copy$/;"	m
CP	src/po/Make_mvc.mak	/^CP = copy$/;"	m
CP	src/testdir/Make_ming.mak	/^CP = copy$/;"	m
CP	src/testdir/Make_ming.mak	/^CP = cp$/;"	m
CPO_ALL	src/option.h	175;"	d
CPO_ALTREAD	src/option.h	113;"	d
CPO_ALTWRITE	src/option.h	114;"	d
CPO_BACKSL	src/option.h	170;"	d
CPO_BACKSPACE	src/option.h	149;"	d
CPO_BAR	src/option.h	115;"	d
CPO_BSLASH	src/option.h	116;"	d
CPO_BUFOPT	src/option.h	145;"	d
CPO_BUFOPTGLOB	src/option.h	146;"	d
CPO_CHDIR	src/option.h	171;"	d
CPO_CONCAT	src/option.h	118;"	d
CPO_CW	src/option.h	150;"	d
CPO_DIGRAPH	src/option.h	120;"	d
CPO_DOLLAR	src/option.h	156;"	d
CPO_DOTTAG	src/option.h	119;"	d
CPO_EMPTYREGION	src/option.h	122;"	d
CPO_ENDOFSENT	src/option.h	130;"	d
CPO_ESC	src/option.h	152;"	d
CPO_EXECBUF	src/option.h	121;"	d
CPO_FILTER	src/option.h	157;"	d
CPO_FNAMEAPP	src/option.h	141;"	d
CPO_FNAMER	src/option.h	123;"	d
CPO_FNAMEW	src/option.h	124;"	d
CPO_FWRITE	src/option.h	151;"	d
CPO_GOTO1	src/option.h	125;"	d
CPO_HASH	src/option.h	165;"	d
CPO_INDENT	src/option.h	128;"	d
CPO_INSEND	src/option.h	126;"	d
CPO_INTMOD	src/option.h	127;"	d
CPO_JOINCOL	src/option.h	142;"	d
CPO_JOINSP	src/option.h	129;"	d
CPO_KEEPRO	src/option.h	155;"	d
CPO_KEYCODE	src/option.h	131;"	d
CPO_KOFFSET	src/option.h	132;"	d
CPO_LINEOFF	src/option.h	138;"	d
CPO_LISP	src/option.h	140;"	d
CPO_LISTWM	src/option.h	134;"	d
CPO_LITERAL	src/option.h	133;"	d
CPO_MATCH	src/option.h	158;"	d
CPO_MATCHBSL	src/option.h	136;"	d
CPO_MINUS	src/option.h	161;"	d
CPO_NUMCOL	src/option.h	137;"	d
CPO_OVERNEW	src/option.h	139;"	d
CPO_PARA	src/option.h	166;"	d
CPO_PLUS	src/option.h	160;"	d
CPO_PRESERVE	src/option.h	168;"	d
CPO_REDO	src/option.h	143;"	d
CPO_REGAPPEND	src/option.h	163;"	d
CPO_REMMARK	src/option.h	144;"	d
CPO_REPLCNT	src/option.h	153;"	d
CPO_SEARCH	src/option.h	117;"	d
CPO_SHOWMATCH	src/option.h	135;"	d
CPO_SPECI	src/option.h	162;"	d
CPO_STAR	src/option.h	159;"	d
CPO_SUBPERCENT	src/option.h	169;"	d
CPO_TAGPAT	src/option.h	147;"	d
CPO_TSIZE	src/option.h	167;"	d
CPO_UNDO	src/option.h	148;"	d
CPO_VI	src/option.h	174;"	d
CPO_VIM	src/option.h	173;"	d
CPO_YANK	src/option.h	154;"	d
CPP	src/Make_dvc.mak	/^CPP=cl.exe$/;"	m
CPP	src/Make_ivc.mak	/^CPP=cl.exe$/;"	m
CPP	src/VisVim/VisVim.mak	/^CPP=cl.exe$/;"	m
CPP	src/auto/config.mk	/^CPP		= gcc -E$/;"	m
CPPFLAGS	src/auto/config.mk	/^CPPFLAGS	= $/;"	m
CPP_DEPEND	src/Makefile	/^CPP_DEPEND = $(CC) -I$(srcdir) -M$(CPP_MM) \\$/;"	m
CPP_MM	src/auto/config.mk	/^CPP_MM		= M$/;"	m
CPP_OBJS	src/VisVim/VisVim.mak	/^CPP_OBJS=.\\Debug\/$/;"	m
CPP_OBJS	src/VisVim/VisVim.mak	/^CPP_OBJS=.\\Release\/$/;"	m
CPP_PROJ	src/Make_dvc.mak	/^CPP_PROJ=\/nologo \/ML \/c$/;"	m
CPP_PROJ	src/Make_ivc.mak	/^CPP_PROJ= \/nologo \/MT \/W3 \/GX \/I ".\\proto" \/D "WIN32" \/c$/;"	m
CPP_PROJ	src/Make_ivc.mak	/^CPP_PROJ=$(CPP_PROJ) \/Zi \/O2 \/D "NDEBUG" \/D "FEAT_GUI_W32" \/D "DYNAMIC_GETTEXT" \/D "FEAT_OLE" \/Fd.\\oleRel\/ \/Fo.\\oleRel\/$/;"	m
CPP_PROJ	src/Make_ivc.mak	/^CPP_PROJ=$(CPP_PROJ) \/Zi \/O2 \/D "NDEBUG" \/D "FEAT_GUI_W32" \/Fd.\\gRel\/ \/Fo.\\gRel\/$/;"	m
CPP_PROJ	src/Make_ivc.mak	/^CPP_PROJ=$(CPP_PROJ) \/Zi \/O2 \/D "NDEBUG" \/Fd.\\Rel\/ \/Fo.\\Rel\/$/;"	m
CPP_PROJ	src/Make_ivc.mak	/^CPP_PROJ=$(CPP_PROJ) \/Zi \/Od \/D "_DEBUG" \/D "FEAT_GUI_W32" \/D "DYNAMIC_GETTEXT" \/D "FEAT_OLE" \/Fd.\\oleDbg\/ \/Fo.\\oleDbg\/$/;"	m
CPP_PROJ	src/Make_ivc.mak	/^CPP_PROJ=$(CPP_PROJ) \/Zi \/Od \/D "_DEBUG" \/D "FEAT_GUI_W32" \/Fd.\\gDbg\/ \/Fo.\\gDbg\/$/;"	m
CPP_PROJ	src/Make_ivc.mak	/^CPP_PROJ=$(CPP_PROJ) \/Zi \/Od \/D "_DEBUG" \/Fd.\\Dbg\/ \/Fo.\\Dbg\/$/;"	m
CPP_PROJ	src/VisVim/VisVim.mak	/^CPP_PROJ= \/MD \/O2 \/D "NDEBUG" \/I.\\Release$/;"	m
CPP_PROJ	src/VisVim/VisVim.mak	/^CPP_PROJ= \/MDd \/Gm \/Zi \/Od \/D "_DEBUG" \/I.\\Debug \/Fd"$(INTDIR)\/"$/;"	m
CPP_PROJ	src/VisVim/VisVim.mak	/^CPP_PROJ=$(CPP_PROJ) \/nologo \/W3 \/GX \/D "WIN32" \/D "_WINDOWS" \/D "_WINDLL" \/D "_AFXDLL" \/D "_USRDLL" \/c \/Fo"$(INTDIR)\/"$/;"	m
CPROTO	src/Makefile	/^CPROTO = cproto $(PROTO_FLAGS) -DPROTO \\$/;"	m
CPT_ABBR	src/structs.h	2452;"	d
CPT_COUNT	src/structs.h	2456;"	d
CPT_INFO	src/structs.h	2455;"	d
CPT_KIND	src/structs.h	2454;"	d
CPT_MENU	src/structs.h	2453;"	d
CPU	src/Make_mvc.mak	/^CPU = $(PROCESSOR_ARCHITECTURE)$/;"	m
CPU	src/Make_mvc.mak	/^CPU = i386$/;"	m
CPU	src/Make_mvc.mak	/^CPU = ix86$/;"	m
CPU	src/Make_sas.mak	/^CPU=68000$/;"	m
CPUARG	src/Make_bc5.mak	/^CPUARG = -$(CPUNR)$/;"	m
CPUARG	src/Make_mvc.mak	/^CPUARG = \/G3$/;"	m
CPUARG	src/Make_mvc.mak	/^CPUARG = \/G4$/;"	m
CPUARG	src/Make_mvc.mak	/^CPUARG = \/G5$/;"	m
CPUARG	src/Make_mvc.mak	/^CPUARG = \/G6$/;"	m
CPUARG	src/Make_mvc.mak	/^CPUARG = \/G7 \/arch:SSE2$/;"	m
CPUARG	src/Make_mvc.mak	/^CPUARG = \/arch:SSE2$/;"	m
CPUARG	src/Make_mvc.mak	/^CPUARG =$/;"	m
CPUNR	src/Make_bc5.mak	/^CPUNR = 3$/;"	m
CPUNR	src/Make_bc5.mak	/^CPUNR = 4$/;"	m
CPUNR	src/Make_bc5.mak	/^CPUNR = 5$/;"	m
CPUNR	src/Make_bc5.mak	/^CPUNR = 6$/;"	m
CP_UTF8	src/mbyte.c	426;"	d	file:
CR	runtime/optwin.vim	/^fun! <SID>CR()$/;"	f
CRC32	src/misc2.c	3739;"	d	file:
CREATE_DUMMY_FILE	src/memline.c	4164;"	d	file:
CROSS	src/GvimExt/Make_ming.mak	/^CROSS = no$/;"	m
CROSS	src/Make_ming.mak	/^CROSS=no$/;"	m
CROSS_COMPILE	src/Make_cyg.mak	/^CROSS_COMPILE =$/;"	m
CROSS_COMPILE	src/Make_ming.mak	/^CROSS_COMPILE = i586-pc-mingw32msvc-$/;"	m
CROSS_COMPILE	src/Make_ming.mak	/^CROSS_COMPILE =$/;"	m
CRV_GET	src/term.c	110;"	d	file:
CRV_GOT	src/term.c	112;"	d	file:
CRV_SENT	src/term.c	111;"	d	file:
CRYPT_MAGIC_LEN	src/fileio.c	39;"	d	file:
CRYPT_SALT_LEN_MAX	src/fileio.c	45;"	d	file:
CRYPT_SEED_LEN_MAX	src/fileio.c	46;"	d	file:
CSCOPE	src/Make_bc5.mak	/^CSCOPE = yes$/;"	m
CSCOPE	src/Make_cyg.mak	/^CSCOPE = yes$/;"	m
CSCOPE	src/Make_ming.mak	/^CSCOPE=yes$/;"	m
CSCOPE	src/Make_mvc.mak	/^CSCOPE = yes$/;"	m
CSCOPE_DBFILE	src/if_cscope.h	29;"	d
CSCOPE_DEFS	src/Make_mvc.mak	/^CSCOPE_DEFS  = -DFEAT_CSCOPE$/;"	m
CSCOPE_FAILURE	src/if_cscope.h	27;"	d
CSCOPE_INCL	src/Make_mvc.mak	/^CSCOPE_INCL  = if_cscope.h$/;"	m
CSCOPE_OBJ	src/Make_mvc.mak	/^CSCOPE_OBJ   = $(OBJDIR)\/if_cscope.obj$/;"	m
CSCOPE_PROMPT	src/if_cscope.h	30;"	d
CSCOPE_SUCCESS	src/if_cscope.h	26;"	d
CSF_ACTIVE	src/structs.h	699;"	d
CSF_CAUGHT	src/structs.h	707;"	d
CSF_ELSE	src/structs.h	700;"	d
CSF_FINALLY	src/structs.h	705;"	d
CSF_FOR	src/structs.h	702;"	d
CSF_SILENT	src/structs.h	708;"	d
CSF_THROWN	src/structs.h	706;"	d
CSF_TRUE	src/structs.h	698;"	d
CSF_TRY	src/structs.h	704;"	d
CSF_WHILE	src/structs.h	701;"	d
CSH	runtime/filetype.vim	/^func! s:CSH()$/;"	f
CSI	src/ascii.h	121;"	d
CSI	src/ascii.h	37;"	d
CSIDL_COMMON_DESKTOPDIRECTORY	src/dosinst.h	228;"	d
CSIDL_COMMON_PROGRAMS	src/dosinst.h	225;"	d
CSI_STR	src/ascii.h	122;"	d
CSI_STR	src/ascii.h	38;"	d
CSL_HAD_CONT	src/structs.h	730;"	d
CSL_HAD_ENDLOOP	src/structs.h	729;"	d
CSL_HAD_FINA	src/structs.h	731;"	d
CSL_HAD_LOOP	src/structs.h	728;"	d
CSQF_CMDS	src/option.h	396;"	d
CSQF_FLAGS	src/option.h	397;"	d
CSREAD_BUFSIZE	src/if_cscope.c	698;"	d	file:
CSS1	runtime/syntax/2html.vim	/^function! s:CSS1(id)$/;"	f
CSTACK_LEN	src/structs.h	675;"	d
CSTP_BREAK	src/structs.h	720;"	d
CSTP_CONTINUE	src/structs.h	721;"	d
CSTP_ERROR	src/structs.h	717;"	d
CSTP_FINISH	src/structs.h	723;"	d
CSTP_INTERRUPT	src/structs.h	718;"	d
CSTP_NONE	src/structs.h	716;"	d
CSTP_RETURN	src/structs.h	722;"	d
CSTP_THROW	src/structs.h	719;"	d
CS_B5	src/hardcopy.c	1140;"	d	file:
CS_CNS_PLANE_1	src/hardcopy.c	1137;"	d	file:
CS_CNS_PLANE_1_2	src/hardcopy.c	1139;"	d	file:
CS_CNS_PLANE_2	src/hardcopy.c	1138;"	d	file:
CS_CP932	src/hardcopy.c	1079;"	d	file:
CS_DLHKL	src/hardcopy.c	1147;"	d	file:
CS_DLHKS	src/hardcopy.c	1148;"	d	file:
CS_ETEN	src/hardcopy.c	1141;"	d	file:
CS_GBK	src/hardcopy.c	1112;"	d	file:
CS_GBK2K	src/hardcopy.c	1109;"	d	file:
CS_GBT_12345_90	src/hardcopy.c	1108;"	d	file:
CS_GBT_90_MAC	src/hardcopy.c	1111;"	d	file:
CS_GB_2312_80	src/hardcopy.c	1107;"	d	file:
CS_HK_GCCS	src/hardcopy.c	1142;"	d	file:
CS_HK_SCS	src/hardcopy.c	1143;"	d	file:
CS_HK_SCS_ETEN	src/hardcopy.c	1144;"	d	file:
CS_JIS_C_1978	src/hardcopy.c	1074;"	d	file:
CS_JIS_X_1983	src/hardcopy.c	1075;"	d	file:
CS_JIS_X_1990	src/hardcopy.c	1076;"	d	file:
CS_KANJITALK6	src/hardcopy.c	1080;"	d	file:
CS_KANJITALK7	src/hardcopy.c	1081;"	d	file:
CS_KR_ISO10646	src/hardcopy.c	1186;"	d	file:
CS_KR_MAC	src/hardcopy.c	1184;"	d	file:
CS_KR_X_1992	src/hardcopy.c	1183;"	d	file:
CS_KR_X_1992_MS	src/hardcopy.c	1185;"	d	file:
CS_MSWINDOWS	src/hardcopy.c	1078;"	d	file:
CS_MTHKL	src/hardcopy.c	1145;"	d	file:
CS_MTHKS	src/hardcopy.c	1146;"	d	file:
CS_NEC	src/hardcopy.c	1077;"	d	file:
CS_SC_ISO10646	src/hardcopy.c	1113;"	d	file:
CS_SC_MAC	src/hardcopy.c	1110;"	d	file:
CS_TC_ISO10646	src/hardcopy.c	1149;"	d	file:
CShellExt	src/GvimExt/gvimext.cpp	/^CShellExt::CShellExt()$/;"	f	class:CShellExt	signature:()
CShellExt	src/GvimExt/gvimext.h	/^    CShellExt();$/;"	p	class:CShellExt	access:public	signature:()
CShellExt	src/GvimExt/gvimext.h	/^class CShellExt : public IContextMenu,$/;"	c	inherits:IContextMenu,IShellExtInit
CShellExt::AddRef	src/GvimExt/gvimext.cpp	/^STDMETHODIMP_(ULONG) CShellExt::AddRef()$/;"	f	class:CShellExt	signature:()
CShellExt::AddRef	src/GvimExt/gvimext.h	/^    STDMETHODIMP_(ULONG) AddRef();$/;"	p	class:CShellExt	access:public	signature:()
CShellExt::CShellExt	src/GvimExt/gvimext.cpp	/^CShellExt::CShellExt()$/;"	f	class:CShellExt	signature:()
CShellExt::CShellExt	src/GvimExt/gvimext.h	/^    CShellExt();$/;"	p	class:CShellExt	access:public	signature:()
CShellExt::EnumWindowsProc	src/GvimExt/gvimext.cpp	/^BOOL CALLBACK CShellExt::EnumWindowsProc(HWND hWnd, LPARAM lParam)$/;"	f	class:CShellExt	signature:(HWND hWnd, LPARAM lParam)
CShellExt::EnumWindowsProc	src/GvimExt/gvimext.h	/^    static BOOL CALLBACK EnumWindowsProc(HWND hWnd, LPARAM lParam);$/;"	p	class:CShellExt	access:protected	signature:(HWND hWnd, LPARAM lParam)
CShellExt::GetCommandString	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::GetCommandString(UINT_PTR  \/* idCmd *\/,$/;"	f	class:CShellExt	signature:(UINT_PTR , UINT uFlags, UINT FAR * , LPSTR pszName, UINT cchMax)
CShellExt::GetCommandString	src/GvimExt/gvimext.h	/^    STDMETHODIMP GetCommandString(UINT_PTR idCmd,$/;"	p	class:CShellExt	access:public	signature:(UINT_PTR idCmd, UINT uFlags, UINT FAR *reserved, LPSTR pszName, UINT cchMax)
CShellExt::Initialize	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::Initialize(LPCITEMIDLIST  \/* pIDFolder *\/,$/;"	f	class:CShellExt	signature:(LPCITEMIDLIST , LPDATAOBJECT pDataObj, HKEY )
CShellExt::Initialize	src/GvimExt/gvimext.h	/^    STDMETHODIMP Initialize(LPCITEMIDLIST pIDFolder,$/;"	p	class:CShellExt	access:public	signature:(LPCITEMIDLIST pIDFolder, LPDATAOBJECT pDataObj, HKEY hKeyID)
CShellExt::InvokeCommand	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::InvokeCommand(LPCMINVOKECOMMANDINFO lpcmi)$/;"	f	class:CShellExt	signature:(LPCMINVOKECOMMANDINFO lpcmi)
CShellExt::InvokeCommand	src/GvimExt/gvimext.h	/^    STDMETHODIMP InvokeCommand(LPCMINVOKECOMMANDINFO lpcmi);$/;"	p	class:CShellExt	access:public	signature:(LPCMINVOKECOMMANDINFO lpcmi)
CShellExt::InvokeGvim	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::InvokeGvim(HWND hParent,$/;"	f	class:CShellExt	signature:(HWND hParent, LPCSTR , LPCSTR , LPCSTR , int )
CShellExt::InvokeGvim	src/GvimExt/gvimext.h	/^    STDMETHODIMP InvokeGvim(HWND hParent,$/;"	p	class:CShellExt	access:protected	signature:(HWND hParent, LPCSTR pszWorkingDir, LPCSTR pszCmd, LPCSTR pszParam, int iShowCmd)
CShellExt::InvokeSingleGvim	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::InvokeSingleGvim(HWND hParent,$/;"	f	class:CShellExt	signature:(HWND hParent, LPCSTR , LPCSTR , LPCSTR , int , int useDiff)
CShellExt::InvokeSingleGvim	src/GvimExt/gvimext.h	/^    STDMETHODIMP InvokeSingleGvim(HWND hParent,$/;"	p	class:CShellExt	access:protected	signature:(HWND hParent, LPCSTR pszWorkingDir, LPCSTR pszCmd, LPCSTR pszParam, int iShowCmd, int useDiff)
CShellExt::PushToWindow	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::PushToWindow(HWND  \/* hParent *\/,$/;"	f	class:CShellExt	signature:(HWND , LPCSTR , LPCSTR , LPCSTR , int , int idHWnd)
CShellExt::PushToWindow	src/GvimExt/gvimext.h	/^    STDMETHODIMP PushToWindow(HWND hParent,$/;"	p	class:CShellExt	access:protected	signature:(HWND hParent, LPCSTR pszWorkingDir, LPCSTR pszCmd, LPCSTR pszParam, int iShowCmd, int idHWnd)
CShellExt::QueryContextMenu	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::QueryContextMenu(HMENU hMenu,$/;"	f	class:CShellExt	signature:(HMENU hMenu, UINT indexMenu, UINT idCmdFirst, UINT , UINT )
CShellExt::QueryContextMenu	src/GvimExt/gvimext.h	/^    STDMETHODIMP QueryContextMenu(HMENU hMenu,$/;"	p	class:CShellExt	access:public	signature:(HMENU hMenu, UINT indexMenu, UINT idCmdFirst, UINT idCmdLast, UINT uFlags)
CShellExt::QueryInterface	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::QueryInterface(REFIID riid, LPVOID FAR *ppv)$/;"	f	class:CShellExt	signature:(REFIID riid, LPVOID FAR *ppv)
CShellExt::QueryInterface	src/GvimExt/gvimext.h	/^    STDMETHODIMP QueryInterface(REFIID, LPVOID FAR *);$/;"	p	class:CShellExt	access:public	signature:(REFIID, LPVOID FAR *)
CShellExt::Release	src/GvimExt/gvimext.cpp	/^STDMETHODIMP_(ULONG) CShellExt::Release()$/;"	f	class:CShellExt	signature:()
CShellExt::Release	src/GvimExt/gvimext.h	/^    STDMETHODIMP_(ULONG) Release();$/;"	p	class:CShellExt	access:public	signature:()
CShellExt::m_cRef	src/GvimExt/gvimext.h	/^    ULONG	 m_cRef;$/;"	m	class:CShellExt	access:protected
CShellExt::m_cntOfHWnd	src/GvimExt/gvimext.h	/^    int		 m_cntOfHWnd;$/;"	m	class:CShellExt	access:public
CShellExt::m_edit_existing_off	src/GvimExt/gvimext.h	/^    UINT	 m_edit_existing_off;$/;"	m	class:CShellExt	access:protected
CShellExt::m_hWnd	src/GvimExt/gvimext.h	/^    HWND	 m_hWnd[MAX_HWND];$/;"	m	class:CShellExt	access:public
CShellExt::m_pDataObj	src/GvimExt/gvimext.h	/^    LPDATAOBJECT m_pDataObj;$/;"	m	class:CShellExt	access:protected
CShellExt::~CShellExt	src/GvimExt/gvimext.cpp	/^CShellExt::~CShellExt()$/;"	f	class:CShellExt	signature:()
CShellExt::~CShellExt	src/GvimExt/gvimext.h	/^    ~CShellExt();$/;"	p	class:CShellExt	access:public	signature:()
CShellExtClassFactory	src/GvimExt/gvimext.cpp	/^CShellExtClassFactory::CShellExtClassFactory()$/;"	f	class:CShellExtClassFactory	signature:()
CShellExtClassFactory	src/GvimExt/gvimext.h	/^	CShellExtClassFactory();$/;"	p	class:CShellExtClassFactory	access:public	signature:()
CShellExtClassFactory	src/GvimExt/gvimext.h	/^class CShellExtClassFactory : public IClassFactory$/;"	c	inherits:IClassFactory
CShellExtClassFactory::AddRef	src/GvimExt/gvimext.cpp	/^STDMETHODIMP_(ULONG) CShellExtClassFactory::AddRef()$/;"	f	class:CShellExtClassFactory	signature:()
CShellExtClassFactory::AddRef	src/GvimExt/gvimext.h	/^	STDMETHODIMP_(ULONG)	AddRef();$/;"	p	class:CShellExtClassFactory	access:public	signature:()
CShellExtClassFactory::CShellExtClassFactory	src/GvimExt/gvimext.cpp	/^CShellExtClassFactory::CShellExtClassFactory()$/;"	f	class:CShellExtClassFactory	signature:()
CShellExtClassFactory::CShellExtClassFactory	src/GvimExt/gvimext.h	/^	CShellExtClassFactory();$/;"	p	class:CShellExtClassFactory	access:public	signature:()
CShellExtClassFactory::CreateInstance	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExtClassFactory::CreateInstance(LPUNKNOWN pUnkOuter,$/;"	f	class:CShellExtClassFactory	signature:(LPUNKNOWN pUnkOuter, REFIID riid, LPVOID *ppvObj)
CShellExtClassFactory::CreateInstance	src/GvimExt/gvimext.h	/^	STDMETHODIMP		CreateInstance(LPUNKNOWN, REFIID, LPVOID FAR *);$/;"	p	class:CShellExtClassFactory	access:public	signature:(LPUNKNOWN, REFIID, LPVOID FAR *)
CShellExtClassFactory::LockServer	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExtClassFactory::LockServer(BOOL  \/* fLock *\/)$/;"	f	class:CShellExtClassFactory	signature:(BOOL )
CShellExtClassFactory::LockServer	src/GvimExt/gvimext.h	/^	STDMETHODIMP		LockServer(BOOL);$/;"	p	class:CShellExtClassFactory	access:public	signature:(BOOL)
CShellExtClassFactory::QueryInterface	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExtClassFactory::QueryInterface(REFIID riid,$/;"	f	class:CShellExtClassFactory	signature:(REFIID riid, LPVOID FAR *ppv)
CShellExtClassFactory::QueryInterface	src/GvimExt/gvimext.h	/^	STDMETHODIMP			QueryInterface(REFIID, LPVOID FAR *);$/;"	p	class:CShellExtClassFactory	access:public	signature:(REFIID, LPVOID FAR *)
CShellExtClassFactory::Release	src/GvimExt/gvimext.cpp	/^STDMETHODIMP_(ULONG) CShellExtClassFactory::Release()$/;"	f	class:CShellExtClassFactory	signature:()
CShellExtClassFactory::Release	src/GvimExt/gvimext.h	/^	STDMETHODIMP_(ULONG)	Release();$/;"	p	class:CShellExtClassFactory	access:public	signature:()
CShellExtClassFactory::m_cRef	src/GvimExt/gvimext.h	/^	ULONG	m_cRef;$/;"	m	class:CShellExtClassFactory	access:protected
CShellExtClassFactory::~CShellExtClassFactory	src/GvimExt/gvimext.cpp	/^CShellExtClassFactory::~CShellExtClassFactory()$/;"	f	class:CShellExtClassFactory	signature:()
CShellExtClassFactory::~CShellExtClassFactory	src/GvimExt/gvimext.h	/^	~CShellExtClassFactory();$/;"	p	class:CShellExtClassFactory	access:public	signature:()
CTAGS	src/Make_mvc.mak	/^CTAGS = ctags$/;"	m
CTERM_ATTR_ENTRY	src/syntax.c	8115;"	d	file:
CTRL	src/os_win32.c	485;"	d	file:
CTRL_F_STR	src/ascii.h	128;"	d
CTRL_F_STR	src/ascii.h	47;"	d
CTRL_H_STR	src/ascii.h	129;"	d
CTRL_H_STR	src/ascii.h	48;"	d
CTRL_V_STR	src/ascii.h	130;"	d
CTRL_V_STR	src/ascii.h	49;"	d
CTRL_X_CMDLINE	src/edit.c	32;"	d	file:
CTRL_X_DICTIONARY	src/edit.c	30;"	d	file:
CTRL_X_FILES	src/edit.c	25;"	d	file:
CTRL_X_FINISHED	src/edit.c	29;"	d	file:
CTRL_X_FUNCTION	src/edit.c	33;"	d	file:
CTRL_X_LOCAL_MSG	src/edit.c	36;"	d	file:
CTRL_X_MSG	src/edit.c	38;"	d	file:
CTRL_X_NOT_DEFINED_YET	src/edit.c	22;"	d	file:
CTRL_X_OMNI	src/edit.c	34;"	d	file:
CTRL_X_PATH_DEFINES	src/edit.c	28;"	d	file:
CTRL_X_PATH_PATTERNS	src/edit.c	27;"	d	file:
CTRL_X_SCROLL	src/edit.c	23;"	d	file:
CTRL_X_SPELL	src/edit.c	35;"	d	file:
CTRL_X_TAGS	src/edit.c	26;"	d	file:
CTRL_X_THESAURUS	src/edit.c	31;"	d	file:
CTRL_X_WANT_IDENT	src/edit.c	20;"	d	file:
CTRL_X_WHOLE_LINE	src/edit.c	24;"	d	file:
CT_CELL_MASK	src/vim.h	1084;"	d
CT_FNAME_CHAR	src/vim.h	1087;"	d
CT_ID_CHAR	src/vim.h	1086;"	d
CT_PRINT_CHAR	src/vim.h	1085;"	d
CURSOR	src/regexp.c	226;"	d	file:
CURSOR_BAR_RIGHT	src/macros.h	250;"	d
CURSOR_MOVED	src/vim.h	1767;"	d
CURSOR_SHAPE	src/feature.h	1173;"	d
CUR_STATE	src/syntax.c	366;"	d	file:
CV	src/proto.h	274;"	d
CVim	src/if_ole.cpp	/^    CVim() : ref(0), typeinfo(0) {};$/;"	f	class:CVim	file:	access:private	signature:()
CVim	src/if_ole.cpp	/^class CVim : public IVim$/;"	c	file:	inherits:IVim
CVim::AddRef	src/if_ole.cpp	/^CVim::AddRef()$/;"	f	class:CVim	signature:()
CVim::CVim	src/if_ole.cpp	/^    CVim() : ref(0), typeinfo(0) {};$/;"	f	class:CVim	file:	access:private	signature:()
CVim::Create	src/if_ole.cpp	/^    static CVim *Create(int *pbDoRestart);$/;"	p	class:CVim	file:	access:public	signature:(int *pbDoRestart)
CVim::Create	src/if_ole.cpp	/^CVim *CVim::Create(int *pbDoRestart)$/;"	f	class:CVim	signature:(int *pbDoRestart)
CVim::Eval	src/if_ole.cpp	/^    STDMETHOD(Eval)(BSTR expr, BSTR *result);$/;"	p	class:CVim	file:	access:public	signature:(BSTR expr, BSTR *result)
CVim::Eval	src/if_ole.cpp	/^CVim::Eval(BSTR expr, BSTR *result)$/;"	f	class:CVim	signature:(BSTR expr, BSTR *result)
CVim::GetHwnd	src/if_ole.cpp	/^    STDMETHOD(GetHwnd)(UINT_PTR *result);$/;"	p	class:CVim	file:	access:public	signature:(UINT_PTR *result)
CVim::GetHwnd	src/if_ole.cpp	/^CVim::GetHwnd(UINT_PTR *result)$/;"	f	class:CVim	signature:(UINT_PTR *result)
CVim::GetIDsOfNames	src/if_ole.cpp	/^    STDMETHOD(GetIDsOfNames)(const IID &iid, OLECHAR **names, UINT n, LCID, DISPID *dispids);$/;"	p	class:CVim	file:	access:public	signature:(const IID &iid, OLECHAR **names, UINT n, LCID, DISPID *dispids)
CVim::GetIDsOfNames	src/if_ole.cpp	/^CVim::GetIDsOfNames($/;"	f	class:CVim	signature:( const IID &iid, OLECHAR **names, UINT n, LCID, DISPID *dispids)
CVim::GetTypeInfo	src/if_ole.cpp	/^    STDMETHOD(GetTypeInfo)(UINT iTypeInfo, LCID, ITypeInfo **ppITypeInfo);$/;"	p	class:CVim	file:	access:public	signature:(UINT iTypeInfo, LCID, ITypeInfo **ppITypeInfo)
CVim::GetTypeInfo	src/if_ole.cpp	/^CVim::GetTypeInfo(UINT iTypeInfo, LCID, ITypeInfo **ppITypeInfo)$/;"	f	class:CVim	signature:(UINT iTypeInfo, LCID, ITypeInfo **ppITypeInfo)
CVim::GetTypeInfoCount	src/if_ole.cpp	/^    STDMETHOD(GetTypeInfoCount)(UINT *pCount);$/;"	p	class:CVim	file:	access:public	signature:(UINT *pCount)
CVim::GetTypeInfoCount	src/if_ole.cpp	/^CVim::GetTypeInfoCount(UINT *pCount)$/;"	f	class:CVim	signature:(UINT *pCount)
CVim::Invoke	src/if_ole.cpp	/^    STDMETHOD(Invoke)(DISPID member, const IID &iid, LCID, WORD flags, DISPPARAMS *dispparams, VARIANT *result, EXCEPINFO *excepinfo, UINT *argerr);$/;"	p	class:CVim	file:	access:public	signature:(DISPID member, const IID &iid, LCID, WORD flags, DISPPARAMS *dispparams, VARIANT *result, EXCEPINFO *excepinfo, UINT *argerr)
CVim::Invoke	src/if_ole.cpp	/^CVim::Invoke($/;"	f	class:CVim	signature:( DISPID member, const IID &iid, LCID, WORD flags, DISPPARAMS *dispparams, VARIANT *result, EXCEPINFO *excepinfo, UINT *argerr)
CVim::QueryInterface	src/if_ole.cpp	/^    STDMETHOD(QueryInterface)(REFIID riid, void ** ppv);$/;"	p	class:CVim	file:	access:public	signature:(REFIID riid, void ** ppv)
CVim::QueryInterface	src/if_ole.cpp	/^CVim::QueryInterface(REFIID riid, void **ppv)$/;"	f	class:CVim	signature:(REFIID riid, void **ppv)
CVim::Release	src/if_ole.cpp	/^CVim::Release()$/;"	f	class:CVim	signature:()
CVim::STDMETHOD_	src/if_ole.cpp	/^    STDMETHOD_(unsigned long, AddRef)(void);$/;"	p	class:CVim	file:	access:public	signature:(unsigned long, AddRef)
CVim::STDMETHOD_	src/if_ole.cpp	/^    STDMETHOD_(unsigned long, Release)(void);$/;"	p	class:CVim	file:	access:public	signature:(unsigned long, Release)
CVim::SendKeys	src/if_ole.cpp	/^    STDMETHOD(SendKeys)(BSTR keys);$/;"	p	class:CVim	file:	access:public	signature:(BSTR keys)
CVim::SendKeys	src/if_ole.cpp	/^CVim::SendKeys(BSTR keys)$/;"	f	class:CVim	signature:(BSTR keys)
CVim::SetForeground	src/if_ole.cpp	/^    STDMETHOD(SetForeground)(void);$/;"	p	class:CVim	file:	access:public	signature:(void)
CVim::SetForeground	src/if_ole.cpp	/^CVim::SetForeground(void)$/;"	f	class:CVim	signature:(void)
CVim::ref	src/if_ole.cpp	/^    unsigned long ref;$/;"	m	class:CVim	file:	access:private
CVim::typeinfo	src/if_ole.cpp	/^    ITypeInfo *typeinfo;$/;"	m	class:CVim	file:	access:private
CVim::~CVim	src/if_ole.cpp	/^    ~CVim();$/;"	p	class:CVim	file:	access:public	signature:()
CVim::~CVim	src/if_ole.cpp	/^CVim::~CVim()$/;"	f	class:CVim	signature:()
CVimCF	src/if_ole.cpp	/^    CVimCF() : ref(0) {};$/;"	f	class:CVimCF	file:	access:private	signature:()
CVimCF	src/if_ole.cpp	/^class CVimCF : public IClassFactory$/;"	c	file:	inherits:IClassFactory
CVimCF::AddRef	src/if_ole.cpp	/^CVimCF::AddRef()$/;"	f	class:CVimCF	signature:()
CVimCF::CVimCF	src/if_ole.cpp	/^    CVimCF() : ref(0) {};$/;"	f	class:CVimCF	file:	access:private	signature:()
CVimCF::Create	src/if_ole.cpp	/^    static CVimCF *Create();$/;"	p	class:CVimCF	file:	access:public	signature:()
CVimCF::Create	src/if_ole.cpp	/^CVimCF *CVimCF::Create()$/;"	f	class:CVimCF	signature:()
CVimCF::CreateInstance	src/if_ole.cpp	/^    STDMETHOD(CreateInstance)(IUnknown *punkOuter, REFIID riid, void ** ppv);$/;"	p	class:CVimCF	file:	access:public	signature:(IUnknown *punkOuter, REFIID riid, void ** ppv)
CVimCF::CreateInstance	src/if_ole.cpp	/^CVimCF::CreateInstance(IUnknown *punkOuter, REFIID riid, void **ppv)$/;"	f	class:CVimCF	signature:(IUnknown *punkOuter, REFIID riid, void **ppv)
CVimCF::LockServer	src/if_ole.cpp	/^    STDMETHOD(LockServer)(BOOL lock);$/;"	p	class:CVimCF	file:	access:public	signature:(BOOL lock)
CVimCF::LockServer	src/if_ole.cpp	/^CVimCF::LockServer(BOOL lock)$/;"	f	class:CVimCF	signature:(BOOL lock)
CVimCF::QueryInterface	src/if_ole.cpp	/^    STDMETHOD(QueryInterface)(REFIID riid, void ** ppv);$/;"	p	class:CVimCF	file:	access:public	signature:(REFIID riid, void ** ppv)
CVimCF::QueryInterface	src/if_ole.cpp	/^CVimCF::QueryInterface(REFIID riid, void **ppv)$/;"	f	class:CVimCF	signature:(REFIID riid, void **ppv)
CVimCF::Release	src/if_ole.cpp	/^CVimCF::Release()$/;"	f	class:CVimCF	signature:()
CVimCF::STDMETHOD_	src/if_ole.cpp	/^    STDMETHOD_(unsigned long, AddRef)(void);$/;"	p	class:CVimCF	file:	access:public	signature:(unsigned long, AddRef)
CVimCF::STDMETHOD_	src/if_ole.cpp	/^    STDMETHOD_(unsigned long, Release)(void);$/;"	p	class:CVimCF	file:	access:public	signature:(unsigned long, Release)
CVimCF::ref	src/if_ole.cpp	/^    unsigned long ref;$/;"	m	class:CVimCF	file:	access:private
CVisVimApp	src/VisVim/VisVim.cpp	/^	CVisVimApp ();$/;"	p	class:CVisVimApp	file:	access:public	signature:()
CVisVimApp	src/VisVim/VisVim.cpp	/^CVisVimApp::CVisVimApp ()$/;"	f	class:CVisVimApp	signature:()
CVisVimApp	src/VisVim/VisVim.cpp	/^class CVisVimApp : public CWinApp$/;"	c	file:	inherits:CWinApp
CVisVimApp::CVisVimApp	src/VisVim/VisVim.cpp	/^	CVisVimApp ();$/;"	p	class:CVisVimApp	file:	access:public	signature:()
CVisVimApp::CVisVimApp	src/VisVim/VisVim.cpp	/^CVisVimApp::CVisVimApp ()$/;"	f	class:CVisVimApp	signature:()
CVisVimApp::ExitInstance	src/VisVim/VisVim.cpp	/^	virtual int ExitInstance ();$/;"	p	class:CVisVimApp	file:	access:public	signature:()
CVisVimApp::ExitInstance	src/VisVim/VisVim.cpp	/^int CVisVimApp::ExitInstance ()$/;"	f	class:CVisVimApp	signature:()
CVisVimApp::InitInstance	src/VisVim/VisVim.cpp	/^	virtual BOOL InitInstance ();$/;"	p	class:CVisVimApp	file:	access:public	signature:()
CVisVimApp::InitInstance	src/VisVim/VisVim.cpp	/^BOOL CVisVimApp::InitInstance ()$/;"	f	class:CVisVimApp	signature:()
CWD	runtime/tools/ccfilter.c	/^char	       CWD[1024];$/;"	v
CW_GetText	src/gui_mac.c	/^struct CW_GetText \/* for handling class 'KAHL', event 'GTTX', keyDirectObject typeChar*\/$/;"	s	file:
CW_GetText	src/gui_mac.c	/^typedef struct CW_GetText CW_GetText;$/;"	t	typeref:struct:CW_GetText	file:
CW_GetText::theDate	src/gui_mac.c	/^    long *theDate;  \/* where to put the modification date\/time *\/$/;"	m	struct:CW_GetText	file:	access:public
CW_GetText::theFile	src/gui_mac.c	/^    FSSpec theFile; \/* identifies the file *\/$/;"	m	struct:CW_GetText	file:	access:public
CW_GetText::theText	src/gui_mac.c	/^    Handle theText; \/* the location where you return the text (must be resized properly) *\/$/;"	m	struct:CW_GetText	file:	access:public
CW_GetText::unused	src/gui_mac.c	/^    long *unused;   \/* 0 (not used) *\/$/;"	m	struct:CW_GetText	file:	access:public
CXX	src/GvimExt/Make_ming.mak	/^CXX := $(CROSS_COMPILE)g++$/;"	m
CXXFLAGS	src/GvimExt/Make_ming.mak	/^CXXFLAGS := -O2 -mno-cygwin -fvtable-thunks$/;"	m
CXXFLAGS	src/GvimExt/Make_ming.mak	/^CXXFLAGS := -O2 -mno-cygwin$/;"	m
CYGWIN	src/xxd/xxd.c	68;"	d	file:
CancelData	src/gui_gtk.c	87;"	d	file:
CdlAsignment	runtime/indent/cdl.vim	/^fun! CdlAsignment(lnum, line)$/;"	f
CdlGetIndent	runtime/indent/cdl.vim	/^fun! CdlGetIndent(lnum)$/;"	f
CenterWindow	src/gui_w48.c	/^CenterWindow($/;"	f	file:	signature:( HWND hwndChild, HWND hwndParent)
CfHiLink	runtime/syntax/cf.vim	/^command -nargs=+ CfHiLink hi def link <args>$/;"	c
CharOrd	src/ascii.h	19;"	d
CharOrd	src/ascii.h	99;"	d
CharOrdLow	src/ascii.h	20;"	d
CharOrdLow	src/ascii.h	97;"	d
CharOrdUp	src/ascii.h	21;"	d
CharOrdUp	src/ascii.h	98;"	d
CharOrd__	src/ascii.h	96;"	d
Check	src/gui_at_sb.c	656;"	d	file:
Check	src/gui_at_sb.c	684;"	d	file:
CheckBuffer	src/if_py_both.h	/^CheckBuffer(BufferObject *this)$/;"	f	signature:(BufferObject *this)
CheckConfiguration	src/testdir/test49.vim	/^    function! CheckConfiguration(type)	    " type is "error" or "interrupt"$/;"	f
CheckThrow	src/testdir/test49.vim	/^    function! CheckThrow(Type)$/;"	f
CheckToIgnoreRightParan	runtime/indent/sqlanywhere.vim	/^function s:CheckToIgnoreRightParan( prev_lnum, num_levels )$/;"	f
CheckWindow	src/if_py_both.h	/^CheckWindow(WindowObject *this)$/;"	f	signature:(WindowObject *this)
Check_inp	runtime/filetype.vim	/^func! s:Check_inp()$/;"	f
ChgDir	runtime/autoload/vimball.vim	/^fun! s:ChgDir(newdir)$/;"	f
ChgDir	runtime/autoload/zip.vim	/^fun! s:ChgDir(newdir,errlvl,errmsg)$/;"	f
Chk_Abort	src/os_amiga.c	/^Chk_Abort(void)$/;"	f	signature:(void)
Chk_Abort	src/os_amiga.c	1415;"	d	file:
Choose	runtime/macros/matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
ClassInitialize	src/gui_at_sb.c	/^ClassInitialize()$/;"	f	file:
ClassInitialize	src/gui_at_sb.c	/^static void ClassInitialize __ARGS((void));$/;"	p	file:	signature:(void)
CleanUp	runtime/macros/matchit.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	f
CleanUpMessaging	src/os_mswin.c	/^CleanUpMessaging(void)$/;"	f	file:	signature:(void)
ClearConsoleBuffer	src/os_win32.c	/^ClearConsoleBuffer(WORD wAttribute)$/;"	f	file:	signature:(WORD wAttribute)
Clearstack	runtime/autoload/xmlcomplete.vim	/^function! s:Clearstack(sname)$/;"	f
CloseBug	runtime/ftplugin/debchangelog.vim	/^function CloseBug()$/;"	f
CmdException	src/testdir/test49.vim	/^command! CmdException  let g:exception  = v:exception$/;"	c
CmdThrowpoint	src/testdir/test49.vim	/^command! CmdThrowpoint let g:throwpoint = v:throwpoint$/;"	c
CobolIndentBlock	runtime/ftplugin/cobol.vim	/^function! CobolIndentBlock(shift)$/;"	f
Col	runtime/tools/ccfilter.c	/^unsigned long  Col;$/;"	v
Columns	src/globals.h	/^EXTERN long	Columns INIT(= 80);	\/* nr of columns in the screen *\/$/;"	v
Comment	runtime/ftplugin/cobol.vim	/^function! s:Comment(arg)$/;"	f
CompInheritOptsAt_gvim16dexe	src/Make_w16.mak	/^CompInheritOptsAt_gvim16dexe = \\$/;"	m
CompareEvents	src/gui_at_sb.c	/^CompareEvents(oldEvent, newEvent)$/;"	f	file:
CompilerSet	runtime/compiler/ant.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/bcc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/checkstyle.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/cs.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/cucumber.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/decada.vim	/^   command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/dot.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/fortran_F.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/fortran_cv.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/fortran_elf90.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/fortran_g77.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/fortran_lf95.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/fpc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/gnat.vim	/^   command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/hp_acc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/icc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/intel.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/irix5_c.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/irix5_cpp.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/javac.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/jikes.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/mips_c.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/mipspro_c89.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/mipspro_cpp.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/modelsim_vcom.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/neato.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/onsgmls.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/pbx.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/perl.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/php.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/pyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/se.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/splint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/tcl.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/tex.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/tidy.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/xmllint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	runtime/compiler/xmlwf.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
Component	runtime/tools/shtags.pl	/^Component:	$id[1]$/;"	l
ComposePath	runtime/autoload/netrw.vim	/^fun! s:ComposePath(base,subdir)$/;"	f
Connect	src/VisVim/Commands.h	/^		void Connect (IUnknown * pUnk)$/;"	f	class:CCommands::XEventHandler	access:public	signature:(IUnknown * pUnk)
ConnectToSniffEmacs	src/if_sniff.c	/^ConnectToSniffEmacs()$/;"	f	file:
ConnectToSniffEmacs	src/if_sniff.c	/^static int ConnectToSniffEmacs __ARGS((void));$/;"	p	file:	signature:(void)
ConsoleBuffer	src/os_win32.c	/^} ConsoleBuffer;$/;"	t	typeref:struct:ConsoleBufferStruct	file:
ConsoleBufferStruct	src/os_win32.c	/^typedef struct ConsoleBufferStruct$/;"	s	file:
ConsoleBufferStruct::Buffer	src/os_win32.c	/^    PCHAR_INFO			Buffer;$/;"	m	struct:ConsoleBufferStruct	file:	access:public
ConsoleBufferStruct::BufferSize	src/os_win32.c	/^    COORD			BufferSize;$/;"	m	struct:ConsoleBufferStruct	file:	access:public
ConsoleBufferStruct::Info	src/os_win32.c	/^    CONSOLE_SCREEN_BUFFER_INFO	Info;$/;"	m	struct:ConsoleBufferStruct	file:	access:public
ConsoleBufferStruct::IsValid	src/os_win32.c	/^    BOOL			IsValid;$/;"	m	struct:ConsoleBufferStruct	file:	access:public
ConvertToAnsi	src/VisVim/OleAut.cpp	/^char* ConvertToAnsi (OLECHAR* sUnicode)$/;"	f	signature:(OLECHAR* sUnicode)
ConvertToAnsi	src/VisVim/OleAut.h	/^    char* ConvertToAnsi (OLECHAR* sUnicode);$/;"	p	signature:(OLECHAR* sUnicode)
ConvertToAnsiBuf	src/VisVim/OleAut.cpp	/^char* ConvertToAnsiBuf (OLECHAR* sUnicode, char* BufAscii)$/;"	f	signature:(OLECHAR* sUnicode, char* BufAscii)
ConvertToAnsiBuf	src/VisVim/OleAut.h	/^    char* ConvertToAnsiBuf (OLECHAR* sUnicode, char* Buf);$/;"	p	signature:(OLECHAR* sUnicode, char* Buf)
ConvertToUnicode	src/VisVim/OleAut.cpp	/^OLECHAR* ConvertToUnicode (char* sAscii)$/;"	f	signature:(char* sAscii)
ConvertToUnicode	src/VisVim/OleAut.h	/^    OLECHAR* ConvertToUnicode (char* sAscii);$/;"	p	signature:(char* sAscii)
ConvertToUnicodeBuf	src/VisVim/OleAut.cpp	/^OLECHAR* ConvertToUnicodeBuf (char* sAscii, OLECHAR* BufUnicode)$/;"	f	signature:(char* sAscii, OLECHAR* BufUnicode)
ConvertToUnicodeBuf	src/VisVim/OleAut.h	/^    OLECHAR* ConvertToUnicodeBuf (char* sAscii, OLECHAR* Buf);$/;"	p	signature:(char* sAscii, OLECHAR* Buf)
Count	runtime/macros/matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
CountArgsInFormat	src/VisVim/OleAut.cpp	/^static bool CountArgsInFormat (LPCTSTR Format, UINT* nArgs);$/;"	p	file:	signature:(LPCTSTR Format, UINT* nArgs)
CountArgsInFormat	src/VisVim/OleAut.cpp	/^static bool CountArgsInFormat (LPCTSTR Format, UINT* pArgCount)$/;"	f	file:	signature:(LPCTSTR Format, UINT* pArgCount)
CountUnbalancedParan	runtime/indent/sqlanywhere.vim	/^function s:CountUnbalancedParan( line, paran_to_check )$/;"	f
CountWrapper	runtime/ftplugin/vhdl.vim	/^function! <SID>CountWrapper(cmd)$/;"	f
Create	src/if_ole.cpp	/^    static CVim *Create(int *pbDoRestart);$/;"	p	class:CVim	file:	access:public	signature:(int *pbDoRestart)
Create	src/if_ole.cpp	/^    static CVimCF *Create();$/;"	p	class:CVimCF	file:	access:public	signature:()
Create	src/if_ole.cpp	/^CVim *CVim::Create(int *pbDoRestart)$/;"	f	class:CVim	signature:(int *pbDoRestart)
Create	src/if_ole.cpp	/^CVimCF *CVimCF::Create()$/;"	f	class:CVimCF	signature:()
CreateGC	src/gui_at_sb.c	/^CreateGC(w)$/;"	f	file:
CreateInstance	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExtClassFactory::CreateInstance(LPUNKNOWN pUnkOuter,$/;"	f	class:CShellExtClassFactory	signature:(LPUNKNOWN pUnkOuter, REFIID riid, LPVOID *ppvObj)
CreateInstance	src/GvimExt/gvimext.h	/^	STDMETHODIMP		CreateInstance(LPUNKNOWN, REFIID, LPVOID FAR *);$/;"	p	class:CShellExtClassFactory	access:public	signature:(LPUNKNOWN, REFIID, LPVOID FAR *)
CreateInstance	src/if_ole.cpp	/^    STDMETHOD(CreateInstance)(IUnknown *punkOuter, REFIID riid, void ** ppv);$/;"	p	class:CVimCF	file:	access:public	signature:(IUnknown *punkOuter, REFIID riid, void ** ppv)
CreateInstance	src/if_ole.cpp	/^CVimCF::CreateInstance(IUnknown *punkOuter, REFIID riid, void **ppv)$/;"	f	class:CVimCF	signature:(IUnknown *punkOuter, REFIID riid, void **ppv)
CreateObject	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::CreateObject (char* ProgId)$/;"	f	class:COleAutomationControl	signature:(char* ProgId)
CreateObject	src/VisVim/OleAut.h	/^	bool CreateObject (char* ProgId);$/;"	p	class:COleAutomationControl	access:public	signature:(char* ProgId)
CreateToolbar	src/vimtbar.h	/^HWND WINAPI CreateToolbar(HWND hwnd, DWORD ws, WORD wID, int nBitmaps,$/;"	p	signature:(HWND hwnd, DWORD ws, WORD wID, int nBitmaps, HINSTANCE hBMInst, WORD wBMID, LPCTBBUTTON lpButtons, int iNumButtons)
CtrlChar	src/ascii.h	168;"	d
CtrlCharTable	src/os_unix.c	/^char CtrlCharTable[]=$/;"	v
CtrlTable	src/os_unix.c	/^char CtrlTable[] =$/;"	v
Ctrl_A	src/ascii.h	133;"	d
Ctrl_A	src/ascii.h	52;"	d
Ctrl_AT	src/ascii.h	132;"	d
Ctrl_AT	src/ascii.h	51;"	d
Ctrl_B	src/ascii.h	134;"	d
Ctrl_B	src/ascii.h	53;"	d
Ctrl_BSL	src/ascii.h	161;"	d
Ctrl_BSL	src/ascii.h	79;"	d
Ctrl_C	src/ascii.h	135;"	d
Ctrl_C	src/ascii.h	54;"	d
Ctrl_D	src/ascii.h	136;"	d
Ctrl_D	src/ascii.h	55;"	d
Ctrl_E	src/ascii.h	137;"	d
Ctrl_E	src/ascii.h	56;"	d
Ctrl_F	src/ascii.h	138;"	d
Ctrl_F	src/ascii.h	57;"	d
Ctrl_G	src/ascii.h	139;"	d
Ctrl_G	src/ascii.h	58;"	d
Ctrl_H	src/ascii.h	140;"	d
Ctrl_H	src/ascii.h	59;"	d
Ctrl_HAT	src/ascii.h	162;"	d
Ctrl_HAT	src/ascii.h	81;"	d
Ctrl_I	src/ascii.h	141;"	d
Ctrl_I	src/ascii.h	60;"	d
Ctrl_J	src/ascii.h	142;"	d
Ctrl_J	src/ascii.h	61;"	d
Ctrl_K	src/ascii.h	143;"	d
Ctrl_K	src/ascii.h	62;"	d
Ctrl_L	src/ascii.h	144;"	d
Ctrl_L	src/ascii.h	63;"	d
Ctrl_M	src/ascii.h	145;"	d
Ctrl_M	src/ascii.h	64;"	d
Ctrl_N	src/ascii.h	146;"	d
Ctrl_N	src/ascii.h	65;"	d
Ctrl_O	src/ascii.h	147;"	d
Ctrl_O	src/ascii.h	66;"	d
Ctrl_P	src/ascii.h	148;"	d
Ctrl_P	src/ascii.h	67;"	d
Ctrl_Q	src/ascii.h	149;"	d
Ctrl_Q	src/ascii.h	68;"	d
Ctrl_R	src/ascii.h	150;"	d
Ctrl_R	src/ascii.h	69;"	d
Ctrl_RSB	src/ascii.h	160;"	d
Ctrl_RSB	src/ascii.h	80;"	d
Ctrl_S	src/ascii.h	151;"	d
Ctrl_S	src/ascii.h	70;"	d
Ctrl_T	src/ascii.h	152;"	d
Ctrl_T	src/ascii.h	71;"	d
Ctrl_U	src/ascii.h	153;"	d
Ctrl_U	src/ascii.h	72;"	d
Ctrl_V	src/ascii.h	154;"	d
Ctrl_V	src/ascii.h	73;"	d
Ctrl_W	src/ascii.h	155;"	d
Ctrl_W	src/ascii.h	74;"	d
Ctrl_X	src/ascii.h	156;"	d
Ctrl_X	src/ascii.h	75;"	d
Ctrl_Y	src/ascii.h	157;"	d
Ctrl_Y	src/ascii.h	76;"	d
Ctrl_Z	src/ascii.h	158;"	d
Ctrl_Z	src/ascii.h	77;"	d
Ctrl__	src/ascii.h	163;"	d
Ctrl__	src/ascii.h	82;"	d
Ctrl_chr	src/ascii.h	165;"	d
Ctrl_chr	src/ascii.h	44;"	d
CucumberComplete	runtime/ftplugin/cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
CurrentGetattr	src/if_python.c	/^CurrentGetattr(PyObject *self UNUSED, char *name)$/;"	f	file:	signature:(PyObject *self UNUSED, char *name)
CurrentGetattr	src/if_python.c	/^static PyObject *CurrentGetattr(PyObject *, char *);$/;"	p	file:	signature:(PyObject *, char *)
CurrentGetattro	src/if_python3.c	/^CurrentGetattro(PyObject *self UNUSED, PyObject *nameobj)$/;"	f	file:	signature:(PyObject *self UNUSED, PyObject *nameobj)
CurrentObject	src/if_python.c	/^} CurrentObject;$/;"	t	typeref:struct:__anon96	file:
CurrentObject	src/if_python3.c	/^} CurrentObject;$/;"	t	typeref:struct:__anon110	file:
CurrentSetattr	src/if_python.c	/^CurrentSetattr(PyObject *self UNUSED, char *name, PyObject *value)$/;"	f	file:	signature:(PyObject *self UNUSED, char *name, PyObject *value)
CurrentSetattr	src/if_python.c	/^static int CurrentSetattr(PyObject *, char *, PyObject *);$/;"	p	file:	signature:(PyObject *, char *, PyObject *)
CurrentSetattro	src/if_python3.c	/^CurrentSetattro(PyObject *self UNUSED, PyObject *nameobj, PyObject *value)$/;"	f	file:	signature:(PyObject *self UNUSED, PyObject *nameobj, PyObject *value)
CurrentType	src/if_python.c	/^static PyTypeObject CurrentType = {$/;"	v	file:
CurrentType	src/if_python3.c	/^static PyTypeObject CurrentType;$/;"	v	file:
Cycle	runtime/ftplugin/gitrebase.vim	/^command! -buffer -bar Cycle  :call s:cycle()$/;"	c
DAL	src/farsi.h	120;"	d
DATADIR	src/auto/config.mk	/^DATADIR		= ${datarootdir}$/;"	m
DATA_BL	src/memline.c	/^typedef struct data_block	DATA_BL;    \/* contents of a data block *\/$/;"	t	typeref:struct:data_block	file:
DATA_ID	src/memline.c	68;"	d	file:
DBCS_2BYTE	src/globals.h	783;"	d
DBCS_CHS	src/globals.h	779;"	d
DBCS_CHSU	src/globals.h	780;"	d
DBCS_CHT	src/globals.h	781;"	d
DBCS_CHTU	src/globals.h	782;"	d
DBCS_DEBUG	src/globals.h	784;"	d
DBCS_JPN	src/globals.h	775;"	d
DBCS_JPNU	src/globals.h	776;"	d
DBCS_KOR	src/globals.h	777;"	d
DBCS_KORU	src/globals.h	778;"	d
DBG	src/Make_sas.mak	/^DBG = NODEBUG$/;"	m
DBGLDFLAGS	src/Make_mint.mak	/^DBGLDFLAGS = -B$(SYMLDPREFIX)$/;"	m
DBGPOSTPROCESS	src/Make_mint.mak	/^DBGPOSTPROCESS = fixstk 20k $(DBGTARGET)$/;"	m
DBGTARGET	src/Make_mint.mak	/^DBGTARGET = $(VIMTARGET).sym$/;"	m
DBG_FILE	src/ex_cmds2.c	423;"	d	file:
DBG_FUNC	src/ex_cmds2.c	422;"	d	file:
DB_COUNT	src/structs.h	1658;"	d
DB_INDEX_MASK	src/memline.c	127;"	d	file:
DB_MARKED	src/memline.c	126;"	d	file:
DCS	src/ascii.h	123;"	d
DCS	src/ascii.h	39;"	d
DEBUG	src/Make_ming.mak	/^DEBUG=no$/;"	m
DEBUG	src/regexp.c	43;"	d	file:
DEBUG	src/vim.h	2134;"	d
DEBUGGY	src/ex_cmds2.c	415;"	d	file:
DEBUGINFO	src/Make_mvc.mak	/^DEBUGINFO = \/ZI$/;"	m
DEBUGINFO	src/Make_mvc.mak	/^DEBUGINFO = \/Zi$/;"	m
DEBUG_FLAG	src/Make_bc3.mak	/^DEBUG_FLAG = -v$/;"	m
DEBUG_FLAG	src/Make_bc3.mak	/^DEBUG_FLAG =$/;"	m
DEBUG_FLAG	src/Make_bc5.mak	/^DEBUG_FLAG = -v$/;"	m
DEBUG_FLAG	src/xxd/Make_bc3.mak	/^DEBUG_FLAG = -v -DDEBUG$/;"	m
DEBUG_FLAG	src/xxd/Make_bc3.mak	/^DEBUG_FLAG =$/;"	m
DEBUG_SUFFIX	src/Make_cyg.mak	/^DEBUG_SUFFIX = d$/;"	m
DEBUG_SUFFIX	src/Make_ming.mak	/^DEBUG_SUFFIX=d$/;"	m
DECRYPT_BYTE_ZIP	src/misc2.c	3746;"	d	file:
DEFAULT_FONT	src/gui_gtk_x11.c	154;"	d	file:
DEFAULT_TERM	src/term.c	1403;"	d	file:
DEFAULT_TERM	src/term.c	1407;"	d	file:
DEFAULT_TERM	src/term.c	1411;"	d	file:
DEFAULT_TERM	src/term.c	1415;"	d	file:
DEFAULT_TERM	src/term.c	1419;"	d	file:
DEFAULT_TERM	src/term.c	1423;"	d	file:
DEFAULT_TERM	src/term.c	1427;"	d	file:
DEFAULT_TERM	src/term.c	1431;"	d	file:
DEFAULT_TERM	src/term.c	1435;"	d	file:
DEFAULT_TERM	src/term.c	1436;"	d	file:
DEFAULT_TERM	src/term.c	1440;"	d	file:
DEFFILE	src/GvimExt/Make_ming.mak	/^DEFFILE = gvimext_ming.def$/;"	m
DEFINES	src/Make_bc5.mak	/^DEFINES = $(DEFINES) -DFEAT_CSCOPE$/;"	m
DEFINES	src/Make_bc5.mak	/^DEFINES = $(DEFINES) -DFEAT_GUI_W32 -DFEAT_CLIPBOARD$/;"	m
DEFINES	src/Make_bc5.mak	/^DEFINES = $(DEFINES) -DFEAT_NETBEANS_INTG$/;"	m
DEFINES	src/Make_bc5.mak	/^DEFINES = $(DEFINES) -DFEAT_OLE$/;"	m
DEFINES	src/Make_bc5.mak	/^DEFINES = $(DEFINES) -DFEAT_XPM_W32$/;"	m
DEFINES	src/Make_bc5.mak	/^DEFINES = $(DEFINES) -DMSWINPS$/;"	m
DEFINES	src/Make_bc5.mak	/^DEFINES = $(DEFINES) -DNBDEBUG$/;"	m
DEFINES	src/Make_bc5.mak	/^DEFINES = $(DEFINES) -DVIMDLL$/;"	m
DEFINES	src/Make_bc5.mak	/^DEFINES = $(DEFINES) -D_RTLDLL$/;"	m
DEFINES	src/Make_bc5.mak	/^DEFINES = -DFEAT_$(FEATURES) -DWIN32 -DHAVE_PATHDEF \\$/;"	m
DEFINES	src/Make_bc5.mak	/^DEFINES= -DFEAT_$(FEATURES) -DMSDOS$/;"	m
DEFINES	src/Make_bc5.mak	/^DEFINES=$(DEFINES) -DDEBUG$/;"	m
DEFINES	src/Make_cyg.mak	/^DEFINES = -DWIN32 -DHAVE_PATHDEF -DFEAT_$(FEATURES) \\$/;"	m
DEFINES	src/Make_dice.mak	/^DEFINES = -DHAVE_TGETENT -DUP_BC_PC_EXTERN -DOSPEED_EXTERN$/;"	m
DEFINES	src/Make_djg.mak	/^DEFINES =$/;"	m
DEFINES	src/Make_manx.mak	/^DEFINES =$/;"	m
DEFINES	src/Make_ming.mak	/^DEFINES=-DWIN32 -DWINVER=$(WINVER) -D_WIN32_WINNT=$(WINVER) \\$/;"	m
DEFINES	src/Make_os2.mak	/^DEFINES = -DUSE_SYSTEM=1$/;"	m
DEFINES	src/Make_sas.mak	/^DEFINES = DEF=NO_ARP DEF=NEWSASC DEF="SASC=658"$/;"	m
DEFINES	src/xxd/Make_cyg.mak	/^DEFINES = -mno-cygwin$/;"	m
DEFINES	src/xxd/Make_cyg.mak	/^DEFINES =$/;"	m
DEFS	src/auto/config.mk	/^DEFS		= -DHAVE_CONFIG_H$/;"	m
DEF_GUI	src/Make_ming.mak	/^DEF_GUI=-DFEAT_GUI_W32 -DFEAT_CLIPBOARD$/;"	m
DEL	src/GvimExt/Make_ming.mak	/^DEL = del$/;"	m
DEL	src/GvimExt/Make_ming.mak	/^DEL = rm$/;"	m
DEL	src/Make_cyg.mak	/^DEL = del$/;"	m
DEL	src/Make_cyg.mak	/^DEL = rm$/;"	m
DEL	src/Make_manx.mak	/^DEL = $(SHELL) -c rm -f$/;"	m
DEL	src/Make_ming.mak	/^DEL = del$/;"	m
DEL	src/Make_ming.mak	/^DEL = rm$/;"	m
DEL	src/Make_sas.mak	/^DEL	= $(SHELL) -c rm -f$/;"	m
DEL	src/ascii.h	118;"	d
DEL	src/ascii.h	35;"	d
DEL	src/testdir/Make_ming.mak	/^DEL = del$/;"	m
DEL	src/testdir/Make_ming.mak	/^DEL = rm -f$/;"	m
DEL	src/xxd/Make_cyg.mak	/^DEL = del$/;"	m
DEL	src/xxd/Make_cyg.mak	/^DEL = rm$/;"	m
DELETE_WINDOW_IDX	src/gui_x11.c	89;"	d	file:
DELETION_REGISTER	src/ops.c	29;"	d	file:
DEL_STR	src/ascii.h	119;"	d
DEL_STR	src/ascii.h	36;"	d
DEL_TREE	src/Make_ivc.mak	/^DEL_TREE = deltree \/y$/;"	m
DEL_TREE	src/Make_ivc.mak	/^DEL_TREE = rmdir \/s \/q$/;"	m
DEL_TREE	src/Make_mvc.mak	/^DEL_TREE = deltree \/y$/;"	m
DEL_TREE	src/Make_mvc.mak	/^DEL_TREE = rmdir \/s \/q$/;"	m
DEL_TREE	src/Make_w16.mak	/^DEL_TREE = deltree \/y$/;"	m
DEL_TREE	src/Make_w16.mak	/^DEL_TREE = rmdir \/s \/q$/;"	m
DEL_TREE	src/VisVim/VisVim.mak	/^DEL_TREE = deltree \/y$/;"	m
DEL_TREE	src/VisVim/VisVim.mak	/^DEL_TREE = rmdir \/s \/q$/;"	m
DEPEND_CFLAGS	src/Makefile	/^DEPEND_CFLAGS = -DPROTO -DDEPEND -DFEAT_GUI $(LINT_CFLAGS)$/;"	m
DEPEND_CFLAGS_FILTER	src/auto/config.mk	/^DEPEND_CFLAGS_FILTER = | sed 's+-I *\/+-isystem \/+g'$/;"	m
DESC	src/os_unix.h	/^typedef struct dsc$descriptor   DESC;$/;"	t	typeref:struct:dsc$descriptor
DEST_AUTO	src/Makefile	/^DEST_AUTO = $(DESTDIR)$(AUTOSUBLOC)$/;"	m
DEST_BIN	src/Makefile	/^DEST_BIN = $(DESTDIR)$(BINDIR)$/;"	m
DEST_COL	src/Makefile	/^DEST_COL = $(DESTDIR)$(COLSUBLOC)$/;"	m
DEST_COMP	src/Makefile	/^DEST_COMP = $(DESTDIR)$(COMPSUBLOC)$/;"	m
DEST_FTP	src/Makefile	/^DEST_FTP = $(DESTDIR)$(FTPLUGSUBLOC)$/;"	m
DEST_HELP	src/Makefile	/^DEST_HELP = $(DESTDIR)$(HELPSUBLOC)$/;"	m
DEST_IND	src/Makefile	/^DEST_IND = $(DESTDIR)$(INDSUBLOC)$/;"	m
DEST_KMAP	src/Makefile	/^DEST_KMAP = $(DESTDIR)$(KMAPSUBLOC)$/;"	m
DEST_LANG	src/Makefile	/^DEST_LANG = $(DESTDIR)$(LANGSUBLOC)$/;"	m
DEST_MACRO	src/Makefile	/^DEST_MACRO = $(DESTDIR)$(MACROSUBLOC)$/;"	m
DEST_MAN	src/Makefile	/^DEST_MAN = $(DEST_MAN_TOP)$(MAN1DIR)$/;"	m
DEST_MAN_FR	src/Makefile	/^DEST_MAN_FR = $(DEST_MAN_TOP)\/fr$(MAN1DIR)$/;"	m
DEST_MAN_FR_I	src/Makefile	/^DEST_MAN_FR_I = $(DEST_MAN_TOP)\/fr.ISO8859-1$(MAN1DIR)$/;"	m
DEST_MAN_FR_U	src/Makefile	/^DEST_MAN_FR_U = $(DEST_MAN_TOP)\/fr.UTF-8$(MAN1DIR)$/;"	m
DEST_MAN_IT	src/Makefile	/^DEST_MAN_IT = $(DEST_MAN_TOP)\/it$(MAN1DIR)$/;"	m
DEST_MAN_IT_I	src/Makefile	/^DEST_MAN_IT_I = $(DEST_MAN_TOP)\/it.ISO8859-1$(MAN1DIR)$/;"	m
DEST_MAN_IT_U	src/Makefile	/^DEST_MAN_IT_U = $(DEST_MAN_TOP)\/it.UTF-8$(MAN1DIR)$/;"	m
DEST_MAN_PL	src/Makefile	/^DEST_MAN_PL = $(DEST_MAN_TOP)\/pl$(MAN1DIR)$/;"	m
DEST_MAN_PL_I	src/Makefile	/^DEST_MAN_PL_I = $(DEST_MAN_TOP)\/pl.ISO8859-2$(MAN1DIR)$/;"	m
DEST_MAN_PL_U	src/Makefile	/^DEST_MAN_PL_U = $(DEST_MAN_TOP)\/pl.UTF-8$(MAN1DIR)$/;"	m
DEST_MAN_RU	src/Makefile	/^DEST_MAN_RU = $(DEST_MAN_TOP)\/ru.KOI8-R$(MAN1DIR)$/;"	m
DEST_MAN_RU_U	src/Makefile	/^DEST_MAN_RU_U = $(DEST_MAN_TOP)\/ru.UTF-8$(MAN1DIR)$/;"	m
DEST_MAN_TOP	src/Makefile	/^DEST_MAN_TOP = $(DESTDIR)$(MANDIR)$/;"	m
DEST_PLUG	src/Makefile	/^DEST_PLUG = $(DESTDIR)$(PLUGSUBLOC)$/;"	m
DEST_PRINT	src/Makefile	/^DEST_PRINT = $(DESTDIR)$(PRINTSUBLOC)$/;"	m
DEST_RT	src/Makefile	/^DEST_RT = $(DESTDIR)$(VIMRTLOC)$/;"	m
DEST_SCRIPT	src/Makefile	/^DEST_SCRIPT = $(DESTDIR)$(SCRIPTLOC)$/;"	m
DEST_SPELL	src/Makefile	/^DEST_SPELL = $(DESTDIR)$(SPELLSUBLOC)$/;"	m
DEST_SYN	src/Makefile	/^DEST_SYN = $(DESTDIR)$(SYNSUBLOC)$/;"	m
DEST_TOOLS	src/Makefile	/^DEST_TOOLS = $(DESTDIR)$(TOOLSSUBLOC)$/;"	m
DEST_TUTOR	src/Makefile	/^DEST_TUTOR = $(DESTDIR)$(TUTORSUBLOC)$/;"	m
DEST_VIM	src/Makefile	/^DEST_VIM = $(DESTDIR)$(VIMLOC)$/;"	m
DFLALL	src/ex_cmds.h	38;"	d
DFLT_BDIR	src/os_amiga.h	188;"	d
DFLT_BDIR	src/os_dos.h	106;"	d
DFLT_BDIR	src/os_mac.h	199;"	d
DFLT_BDIR	src/os_riscos.h	40;"	d
DFLT_BDIR	src/os_unix.h	355;"	d
DFLT_BDIR	src/os_unix.h	358;"	d
DFLT_BDIR	src/os_unix.h	360;"	d
DFLT_DIR	src/os_amiga.h	192;"	d
DFLT_DIR	src/os_dos.h	114;"	d
DFLT_DIR	src/os_mac.h	203;"	d
DFLT_DIR	src/os_riscos.h	45;"	d
DFLT_DIR	src/os_unix.h	367;"	d
DFLT_DIR	src/os_unix.h	370;"	d
DFLT_DIR	src/os_unix.h	372;"	d
DFLT_EFM	src/option.h	19;"	d
DFLT_EFM	src/option.h	22;"	d
DFLT_EFM	src/option.h	25;"	d
DFLT_EFM	src/option.h	28;"	d
DFLT_EFM	src/option.h	31;"	d
DFLT_EFM	src/option.h	34;"	d
DFLT_EFM	src/option.h	36;"	d
DFLT_ERRORFILE	src/os_amiga.h	43;"	d
DFLT_ERRORFILE	src/os_dos.h	117;"	d
DFLT_ERRORFILE	src/os_mac.h	210;"	d
DFLT_ERRORFILE	src/os_riscos.h	129;"	d
DFLT_ERRORFILE	src/os_unix.h	389;"	d
DFLT_FF	src/option.h	52;"	d
DFLT_FF	src/option.h	58;"	d
DFLT_FF	src/option.h	63;"	d
DFLT_FFS_VI	src/option.h	54;"	d
DFLT_FFS_VI	src/option.h	60;"	d
DFLT_FFS_VI	src/option.h	66;"	d
DFLT_FFS_VI	src/option.h	69;"	d
DFLT_FFS_VIM	src/option.h	53;"	d
DFLT_FFS_VIM	src/option.h	59;"	d
DFLT_FFS_VIM	src/option.h	64;"	d
DFLT_FONT	src/gui_x11.c	61;"	d	file:
DFLT_FO_VI	src/option.h	108;"	d
DFLT_FO_VIM	src/option.h	109;"	d
DFLT_GREPFORMAT	src/option.h	44;"	d
DFLT_HELPFILE	src/os_amiga.h	115;"	d
DFLT_HELPFILE	src/os_dos.h	79;"	d
DFLT_HELPFILE	src/os_mac.h	166;"	d
DFLT_HELPFILE	src/os_riscos.h	36;"	d
DFLT_HELPFILE	src/os_unix.h	247;"	d
DFLT_MAXMEM	src/os_amiga.h	200;"	d
DFLT_MAXMEM	src/os_mac.h	227;"	d
DFLT_MAXMEM	src/os_msdos.h	77;"	d
DFLT_MAXMEM	src/os_riscos.h	139;"	d
DFLT_MAXMEM	src/os_unix.h	447;"	d
DFLT_MAXMEM	src/os_unix.h	454;"	d
DFLT_MAXMEM	src/os_win16.h	86;"	d
DFLT_MAXMEM	src/os_win32.h	122;"	d
DFLT_MAXMEMTOT	src/os_amiga.h	203;"	d
DFLT_MAXMEMTOT	src/os_mac.h	231;"	d
DFLT_MAXMEMTOT	src/os_msdos.h	80;"	d
DFLT_MAXMEMTOT	src/os_riscos.h	143;"	d
DFLT_MAXMEMTOT	src/os_unix.h	450;"	d
DFLT_MAXMEMTOT	src/os_unix.h	457;"	d
DFLT_MAXMEMTOT	src/os_win16.h	90;"	d
DFLT_MAXMEMTOT	src/os_win32.h	126;"	d
DFLT_MENU_BG_COLOR	src/gui_x11.c	70;"	d	file:
DFLT_MENU_BG_COLOR	src/gui_x11.c	78;"	d	file:
DFLT_MENU_FG_COLOR	src/gui_x11.c	71;"	d	file:
DFLT_MENU_FG_COLOR	src/gui_x11.c	79;"	d	file:
DFLT_MENU_FONT	src/gui_x11.c	63;"	d	file:
DFLT_MENU_FONT	src/gui_x11.c	65;"	d	file:
DFLT_OFT	src/os_riscos.h	21;"	d
DFLT_RUNTIMEPATH	src/os_amiga.h	47;"	d
DFLT_RUNTIMEPATH	src/os_dos.h	118;"	d
DFLT_RUNTIMEPATH	src/os_mac.h	213;"	d
DFLT_RUNTIMEPATH	src/os_riscos.h	130;"	d
DFLT_RUNTIMEPATH	src/os_unix.h	392;"	d
DFLT_RUNTIMEPATH	src/os_unix.h	395;"	d
DFLT_RUNTIMEPATH	src/os_unix.h	398;"	d
DFLT_RUNTIMEPATH	src/os_unix.h	400;"	d
DFLT_SCROLL_BG_COLOR	src/gui_x11.c	72;"	d	file:
DFLT_SCROLL_BG_COLOR	src/gui_x11.c	80;"	d	file:
DFLT_SCROLL_FG_COLOR	src/gui_x11.c	73;"	d	file:
DFLT_SCROLL_FG_COLOR	src/gui_x11.c	81;"	d	file:
DFLT_TEXTAUTO	src/option.h	55;"	d
DFLT_TEXTAUTO	src/option.h	61;"	d
DFLT_TEXTAUTO	src/option.h	67;"	d
DFLT_TEXTAUTO	src/option.h	70;"	d
DFLT_TOOLTIP_BG_COLOR	src/gui_x11.c	74;"	d	file:
DFLT_TOOLTIP_BG_COLOR	src/gui_x11.c	82;"	d	file:
DFLT_TOOLTIP_FG_COLOR	src/gui_x11.c	75;"	d	file:
DFLT_TOOLTIP_FG_COLOR	src/gui_x11.c	83;"	d	file:
DFLT_TOOLTIP_FONT	src/gui_x11.c	67;"	d	file:
DFLT_VDIR	src/os_amiga.h	196;"	d
DFLT_VDIR	src/os_dos.h	110;"	d
DFLT_VDIR	src/os_mac.h	207;"	d
DFLT_VDIR	src/os_riscos.h	49;"	d
DFLT_VDIR	src/os_unix.h	379;"	d
DFLT_VDIR	src/os_unix.h	382;"	d
DFLT_VDIR	src/os_unix.h	384;"	d
DI2HIKEY	src/eval.c	50;"	d	file:
DICT_EXACT	src/edit.c	2911;"	d	file:
DICT_FIRST	src/edit.c	2910;"	d	file:
DICT_MAXNEST	src/eval.c	37;"	d	file:
DID_FOLD	src/screen.c	905;"	d	file:
DID_LINE	src/screen.c	904;"	d	file:
DID_NONE	src/screen.c	903;"	d	file:
DIFF_FILLER	src/diff.c	21;"	d	file:
DIFF_HORIZONTAL	src/diff.c	24;"	d	file:
DIFF_ICASE	src/diff.c	22;"	d	file:
DIFF_INSERT	src/spell.c	819;"	d	file:
DIFF_IWHITE	src/diff.c	23;"	d	file:
DIFF_NONE	src/spell.c	817;"	d	file:
DIFF_VERTICAL	src/diff.c	25;"	d	file:
DIFF_YES	src/spell.c	818;"	d	file:
DIGIT	src/regexp.c	184;"	d	file:
DIRMOD	src/Makefile	/^DIRMOD = 755$/;"	m
DIRSLASH	src/Make_cyg.mak	/^DIRSLASH = \/$/;"	m
DIRSLASH	src/Make_cyg.mak	/^DIRSLASH = \\\\$/;"	m
DIRSLASH	src/Make_ming.mak	/^DIRSLASH = \/$/;"	m
DIRSLASH	src/Make_ming.mak	/^DIRSLASH = \\\\$/;"	m
DIRSLASH	src/testdir/Make_ming.mak	/^DIRSLASH = \/$/;"	m
DIRSLASH	src/testdir/Make_ming.mak	/^DIRSLASH = \\\\$/;"	m
DISCONNECT	src/if_sniff.c	36;"	d	file:
DI_FLAGS_FIX	src/structs.h	1147;"	d
DI_FLAGS_LOCK	src/structs.h	1148;"	d
DI_FLAGS_RO	src/structs.h	1145;"	d
DI_FLAGS_RO_SBX	src/structs.h	1146;"	d
DLG_ALLOC_SIZE	src/gui_w16.c	58;"	d	file:
DLG_ALLOC_SIZE	src/gui_w32.c	307;"	d	file:
DLG_BUTTON_SEP	src/vim.h	1173;"	d
DLG_FONT_NAME	src/gui_w48.c	61;"	d	file:
DLG_FONT_POINT_SIZE	src/gui_w48.c	62;"	d	file:
DLG_HOTKEY_CHAR	src/vim.h	1174;"	d
DLG_ICON_HEIGHT	src/gui_w48.c	59;"	d	file:
DLG_ICON_WIDTH	src/gui_w48.c	58;"	d	file:
DLG_MIN_MAX_HEIGHT	src/gui_w48.c	64;"	d	file:
DLG_MIN_MAX_WIDTH	src/gui_w48.c	63;"	d	file:
DLG_MIN_WIDTH	src/gui_w48.c	60;"	d	file:
DLG_NONBUTTON_CONTROL	src/gui_w48.c	66;"	d	file:
DLG_OLD_STYLE_PADDING_X	src/gui_w48.c	54;"	d	file:
DLG_OLD_STYLE_PADDING_Y	src/gui_w48.c	55;"	d	file:
DLG_PADDING_X	src/gui_w48.c	52;"	d	file:
DLG_PADDING_Y	src/gui_w48.c	53;"	d	file:
DLG_VERT_PADDING_X	src/gui_w48.c	56;"	d	file:
DLG_VERT_PADDING_Y	src/gui_w48.c	57;"	d	file:
DLL	src/GvimExt/Make_ming.mak	/^DLL  := gvimext.dll$/;"	m
DLLGETVERSIONPROC	src/gui_w32.c	/^typedef HRESULT (WINAPI* DLLGETVERSIONPROC)(DLLVERSIONINFO *);$/;"	t	file:
DLLTARGET	src/Make_bc5.mak	/^DLLTARGET = joebob$/;"	m
DLLTARGET	src/Make_bc5.mak	/^DLLTARGET = vim32.dll$/;"	m
DLLTARGET	src/Make_bc5.mak	/^DLLTARGET = vim32d.dll$/;"	m
DLLVERSIONINFO	src/gui_w32.c	/^} DLLVERSIONINFO;$/;"	t	typeref:struct:_DllVersionInfo	file:
DOBUF_CURRENT	src/vim.h	978;"	d
DOBUF_DEL	src/vim.h	974;"	d
DOBUF_FIRST	src/vim.h	979;"	d
DOBUF_GOTO	src/vim.h	971;"	d
DOBUF_LAST	src/vim.h	980;"	d
DOBUF_MOD	src/vim.h	981;"	d
DOBUF_SPLIT	src/vim.h	972;"	d
DOBUF_UNLOAD	src/vim.h	973;"	d
DOBUF_WIPE	src/vim.h	975;"	d
DOCMD_EXCRESET	src/vim.h	1027;"	d
DOCMD_KEEPLINE	src/vim.h	1028;"	d
DOCMD_KEYTYPED	src/vim.h	1026;"	d
DOCMD_NOWAIT	src/vim.h	1024;"	d
DOCMD_REPEAT	src/vim.h	1025;"	d
DOCMD_VERBOSE	src/vim.h	1023;"	d
DOCS	runtime/doc/Makefile	/^DOCS = \\$/;"	m
DONE_ACTION	src/fold.c	89;"	d	file:
DONE_FOLD	src/fold.c	90;"	d	file:
DONE_NOTHING	src/fold.c	88;"	d	file:
DOS32	src/vim.h	153;"	d
DOSBIN_S	Makefile	/^DOSBIN_S =  dosbin_s$/;"	m
DOSINST	src/dosinst.c	19;"	d	file:
DOSO_GVIMRC	src/vim.h	2177;"	d
DOSO_NONE	src/vim.h	2175;"	d
DOSO_VIMRC	src/vim.h	2176;"	d
DOS_LIBRARY	src/os_amiga.c	239;"	d	file:
DOS_MOUSE	src/feature.h	1066;"	d
DOUBLE_CLICK	src/os_mswin.c	86;"	d	file:
DOUBLE_CLICK	src/os_win32.c	73;"	d	file:
DO_AUTOCHDIR	src/macros.h	284;"	d
DO_AUTOCHDIR	src/macros.h	286;"	d
DO_DECLARE_EXCMD	src/ex_docmd.c	492;"	d	file:
DO_INIT	src/vim.h	1675;"	d
DO_NOT_FREE_CNT	src/eval.c	39;"	d	file:
DRAGQVAL	src/gui_w48.c	3577;"	d	file:
DRAG_FALSE	src/gui_riscos.c	36;"	d	file:
DRAG_RESIZE_WINDOW	src/gui_riscos.c	38;"	d	file:
DRAG_SELECTION	src/gui_riscos.c	37;"	d	file:
DRAWER_INSET	src/gui_mac.c	6541;"	d	file:
DRAWER_SIZE	src/gui_mac.c	6540;"	d	file:
DRAW_BOLD	src/gui.h	151;"	d
DRAW_CURSOR	src/gui.h	157;"	d
DRAW_END	src/gui_photon.c	835;"	d	file:
DRAW_ITALIC	src/gui.h	155;"	d
DRAW_START	src/gui_photon.c	834;"	d	file:
DRAW_TRANSP	src/gui.h	150;"	d
DRAW_UNDERC	src/gui.h	153;"	d
DRAW_UNDERL	src/gui.h	152;"	d
DT_CSCOPE	src/vim.h	1101;"	d
DT_FIRST	src/vim.h	1096;"	d
DT_FREE	src/vim.h	1103;"	d
DT_HELP	src/vim.h	1099;"	d
DT_JUMP	src/vim.h	1100;"	d
DT_LAST	src/vim.h	1097;"	d
DT_LTAG	src/vim.h	1102;"	d
DT_NEXT	src/vim.h	1094;"	d
DT_POP	src/vim.h	1093;"	d
DT_PREV	src/vim.h	1095;"	d
DT_SELECT	src/vim.h	1098;"	d
DT_TAG	src/vim.h	1092;"	d
DUMPFLAG_ALLCAP	src/spell.c	15513;"	d	file:
DUMPFLAG_COUNT	src/spell.c	15510;"	d	file:
DUMPFLAG_ICASE	src/spell.c	15511;"	d	file:
DUMPFLAG_KEEPCASE	src/spell.c	15509;"	d	file:
DUMPFLAG_ONECAP	src/spell.c	15512;"	d	file:
DUM_LEN	src/getchar.c	2982;"	d	file:
DWORD	src/gui_w48.c	/^typedef int DWORD;$/;"	t	file:
DWORD	src/os_mswin.c	/^typedef int DWORD;$/;"	t	file:
DWORD	src/os_win16.c	/^typedef int DWORD;$/;"	t	file:
DWORD	src/os_win32.c	/^typedef int DWORD;$/;"	t	file:
DYNAMIC_ICONV	src/os_vms_conf.h	171;"	d
DYNAMIC_ICONV	src/os_vms_conf.h	182;"	d
DYNAMIC_ICONV_DLL	src/mbyte.c	4146;"	d	file:
DYNAMIC_ICONV_DLL_ALT	src/mbyte.c	4147;"	d	file:
DYNAMIC_IME	src/Make_bc5.mak	/^DYNAMIC_IME = yes$/;"	m
DYNAMIC_IME	src/Make_cyg.mak	/^DYNAMIC_IME = yes$/;"	m
DYNAMIC_IME	src/Make_ming.mak	/^DYNAMIC_IME=yes$/;"	m
DYNAMIC_IME	src/Make_mvc.mak	/^DYNAMIC_IME = yes$/;"	m
DYNAMIC_LUA	src/Make_cyg.mak	/^DYNAMIC_LUA = yes$/;"	m
DYNAMIC_LUA	src/Make_ming.mak	/^DYNAMIC_LUA=yes$/;"	m
DYNAMIC_MSVCRT_DLL	src/mbyte.c	4150;"	d	file:
DYNAMIC_MZSCHEME	src/Make_cyg.mak	/^DYNAMIC_MZSCHEME = yes$/;"	m
DYNAMIC_MZSCHEME	src/Make_ming.mak	/^DYNAMIC_MZSCHEME=yes$/;"	m
DYNAMIC_PERL	src/Make_cyg.mak	/^DYNAMIC_PERL = yes$/;"	m
DYNAMIC_PERL	src/Make_ming.mak	/^DYNAMIC_PERL=yes$/;"	m
DYNAMIC_PYTHON	src/Make_bc5.mak	/^DYNAMIC_PYTHON=yes$/;"	m
DYNAMIC_PYTHON	src/Make_cyg.mak	/^DYNAMIC_PYTHON = yes$/;"	m
DYNAMIC_PYTHON	src/Make_ming.mak	/^DYNAMIC_PYTHON=yes$/;"	m
DYNAMIC_PYTHON	src/Make_mvc.mak	/^DYNAMIC_PYTHON=yes$/;"	m
DYNAMIC_PYTHON3	src/Make_bc5.mak	/^DYNAMIC_PYTHON3=yes$/;"	m
DYNAMIC_PYTHON3	src/Make_cyg.mak	/^DYNAMIC_PYTHON3 = yes$/;"	m
DYNAMIC_PYTHON3	src/Make_ming.mak	/^DYNAMIC_PYTHON3=yes$/;"	m
DYNAMIC_PYTHON3	src/Make_mvc.mak	/^DYNAMIC_PYTHON3=yes$/;"	m
DYNAMIC_RUBY	src/Make_cyg.mak	/^DYNAMIC_RUBY = yes$/;"	m
DYNAMIC_RUBY	src/Make_ming.mak	/^DYNAMIC_RUBY=yes$/;"	m
DYNAMIC_TCL	src/Make_cyg.mak	/^DYNAMIC_TCL = yes$/;"	m
DYNAMIC_TCL	src/Make_ming.mak	/^DYNAMIC_TCL=yes$/;"	m
DYNAMIC_TCL_DLL	src/if_tcl.c	153;"	d	file:
DYNAMIC_TCL_VER	src/if_tcl.c	156;"	d	file:
DY_LASTLINE	src/option.h	427;"	d
DY_UHEX	src/option.h	428;"	d
Date	runtime/ftplugin/debchangelog.vim	/^function <SID>Date()$/;"	f
DebChangelogFoldText	runtime/ftplugin/debchangelog.vim	/^function! DebChangelogFoldText()$/;"	f
DebCompleteBugs	runtime/ftplugin/debchangelog.vim	/^fun! DebCompleteBugs(findstart, base)$/;"	f
DebControlFold	runtime/ftplugin/debcontrol.vim	/^function! DebControlFold(l)$/;"	f
DebControlFoldText	runtime/ftplugin/debcontrol.vim	/^function! DebControlFoldText()$/;"	f
DebGetChangelogFold	runtime/ftplugin/debchangelog.vim	/^function! DebGetChangelogFold(lnum)$/;"	f
DebGetPkgSrcName	runtime/ftplugin/debchangelog.vim	/^function! DebGetPkgSrcName(lineno)$/;"	f
DebugMsg	src/VisVim/Commands.cpp	/^static void DebugMsg(char* Msg, char* Arg = NULL);$/;"	p	file:	signature:(char* Msg, char* Arg = NULL)
DebugMsg	src/VisVim/Commands.cpp	/^static void DebugMsg(char* Msg, char* Arg)$/;"	f	file:	signature:(char* Msg, char* Arg)
DecreaseFunc	runtime/ftplugin/cobol.vim	/^function! s:DecreaseFunc(type)$/;"	f
DecreaseIndent	runtime/ftplugin/cobol.vim	/^function! s:DecreaseIndent()$/;"	f
DefPython	runtime/autoload/python3complete.vim	/^function! s:DefPython()$/;"	f
DefPython	runtime/autoload/pythoncomplete.vim	/^function! s:DefPython()$/;"	f
DefRuby	runtime/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DefineInlineMarkup	runtime/syntax/rst.vim	/^function! s:DefineInlineMarkup(name, start, middle, end)$/;"	f
DefineOneInlineMarkup	runtime/syntax/rst.vim	/^function! s:DefineOneInlineMarkup(name, start, middle, end, char_left, char_right)$/;"	f
DeleteAnyLingerer	src/if_xcmdsrv.c	/^DeleteAnyLingerer(dpy, win)$/;"	f	file:
DeleteAnyLingerer	src/if_xcmdsrv.c	/^static void	DeleteAnyLingerer __ARGS((Display *dpy, Window w));$/;"	p	file:	signature:(Display *dpy, Window w)
DeleteBrush	src/gui_w32.c	78;"	d	file:
DeleteObject	src/VisVim/OleAut.cpp	/^void COleAutomationControl::DeleteObject ()$/;"	f	class:COleAutomationControl	signature:()
DeleteObject	src/VisVim/OleAut.h	/^	void DeleteObject ();$/;"	p	class:COleAutomationControl	access:public	signature:()
Delete_autocommands	src/testdir/test49.vim	/^function! Delete_autocommands(...)$/;"	f
Dep_Gvim16	src/Make_w16.mak	/^Dep_Gvim16 = \\$/;"	m
Dep_gvim16dexe	src/Make_w16.mak	/^Dep_gvim16dexe = \\$/;"	m
Destroy	src/gui_at_sb.c	/^Destroy(w)$/;"	f	file:
Destroy	src/gui_at_sb.c	/^static void Destroy __ARGS((Widget));$/;"	p	file:	signature:(Widget)
Destroy	src/gui_xmebw.c	/^Destroy(Widget w)$/;"	f	file:	signature:(Widget w)
Destroy	src/gui_xmebw.c	/^static void Destroy(Widget w);$/;"	p	file:	signature:(Widget w)
DialogAcceptCB	src/gui_motif.c	/^DialogAcceptCB(w, client_data, call_data)$/;"	f	file:
DialogAcceptCB	src/gui_motif.c	/^static void DialogAcceptCB __ARGS((Widget, XtPointer, XtPointer));$/;"	p	file:	signature:(Widget, XtPointer, XtPointer)
DialogCancelCB	src/gui_motif.c	/^DialogCancelCB(w, client_data, call_data)$/;"	f	file:
DialogCancelCB	src/gui_motif.c	/^static void DialogCancelCB __ARGS((Widget, XtPointer, XtPointer));$/;"	p	file:	signature:(Widget, XtPointer, XtPointer)
DialogHotkeyFilterProc	src/gui_mac.c	/^DialogHotkeyFilterProc ($/;"	f	file:	signature:( DialogRef theDialog, EventRecord *event, DialogItemIndex *itemHit)
DialogInfo	src/gui_gtk.c	/^} DialogInfo;$/;"	t	typeref:struct:_DialogInfo	file:
Dict2info	runtime/autoload/ccomplete.vim	/^function! s:Dict2info(dict)$/;"	f
DiffGitCached	runtime/ftplugin/gitcommit.vim	/^command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:gitdiffcached(<bang>0,b:git_dir,<f-args>)$/;"	c
DiffOrig	runtime/vimrc_example.vim	/^  command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis$/;"	c
Disconnect	src/VisVim/Commands.h	/^		void Disconnect (IUnknown * pUnk)$/;"	f	class:CCommands::XEventHandler	access:public	signature:(IUnknown * pUnk)
Display	src/proto.h	24;"	d
Distribution	runtime/ftplugin/debchangelog.vim	/^function Distribution(dist)$/;"	f
DllCanUnloadNow	src/GvimExt/gvimext.cpp	/^STDAPI DllCanUnloadNow(void)$/;"	f	signature:(void)
DllCanUnloadNow	src/VisVim/VisVim.cpp	/^STDAPI DllCanUnloadNow (void)$/;"	f	signature:(void)
DllGetClassObject	src/GvimExt/gvimext.cpp	/^STDAPI DllGetClassObject(REFCLSID rclsid, REFIID riid, LPVOID *ppvOut)$/;"	f	signature:(REFCLSID rclsid, REFIID riid, LPVOID *ppvOut)
DllGetClassObject	src/VisVim/VisVim.cpp	/^STDAPI DllGetClassObject (REFCLSID rclsid, REFIID riid, LPVOID * ppv)$/;"	f	signature:(REFCLSID rclsid, REFIID riid, LPVOID * ppv)
DllMain	src/GvimExt/gvimext.cpp	/^DllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID  \/* lpReserved *\/)$/;"	f	signature:(HINSTANCE hInstance, DWORD dwReason, LPVOID )
DllMain	src/os_w32dll.c	/^BOOL WINAPI DllMain(HINSTANCE  hinstDLL, DWORD	fdwReason, LPVOID  lpvReserved)$/;"	f	signature:(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)
DllRegisterServer	src/VisVim/VisVim.cpp	/^STDAPI DllRegisterServer (void)$/;"	f	signature:(void)
DllUnregisterServer	src/VisVim/VisVim.cpp	/^STDAPI DllUnregisterServer (void)$/;"	f	signature:(void)
DoDataExchange	src/VisVim/Commands.cpp	/^	virtual void DoDataExchange(CDataExchange * pDX);	\/\/ DDX\/DDV support$/;"	p	class:CMainDialog	file:	access:protected	signature:(CDataExchange * pDX)
DoDataExchange	src/VisVim/Commands.cpp	/^void CMainDialog::DoDataExchange(CDataExchange * pDX)$/;"	f	class:CMainDialog	signature:(CDataExchange * pDX)
DoMatchParen	runtime/plugin/matchparen.vim	/^command! DoMatchParen runtime plugin\/matchparen.vim | windo doau CursorMoved$/;"	c
DoPy3Command	src/if_python3.c	/^DoPy3Command(exarg_T *eap, const char *cmd)$/;"	f	file:	signature:(exarg_T *eap, const char *cmd)
DoPythonCommand	src/if_python.c	/^DoPythonCommand(exarg_T *eap, const char *cmd)$/;"	f	file:	signature:(exarg_T *eap, const char *cmd)
DoRegisterName	src/if_xcmdsrv.c	/^DoRegisterName(dpy, name)$/;"	f	file:
DoRegisterName	src/if_xcmdsrv.c	/^static int	DoRegisterName __ARGS((Display *dpy, char_u *name));$/;"	p	file:	signature:(Display *dpy, char_u *name)
DoRemoteReply	runtime/plugin/rrhelper.vim	/^function DoRemoteReply(id, cnt, group, file)$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_af_af.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_ca_es.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_chinese_gb.936.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_chinese_taiwan.950.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_cs_cz.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_czech_czech_republic.1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_czech_czech_republic.ascii.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_de_de.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_eo.utf-8.vim	/^fun! Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_es_es.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_fi_fi.latin1.vim	/^fun! Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_fr_fr.latin1.vim	/^fun! Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_hu_hu.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_hu_hu.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_it_it.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_ja_jp.euc-jp.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_ja_jp.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_japanese_japan.932.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_ko_kr.euckr.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_ko_kr.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_nl_nl.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_no_no.latin1.vim	/^	function Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_pl_pl.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_pl_pl.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_polish_poland.1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_pt_br.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_pt_pt.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_ru_ru.koi8-r.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_ru_ru.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_sk_sk.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_sl_si.cp1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_sl_si.latin2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_sl_si.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_slovak_slovak_republic.1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_sr_rs.ascii.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_sr_rs.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_sr_rs.iso_8859-5.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_sr_rs.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_sv_se.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_uk_ua.cp1251.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_uk_ua.koi8-u.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_vi_vn.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_zh_cn.gb2312.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_zh_cn.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
Do_toolbar_tmenu	runtime/lang/menu_zh_tw.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f
DocumentOpen	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::DocumentOpen(IDispatch * theDocument)$/;"	f	class:CCommands::XApplicationEvents	signature:(IDispatch * theDocument)
DocumentOpen	src/VisVim/Commands.h	/^		STDMETHOD (DocumentOpen) (THIS_ IDispatch * theDocument);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS_ IDispatch * theDocument)
DocumentSave	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::DocumentSave(IDispatch * theDocument)$/;"	f	class:CCommands::XApplicationEvents	signature:(IDispatch * theDocument)
DocumentSave	src/VisVim/Commands.h	/^		STDMETHOD (DocumentSave) (THIS_ IDispatch * theDocument);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS_ IDispatch * theDocument)
Doxygen_Hilights	runtime/syntax/doxygen.vim	/^    fun! s:Doxygen_Hilights()$/;"	f
Doxygen_Hilights_Base	runtime/syntax/doxygen.vim	/^    fun! s:Doxygen_Hilights_Base()$/;"	f
DtraceCheck	runtime/filetype.vim	/^func! s:DtraceCheck()$/;"	f
DumpPutS	src/os_mswin.c	/^DumpPutS($/;"	f	signature:( const char *psz)
DxyCreateSmallSpecial	runtime/syntax/doxygen.vim	/^  fun! s:DxyCreateSmallSpecial( kword, name )$/;"	f
DylanGetIndent	runtime/indent/dylan.vim	/^function DylanGetIndent()$/;"	f
E	runtime/macros/hanoi/hanoi.vim	/^map E "hp$/;"	m
E	runtime/macros/maze/maze.c	/^char*M,A,Z,E=40,J[40],T[40];main(C){for(*J=A=scanf(M="%d",&C);$/;"	v
E	runtime/macros/maze/mazeansi.c	/^char*M,A,Z,E=40,J[80],T[3];main(C){for(M=J+E,*J=A=scanf("%d",&$/;"	v
E	runtime/macros/maze/mazeclean.c	/^char *M, A, Z, E = 40, line[80], T[3];$/;"	v
E	src/testdir/test49.vim	/^    function! E()$/;"	f
E	src/testdir/test49.vim	/^    function! E(jump)$/;"	f
E0_CFLAGS	src/Make_mvc.mak	/^E0_CFLAGS = $(CFLAGS:\\=\\\\)$/;"	m
E2BIG	src/structs.h	889;"	d
EBCDIC_CHAR_ADD	src/ascii.h	102;"	d
EBCDIC_CHAR_ADD_	src/ascii.h	101;"	d
ECMD_ADDBUF	src/vim.h	1015;"	d
ECMD_FORCEIT	src/vim.h	1014;"	d
ECMD_HIDE	src/vim.h	1010;"	d
ECMD_LAST	src/vim.h	1019;"	d
ECMD_LASTL	src/vim.h	1018;"	d
ECMD_OLDBUF	src/vim.h	1013;"	d
ECMD_ONE	src/vim.h	1020;"	d
ECMD_SET_HELP	src/vim.h	1011;"	d
ECONNREFUSED	src/netbeans.c	38;"	d	file:
ECONNREFUSED	src/netbeans.c	39;"	d	file:
EDITCMD	src/ex_cmds.h	49;"	d
EDIT_FILE	src/main.c	94;"	d	file:
EDIT_NONE	src/main.c	93;"	d	file:
EDIT_QF	src/main.c	97;"	d	file:
EDIT_STDIN	src/main.c	95;"	d	file:
EDIT_TAG	src/main.c	96;"	d	file:
EFAULT	src/structs.h	891;"	d
EILSEQ	src/structs.h	883;"	d
EILSEQ	src/structs.h	892;"	d
EILSEQ	src/vim.h	2045;"	d
EINTR	src/netbeans.c	41;"	d	file:
EINTR	src/netbeans.c	43;"	d	file:
EINVAL	src/structs.h	888;"	d
EMPTY_SYMBOL	src/if_sniff.c	33;"	d	file:
EMSG	src/vim.h	1540;"	d
EMSG2	src/vim.h	1541;"	d
EMSG3	src/vim.h	1542;"	d
EMSGN	src/vim.h	1543;"	d
EMSGU	src/vim.h	1544;"	d
EMSG_M_RET_NULL	src/regexp.c	329;"	d	file:
EMSG_ONE_RET_NULL	src/regexp.c	331;"	d	file:
EMSG_RET_FAIL	src/regexp.c	330;"	d	file:
EMSG_RET_NULL	src/regexp.c	328;"	d	file:
ENABLE_NLS	src/gui_gtk.c	60;"	d	file:
ENABLE_NLS	src/gui_gtk_x11.c	44;"	d	file:
ENCODING	src/gui_xmdlg.c	/^    ENCODING,$/;"	e	enum:ListSpecifier	file:
ENC_2BYTE	src/vim.h	2033;"	d
ENC_2WORD	src/vim.h	2035;"	d
ENC_4BYTE	src/vim.h	2034;"	d
ENC_8BIT	src/vim.h	2026;"	d
ENC_DBCS	src/vim.h	2027;"	d
ENC_DFLT	src/option.h	81;"	d
ENC_ENDIAN_B	src/vim.h	2030;"	d
ENC_ENDIAN_L	src/vim.h	2031;"	d
ENC_LATIN1	src/vim.h	2037;"	d
ENC_LATIN9	src/vim.h	2038;"	d
ENC_MACROMAN	src/vim.h	2039;"	d
ENC_UCSBOM	src/option.h	78;"	d
ENC_UNICODE	src/vim.h	2028;"	d
END	src/regexp.c	140;"	d	file:
END_PAGE_DATA	src/gui_at_sb.h	143;"	d
ENOENT	src/structs.h	890;"	d
ENUMLOGFONT	src/gui_w48.c	/^typedef int ENUMLOGFONT;$/;"	t	file:
ENUMLOGFONT	src/os_mswin.c	/^typedef int ENUMLOGFONT;$/;"	t	file:
EOL	src/regexp.c	142;"	d	file:
EOL_DEFAULT	src/os_mac.h	96;"	d
EOL_DOS	src/option.h	87;"	d
EOL_MAC	src/option.h	88;"	d
EOL_UNIX	src/option.h	86;"	d
EOL_UNKNOWN	src/option.h	85;"	d
EOW	src/regexp.c	160;"	d	file:
EQN	src/os_vms.c	68;"	d	file:
EQUIVAL_CLASS_C	src/regexp.c	/^char *EQUIVAL_CLASS_C[16] = {$/;"	v
ERR	src/testdir/test49.vim	/^    function! ERR(n)$/;"	f
ERROR	src/Make_sas.mak	/^ERROR = ERRORCONSOLE ERRORSOURCE ERRORHIGHLIGHT$/;"	m
ERROR_DICT	src/eval.c	8176;"	d	file:
ERROR_NONE	src/eval.c	8177;"	d	file:
ERROR_OTHER	src/eval.c	8178;"	d	file:
ERROR_SCRIPT	src/eval.c	8175;"	d	file:
ERROR_TOOFEW	src/eval.c	8174;"	d	file:
ERROR_TOOMANY	src/eval.c	8173;"	d	file:
ERROR_UNKNOWN	src/eval.c	8172;"	d	file:
ERRabort	src/testdir/test49.vim	/^    function! ERRabort(n) abort$/;"	f
ESC	src/ascii.h	115;"	d
ESC	src/ascii.h	32;"	d
ESCAPE_CHARS	src/ex_docmd.c	4401;"	d	file:
ESC_CHG_TO_ENG_MODE	src/feature.h	693;"	d
ESC_STR	src/ascii.h	116;"	d
ESC_STR	src/ascii.h	33;"	d
ESC_STR_nc	src/ascii.h	117;"	d
ESC_STR_nc	src/ascii.h	34;"	d
ETO_IGNORELANGUAGE	src/gui_w32.c	390;"	d	file:
ET_ERROR	src/structs.h	765;"	d
ET_INTERRUPT	src/structs.h	766;"	d
ET_USER	src/structs.h	764;"	d
EVAL_OFFSET_X	src/gui_beval.h	71;"	d
EVAL_OFFSET_Y	src/gui_beval.h	72;"	d
EVENT_BUFADD	src/vim.h	/^    EVENT_BUFADD = 0,		\/* after adding a buffer to the buffer list *\/$/;"	e	enum:auto_event
EVENT_BUFDELETE	src/vim.h	/^    EVENT_BUFDELETE,		\/* deleting a buffer from the buffer list *\/$/;"	e	enum:auto_event
EVENT_BUFENTER	src/vim.h	/^    EVENT_BUFENTER,		\/* after entering a buffer *\/$/;"	e	enum:auto_event
EVENT_BUFFER_SIZE	src/gui_photon.c	37;"	d	file:
EVENT_BUFFILEPOST	src/vim.h	/^    EVENT_BUFFILEPOST,		\/* after renaming a buffer *\/$/;"	e	enum:auto_event
EVENT_BUFFILEPRE	src/vim.h	/^    EVENT_BUFFILEPRE,		\/* before renaming a buffer *\/$/;"	e	enum:auto_event
EVENT_BUFHIDDEN	src/vim.h	/^    EVENT_BUFHIDDEN,		\/* just after buffer becomes hidden *\/$/;"	e	enum:auto_event
EVENT_BUFLEAVE	src/vim.h	/^    EVENT_BUFLEAVE,		\/* before leaving a buffer *\/$/;"	e	enum:auto_event
EVENT_BUFNEW	src/vim.h	/^    EVENT_BUFNEW,		\/* after creating any buffer *\/$/;"	e	enum:auto_event
EVENT_BUFNEWFILE	src/vim.h	/^    EVENT_BUFNEWFILE,		\/* when creating a buffer for a new file *\/$/;"	e	enum:auto_event
EVENT_BUFREADCMD	src/vim.h	/^    EVENT_BUFREADCMD,		\/* read buffer using command *\/$/;"	e	enum:auto_event
EVENT_BUFREADPOST	src/vim.h	/^    EVENT_BUFREADPOST,		\/* after reading a buffer *\/$/;"	e	enum:auto_event
EVENT_BUFREADPRE	src/vim.h	/^    EVENT_BUFREADPRE,		\/* before reading a buffer *\/$/;"	e	enum:auto_event
EVENT_BUFUNLOAD	src/vim.h	/^    EVENT_BUFUNLOAD,		\/* just before unloading a buffer *\/$/;"	e	enum:auto_event
EVENT_BUFWINENTER	src/vim.h	/^    EVENT_BUFWINENTER,		\/* after showing a buffer in a window *\/$/;"	e	enum:auto_event
EVENT_BUFWINLEAVE	src/vim.h	/^    EVENT_BUFWINLEAVE,		\/* just after buffer removed from window *\/$/;"	e	enum:auto_event
EVENT_BUFWIPEOUT	src/vim.h	/^    EVENT_BUFWIPEOUT,		\/* just before really deleting a buffer *\/$/;"	e	enum:auto_event
EVENT_BUFWRITECMD	src/vim.h	/^    EVENT_BUFWRITECMD,		\/* write buffer using command *\/$/;"	e	enum:auto_event
EVENT_BUFWRITEPOST	src/vim.h	/^    EVENT_BUFWRITEPOST,		\/* after writing a buffer *\/$/;"	e	enum:auto_event
EVENT_BUFWRITEPRE	src/vim.h	/^    EVENT_BUFWRITEPRE,		\/* before writing a buffer *\/$/;"	e	enum:auto_event
EVENT_CMDWINENTER	src/vim.h	/^    EVENT_CMDWINENTER,		\/* after entering the cmdline window *\/$/;"	e	enum:auto_event
EVENT_CMDWINLEAVE	src/vim.h	/^    EVENT_CMDWINLEAVE,		\/* before leaving the cmdline window *\/$/;"	e	enum:auto_event
EVENT_COLORSCHEME	src/vim.h	/^    EVENT_COLORSCHEME,		\/* after loading a colorscheme *\/$/;"	e	enum:auto_event
EVENT_CURSORHOLD	src/vim.h	/^    EVENT_CURSORHOLD,		\/* cursor in same position for a while *\/$/;"	e	enum:auto_event
EVENT_CURSORHOLDI	src/vim.h	/^    EVENT_CURSORHOLDI,		\/* idem, in Insert mode *\/$/;"	e	enum:auto_event
EVENT_CURSORMOVED	src/vim.h	/^    EVENT_CURSORMOVED,		\/* cursor was moved *\/$/;"	e	enum:auto_event
EVENT_CURSORMOVEDI	src/vim.h	/^    EVENT_CURSORMOVEDI,		\/* cursor was moved in Insert mode *\/$/;"	e	enum:auto_event
EVENT_ENCODINGCHANGED	src/vim.h	/^    EVENT_ENCODINGCHANGED,	\/* after changing the 'encoding' option *\/$/;"	e	enum:auto_event
EVENT_FILEAPPENDCMD	src/vim.h	/^    EVENT_FILEAPPENDCMD,	\/* append to a file using command *\/$/;"	e	enum:auto_event
EVENT_FILEAPPENDPOST	src/vim.h	/^    EVENT_FILEAPPENDPOST,	\/* after appending to a file *\/$/;"	e	enum:auto_event
EVENT_FILEAPPENDPRE	src/vim.h	/^    EVENT_FILEAPPENDPRE,	\/* before appending to a file *\/$/;"	e	enum:auto_event
EVENT_FILECHANGEDRO	src/vim.h	/^    EVENT_FILECHANGEDRO,	\/* before first change to read-only file *\/$/;"	e	enum:auto_event
EVENT_FILECHANGEDSHELL	src/vim.h	/^    EVENT_FILECHANGEDSHELL,	\/* after shell command that changed file *\/$/;"	e	enum:auto_event
EVENT_FILECHANGEDSHELLPOST	src/vim.h	/^    EVENT_FILECHANGEDSHELLPOST,	\/* after (not) reloading changed file *\/$/;"	e	enum:auto_event
EVENT_FILEREADCMD	src/vim.h	/^    EVENT_FILEREADCMD,		\/* read from a file using command *\/$/;"	e	enum:auto_event
EVENT_FILEREADPOST	src/vim.h	/^    EVENT_FILEREADPOST,		\/* after reading a file *\/$/;"	e	enum:auto_event
EVENT_FILEREADPRE	src/vim.h	/^    EVENT_FILEREADPRE,		\/* before reading a file *\/$/;"	e	enum:auto_event
EVENT_FILETYPE	src/vim.h	/^    EVENT_FILETYPE,		\/* new file type detected (user defined) *\/$/;"	e	enum:auto_event
EVENT_FILEWRITECMD	src/vim.h	/^    EVENT_FILEWRITECMD,		\/* write to a file using command *\/$/;"	e	enum:auto_event
EVENT_FILEWRITEPOST	src/vim.h	/^    EVENT_FILEWRITEPOST,	\/* after writing a file *\/$/;"	e	enum:auto_event
EVENT_FILEWRITEPRE	src/vim.h	/^    EVENT_FILEWRITEPRE,		\/* before writing a file *\/$/;"	e	enum:auto_event
EVENT_FILTERREADPOST	src/vim.h	/^    EVENT_FILTERREADPOST,	\/* after reading from a filter *\/$/;"	e	enum:auto_event
EVENT_FILTERREADPRE	src/vim.h	/^    EVENT_FILTERREADPRE,	\/* before reading from a filter *\/$/;"	e	enum:auto_event
EVENT_FILTERWRITEPOST	src/vim.h	/^    EVENT_FILTERWRITEPOST,	\/* after writing to a filter *\/$/;"	e	enum:auto_event
EVENT_FILTERWRITEPRE	src/vim.h	/^    EVENT_FILTERWRITEPRE,	\/* before writing to a filter *\/$/;"	e	enum:auto_event
EVENT_FOCUSGAINED	src/vim.h	/^    EVENT_FOCUSGAINED,		\/* got the focus *\/$/;"	e	enum:auto_event
EVENT_FOCUSLOST	src/vim.h	/^    EVENT_FOCUSLOST,		\/* lost the focus to another app *\/$/;"	e	enum:auto_event
EVENT_FUNCUNDEFINED	src/vim.h	/^    EVENT_FUNCUNDEFINED,	\/* if calling a function which doesn't exist *\/$/;"	e	enum:auto_event
EVENT_GUIENTER	src/vim.h	/^    EVENT_GUIENTER,		\/* after starting the GUI *\/$/;"	e	enum:auto_event
EVENT_GUIFAILED	src/vim.h	/^    EVENT_GUIFAILED,		\/* after starting the GUI failed *\/$/;"	e	enum:auto_event
EVENT_INSERTCHANGE	src/vim.h	/^    EVENT_INSERTCHANGE,		\/* when changing Insert\/Replace mode *\/$/;"	e	enum:auto_event
EVENT_INSERTENTER	src/vim.h	/^    EVENT_INSERTENTER,		\/* when entering Insert mode *\/$/;"	e	enum:auto_event
EVENT_INSERTLEAVE	src/vim.h	/^    EVENT_INSERTLEAVE,		\/* when leaving Insert mode *\/$/;"	e	enum:auto_event
EVENT_MENUPOPUP	src/vim.h	/^    EVENT_MENUPOPUP,		\/* just before popup menu is displayed *\/$/;"	e	enum:auto_event
EVENT_QUICKFIXCMDPOST	src/vim.h	/^    EVENT_QUICKFIXCMDPOST,	\/* after :make, :grep etc *\/$/;"	e	enum:auto_event
EVENT_QUICKFIXCMDPRE	src/vim.h	/^    EVENT_QUICKFIXCMDPRE,	\/* before :make, :grep etc *\/$/;"	e	enum:auto_event
EVENT_REMOTEREPLY	src/vim.h	/^    EVENT_REMOTEREPLY,		\/* upon string reception from a remote vim *\/$/;"	e	enum:auto_event
EVENT_SESSIONLOADPOST	src/vim.h	/^    EVENT_SESSIONLOADPOST,	\/* after loading a session file *\/$/;"	e	enum:auto_event
EVENT_SHELLCMDPOST	src/vim.h	/^    EVENT_SHELLCMDPOST,		\/* after ":!cmd" *\/$/;"	e	enum:auto_event
EVENT_SHELLFILTERPOST	src/vim.h	/^    EVENT_SHELLFILTERPOST,	\/* after ":1,2!cmd", ":w !cmd", ":r !cmd". *\/$/;"	e	enum:auto_event
EVENT_SOURCECMD	src/vim.h	/^    EVENT_SOURCECMD,		\/* sourcing a Vim script using command *\/$/;"	e	enum:auto_event
EVENT_SOURCEPRE	src/vim.h	/^    EVENT_SOURCEPRE,		\/* before sourcing a Vim script *\/$/;"	e	enum:auto_event
EVENT_SPELLFILEMISSING	src/vim.h	/^    EVENT_SPELLFILEMISSING,	\/* spell file missing *\/$/;"	e	enum:auto_event
EVENT_STDINREADPOST	src/vim.h	/^    EVENT_STDINREADPOST,	\/* after reading from stdin *\/$/;"	e	enum:auto_event
EVENT_STDINREADPRE	src/vim.h	/^    EVENT_STDINREADPRE,		\/* before reading from stdin *\/$/;"	e	enum:auto_event
EVENT_SWAPEXISTS	src/vim.h	/^    EVENT_SWAPEXISTS,		\/* found existing swap file *\/$/;"	e	enum:auto_event
EVENT_SYNTAX	src/vim.h	/^    EVENT_SYNTAX,		\/* syntax selected *\/$/;"	e	enum:auto_event
EVENT_TABENTER	src/vim.h	/^    EVENT_TABENTER,		\/* after entering a tab page *\/$/;"	e	enum:auto_event
EVENT_TABLEAVE	src/vim.h	/^    EVENT_TABLEAVE,		\/* before leaving a tab page *\/$/;"	e	enum:auto_event
EVENT_TERMCHANGED	src/vim.h	/^    EVENT_TERMCHANGED,		\/* after changing 'term' *\/$/;"	e	enum:auto_event
EVENT_TERMRESPONSE	src/vim.h	/^    EVENT_TERMRESPONSE,		\/* after setting "v:termresponse" *\/$/;"	e	enum:auto_event
EVENT_USER	src/vim.h	/^    EVENT_USER,			\/* user defined autocommand *\/$/;"	e	enum:auto_event
EVENT_VIMENTER	src/vim.h	/^    EVENT_VIMENTER,		\/* after starting Vim *\/$/;"	e	enum:auto_event
EVENT_VIMLEAVE	src/vim.h	/^    EVENT_VIMLEAVE,		\/* before exiting Vim *\/$/;"	e	enum:auto_event
EVENT_VIMLEAVEPRE	src/vim.h	/^    EVENT_VIMLEAVEPRE,		\/* before exiting Vim and writing .viminfo *\/$/;"	e	enum:auto_event
EVENT_VIMRESIZED	src/vim.h	/^    EVENT_VIMRESIZED,		\/* after Vim window was resized *\/$/;"	e	enum:auto_event
EVENT_WINENTER	src/vim.h	/^    EVENT_WINENTER,		\/* after entering a window *\/$/;"	e	enum:auto_event
EVENT_WINLEAVE	src/vim.h	/^    EVENT_WINLEAVE,		\/* before leaving a window *\/$/;"	e	enum:auto_event
EVIEWNAME	src/Makefile	/^EVIEWNAME	= e$(VIEWNAME)$/;"	m
EVIEWTARGET	src/Makefile	/^EVIEWTARGET	= $(EVIEWNAME)$(LNKEXT)$/;"	m
EVIMNAME	src/Makefile	/^EVIMNAME	= e$(VIMNAME)$/;"	m
EVIMTARGET	src/Makefile	/^EVIMTARGET	= $(EVIMNAME)$(LNKEXT)$/;"	m
EVIM_FILE	src/Makefile	/^EVIM_FILE	= $(DESTDIR)$(SCRIPTLOC)\/evim.vim$/;"	m
EVIM_FILE	src/os_amiga.h	156;"	d
EVIM_FILE	src/os_dos.h	26;"	d
EVIM_FILE	src/os_mac.h	138;"	d
EVIM_FILE	src/os_riscos.h	62;"	d
EVIM_FILE	src/os_unix.h	316;"	d
EW_ADDSLASH	src/vim.h	806;"	d
EW_DIR	src/vim.h	803;"	d
EW_EXEC	src/vim.h	809;"	d
EW_FILE	src/vim.h	804;"	d
EW_KEEPALL	src/vim.h	807;"	d
EW_NOTFOUND	src/vim.h	805;"	d
EW_PATH	src/vim.h	810;"	d
EW_SILENT	src/vim.h	808;"	d
EX	src/ex_cmds.h	74;"	d
EX	src/ex_cmds.h	77;"	d
EXACTLY	src/regexp.c	146;"	d	file:
EXE	src/Make_cyg.mak	/^EXE = gvim$(DEBUG_SUFFIX).exe$/;"	m
EXE	src/Make_cyg.mak	/^EXE = vim$(DEBUG_SUFFIX).exe$/;"	m
EXEC	src/testdir/test49.vim	/^function! EXEC(cmd)$/;"	f
EXEEXT	src/auto/config.mk	/^EXEEXT		= $/;"	m
EXETYPE	src/Make_bc5.mak	/^EXETYPE=-W$/;"	m
EXETYPE	src/Make_bc5.mak	/^EXETYPE=-WC$/;"	m
EXETYPE	src/Make_bc5.mak	/^EXETYPE=-WD$/;"	m
EXETYPE	src/Make_bc5.mak	/^EXETYPE=-ml$/;"	m
EXE_dependencies	src/Make_bc3.mak	/^EXE_dependencies = \\$/;"	m
EXFLAGS	src/ex_cmds.h	56;"	d
EXFLAG_LIST	src/ex_cmds.h	1194;"	d
EXFLAG_NR	src/ex_cmds.h	1195;"	d
EXFLAG_PRINT	src/ex_cmds.h	1196;"	d
EXMODE_NORMAL	src/vim.h	781;"	d
EXMODE_VIM	src/vim.h	782;"	d
EXNAME	src/auto/config.mk	/^EXNAME		= ex$/;"	m
EXPAND_AUGROUP	src/vim.h	753;"	d
EXPAND_BEHAVE	src/vim.h	775;"	d
EXPAND_BOOL_SETTINGS	src/vim.h	744;"	d
EXPAND_BUFFERS	src/vim.h	748;"	d
EXPAND_COLORS	src/vim.h	767;"	d
EXPAND_COMMANDS	src/vim.h	740;"	d
EXPAND_COMPILER	src/vim.h	768;"	d
EXPAND_CSCOPE	src/vim.h	772;"	d
EXPAND_DIRECTORIES	src/vim.h	742;"	d
EXPAND_ENV_VARS	src/vim.h	765;"	d
EXPAND_EVENTS	src/vim.h	749;"	d
EXPAND_EXPRESSION	src/vim.h	759;"	d
EXPAND_FILES	src/vim.h	741;"	d
EXPAND_FILES_IN_PATH	src/vim.h	777;"	d
EXPAND_FILETYPE	src/vim.h	776;"	d
EXPAND_FUNCTIONS	src/vim.h	757;"	d
EXPAND_HELP	src/vim.h	747;"	d
EXPAND_HIGHLIGHT	src/vim.h	752;"	d
EXPAND_LANGUAGE	src/vim.h	766;"	d
EXPAND_MAPPINGS	src/vim.h	755;"	d
EXPAND_MENUNAMES	src/vim.h	760;"	d
EXPAND_MENUS	src/vim.h	750;"	d
EXPAND_NOTHING	src/vim.h	739;"	d
EXPAND_OK	src/vim.h	738;"	d
EXPAND_OLD_SETTING	src/vim.h	746;"	d
EXPAND_OWNSYNTAX	src/vim.h	778;"	d
EXPAND_PROFILE	src/vim.h	774;"	d
EXPAND_SETTINGS	src/vim.h	743;"	d
EXPAND_SHELLCMD	src/vim.h	771;"	d
EXPAND_SIGN	src/vim.h	773;"	d
EXPAND_SYNTAX	src/vim.h	751;"	d
EXPAND_TAGS	src/vim.h	745;"	d
EXPAND_TAGS_LISTFILES	src/vim.h	756;"	d
EXPAND_UNSUCCESSFUL	src/vim.h	737;"	d
EXPAND_USER_CMD_FLAGS	src/vim.h	762;"	d
EXPAND_USER_COMMANDS	src/vim.h	761;"	d
EXPAND_USER_COMPLETE	src/vim.h	764;"	d
EXPAND_USER_DEFINED	src/vim.h	769;"	d
EXPAND_USER_FUNC	src/vim.h	758;"	d
EXPAND_USER_LIST	src/vim.h	770;"	d
EXPAND_USER_NARGS	src/vim.h	763;"	d
EXPAND_USER_VARS	src/vim.h	754;"	d
EXPL_ALLOC_INC	src/os_unix.c	5230;"	d	file:
EXPL_ALLOC_INC	src/os_vms.c	66;"	d	file:
EXPR	src/testdir/test49.vim	/^function! EXPR(x, n)$/;"	f
EXP_CASE	src/syntax.c	/^    EXP_CASE	    \/* expand ":syn case" arguments *\/$/;"	e	enum:__anon83	file:
EXP_CSCOPE_FIND	src/if_cscope.c	/^    EXP_CSCOPE_FIND,	\/* expand ":cscope find" arguments *\/$/;"	e	enum:__anon111	file:
EXP_CSCOPE_KILL	src/if_cscope.c	/^    EXP_CSCOPE_KILL	\/* expand ":cscope kill" arguments *\/$/;"	e	enum:__anon111	file:
EXP_CSCOPE_SUBCMD	src/if_cscope.c	/^    EXP_CSCOPE_SUBCMD,	\/* expand ":cscope" sub-commands *\/$/;"	e	enum:__anon111	file:
EXP_DEFINE	src/ex_cmds.c	/^    EXP_DEFINE,		\/* expand :sign define {name} args *\/$/;"	e	enum:__anon67	file:
EXP_PLACE	src/ex_cmds.c	/^    EXP_PLACE,		\/* expand :sign place {id} args *\/$/;"	e	enum:__anon67	file:
EXP_SCSCOPE_SUBCMD	src/if_cscope.c	/^    EXP_SCSCOPE_SUBCMD,	\/* expand ":scscope" sub-commands *\/$/;"	e	enum:__anon111	file:
EXP_SIGN_NAMES	src/ex_cmds.c	/^    EXP_SIGN_NAMES	\/* expand with name of placed signs *\/$/;"	e	enum:__anon67	file:
EXP_SUBCMD	src/ex_cmds.c	/^    EXP_SUBCMD,		\/* expand :sign sub-commands *\/$/;"	e	enum:__anon67	file:
EXP_SUBCMD	src/syntax.c	/^    EXP_SUBCMD,	    \/* expand ":syn" sub-commands *\/$/;"	e	enum:__anon83	file:
EXP_UNPLACE	src/ex_cmds.c	/^    EXP_UNPLACE,	\/* expand :sign unplace" *\/$/;"	e	enum:__anon67	file:
EXRC_FILE	src/os_amiga.h	176;"	d
EXRC_FILE	src/os_dos.h	69;"	d
EXRC_FILE	src/os_mac.h	162;"	d
EXRC_FILE	src/os_riscos.h	78;"	d
EXRC_FILE	src/os_unix.h	336;"	d
EXTARGET	src/Makefile	/^EXTARGET	= $(EXNAME)$(LNKEXT)$/;"	m
EXTERN	src/if_ruby.c	73;"	d	file:
EXTERN	src/if_tcl.c	70;"	d	file:
EXTERN	src/main.c	14;"	d	file:
EXTERN	src/vim.h	1670;"	d
EXTERNCMD	src/vim.h	693;"	d
EXTRA	src/ex_cmds.h	35;"	d
EXTRAS	src/Make_ivc.mak	/^EXTRAS="$(INTDIR)\/if_ole.obj" "$(INTDIR)\/vim.res" "$(INTDIR)\/gui.obj" "$(INTDIR)\/gui_w32.obj" "$(INTDIR)\/gui_beval.obj" "$(INTDIR)\/os_w32exe.obj"$/;"	m
EXTRAS	src/Make_ivc.mak	/^EXTRAS="$(INTDIR)\/vim.res" "$(INTDIR)\/gui.obj" "$(INTDIR)\/gui_w32.obj" "$(INTDIR)\/gui_beval.obj" "$(INTDIR)\/os_w32exe.obj"$/;"	m
EXTRAS	src/Make_ivc.mak	/^EXTRAS=$/;"	m
EXTRASIZE	src/misc2.c	6066;"	d	file:
EXTRA_MARKS	src/mark.c	27;"	d	file:
EXTRA_SRC	src/Makefile	/^EXTRA_SRC = hangulin.c if_lua.c if_mzsch.c auto\/if_perl.c if_perlsfio.c \\$/;"	m
E_CFLAGS	src/Make_mvc.mak	/^E_CFLAGS = $(E0_CFLAGS:"=\\")$/;"	m
Edit	runtime/ftplugin/gitrebase.vim	/^command! -buffer -bar Edit   :call s:choose('edit')$/;"	c
EditElsewhere	runtime/macros/editexisting.vim	/^func s:EditElsewhere(filename)$/;"	f
EditExisting	runtime/macros/editexisting.vim	/^func! EditExisting(fname, command)$/;"	f
EditVimrc	runtime/menu.vim	/^fun! s:EditVimrc()$/;"	f
Email	runtime/ftplugin/debchangelog.vim	/^function <SID>Email()$/;"	f
EmptystackP	runtime/autoload/xmlcomplete.vim	/^function! s:EmptystackP(sname)$/;"	f
End	runtime/macros/less.vim	/^fun! s:End()$/;"	f
EndBlockIndent	runtime/indent/ada.vim	/^function s:EndBlockIndent( prev_indent, prev_lnum, blockstart, blockend )$/;"	f
EndCond	src/if_xcmdsrv.c	/^typedef int (*EndCond) __ARGS((void *));$/;"	t	file:
EndScroll	src/gui_at_sb.c	/^EndScroll(w, event, params, num_params)$/;"	f	file:
EndScroll	src/gui_at_sb.c	/^static void EndScroll __ARGS((Widget, XEvent *, String *, Cardinal *));$/;"	p	file:	signature:(Widget, XEvent *, String *, Cardinal *)
EnhancedBP_H	src/gui_xmebwp.h	21;"	d
EnhancedB_H	src/gui_xmebw.h	21;"	d
Enter	src/gui_xmebw.c	/^Enter(Widget wid,$/;"	f	file:	signature:(Widget wid, XEvent *event, String *params UNUSED, Cardinal *num_params UNUSED)
Enter	src/gui_xmebw.c	/^static void Enter(Widget, XEvent *, String *, Cardinal *);$/;"	p	file:	signature:(Widget, XEvent *, String *, Cardinal *)
Enter_annotation_buffer	runtime/ftplugin/ocaml.vim	/^    function! s:Enter_annotation_buffer()$/;"	f
EnumWindowsProc	src/GvimExt/gvimext.cpp	/^BOOL CALLBACK CShellExt::EnumWindowsProc(HWND hWnd, LPARAM lParam)$/;"	f	class:CShellExt	signature:(HWND hWnd, LPARAM lParam)
EnumWindowsProc	src/GvimExt/gvimext.h	/^    static BOOL CALLBACK EnumWindowsProc(HWND hWnd, LPARAM lParam);$/;"	p	class:CShellExt	access:protected	signature:(HWND hWnd, LPARAM lParam)
Environ.CDPATH	runtime/macros/shellmenu.vim	/^imenu Environ.CDPATH ${CDPATH}$/;"	m
Environ.HOME	runtime/macros/shellmenu.vim	/^imenu Environ.HOME ${HOME}$/;"	m
Environ.IFS	runtime/macros/shellmenu.vim	/^imenu Environ.IFS ${IFS}$/;"	m
Environ.LC_CTYPE	runtime/macros/shellmenu.vim	/^imenu Environ.LC_CTYPE ${LC_CTYPE}$/;"	m
Environ.LC_MESSAGES	runtime/macros/shellmenu.vim	/^imenu Environ.LC_MESSAGES ${LC_MESSAGES}$/;"	m
Environ.MAIL	runtime/macros/shellmenu.vim	/^imenu Environ.MAIL ${MAIL}$/;"	m
Environ.MAILCHECK	runtime/macros/shellmenu.vim	/^imenu Environ.MAILCHECK ${MAILCHECK}$/;"	m
Environ.PATH	runtime/macros/shellmenu.vim	/^imenu Environ.PATH ${PATH}$/;"	m
Environ.PS1	runtime/macros/shellmenu.vim	/^imenu Environ.PS1 ${PS1}$/;"	m
Environ.PS2	runtime/macros/shellmenu.vim	/^imenu Environ.PS2 ${PS2}$/;"	m
Environ.SHACCT	runtime/macros/shellmenu.vim	/^imenu Environ.SHACCT ${SHACCT}$/;"	m
Environ.SHELL	runtime/macros/shellmenu.vim	/^imenu Environ.SHELL ${SHELL}$/;"	m
ErlangIndent	runtime/indent/erlang.vim	/^function ErlangIndent()$/;"	f
ErlangIndentAtferLine	runtime/indent/erlang.vim	/^function s:ErlangIndentAtferLine(l)$/;"	f
ErrDiag	src/VisVim/OleAut.cpp	/^void COleAutomationControl::ErrDiag ()$/;"	f	class:COleAutomationControl	signature:()
ErrDiag	src/VisVim/OleAut.h	/^	void ErrDiag ();$/;"	p	class:COleAutomationControl	access:public	signature:()
ErrMsg	runtime/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
Error	src/if_py_both.h	/^static OutputObject Error =$/;"	v
Error	src/testdir/test49.vim	/^    function! Error()$/;"	f
Escape	runtime/autoload/zip.vim	/^fun! s:Escape(fname,isfilt)$/;"	f
Eval	src/if_ole.cpp	/^    STDMETHOD(Eval)(BSTR expr, BSTR *result);$/;"	p	class:CVim	file:	access:public	signature:(BSTR expr, BSTR *result)
Eval	src/if_ole.cpp	/^CVim::Eval(BSTR expr, BSTR *result)$/;"	f	class:CVim	signature:(BSTR expr, BSTR *result)
Eval	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Eval )($/;"	m	struct:IVimVtbl	access:public
EventData	src/gui_at_sb.c	/^struct EventData$/;"	s	file:
EventData::count	src/gui_at_sb.c	/^    int count;$/;"	m	struct:EventData	file:	access:public
EventData::oldEvent	src/gui_at_sb.c	/^    XEvent *oldEvent;$/;"	m	struct:EventData	file:	access:public
EventModifiers2VimModifiers	src/gui_mac.c	/^EventModifiers2VimModifiers(EventModifiers macModifiers)$/;"	f	file:	signature:(EventModifiers macModifiers)
EventModifiers2VimMouseModifiers	src/gui_mac.c	/^EventModifiers2VimMouseModifiers(EventModifiers macModifiers)$/;"	f	signature:(EventModifiers macModifiers)
Examples	runtime/tools/efm_perl.pl	/^Examples:$/;"	l
ExecAsScript	src/testdir/test49.vim	/^com! -nargs=1 -bar ExecAsScript call ExecAsScript(<f-args>)$/;"	c
ExecAsScript	src/testdir/test49.vim	/^function! ExecAsScript(funcname)$/;"	f
Exec_reg	src/globals.h	/^EXTERN int Exec_reg INIT(= FALSE);	\/* TRUE when executing a register *\/$/;"	v
ExecuteDetachedProgram	src/if_sniff.c	/^ExecuteDetachedProgram(char *szBinary, char *szCmdLine,$/;"	f	file:	signature:(char *szBinary, char *szCmdLine, HANDLE hStdInput, HANDLE hStdOutput)
ExitInstance	src/VisVim/VisVim.cpp	/^	virtual int ExitInstance ();$/;"	p	class:CVisVimApp	file:	access:public	signature:()
ExitInstance	src/VisVim/VisVim.cpp	/^int CVisVimApp::ExitInstance ()$/;"	f	class:CVisVimApp	signature:()
Exit_annotation_buffer	runtime/ftplugin/ocaml.vim	/^    function! s:Exit_annotation_buffer()$/;"	f
ExpandBufnames	src/buffer.c	/^ExpandBufnames(pat, num_file, file, options)$/;"	f
ExpandCleanup	src/ex_getln.c	/^ExpandCleanup(xp)$/;"	f
ExpandEscape	src/ex_getln.c	/^ExpandEscape(xp, str, numfiles, files, options)$/;"	f
ExpandFromContext	src/ex_getln.c	/^ExpandFromContext(xp, pat, num_file, file, options)$/;"	f	file:
ExpandFromContext	src/ex_getln.c	/^static int	ExpandFromContext __ARGS((expand_T *xp, char_u *, int *, char_u ***, int));$/;"	p	file:	signature:(expand_T *xp, char_u *, int *, char_u ***, int)
ExpandGeneric	src/ex_getln.c	/^ExpandGeneric(xp, regmatch, num_file, file, func)$/;"	f
ExpandInit	src/ex_getln.c	/^ExpandInit(xp)$/;"	f
ExpandMappings	src/getchar.c	/^ExpandMappings(regmatch, num_file, file)$/;"	f
ExpandOldSetting	src/option.c	/^ExpandOldSetting(num_file, file)$/;"	f
ExpandOne	src/ex_getln.c	/^ExpandOne(xp, str, orig, options, mode)$/;"	f
ExpandRTDir	src/ex_getln.c	/^ExpandRTDir(pat, num_file, file, dirnames)$/;"	f	file:
ExpandRTDir	src/ex_getln.c	/^static int	ExpandRTDir __ARGS((char_u *pat, int *num_file, char_u ***file, char *dirname));$/;"	p	file:	signature:(char_u *pat, int *num_file, char_u ***file, char *dirname)
ExpandSettings	src/option.c	/^ExpandSettings(xp, regmatch, num_file, file)$/;"	f
ExpandUserDefined	src/ex_getln.c	/^ExpandUserDefined(xp, regmatch, num_file, file)$/;"	f	file:
ExpandUserDefined	src/ex_getln.c	/^static int	ExpandUserDefined __ARGS((expand_T *xp, regmatch_T *regmatch, int *num_file, char_u ***file));$/;"	p	file:	signature:(expand_T *xp, regmatch_T *regmatch, int *num_file, char_u ***file)
ExpandUserList	src/ex_getln.c	/^ExpandUserList(xp, num_file, file)$/;"	f	file:
ExpandUserList	src/ex_getln.c	/^static int	ExpandUserList __ARGS((expand_T *xp, int *num_file, char_u ***file));$/;"	p	file:	signature:(expand_T *xp, int *num_file, char_u ***file)
Explore	runtime/plugin/netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Explore		call netrw#Explore(<count>,0,0+<bang>0,<q-args>)$/;"	c
ExplorePatHls	runtime/autoload/netrw.vim	/^fun! s:ExplorePatHls(pattern)$/;"	f
ExtEdProtocolVersion	src/netbeans.c	/^static char *ExtEdProtocolVersion = "2.5";$/;"	v	file:
ExtraVim	src/testdir/test49.vim	/^    aug ExtraVim$/;"	a
ExtraVim	src/testdir/test49.vim	/^function! ExtraVim(...)$/;"	f
ExtraVimBase	src/testdir/test49.vim	/^let ExtraVimBase = expand("<sfile>")$/;"	v
ExtraVimCount	src/testdir/test49.vim	/^let ExtraVimCount = 0$/;"	v
ExtraVimTestEnv	src/testdir/test49.vim	/^let ExtraVimTestEnv = ""$/;"	v
ExtraVimThrowpoint	src/testdir/test49.vim	/^function! ExtraVimThrowpoint()$/;"	f
ExtractPosition	src/gui_at_sb.c	/^ExtractPosition(event, x, y, state)$/;"	f	file:
Extract_type_data	runtime/ftplugin/ocaml.vim	/^    function! s:Extract_type_data(block_pattern)$/;"	f
F	runtime/macros/hanoi/hanoi.vim	/^map F "hy2l$/;"	m
F	runtime/macros/less.vim	/^map F :e<CR>G<SID>L:sleep 1<CR>F$/;"	m
F	runtime/macros/urm/urm.vim	/^map F yl$/;"	m
F	src/testdir/test49.vim	/^		    function F{ERR(t) + CONT(t)}$/;"	f
F	src/testdir/test49.vim	/^		    function F{ERR(t) + CONT(t)}()$/;"	f
F	src/testdir/test49.vim	/^		    function F{INT(t) + CONT(t)}$/;"	f
F	src/testdir/test49.vim	/^		    function F{THR(t) + CONT(t)}$/;"	f
F	src/testdir/test49.vim	/^		    function F{novar + CONT(t)}$/;"	f
F	src/testdir/test49.vim	/^		    function F{novar + CONT(t)}()$/;"	f
F	src/testdir/test49.vim	/^	function! F{EXPR("function-def", 2)}()$/;"	f
F	src/testdir/test49.vim	/^	function! F{EXPR("function-def-ok", 1)}()$/;"	f
F	src/testdir/test49.vim	/^	function! F{i}(i, arg)$/;"	f
F	src/testdir/test49.vim	/^    function F()$/;"	f
F	src/testdir/test49.vim	/^    function F{ERR(33) + CONT(33)}$/;"	f
F	src/testdir/test49.vim	/^    function F{WRAP(42, ERRabort(42)) + CONT(42)}$/;"	f
F	src/testdir/test49.vim	/^    function! F() abort$/;"	f
F	src/testdir/test49.vim	/^    function! F()$/;"	f
F	src/testdir/test49.vim	/^    function! F(jump)	" not executed as function, transformed to a script$/;"	f
F	src/testdir/test49.vim	/^    function! F(n)$/;"	f
F	src/testdir/test49.vim	/^    function! F(reason, n) abort$/;"	f
F	src/testdir/test49.vim	/^function! F() abort$/;"	f
F	src/testdir/test49.vim	/^function! F()$/;"	f
F	src/testdir/test49.vim	/^function! F(arg, line)$/;"	f
F	src/testdir/test49.vim	/^function! F(n)$/;"	f
F	src/testdir/test49.vim	/^function! F(x, n)$/;"	f
F	src/testdir/test49.vim	/^function! F(x, y, n)$/;"	f
F	src/testdir/test49.vim	/^function! F{1 + ERR() + OK()}(arg)$/;"	f
F0	src/sha256.c	94;"	d	file:
F0	src/testdir/test49.vim	/^	function F0$/;"	f
F0	src/testdir/test49.vim	/^	function! F0()$/;"	f
F0	src/testdir/test49.vim	/^function! F0()$/;"	f
F1	src/blowfish.c	318;"	d	file:
F1	src/sha256.c	95;"	d	file:
F1	src/testdir/test49.vim	/^	    function! F1(arg)$/;"	f
F1	src/testdir/test49.vim	/^function! F1(arg)$/;"	f
F1	src/testdir/test49.vim	/^function! F1(arg1)$/;"	f
F2	src/blowfish.c	325;"	d	file:
F2	src/testdir/test49.vim	/^function! F2(arg1, arg2)$/;"	f
FAIL	src/dosinst.h	76;"	d
FAIL	src/vim.h	712;"	d
FALSE	src/dosinst.h	80;"	d
FALSE	src/os_amiga.c	23;"	d	file:
FALSE	src/os_amiga.c	63;"	d	file:
FALSE	src/os_amiga.c	64;"	d	file:
FALSE	src/vim.h	1356;"	d
FAR	src/gui_w48.c	84;"	d	file:
FARPROC	src/if_python.c	103;"	d	file:
FARPROC	src/if_python3.c	81;"	d	file:
FARSI_0	src/farsi.h	91;"	d
FARSI_1	src/farsi.h	92;"	d
FARSI_2	src/farsi.h	93;"	d
FARSI_3	src/farsi.h	94;"	d
FARSI_4	src/farsi.h	95;"	d
FARSI_5	src/farsi.h	96;"	d
FARSI_6	src/farsi.h	97;"	d
FARSI_7	src/farsi.h	98;"	d
FARSI_8	src/farsi.h	99;"	d
FARSI_9	src/farsi.h	100;"	d
FASTCALL	src/Make_bc5.mak	/^FASTCALL = yes$/;"	m
FC_ABORT	src/eval.c	203;"	d	file:
FC_DICT	src/eval.c	205;"	d	file:
FC_RANGE	src/eval.c	204;"	d	file:
FDC_OFF	src/screen.c	2077;"	d	file:
FDO_ALL	src/option.h	461;"	d
FDO_BLOCK	src/option.h	462;"	d
FDO_HOR	src/option.h	463;"	d
FDO_INSERT	src/option.h	469;"	d
FDO_JUMP	src/option.h	471;"	d
FDO_MARK	src/option.h	464;"	d
FDO_PERCENT	src/option.h	465;"	d
FDO_QUICKFIX	src/option.h	466;"	d
FDO_SEARCH	src/option.h	467;"	d
FDO_TAG	src/option.h	468;"	d
FDO_UNDO	src/option.h	470;"	d
FD_CLOSED	src/fold.c	40;"	d	file:
FD_LEVEL	src/fold.c	41;"	d	file:
FD_OPEN	src/fold.c	39;"	d	file:
FE	src/farsi.h	133;"	d
FEATURES	src/Make_bc5.mak	/^FEATURES = BIG$/;"	m
FEATURES	src/Make_bc5.mak	/^FEATURES = SMALL$/;"	m
FEATURES	src/Make_cyg.mak	/^FEATURES = BIG$/;"	m
FEATURES	src/Make_ming.mak	/^FEATURES=BIG$/;"	m
FEATURES	src/Make_mvc.mak	/^FEATURES = BIG$/;"	m
FEAT_ARABIC	src/feature.h	332;"	d
FEAT_ARP	src/feature.h	1186;"	d
FEAT_AUTOCHDIR	src/feature.h	1305;"	d
FEAT_AUTOCMD	src/feature.h	459;"	d
FEAT_BEVAL	src/feature.h	1258;"	d
FEAT_BEVAL_TIP	src/feature.h	1266;"	d
FEAT_BEVAL_TIP	src/vim.h	216;"	d
FEAT_BIG	src/feature.h	64;"	d
FEAT_BIG	src/feature.h	78;"	d
FEAT_BROWSE	src/feature.h	799;"	d
FEAT_BROWSE	src/gui_riscos.h	9;"	d
FEAT_BROWSE_CMD	src/feature.h	797;"	d
FEAT_BYTEOFF	src/feature.h	490;"	d
FEAT_CINDENT	src/feature.h	594;"	d
FEAT_CLIENTSERVER	src/feature.h	1138;"	d
FEAT_CLIENTSERVER	src/vim.h	222;"	d
FEAT_CLIPBOARD	src/feature.h	1100;"	d
FEAT_CLIPBOARD	src/feature.h	1112;"	d
FEAT_CLIPBOARD	src/feature.h	224;"	d
FEAT_CLIPBOARD	src/os_win16.h	33;"	d
FEAT_CLIPBOARD	src/os_win32.h	72;"	d
FEAT_CLIPBOARD	src/vim.h	154;"	d
FEAT_CLIPBOARD	src/vim.h	98;"	d
FEAT_CMDHIST	src/feature.h	126;"	d
FEAT_CMDL_COMPL	src/feature.h	206;"	d
FEAT_CMDL_INFO	src/feature.h	246;"	d
FEAT_CMDL_INFO	src/feature.h	485;"	d
FEAT_CMDWIN	src/feature.h	147;"	d
FEAT_COMMENTS	src/feature.h	605;"	d
FEAT_COMPL_FUNC	src/feature.h	425;"	d
FEAT_CONCEAL	src/feature.h	542;"	d
FEAT_CON_DIALOG	src/feature.h	815;"	d
FEAT_CRYPT	src/feature.h	612;"	d
FEAT_CSCOPE	src/auto/config.h	371;"	d
FEAT_CSCOPE	src/feature.h	379;"	d
FEAT_CURSORBIND	src/feature.h	743;"	d
FEAT_CW_EDITOR	src/feature.h	836;"	d
FEAT_DIFF	src/feature.h	467;"	d
FEAT_DIGRAPHS	src/feature.h	165;"	d
FEAT_DND	src/feature.h	1120;"	d
FEAT_EMACS_TAGS	src/feature.h	345;"	d
FEAT_EVAL	src/feature.h	388;"	d
FEAT_EX_EXTRA	src/feature.h	261;"	d
FEAT_FIND_ID	src/feature.h	290;"	d
FEAT_FKMAP	src/feature.h	317;"	d
FEAT_FLOAT	src/feature.h	390;"	d
FEAT_FOLDING	src/feature.h	154;"	d
FEAT_FOOTER	src/feature.h	1296;"	d
FEAT_GETTEXT	src/feature.h	633;"	d
FEAT_GETTEXT	src/vim.h	556;"	d
FEAT_GUI	src/vim.h	120;"	d
FEAT_GUI_ATHENA	src/vim.h	210;"	d
FEAT_GUI_DIALOG	src/feature.h	816;"	d
FEAT_GUI_DIALOG	src/feature.h	825;"	d
FEAT_GUI_GTK	src/vim.h	213;"	d
FEAT_GUI_MAC	src/vim.h	109;"	d
FEAT_GUI_MOTIF	src/vim.h	207;"	d
FEAT_GUI_MSWIN	src/vim.h	131;"	d
FEAT_GUI_TABLINE	src/feature.h	789;"	d
FEAT_GUI_TEXTDIALOG	src/feature.h	831;"	d
FEAT_GUI_X11	src/feature.h	1271;"	d
FEAT_GUI_X11	src/vim.h	201;"	d
FEAT_INS_EXPAND	src/feature.h	198;"	d
FEAT_JUMPLIST	src/feature.h	142;"	d
FEAT_KEYMAP	src/feature.h	183;"	d
FEAT_LANGMAP	src/feature.h	175;"	d
FEAT_LIBCALL	src/feature.h	729;"	d
FEAT_LINEBREAK	src/feature.h	254;"	d
FEAT_LISP	src/feature.h	590;"	d
FEAT_LISTCMDS	src/feature.h	109;"	d
FEAT_LOCALMAP	src/feature.h	190;"	d
FEAT_MBYTE	src/feature.h	646;"	d
FEAT_MBYTE	src/feature.h	663;"	d
FEAT_MBYTE_IME	src/vim.h	538;"	d
FEAT_MENU	src/feature.h	1281;"	d
FEAT_MENU	src/feature.h	750;"	d
FEAT_MENU	src/feature.h	777;"	d
FEAT_MODIFY_FNAME	src/feature.h	452;"	d
FEAT_MODIFY_FNAME	src/os_riscos.h	19;"	d
FEAT_MOUSE	src/feature.h	1090;"	d
FEAT_MOUSESHAPE	src/feature.h	1162;"	d
FEAT_MOUSE_DEC	src/feature.h	1063;"	d
FEAT_MOUSE_GPM	src/feature.h	1074;"	d
FEAT_MOUSE_NET	src/feature.h	1060;"	d
FEAT_MOUSE_PTERM	src/feature.h	1069;"	d
FEAT_MOUSE_TTY	src/feature.h	1087;"	d
FEAT_MOUSE_XTERM	src/feature.h	1057;"	d
FEAT_MULTI_LANG	src/feature.h	629;"	d
FEAT_NETBEANS_INTG	src/auto/config.h	422;"	d
FEAT_NETBEANS_INTG	src/feature.h	1229;"	d
FEAT_NORMAL	src/auto/config.h	312;"	d
FEAT_NORMAL	src/feature.h	69;"	d
FEAT_NORMAL	src/feature.h	81;"	d
FEAT_OSFILETYPE	src/os_riscos.h	20;"	d
FEAT_PATH_EXTRA	src/feature.h	298;"	d
FEAT_PERSISTENT_UNDO	src/feature.h	1313;"	d
FEAT_POSTSCRIPT	src/feature.h	445;"	d
FEAT_PRINTER	src/feature.h	441;"	d
FEAT_PROFILE	src/feature.h	401;"	d
FEAT_QUICKFIX	src/feature.h	275;"	d
FEAT_RELTIME	src/feature.h	411;"	d
FEAT_RESTORE_ORIG_SCREEN	src/os_win32.c	1958;"	d	file:
FEAT_RIGHTLEFT	src/feature.h	307;"	d
FEAT_RIGHTLEFT	src/feature.h	321;"	d
FEAT_RIGHTLEFT	src/feature.h	336;"	d
FEAT_SCROLLBIND	src/feature.h	736;"	d
FEAT_SEARCHPATH	src/feature.h	282;"	d
FEAT_SEARCH_EXTRA	src/feature.h	268;"	d
FEAT_SESSION	src/feature.h	620;"	d
FEAT_SHORTCUT	src/os_win32.h	55;"	d
FEAT_SIGNS	src/feature.h	1238;"	d
FEAT_SIGN_ICONS	src/feature.h	1243;"	d
FEAT_SMALL	src/feature.h	67;"	d
FEAT_SMALL	src/feature.h	84;"	d
FEAT_SMARTINDENT	src/feature.h	598;"	d
FEAT_SOURCE_FFS	src/os_mac.h	82;"	d
FEAT_SOURCE_FF_MAC	src/os_mac.h	83;"	d
FEAT_SPELL	src/feature.h	551;"	d
FEAT_STL_OPT	src/feature.h	483;"	d
FEAT_SUN_WORKSHOP	src/feature.h	1221;"	d
FEAT_SYN_HL	src/feature.h	534;"	d
FEAT_SYSMOUSE	src/feature.h	1078;"	d
FEAT_TAG_BINS	src/feature.h	358;"	d
FEAT_TAG_OLDSTATIC	src/feature.h	366;"	d
FEAT_TEAROFF	src/feature.h	752;"	d
FEAT_TERMRESPONSE	src/feature.h	1147;"	d
FEAT_TEXTOBJ	src/feature.h	418;"	d
FEAT_TINY	src/feature.h	87;"	d
FEAT_TITLE	src/feature.h	479;"	d
FEAT_TOOLBAR	src/feature.h	772;"	d
FEAT_USR_CMDS	src/feature.h	432;"	d
FEAT_VERTSPLIT	src/feature.h	116;"	d
FEAT_VIMINFO	src/feature.h	524;"	d
FEAT_VIMINFO	src/os_riscos.h	65;"	d
FEAT_VIRTUALEDIT	src/feature.h	232;"	d
FEAT_VISUAL	src/feature.h	1102;"	d
FEAT_VISUAL	src/feature.h	218;"	d
FEAT_VISUALEXTRA	src/feature.h	220;"	d
FEAT_VREPLACE	src/feature.h	239;"	d
FEAT_WAK	src/option.h	865;"	d
FEAT_WILDIGN	src/feature.h	498;"	d
FEAT_WILDMENU	src/feature.h	505;"	d
FEAT_WINDOWS	src/feature.h	100;"	d
FEAT_WINDOWS	src/feature.h	119;"	d
FEAT_WRITEBACKUP	src/feature.h	856;"	d
FEAT_X11	src/vim.h	191;"	d
FEAT_X11	src/vim.h	198;"	d
FEAT_XCLIPBOARD	src/feature.h	1110;"	d
FEAT_XCLIPBOARD	src/vim.h	204;"	d
FEAT_XFONTSET	src/feature.h	1261;"	d
FEAT_XFONTSET	src/feature.h	697;"	d
FEAT_XFONTSET	src/feature.h	714;"	d
FEAT_XIM	src/auto/config.h	380;"	d
FEAT_XIM	src/vim.h	219;"	d
FF	src/ascii.h	113;"	d
FF	src/ascii.h	30;"	d
FF	src/vim.h	2116;"	d
FF_DOS	src/option.h	47;"	d
FF_MAC	src/option.h	48;"	d
FF_MAX_STAR_STAR_EXPAND	src/misc2.c	4149;"	d	file:
FF_UNIX	src/option.h	49;"	d
FGETS_SIZE	src/fileio.c	6423;"	d	file:
FILE1	src/ex_cmds.h	59;"	d
FILEMOD	src/Makefile	/^FILEMOD = 644$/;"	m
FILES	src/ex_cmds.h	57;"	d
FILETYPE_FILE	src/os_amiga.h	118;"	d
FILETYPE_FILE	src/os_dos.h	83;"	d
FILETYPE_FILE	src/os_mac.h	170;"	d
FILETYPE_FILE	src/os_riscos.h	111;"	d
FILETYPE_FILE	src/os_unix.h	250;"	d
FILE_SEP	src/xxd/xxd.c	176;"	d	file:
FILL_X	src/gui.h	112;"	d
FILL_X	src/gui.h	118;"	d
FILL_Y	src/gui.h	113;"	d
FILL_Y	src/gui.h	122;"	d
FINDFILE_BOTH	src/vim.h	817;"	d
FINDFILE_DIR	src/vim.h	816;"	d
FINDFILE_FILE	src/vim.h	815;"	d
FINDREPLACE	src/gui_w48.c	/^typedef int FINDREPLACE;$/;"	t	file:
FIND_ANY	src/vim.h	843;"	d
FIND_COMPOUND	src/spell.c	835;"	d	file:
FIND_DEFINE	src/vim.h	844;"	d
FIND_EVAL	src/vim.h	904;"	d
FIND_FOLDWORD	src/spell.c	832;"	d	file:
FIND_IDENT	src/vim.h	902;"	d
FIND_KEEPCOMPOUND	src/spell.c	836;"	d	file:
FIND_KEEPWORD	src/spell.c	833;"	d	file:
FIND_PREFIX	src/spell.c	834;"	d	file:
FIND_REPLACE_DIALOG	src/feature.h	1130;"	d
FIND_STRING	src/vim.h	903;"	d
FIO_ALL	src/fileio.c	105;"	d	file:
FIO_CODEPAGE	src/fileio.c	94;"	d	file:
FIO_ENCRYPTED	src/fileio.c	102;"	d	file:
FIO_ENDIAN_L	src/fileio.c	101;"	d	file:
FIO_GET_CP	src/fileio.c	96;"	d	file:
FIO_LATIN1	src/fileio.c	88;"	d	file:
FIO_MACROMAN	src/fileio.c	99;"	d	file:
FIO_NOCONVERT	src/fileio.c	103;"	d	file:
FIO_PUT_CP	src/fileio.c	95;"	d	file:
FIO_UCS2	src/fileio.c	90;"	d	file:
FIO_UCS4	src/fileio.c	91;"	d	file:
FIO_UCSBOM	src/fileio.c	104;"	d	file:
FIO_UTF16	src/fileio.c	92;"	d	file:
FIO_UTF8	src/fileio.c	89;"	d	file:
FIRST_NL	src/regexp.c	169;"	d	file:
FIXVAR_CNT	src/eval.c	230;"	d	file:
FLEN_FIXED	src/eval.c	8183;"	d	file:
FL_ADJUST_CURSOR	src/if_tcl.c	510;"	d	file:
FL_UPDATE_CURBUF	src/if_tcl.c	509;"	d	file:
FL_UPDATE_SCREEN	src/if_tcl.c	508;"	d	file:
FMT8BIT	src/gui_at_fs.c	52;"	d	file:
FMT_PATTERNS	src/quickfix.c	79;"	d	file:
FM_BACKWARD	src/vim.h	965;"	d
FM_BLOCKSTOP	src/vim.h	967;"	d
FM_FORWARD	src/vim.h	966;"	d
FM_SKIPCOMM	src/vim.h	968;"	d
FNAME	src/regexp.c	178;"	d	file:
FNAME_EXP	src/vim.h	908;"	d
FNAME_HYP	src/vim.h	909;"	d
FNAME_ILLEGAL	src/os_amiga.h	70;"	d
FNAME_ILLEGAL	src/os_msdos.h	54;"	d
FNAME_ILLEGAL	src/os_os2_cfg.h	14;"	d
FNAME_ILLEGAL	src/os_vms_conf.h	5;"	d
FNAME_ILLEGAL	src/os_win16.h	56;"	d
FNAME_ILLEGAL	src/os_win32.h	92;"	d
FNAME_INCL	src/vim.h	910;"	d
FNAME_MESS	src/vim.h	907;"	d
FNAME_REL	src/vim.h	911;"	d
FNE_CHECK_START	src/eval.c	768;"	d	file:
FNE_INCL_BR	src/eval.c	767;"	d	file:
FONTLEN	src/gui.c	683;"	d	file:
FONTSET_ALWAYS	src/gui.h	95;"	d
FONT_STYLE_BUFFER_SIZE	src/gui_mac.c	1428;"	d	file:
FORCE_BIN	src/ex_cmds.h	1190;"	d
FORCE_NOBIN	src/ex_cmds.h	1191;"	d
FOREGROUND	src/gui_x11_pm.h	89;"	d
FOREVER	src/os_msdos.c	706;"	d	file:
FORWARD	src/vim.h	702;"	d
FORWARD_FILE	src/vim.h	704;"	d
FOR_ALL_TAB_WINDOWS	src/globals.h	533;"	d
FOR_ALL_TAB_WINDOWS	src/globals.h	542;"	d
FOR_ALL_WINDOWS	src/globals.h	532;"	d
FOR_ALL_WINDOWS	src/globals.h	541;"	d
FOR_MSW	src/xpm_w32.c	28;"	d	file:
FO_ALL	src/option.h	110;"	d
FO_AUTO	src/option.h	106;"	d
FO_INS_BLANK	src/option.h	100;"	d
FO_INS_LONG	src/option.h	99;"	d
FO_INS_VI	src/option.h	98;"	d
FO_MBYTE_BREAK	src/option.h	101;"	d
FO_MBYTE_JOIN	src/option.h	102;"	d
FO_MBYTE_JOIN2	src/option.h	103;"	d
FO_ONE_LETTER	src/option.h	104;"	d
FO_OPEN_COMS	src/option.h	94;"	d
FO_Q_COMS	src/option.h	95;"	d
FO_Q_NUMBER	src/option.h	96;"	d
FO_Q_SECOND	src/option.h	97;"	d
FO_RET_COMS	src/option.h	93;"	d
FO_WHITE_PAR	src/option.h	105;"	d
FO_WRAP	src/option.h	91;"	d
FO_WRAP_COMS	src/option.h	92;"	d
FPC_DIFF	src/vim.h	1004;"	d
FPC_DIFFX	src/vim.h	1006;"	d
FPC_NOTX	src/vim.h	1005;"	d
FPC_SAME	src/vim.h	1003;"	d
FPC_SAMEX	src/vim.h	1007;"	d
FRACTION_MULT	src/window.c	5474;"	d	file:
FRD_FINDNEXT	src/gui.h	500;"	d
FRD_MATCH_CASE	src/gui.h	508;"	d
FRD_REPLACE	src/gui.h	502;"	d
FRD_REPLACEALL	src/gui.h	503;"	d
FRD_R_FINDNEXT	src/gui.h	501;"	d
FRD_TYPE_MASK	src/gui.h	505;"	d
FRD_UNDO	src/gui.h	504;"	d
FRD_WHOLE_WORD	src/gui.h	507;"	d
FREAD_SIZE	src/eval.c	14183;"	d	file:
FREE_FNAME	src/edit.c	80;"	d	file:
FROM_LEFT_1ST_BUTTON_PRESSED	src/os_mswin.c	64;"	d	file:
FROM_LEFT_1ST_BUTTON_PRESSED	src/os_win32.c	51;"	d	file:
FROM_LEFT_2ND_BUTTON_PRESSED	src/os_mswin.c	70;"	d	file:
FROM_LEFT_2ND_BUTTON_PRESSED	src/os_win32.c	57;"	d	file:
FROM_LEFT_3RD_BUTTON_PRESSED	src/os_mswin.c	73;"	d	file:
FROM_LEFT_3RD_BUTTON_PRESSED	src/os_win32.c	60;"	d	file:
FROM_LEFT_4TH_BUTTON_PRESSED	src/os_mswin.c	76;"	d	file:
FROM_LEFT_4TH_BUTTON_PRESSED	src/os_win32.c	63;"	d	file:
FROM_OLE_STR	src/VisVim/OleAut.h	60;"	d
FROM_OLE_STRING	src/VisVim/OleAut.h	54;"	d
FROM_OLE_STRING_BUF	src/VisVim/OleAut.h	55;"	d
FROM_OLE_STR_BUF	src/VisVim/OleAut.h	61;"	d
FR_COL	src/structs.h	1774;"	d
FR_LEAF	src/structs.h	1772;"	d
FR_ROW	src/structs.h	1773;"	d
FTOFF_FILE	src/os_amiga.h	127;"	d
FTOFF_FILE	src/os_dos.h	92;"	d
FTOFF_FILE	src/os_mac.h	179;"	d
FTOFF_FILE	src/os_riscos.h	120;"	d
FTOFF_FILE	src/os_unix.h	259;"	d
FTPLUGIN_FILE	src/os_amiga.h	121;"	d
FTPLUGIN_FILE	src/os_dos.h	86;"	d
FTPLUGIN_FILE	src/os_mac.h	173;"	d
FTPLUGIN_FILE	src/os_riscos.h	114;"	d
FTPLUGIN_FILE	src/os_unix.h	253;"	d
FTPLUGOF_FILE	src/os_amiga.h	130;"	d
FTPLUGOF_FILE	src/os_dos.h	95;"	d
FTPLUGOF_FILE	src/os_mac.h	182;"	d
FTPLUGOF_FILE	src/os_riscos.h	123;"	d
FTPLUGOF_FILE	src/os_unix.h	262;"	d
FTPLUGSOURCE	src/Makefile	/^FTPLUGSOURCE = ..\/runtime\/ftplugin$/;"	m
FTPLUGSUBDIR	src/Makefile	/^FTPLUGSUBDIR = \/ftplugin$/;"	m
FTPLUGSUBLOC	src/Makefile	/^FTPLUGSUBLOC	= $(VIMRTLOC)$(FTPLUGSUBDIR)$/;"	m
FTRules	runtime/filetype.vim	/^func! s:FTRules()$/;"	f
FTVB	runtime/filetype.vim	/^func! s:FTVB(alt)$/;"	f
FTasm	runtime/filetype.vim	/^func! s:FTasm()$/;"	f
FTasmsyntax	runtime/filetype.vim	/^func! s:FTasmsyntax()$/;"	f
FTbtm	runtime/filetype.vim	/^func! s:FTbtm()$/;"	f
FTchange	runtime/filetype.vim	/^func! s:FTchange()$/;"	f
FTe	runtime/filetype.vim	/^func! s:FTe()$/;"	f
FTent	runtime/filetype.vim	/^func! s:FTent()$/;"	f
FTheader	runtime/filetype.vim	/^func! s:FTheader()$/;"	f
FThtml	runtime/filetype.vim	/^func! s:FThtml()$/;"	f
FTidl	runtime/filetype.vim	/^func! s:FTidl()$/;"	f
FTinc	runtime/filetype.vim	/^func! s:FTinc()$/;"	f
FTlpc	runtime/filetype.vim	/^func! s:FTlpc()$/;"	f
FTm	runtime/filetype.vim	/^func! s:FTm()$/;"	f
FTmm	runtime/filetype.vim	/^func! s:FTmm()$/;"	f
FTmms	runtime/filetype.vim	/^func! s:FTmms()$/;"	f
FTnroff	runtime/filetype.vim	/^func! s:FTnroff()$/;"	f
FTperl	runtime/filetype.vim	/^func! s:FTperl()$/;"	f
FTpl	runtime/filetype.vim	/^func! s:FTpl()$/;"	f
FTprogress_asm	runtime/filetype.vim	/^func! s:FTprogress_asm()$/;"	f
FTprogress_cweb	runtime/filetype.vim	/^func! s:FTprogress_cweb()$/;"	f
FTprogress_pascal	runtime/filetype.vim	/^func! s:FTprogress_pascal()$/;"	f
FTr	runtime/filetype.vim	/^func! s:FTr()$/;"	f
FTtex	runtime/filetype.vim	/^func! s:FTtex()$/;"	f
FTxml	runtime/filetype.vim	/^func! s:FTxml()$/;"	f
FTy	runtime/filetype.vim	/^func! s:FTy()$/;"	f
FUNCARG	src/eval.c	225;"	d	file:
FUNCLINE	src/eval.c	226;"	d	file:
F_A	src/hangulin.c	26;"	d	file:
F_BCOMMA	src/farsi.h	86;"	d
F_BLANK	src/farsi.h	74;"	d
F_BLANK	src/if_python3.c	48;"	d	file:
F_BSIZE	src/memfile.c	46;"	d	file:
F_BSIZE	src/memfile.c	52;"	d	file:
F_BSLASH	src/farsi.h	156;"	d
F_COMMA	src/farsi.h	81;"	d
F_CURRENCY	src/farsi.h	78;"	d
F_DCOLON	src/farsi.h	102;"	d
F_DIVIDE	src/farsi.h	88;"	d
F_EQUALS	src/farsi.h	105;"	d
F_EXCL	src/farsi.h	77;"	d
F_F	src/hangulin.c	23;"	d	file:
F_GREATER	src/farsi.h	104;"	d
F_HE	src/farsi.h	141;"	d
F_L	src/hangulin.c	25;"	d	file:
F_LBRACE	src/farsi.h	149;"	d
F_LBRACK	src/farsi.h	147;"	d
F_LESS	src/farsi.h	106;"	d
F_LPARENT	src/farsi.h	82;"	d
F_LQUOT	src/farsi.h	151;"	d
F_M	src/hangulin.c	24;"	d	file:
F_MINUS	src/farsi.h	87;"	d
F_MUL	src/farsi.h	84;"	d
F_NULL	src/hangulin.c	27;"	d	file:
F_PCN	src/farsi.h	76;"	d
F_PERCENT	src/farsi.h	79;"	d
F_PERIOD	src/farsi.h	80;"	d
F_PIPE	src/farsi.h	155;"	d
F_PLUS	src/farsi.h	85;"	d
F_PSP	src/farsi.h	75;"	d
F_QUESTION	src/farsi.h	107;"	d
F_RBRACE	src/farsi.h	150;"	d
F_RBRACK	src/farsi.h	148;"	d
F_RPARENT	src/farsi.h	83;"	d
F_RQUOT	src/farsi.h	152;"	d
F_SEMICOLON	src/farsi.h	103;"	d
F_SLASH	src/farsi.h	89;"	d
F_STAR	src/farsi.h	153;"	d
F_UNDERLINE	src/farsi.h	154;"	d
F_is_TyB_TyC_TyD	src/farsi.c	/^F_is_TyB_TyC_TyD(src, offset)$/;"	f	file:
F_is_TyB_TyC_TyD	src/farsi.c	/^static int F_is_TyB_TyC_TyD __ARGS((int src, int offset));$/;"	p	file:	signature:(int src, int offset)
F_is_TyC_TyD	src/farsi.c	/^F_is_TyC_TyD(c)$/;"	f	file:
F_is_TyC_TyD	src/farsi.c	/^static int F_is_TyC_TyD __ARGS((int c));$/;"	p	file:	signature:(int c)
F_is_TyE	src/farsi.c	/^F_is_TyE(c)$/;"	f	file:
F_is_TyE	src/farsi.c	/^static int F_is_TyE __ARGS((int c));$/;"	p	file:	signature:(int c)
F_isalpha	src/farsi.c	/^F_isalpha(c)$/;"	f
F_ischar	src/farsi.c	/^F_ischar(c)$/;"	f
F_isdigit	src/farsi.c	/^F_isdigit(c)$/;"	f
F_isterm	src/farsi.c	/^F_isterm(c)$/;"	f	file:
F_isterm	src/farsi.c	/^static int F_isterm __ARGS((int c));$/;"	p	file:	signature:(int c)
FileExplorer	runtime/plugin/netrwPlugin.vim	/^augroup FileExplorer$/;"	a
FileFormat	runtime/menu.vim	/^fun! s:FileFormat()$/;"	f
FileName	runtime/tools/ccfilter.c	/^char	       FileName[1024];$/;"	v
FileReadable	runtime/autoload/netrw.vim	/^fun! s:FileReadable(fname)$/;"	f
FillArea	src/gui_at_sb.c	/^FillArea(sbw, top, bottom, fill, draw_shadow)$/;"	f	file:
Finalise	runtime/ftplugin/debchangelog.vim	/^function Finalise()$/;"	f
FinaliseMenu	runtime/ftplugin/debchangelog.vim	/^function <SID>FinaliseMenu()$/;"	f
Finalised	runtime/ftplugin/debchangelog.vim	/^function <SID>Finalised()$/;"	f
Find	runtime/optwin.vim	/^fun! <SID>Find(lnum)$/;"	f
Find	src/if_cscope.h	/^typedef enum { Add, Find, Help, Kill, Reset, Show } csid_e;$/;"	e	enum:__anon87
FindLet	runtime/indent/ocaml.vim	/^function s:FindLet(pstart, pmid, pend)$/;"	f
FindLet	runtime/indent/sml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
FindOpenBracket	runtime/indent/php.vim	/^function! FindOpenBracket(lnum) " {{{$/;"	f
FindPage	runtime/ftplugin/man.vim	/^func <SID>FindPage(sect, page)$/;"	f
FindPair	runtime/indent/ocaml.vim	/^function s:FindPair(pstart, pmid, pend)$/;"	f
FindPair	runtime/indent/sml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
FindPrevNonBlankNonComment	runtime/indent/erlang.vim	/^function s:FindPrevNonBlankNonComment(lnum)$/;"	f
FindProcessBySignature	src/gui_mac.c	/^FindProcessBySignature($/;"	f	signature:( const OSType targetType, const OSType targetCreator, ProcessSerialNumberPtr psnPtr)
FindTheIfOfAnElse	runtime/indent/php.vim	/^function! FindTheIfOfAnElse (lnum, StopAfterFirstPrevElse) " {{{$/;"	f
FindTheSwitchIndent	runtime/indent/php.vim	/^function! FindTheSwitchIndent (lnum) " {{{$/;"	f
FindWindowTitle	src/gui_w32.c	/^FindWindowTitle(HWND hwnd, LPARAM lParam)$/;"	f	file:	signature:(HWND hwnd, LPARAM lParam)
Find_common_path	runtime/ftplugin/ocaml.vim	/^  function! s:Find_common_path (p1,p2)$/;"	f
First_word_len	runtime/indent/awk.vim	/^function! s:First_word_len( line )$/;"	f
FitConsoleWindow	src/os_win32.c	/^FitConsoleWindow($/;"	f	file:	signature:( COORD dwBufferSize, BOOL WantAdjust)
FixBeginfigs	runtime/ftplugin/mp.vim	/^  command -nargs=0 FixBeginfigs call s:fix_beginfigs()$/;"	c
FixFText	runtime/menu.vim	/^fun! s:FixFText()$/;"	f
Fixup	runtime/ftplugin/gitrebase.vim	/^command! -buffer -bar Fixup  :call s:choose('fixup')$/;"	c
FloatInRange	src/gui_at_sb.c	/^FloatInRange(num, small, big)$/;"	f	file:
FnameEscape	runtime/menu.vim	/^func! s:FnameEscape(fname)$/;"	f
Fnameescape	runtime/ftplugin/ocaml.vim	/^  function! s:Fnameescape(s)$/;"	f
FoldCompare	runtime/syntax/2html.vim	/^  function! s:FoldCompare(f1, f2)$/;"	f
FontPanelHandler	src/gui_mac.c	/^FontPanelHandler($/;"	f	file:	signature:( EventHandlerCallRef inHandlerCallRef, EventRef inEvent, void *inUserData)
Foo	src/testdir/test49.vim	/^function! Foo()$/;"	f
FortranGetFixedIndent	runtime/indent/fortran.vim	/^function FortranGetFixedIndent()$/;"	f
FortranGetFreeIndent	runtime/indent/fortran.vim	/^function FortranGetFreeIndent()$/;"	f
FortranGetIndent	runtime/indent/fortran.vim	/^function FortranGetIndent(lnum)$/;"	f
Forward	runtime/macros/less.vim	/^fun! s:Forward()$/;"	f
FractionLoc	src/gui_at_sb.c	/^FractionLoc(sbw, x, y)$/;"	f	file:
Free	src/if_cscope.h	/^    Free,$/;"	e	enum:__anon88
FreeDOSMemory	src/os_msdos.c	/^FreeDOSMemory(int protected_mode_selector)$/;"	f	file:	signature:(int protected_mode_selector)
FreeWild	src/misc1.c	/^FreeWild(count, files)$/;"	f
Fspec_Rms	src/os_vms.c	/^static char *Fspec_Rms;		       \/* rms file spec, passed implicitly between routines *\/$/;"	v	file:
FullName	runtime/ftplugin/debchangelog.vim	/^function <SID>FullName()$/;"	f
FullName_save	src/misc1.c	/^FullName_save(fname, force)$/;"	f
FullPathFromFSSpec_save	src/gui_mac.c	/^char_u *FullPathFromFSSpec_save(FSSpec file)$/;"	f	signature:(FSSpec file)
FuncException	src/testdir/test49.vim	/^function! FuncException()$/;"	f
FuncThrowpoint	src/testdir/test49.vim	/^function! FuncThrowpoint()$/;"	f
G	runtime/macros/less.vim	/^noremap <script> G G<SID>L$/;"	m
G	runtime/syntax/2html.vim	/^  norm! G$/;"	m
G	src/testdir/test49.vim	/^	    function! G{1 + ERR() + OK()}(arg)$/;"	f
G	src/testdir/test49.vim	/^    function! G() abort$/;"	f
G	src/testdir/test49.vim	/^    function! G()$/;"	f
G	src/testdir/test49.vim	/^    function! G(reason, n)$/;"	f
G	src/testdir/test49.vim	/^function! G()		" no abort attribute$/;"	f
G	src/testdir/test49.vim	/^function! G() abort$/;"	f
G	src/testdir/test49.vim	/^function! G()$/;"	f
G	src/testdir/test49.vim	/^function! G(arg, line)$/;"	f
G	src/testdir/test49.vim	/^function! G(x, y, n)$/;"	f
GAF	src/farsi.h	136;"	d
GAP	src/option.c	8840;"	d	file:
GAP	src/term.c	5282;"	d	file:
GARGCOUNT	src/structs.h	654;"	d
GARGLIST	src/structs.h	650;"	d
GA_CHAR	src/charset.c	431;"	d	file:
GA_EMPTY	src/structs.h	64;"	d
GA_PTR	src/charset.c	432;"	d	file:
GCC	src/Make_ro.mak	/^GCC         = gcc -mthrowback$/;"	m
GC_malloc	src/if_mzsch.c	351;"	d	file:
GC_malloc_atomic	src/if_mzsch.c	352;"	d	file:
GETCONSOLEWINDOWPROC	src/os_win32.c	/^typedef HWND (__stdcall *GETCONSOLEWINDOWPROC)(VOID);$/;"	t	file:
GETCONSOLEWINDOWPROC	src/os_win32.c	/^typedef WINBASEAPI HWND (WINAPI *GETCONSOLEWINDOWPROC)(VOID);$/;"	t	file:
GETF_ALT	src/vim.h	916;"	d
GETF_SETMARK	src/vim.h	915;"	d
GETF_SWITCH	src/vim.h	917;"	d
GETTEXT	src/Make_bc5.mak	/^GETTEXT = yes$/;"	m
GETTEXT	src/Make_cyg.mak	/^GETTEXT = yes$/;"	m
GETTEXT	src/Make_ming.mak	/^GETTEXT=$/;"	m
GETTEXT	src/Make_ming.mak	/^GETTEXT=yes$/;"	m
GETTEXT	src/Make_mvc.mak	/^GETTEXT = yes$/;"	m
GETTEXTINCLUDE	src/Make_ming.mak	/^GETTEXTINCLUDE = $(GETTEXT)\/include$/;"	m
GETTEXTLIB	src/Make_ming.mak	/^GETTEXTLIB = $(INTLPATH)$/;"	m
GETTEXT_DLL	src/GvimExt/gvimext.cpp	135;"	d	file:
GETTEXT_DLL	src/os_win32.c	249;"	d	file:
GETTEXT_PATH	src/po/Make_cyg.mak	/^GETTEXT_PATH = \/bin\/$/;"	m
GETTEXT_PATH	src/po/Make_mvc.mak	/^GETTEXT_PATH = H:\\gettext.0.14.4\\bin$/;"	m
GET_CHARTAB	src/charset.c	31;"	d	file:
GET_LOC_LIST	src/quickfix.c	145;"	d	file:
GET_UINT32	src/sha256.c	27;"	d	file:
GET_XBUTTON_WPARAM	src/gui_w48.c	722;"	d	file:
GET_X_ATOM	src/gui_gtk_x11.c	96;"	d	file:
GET_X_ATOM	src/gui_gtk_x11.c	99;"	d	file:
GET_X_LPARAM	src/gui_w48.c	129;"	d	file:
GHAF	src/farsi.h	134;"	d
GHAYN	src/farsi.h	132;"	d
GHAYN_	src/farsi.h	47;"	d
GLOBAL_WO	src/structs.h	2033;"	d
GOTO_COST	src/screen.c	8381;"	d	file:
GO_ALL	src/option.h	235;"	d
GO_ASEL	src/option.h	215;"	d
GO_ASELML	src/option.h	216;"	d
GO_BOT	src/option.h	217;"	d
GO_CONDIALOG	src/option.h	218;"	d
GO_FOOTER	src/option.h	233;"	d
GO_FORG	src/option.h	220;"	d
GO_GREY	src/option.h	221;"	d
GO_HORSCROLL	src/option.h	222;"	d
GO_ICON	src/option.h	223;"	d
GO_LEFT	src/option.h	224;"	d
GO_MENUS	src/option.h	226;"	d
GO_NOSYSMENU	src/option.h	227;"	d
GO_POINTER	src/option.h	228;"	d
GO_RIGHT	src/option.h	229;"	d
GO_TABLINE	src/option.h	219;"	d
GO_TEAROFF	src/option.h	231;"	d
GO_TOOLBAR	src/option.h	232;"	d
GO_VERTICAL	src/option.h	234;"	d
GO_VLEFT	src/option.h	225;"	d
GO_VRIGHT	src/option.h	230;"	d
GPLineEval_EVALUATE	src/workshop.c	/^    GPLineEval_EVALUATE,		\/* evaluate expression *\/$/;"	e	enum:__anon105	file:
GPLineEval_INDIRECT	src/workshop.c	/^    GPLineEval_INDIRECT,		\/* evaluate *<expression> *\/$/;"	e	enum:__anon105	file:
GPLineEval_TYPE	src/workshop.c	/^    GPLineEval_TYPE			\/* type of expression *\/$/;"	e	enum:__anon105	file:
GST	src/Make_sas.mak	/^GST	= vim.gst$/;"	m
GTK_BUNDLE	src/Makefile	/^GTK_BUNDLE	=$/;"	m
GTK_DEFS	src/Makefile	/^GTK_DEFS	= -DFEAT_GUI_GTK $(NARROW_PROTO)$/;"	m
GTK_FORM	src/gui_gtk_f.h	21;"	d
GTK_FORM_CLASS	src/gui_gtk_f.h	22;"	d
GTK_INSTALL	src/Makefile	/^GTK_INSTALL     = install_normal install_gui_extra$/;"	m
GTK_IPATH	src/Makefile	/^GTK_IPATH	= $(GUI_INC_LOC)$/;"	m
GTK_IS_FORM	src/gui_gtk_f.h	23;"	d
GTK_IS_FORM_CLASS	src/gui_gtk_f.h	24;"	d
GTK_LIBNAME	src/auto/config.mk	/^GTK_LIBNAME	= -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  $/;"	m
GTK_LIBS1	src/Makefile	/^GTK_LIBS1	=$/;"	m
GTK_LIBS2	src/Makefile	/^GTK_LIBS2	= $(GTK_LIBNAME)$/;"	m
GTK_LIBS_DIR	src/Makefile	/^GTK_LIBS_DIR	= $(GUI_LIB_LOC)$/;"	m
GTK_MAN_TARGETS	src/Makefile	/^GTK_MAN_TARGETS = yes$/;"	m
GTK_OBJ	src/Makefile	/^GTK_OBJ		= objects\/gui.o objects\/gui_gtk.o objects\/gui_gtk_x11.o \\$/;"	m
GTK_SRC	src/Makefile	/^GTK_SRC		= gui.c gui_gtk.c gui_gtk_x11.c pty.c gui_gtk_f.c \\$/;"	m
GTK_TARGETS	src/Makefile	/^GTK_TARGETS	= installglinks$/;"	m
GTK_TESTTARGET	src/Makefile	/^GTK_TESTTARGET  = gui$/;"	m
GTK_TYPE_FORM	src/gui_gtk_f.h	20;"	d
GUARANTEE_STRING	src/if_mzsch.h	34;"	d
GUARDED	src/netbeans.c	68;"	d	file:
GUARDEDOFFSET	src/netbeans.c	69;"	d	file:
GUI	src/Make_bc5.mak	/^GUI = yes$/;"	m
GUI	src/Make_cyg.mak	/^GUI=yes$/;"	m
GUI	src/Make_ming.mak	/^GUI=yes$/;"	m
GUID_STRING_SIZE	src/if_ole.cpp	/^static const int GUID_STRING_SIZE = 39;$/;"	v	file:
GUIDtochar	src/if_ole.cpp	/^static void GUIDtochar(const GUID &guid, char *GUID, int length)$/;"	f	file:	signature:(const GUID &guid, char *GUID, int length)
GUIDtochar	src/if_ole.cpp	/^static void GUIDtochar(const GUID &guid, char *GUID, int length);$/;"	p	file:	signature:(const GUID &guid, char *GUID, int length)
GUIOBJ	src/Make_ming.mak	/^GUIOBJ =  $(OUTDIR)\/gui.o $(OUTDIR)\/gui_w32.o $(OUTDIR)\/gui_beval.o $(OUTDIR)\/os_w32exe.o$/;"	m
GUI_ATTR_ENTRY	src/syntax.c	8120;"	d	file:
GUI_BEVAL_H	src/gui_beval.h	11;"	d
GUI_BUNDLE	src/auto/config.mk	/^GUI_BUNDLE	= $(GTK_BUNDLE)$/;"	m
GUI_DEFS	src/auto/config.mk	/^GUI_DEFS	= $(GTK_DEFS)$/;"	m
GUI_INCL	src/Make_mvc.mak	/^GUI_INCL = \\$/;"	m
GUI_INC_LOC	src/Makefile	/^	GUI_INC_LOC="$(GUI_INC_LOC)" GUI_LIB_LOC="$(GUI_LIB_LOC)" \\$/;"	m
GUI_INC_LOC	src/auto/config.mk	/^GUI_INC_LOC	= -I\/usr\/include\/gtk-2.0 -I\/usr\/lib\/gtk-2.0\/include -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/glib-2.0\/include -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12  $/;"	m
GUI_INSTALL	src/auto/config.mk	/^GUI_INSTALL	= $(GTK_INSTALL)$/;"	m
GUI_IPATH	src/auto/config.mk	/^GUI_IPATH	= $(GTK_IPATH)$/;"	m
GUI_LIB	src/Make_mvc.mak	/^GUI_LIB = \\$/;"	m
GUI_LIBS1	src/auto/config.mk	/^GUI_LIBS1	= $(GTK_LIBS1)$/;"	m
GUI_LIBS2	src/auto/config.mk	/^GUI_LIBS2	= $(GTK_LIBS2)$/;"	m
GUI_LIBS_DIR	src/auto/config.mk	/^GUI_LIBS_DIR	= $(GTK_LIBS_DIR)$/;"	m
GUI_LIB_LOC	src/auto/config.mk	/^GUI_LIB_LOC	=  $/;"	m
GUI_MAN_TARGETS	src/auto/config.mk	/^GUI_MAN_TARGETS	= $(GTK_MAN_TARGETS)$/;"	m
GUI_MON_INVERT	src/gui.h	144;"	d
GUI_MON_IS_CURSOR	src/gui.h	145;"	d
GUI_MON_NOCLEAR	src/gui.h	147;"	d
GUI_MON_TRS_CURSOR	src/gui.h	146;"	d
GUI_MON_WRAP_CURSOR	src/gui.h	143;"	d
GUI_OBJ	src/Make_mvc.mak	/^GUI_OBJ = \\$/;"	m
GUI_OBJ	src/auto/config.mk	/^GUI_OBJ		= $(GTK_OBJ)$/;"	m
GUI_PH_MARGIN	src/gui_photon.c	53;"	d	file:
GUI_PH_MOUSE_TYPE	src/gui_photon.c	55;"	d	file:
GUI_SRC	src/auto/config.mk	/^GUI_SRC		= $(GTK_SRC)$/;"	m
GUI_TARGETS	src/auto/config.mk	/^GUI_TARGETS	= $(GTK_TARGETS)$/;"	m
GUI_TESTARG	src/auto/config.mk	/^GUI_TESTARG	= $(GTK_TESTARG)$/;"	m
GUI_TESTTARGET	src/auto/config.mk	/^GUI_TESTTARGET	= $(GTK_TESTTARGET)$/;"	m
GUI_X_LIBS	src/auto/config.mk	/^GUI_X_LIBS	= $/;"	m
GVIEWNAME	src/Makefile	/^GVIEWNAME	= g$(VIEWNAME)$/;"	m
GVIEWTARGET	src/Makefile	/^GVIEWTARGET	= $(GVIEWNAME)$(LNKEXT)$/;"	m
GVIMDIFFNAME	src/Makefile	/^GVIMDIFFNAME	= g$(VIMDIFFNAME)$/;"	m
GVIMDIFFTARGET	src/Makefile	/^GVIMDIFFTARGET	= $(GVIMDIFFNAME)$(LNKEXT)$/;"	m
GVIMNAME	src/Makefile	/^GVIMNAME	= g$(VIMNAME)$/;"	m
GVIMRC_FILE	src/os_amiga.h	184;"	d
GVIMRC_FILE	src/os_dos.h	74;"	d
GVIMRC_FILE	src/os_mac.h	146;"	d
GVIMRC_FILE	src/os_riscos.h	81;"	d
GVIMRC_FILE	src/os_unix.h	345;"	d
GVIMTARGET	src/Makefile	/^GVIMTARGET	= $(GVIMNAME)$(LNKEXT)$/;"	m
GdkAtom	src/gui_gtk_x11.c	54;"	d	file:
GdkBitmap	src/gui_gtk.c	81;"	d	file:
GdkDragContext	src/gui_gtk_x11.c	71;"	d	file:
GdkEvent	src/proto.h	28;"	d
GdkEventButton	src/gui_gtk_x11.c	70;"	d	file:
GdkEventClient	src/gui_gtk_x11.c	73;"	d	file:
GdkEventConfigure	src/gui_gtk_x11.c	72;"	d	file:
GdkEventExpose	src/gui_gtk_x11.c	55;"	d	file:
GdkEventFocus	src/gui_gtk_x11.c	56;"	d	file:
GdkEventKey	src/gui_gtk.c	86;"	d	file:
GdkEventKey	src/gui_gtk_x11.c	66;"	d	file:
GdkEventKey	src/proto.h	29;"	d
GdkEventMotion	src/gui_gtk_x11.c	69;"	d	file:
GdkEventProperty	src/gui_gtk_x11.c	58;"	d	file:
GdkEventSelection	src/gui_gtk_x11.c	67;"	d	file:
GdkEventVisibility	src/gui_gtk_x11.c	57;"	d	file:
GdkPixmap	src/gui_gtk.c	80;"	d	file:
Get	src/if_cscope.h	/^    Get,$/;"	e	enum:__anon88
GetAdaIndent	runtime/indent/ada.vim	/^function GetAdaIndent()$/;"	f
GetAddition	runtime/autoload/ccomplete.vim	/^function! s:GetAddition(line, match, memarg, bracket)$/;"	f
GetAppKey	src/VisVim/Reg.cpp	/^HKEY GetAppKey (char* AppName)$/;"	f	signature:(char* AppName)
GetAppKey	src/VisVim/VisVim.h	/^HKEY GetAppKey (char* AppName);$/;"	p	signature:(char* AppName)
GetApplicationObject	src/VisVim/Commands.h	/^	IApplication *GetApplicationObject ()$/;"	f	class:CCommands	access:public	signature:()
GetAwkIndent	runtime/indent/awk.vim	/^function! GetAwkIndent()$/;"	f
GetBstIndent	runtime/indent/bst.vim	/^function! GetBstIndent(lnum) abort$/;"	f
GetBufferLine	src/if_py_both.h	/^GetBufferLine(buf_T *buf, PyInt n)$/;"	f	signature:(buf_T *buf, PyInt n)
GetBufferLineList	src/if_py_both.h	/^GetBufferLineList(buf_T *buf, PyInt lo, PyInt hi)$/;"	f	signature:(buf_T *buf, PyInt lo, PyInt hi)
GetBufferRubyClass	runtime/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	runtime/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	runtime/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	runtime/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCSSIndent	runtime/indent/css.vim	/^function GetCSSIndent()$/;"	f
GetChaiScriptIndent	runtime/indent/chaiscript.vim	/^function! GetChaiScriptIndent()$/;"	f
GetCmdArg	runtime/ftplugin/man.vim	/^func <SID>GetCmdArg(sect, page)$/;"	f
GetCobolIndent	runtime/indent/cobol.vim	/^function! GetCobolIndent(lnum) abort$/;"	f
GetCommandString	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::GetCommandString(UINT_PTR  \/* idCmd *\/,$/;"	f	class:CShellExt	signature:(UINT_PTR , UINT uFlags, UINT FAR * , LPSTR pszName, UINT cchMax)
GetCommandString	src/GvimExt/gvimext.h	/^    STDMETHODIMP GetCommandString(UINT_PTR idCmd,$/;"	p	class:CShellExt	access:public	signature:(UINT_PTR idCmd, UINT uFlags, UINT FAR *reserved, LPSTR pszName, UINT cchMax)
GetCompositionString_inUCS2	src/gui_w32.c	/^GetCompositionString_inUCS2(HIMC hIMC, DWORD GCS, int *lenp)$/;"	f	file:	signature:(HIMC hIMC, DWORD GCS, int *lenp)
GetConfigIndent	runtime/indent/config.vim	/^function GetConfigIndent()$/;"	f
GetConsoleHwnd	src/os_mswin.c	/^GetConsoleHwnd(void)$/;"	f	file:	signature:(void)
GetConsoleIcon	src/os_win32.c	/^GetConsoleIcon($/;"	f	file:	signature:( HWND hWnd, HICON *phIconSmall, HICON *phIcon)
GetCucumberIndent	runtime/indent/cucumber.vim	/^function! GetCucumberIndent()$/;"	f
GetDTDIndent	runtime/indent/dtd.vim	/^function GetDTDIndent()$/;"	f
GetDispatchId	src/VisVim/OleAut.cpp	/^DISPID COleAutomationControl::GetDispatchId (char* Name)$/;"	f	class:COleAutomationControl	signature:(char* Name)
GetDispatchId	src/VisVim/OleAut.h	/^	DISPID GetDispatchId (char* Name);$/;"	p	class:COleAutomationControl	access:public	signature:(char* Name)
GetEiffelIndent	runtime/indent/eiffel.vim	/^function GetEiffelIndent()$/;"	f
GetErrArgNr	src/VisVim/OleAut.h	/^	UINT GetErrArgNr ()$/;"	f	class:COleAutomationControl	access:public	signature:()
GetErubyIndent	runtime/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetEtermIndent	runtime/indent/eterm.vim	/^function GetEtermIndent()$/;"	f
GetExceptionInfo	src/VisVim/OleAut.h	/^	EXCEPINFO* GetExceptionInfo ()$/;"	f	class:COleAutomationControl	access:public	signature:()
GetFSSpecFromPath	src/gui_mac.c	/^GetFSSpecFromPath(char_u *file, FSSpec *fileFSSpec)$/;"	f	signature:(char_u *file, FSSpec *fileFSSpec)
GetFontPanelSelection	src/gui_mac.c	/^GetFontPanelSelection(char_u *outName)$/;"	f	file:	signature:(char_u *outName)
GetFontSize	src/gui_w48.c	/^GetFontSize(GuiFont font)$/;"	f	file:	signature:(GuiFont font)
GetFrameScriptIndent	runtime/indent/framescript.vim	/^function GetFrameScriptIndent()$/;"	f
GetGitconfigIndent	runtime/indent/gitconfig.vim	/^function! GetGitconfigIndent()$/;"	f
GetHamlIndent	runtime/indent/haml.vim	/^function! GetHamlIndent()$/;"	f
GetHwnd	src/if_ole.cpp	/^    STDMETHOD(GetHwnd)(UINT_PTR *result);$/;"	p	class:CVim	file:	access:public	signature:(UINT_PTR *result)
GetHwnd	src/if_ole.cpp	/^CVim::GetHwnd(UINT_PTR *result)$/;"	f	class:CVim	signature:(UINT_PTR *result)
GetHwnd	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHwnd )($/;"	m	struct:IVimVtbl	access:public
GetIDsOfNames	src/if_ole.cpp	/^    STDMETHOD(GetIDsOfNames)(const IID &iid, OLECHAR **names, UINT n, LCID, DISPID *dispids);$/;"	p	class:CVim	file:	access:public	signature:(const IID &iid, OLECHAR **names, UINT n, LCID, DISPID *dispids)
GetIDsOfNames	src/if_ole.cpp	/^CVim::GetIDsOfNames($/;"	f	class:CVim	signature:( const IID &iid, OLECHAR **names, UINT n, LCID, DISPID *dispids)
GetIDsOfNames	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )($/;"	m	struct:IVimVtbl	access:public
GetIdlangIndent	runtime/indent/idlang.vim	/^function GetIdlangIndent(lnum)$/;"	f
GetInd	runtime/indent/ocaml.vim	/^function s:GetInd(lnum, pat, lim)$/;"	f
GetInd	runtime/indent/sml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
GetIshdIndent	runtime/indent/ishd.vim	/^fun! GetIshdIndent(lnum)$/;"	f
GetJavaIndent	runtime/indent/java.vim	/^function GetJavaIndent()$/;"	f
GetLDIndent	runtime/indent/ld.vim	/^function GetLDIndent()$/;"	f
GetLastErrorDescription	src/VisVim/StdAfx.h	/^void GetLastErrorDescription (CComBSTR & bstr);	\/\/ Defined in VisVim.cpp$/;"	p	signature:(CComBSTR & bstr)
GetLastErrorDescription	src/VisVim/VisVim.cpp	/^void GetLastErrorDescription (CComBSTR & bstr)$/;"	f	signature:(CComBSTR & bstr)
GetLastRealCodeLNum	runtime/indent/php.vim	/^function! GetLastRealCodeLNum(startline) " {{{$/;"	f
GetLatestVimScripts	runtime/autoload/getscript.vim	/^com!        -nargs=0 GetLatestVimScripts call getscript#GetLatestVimScripts()$/;"	c
GetLatestVimScripts	runtime/plugin/getscriptPlugin.vim	/^com!        -nargs=0 GetLatestVimScripts call getscript#GetLatestVimScripts()$/;"	c
GetLineWithoutFullComment	runtime/indent/ocaml.vim	/^function s:GetLineWithoutFullComment(lnum)$/;"	f
GetLiquidIndent	runtime/indent/liquid.vim	/^function! GetLiquidIndent(...)$/;"	f
GetLogtalkIndent	runtime/indent/logtalk.vim	/^function! GetLogtalkIndent()$/;"	f
GetLuaIndent	runtime/indent/lua.vim	/^function! GetLuaIndent()$/;"	f
GetMSL	runtime/indent/ruby.vim	/^function s:GetMSL(lnum)$/;"	f
GetMakeIndent	runtime/indent/make.vim	/^function GetMakeIndent()$/;"	f
GetMatlabIndent	runtime/indent/matlab.vim	/^function GetMatlabIndent(lnum)$/;"	f
GetMetaPostIndent	runtime/indent/mp.vim	/^function! GetMetaPostIndent()$/;"	f
GetMline	src/po/check.vim	/^func! GetMline()$/;"	f
GetMmaIndent	runtime/indent/mma.vim	/^function GetMmaIndent()$/;"	f
GetNextVarType	src/VisVim/OleAut.cpp	/^static LPCTSTR GetNextVarType (LPCTSTR Format, VARTYPE* pVarType)$/;"	f	file:	signature:(LPCTSTR Format, VARTYPE* pVarType)
GetNextVarType	src/VisVim/OleAut.cpp	/^static LPCTSTR GetNextVarType (LPCTSTR Format, VARTYPE* pVarType);$/;"	p	file:	signature:(LPCTSTR Format, VARTYPE* pVarType)
GetOCamlIndent	runtime/indent/ocaml.vim	/^function GetOCamlIndent()$/;"	f
GetObjCIndent	runtime/indent/objc.vim	/^function GetObjCIndent()$/;"	f
GetOccamIndent	runtime/indent/occam.vim	/^function GetOccamIndent()$/;"	f
GetOffsetOf	runtime/indent/config.vim	/^function s:GetOffsetOf(line, regexp)$/;"	f
GetOneScript	runtime/autoload/getscript.vim	/^fun! s:GetOneScript(...)$/;"	f
GetPage	runtime/ftplugin/man.vim	/^func <SID>GetPage(...)$/;"	f
GetPascalIndent	runtime/indent/pascal.vim	/^function! GetPascalIndent( line_num )$/;"	f
GetPerl6Indent	runtime/indent/perl6.vim	/^function GetPerl6Indent()$/;"	f
GetPerlIndent	runtime/indent/perl.vim	/^function GetPerlIndent()$/;"	f
GetPhpIndent	runtime/indent/php.vim	/^function! GetPhpIndent()$/;"	f
GetPoVRayIndent	runtime/indent/pov.vim	/^function GetPoVRayIndent()$/;"	f
GetPrevNonCommentLineNum	runtime/indent/pascal.vim	/^function! s:GetPrevNonCommentLineNum( line_num )$/;"	f
GetPrologIndent	runtime/indent/prolog.vim	/^function! GetPrologIndent()$/;"	f
GetProperty	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::GetProperty (DISPID DispatchId)$/;"	f	class:COleAutomationControl	signature:(DISPID DispatchId)
GetProperty	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::GetProperty (char* Name)$/;"	f	class:COleAutomationControl	signature:(char* Name)
GetProperty	src/VisVim/OleAut.h	/^	bool GetProperty (DISPID DispatchId);$/;"	p	class:COleAutomationControl	access:public	signature:(DISPID DispatchId)
GetProperty	src/VisVim/OleAut.h	/^	bool GetProperty (char* Name);$/;"	p	class:COleAutomationControl	access:public	signature:(char* Name)
GetPythonIndent	runtime/indent/python.vim	/^function GetPythonIndent(lnum)$/;"	f
GetRSTIndent	runtime/indent/rst.vim	/^function GetRSTIndent()$/;"	f
GetReadlineIndent	runtime/indent/readline.vim	/^function GetReadlineIndent()$/;"	f
GetRegProp	src/if_xcmdsrv.c	/^GetRegProp(dpy, regPropp, numItemsp, domsg)$/;"	f	file:
GetRegProp	src/if_xcmdsrv.c	/^static int	GetRegProp __ARGS((Display *dpy, char_u **regPropp, long_u *numItemsp, int domsg));$/;"	p	file:	signature:(Display *dpy, char_u **regPropp, long_u *numItemsp, int domsg)
GetRegistryInt	src/VisVim/Reg.cpp	/^int GetRegistryInt (HKEY hSectionKey, LPCTSTR Entry, int Default)$/;"	f	signature:(HKEY hSectionKey, LPCTSTR Entry, int Default)
GetRegistryInt	src/VisVim/VisVim.h	/^int GetRegistryInt (HKEY hSectionKey, LPCTSTR Entry, int Default);$/;"	p	signature:(HKEY hSectionKey, LPCTSTR Entry, int Default)
GetResult	src/VisVim/OleAut.h	/^	HRESULT GetResult ()$/;"	f	class:COleAutomationControl	access:public	signature:()
GetResultStr	src/gui_w32.c	/^GetResultStr(HWND hwnd, int GCS, int *lenp)$/;"	f	file:	signature:(HWND hwnd, int GCS, int *lenp)
GetResultStr	src/gui_w32.c	/^static char_u *GetResultStr(HWND hwnd, int GCS, int *lenp);$/;"	p	file:	signature:(HWND hwnd, int GCS, int *lenp)
GetResultVariant	src/VisVim/OleAut.h	/^	LPVARIANT GetResultVariant ()$/;"	f	class:COleAutomationControl	access:public	signature:()
GetRubyIndent	runtime/indent/ruby.vim	/^function GetRubyIndent()$/;"	f
GetRubyVarType	runtime/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetSDLIndent	runtime/indent/sdl.vim	/^function! GetSDLIndent()$/;"	f
GetSMLIndent	runtime/indent/sml.vim	/^function! GetSMLIndent()$/;"	f
GetSQLIndent	runtime/indent/sqlanywhere.vim	/^function GetSQLIndent()$/;"	f
GetSassIndent	runtime/indent/sass.vim	/^function! GetSassIndent()$/;"	f
GetScript	runtime/autoload/getscript.vim	/^com!        -nargs=0 GetScript           call getscript#GetLatestVimScripts()$/;"	c
GetScripts	runtime/plugin/getscriptPlugin.vim	/^com!        -nargs=0 GetScripts          call getscript#GetLatestVimScripts()$/;"	c
GetSectionKey	src/VisVim/Reg.cpp	/^HKEY GetSectionKey (HKEY hAppKey, LPCTSTR Section)$/;"	f	signature:(HKEY hAppKey, LPCTSTR Section)
GetSectionKey	src/VisVim/VisVim.h	/^HKEY GetSectionKey (HKEY hAppKey, LPCTSTR Section);$/;"	p	signature:(HKEY hAppKey, LPCTSTR Section)
GetShIndent	runtime/indent/sh.vim	/^function! GetShIndent()$/;"	f
GetStmtStarterIndent	runtime/indent/sqlanywhere.vim	/^function s:GetStmtStarterIndent( keyword, curr_lnum )$/;"	f
GetStockBrush	src/gui_w32.c	75;"	d	file:
GetTFIndent	runtime/indent/tf.vim	/^function GetTFIndent()$/;"	f
GetTclIndent	runtime/indent/tcl.vim	/^function GetTclIndent()$/;"	f
GetTempfile	runtime/autoload/netrw.vim	/^fun! s:GetTempfile(fname)$/;"	f
GetTextWidth	src/gui_w48.c	/^GetTextWidth(HDC hdc, char_u *str, int len)$/;"	f	file:	signature:(HDC hdc, char_u *str, int len)
GetTextWidthEnc	src/gui_w48.c	/^GetTextWidthEnc(HDC hdc, char_u *str, int len)$/;"	f	file:	signature:(HDC hdc, char_u *str, int len)
GetTextWidthEnc	src/gui_w48.c	2209;"	d	file:
GetTildeIndent	runtime/indent/tilde.vim	/^function GetTildeIndent(lnum)$/;"	f
GetTypeInfo	src/if_ole.cpp	/^    STDMETHOD(GetTypeInfo)(UINT iTypeInfo, LCID, ITypeInfo **ppITypeInfo);$/;"	p	class:CVim	file:	access:public	signature:(UINT iTypeInfo, LCID, ITypeInfo **ppITypeInfo)
GetTypeInfo	src/if_ole.cpp	/^CVim::GetTypeInfo(UINT iTypeInfo, LCID, ITypeInfo **ppITypeInfo)$/;"	f	class:CVim	signature:(UINT iTypeInfo, LCID, ITypeInfo **ppITypeInfo)
GetTypeInfo	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )($/;"	m	struct:IVimVtbl	access:public
GetTypeInfoCount	src/if_ole.cpp	/^    STDMETHOD(GetTypeInfoCount)(UINT *pCount);$/;"	p	class:CVim	file:	access:public	signature:(UINT *pCount)
GetTypeInfoCount	src/if_ole.cpp	/^CVim::GetTypeInfoCount(UINT *pCount)$/;"	f	class:CVim	signature:(UINT *pCount)
GetTypeInfoCount	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )($/;"	m	struct:IVimVtbl	access:public
GetVHDLindent	runtime/indent/vhdl.vim	/^function GetVHDLindent()$/;"	f
GetVerilogIndent	runtime/indent/verilog.vim	/^function GetVerilogIndent()$/;"	f
GetVimIndent	runtime/indent/vim.vim	/^function GetVimIndent()$/;"	f
GetWidth	runtime/indent/objc.vim	/^function s:GetWidth(line, regexp)$/;"	f
GetWin32Error	src/if_cscope.c	/^GetWin32Error()$/;"	f	file:
GetWin32Error	src/if_cscope.c	/^static char *GetWin32Error __ARGS((void));$/;"	p	file:	signature:(void)
GetXF86ConfIndent	runtime/indent/xf86conf.vim	/^function GetXF86ConfIndent()$/;"	f
GetXinetdIndent	runtime/indent/xinetd.vim	/^function GetXinetdIndent()$/;"	f
GetYaccIndent	runtime/indent/yacc.vim	/^function GetYaccIndent()$/;"	f
Get_brace_balance	runtime/indent/awk.vim	/^function! s:Get_brace_balance( line, b_open, b_close )$/;"	f
Get_prev_line	runtime/indent/awk.vim	/^function! s:Get_prev_line( lineno )$/;"	f
Get_type	runtime/ftplugin/ocaml.vim	/^    function! s:Get_type(mode)$/;"	f
Greek	runtime/syntax/tex.vim	/^  fun! s:Greek(group,pat,cchar)$/;"	f
Green	src/gui_mac.c	182;"	d	file:
GroovyHiLink	runtime/syntax/groovy.vim	/^  command! -nargs=+ GroovyHiLink hi def link <args>$/;"	c
GroovyHiLink	runtime/syntax/groovy.vim	/^  command! -nargs=+ GroovyHiLink hi link <args>$/;"	c
GtkAdjustment	src/gui_gtk.c	84;"	d	file:
GtkContainer	src/gui_gtk_x11.c	59;"	d	file:
GtkForm	src/gui_gtk_f.h	/^typedef struct _GtkForm GtkForm;$/;"	t	typeref:struct:_GtkForm
GtkFormChild	src/gui_gtk_f.c	/^typedef struct _GtkFormChild GtkFormChild;$/;"	t	typeref:struct:_GtkFormChild	file:
GtkFormClass	src/gui_gtk_f.h	/^typedef struct _GtkFormClass GtkFormClass;$/;"	t	typeref:struct:_GtkFormClass
GtkIconFactory	src/gui_gtk.c	82;"	d	file:
GtkSelectionData	src/gui_gtk_x11.c	68;"	d	file:
GtkTargetEntry	src/gui_gtk_x11.c	60;"	d	file:
GtkToolbar	src/gui_gtk.c	83;"	d	file:
GtkType	src/gui_gtk_x11.c	61;"	d	file:
GtkWidget	src/gui_gtk.c	/^typedef int GtkWidget;$/;"	t	file:
GtkWidget	src/gui_gtk_x11.c	62;"	d	file:
Gui	src/gui.h	/^typedef struct Gui$/;"	s
Gui::MacOSHelpItems	src/gui.h	/^    int		MacOSHelpItems;	    \/* Nr of help-items supplied by MacOS *\/$/;"	m	struct:Gui	access:public
Gui::MacOSHelpMenu	src/gui.h	/^    MenuHandle	MacOSHelpMenu;	    \/* Help menu provided by the MacOS *\/$/;"	m	struct:Gui	access:public
Gui::VimWindow	src/gui.h	/^    WindowPtr	VimWindow;$/;"	m	struct:Gui	access:public
Gui::accel_group	src/gui.h	/^    GtkAccelGroup *accel_group;$/;"	m	struct:Gui	access:public
Gui::ascii_font	src/gui.h	/^    PangoFont	     *ascii_font;   \/* cached font for ASCII strings *\/$/;"	m	struct:Gui	access:public
Gui::ascii_glyphs	src/gui.h	/^    PangoGlyphString *ascii_glyphs; \/* cached code point -> glyph map *\/$/;"	m	struct:Gui	access:public
Gui::back_gc	src/gui.h	/^    GC		back_gc;$/;"	m	struct:Gui	access:public
Gui::back_pixel	src/gui.h	/^    guicolor_T	back_pixel;	    \/* Color of background *\/$/;"	m	struct:Gui	access:public
Gui::bg_colour	src/gui.h	/^    int		bg_colour;$/;"	m	struct:Gui	access:public
Gui::bgcolor	src/gui.h	/^    GdkColor	*bgcolor;	    \/* GDK-styled background color *\/$/;"	m	struct:Gui	access:public
Gui::blank_pointer	src/gui.h	/^    Cursor	blank_pointer;	    \/* Blank pointer *\/$/;"	m	struct:Gui	access:public
Gui::blank_pointer	src/gui.h	/^    GdkCursor	*blank_pointer;	    \/* Blank pointer *\/$/;"	m	struct:Gui	access:public
Gui::bold_font	src/gui.h	/^    GuiFont	bold_font;	    \/* Bold font *\/$/;"	m	struct:Gui	access:public
Gui::boldital_font	src/gui.h	/^    GuiFont	boldital_font;	    \/* Bold-Italic font *\/$/;"	m	struct:Gui	access:public
Gui::border_offset	src/gui.h	/^    int		border_offset;	    \/* Total pixel offset for all borders *\/$/;"	m	struct:Gui	access:public
Gui::border_width	src/gui.h	/^    int		border_width;	    \/* Width of our border around text area *\/$/;"	m	struct:Gui	access:public
Gui::bottom_sbar	src/gui.h	/^    scrollbar_T bottom_sbar;	    \/* Bottom scrollbar *\/$/;"	m	struct:Gui	access:public
Gui::browse_fname	src/gui.h	/^    char_u	*browse_fname;	    \/* file name from filedlg *\/$/;"	m	struct:Gui	access:public
Gui::char_ascent	src/gui.h	/^    int		char_ascent;	    \/* Ascent of char in pixels *\/$/;"	m	struct:Gui	access:public
Gui::char_height	src/gui.h	/^    int		char_height;	    \/* Height of char cell in pixels, includes$/;"	m	struct:Gui	access:public
Gui::char_width	src/gui.h	/^    int		char_width;	    \/* Width of char cell in pixels *\/$/;"	m	struct:Gui	access:public
Gui::col	src/gui.h	/^    int		col;		    \/* Current cursor column in GUI display *\/$/;"	m	struct:Gui	access:public
Gui::color_approx	src/gui.h	/^    Bool	color_approx;	    \/* Some color was approximated *\/$/;"	m	struct:Gui	access:public
Gui::currBgColor	src/gui.h	/^    guicolor_T	currBgColor;	    \/* Current background text color *\/$/;"	m	struct:Gui	access:public
Gui::currFgColor	src/gui.h	/^    guicolor_T	currFgColor;	    \/* Current foreground text color *\/$/;"	m	struct:Gui	access:public
Gui::currFont	src/gui.h	/^    GuiFont	currFont;	    \/* Current font *\/$/;"	m	struct:Gui	access:public
Gui::currSpColor	src/gui.h	/^    guicolor_T	currSpColor;	    \/* Current special text color *\/$/;"	m	struct:Gui	access:public
Gui::cursor_col	src/gui.h	/^    int		cursor_col;	    \/* Physical cursor column in GUI display *\/$/;"	m	struct:Gui	access:public
Gui::cursor_is_valid	src/gui.h	/^    char	cursor_is_valid;    \/* There is a cursor at cursor_row\/col *\/$/;"	m	struct:Gui	access:public
Gui::cursor_row	src/gui.h	/^    int		cursor_row;	    \/* Physical cursor row in GUI display *\/$/;"	m	struct:Gui	access:public
Gui::def_back_pixel	src/gui.h	/^    guicolor_T	def_back_pixel;	    \/* default Color of background *\/$/;"	m	struct:Gui	access:public
Gui::def_norm_pixel	src/gui.h	/^    guicolor_T	def_norm_pixel;	    \/* default Color of normal text *\/$/;"	m	struct:Gui	access:public
Gui::dofork	src/gui.h	/^    int		dofork;		    \/* Use fork() when GUI is starting *\/$/;"	m	struct:Gui	access:public
Gui::dpy	src/gui.h	/^    Display	*dpy;		    \/* X display *\/$/;"	m	struct:Gui	access:public
Gui::dragged_sb	src/gui.h	/^    int		dragged_sb;	    \/* Which scrollbar being dragged, if any? *\/$/;"	m	struct:Gui	access:public
Gui::dragged_wp	src/gui.h	/^    win_T	*dragged_wp;	    \/* Which WIN's sb being dragged, if any? *\/$/;"	m	struct:Gui	access:public
Gui::drawarea	src/gui.h	/^    GtkWidget	*drawarea;	    \/* the "text" area *\/$/;"	m	struct:Gui	access:public
Gui::dying	src/gui.h	/^    int		dying;		    \/* Is vim dying? Then output to terminal *\/$/;"	m	struct:Gui	access:public
Gui::event_buffer	src/gui.h	/^    PhEvent_t	*event_buffer;$/;"	m	struct:Gui	access:public
Gui::fg_colour	src/gui.h	/^    int		fg_colour;		\/* in 0xBBGGRR format *\/$/;"	m	struct:Gui	access:public
Gui::fgcolor	src/gui.h	/^    GdkColor	*fgcolor;	    \/* GDK-styled foreground color *\/$/;"	m	struct:Gui	access:public
Gui::filedlg	src/gui.h	/^    GtkWidget	*filedlg;	    \/* file selection dialog *\/$/;"	m	struct:Gui	access:public
Gui::font_can_bold	src/gui.h	/^    int		font_can_bold;	    \/* Whether norm_font supports bold weight.$/;"	m	struct:Gui	access:public
Gui::fontset	src/gui.h	/^    GuiFontset	fontset;	    \/* set of fonts for multi-byte chars *\/$/;"	m	struct:Gui	access:public
Gui::footer_height	src/gui.h	/^    int		footer_height;	    \/* height of the message footer *\/$/;"	m	struct:Gui	access:public
Gui::formwin	src/gui.h	/^    GtkWidget	*formwin;	    \/* manages all the windows below *\/$/;"	m	struct:Gui	access:public
Gui::geom	src/gui.h	/^    char_u	*geom;		    \/* Geometry, eg "80x24" *\/$/;"	m	struct:Gui	access:public
Gui::highlight_mask	src/gui.h	/^    int		highlight_mask;	    \/* Highlight attribute mask *\/$/;"	m	struct:Gui	access:public
Gui::in_focus	src/gui.h	/^    int		in_focus;	    \/* Vim has input focus *\/$/;"	m	struct:Gui	access:public
Gui::in_use	src/gui.h	/^    int		in_use;		    \/* Is the GUI being used? *\/$/;"	m	struct:Gui	access:public
Gui::invert_gc	src/gui.h	/^    GC		invert_gc;$/;"	m	struct:Gui	access:public
Gui::ital_font	src/gui.h	/^    GuiFont	ital_font;	    \/* Italic font *\/$/;"	m	struct:Gui	access:public
Gui::left_sbar_x	src/gui.h	/^    int		left_sbar_x;	    \/* Calculated x coord for left scrollbar *\/$/;"	m	struct:Gui	access:public
Gui::mainwin	src/gui.h	/^    GtkWidget	*mainwin;	    \/* top level GTK window *\/$/;"	m	struct:Gui	access:public
Gui::menu_bg_pixel	src/gui.h	/^    guicolor_T	menu_bg_pixel;		\/* Same in Pixel format *\/$/;"	m	struct:Gui	access:public
Gui::menu_def_bg_pixel	src/gui.h	/^    guicolor_T	menu_def_bg_pixel;  \/* Default menu background *\/$/;"	m	struct:Gui	access:public
Gui::menu_def_fg_pixel	src/gui.h	/^    guicolor_T	menu_def_fg_pixel;  \/* Default menu foreground *\/$/;"	m	struct:Gui	access:public
Gui::menu_fg_pixel	src/gui.h	/^    guicolor_T	menu_fg_pixel;		\/* Same in Pixel format *\/$/;"	m	struct:Gui	access:public
Gui::menu_font	src/gui.h	/^    GuiFont	menu_font;	    \/* menu item font *\/$/;"	m	struct:Gui	access:public
Gui::menu_fontset	src/gui.h	/^    GuiFontset	menu_fontset;	    \/* set of fonts for multi-byte chars *\/$/;"	m	struct:Gui	access:public
Gui::menu_height	src/gui.h	/^    int		menu_height;	    \/* Height of the menu bar *\/$/;"	m	struct:Gui	access:public
Gui::menu_height_fixed	src/gui.h	/^    char	menu_height_fixed;  \/* TRUE if menu height fixed *\/$/;"	m	struct:Gui	access:public
Gui::menu_is_active	src/gui.h	/^    char	menu_is_active;	    \/* TRUE if menu is present *\/$/;"	m	struct:Gui	access:public
Gui::menu_width	src/gui.h	/^    int		menu_width;	    \/* Width of the menu bar *\/$/;"	m	struct:Gui	access:public
Gui::menubar	src/gui.h	/^    GtkWidget	*menubar;	    \/* menubar *\/$/;"	m	struct:Gui	access:public
Gui::menubar_h	src/gui.h	/^    GtkWidget	*menubar_h;	    \/* menubar handle *\/$/;"	m	struct:Gui	access:public
Gui::norm_font	src/gui.h	/^    GuiFont	norm_font;	    \/* Normal font *\/$/;"	m	struct:Gui	access:public
Gui::norm_pixel	src/gui.h	/^    guicolor_T	norm_pixel;	    \/* Color of normal text *\/$/;"	m	struct:Gui	access:public
Gui::num_cols	src/gui.h	/^    int		num_cols;	    \/* Number of columns *\/$/;"	m	struct:Gui	access:public
Gui::num_rows	src/gui.h	/^    int		num_rows;	    \/* Number of rows *\/$/;"	m	struct:Gui	access:public
Gui::pointer_hidden	src/gui.h	/^    int		pointer_hidden;	    \/* Is the mouse pointer hidden? *\/$/;"	m	struct:Gui	access:public
Gui::prev_wrap	src/gui.h	/^    int		prev_wrap;	    \/* For updating the horizontal scrollbar *\/$/;"	m	struct:Gui	access:public
Gui::right_sbar_x	src/gui.h	/^    int		right_sbar_x;	    \/* Calculated x coord for right scrollbar *\/$/;"	m	struct:Gui	access:public
Gui::row	src/gui.h	/^    int		row;		    \/* Current cursor row in GUI display *\/$/;"	m	struct:Gui	access:public
Gui::rsrc_bold_font_name	src/gui.h	/^    char_u	*rsrc_bold_font_name; \/* Resource bold font name *\/$/;"	m	struct:Gui	access:public
Gui::rsrc_boldital_font_name	src/gui.h	/^    char_u	*rsrc_boldital_font_name;  \/* Resource bold-italic font name *\/$/;"	m	struct:Gui	access:public
Gui::rsrc_font_name	src/gui.h	/^    char_u	*rsrc_font_name;    \/* Resource font name, used if 'guifont'$/;"	m	struct:Gui	access:public
Gui::rsrc_input_method	src/gui.h	/^    char	*rsrc_input_method;$/;"	m	struct:Gui	access:public
Gui::rsrc_ital_font_name	src/gui.h	/^    char_u	*rsrc_ital_font_name; \/* Resource italic font name *\/$/;"	m	struct:Gui	access:public
Gui::rsrc_menu_bg_name	src/gui.h	/^    char	*rsrc_menu_bg_name;	\/* Color of menu & dialog background *\/$/;"	m	struct:Gui	access:public
Gui::rsrc_menu_fg_name	src/gui.h	/^    char	*rsrc_menu_fg_name;	\/* Color of menu & dialog foreground *\/$/;"	m	struct:Gui	access:public
Gui::rsrc_menu_font_name	src/gui.h	/^    char_u	*rsrc_menu_font_name;    \/* Resource menu Font name *\/$/;"	m	struct:Gui	access:public
Gui::rsrc_preedit_type_name	src/gui.h	/^    char	*rsrc_preedit_type_name;$/;"	m	struct:Gui	access:public
Gui::rsrc_rev_video	src/gui.h	/^    Bool	rsrc_rev_video;	    \/* Use reverse video? *\/$/;"	m	struct:Gui	access:public
Gui::rsrc_scroll_bg_name	src/gui.h	/^    char	*rsrc_scroll_bg_name;	\/* Color of scrollbar background *\/$/;"	m	struct:Gui	access:public
Gui::rsrc_scroll_fg_name	src/gui.h	/^    char	*rsrc_scroll_fg_name;	\/* Color of scrollbar foreground *\/$/;"	m	struct:Gui	access:public
Gui::rsrc_tooltip_bg_name	src/gui.h	/^    char	*rsrc_tooltip_bg_name;	\/* tooltip background color name *\/$/;"	m	struct:Gui	access:public
Gui::rsrc_tooltip_fg_name	src/gui.h	/^    char	*rsrc_tooltip_fg_name;	\/* tooltip foreground color name *\/$/;"	m	struct:Gui	access:public
Gui::rsrc_tooltip_font_name	src/gui.h	/^    char_u	*rsrc_tooltip_font_name; \/* tooltip font name *\/$/;"	m	struct:Gui	access:public
Gui::scroll_bg_pixel	src/gui.h	/^    guicolor_T	scroll_bg_pixel;	\/* Same in Pixel format *\/$/;"	m	struct:Gui	access:public
Gui::scroll_def_bg_pixel	src/gui.h	/^    guicolor_T	scroll_def_bg_pixel;  \/* Default scrollbar background *\/$/;"	m	struct:Gui	access:public
Gui::scroll_def_fg_pixel	src/gui.h	/^    guicolor_T	scroll_def_fg_pixel;  \/* Default scrollbar foreground *\/$/;"	m	struct:Gui	access:public
Gui::scroll_fg_pixel	src/gui.h	/^    guicolor_T	scroll_fg_pixel;	\/* Same in Pixel format *\/$/;"	m	struct:Gui	access:public
Gui::scroll_region_bot	src/gui.h	/^    int		scroll_region_bot;  \/* Bottom (last) line of scroll region *\/$/;"	m	struct:Gui	access:public
Gui::scroll_region_left	src/gui.h	/^    int		scroll_region_left;  \/* Left (first) column of scroll region *\/$/;"	m	struct:Gui	access:public
Gui::scroll_region_right	src/gui.h	/^    int		scroll_region_right;  \/* Right (last) col. of scroll region *\/$/;"	m	struct:Gui	access:public
Gui::scroll_region_top	src/gui.h	/^    int		scroll_region_top;  \/* Top (first) line of scroll region *\/$/;"	m	struct:Gui	access:public
Gui::scrollbar_height	src/gui.h	/^    int		scrollbar_height;   \/* Height of horizontal scrollbar *\/$/;"	m	struct:Gui	access:public
Gui::scrollbar_width	src/gui.h	/^    int		scrollbar_width;    \/* Width of vertical scrollbars *\/$/;"	m	struct:Gui	access:public
Gui::shell_created	src/gui.h	/^    int		shell_created;	    \/* Has the shell been created yet? *\/$/;"	m	struct:Gui	access:public
Gui::spcolor	src/gui.h	/^    GdkColor	*spcolor;	    \/* GDK-styled special color *\/$/;"	m	struct:Gui	access:public
Gui::starting	src/gui.h	/^    int		starting;	    \/* GUI will start in a little while *\/$/;"	m	struct:Gui	access:public
Gui::tabline	src/gui.h	/^    GtkWidget	*tabline;	    \/* tab pages line handle *\/$/;"	m	struct:Gui	access:public
Gui::tabline_height	src/gui.h	/^    int		tabline_height;$/;"	m	struct:Gui	access:public
Gui::text_context	src/gui.h	/^    PangoContext     *text_context; \/* the context used for all text *\/$/;"	m	struct:Gui	access:public
Gui::text_gc	src/gui.h	/^    GC		text_gc;$/;"	m	struct:Gui	access:public
Gui::text_gc	src/gui.h	/^    GdkGC	*text_gc;	    \/* cached GC for normal text *\/$/;"	m	struct:Gui	access:public
Gui::toolbar	src/gui.h	/^    GtkWidget	*toolbar;	    \/* toolbar *\/$/;"	m	struct:Gui	access:public
Gui::toolbar_h	src/gui.h	/^    GtkWidget	*toolbar_h;	    \/* toolbar handle *\/$/;"	m	struct:Gui	access:public
Gui::toolbar_height	src/gui.h	/^    int		toolbar_height;	    \/* height of the toolbar *\/$/;"	m	struct:Gui	access:public
Gui::toolbar_height	src/gui.h	/^    int		toolbar_height;$/;"	m	struct:Gui	access:public
Gui::tooltip_bg_pixel	src/gui.h	/^    guicolor_T	tooltip_bg_pixel;	\/* tooltip background color *\/$/;"	m	struct:Gui	access:public
Gui::tooltip_fg_pixel	src/gui.h	/^    guicolor_T	tooltip_fg_pixel;	\/* tooltip foreground color *\/$/;"	m	struct:Gui	access:public
Gui::tooltip_fontset	src/gui.h	/^    XFontSet	tooltip_fontset;	\/* tooltip fontset *\/$/;"	m	struct:Gui	access:public
Gui::vimContainer	src/gui.h	/^    PtWidget_t	*vimContainer;		\/* PtPanel *\/$/;"	m	struct:Gui	access:public
Gui::vimMenuBar	src/gui.h	/^    PtWidget_t	*vimMenuBar;$/;"	m	struct:Gui	access:public
Gui::vimTextArea	src/gui.h	/^    PtWidget_t	*vimTextArea;		\/* PtRaw *\/$/;"	m	struct:Gui	access:public
Gui::vimToolBar	src/gui.h	/^    PtWidget_t	*vimToolBar;$/;"	m	struct:Gui	access:public
Gui::vimToolBarGroup	src/gui.h	/^    PtWidget_t	*vimToolBarGroup;$/;"	m	struct:Gui	access:public
Gui::vimWindow	src/gui.h	/^    PtWidget_t	*vimWindow;		\/* PtWindow *\/$/;"	m	struct:Gui	access:public
Gui::visibility	src/gui.h	/^    int		visibility;	    \/* Is shell partially\/fully obscured? *\/$/;"	m	struct:Gui	access:public
Gui::visibility	src/gui.h	/^    int		visibility;	    \/* Is window partially\/fully obscured? *\/$/;"	m	struct:Gui	access:public
Gui::which_scrollbars	src/gui.h	/^    int		which_scrollbars[3];\/* Which scrollbar boxes are active? *\/$/;"	m	struct:Gui	access:public
Gui::wid	src/gui.h	/^    Window	wid;		    \/* Window id of text area *\/$/;"	m	struct:Gui	access:public
Gui::wid	src/gui.h	/^    WindowPtr	wid;		    \/* Window id of text area *\/$/;"	m	struct:Gui	access:public
Gui::wide_font	src/gui.h	/^    GuiFont	wide_font;	    \/* 'guifontwide' font *\/$/;"	m	struct:Gui	access:public
Gui::window_handle	src/gui.h	/^    int		window_handle;$/;"	m	struct:Gui	access:public
Gui::window_title	src/gui.h	/^    char_u	*window_title;$/;"	m	struct:Gui	access:public
Gui::window_title_size	src/gui.h	/^    int		window_title_size;$/;"	m	struct:Gui	access:public
GuiFont	src/gui.h	/^  typedef PangoFontDescription	*GuiFont;       \/* handle for a GUI font *\/$/;"	t
GuiFont	src/gui.h	/^  typedef XFontStruct	*GuiFont;	\/* handle for a GUI font *\/$/;"	t
GuiFont	src/gui.h	/^  typedef char		*GuiFont;$/;"	t
GuiFont	src/gui.h	/^  typedef long_u	GuiFont;	\/* handle for a GUI font *\/$/;"	t
GuiFontset	src/gui.h	/^  typedef PangoFontDescription  *GuiFontset;    \/* handle for a GUI fontset *\/$/;"	t
GuiFontset	src/gui.h	/^  typedef XFontSet	GuiFontset;	\/* handle for a GUI fontset *\/$/;"	t
GuiFontset	src/gui.h	/^  typedef char		*GuiFontset;$/;"	t
GuiFontset	src/gui.h	/^  typedef long_u	GuiFontset;	\/* handle for a GUI fontset *\/$/;"	t
GuiScrollbar	src/gui.h	/^typedef struct GuiScrollbar$/;"	s
GuiScrollbar::handler_id	src/gui.h	/^    unsigned long handler_id;   \/* Id of "value_changed" signal handler *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::height	src/gui.h	/^    int		height;		\/* Current height of scroll bar in rows *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::id	src/gui.h	/^    ControlHandle id;		\/* A handle to the scrollbar *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::id	src/gui.h	/^    GtkWidget *id;		\/* Id of real scroll bar *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::id	src/gui.h	/^    HWND	id;		\/* Id of real scroll bar *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::id	src/gui.h	/^    PtWidget_t	*id;$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::id	src/gui.h	/^    Widget	id;		\/* Id of real scroll bar *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::id	src/gui.h	/^    int		id;		\/* Window handle of scrollbar window *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::ident	src/gui.h	/^    long	ident;		\/* Unique identifier for each scrollbar *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::max	src/gui.h	/^    long	max;		\/* Number of lines in buffer *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::pixval	src/gui.h	/^    int		pixval;		\/* pixel count of value *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::scroll_shift	src/gui.h	/^    int		scroll_shift;	\/* The scrollbar stuff can handle only up to$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::size	src/gui.h	/^    long	size;		\/* Size of scrollbar thumb *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::status_height	src/gui.h	/^    int		status_height;	\/* Height of status line *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::top	src/gui.h	/^    int		top;		\/* Top of scroll bar (chars from row 0) *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::type	src/gui.h	/^    int		type;		\/* one of SBAR_{LEFT,RIGHT,BOTTOM} *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::value	src/gui.h	/^    long	value;		\/* Represents top line number visible *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::width	src/gui.h	/^    int		width;		\/* Current width of scroll bar in cols *\/$/;"	m	struct:GuiScrollbar	access:public
GuiScrollbar::wp	src/gui.h	/^    win_T	*wp;		\/* Scrollbar's window, NULL for bottom *\/$/;"	m	struct:GuiScrollbar	access:public
H	runtime/macros/less.vim	/^map H h$/;"	m
H	src/testdir/test49.vim	/^function H()$/;"	f
H	src/testdir/test49.vim	/^function! H() abort$/;"	f
H	src/testdir/test49.vim	/^function! H()$/;"	f
HAMZE	src/farsi.h	111;"	d
HANDLE	src/gui_w48.c	/^typedef int HANDLE;$/;"	t	file:
HANDLE	src/if_lua.c	47;"	d	file:
HANDLE	src/if_tcl.c	/^typedef int HANDLE;$/;"	t	file:
HANDLE	src/os_mswin.c	/^typedef int HANDLE;$/;"	t	file:
HANDLE	src/os_win16.c	/^typedef int HANDLE;$/;"	t	file:
HANDLE	src/os_win32.c	/^typedef int HANDLE;$/;"	t	file:
HANDLE_ERRORS	src/integration.c	100;"	d	file:
HANDLE_ERRORS	src/integration.c	98;"	d	file:
HANDLE_WM_ACTIVATEAPP	src/gui_w32.c	126;"	d	file:
HANDLE_WM_CHAR	src/gui_w32.c	154;"	d	file:
HANDLE_WM_DEADCHAR	src/gui_w32.c	162;"	d	file:
HANDLE_WM_DROPFILES	src/gui_w16.c	44;"	d	file:
HANDLE_WM_DROPFILES	src/gui_w32.c	150;"	d	file:
HANDLE_WM_HSCROLL	src/gui_w32.c	146;"	d	file:
HANDLE_WM_KILLFOCUS	src/gui_w32.c	142;"	d	file:
HANDLE_WM_LBUTTONDBLCLK	src/gui_w32.c	94;"	d	file:
HANDLE_WM_LBUTTONDOWN	src/gui_w32.c	118;"	d	file:
HANDLE_WM_LBUTTONUP	src/gui_w32.c	114;"	d	file:
HANDLE_WM_MBUTTONDBLCLK	src/gui_w32.c	90;"	d	file:
HANDLE_WM_MBUTTONDOWN	src/gui_w32.c	110;"	d	file:
HANDLE_WM_MBUTTONUP	src/gui_w32.c	86;"	d	file:
HANDLE_WM_MOUSEMOVE	src/gui_w32.c	102;"	d	file:
HANDLE_WM_RBUTTONDBLCLK	src/gui_w32.c	82;"	d	file:
HANDLE_WM_RBUTTONDOWN	src/gui_w32.c	98;"	d	file:
HANDLE_WM_RBUTTONUP	src/gui_w32.c	106;"	d	file:
HANDLE_WM_SETFOCUS	src/gui_w32.c	138;"	d	file:
HANDLE_WM_SYSCHAR	src/gui_w32.c	122;"	d	file:
HANDLE_WM_SYSDEADCHAR	src/gui_w32.c	158;"	d	file:
HANDLE_WM_VSCROLL	src/gui_w32.c	134;"	d	file:
HANDLE_WM_WINDOWPOSCHANGING	src/gui_w32.c	130;"	d	file:
HANDLE_WM_XBUTTONDBLCLK	src/gui_w32.c	40;"	d	file:
HANDLE_WM_XBUTTONDOWN	src/gui_w32.c	36;"	d	file:
HANDLE_WM_XBUTTONUP	src/gui_w32.c	32;"	d	file:
HANGULIN_OBJ	src/auto/config.mk	/^HANGULIN_OBJ	= $/;"	m
HANGULIN_SRC	src/auto/config.mk	/^HANGULIN_SRC	= $/;"	m
HANGUL_DEFAULT_KEYBOARD	src/feature.h	692;"	d
HANGUL_DEFAULT_KEYBOARD	src/hangulin.c	13;"	d	file:
HASHITEM_EMPTY	src/structs.h	1024;"	d
HASLOOKBH	src/regexp.c	370;"	d	file:
HASNL	src/regexp.c	369;"	d	file:
HASWIDTH	src/regexp.c	366;"	d	file:
HAS_BW_FLAGS	src/fileio.c	87;"	d	file:
HAS_HOTKEY_LEN	src/message.c	3477;"	d	file:
HAS_SWAP_EXISTS_ACTION	src/globals.h	944;"	d
HAVE_ACL	src/os_unix.h	542;"	d
HAVE_ACL	src/os_win32.h	67;"	d
HAVE_ATTRIBUTE_UNUSED	src/auto/config.h	35;"	d
HAVE_AVAIL_MEM	src/os_amiga.h	17;"	d
HAVE_AVAIL_MEM	src/os_mac.h	101;"	d
HAVE_AVAIL_MEM	src/os_mac.h	280;"	d
HAVE_AVAIL_MEM	src/os_msdos.h	43;"	d
HAVE_AVAIL_MEM	src/os_riscos.h	23;"	d
HAVE_AVAIL_MEM	src/os_win16.h	38;"	d
HAVE_AVAIL_MEM	src/os_win32.h	80;"	d
HAVE_BCMP	src/auto/config.h	158;"	d
HAVE_BIND_TEXTDOMAIN_CODESET	src/auto/config.h	213;"	d
HAVE_BIND_TEXTDOMAIN_CODESET	src/vim.h	577;"	d
HAVE_BUFLIST_MATCH	src/buffer.c	32;"	d	file:
HAVE_CHECK_STACK_GROWTH	src/os_unix.c	674;"	d	file:
HAVE_DATE_TIME	src/auto/config.h	32;"	d
HAVE_DATE_TIME	src/os_amiga.h	37;"	d
HAVE_DATE_TIME	src/os_mac.h	115;"	d
HAVE_DATE_TIME	src/os_msdos.h	40;"	d
HAVE_DATE_TIME	src/os_os2_cfg.h	45;"	d
HAVE_DATE_TIME	src/os_vms_conf.h	23;"	d
HAVE_DATE_TIME	src/os_win16.h	36;"	d
HAVE_DATE_TIME	src/os_win32.h	75;"	d
HAVE_DIRENT_H	src/auto/config.h	224;"	d
HAVE_DIRENT_H	src/os_os2_cfg.h	165;"	d
HAVE_DIRENT_H	src/os_vms_conf.h	123;"	d
HAVE_DLFCN_H	src/auto/config.h	398;"	d
HAVE_DLOPEN	src/auto/config.h	407;"	d
HAVE_DLSYM	src/auto/config.h	410;"	d
HAVE_DROP_FILE	src/gui.h	87;"	d
HAVE_DROP_FILE	src/os_beos.h	18;"	d
HAVE_DUP	src/os_dos.h	124;"	d
HAVE_DUP	src/os_os2_cfg.h	12;"	d
HAVE_DUP	src/os_unix.h	538;"	d
HAVE_ERRNO_H	src/auto/config.h	225;"	d
HAVE_ERRNO_H	src/os_os2_cfg.h	224;"	d
HAVE_ERRNO_H	src/os_vms_conf.h	115;"	d
HAVE_EX_SCRIPT_NI	src/ex_docmd.c	138;"	d	file:
HAVE_FCHDIR	src/auto/config.h	159;"	d
HAVE_FCHDIR	src/os_os2_cfg.h	144;"	d
HAVE_FCHDIR	src/os_vms_conf.h	144;"	d
HAVE_FCHDIR	src/vim.h	50;"	d
HAVE_FCHOWN	src/auto/config.h	160;"	d
HAVE_FCHOWN	src/os_os2_cfg.h	135;"	d
HAVE_FCHOWN	src/os_vms_conf.h	106;"	d
HAVE_FCNTL_H	src/auto/config.h	226;"	d
HAVE_FCNTL_H	src/if_python.c	30;"	d	file:
HAVE_FCNTL_H	src/if_python.c	55;"	d	file:
HAVE_FCNTL_H	src/if_python3.c	38;"	d	file:
HAVE_FCNTL_H	src/if_python3.c	67;"	d	file:
HAVE_FCNTL_H	src/os_amiga.h	28;"	d
HAVE_FCNTL_H	src/os_mac.h	109;"	d
HAVE_FCNTL_H	src/os_msdos.h	30;"	d
HAVE_FCNTL_H	src/os_os2_cfg.h	203;"	d
HAVE_FCNTL_H	src/os_vms_conf.h	164;"	d
HAVE_FCNTL_H	src/os_vms_conf.h	175;"	d
HAVE_FCNTL_H	src/os_win16.h	27;"	d
HAVE_FCNTL_H	src/os_win32.h	47;"	d
HAVE_FD_CLOEXEC	src/auto/config.h	434;"	d
HAVE_FLOAT_FUNCS	src/auto/config.h	178;"	d
HAVE_FLOAT_FUNCS	src/os_vms_conf.h	121;"	d
HAVE_FSEEKO	src/auto/config.h	161;"	d
HAVE_FSYNC	src/auto/config.h	162;"	d
HAVE_FSYNC	src/os_os2_cfg.h	141;"	d
HAVE_FSYNC	src/os_vms_conf.h	109;"	d
HAVE_GETCWD	src/auto/config.h	163;"	d
HAVE_GETCWD	src/os_os2_cfg.h	106;"	d
HAVE_GETCWD	src/os_vms_conf.h	99;"	d
HAVE_GETPWNAM	src/auto/config.h	165;"	d
HAVE_GETPWNAM	src/os_os2_cfg.h	159;"	d
HAVE_GETPWNAM	src/os_vms_conf.h	111;"	d
HAVE_GETPWUID	src/auto/config.h	166;"	d
HAVE_GETPWUID	src/os_os2_cfg.h	156;"	d
HAVE_GETPWUID	src/os_vms_conf.h	110;"	d
HAVE_GETRLIMIT	src/auto/config.h	167;"	d
HAVE_GETTEXT	src/auto/config.h	401;"	d
HAVE_GETTIMEOFDAY	src/auto/config.h	168;"	d
HAVE_GETTIMEOFDAY	src/os_os2_cfg.h	153;"	d
HAVE_GETTIMEOFDAY	src/os_vms_conf.h	148;"	d
HAVE_GETTIMEOFDAY	src/os_vms_conf.h	154;"	d
HAVE_GETWD	src/auto/config.h	169;"	d
HAVE_GETWD	src/os_os2_cfg.h	109;"	d
HAVE_GET_LOCALE_VAL	src/ex_cmds2.c	3860;"	d	file:
HAVE_GTK_MULTIHEAD	src/auto/config.h	392;"	d
HAVE_ICONV	src/auto/config.h	170;"	d
HAVE_ICONV	src/os_vms_conf.h	170;"	d
HAVE_ICONV	src/os_vms_conf.h	181;"	d
HAVE_ICONV_H	src/auto/config.h	228;"	d
HAVE_ICONV_H	src/os_vms_conf.h	169;"	d
HAVE_ICONV_H	src/os_vms_conf.h	180;"	d
HAVE_INTTYPES_H	src/auto/config.h	229;"	d
HAVE_ISSYMLINK	src/vim.h	2065;"	d
HAVE_ISWUPPER	src/auto/config.h	210;"	d
HAVE_LANGINFO_H	src/auto/config.h	230;"	d
HAVE_LIBC_H	src/os_os2_cfg.h	245;"	d
HAVE_LIBC_H	src/os_vms_conf.h	140;"	d
HAVE_LIBGEN_H	src/auto/config.h	232;"	d
HAVE_LIBINTL_H	src/auto/config.h	233;"	d
HAVE_LOCALE_H	src/auto/config.h	234;"	d
HAVE_LOCALE_H	src/os_msdos.h	62;"	d
HAVE_LOCALE_H	src/os_os2_cfg.h	233;"	d
HAVE_LOCALE_H	src/os_vms_conf.h	167;"	d
HAVE_LOCALE_H	src/os_vms_conf.h	178;"	d
HAVE_LOCALE_H	src/os_win16.h	26;"	d
HAVE_LOCALE_H	src/os_win32.h	44;"	d
HAVE_LSTAT	src/auto/config.h	172;"	d
HAVE_MATH_H	src/auto/config.h	235;"	d
HAVE_MATH_H	src/os_mac.h	112;"	d
HAVE_MATH_H	src/os_msdos.h	38;"	d
HAVE_MATH_H	src/os_vms_conf.h	120;"	d
HAVE_MATH_H	src/os_win16.h	30;"	d
HAVE_MATH_H	src/os_win32.h	32;"	d
HAVE_MEMCMP	src/auto/config.h	173;"	d
HAVE_MEMCMP	src/os_vms_conf.h	104;"	d
HAVE_MEMSET	src/auto/config.h	174;"	d
HAVE_MEMSET	src/os_amiga.h	34;"	d
HAVE_MEMSET	src/os_mac.h	107;"	d
HAVE_MEMSET	src/os_msdos.h	35;"	d
HAVE_MEMSET	src/os_os2_cfg.h	126;"	d
HAVE_MEMSET	src/os_vms_conf.h	103;"	d
HAVE_MEMSET	src/os_win16.h	24;"	d
HAVE_MEMSET	src/os_win32.h	42;"	d
HAVE_MKDTEMP	src/auto/config.h	175;"	d
HAVE_NANOSLEEP	src/auto/config.h	176;"	d
HAVE_NDIR_H	src/os_os2_cfg.h	174;"	d
HAVE_NDIR_H	src/os_vms_conf.h	126;"	d
HAVE_NL_LANGINFO_CODESET	src/auto/config.h	171;"	d
HAVE_NL_MSG_CAT_CNTR	src/auto/config.h	404;"	d
HAVE_OPENDIR	src/auto/config.h	177;"	d
HAVE_OPENDIR	src/os_vms_conf.h	116;"	d
HAVE_OSPEED	src/auto/config.h	17;"	d
HAVE_OSPEED	src/os_os2_cfg.h	27;"	d
HAVE_OUTFUNTYPE	src/os_os2_cfg.h	42;"	d
HAVE_PATHDEF	src/vim.h	34;"	d
HAVE_POLL	src/vim.h	522;"	d
HAVE_POLL	src/vim.h	526;"	d
HAVE_POLL_H	src/auto/config.h	237;"	d
HAVE_PUTENV	src/auto/config.h	179;"	d
HAVE_PUTENV	src/os_mac.h	290;"	d
HAVE_PUTENV	src/os_mac.h	297;"	d
HAVE_PUTENV	src/os_msdos.h	23;"	d
HAVE_PUTENV	src/os_os2_cfg.h	150;"	d
HAVE_PUTENV	src/os_vms_conf.h	117;"	d
HAVE_PUTENV	src/os_win16.h	45;"	d
HAVE_PUTENV	src/os_win32.h	82;"	d
HAVE_PWD_H	src/auto/config.h	239;"	d
HAVE_PWD_H	src/os_os2_cfg.h	254;"	d
HAVE_PWD_H	src/os_vms_conf.h	143;"	d
HAVE_QSORT	src/auto/config.h	180;"	d
HAVE_QSORT	src/os_amiga.h	35;"	d
HAVE_QSORT	src/os_mac.h	110;"	d
HAVE_QSORT	src/os_msdos.h	36;"	d
HAVE_QSORT	src/os_os2_cfg.h	162;"	d
HAVE_QSORT	src/os_vms_conf.h	108;"	d
HAVE_QSORT	src/os_win16.h	28;"	d
HAVE_QSORT	src/os_win32.h	52;"	d
HAVE_READLINK	src/auto/config.h	181;"	d
HAVE_RENAME	src/auto/config.h	182;"	d
HAVE_RENAME	src/os_mac.h	292;"	d
HAVE_RENAME	src/os_os2_cfg.h	138;"	d
HAVE_RENAME	src/os_vms_conf.h	107;"	d
HAVE_SANDBOX	src/globals.h	640;"	d
HAVE_SELECT	src/auto/config.h	183;"	d
HAVE_SELECT	src/os_mac.h	288;"	d
HAVE_SELECT	src/os_os2_cfg.h	112;"	d
HAVE_SELECT	src/os_vms_conf.h	163;"	d
HAVE_SELECT	src/os_vms_conf.h	174;"	d
HAVE_SELINUX	src/auto/config.h	184;"	d
HAVE_SETENV	src/auto/config.h	185;"	d
HAVE_SETENV	src/os_amiga.h	33;"	d
HAVE_SETENV	src/os_mac.h	291;"	d
HAVE_SETENV	src/os_os2_cfg.h	147;"	d
HAVE_SETENV	src/os_vms_conf.h	118;"	d
HAVE_SETENV	src/vim.h	333;"	d
HAVE_SETJMP_H	src/auto/config.h	240;"	d
HAVE_SETJMP_H	src/os_vms_conf.h	119;"	d
HAVE_SETPGID	src/auto/config.h	186;"	d
HAVE_SETSID	src/auto/config.h	187;"	d
HAVE_SGTTY_H	src/auto/config.h	241;"	d
HAVE_SGTTY_H	src/os_os2_cfg.h	206;"	d
HAVE_SGTTY_H	src/os_vms_conf.h	133;"	d
HAVE_SIGACTION	src/auto/config.h	188;"	d
HAVE_SIGALTSTACK	src/auto/config.h	189;"	d
HAVE_SIGCONTEXT	src/auto/config.h	140;"	d
HAVE_SIGCONTEXT	src/os_vms_conf.h	78;"	d
HAVE_SIGSET	src/auto/config.h	190;"	d
HAVE_SIGSET	src/os_os2_cfg.h	100;"	d
HAVE_SIGSETJMP	src/os_vms_conf.h	152;"	d
HAVE_SIGSETJMP	src/os_vms_conf.h	158;"	d
HAVE_SIGSTACK	src/auto/config.h	192;"	d
HAVE_SIGVEC	src/auto/config.h	193;"	d
HAVE_STAT_H	src/os_amiga.h	21;"	d
HAVE_STDARG_H	src/auto/config.h	298;"	d
HAVE_STDARG_H	src/if_python.c	38;"	d	file:
HAVE_STDARG_H	src/if_python3.c	52;"	d	file:
HAVE_STDARG_H	src/os_amiga.h	24;"	d
HAVE_STDARG_H	src/os_msdos.h	24;"	d
HAVE_STDARG_H	src/os_os2_cfg.h	187;"	d
HAVE_STDARG_H	src/os_vms_conf.h	112;"	d
HAVE_STDARG_H	src/os_win32.h	50;"	d
HAVE_STDINT_H	src/auto/config.h	242;"	d
HAVE_STDLIB_H	src/auto/config.h	299;"	d
HAVE_STDLIB_H	src/os_amiga.h	26;"	d
HAVE_STDLIB_H	src/os_msdos.h	28;"	d
HAVE_STDLIB_H	src/os_os2_cfg.h	190;"	d
HAVE_STDLIB_H	src/os_vms_conf.h	113;"	d
HAVE_STRCASECMP	src/auto/config.h	194;"	d
HAVE_STRCASECMP	src/os_os2_cfg.h	132;"	d
HAVE_STRCASECMP	src/os_vms_conf.h	150;"	d
HAVE_STRCASECMP	src/os_vms_conf.h	156;"	d
HAVE_STRCSPN	src/os_amiga.h	29;"	d
HAVE_STRCSPN	src/os_mac.h	106;"	d
HAVE_STRCSPN	src/os_msdos.h	31;"	d
HAVE_STRCSPN	src/os_os2_cfg.h	115;"	d
HAVE_STRCSPN	src/os_vms_conf.h	100;"	d
HAVE_STRCSPN	src/os_win16.h	20;"	d
HAVE_STRCSPN	src/os_win32.h	34;"	d
HAVE_STRERROR	src/auto/config.h	195;"	d
HAVE_STRERROR	src/os_os2_cfg.h	129;"	d
HAVE_STRERROR	src/os_vms_conf.h	105;"	d
HAVE_STRFTIME	src/auto/config.h	196;"	d
HAVE_STRFTIME	src/os_amiga.h	32;"	d
HAVE_STRFTIME	src/os_mac.h	117;"	d
HAVE_STRFTIME	src/os_msdos.h	33;"	d
HAVE_STRFTIME	src/os_os2_cfg.h	123;"	d
HAVE_STRFTIME	src/os_vms_conf.h	172;"	d
HAVE_STRFTIME	src/os_vms_conf.h	183;"	d
HAVE_STRFTIME	src/os_win16.h	23;"	d
HAVE_STRFTIME	src/os_win32.h	40;"	d
HAVE_STRICMP	src/os_amiga.h	30;"	d
HAVE_STRICMP	src/os_msdos.h	32;"	d
HAVE_STRICMP	src/os_os2_cfg.h	29;"	d
HAVE_STRICMP	src/os_win16.h	21;"	d
HAVE_STRICMP	src/os_win32.h	36;"	d
HAVE_STRINGS_H	src/auto/config.h	243;"	d
HAVE_STRINGS_H	src/os_os2_cfg.h	227;"	d
HAVE_STRINGS_H	src/os_vms_conf.h	151;"	d
HAVE_STRINGS_H	src/os_vms_conf.h	157;"	d
HAVE_STRING_H	src/auto/config.h	300;"	d
HAVE_STRING_H	src/os_amiga.h	27;"	d
HAVE_STRING_H	src/os_mac.h	105;"	d
HAVE_STRING_H	src/os_msdos.h	29;"	d
HAVE_STRING_H	src/os_os2_cfg.h	191;"	d
HAVE_STRING_H	src/os_vms_conf.h	114;"	d
HAVE_STRING_H	src/os_win16.h	19;"	d
HAVE_STRING_H	src/os_win32.h	29;"	d
HAVE_STRNCASECMP	src/auto/config.h	198;"	d
HAVE_STRNICMP	src/os_amiga.h	31;"	d
HAVE_STRNICMP	src/os_msdos.h	34;"	d
HAVE_STRNICMP	src/os_os2_cfg.h	30;"	d
HAVE_STRNICMP	src/os_win16.h	22;"	d
HAVE_STRNICMP	src/os_win32.h	37;"	d
HAVE_STROPTS_H	src/auto/config.h	244;"	d
HAVE_STROPTS_H	src/os_os2_cfg.h	221;"	d
HAVE_STROPTS_H	src/os_vms_conf.h	136;"	d
HAVE_STRPBRK	src/auto/config.h	200;"	d
HAVE_STRTOL	src/auto/config.h	201;"	d
HAVE_STRTOL	src/os_os2_cfg.h	118;"	d
HAVE_STRTOL	src/os_vms_conf.h	101;"	d
HAVE_ST_BLKSIZE	src/auto/config.h	202;"	d
HAVE_ST_MODE	src/os_dos.h	125;"	d
HAVE_ST_MODE	src/os_mac.h	111;"	d
HAVE_ST_MODE	src/os_msdos.h	37;"	d
HAVE_ST_MODE	src/os_unix.h	539;"	d
HAVE_ST_MODE	src/os_win16.h	29;"	d
HAVE_ST_MODE	src/os_win32.h	53;"	d
HAVE_SVR4_PTYS	src/auto/config.h	121;"	d
HAVE_SVR4_PTYS	src/pty.c	120;"	d	file:
HAVE_SYSCONF	src/auto/config.h	203;"	d
HAVE_SYSINFO	src/auto/config.h	205;"	d
HAVE_SYSINFO_MEM_UNIT	src/auto/config.h	206;"	d
HAVE_SYS_DIR_H	src/os_os2_cfg.h	171;"	d
HAVE_SYS_DIR_H	src/os_vms_conf.h	125;"	d
HAVE_SYS_IOCTL_H	src/auto/config.h	248;"	d
HAVE_SYS_IOCTL_H	src/os_os2_cfg.h	209;"	d
HAVE_SYS_IOCTL_H	src/os_vms_conf.h	134;"	d
HAVE_SYS_NDIR_H	src/os_os2_cfg.h	168;"	d
HAVE_SYS_NDIR_H	src/os_vms_conf.h	124;"	d
HAVE_SYS_PARAM_H	src/auto/config.h	250;"	d
HAVE_SYS_POLL_H	src/auto/config.h	251;"	d
HAVE_SYS_POLL_H	src/os_os2_cfg.h	251;"	d
HAVE_SYS_POLL_H	src/os_vms_conf.h	142;"	d
HAVE_SYS_PTEM_H	src/os_os2_cfg.h	239;"	d
HAVE_SYS_PTEM_H	src/os_vms_conf.h	138;"	d
HAVE_SYS_RESOURCE_H	src/auto/config.h	253;"	d
HAVE_SYS_SELECT_H	src/auto/config.h	254;"	d
HAVE_SYS_SELECT_H	src/os_mac.h	289;"	d
HAVE_SYS_SELECT_H	src/os_os2_cfg.h	194;"	d
HAVE_SYS_SELECT_H	src/os_vms_conf.h	129;"	d
HAVE_SYS_STATFS_H	src/auto/config.h	255;"	d
HAVE_SYS_STATFS_H	src/os_os2_cfg.h	248;"	d
HAVE_SYS_STATFS_H	src/os_vms_conf.h	141;"	d
HAVE_SYS_STREAM_H	src/os_os2_cfg.h	236;"	d
HAVE_SYS_STREAM_H	src/os_vms_conf.h	137;"	d
HAVE_SYS_SYSCTL_H	src/auto/config.h	257;"	d
HAVE_SYS_SYSINFO_H	src/auto/config.h	258;"	d
HAVE_SYS_SYSTEMINFO_H	src/os_os2_cfg.h	230;"	d
HAVE_SYS_SYSTEMINFO_H	src/os_vms_conf.h	131;"	d
HAVE_SYS_TIME_H	src/auto/config.h	260;"	d
HAVE_SYS_TIME_H	src/os_os2_cfg.h	212;"	d
HAVE_SYS_TIME_H	src/os_vms_conf.h	166;"	d
HAVE_SYS_TIME_H	src/os_vms_conf.h	177;"	d
HAVE_SYS_TYPES_H	src/auto/config.h	261;"	d
HAVE_SYS_UTSNAME_H	src/auto/config.h	262;"	d
HAVE_SYS_UTSNAME_H	src/os_os2_cfg.h	197;"	d
HAVE_SYS_UTSNAME_H	src/os_unix.h	17;"	d
HAVE_SYS_UTSNAME_H	src/os_vms_conf.h	130;"	d
HAVE_SYS_WAIT_H	src/auto/config.h	288;"	d
HAVE_SYS_WAIT_H	src/os_mac.h	285;"	d
HAVE_SYS_WAIT_H	src/os_os2_cfg.h	177;"	d
HAVE_SYS_WAIT_H	src/os_vms_conf.h	127;"	d
HAVE_TERMCAP_H	src/auto/config.h	263;"	d
HAVE_TERMCAP_H	src/os_os2_cfg.h	200;"	d
HAVE_TERMCAP_H	src/os_vms_conf.h	132;"	d
HAVE_TERMIOS_H	src/auto/config.h	264;"	d
HAVE_TERMIOS_H	src/os_mac.h	286;"	d
HAVE_TERMIOS_H	src/os_os2_cfg.h	242;"	d
HAVE_TERMIOS_H	src/os_vms_conf.h	139;"	d
HAVE_TERMIO_H	src/auto/config.h	265;"	d
HAVE_TERMIO_H	src/os_os2_cfg.h	215;"	d
HAVE_TERMIO_H	src/os_vms_conf.h	135;"	d
HAVE_TGETENT	src/auto/config.h	207;"	d
HAVE_TGETENT	src/os_mac.h	259;"	d
HAVE_TGETENT	src/os_os2_cfg.h	121;"	d
HAVE_TGETENT	src/os_riscos.h	55;"	d
HAVE_TGETENT	src/os_vms_conf.h	102;"	d
HAVE_TOTAL_MEM	src/os_unix.h	202;"	d
HAVE_TOTAL_MEM	src/os_unix.h	37;"	d
HAVE_TOWLOWER	src/auto/config.h	208;"	d
HAVE_TOWUPPER	src/auto/config.h	209;"	d
HAVE_TRY_EXCEPT	src/os_win32.h	132;"	d
HAVE_UNION_WAIT	src/os_os2_cfg.h	180;"	d
HAVE_UNION_WAIT	src/os_vms_conf.h	128;"	d
HAVE_UNISTD_H	src/auto/config.h	268;"	d
HAVE_UNISTD_H	src/os_os2_cfg.h	218;"	d
HAVE_UNISTD_H	src/os_vms_conf.h	165;"	d
HAVE_UNISTD_H	src/os_vms_conf.h	176;"	d
HAVE_UP_BC_PC	src/auto/config.h	23;"	d
HAVE_UP_BC_PC	src/os_os2_cfg.h	36;"	d
HAVE_USLEEP	src/auto/config.h	211;"	d
HAVE_USLEEP	src/os_vms_conf.h	149;"	d
HAVE_USLEEP	src/os_vms_conf.h	155;"	d
HAVE_UTIME	src/auto/config.h	212;"	d
HAVE_UTIME	src/os_unix.h	14;"	d
HAVE_UTIMES	src/auto/config.h	221;"	d
HAVE_UTIME_H	src/auto/config.h	271;"	d
HAVE_WCHAR_H	src/auto/config.h	266;"	d
HAVE_WCTYPE_H	src/auto/config.h	267;"	d
HAVE_X11	src/auto/config.h	11;"	d
HAVE_X11	src/os_os2_cfg.h	21;"	d
HAVE_X11	src/os_vms_conf.h	188;"	d
HAVE_X11_SM_SMLIB_H	src/auto/config.h	282;"	d
HAVE_X11_SUNKEYSYM_H	src/auto/config.h	272;"	d
HAVE_XPM	src/feature.h	759;"	d
HBITMAP	src/gui_w48.c	/^typedef int HBITMAP;$/;"	t	file:
HBRUSH	src/gui_w48.c	/^typedef int HBRUSH;$/;"	t	file:
HDC	src/gui_w48.c	/^typedef void *HDC;$/;"	t	file:
HDC	src/os_mswin.c	/^typedef int HDC;$/;"	t	file:
HDC	src/os_win32.c	/^typedef int HDC;$/;"	t	file:
HDROP	src/gui_w48.c	/^typedef int HDROP;$/;"	t	file:
HEAD	src/regexp.c	192;"	d	file:
HEADERS	src/Make_bc5.mak	/^HEADERS = -H -H=vim.csm -Hc$/;"	m
HEADER_SIZE	src/memline.c	130;"	d	file:
HELPMOD	src/Makefile	/^HELPMOD = 644$/;"	m
HELPSOURCE	src/Makefile	/^HELPSOURCE = ..\/runtime\/doc$/;"	m
HELPSUBDIR	src/Makefile	/^HELPSUBDIR = \/doc$/;"	m
HELPSUBLOC	src/Makefile	/^HELPSUBLOC	= $(VIMRTLOC)$(HELPSUBDIR)$/;"	m
HEX	src/regexp.c	186;"	d	file:
HEX_BITS	src/xxd/xxd.c	224;"	d	file:
HEX_CINCLUDE	src/xxd/xxd.c	223;"	d	file:
HEX_NORMAL	src/xxd/xxd.c	221;"	d	file:
HEX_POSTSCRIPT	src/xxd/xxd.c	222;"	d	file:
HE_J	src/farsi.h	118;"	d
HFONT	src/os_mswin.c	/^typedef int HFONT;$/;"	t	file:
HFONT	src/os_win32.c	/^typedef int HFONT;$/;"	t	file:
HI2AH	src/spell.c	4844;"	d	file:
HI2CI	src/spell.c	4854;"	d	file:
HI2DI	src/eval.c	52;"	d	file:
HI2KE	src/syntax.c	258;"	d	file:
HI2SFT	src/spell.c	13155;"	d	file:
HI2UF	src/eval.c	223;"	d	file:
HI2WC	src/spell.c	588;"	d	file:
HI2WN	src/spell.c	4914;"	d	file:
HICON	src/os_mswin.c	/^typedef int HICON;$/;"	t	file:
HICON	src/os_win32.c	/^typedef int HICON;$/;"	t	file:
HIGHLIGHT	src/gui_x11_pm.h	92;"	d
HIGHLIGHT_INIT	src/option.c	469;"	d	file:
HIGHLIGHT_INIT	src/option.c	471;"	d	file:
HIGHL_COST	src/screen.c	8382;"	d	file:
HIKEY2DI	src/eval.c	51;"	d	file:
HIKEY2KE	src/syntax.c	257;"	d	file:
HIKEY2SFT	src/spell.c	13154;"	d	file:
HIKEY2UF	src/eval.c	222;"	d	file:
HIMC	src/gui_w32.c	/^typedef HANDLE HIMC;$/;"	t	file:
HINSTANCE	src/gui_w48.c	/^typedef void *HINSTANCE;$/;"	t	file:
HINSTANCE	src/if_python.c	104;"	d	file:
HINSTANCE	src/if_python.c	98;"	d	file:
HINSTANCE	src/if_python3.c	82;"	d	file:
HINSTANCE	src/if_ruby.c	130;"	d	file:
HINSTANCE	src/mbyte.c	4140;"	d	file:
HINSTANCE	src/os_win32.c	/^typedef int HINSTANCE;$/;"	t	file:
HIST_CMD	src/vim.h	1074;"	d
HIST_COUNT	src/vim.h	1079;"	d
HIST_DEBUG	src/vim.h	1078;"	d
HIST_EXPR	src/vim.h	1076;"	d
HIST_INPUT	src/vim.h	1077;"	d
HIST_SEARCH	src/vim.h	1075;"	d
HITRETURN	src/vim.h	689;"	d
HI_KEY_REMOVED	src/structs.h	1023;"	d
HLF_8	src/vim.h	/^    HLF_8 = 0	    \/* Meta & special keys listed with ":map", text that is$/;"	e	enum:__anon33
HLF_ADD	src/vim.h	/^    , HLF_ADD	    \/* Added diff line *\/$/;"	e	enum:__anon33
HLF_AT	src/vim.h	/^    , HLF_AT	    \/* @ and ~ characters at end of screen, characters that$/;"	e	enum:__anon33
HLF_C	src/vim.h	/^    , HLF_C	    \/* column to separate vertically split windows *\/$/;"	e	enum:__anon33
HLF_CHD	src/vim.h	/^    , HLF_CHD	    \/* Changed diff line *\/$/;"	e	enum:__anon33
HLF_CM	src/vim.h	/^    , HLF_CM	    \/* Mode (e.g., "-- INSERT --") *\/$/;"	e	enum:__anon33
HLF_CONCEAL	src/vim.h	/^    , HLF_CONCEAL   \/* Concealed text *\/$/;"	e	enum:__anon33
HLF_COUNT	src/vim.h	/^    , HLF_COUNT	    \/* MUST be the last one *\/$/;"	e	enum:__anon33
HLF_CUC	src/vim.h	/^    , HLF_CUC	    \/* 'cursurcolumn' *\/$/;"	e	enum:__anon33
HLF_CUL	src/vim.h	/^    , HLF_CUL	    \/* 'cursurline' *\/$/;"	e	enum:__anon33
HLF_D	src/vim.h	/^    , HLF_D	    \/* directories in CTRL-D listing *\/$/;"	e	enum:__anon33
HLF_DED	src/vim.h	/^    , HLF_DED	    \/* Deleted diff line *\/$/;"	e	enum:__anon33
HLF_E	src/vim.h	/^    , HLF_E	    \/* error messages *\/$/;"	e	enum:__anon33
HLF_FC	src/vim.h	/^    , HLF_FC	    \/* Fold column *\/$/;"	e	enum:__anon33
HLF_FL	src/vim.h	/^    , HLF_FL	    \/* Folded line *\/$/;"	e	enum:__anon33
HLF_H	src/vim.h	/^    , HLF_H	    \/* obsolete, ignored *\/$/;"	e	enum:__anon33
HLF_I	src/vim.h	/^    , HLF_I	    \/* incremental search *\/$/;"	e	enum:__anon33
HLF_L	src/vim.h	/^    , HLF_L	    \/* last search string *\/$/;"	e	enum:__anon33
HLF_M	src/vim.h	/^    , HLF_M	    \/* "--More--" message *\/$/;"	e	enum:__anon33
HLF_MC	src/vim.h	/^    , HLF_MC	    \/* 'colorcolumn' *\/$/;"	e	enum:__anon33
HLF_N	src/vim.h	/^    , HLF_N	    \/* line number for ":number" and ":#" commands *\/$/;"	e	enum:__anon33
HLF_PNI	src/vim.h	/^    , HLF_PNI	    \/* popup menu normal item *\/$/;"	e	enum:__anon33
HLF_PSB	src/vim.h	/^    , HLF_PSB	    \/* popup menu scrollbar *\/$/;"	e	enum:__anon33
HLF_PSI	src/vim.h	/^    , HLF_PSI	    \/* popup menu selected item *\/$/;"	e	enum:__anon33
HLF_PST	src/vim.h	/^    , HLF_PST	    \/* popup menu scrollbar thumb *\/$/;"	e	enum:__anon33
HLF_R	src/vim.h	/^    , HLF_R	    \/* return to continue message and yes\/no questions *\/$/;"	e	enum:__anon33
HLF_S	src/vim.h	/^    , HLF_S	    \/* status lines *\/$/;"	e	enum:__anon33
HLF_SC	src/vim.h	/^    , HLF_SC	    \/* Sign column *\/$/;"	e	enum:__anon33
HLF_SNC	src/vim.h	/^    , HLF_SNC	    \/* status lines of not-current windows *\/$/;"	e	enum:__anon33
HLF_SPB	src/vim.h	/^    , HLF_SPB	    \/* SpellBad *\/$/;"	e	enum:__anon33
HLF_SPC	src/vim.h	/^    , HLF_SPC	    \/* SpellCap *\/$/;"	e	enum:__anon33
HLF_SPL	src/vim.h	/^    , HLF_SPL	    \/* SpellLocal *\/$/;"	e	enum:__anon33
HLF_SPR	src/vim.h	/^    , HLF_SPR	    \/* SpellRare *\/$/;"	e	enum:__anon33
HLF_T	src/vim.h	/^    , HLF_T	    \/* Titles for output from ":set all", ":autocmd" etc. *\/$/;"	e	enum:__anon33
HLF_TP	src/vim.h	/^    , HLF_TP	    \/* tabpage line *\/$/;"	e	enum:__anon33
HLF_TPF	src/vim.h	/^    , HLF_TPF	    \/* tabpage line filler *\/$/;"	e	enum:__anon33
HLF_TPS	src/vim.h	/^    , HLF_TPS	    \/* tabpage line selected *\/$/;"	e	enum:__anon33
HLF_TXD	src/vim.h	/^    , HLF_TXD	    \/* Text Changed in diff line *\/$/;"	e	enum:__anon33
HLF_V	src/vim.h	/^    , HLF_V	    \/* Visual mode *\/$/;"	e	enum:__anon33
HLF_VNC	src/vim.h	/^    , HLF_VNC	    \/* Visual mode, autoselecting and not clipboard owner *\/$/;"	e	enum:__anon33
HLF_W	src/vim.h	/^    , HLF_W	    \/* warning messages *\/$/;"	e	enum:__anon33
HLF_WM	src/vim.h	/^    , HLF_WM	    \/* Wildmenu highlight *\/$/;"	e	enum:__anon33
HL_ALL	src/vim.h	658;"	d
HL_BOLD	src/vim.h	653;"	d
HL_CONCEAL	src/vim.h	883;"	d
HL_CONCEALENDS	src/vim.h	884;"	d
HL_CONTAINED	src/vim.h	866;"	d
HL_DISPLAY	src/vim.h	878;"	d
HL_EXCLUDENL	src/vim.h	877;"	d
HL_EXTEND	src/vim.h	880;"	d
HL_FLAGS	src/vim.h	1346;"	d
HL_FOLD	src/vim.h	879;"	d
HL_HAS_EOL	src/vim.h	869;"	d
HL_INVERSE	src/vim.h	652;"	d
HL_ITALIC	src/vim.h	654;"	d
HL_KEEPEND	src/vim.h	876;"	d
HL_MATCH	src/vim.h	872;"	d
HL_MATCHCONT	src/vim.h	881;"	d
HL_NORMAL	src/vim.h	651;"	d
HL_ONELINE	src/vim.h	868;"	d
HL_SKIPEMPTY	src/vim.h	875;"	d
HL_SKIPNL	src/vim.h	873;"	d
HL_SKIPWHITE	src/vim.h	874;"	d
HL_STANDOUT	src/vim.h	657;"	d
HL_SYNC_HERE	src/vim.h	870;"	d
HL_SYNC_THERE	src/vim.h	871;"	d
HL_TABLE	src/syntax.c	69;"	d	file:
HL_TRANSP	src/vim.h	867;"	d
HL_TRANS_CONT	src/vim.h	882;"	d
HL_UNDERCURL	src/vim.h	656;"	d
HL_UNDERLINE	src/vim.h	655;"	d
HMENU	src/gui_w48.c	/^typedef void *HMENU;$/;"	t	file:
HMT_DEC	src/term.c	2065;"	d	file:
HMT_JSBTERM	src/term.c	2066;"	d	file:
HMT_NETTERM	src/term.c	2064;"	d	file:
HMT_NORMAL	src/term.c	2063;"	d	file:
HMT_PTERM	src/term.c	2067;"	d	file:
HOTK_LEN	src/message.c	3467;"	d	file:
HRESULT	src/gui_w48.c	/^typedef int HRESULT;$/;"	t	file:
HTMLS	runtime/doc/Makefile	/^HTMLS = \\$/;"	m
HT_INIT_SIZE	src/structs.h	1028;"	d
HWND	src/globals.h	/^typedef int HWND;$/;"	t
HWND	src/gui_w48.c	/^typedef void *HWND;$/;"	t	file:
HWND	src/os_mswin.c	/^typedef int HWND;$/;"	t	file:
HWND	src/os_win32.c	/^typedef int HWND;$/;"	t	file:
HamGetFreeIndent	runtime/indent/hamster.vim	/^function HamGetFreeIndent()$/;"	f
HamGetIndent	runtime/indent/hamster.vim	/^function HamGetIndent(lnum)$/;"	f
HandleMouseHide	src/gui_w48.c	/^HandleMouseHide(UINT uMsg, LPARAM lParam)$/;"	f	file:	signature:(UINT uMsg, LPARAM lParam)
HandleODocAE	src/gui_mac.c	/^HandleODocAE(const AppleEvent *theAEvent, AppleEvent *theReply, long refCon)$/;"	f	signature:(const AppleEvent *theAEvent, AppleEvent *theReply, long refCon)
HandleSniffRequest	src/if_sniff.c	/^HandleSniffRequest(buffer)$/;"	f	file:
HandleSniffRequest	src/if_sniff.c	/^static void HandleSniffRequest __ARGS((char* buffer));$/;"	p	file:	signature:(char* buffer)
HandleThumb	src/gui_at_sb.c	/^HandleThumb(w, event, params, num_params)$/;"	f	file:
HandleThumb	src/gui_at_sb.c	/^static void HandleThumb __ARGS((Widget, XEvent *, String *, Cardinal *));$/;"	p	file:	signature:(Widget, XEvent *, String *, Cardinal *)
HandleUnusedParms	src/gui_mac.c	/^HandleUnusedParms(const AppleEvent *theAEvent)$/;"	f	signature:(const AppleEvent *theAEvent)
HandleUnusedParms	src/gui_mac.c	/^OSErr HandleUnusedParms(const AppleEvent *theAEvent);$/;"	p	file:	signature:(const AppleEvent *theAEvent)
Handle_KAHL_GTTX_AE	src/gui_mac.c	/^Handle_KAHL_GTTX_AE($/;"	f	signature:( const AppleEvent *theAEvent, AppleEvent *theReply, long refCon)
Handle_KAHL_MOD_AE	src/gui_mac.c	/^Handle_KAHL_MOD_AE($/;"	f	signature:( const AppleEvent *theAEvent, AppleEvent *theReply, long refCon)
Handle_KAHL_SRCH_AE	src/gui_mac.c	/^Handle_KAHL_SRCH_AE($/;"	f	signature:( const AppleEvent *theAEvent, AppleEvent *theReply, long refCon)
Handle_WM_Notify	src/gui_w32.c	/^Handle_WM_Notify(HWND hwnd, LPNMHDR pnmh)$/;"	f	file:	signature:(HWND hwnd, LPNMHDR pnmh)
Handle_WM_Notify	src/gui_w48.c	/^static void Handle_WM_Notify __ARGS((HWND hwnd, LPNMHDR pnmh));$/;"	p	file:	signature:(HWND hwnd, LPNMHDR pnmh)
Handle_aevt_oapp_AE	src/gui_mac.c	/^Handle_aevt_oapp_AE($/;"	f	signature:( const AppleEvent *theAEvent, AppleEvent *theReply, long refCon)
Handle_aevt_pdoc_AE	src/gui_mac.c	/^Handle_aevt_pdoc_AE($/;"	f	signature:( const AppleEvent *theAEvent, AppleEvent *theReply, long refCon)
Handle_aevt_quit_AE	src/gui_mac.c	/^Handle_aevt_quit_AE($/;"	f	signature:( const AppleEvent *theAEvent, AppleEvent *theReply, long refCon)
Handle_unknown_AE	src/gui_mac.c	/^Handle_unknown_AE($/;"	f	signature:( const AppleEvent *theAEvent, AppleEvent *theReply, long refCon)
Header	runtime/optwin.vim	/^fun! <SID>Header(text)$/;"	f
Help	runtime/macros/less.vim	/^fun! s:Help()$/;"	f
Help	src/if_cscope.h	/^typedef enum { Add, Find, Help, Kill, Reset, Show } csid_e;$/;"	e	enum:__anon87
Helpfind	runtime/menu.vim	/^fun! s:Helpfind()$/;"	f
Hexplore	runtime/plugin/netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Hexplore	call netrw#Explore(<count>,1,2+<bang>0,<q-args>)$/;"	c
Hi	runtime/syntax/sdl.vim	/^	command -nargs=+ Hi     hi <args>$/;"	c
Hi	runtime/syntax/sdl.vim	/^	command -nargs=+ Hi     hi def <args>$/;"	c
Hi	runtime/syntax/xpm2.vim	/^  command -nargs=+ Hi hi <args>$/;"	c
Hi	runtime/syntax/xpm2.vim	/^  command -nargs=+ Hi hi def <args>$/;"	c
HiFold	runtime/syntax/yacc.vim	/^ com! -nargs=+ HiFold	<args> fold$/;"	c
HiFold	runtime/syntax/yacc.vim	/^ com! -nargs=+ HiFold	<args>$/;"	c
HiLink	runtime/syntax/a65.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/a65.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/abap.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/abap.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/abaqus.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/abaqus.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/abc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/abc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/abel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/abel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/acedb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/acedb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/aflex.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/aflex.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ahdl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ahdl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/amiga.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/amiga.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/aml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/aml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ampl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ampl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/antlr.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/antlr.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/apache.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/apache.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/apachestyle.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/apachestyle.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/asm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/asm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/asm68k.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/asm68k.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/asmh8300.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/asmh8300.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/asn.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/asn.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/aspvbs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/aspvbs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/asterisk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/asterisk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/asteriskvm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/asteriskvm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/atlas.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/atlas.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/automake.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/automake.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ave.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ave.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/awk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/awk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ayacc.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ayacc.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/b.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/b.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/baan.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/baan.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/basic.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/basic.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/bc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/bc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/bib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/bib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/bindzone.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/bindzone.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/blank.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/blank.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/bst.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/bst.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/btm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/btm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/bzr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/bzr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cabal.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cabal.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cdl.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cdl.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cfg.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cfg.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ch.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ch.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/change.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/change.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/changelog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/changelog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cheetah.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cheetah.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/chill.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/chill.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cl.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cl.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/clean.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/clean.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/clipper.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/clipper.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cmake.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cmake.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cobol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cobol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/config.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/config.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/crontab.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/crontab.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/csc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/csc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/csh.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/csh.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/csp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/csp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/css.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/css.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cterm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cterm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cupl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cupl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cuplsim.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cuplsim.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cvs.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cvs.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cweb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cweb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cynlib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cynlib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/cynpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/cynpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/dcd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/dcd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/dcl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/dcl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/debchangelog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/debchangelog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/debcontrol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/debcontrol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/def.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/def.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/desc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/desc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/desktop.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/desktop.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/diva.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/diva.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/django.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/django.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/docbk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/docbk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/dosbatch.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/dosbatch.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/dosini.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/dosini.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/dot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/dot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/dracula.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/dracula.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/dtd.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/dtd.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/dtml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/dtml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/dylan.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/dylan.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/dylanintr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/dylanintr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/dylanlid.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/dylanlid.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ecd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ecd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/edif.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/edif.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/eiffel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/eiffel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/elf.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/elf.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/elmfilt.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/elmfilt.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/erlang.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/erlang.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/esqlc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/esqlc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/esterel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/esterel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/eviews.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/eviews.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/exim.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/exim.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/expect.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/expect.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/exports.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/exports.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/fdcc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/fdcc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/fgl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/fgl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/focexec.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/focexec.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/form.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/form.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/forth.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/forth.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/fortran.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/fortran.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/foxpro.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/foxpro.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/fstab.vim	/^		command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/fstab.vim	/^		command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/gdb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/gdb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/gdmo.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/gdmo.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/gedcom.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/gedcom.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/gkrellmrc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/gkrellmrc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/gnuplot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/gnuplot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/gp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/gp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/grads.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/grads.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/gretl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/gretl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/gtkrc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/gtkrc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/hamster.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/hamster.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/haskell.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/haskell.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/hb.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/hb.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/hercules.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/hercules.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/hex.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/hex.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/hog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/hog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/htmlos.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/htmlos.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ia64.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ia64.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/icon.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/icon.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/idl.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/idlang.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/idlang.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/inform.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/inform.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/inittab.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/inittab.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ishd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ishd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/iss.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/iss.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ist.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ist.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/jal.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/jal.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/jam.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/jam.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/jargon.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/jargon.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/javacc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/javacc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/jess.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/jess.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/jgraph.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/jgraph.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/jproperties.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/jproperties.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/jsp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/jsp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/kix.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/kix.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/kscript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/kscript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/kwt.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/kwt.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/lace.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/lace.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/latte.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/latte.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ldif.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ldif.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/lhaskell.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/lhaskell.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/lifelines.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/lifelines.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/lilo.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/lilo.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/lisp.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/lite.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/lite.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/logtalk.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/logtalk.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/lotos.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/lotos.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/lout.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/lout.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/lpc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/lpc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/lprolog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/lprolog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/lscript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/lscript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/lua.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/lua.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/m4.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/m4.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/mailcap.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/mailcap.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/make.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/make.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/man.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/man.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/maple.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/maple.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/masm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/masm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/mason.vim	/^		com -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/mason.vim	/^		com -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/master.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/master.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/matlab.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/matlab.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/maxima.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/maxima.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/mel.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/mel.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/mf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/mf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/mgl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/mgl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/mgp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/mgp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/mma.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/mma.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/mmix.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/mmix.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/modsim3.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/modsim3.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/modula2.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/modula2.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/modula3.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/modula3.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/monk.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/monk.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/mp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/mp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/msidl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/msidl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/msql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/msql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/mupad.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/mupad.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/mush.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/mush.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/muttrc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/muttrc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/mysql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/mysql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/named.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/named.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/nasm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/nasm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/nastran.vim	/^     command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/natural.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/natural.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ncf.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ncf.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/nqc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/nqc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/nroff.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/nroff.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/nsis.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/nsis.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/obj.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/obj.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/objc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/objc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ocaml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ocaml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/occam.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/occam.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/omnimark.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/omnimark.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/openroad.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/openroad.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/opl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/opl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ora.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ora.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/pascal.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/pascal.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/pcap.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/pcap.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/pccts.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/pccts.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/perl.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/perl6.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/perl6.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/pf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/pf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/pfmain.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/pfmain.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/php.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/php.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/pic.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/pic.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/pike.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/pike.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/pilrc.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/pilrc.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/pine.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/pine.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/plm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/plm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/plsql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/plsql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/po.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/po.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/pod.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/pod.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/postscr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/postscr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ppd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ppd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ppwiz.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ppwiz.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/prescribe.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/prescribe.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/procmail.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/procmail.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/progress.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/progress.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/prolog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/prolog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/psf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/psf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ptcap.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ptcap.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/purifylog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/purifylog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/pyrex.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/pyrex.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/python.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/python.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/r.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/r.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/radiance.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/radiance.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/ratpoison.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/ratpoison.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/rc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/rc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/rcs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/rcs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/rcslog.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/rcslog.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/rebol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/rebol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/registry.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/registry.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/remind.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/remind.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/resolv.vim	/^		command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/resolv.vim	/^		command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/rexx.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/rexx.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/rib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/rib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/robots.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/robots.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/rpcgen.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/rpcgen.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/rpl.vim	/^    command -nargs=+ HiLink highlight default link <args>$/;"	c
HiLink	runtime/syntax/rpl.vim	/^    command -nargs=+ HiLink highlight link <args>$/;"	c
HiLink	runtime/syntax/rtf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/rtf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/samba.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/samba.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sas.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sas.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sather.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sather.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/scheme.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/scheme.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/scilab.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/scilab.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sd.vim	/^                command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sd.vim	/^                command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sdl.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sdl.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sed.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sed.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sgmldecl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sgmldecl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sgmllnx.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sgmllnx.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sicad.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sicad.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/simula.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/simula.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sinda.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sinda.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sindacmp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sindacmp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sindaout.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sindaout.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/skill.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/skill.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/slang.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/slang.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/slice.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/slice.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/slrnrc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/slrnrc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/slrnsc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/slrnsc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/smarty.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/smarty.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/smil.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/smil.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/smith.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/smith.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/snnsnet.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/snnsnet.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/snnspat.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/snnspat.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/snnsres.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/snnsres.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/snobol4.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/snobol4.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/spec.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/spec.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/specman.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/specman.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/spice.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/spice.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/splint.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/splint.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/spup.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/spup.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sqlanywhere.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sqlforms.vim	/^	command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sqlforms.vim	/^	command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sqlinformix.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sqlinformix.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sqlj.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sqlj.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sqloracle.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sqloracle.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sqr.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sqr.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/squid.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/squid.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sshconfig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sshconfig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/sshdconfig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/sshdconfig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/st.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/st.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/stp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/stp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/strace.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/strace.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/svn.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/svn.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/tads.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/tads.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/tags.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/tags.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/tak.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/tak.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/takcmp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/takcmp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/takout.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/takout.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/tasm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/tasm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/tcl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/tcl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/tex.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/tex.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/texinfo.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/texinfo.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/texmf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/texmf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/tf.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/tf.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/tidy.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/tidy.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/tli.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/tli.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/tpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/tpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/trasys.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/trasys.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/tsalt.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/tsalt.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/tsscl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/tsscl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/tssgm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/tssgm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/tssop.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/tssop.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/uc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/uc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/uil.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/uil.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/vb.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/vb.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/vera.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/vera.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/verilog.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/verilog.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/verilogams.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/verilogams.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/vhdl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/vhdl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/virata.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/virata.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/vmasm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/vmasm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/vrml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/vrml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/vsejcl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/vsejcl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/wdiff.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/wdiff.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/webmacro.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/webmacro.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/wget.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/wget.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/winbatch.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/winbatch.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/wml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/wml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/wsml.vim	/^       command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/wsml.vim	/^       command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/xdefaults.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/xdefaults.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/xkb.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/xkb.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/xmath.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/xmath.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/xpm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/xpm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/xpm2.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/xpm2.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/xs.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/xxd.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/xxd.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	runtime/syntax/yacc.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/z8a.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	runtime/syntax/z8a.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
Highlight_Matching_Pair	runtime/plugin/matchparen.vim	/^function! s:Highlight_Matching_Pair()$/;"	f
HtmlClosing	runtime/syntax/2html.vim	/^  function! s:HtmlClosing(id)$/;"	f
HtmlColor	runtime/syntax/2html.vim	/^  function! s:HtmlColor(color)$/;"	f
HtmlFormat	runtime/syntax/2html.vim	/^function! s:HtmlFormat(text, style_name, diff_style_name)$/;"	f
HtmlHiLink	runtime/syntax/html.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	runtime/syntax/html.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlIndentClose	runtime/indent/html.vim	/^fun! <SID>HtmlIndentClose(lnum, pattern)$/;"	f
HtmlIndentCloseAlt	runtime/indent/html.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentGet	runtime/indent/html.vim	/^fun! HtmlIndentGet(lnum)$/;"	f
HtmlIndentOpen	runtime/indent/html.vim	/^fun! <SID>HtmlIndentOpen(lnum, pattern)$/;"	f
HtmlIndentOpenAlt	runtime/indent/html.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentPush	runtime/indent/html.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
HtmlIndentSum	runtime/indent/html.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
HtmlOpening	runtime/syntax/2html.vim	/^  function! s:HtmlOpening(id)$/;"	f
I	runtime/macros/hanoi/hanoi.vim	/^map I KMYNOQNOSkRTV$/;"	m
I	runtime/macros/life/life.vim	/^map I G)0)0)0)0)1)0)0)2)0)0)0)0,ok,-11k,-,R,IIN$/;"	m
I	src/testdir/test49.vim	/^    function I()$/;"	f
I	src/testdir/test49.vim	/^    function! I(jump)$/;"	f
I	src/testdir/test49.vim	/^function! I() abort$/;"	f
I	src/testdir/test49.vim	/^function! I()$/;"	f
ICON16PATH	src/Makefile	/^ICON16PATH = $(DESTDIR)$(DATADIR)\/icons\/locolor\/16x16\/apps$/;"	m
ICON32PATH	src/Makefile	/^ICON32PATH = $(DESTDIR)$(DATADIR)\/icons\/locolor\/32x32\/apps$/;"	m
ICON48PATH	src/Makefile	/^ICON48PATH = $(DESTDIR)$(DATADIR)\/icons\/hicolor\/48x48\/apps$/;"	m
ICONV	src/Make_bc5.mak	/^ICONV = yes$/;"	m
ICONV	src/Make_cyg.mak	/^ICONV = yes$/;"	m
ICONV	src/Make_ming.mak	/^ICONV=yes$/;"	m
ICONV	src/Make_mvc.mak	/^ICONV = yes$/;"	m
ICONV_E2BIG	src/vim.h	2050;"	d
ICONV_E2BIG	src/vim.h	2055;"	d
ICONV_EILSEQ	src/vim.h	2052;"	d
ICONV_EILSEQ	src/vim.h	2057;"	d
ICONV_EINVAL	src/vim.h	2051;"	d
ICONV_EINVAL	src/vim.h	2056;"	d
ICONV_ERRNO	src/vim.h	2049;"	d
ICONV_ERRNO	src/vim.h	2054;"	d
ICONV_MULT	src/fileio.c	114;"	d	file:
ICONV_TESTLEN	src/mbyte.c	3987;"	d	file:
ICON_BIG	src/os_win32.c	1983;"	d	file:
ICON_COUNT	src/dosinst.h	401;"	d
ICON_SMALL	src/os_win32.c	1980;"	d	file:
IDC_BOX1	src/os_mswin.c	1761;"	d	file:
IDC_CD_NONE	src/VisVim/Resource.h	18;"	d
IDC_CD_SOURCE_PARENT	src/VisVim/Resource.h	17;"	d
IDC_CD_SOURCE_PATH	src/VisVim/Resource.h	16;"	d
IDC_DEVSTUDIO_EDITOR	src/VisVim/Resource.h	15;"	d
IDC_NEW_TABS	src/VisVim/Resource.h	19;"	d
IDC_PRINTTEXT1	src/os_mswin.c	1762;"	d	file:
IDC_PRINTTEXT2	src/os_mswin.c	1763;"	d	file:
IDC_PROGRESS	src/os_mswin.c	1764;"	d	file:
IDD	src/VisVim/Commands.cpp	/^	enum { IDD = IDD_ADDINMAIN };$/;"	e	enum:CMainDialog::__anon85	file:
IDD_ADDINMAIN	src/VisVim/Resource.h	14;"	d
IDENT	src/regexp.c	174;"	d	file:
IDR_ICOBUDDYBASE	src/guiw16rc.h	9;"	d
IDR_ICOBUDDY_ALARM	src/guiw16rc.h	17;"	d
IDR_ICOBUDDY_DEF1	src/guiw16rc.h	11;"	d
IDR_ICOBUDDY_DEF2	src/guiw16rc.h	12;"	d
IDR_ICOBUDDY_DEF3	src/guiw16rc.h	13;"	d
IDR_ICOBUDDY_DEF4	src/guiw16rc.h	14;"	d
IDR_ICOBUDDY_GRIN	src/guiw16rc.h	16;"	d
IDR_TOOLBAR1	src/gui_w32_rc.h	5;"	d
IDR_TOOLBAR_LARGE	src/VisVim/Resource.h	13;"	d
IDR_TOOLBAR_MEDIUM	src/VisVim/Resource.h	12;"	d
IDR_VIM	src/guiw16rc.h	2;"	d
IDR_VIM_ALERT	src/guiw16rc.h	5;"	d
IDR_VIM_ERROR	src/guiw16rc.h	4;"	d
IDR_VIM_INFO	src/guiw16rc.h	6;"	d
IDR_VIM_QUESTION	src/guiw16rc.h	7;"	d
IDS_CMD_DIALOG	src/VisVim/Resource.h	7;"	d
IDS_CMD_DISABLE	src/VisVim/Resource.h	9;"	d
IDS_CMD_ENABLE	src/VisVim/Resource.h	8;"	d
IDS_CMD_LOAD	src/VisVim/Resource.h	11;"	d
IDS_CMD_TOGGLE	src/VisVim/Resource.h	10;"	d
IDS_VISVIM_DESCRIPTION	src/VisVim/Resource.h	6;"	d
IDS_VISVIM_LONGNAME	src/VisVim/Resource.h	5;"	d
IDX_BIG5	src/mbyte.c	271;"	d	file:
IDX_COUNT	src/mbyte.c	339;"	d	file:
IDX_CP1250	src/mbyte.c	315;"	d	file:
IDX_CP1251	src/mbyte.c	317;"	d	file:
IDX_CP1253	src/mbyte.c	320;"	d	file:
IDX_CP1254	src/mbyte.c	322;"	d	file:
IDX_CP1255	src/mbyte.c	324;"	d	file:
IDX_CP1256	src/mbyte.c	326;"	d	file:
IDX_CP1257	src/mbyte.c	328;"	d	file:
IDX_CP1258	src/mbyte.c	330;"	d	file:
IDX_CP437	src/mbyte.c	277;"	d	file:
IDX_CP737	src/mbyte.c	279;"	d	file:
IDX_CP775	src/mbyte.c	281;"	d	file:
IDX_CP850	src/mbyte.c	283;"	d	file:
IDX_CP852	src/mbyte.c	285;"	d	file:
IDX_CP855	src/mbyte.c	287;"	d	file:
IDX_CP857	src/mbyte.c	289;"	d	file:
IDX_CP860	src/mbyte.c	291;"	d	file:
IDX_CP861	src/mbyte.c	293;"	d	file:
IDX_CP862	src/mbyte.c	295;"	d	file:
IDX_CP863	src/mbyte.c	297;"	d	file:
IDX_CP865	src/mbyte.c	299;"	d	file:
IDX_CP866	src/mbyte.c	301;"	d	file:
IDX_CP869	src/mbyte.c	303;"	d	file:
IDX_CP874	src/mbyte.c	305;"	d	file:
IDX_CP932	src/mbyte.c	307;"	d	file:
IDX_CP936	src/mbyte.c	309;"	d	file:
IDX_CP949	src/mbyte.c	311;"	d	file:
IDX_CP950	src/mbyte.c	313;"	d	file:
IDX_DEBUG	src/mbyte.c	259;"	d	file:
IDX_DECMCS	src/mbyte.c	335;"	d	file:
IDX_EUC_CN	src/mbyte.c	267;"	d	file:
IDX_EUC_JP	src/mbyte.c	261;"	d	file:
IDX_EUC_KR	src/mbyte.c	265;"	d	file:
IDX_EUC_TW	src/mbyte.c	269;"	d	file:
IDX_HPROMAN8	src/mbyte.c	337;"	d	file:
IDX_ISO_10	src/mbyte.c	229;"	d	file:
IDX_ISO_11	src/mbyte.c	231;"	d	file:
IDX_ISO_13	src/mbyte.c	233;"	d	file:
IDX_ISO_14	src/mbyte.c	235;"	d	file:
IDX_ISO_15	src/mbyte.c	237;"	d	file:
IDX_ISO_2	src/mbyte.c	213;"	d	file:
IDX_ISO_3	src/mbyte.c	215;"	d	file:
IDX_ISO_4	src/mbyte.c	217;"	d	file:
IDX_ISO_5	src/mbyte.c	219;"	d	file:
IDX_ISO_6	src/mbyte.c	221;"	d	file:
IDX_ISO_7	src/mbyte.c	223;"	d	file:
IDX_ISO_8	src/mbyte.c	225;"	d	file:
IDX_ISO_9	src/mbyte.c	227;"	d	file:
IDX_KOI8_R	src/mbyte.c	239;"	d	file:
IDX_KOI8_U	src/mbyte.c	241;"	d	file:
IDX_LATIN_1	src/mbyte.c	211;"	d	file:
IDX_MACROMAN	src/mbyte.c	333;"	d	file:
IDX_SJIS	src/mbyte.c	263;"	d	file:
IDX_UCS2	src/mbyte.c	245;"	d	file:
IDX_UCS2LE	src/mbyte.c	247;"	d	file:
IDX_UCS4	src/mbyte.c	253;"	d	file:
IDX_UCS4LE	src/mbyte.c	255;"	d	file:
IDX_UTF16	src/mbyte.c	249;"	d	file:
IDX_UTF16LE	src/mbyte.c	251;"	d	file:
IDX_UTF8	src/mbyte.c	243;"	d	file:
ID_BEVAL_TOOLTIP	src/gui_w32.c	183;"	d	file:
ID_LIST_ALL	src/syntax.c	300;"	d	file:
IE	src/farsi.h	61;"	d
IE_	src/farsi.h	60;"	d
IF_EB	src/ascii.h	17;"	d
IF_EB	src/ascii.h	89;"	d
IID	src/iid_ole.c	/^} IID;$/;"	t	typeref:struct:_IID	file:
IID_IVim	src/if_ole.h	/^EXTERN_C const IID IID_IVim;$/;"	v
IID_IVim	src/iid_ole.c	/^const IID IID_IVim = {0x0F0BFAE2,0x4C90,0x11d1,{0x82,0xD7,0x00,0x04,0xAC,0x36,0x85,0x19}};$/;"	v
IMAGE_XPM	src/gui_w32.c	4247;"	d	file:
IME	src/Make_bc5.mak	/^IME = yes$/;"	m
IME	src/Make_cyg.mak	/^IME = yes$/;"	m
IME	src/Make_ming.mak	/^IME=yes$/;"	m
IME_LIB	src/Make_mvc.mak	/^IME_LIB = imm32.lib$/;"	m
IMLEN_MAX	src/mbyte.c	5321;"	d	file:
IMPLIB	src/Make_w16.mak	/^IMPLIB  = Implib$/;"	m
IMPORT	src/if_ruby.c	21;"	d	file:
INBUFLEN	src/ui.c	1462;"	d	file:
INBUFLEN	src/ui.c	1464;"	d	file:
INC	src/option.c	8839;"	d	file:
INC	src/xxd/Make_bc3.mak	/^INC	= -I$(BOR)\\include$/;"	m
INC2	src/term.c	5281;"	d	file:
INC3	src/term.c	5280;"	d	file:
INCL	src/Make_cyg.mak	/^INCL = vim.h globals.h option.h keymap.h macros.h ascii.h term.h os_win32.h \\$/;"	m
INCL	src/Make_djg.mak	/^INCL = vim.h globals.h option.h keymap.h macros.h ascii.h term.h os_msdos.h structs.h$/;"	m
INCL	src/Make_manx.mak	/^INCL = vim.h feature.h keymap.h macros.h ascii.h term.h structs.h os_amiga.h$/;"	m
INCL	src/Make_ming.mak	/^INCL = vim.h feature.h os_win32.h os_dos.h ascii.h keymap.h term.h macros.h \\$/;"	m
INCL	src/Make_mvc.mak	/^INCL =	vim.h os_win32.h ascii.h feature.h globals.h keymap.h macros.h \\$/;"	m
INCL	src/Make_os2.mak	/^INCL = vim.h globals.h option.h keymap.h macros.h ascii.h term.h os_unix.h structs.h os_os2_cfg.h$/;"	m
INCLUDE	src/GvimExt/Make_bc5.mak	/^INCLUDE = $(BOR)\\include;.$/;"	m
INCLUDE	src/Make_bc5.mak	/^INCLUDE = $(BOR)\\include;.;proto$/;"	m
INCLUDE	src/Make_bc5.mak	/^INCLUDE = $(LUA)\\include;$(INCLUDE)$/;"	m
INCLUDE	src/Make_bc5.mak	/^INCLUDE = $(PERL)\\lib\\core;$(INCLUDE)$/;"	m
INCLUDE	src/Make_bc5.mak	/^INCLUDE = $(RUBY)\\lib\\ruby\\$(RUBY_VER_LONG)\\$(RUBY_PLATFORM);$(INCLUDE)$/;"	m
INCLUDE	src/Make_bc5.mak	/^INCLUDE = $(TCL)\\include;$(INCLUDE)$/;"	m
INCLUDE	src/Make_bc5.mak	/^INCLUDE = $(XPM)\\include;$(INCLUDE)$/;"	m
INCLUDEPATH	src/Make_bc3.mak	/^INCLUDEPATH = $(BOR)\\INCLUDE$/;"	m
INCLUDEPATH	src/Make_bc3.mak	/^INCLUDEPATH = $(BOR)\\INCLUDE;$(SPAWNO)$/;"	m
INCLUDES	src/Make_cyg.mak	/^INCLUDES = -march=$(ARCH) -Iproto$/;"	m
INCSTACK_SIZE	src/tag.c	1327;"	d	file:
INC_OLE2	src/GvimExt/gvimext.h	34;"	d
INDENT_DEC	src/vim.h	962;"	d
INDENT_FILE	src/os_amiga.h	124;"	d
INDENT_FILE	src/os_dos.h	89;"	d
INDENT_FILE	src/os_mac.h	176;"	d
INDENT_FILE	src/os_riscos.h	117;"	d
INDENT_FILE	src/os_unix.h	256;"	d
INDENT_INC	src/vim.h	961;"	d
INDENT_SET	src/vim.h	960;"	d
INDEX_SIZE	src/memline.c	129;"	d	file:
INDOFF_FILE	src/os_amiga.h	133;"	d
INDOFF_FILE	src/os_dos.h	98;"	d
INDOFF_FILE	src/os_mac.h	185;"	d
INDOFF_FILE	src/os_riscos.h	126;"	d
INDOFF_FILE	src/os_unix.h	265;"	d
INDSOURCE	src/Makefile	/^INDSOURCE = ..\/runtime\/indent$/;"	m
INDSUBDIR	src/Makefile	/^INDSUBDIR = \/indent$/;"	m
INDSUBLOC	src/Makefile	/^INDSUBLOC	= $(VIMRTLOC)$(INDSUBDIR)$/;"	m
INET_SOCKETS	src/netbeans.c	28;"	d	file:
INIT	src/vim.h	1671;"	d
INIT	src/vim.h	1674;"	d
INITGUID	src/GvimExt/gvimext.h	57;"	d
INIT_POS_T	src/structs.h	36;"	d
INIT_POS_T	src/structs.h	38;"	d
INLINE_KEY_BUFFER_SIZE	src/gui_mac.c	2095;"	d	file:
INPUT_BUFLEN	src/edit.c	5713;"	d	file:
INPUT_RECORD	src/os_mswin.c	/^typedef int INPUT_RECORD;$/;"	t	file:
INPUT_RECORD	src/os_win16.c	/^typedef int INPUT_RECORD;$/;"	t	file:
INPUT_RECORD	src/os_win32.c	/^typedef int INPUT_RECORD;$/;"	t	file:
INSCHAR_CTRLV	src/vim.h	1062;"	d
INSCHAR_DO_COM	src/vim.h	1061;"	d
INSCHAR_FORMAT	src/vim.h	1060;"	d
INSCHAR_NO_FEX	src/vim.h	1063;"	d
INSERT	src/vim.h	676;"	d
INSERT_PANGO_ATTR	src/gui_gtk_x11.c	4631;"	d	file:
INSTALLDIR	src/po/Make_mvc.mak	/^INSTALLDIR = $(VIMRUNTIME)\\lang\\$(LANGUAGE)\\LC_MESSAGES$/;"	m
INSTALLGVIMDIFF	src/auto/config.mk	/^INSTALLGVIMDIFF	= installgvimdiff$/;"	m
INSTALLMANARGS	src/Makefile	/^INSTALLMANARGS = $(VIMLOC) $(SCRIPTLOC) $(VIMRCLOC) $(HELPSOURCE) $(MANMOD) \\$/;"	m
INSTALLMLARGS	src/Makefile	/^INSTALLMLARGS = $(VIMNAME) $(VIMDIFFNAME) $(EVIMNAME) \\$/;"	m
INSTALLVIMDIFF	src/auto/config.mk	/^INSTALLVIMDIFF	= installvimdiff$/;"	m
INSTALL_DATA	src/Makefile	/^INSTALL_DATA	= cp$/;"	m
INSTALL_DATA_R	src/Makefile	/^INSTALL_DATA_R	= cp -r$/;"	m
INSTALL_LANGS	src/auto/config.mk	/^INSTALL_LANGS	= install-languages$/;"	m
INSTALL_PROG	src/Makefile	/^INSTALL_PROG	= cp$/;"	m
INSTALL_TOOL_LANGS	src/auto/config.mk	/^INSTALL_TOOL_LANGS	= install-tool-languages$/;"	m
INT	src/gui_w48.c	/^typedef int INT;$/;"	t	file:
INT	src/testdir/test49.vim	/^    function! INT()$/;"	f
INT	src/testdir/test49.vim	/^    function! INT(n)$/;"	f
INTDIR	src/Make_dvc.mak	/^INTDIR=.$/;"	m
INTDIR	src/Make_ivc.mak	/^INTDIR=.\\Dbg$/;"	m
INTDIR	src/Make_ivc.mak	/^INTDIR=.\\Rel$/;"	m
INTDIR	src/Make_ivc.mak	/^INTDIR=.\\gDbg$/;"	m
INTDIR	src/Make_ivc.mak	/^INTDIR=.\\gRel$/;"	m
INTDIR	src/Make_ivc.mak	/^INTDIR=.\\oleDbg$/;"	m
INTDIR	src/Make_ivc.mak	/^INTDIR=.\\oleRel$/;"	m
INTDIR	src/Make_mvc.mak	/^INTDIR=$(OBJDIR)$/;"	m
INTDIR	src/Make_w16.mak	/^INTDIR=w16$/;"	m
INTDIR	src/VisVim/VisVim.mak	/^INTDIR=.\\Debug$/;"	m
INTDIR	src/VisVim/VisVim.mak	/^INTDIR=.\\Release$/;"	m
INTERP_DEFINES	src/Make_bc5.mak	/^INTERP_DEFINES = $(INTERP_DEFINES) -DDYNAMIC_LUA -DDYNAMIC_LUA_DLL=\\"lua$(LUA_VER).dll\\"$/;"	m
INTERP_DEFINES	src/Make_bc5.mak	/^INTERP_DEFINES = $(INTERP_DEFINES) -DDYNAMIC_PERL -DDYNAMIC_PERL_DLL=\\"perl$(PERL_VER).dll\\"$/;"	m
INTERP_DEFINES	src/Make_bc5.mak	/^INTERP_DEFINES = $(INTERP_DEFINES) -DDYNAMIC_PYTHON -DDYNAMIC_PYTHON_DLL=\\"python$(PYTHON_VER).dll\\"$/;"	m
INTERP_DEFINES	src/Make_bc5.mak	/^INTERP_DEFINES = $(INTERP_DEFINES) -DDYNAMIC_PYTHON3 -DDYNAMIC_PYTHON3_DLL=\\"python$(PYTHON3_VER).dll\\"$/;"	m
INTERP_DEFINES	src/Make_bc5.mak	/^INTERP_DEFINES = $(INTERP_DEFINES) -DDYNAMIC_RUBY -DDYNAMIC_RUBY_DLL=\\"$(RUBY_INSTALL_NAME).dll\\"$/;"	m
INTERP_DEFINES	src/Make_bc5.mak	/^INTERP_DEFINES = $(INTERP_DEFINES) -DDYNAMIC_RUBY_VER=$(RUBY_VER)$/;"	m
INTERP_DEFINES	src/Make_bc5.mak	/^INTERP_DEFINES = $(INTERP_DEFINES) -DDYNAMIC_TCL -DDYNAMIC_TCL_DLL=\\"tcl$(TCL_VER).dll\\"$/;"	m
INTERP_DEFINES	src/Make_bc5.mak	/^INTERP_DEFINES = $(INTERP_DEFINES) -DFEAT_LUA$/;"	m
INTERP_DEFINES	src/Make_bc5.mak	/^INTERP_DEFINES = $(INTERP_DEFINES) -DFEAT_PERL$/;"	m
INTERP_DEFINES	src/Make_bc5.mak	/^INTERP_DEFINES = $(INTERP_DEFINES) -DFEAT_PYTHON$/;"	m
INTERP_DEFINES	src/Make_bc5.mak	/^INTERP_DEFINES = $(INTERP_DEFINES) -DFEAT_PYTHON3$/;"	m
INTERP_DEFINES	src/Make_bc5.mak	/^INTERP_DEFINES = $(INTERP_DEFINES) -DFEAT_RUBY$/;"	m
INTERP_DEFINES	src/Make_bc5.mak	/^INTERP_DEFINES = $(INTERP_DEFINES) -DFEAT_TCL$/;"	m
INTERP_DEFINES_ESC	src/Make_bc5.mak	/^INTERP_DEFINES_ESC=$(INTERP_DEFINES_ESC_BKS:"=\\")$/;"	m
INTERP_DEFINES_ESC_BKS	src/Make_bc5.mak	/^INTERP_DEFINES_ESC_BKS=$(INTERP_DEFINES:\\=\\\\)$/;"	m
INTLLIB	src/Make_ming.mak	/^INTLLIB=gnu_gettext$/;"	m
INTLPATH	src/Make_ming.mak	/^INTLPATH=$(GETTEXT)\/lib\/mingw32$/;"	m
INTPROCINT	src/os_unix.c	/^typedef int (*INTPROCINT)__ARGS((int));$/;"	t	file:
INTPROCSTR	src/os_unix.c	/^typedef char_u * (*INTPROCSTR)__ARGS((int));$/;"	t	file:
INT_ARG	src/os_msdos.c	1190;"	d	file:
INT_ARG	src/os_msdos.c	1192;"	d	file:
INVALCOLOR	src/gui.h	233;"	d
INVALID_BUFFER_VALUE	src/if_mzsch.c	46;"	d	file:
INVALID_BUFFER_VALUE	src/if_py_both.h	470;"	d
INVALID_STATE	src/syntax.c	345;"	d	file:
INVALID_WINDOW_VALUE	src/if_mzsch.c	54;"	d	file:
INVALID_WINDOW_VALUE	src/if_py_both.h	512;"	d
INVERTED	src/vim.h	612;"	d
INVERTED_ALL	src/vim.h	613;"	d
IN_BUFFER	src/vim.h	1763;"	d
IN_OPTION_C	src/option.c	34;"	d	file:
IN_OTHER_WIN	src/vim.h	1766;"	d
IN_PERL_FILE	src/if_perlsfio.c	14;"	d	file:
IN_SEP_LINE	src/vim.h	1765;"	d
IN_STATUS_LINE	src/vim.h	1764;"	d
IN_UNKNOWN	src/vim.h	1762;"	d
IOSIZE	src/vim.h	1424;"	d
IObuff	src/globals.h	/^EXTERN char_u	*IObuff;		\/* sprintf's are done in this buffer,$/;"	v
ISBN	runtime/tutor/tutor.pl	/^	ISBN: 83-7197-472-8$/;"	l
ISBN	runtime/tutor/tutor.pl	/^	ISBN: 83-7197-539-2$/;"	l
ISK_LATIN1	src/option.c	454;"	d	file:
ISP_LATIN1	src/option.c	459;"	d	file:
ISP_LATIN1	src/option.c	461;"	d	file:
ISSPECIAL	src/edit.c	5550;"	d	file:
ISSPECIAL	src/edit.c	5552;"	d	file:
ISSYMLINK	src/vim.h	2067;"	d
ISSYMLINK	src/vim.h	2069;"	d
IS_LL_WINDOW	src/quickfix.c	140;"	d	file:
IS_NONPRINTABLE	src/gui_beval.c	1036;"	d	file:
IS_NONPRINTABLE	src/gui_beval.c	898;"	d	file:
IS_QF_WINDOW	src/quickfix.c	138;"	d	file:
IS_SPECIAL	src/keymap.h	37;"	d
ITEM	src/os_vms.c	/^}	ITEM;$/;"	t	typeref:struct:__anon78	file:
ITEM_COMPARE_FAIL	src/eval.c	16260;"	d	file:
ITEM_END	src/syntax.c	4941;"	d	file:
ITEM_MATCHGROUP	src/syntax.c	4942;"	d	file:
ITEM_SKIP	src/syntax.c	4940;"	d	file:
ITEM_START	src/syntax.c	4939;"	d	file:
ITMLST1	src/os_vms.c	/^}	ITMLST1;$/;"	t	typeref:struct:__anon79	file:
ITMLST2	src/os_vms.c	/^}	ITMLST2;$/;"	t	typeref:struct:__anon80	file:
IVim	src/if_ole.h	/^typedef interface IVim IVim;$/;"	t
IVimVtbl	src/if_ole.h	/^    typedef struct IVimVtbl$/;"	s
IVimVtbl	src/if_ole.h	/^    } IVimVtbl;$/;"	t	typeref:struct:IVimVtbl
IVimVtbl::AddRef	src/if_ole.h	/^	ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )($/;"	m	struct:IVimVtbl	access:public
IVimVtbl::Eval	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Eval )($/;"	m	struct:IVimVtbl	access:public
IVimVtbl::GetHwnd	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHwnd )($/;"	m	struct:IVimVtbl	access:public
IVimVtbl::GetIDsOfNames	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )($/;"	m	struct:IVimVtbl	access:public
IVimVtbl::GetTypeInfo	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )($/;"	m	struct:IVimVtbl	access:public
IVimVtbl::GetTypeInfoCount	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )($/;"	m	struct:IVimVtbl	access:public
IVimVtbl::Invoke	src/if_ole.h	/^	\/* [local] *\/ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )($/;"	m	struct:IVimVtbl	access:public
IVimVtbl::QueryInterface	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )($/;"	m	struct:IVimVtbl	access:public
IVimVtbl::Release	src/if_ole.h	/^	ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )($/;"	m	struct:IVimVtbl	access:public
IVimVtbl::SendKeys	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendKeys )($/;"	m	struct:IVimVtbl	access:public
IVimVtbl::SetForeground	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetForeground )($/;"	m	struct:IVimVtbl	access:public
IVim_AddRef	src/if_ole.h	162;"	d
IVim_Eval	src/if_ole.h	185;"	d
IVim_Eval_Proxy	src/if_ole.h	/^HRESULT STDMETHODCALLTYPE IVim_Eval_Proxy($/;"	p	signature:( IVim __RPC_FAR * This, BSTR expr, BSTR __RPC_FAR *result)
IVim_Eval_Stub	src/if_ole.h	/^void __RPC_STUB IVim_Eval_Stub($/;"	p	signature:( IRpcStubBuffer *This, IRpcChannelBuffer *_pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD *_pdwStubPhase)
IVim_GetHwnd	src/if_ole.h	191;"	d
IVim_GetHwnd_Proxy	src/if_ole.h	/^HRESULT STDMETHODCALLTYPE IVim_GetHwnd_Proxy($/;"	p	signature:( IVim __RPC_FAR * This, UINT_PTR __RPC_FAR *result)
IVim_GetHwnd_Stub	src/if_ole.h	/^void __RPC_STUB IVim_GetHwnd_Stub($/;"	p	signature:( IRpcStubBuffer *This, IRpcChannelBuffer *_pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD *_pdwStubPhase)
IVim_GetIDsOfNames	src/if_ole.h	175;"	d
IVim_GetTypeInfo	src/if_ole.h	172;"	d
IVim_GetTypeInfoCount	src/if_ole.h	169;"	d
IVim_Invoke	src/if_ole.h	178;"	d
IVim_QueryInterface	src/if_ole.h	159;"	d
IVim_Release	src/if_ole.h	165;"	d
IVim_SendKeys	src/if_ole.h	182;"	d
IVim_SendKeys_Proxy	src/if_ole.h	/^HRESULT STDMETHODCALLTYPE IVim_SendKeys_Proxy($/;"	p	signature:( IVim __RPC_FAR * This, BSTR keys)
IVim_SendKeys_Stub	src/if_ole.h	/^void __RPC_STUB IVim_SendKeys_Stub($/;"	p	signature:( IRpcStubBuffer *This, IRpcChannelBuffer *_pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD *_pdwStubPhase)
IVim_SetForeground	src/if_ole.h	188;"	d
IVim_SetForeground_Proxy	src/if_ole.h	/^HRESULT STDMETHODCALLTYPE IVim_SetForeground_Proxy($/;"	p	signature:( IVim __RPC_FAR * This)
IVim_SetForeground_Stub	src/if_ole.h	/^void __RPC_STUB IVim_SetForeground_Stub($/;"	p	signature:( IRpcStubBuffer *This, IRpcChannelBuffer *_pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD *_pdwStubPhase)
InComment	runtime/autoload/xmlcomplete.vim	/^function! s:InComment()$/;"	f
InCommentAt	runtime/autoload/xmlcomplete.vim	/^function! s:InCommentAt(line, col)$/;"	f
IncreaseFunc	runtime/ftplugin/cobol.vim	/^function! s:IncreaseFunc(type)$/;"	f
IncreaseIndent	runtime/ftplugin/cobol.vim	/^function! s:IncreaseIndent()$/;"	f
Info	src/os_win32.c	/^    CONSOLE_SCREEN_BUFFER_INFO	Info;$/;"	m	struct:ConsoleBufferStruct	file:	access:public
InitInstance	src/VisVim/VisVim.cpp	/^	virtual BOOL InitInstance ();$/;"	p	class:CVisVimApp	file:	access:public	signature:()
InitInstance	src/VisVim/VisVim.cpp	/^BOOL CVisVimApp::InitInstance ()$/;"	f	class:CVisVimApp	signature:()
InitOLE	src/if_ole.cpp	/^extern "C" void InitOLE(int *pbDoRestart)$/;"	f	signature:(int *pbDoRestart)
Initialize	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::Initialize(LPCITEMIDLIST  \/* pIDFolder *\/,$/;"	f	class:CShellExt	signature:(LPCITEMIDLIST , LPDATAOBJECT pDataObj, HKEY )
Initialize	src/GvimExt/gvimext.h	/^    STDMETHODIMP Initialize(LPCITEMIDLIST pIDFolder,$/;"	p	class:CShellExt	access:public	signature:(LPCITEMIDLIST pIDFolder, LPDATAOBJECT pDataObj, HKEY hKeyID)
Initialize	src/gui_at_sb.c	/^Initialize(request, new, args, num_args)$/;"	f	file:
Initialize	src/gui_at_sb.c	/^static void Initialize __ARGS((Widget, Widget, ArgList, Cardinal *));$/;"	p	file:	signature:(Widget, Widget, ArgList, Cardinal *)
Initialize	src/gui_xmebw.c	/^Initialize(Widget rq, Widget ebw, ArgList args UNUSED, Cardinal *n UNUSED)$/;"	f	file:	signature:(Widget rq, Widget ebw, ArgList args UNUSED, Cardinal *n UNUSED)
Initialize	src/gui_xmebw.c	/^static void Initialize(Widget rq, Widget eb, ArgList args, Cardinal *n);$/;"	p	file:	signature:(Widget rq, Widget eb, ArgList args, Cardinal *n)
InsertBufferLines	src/if_py_both.h	/^InsertBufferLines(buf_T *buf, PyInt n, PyObject *lines, PyInt *len_change)$/;"	f	signature:(buf_T *buf, PyInt n, PyObject *lines, PyInt *len_change)
InsertRefs	runtime/macros/matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
Insstart	src/globals.h	/^EXTERN pos_T	Insstart;		\/* This is where the latest$/;"	v
Insstart_blank_vcol	src/edit.c	/^static colnr_T	Insstart_blank_vcol;	\/* vcol for first inserted blank *\/$/;"	v	file:
Insstart_textlen	src/edit.c	/^static colnr_T	Insstart_textlen;	\/* length of line when insert started *\/$/;"	v	file:
Instack	runtime/autoload/xmlcomplete.vim	/^function! s:Instack(el, sname)$/;"	f
InstallAEHandlers	src/gui_mac.c	/^InstallAEHandlers(void)$/;"	f	signature:(void)
InstallFontPanelHandler	src/gui_mac.c	/^InstallFontPanelHandler(void)$/;"	f	file:	signature:(void)
Interrupt	src/testdir/test49.vim	/^    function! Interrupt()$/;"	f
IntuitionBase	src/os_amiga.c	/^struct IntuitionBase	*IntuitionBase = NULL;$/;"	v	typeref:struct:IntuitionBase
Invoke	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::Invoke (WORD Flags, DISPID DispatchId,$/;"	f	class:COleAutomationControl	signature:(WORD Flags, DISPID DispatchId, LPCTSTR Format, va_list ArgList)
Invoke	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::Invoke (WORD Flags, char* Name,$/;"	f	class:COleAutomationControl	signature:(WORD Flags, char* Name, LPCTSTR Format, va_list ArgList)
Invoke	src/VisVim/OleAut.h	/^	bool Invoke (WORD Flags, DISPID DispatchId, LPCTSTR Format, va_list ArgList);$/;"	p	class:COleAutomationControl	access:protected	signature:(WORD Flags, DISPID DispatchId, LPCTSTR Format, va_list ArgList)
Invoke	src/VisVim/OleAut.h	/^	bool Invoke (WORD Flags, char* Name, LPCTSTR Format, va_list ArgList);$/;"	p	class:COleAutomationControl	access:protected	signature:(WORD Flags, char* Name, LPCTSTR Format, va_list ArgList)
Invoke	src/if_ole.cpp	/^    STDMETHOD(Invoke)(DISPID member, const IID &iid, LCID, WORD flags, DISPPARAMS *dispparams, VARIANT *result, EXCEPINFO *excepinfo, UINT *argerr);$/;"	p	class:CVim	file:	access:public	signature:(DISPID member, const IID &iid, LCID, WORD flags, DISPPARAMS *dispparams, VARIANT *result, EXCEPINFO *excepinfo, UINT *argerr)
Invoke	src/if_ole.cpp	/^CVim::Invoke($/;"	f	class:CVim	signature:( DISPID member, const IID &iid, LCID, WORD flags, DISPPARAMS *dispparams, VARIANT *result, EXCEPINFO *excepinfo, UINT *argerr)
Invoke	src/if_ole.h	/^	\/* [local] *\/ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )($/;"	m	struct:IVimVtbl	access:public
InvokeCommand	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::InvokeCommand(LPCMINVOKECOMMANDINFO lpcmi)$/;"	f	class:CShellExt	signature:(LPCMINVOKECOMMANDINFO lpcmi)
InvokeCommand	src/GvimExt/gvimext.h	/^    STDMETHODIMP InvokeCommand(LPCMINVOKECOMMANDINFO lpcmi);$/;"	p	class:CShellExt	access:public	signature:(LPCMINVOKECOMMANDINFO lpcmi)
InvokeGvim	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::InvokeGvim(HWND hParent,$/;"	f	class:CShellExt	signature:(HWND hParent, LPCSTR , LPCSTR , LPCSTR , int )
InvokeGvim	src/GvimExt/gvimext.h	/^    STDMETHODIMP InvokeGvim(HWND hParent,$/;"	p	class:CShellExt	access:protected	signature:(HWND hParent, LPCSTR pszWorkingDir, LPCSTR pszCmd, LPCSTR pszParam, int iShowCmd)
InvokeSingleGvim	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::InvokeSingleGvim(HWND hParent,$/;"	f	class:CShellExt	signature:(HWND hParent, LPCSTR , LPCSTR , LPCSTR , int , int useDiff)
InvokeSingleGvim	src/GvimExt/gvimext.h	/^    STDMETHODIMP InvokeSingleGvim(HWND hParent,$/;"	p	class:CShellExt	access:protected	signature:(HWND hParent, LPCSTR pszWorkingDir, LPCSTR pszCmd, LPCSTR pszParam, int iShowCmd, int useDiff)
IsAlive	src/VisVim/OleAut.h	/^	bool IsAlive ();$/;"	p	class:COleAutomationControl	access:public	signature:()
IsColComment	runtime/indent/sqlanywhere.vim	/^function s:IsColComment(lnum, cnum)$/;"	f
IsCreated	src/VisVim/OleAut.h	/^	bool IsCreated ()$/;"	f	class:COleAutomationControl	access:public	signature:()
IsInClassDef	runtime/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInString	runtime/indent/ruby.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringOrComment	runtime/indent/ruby.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrDocumentation	runtime/indent/ruby.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsLineComment	runtime/indent/sqlanywhere.vim	/^function s:IsLineComment(lnum)$/;"	f
IsMaximized	src/gui_w32.c	69;"	d	file:
IsMinimized	src/gui_w32.c	66;"	d	file:
IsNull	src/gui_xmebw.c	905;"	d	file:
IsPosInClassDef	runtime/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsSerialName	runtime/tools/xcmdsrv_client.c	/^IsSerialName(str)$/;"	f	file:
IsSerialName	runtime/tools/xcmdsrv_client.c	/^static int	IsSerialName __ARGS((char *name));$/;"	p	file:	signature:(char *name)
IsSerialName	src/if_xcmdsrv.c	/^IsSerialName(str)$/;"	f	file:
IsSerialName	src/if_xcmdsrv.c	/^static int	IsSerialName __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
IsValid	src/os_win32.c	/^    BOOL			IsValid;$/;"	m	struct:ConsoleBufferStruct	file:	access:public
IslinePHP	runtime/indent/php.vim	/^function! IslinePHP (lnum, tofind) " {{{$/;"	f
J	runtime/macros/hanoi/hanoi.vim	/^map J \/^0[^t]*\$$/;"	m
J	runtime/macros/maze/maze.c	/^char*M,A,Z,E=40,J[40],T[40];main(C){for(*J=A=scanf(M="%d",&C);$/;"	v
J	runtime/macros/maze/mazeansi.c	/^char*M,A,Z,E=40,J[80],T[3];main(C){for(M=J+E,*J=A=scanf("%d",&$/;"	v
J	src/testdir/test49.vim	/^function! J()$/;"	f
JAZR	src/farsi.h	159;"	d
JAZR_N	src/farsi.h	162;"	d
JE	src/farsi.h	124;"	d
JIM	src/farsi.h	116;"	d
JMP_BUF	src/os_unix.h	528;"	d
JMP_BUF	src/os_unix.h	532;"	d
JUMPLISTSIZE	src/structs.h	98;"	d
JUST_CALC_SIZE	src/regexp.c	377;"	d	file:
JavaHiLink	runtime/syntax/java.vim	/^  command! -nargs=+ JavaHiLink hi def link <args>$/;"	c
JavaHiLink	runtime/syntax/java.vim	/^  command! -nargs=+ JavaHiLink hi link <args>$/;"	c
Justify	runtime/macros/justify.vim	/^com! -range -nargs=* Justify <line1>,<line2>call Justify(<f-args>)$/;"	c
Justify	runtime/macros/justify.vim	/^function! Justify(...) range$/;"	f
Justify_error	runtime/macros/justify.vim	/^function! Justify_error(message)$/;"	f
K	runtime/ftplugin/gitrebase.vim	/^nnoremap <buffer> <expr> K col('.') < 7 && expand('<Lt>cword>') =~ '\\X' && getline('.') =~ '^\\w\\+\\s\\+\\x\\+\\>' ? 'wK' : 'K'$/;"	m
K	runtime/macros/hanoi/hanoi.vim	/^map K 1Go$/;"	m
K	src/testdir/test49.vim	/^function! K()$/;"	f
KAF	src/farsi.h	135;"	d
KDEPATH	src/Makefile	/^KDEPATH = $(HOME)\/.kde\/share\/icons$/;"	m
KE2HIKEY	src/syntax.c	256;"	d	file:
KEEP_ROOM	src/misc2.c	805;"	d	file:
KEEP_ROOM	src/misc2.c	807;"	d	file:
KEY2TERMCAP0	src/keymap.h	119;"	d
KEY2TERMCAP1	src/keymap.h	120;"	d
KEYMAP_INIT	src/structs.h	1417;"	d
KEYMAP_LOADED	src/structs.h	1418;"	d
KEYWORD_IDX	src/syntax.c	299;"	d	file:
KEY_COMPLETE	src/vim.h	927;"	d
KEY_EVENT_RECORD	src/os_mswin.c	/^typedef int KEY_EVENT_RECORD;$/;"	t	file:
KEY_EVENT_RECORD	src/os_win16.c	/^typedef int KEY_EVENT_RECORD;$/;"	t	file:
KEY_EVENT_RECORD	src/os_win32.c	/^typedef int KEY_EVENT_RECORD;$/;"	t	file:
KEY_NAMES_TABLE_LEN	src/misc2.c	2395;"	d	file:
KEY_OPEN_BACK	src/vim.h	926;"	d
KEY_OPEN_FORW	src/vim.h	925;"	d
KEY_WOW64_64KEY	src/dosinst.h	91;"	d
KE_CMDWIN	src/keymap.h	/^    , KE_CMDWIN		\/* open command-line window from Command-line Mode *\/$/;"	e	enum:key_extra
KE_CSI	src/keymap.h	/^    , KE_CSI		\/* CSI typed directly *\/$/;"	e	enum:key_extra
KE_CURSORHOLD	src/keymap.h	/^    , KE_CURSORHOLD	\/* CursorHold event *\/$/;"	e	enum:key_extra
KE_C_END	src/keymap.h	/^    , KE_C_END		\/* control-end *\/$/;"	e	enum:key_extra
KE_C_HOME	src/keymap.h	/^    , KE_C_HOME		\/* control-home *\/$/;"	e	enum:key_extra
KE_C_LEFT	src/keymap.h	/^    , KE_C_LEFT		\/* control-left *\/$/;"	e	enum:key_extra
KE_C_RIGHT	src/keymap.h	/^    , KE_C_RIGHT	\/* control-right *\/$/;"	e	enum:key_extra
KE_DROP	src/keymap.h	/^    , KE_DROP		\/* DnD data is available *\/$/;"	e	enum:key_extra
KE_FILLER	src/keymap.h	113;"	d
KE_FOCUSGAINED	src/keymap.h	/^    , KE_FOCUSGAINED	\/* focus gained *\/$/;"	e	enum:key_extra
KE_FOCUSLOST	src/keymap.h	/^    , KE_FOCUSLOST	\/* focus lost *\/$/;"	e	enum:key_extra
KE_IGNORE	src/keymap.h	/^    , KE_IGNORE		\/* Ignored mouse drag\/release *\/$/;"	e	enum:key_extra
KE_KDEL	src/keymap.h	/^    , KE_KDEL		\/* keypad Delete key *\/$/;"	e	enum:key_extra
KE_KINS	src/keymap.h	/^    , KE_KINS		\/* keypad Insert key *\/$/;"	e	enum:key_extra
KE_LEFTDRAG	src/keymap.h	/^    , KE_LEFTDRAG	\/* Drag with left mouse button down *\/$/;"	e	enum:key_extra
KE_LEFTMOUSE	src/keymap.h	/^    , KE_LEFTMOUSE	\/* Left mouse button click *\/$/;"	e	enum:key_extra
KE_LEFTMOUSE_NM	src/keymap.h	/^    , KE_LEFTMOUSE_NM	\/* non-mappable Left mouse button click *\/$/;"	e	enum:key_extra
KE_LEFTRELEASE	src/keymap.h	/^    , KE_LEFTRELEASE	\/* Left mouse button release *\/$/;"	e	enum:key_extra
KE_LEFTRELEASE_NM	src/keymap.h	/^    , KE_LEFTRELEASE_NM	\/* non-mappable left mouse button release *\/$/;"	e	enum:key_extra
KE_MIDDLEDRAG	src/keymap.h	/^    , KE_MIDDLEDRAG	\/* Drag with middle mouse button down *\/$/;"	e	enum:key_extra
KE_MIDDLEMOUSE	src/keymap.h	/^    , KE_MIDDLEMOUSE	\/* Middle mouse button click *\/$/;"	e	enum:key_extra
KE_MIDDLERELEASE	src/keymap.h	/^    , KE_MIDDLERELEASE	\/* Middle mouse button release *\/$/;"	e	enum:key_extra
KE_MOUSE	src/keymap.h	/^    , KE_MOUSE		\/* mouse event start *\/$/;"	e	enum:key_extra
KE_MOUSEDOWN	src/keymap.h	/^    , KE_MOUSEDOWN	\/* scroll wheel pseudo-button Down *\/$/;"	e	enum:key_extra
KE_MOUSELEFT	src/keymap.h	/^    , KE_MOUSELEFT	\/* scroll wheel pseudo-button Left *\/$/;"	e	enum:key_extra
KE_MOUSERIGHT	src/keymap.h	/^    , KE_MOUSERIGHT	\/* scroll wheel pseudo-button Right *\/$/;"	e	enum:key_extra
KE_MOUSEUP	src/keymap.h	/^    , KE_MOUSEUP	\/* scroll wheel pseudo-button Up *\/$/;"	e	enum:key_extra
KE_NAME	src/keymap.h	/^    KE_NAME = 3		\/* name of this terminal entry *\/$/;"	e	enum:key_extra
KE_NOP	src/keymap.h	/^    , KE_NOP		\/* doesn't do something *\/$/;"	e	enum:key_extra
KE_PLUG	src/keymap.h	/^    , KE_PLUG		\/* <Plug> *\/$/;"	e	enum:key_extra
KE_RIGHTDRAG	src/keymap.h	/^    , KE_RIGHTDRAG	\/* Drag with right mouse button down *\/$/;"	e	enum:key_extra
KE_RIGHTMOUSE	src/keymap.h	/^    , KE_RIGHTMOUSE	\/* Right mouse button click *\/$/;"	e	enum:key_extra
KE_RIGHTRELEASE	src/keymap.h	/^    , KE_RIGHTRELEASE	\/* Right mouse button release *\/$/;"	e	enum:key_extra
KE_SNIFF	src/keymap.h	/^    , KE_SNIFF		\/* SNiFF+ input waiting *\/$/;"	e	enum:key_extra
KE_SNR	src/keymap.h	/^    , KE_SNR		\/* <SNR> *\/$/;"	e	enum:key_extra
KE_S_DOWN	src/keymap.h	/^    , KE_S_DOWN		\/* shift-down *\/$/;"	e	enum:key_extra
KE_S_F1	src/keymap.h	/^    , KE_S_F1		\/* shifted function keys *\/$/;"	e	enum:key_extra
KE_S_F10	src/keymap.h	/^    , KE_S_F10$/;"	e	enum:key_extra
KE_S_F11	src/keymap.h	/^    , KE_S_F11$/;"	e	enum:key_extra
KE_S_F12	src/keymap.h	/^    , KE_S_F12$/;"	e	enum:key_extra
KE_S_F13	src/keymap.h	/^    , KE_S_F13$/;"	e	enum:key_extra
KE_S_F14	src/keymap.h	/^    , KE_S_F14$/;"	e	enum:key_extra
KE_S_F15	src/keymap.h	/^    , KE_S_F15$/;"	e	enum:key_extra
KE_S_F16	src/keymap.h	/^    , KE_S_F16$/;"	e	enum:key_extra
KE_S_F17	src/keymap.h	/^    , KE_S_F17$/;"	e	enum:key_extra
KE_S_F18	src/keymap.h	/^    , KE_S_F18$/;"	e	enum:key_extra
KE_S_F19	src/keymap.h	/^    , KE_S_F19$/;"	e	enum:key_extra
KE_S_F2	src/keymap.h	/^    , KE_S_F2$/;"	e	enum:key_extra
KE_S_F20	src/keymap.h	/^    , KE_S_F20$/;"	e	enum:key_extra
KE_S_F21	src/keymap.h	/^    , KE_S_F21$/;"	e	enum:key_extra
KE_S_F22	src/keymap.h	/^    , KE_S_F22$/;"	e	enum:key_extra
KE_S_F23	src/keymap.h	/^    , KE_S_F23$/;"	e	enum:key_extra
KE_S_F24	src/keymap.h	/^    , KE_S_F24$/;"	e	enum:key_extra
KE_S_F25	src/keymap.h	/^    , KE_S_F25$/;"	e	enum:key_extra
KE_S_F26	src/keymap.h	/^    , KE_S_F26$/;"	e	enum:key_extra
KE_S_F27	src/keymap.h	/^    , KE_S_F27$/;"	e	enum:key_extra
KE_S_F28	src/keymap.h	/^    , KE_S_F28$/;"	e	enum:key_extra
KE_S_F29	src/keymap.h	/^    , KE_S_F29$/;"	e	enum:key_extra
KE_S_F3	src/keymap.h	/^    , KE_S_F3$/;"	e	enum:key_extra
KE_S_F30	src/keymap.h	/^    , KE_S_F30$/;"	e	enum:key_extra
KE_S_F31	src/keymap.h	/^    , KE_S_F31$/;"	e	enum:key_extra
KE_S_F32	src/keymap.h	/^    , KE_S_F32$/;"	e	enum:key_extra
KE_S_F33	src/keymap.h	/^    , KE_S_F33$/;"	e	enum:key_extra
KE_S_F34	src/keymap.h	/^    , KE_S_F34$/;"	e	enum:key_extra
KE_S_F35	src/keymap.h	/^    , KE_S_F35$/;"	e	enum:key_extra
KE_S_F36	src/keymap.h	/^    , KE_S_F36$/;"	e	enum:key_extra
KE_S_F37	src/keymap.h	/^    , KE_S_F37$/;"	e	enum:key_extra
KE_S_F4	src/keymap.h	/^    , KE_S_F4$/;"	e	enum:key_extra
KE_S_F5	src/keymap.h	/^    , KE_S_F5$/;"	e	enum:key_extra
KE_S_F6	src/keymap.h	/^    , KE_S_F6$/;"	e	enum:key_extra
KE_S_F7	src/keymap.h	/^    , KE_S_F7$/;"	e	enum:key_extra
KE_S_F8	src/keymap.h	/^    , KE_S_F8$/;"	e	enum:key_extra
KE_S_F9	src/keymap.h	/^    , KE_S_F9$/;"	e	enum:key_extra
KE_S_TAB_OLD	src/keymap.h	/^    , KE_S_TAB_OLD	\/* shifted TAB key (no longer used) *\/$/;"	e	enum:key_extra
KE_S_UP	src/keymap.h	/^    , KE_S_UP		\/* shift-up *\/$/;"	e	enum:key_extra
KE_S_XF1	src/keymap.h	/^    , KE_S_XF1		\/* extra vt100 shifted function keys for xterm *\/$/;"	e	enum:key_extra
KE_S_XF2	src/keymap.h	/^    , KE_S_XF2$/;"	e	enum:key_extra
KE_S_XF3	src/keymap.h	/^    , KE_S_XF3$/;"	e	enum:key_extra
KE_S_XF4	src/keymap.h	/^    , KE_S_XF4$/;"	e	enum:key_extra
KE_TAB	src/keymap.h	/^    , KE_TAB		\/* unshifted TAB key *\/$/;"	e	enum:key_extra
KE_X1DRAG	src/keymap.h	/^    , KE_X1DRAG$/;"	e	enum:key_extra
KE_X1MOUSE	src/keymap.h	/^    , KE_X1MOUSE	\/* X1\/X2 mouse-buttons *\/$/;"	e	enum:key_extra
KE_X1RELEASE	src/keymap.h	/^    , KE_X1RELEASE$/;"	e	enum:key_extra
KE_X2DRAG	src/keymap.h	/^    , KE_X2DRAG$/;"	e	enum:key_extra
KE_X2MOUSE	src/keymap.h	/^    , KE_X2MOUSE$/;"	e	enum:key_extra
KE_X2RELEASE	src/keymap.h	/^    , KE_X2RELEASE$/;"	e	enum:key_extra
KE_XDOWN	src/keymap.h	/^    , KE_XDOWN$/;"	e	enum:key_extra
KE_XEND	src/keymap.h	/^    , KE_XEND		\/* extra (vt100) end key for xterm *\/$/;"	e	enum:key_extra
KE_XF1	src/keymap.h	/^    , KE_XF1		\/* extra vt100 function keys for xterm *\/$/;"	e	enum:key_extra
KE_XF2	src/keymap.h	/^    , KE_XF2$/;"	e	enum:key_extra
KE_XF3	src/keymap.h	/^    , KE_XF3$/;"	e	enum:key_extra
KE_XF4	src/keymap.h	/^    , KE_XF4$/;"	e	enum:key_extra
KE_XHOME	src/keymap.h	/^    , KE_XHOME		\/* extra (vt100) home key for xterm *\/$/;"	e	enum:key_extra
KE_XLEFT	src/keymap.h	/^    , KE_XLEFT$/;"	e	enum:key_extra
KE_XRIGHT	src/keymap.h	/^    , KE_XRIGHT$/;"	e	enum:key_extra
KE_XUP	src/keymap.h	/^    , KE_XUP		\/* extra vt100 cursor keys for xterm *\/$/;"	e	enum:key_extra
KE_ZEND	src/keymap.h	/^    , KE_ZEND		\/* extra (vt100) end key for xterm *\/$/;"	e	enum:key_extra
KE_ZHOME	src/keymap.h	/^    , KE_ZHOME		\/* extra (vt100) home key for xterm *\/$/;"	e	enum:key_extra
KG_ALT	src/os_unix.c	80;"	d	file:
KG_ALTGR	src/os_unix.c	81;"	d	file:
KG_CAPSSHIFT	src/os_unix.c	86;"	d	file:
KG_CTRL	src/os_unix.c	79;"	d	file:
KG_CTRLL	src/os_unix.c	84;"	d	file:
KG_CTRLR	src/os_unix.c	85;"	d	file:
KG_SHIFT	src/os_unix.c	78;"	d	file:
KG_SHIFTL	src/os_unix.c	82;"	d	file:
KG_SHIFTR	src/os_unix.c	83;"	d	file:
KL_PART_KEY	src/getchar.c	1509;"	d	file:
KL_PART_MAP	src/getchar.c	1510;"	d	file:
KMAPSOURCE	src/Makefile	/^KMAPSOURCE = ..\/runtime\/keymap$/;"	m
KMAPSUBDIR	src/Makefile	/^KMAPSUBDIR = \/keymap$/;"	m
KMAPSUBLOC	src/Makefile	/^KMAPSUBLOC	= $(VIMRTLOC)$(KMAPSUBDIR)$/;"	m
KMAP_LLEN	src/digraph.c	2427;"	d	file:
KMAP_MAXLEN	src/digraph.c	2356;"	d	file:
KS_AL	src/term.h	/^    KS_AL,	\/* add new blank line *\/$/;"	e	enum:SpecialKey
KS_BC	src/term.h	/^    KS_BC,	\/* backspace character (cursor left) *\/$/;"	e	enum:SpecialKey
KS_CAB	src/term.h	/^    KS_CAB,	\/* set background color (ANSI) *\/$/;"	e	enum:SpecialKey
KS_CAF	src/term.h	/^    KS_CAF,	\/* set foreground color (ANSI) *\/$/;"	e	enum:SpecialKey
KS_CAL	src/term.h	/^    KS_CAL,	\/* add number of blank lines *\/$/;"	e	enum:SpecialKey
KS_CCO	src/term.h	/^    KS_CCO,	\/* number of colors *\/$/;"	e	enum:SpecialKey
KS_CCS	src/term.h	/^    KS_CCS,	\/* cur is relative to scroll region *\/$/;"	e	enum:SpecialKey
KS_CD	src/term.h	/^    KS_CD,	\/* clear to end of display *\/$/;"	e	enum:SpecialKey
KS_CDL	src/term.h	/^    KS_CDL,	\/* delete number of lines *\/$/;"	e	enum:SpecialKey
KS_CE	src/term.h	/^    KS_CE,	\/* clear to end of line *\/$/;"	e	enum:SpecialKey
KS_CEI	src/term.h	/^    KS_CEI,	\/* end insert mode (block cursor) *\/$/;"	e	enum:SpecialKey
KS_CIE	src/term.h	/^    KS_CIE,	\/* set icon text end *\/$/;"	e	enum:SpecialKey
KS_CIS	src/term.h	/^    KS_CIS,	\/* set icon text start *\/$/;"	e	enum:SpecialKey
KS_CL	src/term.h	/^    KS_CL,	\/* clear screen *\/$/;"	e	enum:SpecialKey
KS_CM	src/term.h	/^    KS_CM,	\/* cursor motion *\/$/;"	e	enum:SpecialKey
KS_CRI	src/term.h	/^    KS_CRI,	\/* cursor number of chars right *\/$/;"	e	enum:SpecialKey
KS_CRV	src/term.h	/^    KS_CRV,	\/* request version string *\/$/;"	e	enum:SpecialKey
KS_CS	src/term.h	/^    KS_CS,	\/* scroll region *\/$/;"	e	enum:SpecialKey
KS_CSB	src/term.h	/^    KS_CSB,	\/* set background color *\/$/;"	e	enum:SpecialKey
KS_CSF	src/term.h	/^    KS_CSF,	\/* set foreground color *\/$/;"	e	enum:SpecialKey
KS_CSI	src/term.h	/^    KS_CSI,	\/* start insert mode (bar cursor) *\/$/;"	e	enum:SpecialKey
KS_CSV	src/term.h	/^    KS_CSV,	\/* scroll region vertical *\/$/;"	e	enum:SpecialKey
KS_CWP	src/term.h	/^    KS_CWP,	\/* set window position in pixels *\/$/;"	e	enum:SpecialKey
KS_CWS	src/term.h	/^    KS_CWS,	\/* set window size in characters *\/$/;"	e	enum:SpecialKey
KS_CZH	src/term.h	/^    KS_CZH,	\/* italic mode start *\/$/;"	e	enum:SpecialKey
KS_CZR	src/term.h	/^    KS_CZR,	\/* italic mode end *\/$/;"	e	enum:SpecialKey
KS_DA	src/term.h	/^    KS_DA,	\/* text may be scrolled down from up *\/$/;"	e	enum:SpecialKey
KS_DB	src/term.h	/^    KS_DB,	\/* text may be scrolled up from down *\/$/;"	e	enum:SpecialKey
KS_DEC_MOUSE	src/keymap.h	82;"	d
KS_DL	src/term.h	/^    KS_DL,	\/* delete line *\/$/;"	e	enum:SpecialKey
KS_EXTRA	src/keymap.h	61;"	d
KS_FS	src/term.h	/^    KS_FS,	\/* set window title end (from status line) *\/$/;"	e	enum:SpecialKey
KS_HOR_SCROLLBAR	src/keymap.h	76;"	d
KS_JSBTERM_MOUSE	src/keymap.h	96;"	d
KS_KE	src/term.h	/^    KS_KE,	\/* out of "keypad transmit" mode *\/$/;"	e	enum:SpecialKey
KS_KEY	src/keymap.h	99;"	d
KS_KS	src/term.h	/^    KS_KS,	\/* put term in "keypad transmit" mode *\/$/;"	e	enum:SpecialKey
KS_LAST	src/term.h	89;"	d
KS_LE	src/term.h	/^    KS_LE,	\/* cursor left (mostly backspace) *\/$/;"	e	enum:SpecialKey
KS_MB	src/term.h	/^    KS_MB,	\/* blink mode *\/$/;"	e	enum:SpecialKey
KS_MD	src/term.h	/^    KS_MD,	\/* bold mode *\/$/;"	e	enum:SpecialKey
KS_ME	src/term.h	/^    KS_ME,	\/* normal mode *\/$/;"	e	enum:SpecialKey
KS_MENU	src/keymap.h	74;"	d
KS_MODIFIER	src/keymap.h	67;"	d
KS_MOUSE	src/keymap.h	73;"	d
KS_MR	src/term.h	/^    KS_MR,	\/* reverse mode *\/$/;"	e	enum:SpecialKey
KS_MS	src/term.h	/^    KS_MS,	\/* save to move cur in reverse mode *\/$/;"	e	enum:SpecialKey
KS_NAME	src/term.h	/^    KS_NAME = 0,\/* name of this terminal entry *\/$/;"	e	enum:SpecialKey
KS_ND	src/term.h	/^    KS_ND,	\/* cursor right *\/$/;"	e	enum:SpecialKey
KS_NETTERM_MOUSE	src/keymap.h	81;"	d
KS_OP	src/term.h	/^    KS_OP	\/* original color pair *\/$/;"	e	enum:SpecialKey
KS_PTERM_MOUSE	src/keymap.h	102;"	d
KS_SE	src/term.h	/^    KS_SE,	\/* normal mode *\/$/;"	e	enum:SpecialKey
KS_SELECT	src/keymap.h	87;"	d
KS_SO	src/term.h	/^    KS_SO,	\/* standout mode *\/$/;"	e	enum:SpecialKey
KS_SPECIAL	src/keymap.h	55;"	d
KS_SR	src/term.h	/^    KS_SR,	\/* scroll reverse (backward) *\/$/;"	e	enum:SpecialKey
KS_TABLINE	src/keymap.h	105;"	d
KS_TABMENU	src/keymap.h	108;"	d
KS_TE	src/term.h	/^    KS_TE,	\/* out of termcap mode *\/$/;"	e	enum:SpecialKey
KS_TEAROFF	src/keymap.h	93;"	d
KS_TI	src/term.h	/^    KS_TI,	\/* put terminal in termcap mode *\/$/;"	e	enum:SpecialKey
KS_TS	src/term.h	/^    KS_TS,	\/* set window title start (to status line)*\/$/;"	e	enum:SpecialKey
KS_UCE	src/term.h	/^    KS_UCE,	\/* exit undercurl mode *\/$/;"	e	enum:SpecialKey
KS_UCS	src/term.h	/^    KS_UCS,	\/* undercurl mode *\/$/;"	e	enum:SpecialKey
KS_UE	src/term.h	/^    KS_UE,	\/* exit underscore (underline) mode *\/$/;"	e	enum:SpecialKey
KS_US	src/term.h	/^    KS_US,	\/* underscore (underline) mode *\/$/;"	e	enum:SpecialKey
KS_UT	src/term.h	/^    KS_UT,	\/* clearing uses current background color *\/$/;"	e	enum:SpecialKey
KS_VB	src/term.h	/^    KS_VB,	\/* visual bell *\/$/;"	e	enum:SpecialKey
KS_VE	src/term.h	/^    KS_VE,	\/* cursor visible *\/$/;"	e	enum:SpecialKey
KS_VER_SCROLLBAR	src/keymap.h	75;"	d
KS_VI	src/term.h	/^    KS_VI,	\/* cursor invisible *\/$/;"	e	enum:SpecialKey
KS_VS	src/term.h	/^    KS_VS,	\/* cursor very visible *\/$/;"	e	enum:SpecialKey
KS_XS	src/term.h	/^    KS_XS,	\/* standout not erased by overwriting (hpterm) *\/$/;"	e	enum:SpecialKey
KS_ZERO	src/keymap.h	49;"	d
KWORD	src/regexp.c	176;"	d	file:
K_BS	src/keymap.h	365;"	d
K_CMDWIN	src/keymap.h	454;"	d
K_CSI	src/keymap.h	451;"	d
K_CURSORHOLD	src/keymap.h	460;"	d
K_C_END	src/keymap.h	284;"	d
K_C_HOME	src/keymap.h	282;"	d
K_C_LEFT	src/keymap.h	278;"	d
K_C_RIGHT	src/keymap.h	280;"	d
K_DEC_MOUSE	src/keymap.h	408;"	d
K_DEL	src/keymap.h	369;"	d
K_DOWN	src/keymap.h	272;"	d
K_DROP	src/keymap.h	456;"	d
K_END	src/keymap.h	375;"	d
K_F1	src/keymap.h	300;"	d
K_F10	src/keymap.h	309;"	d
K_F11	src/keymap.h	311;"	d
K_F12	src/keymap.h	312;"	d
K_F13	src/keymap.h	313;"	d
K_F14	src/keymap.h	314;"	d
K_F15	src/keymap.h	315;"	d
K_F16	src/keymap.h	316;"	d
K_F17	src/keymap.h	317;"	d
K_F18	src/keymap.h	318;"	d
K_F19	src/keymap.h	319;"	d
K_F2	src/keymap.h	301;"	d
K_F20	src/keymap.h	320;"	d
K_F21	src/keymap.h	322;"	d
K_F22	src/keymap.h	323;"	d
K_F23	src/keymap.h	324;"	d
K_F24	src/keymap.h	325;"	d
K_F25	src/keymap.h	326;"	d
K_F26	src/keymap.h	327;"	d
K_F27	src/keymap.h	328;"	d
K_F28	src/keymap.h	329;"	d
K_F29	src/keymap.h	330;"	d
K_F3	src/keymap.h	302;"	d
K_F30	src/keymap.h	331;"	d
K_F31	src/keymap.h	333;"	d
K_F32	src/keymap.h	334;"	d
K_F33	src/keymap.h	335;"	d
K_F34	src/keymap.h	336;"	d
K_F35	src/keymap.h	337;"	d
K_F36	src/keymap.h	338;"	d
K_F37	src/keymap.h	339;"	d
K_F4	src/keymap.h	303;"	d
K_F5	src/keymap.h	304;"	d
K_F6	src/keymap.h	305;"	d
K_F7	src/keymap.h	306;"	d
K_F8	src/keymap.h	307;"	d
K_F9	src/keymap.h	308;"	d
K_FOCUSGAINED	src/keymap.h	457;"	d
K_FOCUSLOST	src/keymap.h	458;"	d
K_HELP	src/keymap.h	362;"	d
K_HOME	src/keymap.h	371;"	d
K_HOR_SCROLLBAR	src/keymap.h	405;"	d
K_IGNORE	src/keymap.h	441;"	d
K_INS	src/keymap.h	367;"	d
K_JSBTERM_MOUSE	src/keymap.h	409;"	d
K_K0	src/keymap.h	391;"	d
K_K1	src/keymap.h	392;"	d
K_K2	src/keymap.h	393;"	d
K_K3	src/keymap.h	394;"	d
K_K4	src/keymap.h	395;"	d
K_K5	src/keymap.h	396;"	d
K_K6	src/keymap.h	397;"	d
K_K7	src/keymap.h	398;"	d
K_K8	src/keymap.h	399;"	d
K_K9	src/keymap.h	400;"	d
K_KDEL	src/keymap.h	370;"	d
K_KDIVIDE	src/keymap.h	386;"	d
K_KEND	src/keymap.h	376;"	d
K_KENTER	src/keymap.h	388;"	d
K_KHOME	src/keymap.h	372;"	d
K_KINS	src/keymap.h	368;"	d
K_KMINUS	src/keymap.h	385;"	d
K_KMULTIPLY	src/keymap.h	387;"	d
K_KPAGEDOWN	src/keymap.h	382;"	d
K_KPAGEUP	src/keymap.h	381;"	d
K_KPLUS	src/keymap.h	384;"	d
K_KPOINT	src/keymap.h	389;"	d
K_LEFT	src/keymap.h	273;"	d
K_LEFTDRAG	src/keymap.h	424;"	d
K_LEFTMOUSE	src/keymap.h	422;"	d
K_LEFTMOUSE_NM	src/keymap.h	423;"	d
K_LEFTRELEASE	src/keymap.h	425;"	d
K_LEFTRELEASE_NM	src/keymap.h	426;"	d
K_MENU	src/keymap.h	403;"	d
K_MIDDLEDRAG	src/keymap.h	428;"	d
K_MIDDLEMOUSE	src/keymap.h	427;"	d
K_MIDDLERELEASE	src/keymap.h	429;"	d
K_MOUSE	src/keymap.h	402;"	d
K_MOUSEDOWN	src/keymap.h	446;"	d
K_MOUSELEFT	src/keymap.h	448;"	d
K_MOUSERIGHT	src/keymap.h	449;"	d
K_MOUSEUP	src/keymap.h	447;"	d
K_NETTERM_MOUSE	src/keymap.h	407;"	d
K_NOP	src/keymap.h	442;"	d
K_NUL	src/keymap.h	19;"	d
K_PAGEDOWN	src/keymap.h	380;"	d
K_PAGEUP	src/keymap.h	379;"	d
K_PLUG	src/keymap.h	453;"	d
K_PTERM_MOUSE	src/keymap.h	410;"	d
K_RIGHT	src/keymap.h	274;"	d
K_RIGHTDRAG	src/keymap.h	431;"	d
K_RIGHTMOUSE	src/keymap.h	430;"	d
K_RIGHTRELEASE	src/keymap.h	432;"	d
K_SECOND	src/keymap.h	125;"	d
K_SELECT	src/keymap.h	412;"	d
K_SELECT_STRING	src/keymap.h	88;"	d
K_SNIFF	src/keymap.h	444;"	d
K_SNR	src/keymap.h	452;"	d
K_SPECIAL	src/keymap.h	29;"	d
K_S_DOWN	src/keymap.h	276;"	d
K_S_END	src/keymap.h	283;"	d
K_S_F1	src/keymap.h	347;"	d
K_S_F10	src/keymap.h	356;"	d
K_S_F11	src/keymap.h	358;"	d
K_S_F12	src/keymap.h	359;"	d
K_S_F2	src/keymap.h	348;"	d
K_S_F3	src/keymap.h	349;"	d
K_S_F4	src/keymap.h	350;"	d
K_S_F5	src/keymap.h	351;"	d
K_S_F6	src/keymap.h	352;"	d
K_S_F7	src/keymap.h	353;"	d
K_S_F8	src/keymap.h	354;"	d
K_S_F9	src/keymap.h	355;"	d
K_S_HOME	src/keymap.h	281;"	d
K_S_LEFT	src/keymap.h	277;"	d
K_S_RIGHT	src/keymap.h	279;"	d
K_S_TAB	src/keymap.h	286;"	d
K_S_UP	src/keymap.h	275;"	d
K_S_XF1	src/keymap.h	342;"	d
K_S_XF2	src/keymap.h	343;"	d
K_S_XF3	src/keymap.h	344;"	d
K_S_XF4	src/keymap.h	345;"	d
K_TAB	src/keymap.h	285;"	d
K_TABLINE	src/keymap.h	415;"	d
K_TABMENU	src/keymap.h	416;"	d
K_TEAROFF	src/keymap.h	413;"	d
K_THIRD	src/keymap.h	127;"	d
K_UNDO	src/keymap.h	363;"	d
K_UP	src/keymap.h	271;"	d
K_VER_SCROLLBAR	src/keymap.h	404;"	d
K_X1DRAG	src/keymap.h	435;"	d
K_X1MOUSE	src/keymap.h	433;"	d
K_X1MOUSE	src/keymap.h	434;"	d
K_X1RELEASE	src/keymap.h	436;"	d
K_X2DRAG	src/keymap.h	438;"	d
K_X2MOUSE	src/keymap.h	437;"	d
K_X2RELEASE	src/keymap.h	439;"	d
K_XDOWN	src/keymap.h	296;"	d
K_XEND	src/keymap.h	377;"	d
K_XF1	src/keymap.h	289;"	d
K_XF2	src/keymap.h	290;"	d
K_XF3	src/keymap.h	291;"	d
K_XF4	src/keymap.h	292;"	d
K_XHOME	src/keymap.h	373;"	d
K_XLEFT	src/keymap.h	297;"	d
K_XRIGHT	src/keymap.h	298;"	d
K_XUP	src/keymap.h	295;"	d
K_ZEND	src/keymap.h	378;"	d
K_ZERO	src/keymap.h	269;"	d
K_ZHOME	src/keymap.h	374;"	d
KeyNoremap	src/getchar.c	/^static int		KeyNoremap = 0;	    \/* remapping flags *\/$/;"	v	file:
KeyStuffed	src/globals.h	/^EXTERN int	KeyStuffed;		\/* TRUE if current char from stuffbuf *\/$/;"	v
KeySym	src/gui_mac.c	236;"	d	file:
KeyTyped	src/globals.h	/^EXTERN int	KeyTyped;		\/* TRUE if user typed current char *\/$/;"	v
Kill	src/if_cscope.h	/^typedef enum { Add, Find, Help, Kill, Reset, Show } csid_e;$/;"	e	enum:__anon87
L	runtime/macros/hanoi/hanoi.vim	/^map L 1G\/t$/;"	m
L	runtime/macros/life/life.vim	/^map L makf-h,1`ak,2`af-h,1`a,2`ajf-h,1`aj,2($/;"	m
L	src/if_lua.c	/^static lua_State *L = NULL;$/;"	v	file:
L	src/testdir/test49.vim	/^function! L()$/;"	f
LA	src/farsi.h	53;"	d
LAM	src/farsi.h	137;"	d
LANGMAP	src/vim.h	677;"	d
LANGMAP_ADJUST	src/macros.h	136;"	d
LANGMAP_ADJUST	src/macros.h	147;"	d
LANGMAP_ADJUST	src/macros.h	154;"	d
LANGP_ENTRY	src/spell.c	537;"	d	file:
LANGSOURCE	src/Makefile	/^LANGSOURCE = ..\/runtime\/lang$/;"	m
LANGSUBDIR	src/Makefile	/^LANGSUBDIR = \/lang$/;"	m
LANGSUBLOC	src/Makefile	/^LANGSUBLOC	= $(VIMRTLOC)$(LANGSUBDIR)$/;"	m
LANGUAGES	src/po/Make_cyg.mak	/^LANGUAGES =	af \\$/;"	m
LANGUAGES	src/po/Make_ming.mak	/^LANGUAGES = \\$/;"	m
LANGUAGES	src/po/Make_mvc.mak	/^LANGUAGES = \\$/;"	m
LANGUAGES	src/po/Makefile	/^LANGUAGES = \\$/;"	m
LAST_NL	src/regexp.c	200;"	d	file:
LATIN1LOWER	src/charset.c	1601;"	d	file:
LATIN1UPPER	src/charset.c	1602;"	d	file:
LBUFLEN	src/diff.c	28;"	d	file:
LD	src/Make_dice.mak	/^LD = dcc$/;"	m
LD	src/Make_morph.mak	/^LD =		gcc$/;"	m
LDFLAGS	src/auto/config.mk	/^LDFLAGS		=  -L\/usr\/local\/lib$/;"	m
LEN_FROM_CONV	src/mbyte.c	508;"	d	file:
LFLAGS	src/Make_bc5.mak	/^LFLAGS	= -OS -Tpe -c -m -L$(LIB) $(DEBUG_FLAG) $(LINK2)$/;"	m
LFLAGS	src/Make_bc5.mak	/^LFLAGS	= -Tde -c -m -L$(LIB) $(DEBUG_FLAG) $(LINK2)$/;"	m
LFLAGS	src/Make_os2.mak	/^LFLAGS = -Zcrtdll -s -o $(TARGET) $(LIBS)$/;"	m
LFLAGSDLL	src/Make_bc5.mak	/^LFLAGSDLL  = -Tpd -c -m -L$(LIB) $(DEBUG_FLAG) $(LINK2)$/;"	m
LFLAGSDLL	src/Make_bc5.mak	/^LFLAGSDLL  =$/;"	m
LIB	src/GvimExt/Make_bc5.mak	/^LIB	= $(BOR)\\lib$/;"	m
LIB	src/Make_bc5.mak	/^LIB = $(BOR)\\lib$/;"	m
LIB	src/Make_ming.mak	/^LIB = -lkernel32 -luser32 -lgdi32 -ladvapi32 -lcomdlg32 -lcomctl32 -lversion$/;"	m
LIB	src/msvcsetup.bat	/^set LIB=%ProgramFiles%\\Microsoft Visual Studio .NET 2003\\Vc7\\lib;%LIB%$/;"	v
LIB	src/xxd/Make_bc3.mak	/^LIB	= -L$(BOR)\\lib$/;"	m
LIBC	src/Make_mvc.mak	/^LIBC = $(LIBC) libcmtd.lib$/;"	m
LIBC	src/Make_mvc.mak	/^LIBC = $(LIBC) msvcrtd.lib$/;"	m
LIBC	src/Make_mvc.mak	/^LIBC = \/fixed:no$/;"	m
LIBC	src/Make_mvc.mak	/^LIBC = libcmt.lib$/;"	m
LIBC	src/Make_mvc.mak	/^LIBC = msvcrt.lib$/;"	m
LIBC	src/Make_mvc.mak	/^LIBC =$/;"	m
LIBID_Vim	src/if_ole.h	/^EXTERN_C const IID LIBID_Vim;$/;"	v
LIBID_Vim	src/iid_ole.c	/^const IID LIBID_Vim = {0x0F0BFAE0,0x4C90,0x11d1,{0x82,0xD7,0x00,0x04,0xAC,0x36,0x85,0x19}};$/;"	v
LIBPATH	src/Make_bc3.mak	/^LIBPATH = $(BOR)\\LIB$/;"	m
LIBPATH	src/Make_bc3.mak	/^LIBPATH = $(BOR)\\LIB;$(SPAWNO)$/;"	m
LIBS	src/GvimExt/Make_ming.mak	/^LIBS :=  -luuid$/;"	m
LIBS	src/Make_dice.mak	/^LIBS = -la$/;"	m
LIBS	src/Make_manx.mak	/^LIBS = -lc16$/;"	m
LIBS	src/Make_morph.mak	/^LIBS =		-noixemul -s$/;"	m
LIBS	src/Make_os2.mak	/^LIBS = -ltermcap$/;"	m
LIBS	src/auto/config.mk	/^LIBS		= -lm -lncurses -lnsl  -lselinux$/;"	m
LIBS	src/xxd/Make_cyg.mak	/^LIBS    = -lc$/;"	m
LIBS	src/xxd/Make_cyg.mak	/^LIBS    =$/;"	m
LINELEN	runtime/doc/doctags.c	14;"	d	file:
LINELENGTH	runtime/tools/ccfilter.c	21;"	d	file:
LINE_ATTR	src/screen.c	2767;"	d	file:
LINE_BUF_LEN	src/buffer.c	5073;"	d	file:
LINE_DELAY	src/gui_at_sb.c	219;"	d	file:
LINE_LEN	src/gui_mac.c	3834;"	d	file:
LINE_LEN	src/gui_photon.c	2080;"	d	file:
LINE_LEN	src/gui_w48.c	1542;"	d	file:
LINE_REPEAT	src/gui_at_sb.c	221;"	d	file:
LINK	src/GvimExt/Make_bc5.mak	/^LINK	= $(BOR)\\BIN\\ILink32$/;"	m
LINK	src/Make_bc5.mak	/^LINK	= $(BOR)\\BIN\\ILink32$/;"	m
LINK	src/Make_bc5.mak	/^LINK	= $(BOR)\\BIN\\TLink$/;"	m
LINK2	src/Make_bc5.mak	/^LINK2 = -aa$/;"	m
LINK2	src/Make_bc5.mak	/^LINK2 = -ap -OS -o -P$/;"	m
LINK2	src/Make_bc5.mak	/^LINK2 =$/;"	m
LINK32	src/Make_dvc.mak	/^LINK32=link.exe$/;"	m
LINK32	src/Make_ivc.mak	/^LINK32=link.exe$/;"	m
LINK32	src/VisVim/VisVim.mak	/^LINK32=link.exe$/;"	m
LINK32_FLAGS	src/Make_dvc.mak	/^LINK32_FLAGS=\/nologo \/pdb:none \/machine:IX86 \/out:"$(OUTDIR)\/vimrun.exe"$/;"	m
LINK32_FLAGS	src/Make_ivc.mak	/^LINK32_FLAGS= oldnames.lib kernel32.lib user32.lib gdi32.lib version.lib comdlg32.lib comctl32.lib advapi32.lib shell32.lib ole32.lib uuid.lib \/nologo \/machine:I386 \/nodefaultlib$/;"	m
LINK32_FLAGS	src/Make_ivc.mak	/^LINK32_FLAGS=$(LINK32_FLAGS) \/pdb:.\\Rel\/vim.pdb -debug:full -debugtype:cv,fixup \/map:.\\oleDbg\\vim.map libc.lib \/subsystem:console \/out:.\\vim.exe$/;"	m
LINK32_FLAGS	src/Make_ivc.mak	/^LINK32_FLAGS=$(LINK32_FLAGS) \/pdb:.\\gRel\/gvim.pdb -debug:full -debugtype:cv,fixup \/map:.\\oleDbg\\gvim.map libc.lib \/subsystem:windows \/out:.\\gvim.exe$/;"	m
LINK32_FLAGS	src/Make_ivc.mak	/^LINK32_FLAGS=$(LINK32_FLAGS) \/pdb:.\\oleRel\/gvim.pdb -debug:full -debugtype:cv,fixup \/map:.\\oleDbg\\gvim.map libc.lib oleaut32.lib \/subsystem:windows \/out:.\\gvim.exe$/;"	m
LINK32_FLAGS	src/Make_ivc.mak	/^LINK32_FLAGS=$(LINK32_FLAGS) libcd.lib \/subsystem:console \/debug \/profile \/pdb:.\\Dbg\/vimd.pdb -debug:full -debugtype:cv,fixup \/map:.\\Dbg\/vimd.map \/out:.\\vimd.exe$/;"	m
LINK32_FLAGS	src/Make_ivc.mak	/^LINK32_FLAGS=$(LINK32_FLAGS) libcd.lib \/subsystem:windows \/debug \/profile \/pdb:.\\gDbg\/gvimd.pdb -debug:full -debugtype:cv,fixup \/map:.\\gDbg\\gvimd.map \/out:.\\gvimd.exe$/;"	m
LINK32_FLAGS	src/Make_ivc.mak	/^LINK32_FLAGS=$(LINK32_FLAGS) libcd.lib oleaut32.lib \/subsystem:windows \/debug \/profile \/pdb:.\\oleDbg\/gvimd.pdb -debug:full -debugtype:cv,fixup \/map:.\\oleDbg\\gvimd.map \/out:.\\gvimd.exe$/;"	m
LINK32_FLAGS	src/VisVim/VisVim.mak	/^LINK32_FLAGS=$(LINK32_FLAGS) \/nologo \/subsystem:windows \/dll \/machine:I386\\$/;"	m
LINK32_FLAGS	src/VisVim/VisVim.mak	/^LINK32_FLAGS=\/debug \/pdbtype:sept \/pdb:"$(OUTDIR)\/VisVim.pdb"$/;"	m
LINK32_FLAGS	src/VisVim/VisVim.mak	/^LINK32_FLAGS=\/pdb:none$/;"	m
LINK32_OBJS	src/Make_dvc.mak	/^LINK32_OBJS= \\$/;"	m
LINK32_OBJS	src/Make_ivc.mak	/^LINK32_OBJS= \\$/;"	m
LINK32_OBJS	src/VisVim/VisVim.mak	/^LINK32_OBJS= \\$/;"	m
LINKARGS1	src/Make_mvc.mak	/^LINKARGS1 = $(LINKARGS1) \/LTCG:STATUS$/;"	m
LINKARGS1	src/Make_mvc.mak	/^LINKARGS1 = $(linkdebug) $(conflags)$/;"	m
LINKARGS2	src/Make_mvc.mak	/^LINKARGS2 = $(CON_LIB) $(GUI_LIB) $(LIBC) $(OLE_LIB)  user32.lib $(SNIFF_LIB) \\$/;"	m
LINKIT	src/Makefile	/^LINKIT = @echo >\/dev\/null$/;"	m
LINK_PDB	src/Make_mvc.mak	/^LINK_PDB = \/PDB:$(VIM).pdb -debug$/;"	m
LINT	src/Makefile	/^LINT = lint$/;"	m
LINT_CFLAGS	src/Makefile	/^LINT_CFLAGS = -DLINT -I. $(PRE_DEFS) $(POST_DEFS) $(LUA_CFLAGS) $(PERL_CFLAGS) $(PYTHON_CFLAGS) -Dinline= -D__extension__= -Dalloca=alloca$/;"	m
LINT_EXTRA	src/Makefile	/^LINT_EXTRA = -DUSE_SNIFF -DHANGUL_INPUT -D"__attribute__(x)="$/;"	m
LINT_OPTIONS	src/Makefile	/^LINT_OPTIONS = -beprxzF$/;"	m
LINT_SRC	src/Makefile	/^LINT_SRC = $(BASIC_SRC) $(GUI_SRC) $(HANGULIN_SRC) $(PYTHON_SRC) $(PYTHON3_SRC) $(TCL_SRC) \\$/;"	m
LISPWORD_VALUE	src/option.h	300;"	d
LISTCOUNT	src/quickfix.c	50;"	d	file:
LIST_ATTR	src/syntax.c	8459;"	d	file:
LIST_INT	src/syntax.c	8461;"	d	file:
LIST_STRING	src/syntax.c	8460;"	d	file:
LLEN	src/xxd/xxd.c	216;"	d	file:
LN	src/Make_manx.mak	/^LN = ln$/;"	m
LNFLAGS	src/Make_manx.mak	/^LNFLAGS = +q$/;"	m
LN_DEBUG	src/xxd/Make_amiga.mak	/^LN_DEBUG =$/;"	m
LOCALE	src/if_ole.cpp	80;"	d	file:
LOCASE	src/os_msdos.c	2139;"	d	file:
LOGFONT	src/gui_w48.c	/^typedef int LOGFONT[];$/;"	t	file:
LOGFONT	src/os_mswin.c	/^typedef int LOGFONT;$/;"	t	file:
LOGFONT	src/os_win32.c	/^typedef int LOGFONT;$/;"	t	file:
LONG	src/gui_w48.c	/^typedef int LONG;$/;"	t	file:
LONGJMP	src/os_unix.h	530;"	d
LONGJMP	src/os_unix.h	534;"	d
LONG_LONG_OFF_T	src/vim.h	424;"	d
LOOKFOR_ANY	src/misc1.c	6249;"	d	file:
LOOKFOR_CASE	src/misc1.c	6248;"	d	file:
LOOKFOR_CPP_BASECLASS	src/misc1.c	6254;"	d	file:
LOOKFOR_DO	src/misc1.c	6247;"	d	file:
LOOKFOR_ENUM_OR_INIT	src/misc1.c	6255;"	d	file:
LOOKFOR_IF	src/misc1.c	6246;"	d	file:
LOOKFOR_INITIAL	src/misc1.c	6245;"	d	file:
LOOKFOR_NOBREAK	src/misc1.c	6253;"	d	file:
LOOKFOR_SCOPEDECL	src/misc1.c	6252;"	d	file:
LOOKFOR_TERM	src/misc1.c	6250;"	d	file:
LOOKFOR_UNTERM	src/misc1.c	6251;"	d	file:
LOOP	runtime/doc/vim2html.pl	/^		LOOP:$/;"	l
LOWER	src/regexp.c	196;"	d	file:
LPADJUSTINFO	src/vimtbar.h	/^typedef ADJUSTINFO FAR* LPADJUSTINFO;$/;"	t
LPARAM	src/gui_w48.c	/^typedef int LPARAM;$/;"	t	file:
LPARAM	src/os_mswin.c	/^typedef int LPARAM;$/;"	t	file:
LPBOOL	src/os_mswin.c	/^typedef int LPBOOL;$/;"	t	file:
LPBOOL	src/os_win32.c	/^typedef int LPBOOL;$/;"	t	file:
LPBOOL	src/proto.h	/^   typedef int LPBOOL;$/;"	t
LPCOMPOSITIONFORM	src/gui_w32.c	/^} COMPOSITIONFORM, *PCOMPOSITIONFORM, NEAR *NPCOMPOSITIONFORM, FAR *LPCOMPOSITIONFORM;$/;"	t	typeref:struct:tagCOMPOSITIONFORM	file:
LPCREATESTRUCT	src/gui_w48.c	/^typedef int LPCREATESTRUCT;$/;"	t	file:
LPCSHELLEXT	src/GvimExt/gvimext.h	/^typedef CShellExt *LPCSHELLEXT;$/;"	t
LPCSHELLEXTCLASSFACTORY	src/GvimExt/gvimext.h	/^typedef CShellExtClassFactory *LPCSHELLEXTCLASSFACTORY;$/;"	t
LPCSTR	src/gui_w48.c	/^typedef int LPCSTR;$/;"	t	file:
LPCSTR	src/os_mswin.c	/^typedef int LPCSTR;$/;"	t	file:
LPCSTR	src/os_win16.c	/^typedef char * LPCSTR;$/;"	t	file:
LPCSTR	src/os_win32.c	/^typedef char * LPCSTR;$/;"	t	file:
LPCTBBUTTON	src/vimtbar.h	/^typedef const TBBUTTON FAR* LPCTBBUTTON;$/;"	t
LPCTSTR	src/gui_w48.c	/^typedef int LPCTSTR;$/;"	t	file:
LPCTSTR	src/os_win32.c	/^typedef int LPCTSTR;$/;"	t	file:
LPCWSTR	src/os_mswin.c	/^typedef int LPCWSTR;$/;"	t	file:
LPCWSTR	src/proto.h	/^   typedef LPCSTR LPCWSTR;$/;"	t
LPDWORD	src/os_win32.c	/^typedef int LPDWORD;$/;"	t	file:
LPNMHDR	src/gui_w48.c	/^typedef int LPNMHDR;$/;"	t	file:
LPNMTTDISPINFO	src/gui_w32.c	269;"	d	file:
LPNMTTDISPINFOA	src/gui_w32.c	/^} NMTTDISPINFOA, *LPNMTTDISPINFOA;$/;"	t	typeref:struct:tagNMTTDISPINFOA	file:
LPNMTTDISPINFOW	src/gui_w32.c	/^} NMTTDISPINFOW, *LPNMTTDISPINFOW;$/;"	t	typeref:struct:tagNMTTDISPINFOW	file:
LPRECT	src/gui_w48.c	/^typedef int LPRECT;$/;"	t	file:
LPSTR	src/gui_w48.c	/^typedef int LPSTR;$/;"	t	file:
LPSTR	src/os_mswin.c	/^typedef int LPSTR;$/;"	t	file:
LPSTR	src/os_win16.c	/^typedef int LPSTR;$/;"	t	file:
LPSTR	src/os_win32.c	/^typedef int LPSTR;$/;"	t	file:
LPTBBUTTON	src/vimtbar.h	/^typedef TBBUTTON FAR* LPTBBUTTON;$/;"	t
LPTSTR	src/os_mswin.c	/^typedef int LPTSTR;$/;"	t	file:
LPTSTR	src/os_win16.c	/^typedef int LPTSTR;$/;"	t	file:
LPTSTR	src/os_win32.c	/^typedef int LPTSTR;$/;"	t	file:
LPVOID	src/os_win32.c	/^typedef int LPVOID;$/;"	t	file:
LPWINDOWPOS	src/gui_w48.c	/^typedef int LPWINDOWPOS;$/;"	t	file:
LPWORD	src/gui_w48.c	/^typedef int LPWORD;$/;"	t	file:
LPWSTR	src/os_mswin.c	/^typedef int LPWSTR;$/;"	t	file:
LPWSTR	src/os_win32.c	/^typedef char * LPWSTR;$/;"	t	file:
LPWSTR	src/proto.h	/^   typedef LPSTR LPWSTR;$/;"	t
LREPLACE	src/vim.h	686;"	d
LRESULT	src/gui_w48.c	/^typedef int LRESULT;$/;"	t	file:
LRESULT	src/os_mswin.c	/^typedef int LRESULT;$/;"	t	file:
LS	src/po/Make_mvc.mak	/^LS = dir$/;"	m
LSFLAGS	src/po/Make_mvc.mak	/^LSFLAGS = \/b \/on \/l \/s$/;"	m
LSIZE	src/vim.h	1422;"	d
LUAVIM_BUFFER	src/if_lua.c	/^static const char LUAVIM_BUFFER[] = "buffer";$/;"	v	file:
LUAVIM_CHUNKNAME	src/if_lua.c	23;"	d	file:
LUAVIM_FREE	src/if_lua.c	/^static const char LUAVIM_FREE[] = "luaV_free";$/;"	v	file:
LUAVIM_NAME	src/if_lua.c	24;"	d	file:
LUAVIM_WINDOW	src/if_lua.c	/^static const char LUAVIM_WINDOW[] = "window";$/;"	v	file:
LUA_CFLAGS	src/auto/config.mk	/^LUA_CFLAGS	= $/;"	m
LUA_INC	src/Make_mvc.mak	/^LUA_INC = \/I "$(LUA)\\include" \/I "$(LUA)"$/;"	m
LUA_LIB	src/Make_ming.mak	/^LUA_LIB = -L$(LUA)\/lib -llua$/;"	m
LUA_LIB	src/Make_mvc.mak	/^LUA_LIB = "$(LUA)\\lib\\lua$(LUA_VER).lib"$/;"	m
LUA_LIB	src/Make_mvc.mak	/^LUA_LIB = \/nodefaultlib:lua$(LUA_VER).lib$/;"	m
LUA_LIBS	src/auto/config.mk	/^LUA_LIBS	= $/;"	m
LUA_LIB_FLAG	src/Make_bc5.mak	/^LUA_LIB_FLAG = \/nodefaultlib:$/;"	m
LUA_OBJ	src/Make_mvc.mak	/^LUA_OBJ = $(OUTDIR)\\if_lua.obj$/;"	m
LUA_OBJ	src/auto/config.mk	/^LUA_OBJ		= $/;"	m
LUA_PRO	src/auto/config.mk	/^LUA_PRO		= $/;"	m
LUA_SRC	src/auto/config.mk	/^LUA_SRC		= $/;"	m
LUA_VER	src/Make_bc5.mak	/^LUA_VER = 51$/;"	m
LUA_VER	src/Make_cyg.mak	/^LUA_VER = 51$/;"	m
LUA_VER	src/Make_ming.mak	/^LUA_VER=51$/;"	m
LUA_VER	src/Make_mvc.mak	/^LUA_VER = 51$/;"	m
LUB	runtime/tutor/tutor.pl	/^	     LUB:	    <ESC> :wq<ENTER>  by zmiany zachowaæ.$/;"	l
L_MATCH	src/screen.c	5921;"	d	file:
L_NULL	src/hangulin.c	29;"	d	file:
L_SHOWFILE	src/ex_getln.c	3846;"	d	file:
Lab_IsMenupane	src/gui_xmebw.c	58;"	d	file:
LastActivity	src/gui_w32.c	/^static DWORD	    LastActivity = 0;$/;"	v	file:
LeadingWhiteSpace	runtime/indent/objc.vim	/^function s:LeadingWhiteSpace(line)$/;"	f
Leave	src/gui_xmebw.c	/^Leave(Widget wid,$/;"	f	file:	signature:(Widget wid, XEvent *event, String *params UNUSED, Cardinal *num_params UNUSED)
Leave	src/gui_xmebw.c	/^static void Leave(Widget, XEvent *, String *, Cardinal *);$/;"	p	file:	signature:(Widget, XEvent *, String *, Cardinal *)
Line	runtime/tools/ccfilter.c	/^char	       Line[LINELENGTH];$/;"	v
Line2	runtime/tools/ccfilter.c	/^char	       Line2[LINELENGTH];$/;"	v
LineHasOpeningBrackets	runtime/indent/ruby.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
LineNumber	src/testdir/test49.vim	/^    function! LineNumber()$/;"	f
LineOffset	src/globals.h	/^EXTERN unsigned	*LineOffset INIT(= NULL);$/;"	v
LineToString	src/if_python.c	/^LineToString(const char *str)$/;"	f	file:	signature:(const char *str)
LineToString	src/if_python.c	/^static PyObject *LineToString(const char *);$/;"	p	file:	signature:(const char *)
LineToString	src/if_python3.c	/^LineToString(const char *str)$/;"	f	file:	signature:(const char *str)
LineToString	src/if_python3.c	/^static PyObject *LineToString(const char *);$/;"	p	file:	signature:(const char *)
LineWraps	src/globals.h	/^EXTERN char_u	*LineWraps INIT(= NULL);	\/* line wraps to next line *\/$/;"	v
LinkerLocalOptsAtW16_gvim16dexe	src/Make_w16.mak	/^LinkerLocalOptsAtW16_gvim16dexe =\/Twe\/x\/l\/c\/C\/k\/Or\/Oc\/Oa\/Oi\/P=65535\/V3.10$/;"	m
ListSpecifier	src/gui_xmdlg.c	/^enum ListSpecifier$/;"	g	file:
LoadBufferMenu	runtime/menu.vim	/^  augroup LoadBufferMenu$/;"	a
LoadFTPlugin	runtime/ftplugin.vim	/^  func! s:LoadFTPlugin()$/;"	f
LoadIndent	runtime/indent.vim	/^  func! s:LoadIndent()$/;"	f
LoadVimSesn	runtime/menu.vim	/^fun! s:LoadVimSesn()$/;"	f
LoadXpmImage	src/xpm_w32.c	/^LoadXpmImage(filename, hImage, hShape)$/;"	f
LoadXpmImage	src/xpm_w32.h	/^int LoadXpmImage __ARGS((char *filename, HBITMAP *hImage, HBITMAP *hShape));$/;"	p	signature:(char *filename, HBITMAP *hImage, HBITMAP *hShape)
Load_annotation	runtime/ftplugin/ocaml.vim	/^    function! s:Load_annotation()$/;"	f
LocalBrowse	runtime/plugin/netrwPlugin.vim	/^fun! s:LocalBrowse(dirname)$/;"	f
LocalBrowseShellCmdRefresh	runtime/autoload/netrw.vim	/^fun! s:LocalBrowseShellCmdRefresh()$/;"	f
LocalFastBrowser	runtime/autoload/netrw.vim	/^fun! s:LocalFastBrowser()$/;"	f
LocalListing	runtime/autoload/netrw.vim	/^fun! s:LocalListing()$/;"	f
Locate_annotation	runtime/ftplugin/ocaml.vim	/^  function! s:Locate_annotation()$/;"	f
LockServer	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExtClassFactory::LockServer(BOOL  \/* fLock *\/)$/;"	f	class:CShellExtClassFactory	signature:(BOOL )
LockServer	src/GvimExt/gvimext.h	/^	STDMETHODIMP		LockServer(BOOL);$/;"	p	class:CShellExtClassFactory	access:public	signature:(BOOL)
LockServer	src/if_ole.cpp	/^    STDMETHOD(LockServer)(BOOL lock);$/;"	p	class:CVimCF	file:	access:public	signature:(BOOL lock)
LockServer	src/if_ole.cpp	/^CVimCF::LockServer(BOOL lock)$/;"	f	class:CVimCF	signature:(BOOL lock)
LookAhead	src/gui_at_sb.c	/^LookAhead(w, event)$/;"	f	file:
LookupName	runtime/tools/xcmdsrv_client.c	/^LookupName(dpy, name, delete, loose)$/;"	f	file:
LookupName	runtime/tools/xcmdsrv_client.c	/^static Window	LookupName __ARGS((Display *dpy, char *name,$/;"	p	file:	signature:(Display *dpy, char *name, int delete, char **loose)
LookupName	src/if_xcmdsrv.c	/^LookupName(dpy, name, delete, loose)$/;"	f	file:
LookupName	src/if_xcmdsrv.c	/^static Window	LookupName __ARGS((Display *dpy, char_u *name, int delete, char_u **loose));$/;"	p	file:	signature:(Display *dpy, char_u *name, int delete, char_u **loose)
M	runtime/macros/hanoi/hanoi.vim	/^map M dG$/;"	m
M	runtime/macros/maze/maze.c	/^char*M,A,Z,E=40,J[40],T[40];main(C){for(*J=A=scanf(M="%d",&C);$/;"	v
M	runtime/macros/maze/mazeansi.c	/^char*M,A,Z,E=40,J[80],T[3];main(C){for(M=J+E,*J=A=scanf("%d",&$/;"	v
M	runtime/macros/maze/mazeclean.c	/^char *M, A, Z, E = 40, line[80], T[3];$/;"	v
M	src/testdir/test49.vim	/^function! M()$/;"	f
M4FLAGSX	src/Makefile	/^M4FLAGSX = $(M4FLAGS) -DAPP_EXE=$(VIMNAME) -DAPP_NAME=$(VIMNAME) \\$/;"	m
MACOS	src/vim.h	102;"	d
MACOS_CLASSIC	src/vim.h	90;"	d
MACOS_CONVERT	src/vim.h	228;"	d
MACOS_X	src/vim.h	93;"	d
MACROSOURCE	src/Makefile	/^MACROSOURCE = ..\/runtime\/macros$/;"	m
MACROSUBDIR	src/Makefile	/^MACROSUBDIR = \/macros$/;"	m
MACROSUBLOC	src/Makefile	/^MACROSUBLOC	= $(VIMRTLOC)$(MACROSUBDIR)$/;"	m
MAD	src/farsi.h	158;"	d
MAD_N	src/farsi.h	161;"	d
MAGIC_ALL	src/regexp.c	601;"	d	file:
MAGIC_NONE	src/regexp.c	598;"	d	file:
MAGIC_OFF	src/regexp.c	599;"	d	file:
MAGIC_ON	src/regexp.c	600;"	d	file:
MAJOR	Makefile	/^MAJOR = 7$/;"	m
MAJORVER	src/if_ole.cpp	78;"	d	file:
MAKE	src/Make_bc5.mak	/^MAKE = $(BOR)\\bin\\make$/;"	m
MAKEFLAGS_GVIMEXT	src/Make_mvc.mak	/^MAKEFLAGS_GVIMEXT = DEBUG=yes$/;"	m
MAKEMO	src/auto/config.mk	/^MAKEMO		= yes$/;"	m
MAN1DIR	src/Makefile	/^MAN1DIR = \/man1$/;"	m
MANDIR	src/auto/config.mk	/^MANDIR		= ${datarootdir}\/man$/;"	m
MANMOD	src/Makefile	/^MANMOD = 644$/;"	m
MAP_ALL_MODES	src/vim.h	698;"	d
MAP_HASH	src/getchar.c	66;"	d	file:
MARGIN	src/gui_at_sb.c	232;"	d	file:
MATCH	src/regexp.c	152;"	d	file:
MATCH	src/testdir/test49.vim	/^function! MATCH(expected, msg, enr, emsg)$/;"	f
MAUTO	src/vim.h	1405;"	d
MAX	src/gui.h	26;"	d
MAX	src/gui_gtk.c	37;"	d	file:
MAX	src/integration.c	72;"	d	file:
MAX	src/vim.h	2124;"	d
MAXCOL	src/vim.h	1578;"	d
MAXCOL	src/vim.h	1580;"	d
MAXCOL	src/vim.h	1583;"	d
MAXENVLEN	src/os_msdos.c	3021;"	d	file:
MAXITEMCNT	src/spell.c	5167;"	d	file:
MAXKEYWLEN	src/syntax.c	188;"	d	file:
MAXLINELEN	src/spell.c	4782;"	d	file:
MAXLNUM	src/vim.h	1565;"	d
MAXMAPLEN	src/vim.h	1445;"	d
MAXMSGSIZE	src/netbeans.c	698;"	d	file:
MAXNAMLEN	src/os_unix.h	166;"	d
MAXNAMLEN	src/os_unix.h	170;"	d
MAXNAMLEN	src/os_unix.h	174;"	d
MAXNAMLEN	src/os_unix.h	182;"	d
MAXPATHL	src/os_mac.h	222;"	d
MAXPATHL	src/os_riscos.h	136;"	d
MAXPATHL	src/os_unix.h	438;"	d
MAXPATHL	src/os_unix.h	440;"	d
MAXPATHL	src/os_win32.h	113;"	d
MAXPATHL	src/vim.h	364;"	d
MAXSCORE	src/spell.c	82;"	d	file:
MAXSUFLEN	src/misc1.c	8664;"	d	file:
MAXWLEN	src/spell.c	318;"	d	file:
MAXWORDCOUNT	src/spell.c	589;"	d	file:
MAX_ARG_CMDS	src/main.c	31;"	d	file:
MAX_CLSID_LEN	src/if_ole.cpp	86;"	d	file:
MAX_COLOR_LENGTH	src/netbeans.c	70;"	d	file:
MAX_DISPLAY_SIZE	src/gui_xmdlg.c	86;"	d	file:
MAX_ENTRIES_IN_LIST	src/gui_xmdlg.c	85;"	d	file:
MAX_FONTS	src/gui_xmdlg.c	83;"	d	file:
MAX_FONT_NAME_LEN	src/gui_xmdlg.c	84;"	d	file:
MAX_FUNC_ARGS	src/eval.c	228;"	d	file:
MAX_HWND	src/GvimExt/gvimext.h	107;"	d
MAX_KEY_CODE_LEN	src/keymap.h	491;"	d
MAX_KEY_NAME_LEN	src/keymap.h	481;"	d
MAX_LEVEL	src/fold.c	43;"	d	file:
MAX_LIMIT	src/regexp.c	333;"	d	file:
MAX_MCO	src/vim.h	1680;"	d
MAX_MSG_HIST_LEN	src/feature.h	133;"	d
MAX_MSG_HIST_LEN	src/feature.h	135;"	d
MAX_NAME_LENGTH	src/if_xcmdsrv.c	246;"	d	file:
MAX_OLE_STR	src/VisVim/OleAut.h	58;"	d
MAX_OLE_STR	src/VisVim/OleAut.h	69;"	d
MAX_PROP_WORDS	runtime/tools/xcmdsrv_client.c	67;"	d	file:
MAX_PROP_WORDS	src/if_xcmdsrv.c	160;"	d	file:
MAX_REQUEST_LEN	src/if_sniff.c	30;"	d	file:
MAX_SWAP_PAGE_SIZE	src/vim.h	1194;"	d
MAX_TYPENR	src/vim.h	433;"	d
MAX_TYPENR	src/vim.h	436;"	d
MAYBE	src/vim.h	1360;"	d
MAY_FORK	src/gui.c	63;"	d	file:
MAY_LOOP	src/os_unix.c	4792;"	d	file:
MBDEFINES	src/Make_bc5.mak	/^MBDEFINES = $(MBDEFINES) -DDYNAMIC_GETTEXT$/;"	m
MBDEFINES	src/Make_bc5.mak	/^MBDEFINES = $(MBDEFINES) -DDYNAMIC_ICONV$/;"	m
MBDEFINES	src/Make_bc5.mak	/^MBDEFINES = $(MBDEFINES) -DDYNAMIC_IME$/;"	m
MBDEFINES	src/Make_bc5.mak	/^MBDEFINES = $(MBDEFINES) -DFEAT_MBYTE$/;"	m
MBDEFINES	src/Make_bc5.mak	/^MBDEFINES = $(MBDEFINES) -DFEAT_MBYTE_IME$/;"	m
MBLOCK	src/vim.h	1403;"	d
MBYTE	src/Make_bc5.mak	/^MBYTE = yes$/;"	m
MBYTE	src/Make_cyg.mak	/^MBYTE = yes$/;"	m
MBYTE	src/Make_ming.mak	/^MBYTE=yes$/;"	m
MBYTE	src/Make_mvc.mak	/^MBYTE = yes$/;"	m
MB_BYTE2LEN	src/vim.h	2020;"	d
MB_BYTE2LEN_CHECK	src/vim.h	2021;"	d
MB_CHARLEN	src/macros.h	272;"	d
MB_CHARLEN	src/macros.h	279;"	d
MB_COPY_CHAR	src/macros.h	271;"	d
MB_COPY_CHAR	src/macros.h	278;"	d
MB_ISLOWER	src/macros.h	91;"	d
MB_ISLOWER	src/macros.h	96;"	d
MB_ISUPPER	src/macros.h	92;"	d
MB_ISUPPER	src/macros.h	97;"	d
MB_MAXBYTES	src/vim.h	1685;"	d
MB_STRICMP	src/vim.h	1524;"	d
MB_STRICMP	src/vim.h	1527;"	d
MB_STRNICMP	src/vim.h	1525;"	d
MB_STRNICMP	src/vim.h	1528;"	d
MB_TOLOWER	src/macros.h	93;"	d
MB_TOLOWER	src/macros.h	98;"	d
MB_TOUPPER	src/macros.h	94;"	d
MB_TOUPPER	src/macros.h	99;"	d
MCHAR	src/vim.h	1401;"	d
MCH_CURSOR_SHAPE	src/feature.h	1157;"	d
MCLOSE	src/regexp.c	206;"	d	file:
MEMFILE_PAGE_SIZE	src/memfile.c	72;"	d	file:
MEMHASH	src/structs.h	507;"	d
MEMHASHSIZE	src/structs.h	506;"	d
MEMORYTYPE	src/Make_sas.mak	/^MEMORYTYPE=ANY$/;"	m
MEMSIZE	src/Make_sas.mak	/^MEMSIZE=LARGE$/;"	m
MEM_SIZES	src/misc2.c	692;"	d	file:
MENUDEPTH	src/menu.c	19;"	d	file:
MENUHINTS	src/gui_w48.c	48;"	d	file:
MENU_ALL_MODES	src/structs.h	2266;"	d
MENU_CMDLINE_MODE	src/structs.h	2264;"	d
MENU_DEFAULT_HEIGHT	src/gui.h	140;"	d
MENU_INC	src/workshop.c	88;"	d	file:
MENU_INDEX_CMDLINE	src/structs.h	2254;"	d
MENU_INDEX_INSERT	src/structs.h	2253;"	d
MENU_INDEX_INVALID	src/structs.h	2248;"	d
MENU_INDEX_NORMAL	src/structs.h	2249;"	d
MENU_INDEX_OP_PENDING	src/structs.h	2252;"	d
MENU_INDEX_SELECT	src/structs.h	2251;"	d
MENU_INDEX_TIP	src/structs.h	2255;"	d
MENU_INDEX_VISUAL	src/structs.h	2250;"	d
MENU_INSERT_MODE	src/structs.h	2263;"	d
MENU_MODES	src/structs.h	2256;"	d
MENU_NORMAL_MODE	src/structs.h	2259;"	d
MENU_OP_PENDING_MODE	src/structs.h	2262;"	d
MENU_SELECT_MODE	src/structs.h	2261;"	d
MENU_TIP_MODE	src/structs.h	2265;"	d
MENU_VISUAL_MODE	src/structs.h	2260;"	d
MESSAGES	src/testdir/test49.vim	/^function! MESSAGES(...)$/;"	f
MESSAGE_FILE	src/message.c	14;"	d	file:
META	src/regexp.c	/^static char_u META[] = "%&()*+.123456789<=>?@ACDFHIKLMOPSUVWX[_acdfhiklmnopsuvwxz{|~";$/;"	v	file:
META_flags	src/regexp.c	/^static char_u META_flags[] = {$/;"	v	file:
ME_ARG_MISSING	src/main.c	143;"	d	file:
ME_EXTRA_CMD	src/main.c	147;"	d	file:
ME_GARBAGE	src/main.c	145;"	d	file:
ME_INVALID_ARG	src/main.c	149;"	d	file:
ME_TOO_MANY_ARGS	src/main.c	141;"	d	file:
ME_UNKNOWN_OPTION	src/main.c	139;"	d	file:
MFS_ALL	src/vim.h	1036;"	d
MFS_FLUSH	src/vim.h	1038;"	d
MFS_STOP	src/vim.h	1037;"	d
MFS_ZERO	src/vim.h	1039;"	d
MF_SEED_LEN	src/structs.h	508;"	d
MIDL_user_allocate	src/if_ole.h	/^void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);$/;"	p	signature:(size_t)
MIDL_user_free	src/if_ole.h	/^void __RPC_USER MIDL_user_free( void __RPC_FAR * );$/;"	p	signature:( void __RPC_FAR * )
MIM	src/farsi.h	138;"	d
MIN	src/fileio.c	3087;"	d	file:
MIN	src/gui.h	29;"	d
MIN	src/gui_gtk.c	34;"	d	file:
MIN	src/vim.h	2127;"	d
MINGWOLD	src/GvimExt/Make_ming.mak	/^MINGWOLD = no$/;"	m
MINIMAL_SIZE	src/getchar.c	41;"	d	file:
MINOR	Makefile	/^MINOR = 3$/;"	m
MINORVER	src/if_ole.cpp	79;"	d	file:
MIN_COLUMNS	src/vim.h	1410;"	d
MIN_LINES	src/vim.h	1411;"	d
MIN_SPACE	src/edit.c	4803;"	d	file:
MIN_STACK_WIN9X	src/os_win32.c	4870;"	d	file:
MIN_STACK_WINNT	src/os_win32.c	4871;"	d	file:
MIN_SWAP_PAGE_SIZE	src/vim.h	1193;"	d
MKD	src/po/Make_cyg.mak	/^MKD = mkdir -p$/;"	m
MKD	src/po/Make_ming.mak	/^MKD = mkdir$/;"	m
MKD	src/po/Make_mvc.mak	/^MKD = mkdir$/;"	m
MKDIR	src/Make_cyg.mak	/^MKDIR = mkdir -p$/;"	m
MKDIR	src/Make_cyg.mak	/^MKDIR = mkdir$/;"	m
MKDIR	src/Make_ming.mak	/^MKDIR = mkdir -p$/;"	m
MKDIR	src/Make_ming.mak	/^MKDIR = mkdir$/;"	m
MKSESSION_NL	src/ex_docmd.c	8770;"	d	file:
MK_XBUTTON1	src/gui_w48.c	72;"	d	file:
MK_XBUTTON2	src/gui_w48.c	73;"	d	file:
MLCS_MAXL	src/memline.c	4922;"	d	file:
MLCS_MINL	src/memline.c	4923;"	d	file:
MLINE	src/vim.h	1402;"	d
ML_CHNK_ADDLINE	src/structs.h	565;"	d
ML_CHNK_DELLINE	src/structs.h	566;"	d
ML_CHNK_UPDLINE	src/structs.h	567;"	d
ML_DELETE	src/memline.c	223;"	d	file:
ML_EMPTY	src/structs.h	579;"	d
ML_EXTRA	src/tag.c	2216;"	d	file:
ML_FIND	src/memline.c	225;"	d	file:
ML_FLUSH	src/memline.c	226;"	d	file:
ML_HELP_LEN	src/tag.c	2234;"	d	file:
ML_INSERT	src/memline.c	224;"	d	file:
ML_LINE_DIRTY	src/structs.h	580;"	d
ML_LOCKED_DIRTY	src/structs.h	581;"	d
ML_LOCKED_POS	src/structs.h	582;"	d
ML_SIMPLE	src/memline.c	227;"	d	file:
MNU_HIDDEN_CHAR	src/structs.h	2270;"	d
MODBY_LEN	src/version.c	1245;"	d	file:
MODIFY	src/ex_cmds.h	55;"	d
MOD_KEYS_ENTRY_SIZE	src/misc2.c	2147;"	d	file:
MOD_MASK_2CLICK	src/keymap.h	468;"	d
MOD_MASK_3CLICK	src/keymap.h	469;"	d
MOD_MASK_4CLICK	src/keymap.h	470;"	d
MOD_MASK_ALT	src/keymap.h	466;"	d
MOD_MASK_CMD	src/keymap.h	472;"	d
MOD_MASK_CTRL	src/keymap.h	465;"	d
MOD_MASK_META	src/keymap.h	467;"	d
MOD_MASK_MULTI_CLICK	src/keymap.h	475;"	d
MOD_MASK_SHIFT	src/keymap.h	464;"	d
MOFILES	src/po/Make_cyg.mak	/^MOFILES =	af.mo \\$/;"	m
MOFILES	src/po/Make_ming.mak	/^MOFILES = \\$/;"	m
MOFILES	src/po/Make_mvc.mak	/^MOFILES = \\$/;"	m
MOFILES	src/po/Makefile	/^MOFILES = \\$/;"	m
MOPEN	src/regexp.c	203;"	d	file:
MOTIF_BUNDLE	src/Makefile	/^MOTIF_BUNDLE	=$/;"	m
MOTIF_DEFS	src/Makefile	/^MOTIF_DEFS	= -DFEAT_GUI_MOTIF $(NARROW_PROTO)$/;"	m
MOTIF_INSTALL	src/Makefile	/^MOTIF_INSTALL   = install_normal install_gui_extra$/;"	m
MOTIF_IPATH	src/Makefile	/^MOTIF_IPATH	= $(GUI_INC_LOC)$/;"	m
MOTIF_LIBNAME	src/auto/config.mk	/^MOTIF_LIBNAME	= $/;"	m
MOTIF_LIBS1	src/Makefile	/^MOTIF_LIBS1	=$/;"	m
MOTIF_LIBS2	src/Makefile	/^MOTIF_LIBS2	= $(MOTIF_LIBNAME) -lXt$/;"	m
MOTIF_LIBS_DIR	src/Makefile	/^MOTIF_LIBS_DIR	= $(GUI_LIB_LOC)$/;"	m
MOTIF_MAN_TARGETS	src/Makefile	/^MOTIF_MAN_TARGETS = yes$/;"	m
MOTIF_OBJ	src/Makefile	/^MOTIF_OBJ	= objects\/gui.o objects\/gui_motif.o objects\/gui_x11.o \\$/;"	m
MOTIF_POPUP	src/gui_motif.c	59;"	d	file:
MOTIF_SRC	src/Makefile	/^MOTIF_SRC	= gui.c gui_motif.c gui_x11.c pty.c gui_beval.c \\$/;"	m
MOTIF_TARGETS	src/Makefile	/^MOTIF_TARGETS	= installglinks$/;"	m
MOTIF_TESTTARGET	src/Makefile	/^MOTIF_TESTTARGET = gui$/;"	m
MOUSEWHEEL_LOW	src/vim.h	1743;"	d
MOUSE_4	src/vim.h	1728;"	d
MOUSE_5	src/vim.h	1729;"	d
MOUSE_6	src/vim.h	1734;"	d
MOUSE_7	src/vim.h	1735;"	d
MOUSE_A	src/option.h	187;"	d
MOUSE_ALL	src/option.h	188;"	d
MOUSE_ALT	src/vim.h	1721;"	d
MOUSE_CLICK_MASK	src/vim.h	1745;"	d
MOUSE_COLOFF	src/vim.h	1756;"	d
MOUSE_COMMAND	src/option.h	184;"	d
MOUSE_CTRL	src/vim.h	1722;"	d
MOUSE_DID_MOVE	src/vim.h	1774;"	d
MOUSE_DRAG	src/vim.h	1740;"	d
MOUSE_DRAG_XTERM	src/vim.h	1738;"	d
MOUSE_EVENT_RECORD	src/os_mswin.c	/^typedef int MOUSE_EVENT_RECORD;$/;"	t	file:
MOUSE_EVENT_RECORD	src/os_win16.c	/^typedef int MOUSE_EVENT_RECORD;$/;"	t	file:
MOUSE_EVENT_RECORD	src/os_win32.c	/^typedef int MOUSE_EVENT_RECORD;$/;"	t	file:
MOUSE_FOCUS	src/vim.h	1772;"	d
MOUSE_FOLD_CLOSE	src/vim.h	1768;"	d
MOUSE_FOLD_OPEN	src/vim.h	1769;"	d
MOUSE_HELP	src/option.h	185;"	d
MOUSE_HIDE	src/gui_photon.c	40;"	d	file:
MOUSE_INSERT	src/option.h	183;"	d
MOUSE_LEFT	src/vim.h	1714;"	d
MOUSE_MAY_STOP_VIS	src/vim.h	1776;"	d
MOUSE_MAY_VIS	src/vim.h	1773;"	d
MOUSE_MIDDLE	src/vim.h	1715;"	d
MOUSE_MOVED	src/os_mswin.c	83;"	d	file:
MOUSE_MOVED	src/os_win32.c	70;"	d	file:
MOUSE_NONE	src/option.h	189;"	d
MOUSE_NONEF	src/option.h	190;"	d
MOUSE_NORMAL	src/option.h	181;"	d
MOUSE_RELEASE	src/vim.h	1717;"	d
MOUSE_RELEASED	src/vim.h	1777;"	d
MOUSE_RETURN	src/option.h	186;"	d
MOUSE_RIGHT	src/vim.h	1716;"	d
MOUSE_SETPOS	src/vim.h	1775;"	d
MOUSE_SHIFT	src/vim.h	1720;"	d
MOUSE_SHOW	src/gui_photon.c	41;"	d	file:
MOUSE_VISUAL	src/option.h	182;"	d
MOUSE_X1	src/vim.h	1731;"	d
MOUSE_X2	src/vim.h	1732;"	d
MP	src/os_amiga.c	955;"	d	file:
MSCR_DOWN	src/vim.h	2191;"	d
MSCR_LEFT	src/vim.h	2193;"	d
MSCR_RIGHT	src/vim.h	2194;"	d
MSCR_UP	src/vim.h	2192;"	d
MSDOS	src/xxd/xxd.c	78;"	d	file:
MSDOS_MOUSE_LEFT	src/os_msdos.h	90;"	d
MSDOS_MOUSE_MIDDLE	src/os_msdos.h	92;"	d
MSDOS_MOUSE_RIGHT	src/os_msdos.h	91;"	d
MSG	src/Make_bc5.mak	/^MSG = $(MSG) Align=$(ALIGNARG)$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) CODEGUARD$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) CSCOPE$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) DEBUG$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) FASTCALL$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) GETTEXT$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) GUI$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) ICONV$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) IME$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) LUA$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) MBYTE$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) NETBEANS$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) OLE$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) PERL$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) PYTHON$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) PYTHON3$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) RUBY$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) TCL$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) USEDLL$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) VIMDLL$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) XPM$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG) cpu=$(CPUARG)$/;"	m
MSG	src/Make_bc5.mak	/^MSG = $(MSG)(dynamic)$/;"	m
MSG	src/Make_bc5.mak	/^MSG = Compiling $(OSTYPE) $(TARGET) $(OLETARGET), with:$/;"	m
MSG	src/gui_w48.c	/^typedef int MSG;$/;"	t	file:
MSG	src/gui_w48.c	109;"	d	file:
MSG	src/testdir/test49.vim	/^    function! MSG(n)$/;"	f
MSG	src/testdir/test49.vim	/^    function! MSG(n, enr, emsg)$/;"	f
MSG	src/testdir/test49.vim	/^function! MSG(enr, emsg)$/;"	f
MSG	src/vim.h	1538;"	d
MSGFMT	src/po/Make_cyg.mak	/^MSGFMT = OLD_PO_FILE_INPUT=yes $(GETTEXT_PATH)msgfmt -v$/;"	m
MSGFMT	src/po/Make_ming.mak	/^MSGFMT = $(GETTEXT_PATH)msgfmt$/;"	m
MSGFMT	src/po/Make_mvc.mak	/^MSGFMT = $(GETTEXT_PATH)\\msgfmt$/;"	m
MSGFMT	src/po/Makefile	/^MSGFMT = OLD_PO_FILE_INPUT=yes msgfmt -v$/;"	m
MSGMERGE	src/po/Make_cyg.mak	/^MSGMERGE = OLD_PO_FILE_INPUT=yes OLD_PO_FILE_OUTPUT=yes $(GETTEXT_PATH)msgmerge$/;"	m
MSGMERGE	src/po/Make_ming.mak	/^MSGMERGE = $(GETTEXT_PATH)msgmerge$/;"	m
MSGMERGE	src/po/Make_mvc.mak	/^MSGMERGE = $(GETTEXT_PATH)\\msgmerge$/;"	m
MSGMERGE	src/po/Makefile	/^MSGMERGE = OLD_PO_FILE_INPUT=yes OLD_PO_FILE_OUTPUT=yes msgmerge$/;"	m
MSG_ATTR	src/vim.h	1539;"	d
MSG_BUF_CLEN	src/vim.h	1428;"	d
MSG_BUF_CLEN	src/vim.h	1432;"	d
MSG_BUF_LEN	src/vim.h	1427;"	d
MSG_BUF_LEN	src/vim.h	1431;"	d
MSG_HIST	src/vim.h	661;"	d
MSG_PUTS	src/vim.h	1547;"	d
MSG_PUTS_ATTR	src/vim.h	1548;"	d
MSG_PUTS_LONG	src/vim.h	1550;"	d
MSG_PUTS_LONG_ATTR	src/vim.h	1551;"	d
MSG_PUTS_TITLE	src/vim.h	1549;"	d
MSHAPE_HIDE	src/structs.h	2225;"	d
MSHAPE_NUMBERED	src/structs.h	2224;"	d
MSVCVER	src/Make_mvc.mak	/^MSVCVER = 10.0$/;"	m
MSVCVER	src/Make_mvc.mak	/^MSVCVER = 4.0$/;"	m
MSVCVER	src/Make_mvc.mak	/^MSVCVER = 5.0$/;"	m
MSVCVER	src/Make_mvc.mak	/^MSVCVER = 6.0$/;"	m
MSVCVER	src/Make_mvc.mak	/^MSVCVER = 7.0$/;"	m
MSVCVER	src/Make_mvc.mak	/^MSVCVER = 7.1$/;"	m
MSVCVER	src/Make_mvc.mak	/^MSVCVER = 8.0$/;"	m
MSVCVER	src/Make_mvc.mak	/^MSVCVER = 9.0$/;"	m
MSVCVer	src/msvcsetup.bat	/^set MSVCVer=7.1$/;"	v
MSWIN	src/vim.h	134;"	d
MSWIN_FILE	src/Makefile	/^MSWIN_FILE	= $(DESTDIR)$(SCRIPTLOC)\/mswin.vim$/;"	m
MSWIN_FIND_REPLACE	src/feature.h	1124;"	d
MSWIN_FR_BUFSIZE	src/feature.h	1125;"	d
MTL_PROJ	src/VisVim/VisVim.mak	/^MTL_PROJ= \/D "_DEBUG"$/;"	m
MT_COUNT	src/tag.c	58;"	d	file:
MT_GL_CUR	src/tag.c	48;"	d	file:
MT_GL_OTH	src/tag.c	49;"	d	file:
MT_IC_GL_CUR	src/tag.c	52;"	d	file:
MT_IC_GL_OTH	src/tag.c	53;"	d	file:
MT_IC_OFF	src/tag.c	55;"	d	file:
MT_IC_ST_CUR	src/tag.c	51;"	d	file:
MT_IC_ST_OTH	src/tag.c	54;"	d	file:
MT_MASK	src/tag.c	57;"	d	file:
MT_RE_OFF	src/tag.c	56;"	d	file:
MT_ST_CUR	src/tag.c	47;"	d	file:
MT_ST_OTH	src/tag.c	50;"	d	file:
MULTIBYTECODE	src/regexp.c	223;"	d	file:
MULTISIGN_BYTE	src/vim.h	2077;"	d
MULTITHREADED	src/Make_mvc.mak	/^MULTITHREADED = yes$/;"	m
MULTI_MULT	src/regexp.c	346;"	d	file:
MULTI_ONE	src/regexp.c	345;"	d	file:
MV	src/po/Make_cyg.mak	/^MV = mv -f$/;"	m
MV	src/po/Make_ming.mak	/^MV = move$/;"	m
MV	src/po/Make_mvc.mak	/^MV = move$/;"	m
MV	src/testdir/Make_ming.mak	/^MV = mv$/;"	m
MV	src/testdir/Make_ming.mak	/^MV = rename$/;"	m
MYCLSID	src/if_ole.cpp	74;"	d	file:
MYIID	src/if_ole.cpp	76;"	d	file:
MYINTPROCINT	src/os_mswin.c	/^typedef int (*MYINTPROCINT)(int);$/;"	t	file:
MYINTPROCSTR	src/os_mswin.c	/^typedef LPSTR (*MYINTPROCSTR)(int);$/;"	t	file:
MYINTPROCSTR	src/os_mswin.c	/^typedef LPTSTR (*MYINTPROCSTR)(int);$/;"	t	file:
MYLIBID	src/if_ole.cpp	75;"	d	file:
MYNAME	src/if_ole.cpp	82;"	d	file:
MYPROGID	src/if_ole.cpp	83;"	d	file:
MYRESETSTKOFLW	src/os_win32.h	138;"	d
MYSTRPROCINT	src/os_mswin.c	/^typedef int (*MYSTRPROCINT)(LPSTR);$/;"	t	file:
MYSTRPROCINT	src/os_mswin.c	/^typedef int (*MYSTRPROCINT)(LPTSTR);$/;"	t	file:
MYSTRPROCSTR	src/os_mswin.c	/^typedef LPSTR (*MYSTRPROCSTR)(LPSTR);$/;"	t	file:
MYSTRPROCSTR	src/os_mswin.c	/^typedef LPTSTR (*MYSTRPROCSTR)(LPTSTR);$/;"	t	file:
MYVIPROGID	src/if_ole.cpp	84;"	d	file:
MY_BUFSIZE	src/os_mswin.c	1679;"	d	file:
MZSCHEME_CFLAGS	src/auto/config.mk	/^MZSCHEME_CFLAGS	= $/;"	m
MZSCHEME_DLLS	src/Make_cyg.mak	/^MZSCHEME_DLLS = $(MZSCHEME)$/;"	m
MZSCHEME_DLLS	src/Make_ming.mak	/^MZSCHEME_DLLS=$(MZSCHEME)$/;"	m
MZSCHEME_EXTRA	src/auto/config.mk	/^MZSCHEME_EXTRA  = $/;"	m
MZSCHEME_EXTRA_DEP	src/Make_mvc.mak	/^MZSCHEME_EXTRA_DEP = mzscheme_base.c$/;"	m
MZSCHEME_GENERATE_BASE	src/Make_cyg.mak	/^MZSCHEME_GENERATE_BASE=no$/;"	m
MZSCHEME_GENERATE_BASE	src/Make_ming.mak	/^MZSCHEME_GENERATE_BASE=no$/;"	m
MZSCHEME_GUI_THREADS	src/feature.h	1179;"	d
MZSCHEME_INCL	src/Make_ming.mak	/^MZSCHEME_INCL = if_mzsch.h$/;"	m
MZSCHEME_LIB	src/Make_cyg.mak	/^MZSCHEME_LIB = -lmzsch$(MZSCHEME_VER) -lmzgc$(MZSCHEME_VER)$/;"	m
MZSCHEME_LIB	src/Make_cyg.mak	/^MZSCHEME_LIB=-lmzsch$(MZSCHEME_VER)$/;"	m
MZSCHEME_LIB	src/Make_ming.mak	/^MZSCHEME_LIB = -lmzsch$(MZSCHEME_VER) -lmzgc$(MZSCHEME_VER)$/;"	m
MZSCHEME_LIB	src/Make_ming.mak	/^MZSCHEME_LIB=-lmzsch$(MZSCHEME_VER)$/;"	m
MZSCHEME_LIB	src/Make_mvc.mak	/^MZSCHEME_LIB = $(MZSCHEME)\\lib\\msvc\\libmzgc$(MZSCHEME_VER).lib \\$/;"	m
MZSCHEME_LIB	src/Make_mvc.mak	/^MZSCHEME_LIB = $(MZSCHEME)\\lib\\msvc\\libmzsch$(MZSCHEME_VER).lib$/;"	m
MZSCHEME_LIBDIR	src/Make_ming.mak	/^MZSCHEME_LIBDIR=-L$(MZSCHEME_DLLS) -L$(MZSCHEME_DLLS)\\lib$/;"	m
MZSCHEME_LIBS	src/auto/config.mk	/^MZSCHEME_LIBS	= $/;"	m
MZSCHEME_MZC	src/auto/config.mk	/^MZSCHEME_MZC	= $/;"	m
MZSCHEME_OBJ	src/Make_mvc.mak	/^MZSCHEME_OBJ = $(OUTDIR)\\if_mzsch.obj$/;"	m
MZSCHEME_OBJ	src/auto/config.mk	/^MZSCHEME_OBJ	= $/;"	m
MZSCHEME_PRECISE_GC	src/Make_cyg.mak	/^MZSCHEME_PRECISE_GC=no$/;"	m
MZSCHEME_PRECISE_GC	src/Make_ming.mak	/^MZSCHEME_PRECISE_GC=no$/;"	m
MZSCHEME_PRECISE_GC	src/Make_mvc.mak	/^MZSCHEME_PRECISE_GC = yes$/;"	m
MZSCHEME_PRO	src/auto/config.mk	/^MZSCHEME_PRO	= $/;"	m
MZSCHEME_SRC	src/auto/config.mk	/^MZSCHEME_SRC	= $/;"	m
MZSCHEME_SUFFIX	src/Make_ming.mak	/^MZSCHEME_SUFFIX = Z$/;"	m
MZSCHEME_VER	src/Make_cyg.mak	/^MZSCHEME_VER = 209_000$/;"	m
MZSCHEME_VER	src/Make_ming.mak	/^MZSCHEME_VER=205_000$/;"	m
MZSCHEME_VER	src/Make_mvc.mak	/^MZSCHEME_VER = 205_000$/;"	m
MZ_GC_ARRAY_VAR_IN_REG	src/if_mzsch.h	58;"	d
MZ_GC_CHECK	src/if_mzsch.h	72;"	d
MZ_GC_CHECK	src/if_mzsch.h	74;"	d
MZ_GC_DECL_REG	src/if_mzsch.h	52;"	d
MZ_GC_REG	src/if_mzsch.h	61;"	d
MZ_GC_UNREG	src/if_mzsch.h	64;"	d
MZ_GC_VAR_IN_REG	src/if_mzsch.h	55;"	d
M_NULL	src/hangulin.c	28;"	d	file:
M_delete	src/if_mzsch.c	/^static Scheme_Object *M_delete = NULL;$/;"	v	file:
M_execute	src/if_mzsch.c	/^static Scheme_Object *M_execute = NULL;$/;"	v	file:
M_global	src/if_mzsch.c	/^static Scheme_Object *M_global = NULL;$/;"	v	file:
M_read	src/if_mzsch.c	/^static Scheme_Object *M_read = NULL;$/;"	v	file:
M_write	src/if_mzsch.c	/^static Scheme_Object *M_write = NULL;$/;"	v	file:
MacOSHelpItems	src/gui.h	/^    int		MacOSHelpItems;	    \/* Nr of help-items supplied by MacOS *\/$/;"	m	struct:Gui	access:public
MacOSHelpMenu	src/gui.h	/^    MenuHandle	MacOSHelpMenu;	    \/* Help menu provided by the MacOS *\/$/;"	m	struct:Gui	access:public
Magic	src/regexp.c	240;"	d	file:
MainBlockIndent	runtime/indent/ada.vim	/^function s:MainBlockIndent (prev_indent, prev_lnum, blockstart, stop_at)$/;"	f
MakeMenu	runtime/ftplugin/debchangelog.vim	/^function <SID>MakeMenu()$/;"	f
MakeScript	src/testdir/test49.vim	/^function! MakeScript(funcname, ...)$/;"	f
MakeSshCmd	runtime/autoload/netrw.vim	/^fun! s:MakeSshCmd(sshcmd)$/;"	f
MakeTag	runtime/tools/pltags.pl	/^sub MakeTag($$$$$)$/;"	s
Man	runtime/ftplugin/man.vim	/^  com -nargs=+ Man call s:GetPage(<f-args>)$/;"	c
Match	runtime/indent/ruby.vim	/^function s:Match(lnum, regex)$/;"	f
MatchCount	runtime/indent/pov.vim	/^function! s:MatchCount(line, rexp)$/;"	f
MatchDebug	runtime/macros/matchit.vim	/^  command! -nargs=0 MatchDebug call s:Match_debug()$/;"	c
MatchLast	runtime/indent/ruby.vim	/^function s:MatchLast(lnum, regex)$/;"	f
Match_borders	runtime/ftplugin/ocaml.vim	/^    function! s:Match_borders(mode)$/;"	f
Match_data	runtime/ftplugin/ocaml.vim	/^    function! s:Match_data()$/;"	f
Match_debug	runtime/macros/matchit.vim	/^fun! s:Match_debug()$/;"	f
Match_wrapper	runtime/macros/matchit.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	f
McSetf	runtime/filetype.vim	/^func! s:McSetf()$/;"	f
MenuExplOpen	runtime/menu.vim	/^    fun MenuExplOpen()$/;"	f
MenuMap	src/workshop.c	/^} MenuMap;$/;"	t	typeref:struct:__anon106	file:
Messaging_WndProc	src/os_mswin.c	/^Messaging_WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f	file:	signature:(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
Meta	src/ascii.h	45;"	d
MetaChar	src/ascii.h	171;"	d
MetaCharTable	src/os_unix.c	/^char MetaCharTable[]=$/;"	v
MetaNextNonblankNoncomment	runtime/indent/mp.vim	/^function! MetaNextNonblankNoncomment(pos)$/;"	f
MetaPrevNonblankNoncomment	runtime/indent/mp.vim	/^function! MetaPrevNonblankNoncomment(pos)$/;"	f
MetaSearchNoncomment	runtime/indent/mp.vim	/^function! MetaSearchNoncomment(pattern, ...)$/;"	f
Method	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::Method (DISPID DispatchId, LPCTSTR Format, ...)$/;"	f	class:COleAutomationControl	signature:(DISPID DispatchId, LPCTSTR Format, ...)
Method	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::Method (char* Name, LPCTSTR Format, ...)$/;"	f	class:COleAutomationControl	signature:(char* Name, LPCTSTR Format, ...)
Method	src/VisVim/OleAut.h	/^	bool Method (DISPID DispatchId, LPCTSTR Format = NULL, ...);$/;"	p	class:COleAutomationControl	access:public	signature:(DISPID DispatchId, LPCTSTR Format = NULL, ...)
Method	src/VisVim/OleAut.h	/^	bool Method (char* Name, LPCTSTR Format = NULL, ...);$/;"	p	class:COleAutomationControl	access:public	signature:(char* Name, LPCTSTR Format = NULL, ...)
MkVimball	runtime/plugin/vimballPlugin.vim	/^com! -ra   -complete=file -na=+ -bang MkVimball call vimball#MkVimball(<line1>,<line2>,<bang>0,<f-args>)$/;"	c
ModificationInfo	src/gui_mac.c	/^struct ModificationInfo \/* for replying to class 'KAHL', event 'MOD ', keyDirectObject typeAEList*\/$/;"	s	file:
ModificationInfo	src/gui_mac.c	/^typedef struct ModificationInfo ModificationInfo;$/;"	t	typeref:struct:ModificationInfo	file:
ModificationInfo::saved	src/gui_mac.c	/^    short saved; \/\/ set this to zero when replying, unused$/;"	m	struct:ModificationInfo	file:	access:public
ModificationInfo::theDate	src/gui_mac.c	/^    long theDate; \/\/ the date\/time the file was last modified$/;"	m	struct:ModificationInfo	file:	access:public
ModificationInfo::theFile	src/gui_mac.c	/^    FSSpec theFile; \/\/ identifies the file$/;"	m	struct:ModificationInfo	file:	access:public
ModuloIndent	runtime/indent/sqlanywhere.vim	/^function s:ModuloIndent(ind)$/;"	f
MoveRectTo	src/gui_mac.c	5444;"	d	file:
MoveThumb	src/gui_at_sb.c	/^MoveThumb(w, event, params, num_params)$/;"	f	file:
MoveThumb	src/gui_at_sb.c	/^static void MoveThumb __ARGS((Widget, XEvent *, String *, Cardinal *));$/;"	p	file:	signature:(Widget, XEvent *, String *, Cardinal *)
MultiByteToWideChar_alloc	src/os_mswin.c	/^MultiByteToWideChar_alloc(UINT cp, DWORD flags,$/;"	f	signature:(UINT cp, DWORD flags, LPCSTR in, int inlen, LPWSTR *out, int *outlen)
MultiMatch	runtime/macros/matchit.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	f
MyTranslateMessage	src/gui_w48.c	199;"	d	file:
MyTranslateMessage	src/gui_w48.c	201;"	d	file:
MyWindowProc	src/gui_w48.c	206;"	d	file:
MyWindowProc	src/gui_w48.c	209;"	d	file:
N	runtime/macros/hanoi/hanoi.vim	/^map N yy$/;"	m
N	src/testdir/test49.vim	/^function! N()$/;"	f
NALPHA	src/regexp.c	195;"	d	file:
NAME	src/gui_xmdlg.c	/^    NAME,$/;"	e	enum:ListSpecifier	file:
NAME	src/testdir/test49.vim	/^function! NAME(x, n)$/;"	f
NAMLEN	src/os_unix.h	139;"	d
NAMLEN	src/os_unix.h	143;"	d
NARROW_PROTO	src/auto/config.mk	/^NARROW_PROTO	= $/;"	m
NBDEBUG	src/vim.h	2102;"	d
NBDEBUG_DEFS	src/Make_mvc.mak	/^NBDEBUG_DEFS	= -DNBDEBUG$/;"	m
NBDEBUG_DEP	src/Make_bc5.mak	/^NBDEBUG_DEP = nbdebug.h nbdebug.c$/;"	m
NBDEBUG_DEP	src/Make_cyg.mak	/^NBDEBUG_DEP = nbdebug.h nbdebug.c$/;"	m
NBDEBUG_H	src/nbdebug.h	12;"	d
NBDEBUG_INCL	src/Make_ming.mak	/^NBDEBUG_INCL = nbdebug.h$/;"	m
NBDEBUG_INCL	src/Make_mvc.mak	/^NBDEBUG_INCL	= nbdebug.h$/;"	m
NBDEBUG_SRC	src/Make_ming.mak	/^NBDEBUG_SRC = nbdebug.c$/;"	m
NBDEBUG_SRC	src/Make_mvc.mak	/^NBDEBUG_SRC	= nbdebug.c$/;"	m
NBDEBUG_TRACE	src/nbdebug.h	36;"	d
NBDLEVEL	src/nbdebug.h	34;"	d
NBSOCK	src/netbeans.c	/^typedef __int64 NBSOCK;$/;"	t	file:
NBSOCK	src/netbeans.c	/^typedef int NBSOCK;$/;"	t	file:
NB_DEBUG_ALL	src/nbdebug.h	32;"	d
NB_DEF_ADDR	src/netbeans.c	197;"	d	file:
NB_DEF_HOST	src/netbeans.c	196;"	d	file:
NB_DEF_PASS	src/netbeans.c	198;"	d	file:
NB_HAS_GUI	src/netbeans.c	103;"	d	file:
NB_PRINT	src/nbdebug.h	31;"	d
NB_TRACE	src/nbdebug.h	28;"	d
NB_TRACE_COLONCMD	src/nbdebug.h	30;"	d
NB_TRACE_VERBOSE	src/nbdebug.h	29;"	d
NCLOSE	src/regexp.c	221;"	d	file:
NDIGIT	src/regexp.c	185;"	d	file:
NEAR	src/gui_w48.c	85;"	d	file:
NEEDARG	src/ex_cmds.h	41;"	d
NEED_FILE	src/if_sniff.c	34;"	d	file:
NEED_GUI_UPDATE_SCREEN	src/gui.c	637;"	d	file:
NEED_SYMBOL	src/if_sniff.c	32;"	d	file:
NETBEANS	src/Make_bc5.mak	/^NETBEANS = yes$/;"	m
NETBEANS	src/Make_cyg.mak	/^NETBEANS = yes$/;"	m
NETBEANS	src/Make_ming.mak	/^NETBEANS=$(GUI)$/;"	m
NETBEANS	src/Make_mvc.mak	/^NETBEANS = $(GUI)$/;"	m
NETBEANS_DEFS	src/Make_mvc.mak	/^NETBEANS_DEFS	= -DFEAT_NETBEANS_INTG$/;"	m
NETBEANS_LIB	src/Make_mvc.mak	/^NETBEANS_LIB	= WSock32.lib$/;"	m
NETBEANS_OBJ	src/Make_mvc.mak	/^NETBEANS_OBJ	= $(OBJDIR)\/netbeans.obj$/;"	m
NETBEANS_OBJ	src/auto/config.mk	/^NETBEANS_OBJ	= objects\/netbeans.o$/;"	m
NETBEANS_OPEN	src/netbeans.c	113;"	d	file:
NETBEANS_PRO	src/Make_mvc.mak	/^NETBEANS_PRO	= proto\/netbeans.pro$/;"	m
NETBEANS_SRC	src/auto/config.mk	/^NETBEANS_SRC	= netbeans.c$/;"	m
NEWL	src/regexp.c	163;"	d	file:
NEWTEXTMETRIC	src/gui_w48.c	/^typedef int NEWTEXTMETRIC;$/;"	t	file:
NEWTEXTMETRIC	src/os_mswin.c	/^typedef int NEWTEXTMETRIC;$/;"	t	file:
NEXT	src/regexp.c	311;"	d	file:
NEXT	src/testdir/test49.vim	/^function! NEXT(cmd)$/;"	f
NEXTAW_BUNDLE	src/Makefile	/^NEXTAW_BUNDLE	=$/;"	m
NEXTAW_DEFS	src/Makefile	/^NEXTAW_DEFS	= -DFEAT_GUI_ATHENA -DFEAT_GUI_NEXTAW $(NARROW_PROTO)$/;"	m
NEXTAW_INSTALL	src/Makefile	/^NEXTAW_INSTALL  =  install_normal install_gui_extra$/;"	m
NEXTAW_IPATH	src/Makefile	/^NEXTAW_IPATH	= $(GUI_INC_LOC)$/;"	m
NEXTAW_LIB	src/Makefile	/^NEXTAW_LIB = -lneXtaw$/;"	m
NEXTAW_LIBS1	src/Makefile	/^NEXTAW_LIBS1	= $(NEXTAW_LIB)$/;"	m
NEXTAW_LIBS2	src/Makefile	/^NEXTAW_LIBS2	= -lXt$/;"	m
NEXTAW_LIBS_DIR	src/Makefile	/^NEXTAW_LIBS_DIR = $(GUI_LIB_LOC)$/;"	m
NEXTAW_MAN_TARGETS	src/Makefile	/^NEXTAW_MAN_TARGETS = yes$/;"	m
NEXTAW_OBJ	src/Makefile	/^NEXTAW_OBJ	= objects\/gui.o objects\/gui_athena.o objects\/gui_x11.o \\$/;"	m
NEXTAW_SRC	src/Makefile	/^NEXTAW_SRC	= gui.c gui_athena.c gui_x11.c pty.c gui_beval.c gui_at_fs.c$/;"	m
NEXTAW_TARGETS	src/Makefile	/^NEXTAW_TARGETS	=  installglinks$/;"	m
NEXTAW_TESTTARGET	src/Makefile	/^NEXTAW_TESTTARGET = gui$/;"	m
NFH_bmp	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_bmp(bmpfile)$/;"	f
NFH_doc	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_doc(doc)$/;"	f
NFH_eps	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_eps(eps)$/;"	f
NFH_fig	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_fig(fig)$/;"	f
NFH_gif	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_gif(giffile)$/;"	f
NFH_htm	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_htm(pagefile)$/;"	f
NFH_html	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_html(pagefile)$/;"	f
NFH_jpg	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_jpg(jpgfile)$/;"	f
NFH_obj	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_obj(obj)$/;"	f
NFH_pdf	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_pdf(pdf)$/;"	f
NFH_png	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_png(pngfile)$/;"	f
NFH_pnm	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_pnm(pnmfile)$/;"	f
NFH_ps	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_ps(ps)$/;"	f
NFH_sxw	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_sxw(sxw)$/;"	f
NFH_xls	runtime/autoload/netrwFileHandlers.vim	/^fun! s:NFH_xls(xls)$/;"	f
NHEAD	src/regexp.c	193;"	d	file:
NHEX	src/regexp.c	187;"	d	file:
NIL	src/if_perlsfio.c	25;"	d	file:
NL	src/ascii.h	111;"	d
NL	src/ascii.h	28;"	d
NL	src/auto/config.mk	/^NL		= "\\\\012"$/;"	m
NLOWER	src/regexp.c	197;"	d	file:
NL_STR	src/ascii.h	112;"	d
NL_STR	src/ascii.h	29;"	d
NMARKS	src/structs.h	97;"	d
NMTTDISPINFOA	src/gui_w32.c	/^} NMTTDISPINFOA, *LPNMTTDISPINFOA;$/;"	t	typeref:struct:tagNMTTDISPINFOA	file:
NMTTDISPINFOW	src/gui_w32.c	/^} NMTTDISPINFOW, *LPNMTTDISPINFOW;$/;"	t	typeref:struct:tagNMTTDISPINFOW	file:
NMTTDISPINFO_NEW	src/gui_w32.c	/^} NMTTDISPINFO_NEW;$/;"	t	typeref:struct:tagNMTTDISPINFO_NEW	file:
NOBEHIND	src/regexp.c	155;"	d	file:
NOCATGETS	src/integration.c	76;"	d	file:
NOCTAL	src/regexp.c	189;"	d	file:
NODEBUG	src/GvimExt/Makefile	/^NODEBUG = 1$/;"	m
NODEBUG	src/Make_mvc.mak	/^NODEBUG = 1$/;"	m
NODE_NORMAL	src/vim.h	946;"	d
NODE_OTHER	src/vim.h	949;"	d
NODE_WRITABLE	src/vim.h	947;"	d
NOFONT	src/gui.h	240;"	d
NOFONT	src/gui.h	246;"	d
NOFONT	src/gui.h	252;"	d
NOFONT	src/gui.h	257;"	d
NOFONTSET	src/gui.h	241;"	d
NOFONTSET	src/gui.h	247;"	d
NOFONTSET	src/gui.h	253;"	d
NOFONTSET	src/gui.h	258;"	d
NOHANDS_SUPPORT_FUNCTIONS	src/integration.h	28;"	d
NOMATCH	src/regexp.c	153;"	d	file:
NONE	src/gui_xmdlg.c	/^    NONE$/;"	e	enum:ListSpecifier	file:
NONE_IDX	src/syntax.c	178;"	d	file:
NONE_INSTALL	src/Makefile	/^NONE_INSTALL = install_normal$/;"	m
NOON	src/farsi.h	139;"	d
NOPEN	src/regexp.c	219;"	d	file:
NOPROTO	src/vim.h	2120;"	d
NORMAL	src/vim.h	2114;"	d
NORMAL	src/vim.h	671;"	d
NORMAL_BG	src/os_riscos.c	29;"	d	file:
NORMAL_BUSY	src/vim.h	688;"	d
NORMAL_FG	src/os_riscos.c	28;"	d	file:
NOSPC	src/ex_cmds.h	37;"	d
NOTADR	src/ex_cmds.h	48;"	d
NOTAGFILE	src/tag.c	63;"	d	file:
NOTDONE	src/vim.h	713;"	d
NOTHING	src/regexp.c	147;"	d	file:
NOTRLCOM	src/ex_cmds.h	45;"	d
NOT_EQUAL	src/gui_xmebw.c	1075;"	d	file:
NOT_MULTI	src/regexp.c	344;"	d	file:
NOT_VALID	src/vim.h	616;"	d
NOWIN	src/window.c	78;"	d	file:
NO_ATTR	src/Makefile	/^NO_ATTR=$/;"	m
NO_BUFFERS	src/vim.h	1178;"	d
NO_CONSOLE	src/os_mac.h	99;"	d
NO_CONSOLE	src/os_win16.h	49;"	d
NO_CONSOLE	src/os_win32.h	85;"	d
NO_CONSOLE_INPUT	src/gui.h	181;"	d
NO_EXPANDPATH	src/os_os2_cfg.h	9;"	d
NO_EXPANDPATH	src/os_unix.h	428;"	d
NO_SCREEN	src/vim.h	1177;"	d
NO_X11_INCLUDES	src/os_mac_conv.c	16;"	d	file:
NPCOMPOSITIONFORM	src/gui_w32.c	/^} COMPOSITIONFORM, *PCOMPOSITIONFORM, NEAR *NPCOMPOSITIONFORM, FAR *LPCOMPOSITIONFORM;$/;"	t	typeref:struct:tagCOMPOSITIONFORM	file:
NR_ELEMS	src/gui_mac.c	70;"	d	file:
NR_TRANS	src/structs.h	/^typedef struct nr_trans NR_TRANS;$/;"	t	typeref:struct:nr_trans
NSCRIPT	src/globals.h	1001;"	d
NSUBEXP	src/regexp.h	22;"	d
NT	src/if_ruby.c	18;"	d	file:
NUL	src/ascii.h	107;"	d
NUL	src/ascii.h	24;"	d
NUL	src/dosinst.h	74;"	d
NULL	src/Make_dvc.mak	/^NULL=$/;"	m
NULL	src/Make_dvc.mak	/^NULL=nul$/;"	m
NULL	src/Make_ivc.mak	/^NULL=$/;"	m
NULL	src/Make_ivc.mak	/^NULL=nul$/;"	m
NULL	src/Make_w16.mak	/^NULL=$/;"	m
NULL	src/Make_w16.mak	/^NULL=nul$/;"	m
NULL	src/VisVim/VisVim.mak	/^NULL=$/;"	m
NULL	src/VisVim/VisVim.mak	/^NULL=nul$/;"	m
NULL	src/testdir/test49.vim	/^function! NULL()$/;"	f
NUMBUFLEN	src/vim.h	382;"	d
NUM_ELEMENTS	src/hardcopy.c	984;"	d	file:
NUM_EVENTS	src/vim.h	/^    NUM_EVENTS			\/* MUST be the last one *\/$/;"	e	enum:auto_event
NUM_MOUSE_CLICKS	src/vim.h	1747;"	d
NUM_REGISTERS	src/ops.c	44;"	d	file:
NUM_REGISTERS	src/ops.c	46;"	d	file:
NUM_REGISTERS	src/ops.c	49;"	d	file:
NUPPER	src/regexp.c	199;"	d	file:
NV_CMDS_SIZE	src/normal.c	456;"	d	file:
NV_KEEPREG	src/normal.c	204;"	d	file:
NV_LANG	src/normal.c	198;"	d	file:
NV_NCH	src/normal.c	195;"	d	file:
NV_NCH_ALW	src/normal.c	197;"	d	file:
NV_NCH_NOP	src/normal.c	196;"	d	file:
NV_NCW	src/normal.c	205;"	d	file:
NV_RL	src/normal.c	203;"	d	file:
NV_SS	src/normal.c	200;"	d	file:
NV_SSS	src/normal.c	201;"	d	file:
NV_STS	src/normal.c	202;"	d	file:
NWHITE	src/regexp.c	183;"	d	file:
NWORD	src/regexp.c	191;"	d	file:
N_	src/gui_gtk.c	48;"	d	file:
N_	src/gui_gtk_x11.c	32;"	d	file:
N_	src/vim.h	573;"	d
N_	src/vim.h	584;"	d
N_	src/vim.h	586;"	d
N_	src/vim.h	591;"	d
N_DND_TARGETS	src/gui_gtk_x11.c	146;"	d	file:
N_SELECTION_TARGETS	src/gui_gtk_x11.c	131;"	d	file:
NameBuff	src/globals.h	/^EXTERN char_u	*NameBuff;		\/* file names are expanded in this$/;"	v
NetReadFixup	runtime/autoload/netrw.vim	/^ fun! NetReadFixup(method, line1, line2)$/;"	f
NetSortSequence	runtime/autoload/netrw.vim	/^fun! s:NetSortSequence(islocal)$/;"	f
NetUserPass	runtime/autoload/netrw.vim	/^fun! NetUserPass(...)$/;"	f
NetUserPass	runtime/plugin/netrwPlugin.vim	/^com! -nargs=*		NetUserPass	call NetUserPass(<f-args>)$/;"	c
NetUserPass	runtime/plugin/netrwPlugin.vim	/^fun! NetUserPass(...)$/;"	f
NetrwBMShow	runtime/autoload/netrw.vim	/^fun! s:NetrwBMShow()$/;"	f
NetrwBannerCtrl	runtime/autoload/netrw.vim	/^fun! s:NetrwBannerCtrl(islocal)$/;"	f
NetrwBookHistHandler	runtime/autoload/netrw.vim	/^fun! s:NetrwBookHistHandler(chg,curdir)$/;"	f
NetrwBookHistRead	runtime/autoload/netrw.vim	/^fun! s:NetrwBookHistRead()$/;"	f
NetrwBookHistSave	runtime/autoload/netrw.vim	/^fun! s:NetrwBookHistSave()$/;"	f
NetrwBookmarkMenu	runtime/autoload/netrw.vim	/^fun! s:NetrwBookmarkMenu()$/;"	f
NetrwBrowse	runtime/autoload/netrw.vim	/^fun! s:NetrwBrowse(islocal,dirname)$/;"	f
NetrwBrowseChgDir	runtime/autoload/netrw.vim	/^fun! s:NetrwBrowseChgDir(islocal,newdir,...)$/;"	f
NetrwChgPerm	runtime/autoload/netrw.vim	/^fun! s:NetrwChgPerm(islocal,curdir)$/;"	f
NetrwClean	runtime/plugin/netrwPlugin.vim	/^com! -bang	NetrwClean	call netrw#NetrwClean(<bang>0)$/;"	c
NetrwClearExplore	runtime/autoload/netrw.vim	/^fun! s:NetrwClearExplore()$/;"	f
NetrwCursorline	runtime/autoload/netrw.vim	/^fun! s:NetrwCursorline()$/;"	f
NetrwDelete	runtime/autoload/netrw.vim	/^fun! s:NetrwDelete(path)$/;"	f
NetrwEnew	runtime/autoload/netrw.vim	/^fun! s:NetrwEnew(...)$/;"	f
NetrwExploreListUniq	runtime/autoload/netrw.vim	/^fun! s:NetrwExploreListUniq(explist)$/;"	f
NetrwFileInfo	runtime/autoload/netrw.vim	/^fun! s:NetrwFileInfo(islocal,fname)$/;"	f
NetrwGetBuffer	runtime/autoload/netrw.vim	/^fun! s:NetrwGetBuffer(islocal,dirname)$/;"	f
NetrwGetFile	runtime/autoload/netrw.vim	/^fun! s:NetrwGetFile(readcmd, tfile, method)$/;"	f
NetrwGetWord	runtime/autoload/netrw.vim	/^fun! s:NetrwGetWord()$/;"	f
NetrwGetcwd	runtime/autoload/netrw.vim	/^fun! s:NetrwGetcwd(doesc)$/;"	f
NetrwHidden	runtime/autoload/netrw.vim	/^fun! s:NetrwHidden(islocal)$/;"	f
NetrwHide	runtime/autoload/netrw.vim	/^fun! s:NetrwHide(islocal)$/;"	f
NetrwHideEdit	runtime/autoload/netrw.vim	/^fun! s:NetrwHideEdit(islocal)$/;"	f
NetrwHome	runtime/autoload/netrw.vim	/^fun! s:NetrwHome()$/;"	f
NetrwInit	runtime/autoload/netrw.vim	/^fun s:NetrwInit(varname,value)$/;"	f
NetrwLeftmouse	runtime/autoload/netrw.vim	/^fun! s:NetrwLeftmouse(islocal)$/;"	f
NetrwListHide	runtime/autoload/netrw.vim	/^fun! s:NetrwListHide()$/;"	f
NetrwListSettings	runtime/autoload/netrw.vim	/^fun! s:NetrwListSettings(islocal)$/;"	f
NetrwListStyle	runtime/autoload/netrw.vim	/^fun! s:NetrwListStyle(islocal)$/;"	f
NetrwLocalRename	runtime/autoload/netrw.vim	/^fun! s:NetrwLocalRename(path) range$/;"	f
NetrwLocalRm	runtime/autoload/netrw.vim	/^fun! s:NetrwLocalRm(path) range$/;"	f
NetrwLocalRmFile	runtime/autoload/netrw.vim	/^fun! s:NetrwLocalRmFile(path,fname,all)$/;"	f
NetrwMakeDir	runtime/autoload/netrw.vim	/^fun! s:NetrwMakeDir(usrhost)$/;"	f
NetrwMarkFile	runtime/autoload/netrw.vim	/^fun! s:NetrwMarkFile(islocal,fname)$/;"	f
NetrwMarkFileCompress	runtime/autoload/netrw.vim	/^fun! s:NetrwMarkFileCompress(islocal)$/;"	f
NetrwMarkFileCopy	runtime/autoload/netrw.vim	/^fun! s:NetrwMarkFileCopy(islocal)$/;"	f
NetrwMarkFileDiff	runtime/autoload/netrw.vim	/^fun! s:NetrwMarkFileDiff(islocal)$/;"	f
NetrwMarkFileEdit	runtime/autoload/netrw.vim	/^fun! s:NetrwMarkFileEdit(islocal)$/;"	f
NetrwMarkFileExe	runtime/autoload/netrw.vim	/^fun! s:NetrwMarkFileExe(islocal)$/;"	f
NetrwMarkFileGrep	runtime/autoload/netrw.vim	/^fun! s:NetrwMarkFileGrep(islocal)$/;"	f
NetrwMarkFileMove	runtime/autoload/netrw.vim	/^fun! s:NetrwMarkFileMove(islocal)$/;"	f
NetrwMarkFilePrint	runtime/autoload/netrw.vim	/^fun! s:NetrwMarkFilePrint(islocal)$/;"	f
NetrwMarkFileRegexp	runtime/autoload/netrw.vim	/^fun! s:NetrwMarkFileRegexp(islocal)$/;"	f
NetrwMarkFileSource	runtime/autoload/netrw.vim	/^fun! s:NetrwMarkFileSource(islocal)$/;"	f
NetrwMarkFileTag	runtime/autoload/netrw.vim	/^fun! s:NetrwMarkFileTag(islocal)$/;"	f
NetrwMarkFileTgt	runtime/autoload/netrw.vim	/^fun! s:NetrwMarkFileTgt(islocal)$/;"	f
NetrwMarkHideSfx	runtime/autoload/netrw.vim	/^fun! s:NetrwMarkHideSfx(islocal)$/;"	f
NetrwMenu	runtime/autoload/netrw.vim	/^fun! s:NetrwMenu(domenu)$/;"	f
NetrwMethod	runtime/autoload/netrw.vim	/^fun! s:NetrwMethod(choice)$/;"	f
NetrwObtain	runtime/autoload/netrw.vim	/^fun! s:NetrwObtain(islocal)$/;"	f
NetrwOpenFile	runtime/autoload/netrw.vim	/^fun! s:NetrwOpenFile(islocal)$/;"	f
NetrwOptionRestore	runtime/autoload/netrw.vim	/^fun! s:NetrwOptionRestore(vt)$/;"	f
NetrwOptionSave	runtime/autoload/netrw.vim	/^fun! s:NetrwOptionSave(vt)$/;"	f
NetrwPrevWinOpen	runtime/autoload/netrw.vim	/^fun! s:NetrwPrevWinOpen(islocal)$/;"	f
NetrwPreview	runtime/autoload/netrw.vim	/^fun! s:NetrwPreview(path) range$/;"	f
NetrwRefresh	runtime/autoload/netrw.vim	/^fun! s:NetrwRefresh(islocal,dirname)$/;"	f
NetrwRefreshDir	runtime/autoload/netrw.vim	/^fun! s:NetrwRefreshDir(islocal,dirname)$/;"	f
NetrwRemoteFtpCmd	runtime/autoload/netrw.vim	/^fun! s:NetrwRemoteFtpCmd(path,listcmd)$/;"	f
NetrwRemoteListing	runtime/autoload/netrw.vim	/^fun! s:NetrwRemoteListing()$/;"	f
NetrwRemoteRename	runtime/autoload/netrw.vim	/^fun! s:NetrwRemoteRename(usrhost,path) range$/;"	f
NetrwRemoteRm	runtime/autoload/netrw.vim	/^fun! s:NetrwRemoteRm(usrhost,path) range$/;"	f
NetrwRemoteRmFile	runtime/autoload/netrw.vim	/^fun! s:NetrwRemoteRmFile(path,rmfile,all)$/;"	f
NetrwRestoreWordPosn	runtime/autoload/netrw.vim	/^fun! s:NetrwRestoreWordPosn()$/;"	f
NetrwRexplore	runtime/autoload/netrw.vim	/^fun! s:NetrwRexplore(islocal,dirname)$/;"	f
NetrwSafeOptions	runtime/autoload/netrw.vim	/^fun! s:NetrwSafeOptions()$/;"	f
NetrwSaveWordPosn	runtime/autoload/netrw.vim	/^fun! s:NetrwSaveWordPosn()$/;"	f
NetrwSetSort	runtime/autoload/netrw.vim	/^fun! s:NetrwSetSort()$/;"	f
NetrwSettingHelp	runtime/autoload/netrwSettings.vim	/^fun! NetrwSettingHelp()$/;"	f
NetrwSettings	runtime/plugin/netrwPlugin.vim	/^com! -nargs=0	NetrwSettings	call netrwSettings#NetrwSettings()$/;"	c
NetrwSortStyle	runtime/autoload/netrw.vim	/^fun! s:NetrwSortStyle(islocal)$/;"	f
NetrwSplit	runtime/autoload/netrw.vim	/^fun! s:NetrwSplit(mode)$/;"	f
NetrwStatusLine	runtime/autoload/netrw.vim	/^fun! NetrwStatusLine()$/;"	f
NetrwStatusLine	runtime/plugin/netrwPlugin.vim	/^fun! NetrwStatusLine()$/;"	f
NetrwTreeDir	runtime/autoload/netrw.vim	/^fun! s:NetrwTreeDir()$/;"	f
NetrwTreeDisplay	runtime/autoload/netrw.vim	/^fun! s:NetrwTreeDisplay(dir,depth)$/;"	f
NetrwTreeListing	runtime/autoload/netrw.vim	/^fun! s:NetrwTreeListing(dirname)$/;"	f
NetrwUnMarkFile	runtime/autoload/netrw.vim	/^fun! s:NetrwUnMarkFile(islocal)$/;"	f
NetrwUnmarkAll	runtime/autoload/netrw.vim	/^fun! s:NetrwUnmarkAll()$/;"	f
NetrwUnmarkAll2	runtime/autoload/netrw.vim	/^fun! s:NetrwUnmarkAll2()$/;"	f
NetrwUnmarkList	runtime/autoload/netrw.vim	/^fun! s:NetrwUnmarkList(curbufnr,curdir)$/;"	f
NetrwUpload	runtime/autoload/netrw.vim	/^fun! s:NetrwUpload(fname,tgt,...)$/;"	f
NetrwWideListing	runtime/autoload/netrw.vim	/^fun! s:NetrwWideListing()$/;"	f
Network	runtime/plugin/netrwPlugin.vim	/^augroup Network$/;"	a
NewChangelogEntry	runtime/ftplugin/changelog.vim	/^    command! -nargs=0 NewChangelogEntry call s:new_changelog_entry()$/;"	c
NewDocument	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::NewDocument(IDispatch * theDocument)$/;"	f	class:CCommands::XApplicationEvents	signature:(IDispatch * theDocument)
NewDocument	src/VisVim/Commands.h	/^		STDMETHOD (NewDocument) (THIS_ IDispatch * theDocument);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS_ IDispatch * theDocument)
NewVersion	runtime/ftplugin/debchangelog.vim	/^function NewVersion()$/;"	f
NewWorkspace	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::NewWorkspace()$/;"	f	class:CCommands::XApplicationEvents	signature:()
NewWorkspace	src/VisVim/Commands.h	/^		STDMETHOD (NewWorkspace) (THIS);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS)
Nexplore	runtime/plugin/netrwPlugin.vim	/^com! -nargs=* -bar -bang			Nexplore	call netrw#Explore(-1,0,0,<q-args>)$/;"	c
NextPage	runtime/macros/less.vim	/^fun! s:NextPage()$/;"	f
Nextitem	runtime/autoload/ccomplete.vim	/^function! s:Nextitem(lead, items, depth, all)$/;"	f
NoButton	src/gui_at_sb.c	213;"	d	file:
NoMatchParen	runtime/plugin/matchparen.vim	/^command! NoMatchParen windo 3match none | unlet! g:loaded_matchparen |$/;"	c
Nosynonly	runtime/synmenu.vim	/^fun! s:Nosynonly()$/;"	f
NotifyScroll	src/gui_at_sb.c	/^NotifyScroll(w, event, params, num_params)$/;"	f	file:
NotifyScroll	src/gui_at_sb.c	/^static void NotifyScroll __ARGS((Widget, XEvent *, String *, Cardinal *));$/;"	p	file:	signature:(Widget, XEvent *, String *, Cardinal *)
NotifyThumb	src/gui_at_sb.c	/^NotifyThumb(w, event, params, num_params)$/;"	f	file:
NotifyThumb	src/gui_at_sb.c	/^static void NotifyThumb __ARGS((Widget, XEvent *, String *, Cardinal *));$/;"	p	file:	signature:(Widget, XEvent *, String *, Cardinal *)
Nread	runtime/plugin/netrwPlugin.vim	/^com! -count=1 -nargs=*	Nread		call netrw#NetrwSavePosn()<bar>call netrw#NetRead(<count>,<f-args>)<bar>call netrw#NetrwRestorePosn()$/;"	c
Nsource	runtime/plugin/netrwPlugin.vim	/^com! -nargs=*	        Nsource		call netrw#NetrwSavePosn()<bar>call netrw#NetSource(<f-args>)<bar>call netrw#NetrwRestorePosn()$/;"	c
NtInitialize	src/if_ruby.c	193;"	d	file:
Nwrite	runtime/plugin/netrwPlugin.vim	/^com! -range=% -nargs=*	Nwrite		call netrw#NetrwSavePosn()<bar><line1>,<line2>call netrw#NetWrite(<f-args>)<bar>call netrw#NetrwRestorePosn()$/;"	c
O	runtime/macros/hanoi/hanoi.vim	/^map O p$/;"	m
O	src/testdir/test49.vim	/^function! O()$/;"	f
OBJ	src/GvimExt/Make_ming.mak	/^OBJ  := gvimext.o$/;"	m
OBJ	src/Make_cyg.mak	/^OBJ = \\$/;"	m
OBJ	src/Make_dice.mak	/^OBJ =	o\/blowfish.o \\$/;"	m
OBJ	src/Make_djg.mak	/^OBJ = \\$/;"	m
OBJ	src/Make_manx.mak	/^OBJ =	obj\/blowfish.o \\$/;"	m
OBJ	src/Make_ming.mak	/^OBJ = \\$/;"	m
OBJ	src/Make_morph.mak	/^OBJ =	$(SRC:.c=.o)$/;"	m
OBJ	src/Make_mvc.mak	/^OBJ = $(OBJ) $(OUTDIR)\\dimm_i.obj $(OUTDIR)\\glbl_ime.obj$/;"	m
OBJ	src/Make_mvc.mak	/^OBJ = \\$/;"	m
OBJ	src/Make_os2.mak	/^OBJ = \\$/;"	m
OBJ	src/Make_sas.mak	/^OBJ = \\$/;"	m
OBJ	src/Makefile	/^OBJ = \\$/;"	m
OBJDIR	src/Make_bc5.mak	/^OBJDIR	= $(OSTYPE)\\gobj$/;"	m
OBJDIR	src/Make_bc5.mak	/^OBJDIR	= $(OSTYPE)\\obj$/;"	m
OBJDIR	src/Make_bc5.mak	/^OBJDIR	= $(OSTYPE)\\objdbg$/;"	m
OBJDIR	src/Make_bc5.mak	/^OBJDIR	= $(OSTYPE)\\oleobj$/;"	m
OBJDIR	src/Make_mvc.mak	/^OBJDIR = $(OBJDIR)H$/;"	m
OBJDIR	src/Make_mvc.mak	/^OBJDIR = $(OBJDIR)L$/;"	m
OBJDIR	src/Make_mvc.mak	/^OBJDIR = $(OBJDIR)O$/;"	m
OBJDIR	src/Make_mvc.mak	/^OBJDIR = $(OBJDIR)R$/;"	m
OBJDIR	src/Make_mvc.mak	/^OBJDIR = $(OBJDIR)T$/;"	m
OBJDIR	src/Make_mvc.mak	/^OBJDIR = $(OBJDIR)U$/;"	m
OBJDIR	src/Make_mvc.mak	/^OBJDIR = $(OBJDIR)Y$/;"	m
OBJDIR	src/Make_mvc.mak	/^OBJDIR = $(OBJDIR)Z$/;"	m
OBJDIR	src/Make_mvc.mak	/^OBJDIR = $(OBJDIR)d$/;"	m
OBJDIR	src/Make_mvc.mak	/^OBJDIR = .\\ObjC$/;"	m
OBJDIR	src/Make_mvc.mak	/^OBJDIR = .\\ObjG$/;"	m
OBJDUMP	src/Make_morph.mak	/^OBJDUMP =	objdump$/;"	m
OBJS	src/Make_ro.mak	/^OBJS =  o.buffer o.charset o.diff o.digraph o.edit o.eval o.ex_cmds o.ex_cmds2  \\$/;"	m
OCTAL	src/regexp.c	188;"	d	file:
OCaml_switch	runtime/ftplugin/ocaml.vim	/^  fun OCaml_switch(newwin)$/;"	f
OK	src/dosinst.h	77;"	d
OK	src/os_mac.h	54;"	d
OK	src/testdir/test49.vim	/^function! OK()$/;"	f
OK	src/vim.h	710;"	d
OLE	src/Make_ming.mak	/^OLE=no$/;"	m
OLE_IDL	src/Make_mvc.mak	/^OLE_IDL = if_ole.idl$/;"	m
OLE_LIB	src/Make_mvc.mak	/^OLE_LIB = oleaut32.lib$/;"	m
OLE_OBJ	src/Make_mvc.mak	/^OLE_OBJ = $(OUTDIR)\\if_ole.obj$/;"	m
OMLetFoldLevel	runtime/ftplugin/ocaml.vim	/^function OMLetFoldLevel(l)$/;"	f
ONE_LINE_DATA	src/gui_at_sb.h	141;"	d
ONE_PAGE_DATA	src/gui_at_sb.h	142;"	d
OO	src/farsi.h	165;"	d
OP	src/regexp.c	310;"	d	file:
OPEN	src/xxd/xxd.c	188;"	d	file:
OPEN	src/xxd/xxd.c	190;"	d	file:
OPENLINE_DELSPACES	src/vim.h	1066;"	d
OPENLINE_DO_COM	src/vim.h	1067;"	d
OPENLINE_KEEPTRAIL	src/vim.h	1068;"	d
OPENLINE_MARKFIX	src/vim.h	1069;"	d
OPEN_CHR_FILES	src/fileio.c	53;"	d	file:
OPEN_OH_ARGTYPE	src/if_cscope.c	848;"	d	file:
OPERAND	src/regexp.c	312;"	d	file:
OPERAND_CMP	src/regexp.c	319;"	d	file:
OPERAND_MAX	src/regexp.c	317;"	d	file:
OPERAND_MIN	src/regexp.c	314;"	d	file:
OPT	src/Make_bc5.mak	/^OPT = $(OPT) -pr$/;"	m
OPT	src/Make_bc5.mak	/^OPT = $(OPT) -vi-$/;"	m
OPT	src/Make_bc5.mak	/^OPT = -O1 -f- -d$/;"	m
OPT	src/Make_bc5.mak	/^OPT = -O2 -f- -d -Oc -O$/;"	m
OPT	src/Make_bc5.mak	/^OPT = -O2 -f- -d -Ocavi -O$/;"	m
OPT	src/Make_bc5.mak	/^OPT = -Od -N$/;"	m
OPTFLAG	src/Make_cyg.mak	/^OPTFLAG = -O2$/;"	m
OPTFLAG	src/Make_cyg.mak	/^OPTFLAG = -O3 -fomit-frame-pointer -freg-struct-return$/;"	m
OPTFLAG	src/Make_cyg.mak	/^OPTFLAG = -Os$/;"	m
OPTFLAG	src/Make_mvc.mak	/^OPTFLAG = $(OPTFLAG) \/GL$/;"	m
OPTFLAG	src/Make_mvc.mak	/^OPTFLAG = \/O1$/;"	m
OPTFLAG	src/Make_mvc.mak	/^OPTFLAG = \/O2$/;"	m
OPTFLAG	src/Make_mvc.mak	/^OPTFLAG = \/Ox$/;"	m
OPTIMIZE	src/Make_bc5.mak	/^OPTIMIZE = MAXSPEED$/;"	m
OPTIMIZE	src/Make_cyg.mak	/^OPTIMIZE = MAXSPEED$/;"	m
OPTIMIZE	src/Make_ming.mak	/^OPTIMIZE=MAXSPEED$/;"	m
OPTIMIZE	src/Make_sas.mak	/^OPTIMIZE  = OPT$/;"	m
OPTIMIZE	src/xxd/Make_bc3.mak	/^OPTIMIZE= -1- -Ox$/;"	m
OPTIONS	src/Make_manx.mak	/^OPTIONS = -so$/;"	m
OPTIONS	src/xxd/Make_amiga.mak	/^OPTIONS = -so$/;"	m
OPT_BOTH	src/option.c	51;"	d	file:
OPT_BUF	src/option.c	50;"	d	file:
OPT_FREE	src/vim.h	1165;"	d
OPT_GLOBAL	src/vim.h	1166;"	d
OPT_LOCAL	src/vim.h	1167;"	d
OPT_MBFONT_ASCII	src/hardcopy.c	107;"	d	file:
OPT_MBFONT_BOLD	src/hardcopy.c	109;"	d	file:
OPT_MBFONT_BOLDOBLIQUE	src/hardcopy.c	111;"	d	file:
OPT_MBFONT_NUM_OPTIONS	src/hardcopy.c	112;"	d	file:
OPT_MBFONT_OBLIQUE	src/hardcopy.c	110;"	d	file:
OPT_MBFONT_REGULAR	src/hardcopy.c	108;"	d	file:
OPT_MBFONT_USECOURIER	src/hardcopy.c	106;"	d	file:
OPT_MODELINE	src/vim.h	1168;"	d
OPT_NOWIN	src/vim.h	1170;"	d
OPT_PRINT_BOT	src/globals.h	1220;"	d
OPT_PRINT_COLLATE	src/globals.h	1230;"	d
OPT_PRINT_DUPLEX	src/globals.h	1227;"	d
OPT_PRINT_FORMFEED	src/globals.h	1232;"	d
OPT_PRINT_HEADERHEIGHT	src/globals.h	1223;"	d
OPT_PRINT_JOBSPLIT	src/globals.h	1231;"	d
OPT_PRINT_LEFT	src/globals.h	1221;"	d
OPT_PRINT_NUMBER	src/globals.h	1225;"	d
OPT_PRINT_NUM_OPTIONS	src/globals.h	1234;"	d
OPT_PRINT_PAPER	src/globals.h	1229;"	d
OPT_PRINT_PORTRAIT	src/globals.h	1228;"	d
OPT_PRINT_RIGHT	src/globals.h	1222;"	d
OPT_PRINT_SYNTAX	src/globals.h	1224;"	d
OPT_PRINT_TOP	src/globals.h	1219;"	d
OPT_PRINT_WRAP	src/globals.h	1226;"	d
OPT_WIN	src/option.c	49;"	d	file:
OPT_WINONLY	src/vim.h	1169;"	d
OP_APPEND	src/vim.h	1387;"	d
OP_CHANGE	src/vim.h	1372;"	d
OP_COLON	src/vim.h	1379;"	d
OP_DELETE	src/vim.h	1370;"	d
OP_DELETE	src/vim.h	2117;"	d
OP_FILTER	src/vim.h	1375;"	d
OP_FOLD	src/vim.h	1388;"	d
OP_FOLDCLOSE	src/vim.h	1391;"	d
OP_FOLDCLOSEREC	src/vim.h	1392;"	d
OP_FOLDDEL	src/vim.h	1393;"	d
OP_FOLDDELREC	src/vim.h	1394;"	d
OP_FOLDOPEN	src/vim.h	1389;"	d
OP_FOLDOPENREC	src/vim.h	1390;"	d
OP_FORMAT	src/vim.h	1378;"	d
OP_FORMAT2	src/vim.h	1395;"	d
OP_FUNCTION	src/vim.h	1396;"	d
OP_INDENT	src/vim.h	1377;"	d
OP_INSERT	src/vim.h	1386;"	d
OP_JOIN	src/vim.h	1382;"	d
OP_JOIN	src/vim.h	2118;"	d
OP_JOIN_NS	src/vim.h	1383;"	d
OP_LOWER	src/vim.h	1381;"	d
OP_LSHIFT	src/vim.h	1373;"	d
OP_NOP	src/vim.h	1369;"	d
OP_PENDING	src/vim.h	673;"	d
OP_REPLACE	src/vim.h	1385;"	d
OP_ROT13	src/vim.h	1384;"	d
OP_RSHIFT	src/vim.h	1374;"	d
OP_TILDE	src/vim.h	1376;"	d
OP_UPPER	src/vim.h	1380;"	d
OP_YANK	src/vim.h	1371;"	d
ORIGINAL_TEXT	src/edit.c	79;"	d	file:
OS2	src/xxd/xxd.c	81;"	d	file:
OSDEF_CFLAGS	src/Makefile	/^OSDEF_CFLAGS = $(PRE_DEFS) $(POST_DEFS)$/;"	m
OSPEED_EXTERN	src/os_mac.h	260;"	d
OSPEED_EXTERN	src/os_os2_cfg.h	33;"	d
OSTYPE	src/Make_bc5.mak	/^OSTYPE = WIN32$/;"	m
OSVERSIONINFO	src/gui_w48.c	/^typedef int OSVERSIONINFO;$/;"	t	file:
OS_EXTRA_OBJ	src/auto/config.mk	/^OS_EXTRA_OBJ	= $/;"	m
OS_EXTRA_SRC	src/auto/config.mk	/^OS_EXTRA_SRC	= $/;"	m
OS_TYPE	src/Make_mvc.mak	/^OS_TYPE	= win95$/;"	m
OS_TYPE	src/Make_mvc.mak	/^OS_TYPE	= winnt$/;"	m
OUTDIR	src/Make_cyg.mak	/^OUTDIR = gobj$(DEBUG_SUFFIX)$/;"	m
OUTDIR	src/Make_cyg.mak	/^OUTDIR = obj$(DEBUG_SUFFIX)$/;"	m
OUTDIR	src/Make_dvc.mak	/^OUTDIR=.$/;"	m
OUTDIR	src/Make_ming.mak	/^OUTDIR = gobj$(DEBUG_SUFFIX)$(MZSCHEME_SUFFIX)$/;"	m
OUTDIR	src/Make_ming.mak	/^OUTDIR = obj$(DEBUG_SUFFIX)$(MZSCHEME_SUFFIX)$/;"	m
OUTDIR	src/Make_mvc.mak	/^OUTDIR=$(OBJDIR)$/;"	m
OUTDIR	src/VisVim/VisVim.mak	/^OUTDIR=.\\Debug$/;"	m
OUTDIR	src/VisVim/VisVim.mak	/^OUTDIR=.\\Release$/;"	m
OUT_NORMAL	src/os_riscos.c	74;"	d	file:
OUT_NUMBER	src/os_riscos.c	75;"	d	file:
OUT_SIZE	src/term.c	2517;"	d	file:
OUT_SIZE	src/term.c	2520;"	d	file:
OUT_SIZE	src/term.c	2522;"	d	file:
OUT_STR	src/vim.h	1545;"	d
OUT_STR_NF	src/vim.h	1546;"	d
OW	src/farsi.h	160;"	d
OW_OW	src/farsi.h	163;"	d
O_EXTRA	src/vim.h	1469;"	d
O_EXTRA	src/vim.h	1471;"	d
O_NOCTTY	src/pty.c	130;"	d	file:
O_NOFOLLOW	src/vim.h	1475;"	d
O_NONBLOCK	src/eval.c	10069;"	d	file:
ObjFiles	src/Make_w16.mak	/^ObjFiles = \\$/;"	m
Ocaml_get_type	runtime/ftplugin/ocaml.vim	/^      function Ocaml_get_type(mode)$/;"	f
Ocaml_get_type_or_not	runtime/ftplugin/ocaml.vim	/^      function Ocaml_get_type_or_not(mode)$/;"	f
Ocaml_print_type	runtime/ftplugin/ocaml.vim	/^      function Ocaml_print_type(mode)$/;"	f
Offset	src/gui_at_sb.c	126;"	d	file:
Offset	src/gui_at_sb.c	89;"	d	file:
OmniSyntaxList	runtime/autoload/syntaxcomplete.vim	/^function! OmniSyntaxList(...)$/;"	f
OnConnection	src/VisVim/DSAddIn.cpp	/^STDMETHODIMP CDSAddIn::OnConnection (IApplication * pApp, VARIANT_BOOL bFirstTime,$/;"	f	class:CDSAddIn	signature:(IApplication * pApp, VARIANT_BOOL bFirstTime, long dwCookie, VARIANT_BOOL * OnConnection)
OnConnection	src/VisVim/DSAddIn.h	/^	STDMETHOD (OnConnection) (THIS_ IApplication * pApp, VARIANT_BOOL bFirstTime,$/;"	p	class:CDSAddIn	access:public	signature:(THIS_ IApplication * pApp, VARIANT_BOOL bFirstTime, long dwCookie, VARIANT_BOOL * OnConnection)
OnDisable	src/VisVim/Commands.cpp	/^	afx_msg void OnDisable();$/;"	p	class:CMainDialog	file:	access:protected	signature:()
OnDisconnection	src/VisVim/DSAddIn.cpp	/^STDMETHODIMP CDSAddIn::OnDisconnection (VARIANT_BOOL bLastTime)$/;"	f	class:CDSAddIn	signature:(VARIANT_BOOL bLastTime)
OnDisconnection	src/VisVim/DSAddIn.h	/^	STDMETHOD (OnDisconnection) (THIS_ VARIANT_BOOL bLastTime);$/;"	p	class:CDSAddIn	access:public	signature:(THIS_ VARIANT_BOOL bLastTime)
OnEnable	src/VisVim/Commands.cpp	/^	afx_msg void OnEnable();$/;"	p	class:CMainDialog	file:	access:protected	signature:()
OpenPTY	src/pty.c	/^OpenPTY(ttyn)$/;"	f
OptionG	runtime/optwin.vim	/^fun! <SID>OptionG(name, val)$/;"	f
OptionL	runtime/optwin.vim	/^fun! <SID>OptionL(name)$/;"	f
Output	src/if_py_both.h	/^static OutputObject Output =$/;"	v
OutputGetattr	src/if_python.c	/^OutputGetattr(PyObject *self, char *name)$/;"	f	file:	signature:(PyObject *self, char *name)
OutputGetattro	src/if_python3.c	/^OutputGetattro(PyObject *self, PyObject *nameobj)$/;"	f	file:	signature:(PyObject *self, PyObject *nameobj)
OutputMethods	src/if_py_both.h	/^static struct PyMethodDef OutputMethods[] = {$/;"	v	typeref:struct:PyMethodDef
OutputObject	src/if_py_both.h	/^} OutputObject;$/;"	t	typeref:struct:__anon10
OutputSetattr	src/if_python.c	/^OutputSetattr(PyObject *self, char *name, PyObject *val)$/;"	f	file:	signature:(PyObject *self, char *name, PyObject *val)
OutputSetattro	src/if_python3.c	/^OutputSetattro(PyObject *self, PyObject *nameobj, PyObject *val)$/;"	f	file:	signature:(PyObject *self, PyObject *nameobj, PyObject *val)
OutputType	src/if_py_both.h	/^static PyTypeObject OutputType;$/;"	v
OutputWrite	src/if_py_both.h	/^OutputWrite(PyObject *self, PyObject *args)$/;"	f	signature:(PyObject *self, PyObject *args)
OutputWrite	src/if_py_both.h	/^static PyObject *OutputWrite(PyObject *, PyObject *);$/;"	p	signature:(PyObject *, PyObject *)
OutputWritelines	src/if_py_both.h	/^OutputWritelines(PyObject *self, PyObject *args)$/;"	f	signature:(PyObject *self, PyObject *args)
OutputWritelines	src/if_py_both.h	/^static PyObject *OutputWritelines(PyObject *, PyObject *);$/;"	p	signature:(PyObject *, PyObject *)
P	runtime/macros/hanoi/hanoi.vim	/^map P p$/;"	m
P	src/sha256.c	103;"	d	file:
P	src/testdir/test49.vim	/^function! P(num)$/;"	f
PACKAGE	src/po/Make_cyg.mak	/^PACKAGE = vim$/;"	m
PACKAGE	src/po/Make_ming.mak	/^PACKAGE = vim$/;"	m
PACKAGE	src/po/Make_mvc.mak	/^PACKAGE = vim$/;"	m
PACKAGE	src/po/Makefile	/^PACKAGE = vim$/;"	m
PACL	src/os_mswin.c	/^typedef int PACL;$/;"	t	file:
PACL	src/os_win32.c	/^typedef int PACL;$/;"	t	file:
PADJUSTINFO	src/vimtbar.h	/^typedef ADJUSTINFO NEAR* PADJUSTINFO;$/;"	t
PAGE_DELAY	src/gui_at_sb.c	220;"	d	file:
PAGE_REPEAT	src/gui_at_sb.c	222;"	d	file:
PARAM_COUNT	src/option.c	2922;"	d	file:
PATH	src/msvcsetup.bat	/^set PATH=%SystemRoot%\\Microsoft.NET\\Framework\\v1.1.4322;%PATH%$/;"	v
PATHDEF_SRC	src/Make_mvc.mak	/^PATHDEF_SRC = $(OUTDIR)\\pathdef.c$/;"	m
PATHSEP	src/ascii.h	183;"	d
PATHSEP	src/ascii.h	187;"	d
PATHSEP	src/ascii.h	190;"	d
PATHSEPSTR	src/ascii.h	184;"	d
PATHSEPSTR	src/ascii.h	188;"	d
PATHSEPSTR	src/ascii.h	191;"	d
PATH_ESC_CHARS	src/vim.h	370;"	d
PATH_SEP	src/xxd/xxd.c	162;"	d	file:
PATH_SEP	src/xxd/xxd.c	168;"	d	file:
PATH_SEP	src/xxd/xxd.c	175;"	d	file:
PATH_SEP	src/xxd/xxd.c	182;"	d	file:
PC	src/term.c	/^char *UP, *BC, PC;$/;"	v
PC	src/termlib.c	/^char	PC = 0;		      \/* Pad character, default NULL *\/$/;"	v
PCOMPOSITIONFORM	src/gui_w32.c	/^} COMPOSITIONFORM, *PCOMPOSITIONFORM, NEAR *NPCOMPOSITIONFORM, FAR *LPCOMPOSITIONFORM;$/;"	t	typeref:struct:tagCOMPOSITIONFORM	file:
PC_STATUS_LEFT	src/edit.c	1584;"	d	file:
PC_STATUS_RIGHT	src/edit.c	1583;"	d	file:
PC_STATUS_SET	src/edit.c	1585;"	d	file:
PC_STATUS_UNSET	src/edit.c	1582;"	d	file:
PDP_RETVAL	src/os_mswin.c	1783;"	d	file:
PDP_RETVAL	src/os_mswin.c	1785;"	d	file:
PDWORD	src/os_win32.c	/^typedef int PDWORD;$/;"	t	file:
PE	src/farsi.h	113;"	d
PERL	src/auto/config.mk	/^PERL		= $/;"	m
PERLLIB	src/Make_ming.mak	/^PERLLIB=$(PERL)\/lib$/;"	m
PERLLIB	src/auto/config.mk	/^PERLLIB		= $/;"	m
PERLLIBS	src/Make_ming.mak	/^PERLLIBS=$(PERLLIB)\/Core$/;"	m
PERL_ARCH	src/Make_mvc.mak	/^PERL_ARCH = \\MSWin32-x86$/;"	m
PERL_CFLAGS	src/auto/config.mk	/^PERL_CFLAGS	= $/;"	m
PERL_DLL	src/Make_mvc.mak	/^PERL_DLL = perl$(PERL_VER).dll$/;"	m
PERL_EXE	src/Make_mvc.mak	/^PERL_EXE = $(PERL)\\Bin$(PERL_ARCH)\\perl$/;"	m
PERL_INC	src/Make_mvc.mak	/^PERL_INC = \/I $(PERL_INCDIR)$/;"	m
PERL_INCDIR	src/Make_mvc.mak	/^PERL_INCDIR = $(PERL)\\Lib$(PERL_ARCH)\\Core$/;"	m
PERL_LIB	src/Make_mvc.mak	/^PERL_LIB = $(PERL_INCDIR)\\perl$(PERL_VER).lib$/;"	m
PERL_LIB	src/Make_mvc.mak	/^PERL_LIB = $(PERL_INCDIR)\\perl.lib$/;"	m
PERL_LIBS	src/auto/config.mk	/^PERL_LIBS	= $/;"	m
PERL_LIB_FLAG	src/Make_bc5.mak	/^PERL_LIB_FLAG = \/nodefaultlib:$/;"	m
PERL_OBJ	src/Make_mvc.mak	/^PERL_OBJ = $(OUTDIR)\\if_perl.obj $(OUTDIR)\\if_perlsfio.obj$/;"	m
PERL_OBJ	src/auto/config.mk	/^PERL_OBJ	= $/;"	m
PERL_PRO	src/auto/config.mk	/^PERL_PRO	= $/;"	m
PERL_SRC	src/auto/config.mk	/^PERL_SRC	= $/;"	m
PERL_VER	src/Make_bc5.mak	/^PERL_VER = 56$/;"	m
PERL_VER	src/Make_cyg.mak	/^PERL_VER = 56$/;"	m
PERL_VER	src/Make_ming.mak	/^PERL_VER=56$/;"	m
PERL_VER	src/Make_mvc.mak	/^PERL_VER = 56$/;"	m
PERROR	src/vim.h	1556;"	d
PERROR	src/vim.h	1558;"	d
PERTURB_SHIFT	src/hashtab.c	42;"	d	file:
PEXP_FUNC	src/ex_cmds2.c	/^    PEXP_FUNC,		\/* expand :profile func {funcname} *\/$/;"	e	enum:__anon64	file:
PEXP_SUBCMD	src/ex_cmds2.c	/^    PEXP_SUBCMD,	\/* expand :profile sub-commands *\/$/;"	e	enum:__anon64	file:
PFD_NOPREFIX	src/spell.c	827;"	d	file:
PFD_NOTSPECIAL	src/spell.c	829;"	d	file:
PFD_PREFIXTREE	src/spell.c	828;"	d	file:
PFNGCKLN	src/os_win32.c	/^typedef BOOL (__stdcall *PFNGCKLN)(LPSTR);$/;"	t	file:
PFNGCKLN	src/os_win32.c	/^typedef WINBASEAPI BOOL (WINAPI *PFNGCKLN)(LPSTR);$/;"	t	file:
PFX_FLAGS	src/spell.c	5037;"	d	file:
PGNSECINFO	src/os_win32.c	/^typedef DWORD (WINAPI *PGNSECINFO) (LPSTR, enum SE_OBJECT_TYPE,$/;"	t	file:
PHANDLE	src/os_win32.c	/^typedef int PHANDLE;$/;"	t	file:
PHOTONGUI_BUNDLE	src/Makefile	/^PHOTONGUI_BUNDLE =$/;"	m
PHOTONGUI_DEFS	src/Makefile	/^PHOTONGUI_DEFS	= -DFEAT_GUI_PHOTON$/;"	m
PHOTONGUI_INSTALL	src/Makefile	/^PHOTONGUI_INSTALL = install_normal install_gui_extra$/;"	m
PHOTONGUI_IPATH	src/Makefile	/^PHOTONGUI_IPATH	=$/;"	m
PHOTONGUI_LIBS1	src/Makefile	/^PHOTONGUI_LIBS1	= -lph -lphexlib$/;"	m
PHOTONGUI_LIBS2	src/Makefile	/^PHOTONGUI_LIBS2	=$/;"	m
PHOTONGUI_LIBS_DIR	src/Makefile	/^PHOTONGUI_LIBS_DIR =$/;"	m
PHOTONGUI_MAN_TARGETS	src/Makefile	/^PHOTONGUI_MAN_TARGETS = yes$/;"	m
PHOTONGUI_OBJ	src/Makefile	/^PHOTONGUI_OBJ	= objects\/gui.o objects\/gui_photon.o objects\/pty.o$/;"	m
PHOTONGUI_SRC	src/Makefile	/^PHOTONGUI_SRC	= gui.c gui_photon.c pty.c$/;"	m
PHOTONGUI_TARGETS	src/Makefile	/^PHOTONGUI_TARGETS = installglinks$/;"	m
PHOTONGUI_TESTTARGET	src/Makefile	/^PHOTONGUI_TESTTARGET = gui$/;"	m
PICKLENGTH	src/gui_at_sb.c	214;"	d	file:
PLAN_CR	src/screen.c	8385;"	d	file:
PLAN_LE	src/screen.c	8384;"	d	file:
PLAN_NL	src/screen.c	8386;"	d	file:
PLAN_WRITE	src/screen.c	8387;"	d	file:
PLUGSOURCE	src/Makefile	/^PLUGSOURCE = ..\/runtime\/plugin$/;"	m
PLUGSUBDIR	src/Makefile	/^PLUGSUBDIR = \/plugin$/;"	m
PLUGSUBLOC	src/Makefile	/^PLUGSUBLOC	= $(VIMRTLOC)$(PLUGSUBDIR)$/;"	m
PLUS	src/regexp.c	150;"	d	file:
PLUS_REGISTER	src/ops.c	33;"	d	file:
PLUS_REGISTER	src/ops.c	35;"	d	file:
PODIR	src/Makefile	/^PODIR = po$/;"	m
POINT	src/gui_w48.c	/^typedef int POINT;$/;"	t	file:
POSIX	src/os_qnx.h	15;"	d
POSTPROCESS	src/Make_mint.mak	/^POSTPROCESS = fixstk 20k $(VIMTARGET)$/;"	m
POSTSCRIPT	src/Make_ming.mak	/^POSTSCRIPT=no$/;"	m
POST_DEFS	src/Makefile	/^POST_DEFS = $(X_CFLAGS) $(MZSCHEME_CFLAGS) $(TCL_CFLAGS) $(RUBY_CFLAGS) $(EXTRA_DEFS)$/;"	m
POUND	src/ascii.h	126;"	d
POUND	src/ascii.h	42;"	d
PRCOLOR_BLACK	src/hardcopy.c	95;"	d	file:
PRCOLOR_WHITE	src/hardcopy.c	96;"	d	file:
PRE	src/Make_dice.mak	/^PRE = -H${SYMS}=vim.h$/;"	m
PRE_DEFS	src/Makefile	/^PRE_DEFS = -Iproto $(DEFS) $(GUI_DEFS) $(GUI_IPATH) $(CPPFLAGS) $(EXTRA_IPATHS)$/;"	m
PRG	src/Make_morph.mak	/^PRG =		Vim$/;"	m
PRINT	src/regexp.c	180;"	d	file:
PRINTDLG	src/os_mswin.c	/^typedef int PRINTDLG;$/;"	t	file:
PRINTDLG	src/os_win32.c	/^typedef int PRINTDLG;$/;"	t	file:
PRINTF_DECIMAL_LONG_U	src/vim.h	415;"	d
PRINTF_HEX_LONG_U	src/vim.h	399;"	d
PRINTF_HEX_LONG_U	src/vim.h	413;"	d
PRINTLINESIZE	src/spell.c	5059;"	d	file:
PRINTSOME	src/spell.c	5062;"	d	file:
PRINTSOURCE	src/Makefile	/^PRINTSOURCE = ..\/runtime\/print$/;"	m
PRINTSUBDIR	src/Makefile	/^PRINTSUBDIR = \/print$/;"	m
PRINTSUBLOC	src/Makefile	/^PRINTSUBLOC	= $(VIMRTLOC)$(PRINTSUBDIR)$/;"	m
PRINTWIDTH	src/spell.c	5060;"	d	file:
PRINT_NUMBER_WIDTH	src/structs.h	2424;"	d
PRL_ITEM	src/ex_cmds2.c	68;"	d	file:
PRO	src/Make_manx.mak	/^PRO =	proto\/blowfish.pro \\$/;"	m
PRO	src/Make_sas.mak	/^PRO = \\$/;"	m
PROFCMD_CONTINUE	src/ex_cmds2.c	1131;"	d	file:
PROFCMD_FILE	src/ex_cmds2.c	1135;"	d	file:
PROFCMD_FUNC	src/ex_cmds2.c	1133;"	d	file:
PROFCMD_LAST	src/ex_cmds2.c	1137;"	d	file:
PROFCMD_PAUSE	src/ex_cmds2.c	1129;"	d	file:
PROFCMD_START	src/ex_cmds2.c	1127;"	d	file:
PROF_NONE	src/vim.h	1707;"	d
PROF_PAUSED	src/vim.h	1709;"	d
PROF_YES	src/vim.h	1708;"	d
PROPT	src/Make_sas.mak	/^PROPT = DEF=PROTO GPROTO GPPARM MAXIMUMERRORS=999 GENPROTOSTATICS GENPROTOPARAMETERS$/;"	m
PROTOCOL_VERSION	src/integration.c	108;"	d	file:
PROTO_FLAGS	src/Makefile	/^PROTO_FLAGS = -m -M__ARGS -d -E"$(CPP)" $(NO_ATTR)$/;"	m
PROXY_DELEGATION	src/dlldata.c	14;"	d	file:
PRO_AUTO	src/Makefile	/^PRO_AUTO = \\$/;"	m
PRO_MANUAL	src/Makefile	/^PRO_MANUAL = os_amiga.pro os_msdos.pro os_win16.pro os_win32.pro \\$/;"	m
PRT_CID_PROLOG_VERSION	src/hardcopy.c	1284;"	d	file:
PRT_DSC_ENDCOMMENTS	src/hardcopy.c	1313;"	d	file:
PRT_DSC_ENDCOMMENTS_TYPE	src/hardcopy.c	1309;"	d	file:
PRT_DSC_MISC_TYPE	src/hardcopy.c	1306;"	d	file:
PRT_DSC_TITLE	src/hardcopy.c	1311;"	d	file:
PRT_DSC_TITLE_TYPE	src/hardcopy.c	1307;"	d	file:
PRT_DSC_VERSION	src/hardcopy.c	1312;"	d	file:
PRT_DSC_VERSION_TYPE	src/hardcopy.c	1308;"	d	file:
PRT_FILE_BUFFER_LEN	src/hardcopy.c	1782;"	d	file:
PRT_MEDIASIZE_LEN	src/hardcopy.c	997;"	d	file:
PRT_PROLOG_VERSION	src/hardcopy.c	1283;"	d	file:
PRT_PS_DEFAULT_BUFFER_SIZE	src/hardcopy.c	988;"	d	file:
PRT_PS_DEFAULT_DPI	src/hardcopy.c	986;"	d	file:
PRT_PS_DEFAULT_FONTSIZE	src/hardcopy.c	987;"	d	file:
PRT_PS_FONT_BOLD	src/hardcopy.c	1029;"	d	file:
PRT_PS_FONT_BOLDOBLIQUE	src/hardcopy.c	1031;"	d	file:
PRT_PS_FONT_OBLIQUE	src/hardcopy.c	1030;"	d	file:
PRT_PS_FONT_ROMAN	src/hardcopy.c	1028;"	d	file:
PRT_PS_FONT_TO_USER	src/hardcopy.c	1660;"	d	file:
PRT_RESOURCE_CMAP	src/hardcopy.c	1301;"	d	file:
PRT_RESOURCE_ENCODING	src/hardcopy.c	1300;"	d	file:
PRT_RESOURCE_HEADER	src/hardcopy.c	1297;"	d	file:
PRT_RESOURCE_PROCSET	src/hardcopy.c	1299;"	d	file:
PRT_RESOURCE_RESOURCE	src/hardcopy.c	1298;"	d	file:
PRT_RESOURCE_TYPE_CMAP	src/hardcopy.c	1271;"	d	file:
PRT_RESOURCE_TYPE_ENCODING	src/hardcopy.c	1270;"	d	file:
PRT_RESOURCE_TYPE_PROCSET	src/hardcopy.c	1269;"	d	file:
PRT_UNIT_INCH	src/globals.h	1261;"	d
PRT_UNIT_MM	src/globals.h	1262;"	d
PRT_UNIT_NAMES	src/globals.h	1264;"	d
PRT_UNIT_NONE	src/globals.h	1259;"	d
PRT_UNIT_PERC	src/globals.h	1260;"	d
PRT_UNIT_POINT	src/globals.h	1263;"	d
PSCR	src/hardcopy.c	1778;"	d	file:
PSECURITY_DESCRIPTOR	src/os_mswin.c	/^typedef int PSECURITY_DESCRIPTOR;$/;"	t	file:
PSECURITY_DESCRIPTOR	src/os_win32.c	/^typedef int PSECURITY_DESCRIPTOR;$/;"	t	file:
PSID	src/os_mswin.c	/^typedef int PSID;$/;"	t	file:
PSID	src/os_win32.c	/^typedef int PSID;$/;"	t	file:
PSLF	src/hardcopy.c	1777;"	d	file:
PSNSECINFO	src/os_win32.c	/^typedef DWORD (WINAPI *PSNSECINFO) (LPTSTR, enum SE_OBJECT_TYPE,$/;"	t	file:
PTBBUTTON	src/vimtbar.h	/^typedef TBBUTTON NEAR* PTBBUTTON;$/;"	t
PTR2CHAR	src/macros.h	273;"	d
PTR2CHAR	src/macros.h	280;"	d
PTR_BL	src/memline.c	/^typedef struct pointer_block	PTR_BL;	    \/* contents of a pointer block *\/$/;"	t	typeref:struct:pointer_block	file:
PTR_EN	src/memline.c	/^typedef struct pointer_entry	PTR_EN;	    \/* block\/line-count pair *\/$/;"	t	typeref:struct:pointer_entry	file:
PTR_ID	src/memline.c	69;"	d	file:
PTYRANGE0	src/pty.c	112;"	d	file:
PTYRANGE1	src/pty.c	115;"	d	file:
PTY_DONE	src/pty.c	178;"	d	file:
PTY_DONE	src/pty.c	196;"	d	file:
PTY_DONE	src/pty.c	221;"	d	file:
PTY_DONE	src/pty.c	247;"	d	file:
PTY_DONE	src/pty.c	275;"	d	file:
PTY_DONE	src/pty.c	312;"	d	file:
PTvalue	runtime/optwin.vim	/^fun! <SID>PTvalue()$/;"	f
PUM_DEF_HEIGHT	src/popupmnu.c	35;"	d	file:
PUM_DEF_WIDTH	src/popupmnu.c	36;"	d	file:
PUT_CURSEND	src/vim.h	1048;"	d
PUT_CURSLINE	src/vim.h	1049;"	d
PUT_FIXINDENT	src/vim.h	1047;"	d
PUT_LINE	src/vim.h	1050;"	d
PUT_LINE_FORWARD	src/vim.h	1052;"	d
PUT_LINE_SPLIT	src/vim.h	1051;"	d
PUT_UINT32	src/sha256.c	35;"	d	file:
PV_AI	src/option.c	57;"	d	file:
PV_AR	src/option.c	58;"	d	file:
PV_ARAB	src/option.c	191;"	d	file:
PV_BEXPR	src/option.c	106;"	d	file:
PV_BH	src/option.c	60;"	d	file:
PV_BIN	src/option.c	66;"	d	file:
PV_BL	src/option.c	67;"	d	file:
PV_BOMB	src/option.c	69;"	d	file:
PV_BOTH	src/option.c	45;"	d	file:
PV_BT	src/option.c	61;"	d	file:
PV_BUF	src/option.c	47;"	d	file:
PV_CC	src/option.c	235;"	d	file:
PV_CFU	src/option.c	93;"	d	file:
PV_CI	src/option.c	71;"	d	file:
PV_CIN	src/option.c	73;"	d	file:
PV_CINK	src/option.c	74;"	d	file:
PV_CINO	src/option.c	75;"	d	file:
PV_CINW	src/option.c	78;"	d	file:
PV_CM	src/option.c	80;"	d	file:
PV_CMS	src/option.c	82;"	d	file:
PV_COCU	src/option.c	251;"	d	file:
PV_COLE	src/option.c	252;"	d	file:
PV_COM	src/option.c	85;"	d	file:
PV_CPT	src/option.c	88;"	d	file:
PV_CRBIND	src/option.c	248;"	d	file:
PV_CUC	src/option.c	233;"	d	file:
PV_CUL	src/option.c	234;"	d	file:
PV_DEF	src/option.c	96;"	d	file:
PV_DICT	src/option.c	89;"	d	file:
PV_DIFF	src/option.c	194;"	d	file:
PV_EFM	src/option.c	62;"	d	file:
PV_EOL	src/option.c	99;"	d	file:
PV_EP	src/option.c	100;"	d	file:
PV_ET	src/option.c	101;"	d	file:
PV_FDC	src/option.c	197;"	d	file:
PV_FDE	src/option.c	205;"	d	file:
PV_FDI	src/option.c	199;"	d	file:
PV_FDL	src/option.c	200;"	d	file:
PV_FDM	src/option.c	201;"	d	file:
PV_FDN	src/option.c	203;"	d	file:
PV_FDT	src/option.c	206;"	d	file:
PV_FEN	src/option.c	198;"	d	file:
PV_FENC	src/option.c	103;"	d	file:
PV_FEX	src/option.c	109;"	d	file:
PV_FF	src/option.c	111;"	d	file:
PV_FLP	src/option.c	112;"	d	file:
PV_FML	src/option.c	202;"	d	file:
PV_FMR	src/option.c	208;"	d	file:
PV_FO	src/option.c	113;"	d	file:
PV_FT	src/option.c	115;"	d	file:
PV_GP	src/option.c	63;"	d	file:
PV_IMI	src/option.c	117;"	d	file:
PV_IMS	src/option.c	118;"	d	file:
PV_INC	src/option.c	97;"	d	file:
PV_INDE	src/option.c	120;"	d	file:
PV_INDK	src/option.c	121;"	d	file:
PV_INEX	src/option.c	124;"	d	file:
PV_INF	src/option.c	126;"	d	file:
PV_ISK	src/option.c	127;"	d	file:
PV_KEY	src/option.c	129;"	d	file:
PV_KMAP	src/option.c	132;"	d	file:
PV_KP	src/option.c	134;"	d	file:
PV_LBR	src/option.c	211;"	d	file:
PV_LISP	src/option.c	136;"	d	file:
PV_LIST	src/option.c	189;"	d	file:
PV_MA	src/option.c	138;"	d	file:
PV_MASK	src/option.c	48;"	d	file:
PV_MAXVAL	src/option.c	/^    PV_MAXVAL = 0xffff    \/* to avoid warnings for value out of range *\/$/;"	e	enum:__anon1	file:
PV_ML	src/option.c	139;"	d	file:
PV_MOD	src/option.c	140;"	d	file:
PV_MP	src/option.c	64;"	d	file:
PV_MPS	src/option.c	141;"	d	file:
PV_NF	src/option.c	142;"	d	file:
PV_NONE	src/option.c	/^    PV_NONE = 0,$/;"	e	enum:__anon1	file:
PV_NU	src/option.c	213;"	d	file:
PV_NUW	src/option.c	216;"	d	file:
PV_OFT	src/option.c	144;"	d	file:
PV_OFU	src/option.c	147;"	d	file:
PV_PATH	src/option.c	149;"	d	file:
PV_PI	src/option.c	150;"	d	file:
PV_PVW	src/option.c	219;"	d	file:
PV_QE	src/option.c	152;"	d	file:
PV_RL	src/option.c	222;"	d	file:
PV_RLC	src/option.c	223;"	d	file:
PV_RNU	src/option.c	214;"	d	file:
PV_RO	src/option.c	154;"	d	file:
PV_SCBIND	src/option.c	226;"	d	file:
PV_SCROLL	src/option.c	228;"	d	file:
PV_SI	src/option.c	156;"	d	file:
PV_SMC	src/option.c	162;"	d	file:
PV_SN	src/option.c	159;"	d	file:
PV_SPC	src/option.c	166;"	d	file:
PV_SPELL	src/option.c	230;"	d	file:
PV_SPF	src/option.c	167;"	d	file:
PV_SPL	src/option.c	168;"	d	file:
PV_STL	src/option.c	238;"	d	file:
PV_STS	src/option.c	170;"	d	file:
PV_SUA	src/option.c	172;"	d	file:
PV_SW	src/option.c	174;"	d	file:
PV_SWF	src/option.c	175;"	d	file:
PV_SYN	src/option.c	163;"	d	file:
PV_TAGS	src/option.c	176;"	d	file:
PV_TS	src/option.c	177;"	d	file:
PV_TSR	src/option.c	90;"	d	file:
PV_TW	src/option.c	178;"	d	file:
PV_TX	src/option.c	179;"	d	file:
PV_UDF	src/option.c	181;"	d	file:
PV_WFH	src/option.c	241;"	d	file:
PV_WFW	src/option.c	244;"	d	file:
PV_WIN	src/option.c	46;"	d	file:
PV_WM	src/option.c	183;"	d	file:
PV_WRAP	src/option.c	246;"	d	file:
PWORD	src/gui_w48.c	/^typedef int PWORD;$/;"	t	file:
PYTHON3INC	src/Make_ming.mak	/^PYTHON3INC=-I $(PYTHON3)\/include$/;"	m
PYTHON3INC	src/Make_ming.mak	/^PYTHON3INC=-I $(PYTHON3)\/win32inc$/;"	m
PYTHON3LIB	src/Make_ming.mak	/^PYTHON3LIB=-L$(PYTHON3)\/libs -lPYTHON$(PYTHON3_VER)$/;"	m
PYTHON3_CFLAGS	src/auto/config.mk	/^PYTHON3_CFLAGS	= $/;"	m
PYTHON3_CONFDIR	src/auto/config.mk	/^PYTHON3_CONFDIR	= $/;"	m
PYTHON3_INC	src/Make_mvc.mak	/^PYTHON3_INC = \/I "$(PYTHON3)\\Include" \/I "$(PYTHON3)\\PC"$/;"	m
PYTHON3_LIB	src/Make_mvc.mak	/^PYTHON3_LIB = $(PYTHON3)\\libs\\python$(PYTHON3_VER).lib$/;"	m
PYTHON3_LIB	src/Make_mvc.mak	/^PYTHON3_LIB = \/nodefaultlib:python$(PYTHON3_VER).lib$/;"	m
PYTHON3_LIBS	src/auto/config.mk	/^PYTHON3_LIBS	= $/;"	m
PYTHON3_LIB_FLAG	src/Make_bc5.mak	/^PYTHON3_LIB_FLAG = \/nodefaultlib:$/;"	m
PYTHON3_OBJ	src/Make_mvc.mak	/^PYTHON3_OBJ = $(OUTDIR)\\if_python3.obj$/;"	m
PYTHON3_OBJ	src/auto/config.mk	/^PYTHON3_OBJ	= $/;"	m
PYTHON3_SRC	src/auto/config.mk	/^PYTHON3_SRC	= $/;"	m
PYTHON3_VER	src/Make_bc5.mak	/^PYTHON3_VER = 31$/;"	m
PYTHON3_VER	src/Make_cyg.mak	/^PYTHON3_VER = 31$/;"	m
PYTHON3_VER	src/Make_ming.mak	/^PYTHON3_VER=31$/;"	m
PYTHON3_VER	src/Make_mvc.mak	/^PYTHON3_VER = 31$/;"	m
PYTHONINC	src/Make_ming.mak	/^PYTHONINC=-I $(PYTHON)\/include$/;"	m
PYTHONINC	src/Make_ming.mak	/^PYTHONINC=-I $(PYTHON)\/win32inc$/;"	m
PYTHONLIB	src/Make_ming.mak	/^PYTHONLIB=-L$(PYTHON)\/libs -lpython$(PYTHON_VER)$/;"	m
PYTHON_CFLAGS	src/auto/config.mk	/^PYTHON_CFLAGS	= $/;"	m
PYTHON_CONFDIR	src/auto/config.mk	/^PYTHON_CONFDIR	= $/;"	m
PYTHON_GETPATH_CFLAGS	src/auto/config.mk	/^PYTHON_GETPATH_CFLAGS = $/;"	m
PYTHON_INC	src/Make_mvc.mak	/^PYTHON_INC = \/I "$(PYTHON)\\Include" \/I "$(PYTHON)\\PC"$/;"	m
PYTHON_LIB	src/Make_mvc.mak	/^PYTHON_LIB = $(PYTHON)\\libs\\python$(PYTHON_VER).lib$/;"	m
PYTHON_LIB	src/Make_mvc.mak	/^PYTHON_LIB = \/nodefaultlib:python$(PYTHON_VER).lib$/;"	m
PYTHON_LIBS	src/auto/config.mk	/^PYTHON_LIBS	= $/;"	m
PYTHON_LIB_FLAG	src/Make_bc5.mak	/^PYTHON_LIB_FLAG = \/nodefaultlib:$/;"	m
PYTHON_OBJ	src/Make_mvc.mak	/^PYTHON_OBJ = $(OUTDIR)\\if_python.obj$/;"	m
PYTHON_OBJ	src/auto/config.mk	/^PYTHON_OBJ	= $/;"	m
PYTHON_PROC	src/if_python.c	261;"	d	file:
PYTHON_PROC	src/if_python3.c	249;"	d	file:
PYTHON_SRC	src/auto/config.mk	/^PYTHON_SRC	= $/;"	m
PYTHON_VER	src/Make_bc5.mak	/^PYTHON_VER = 22$/;"	m
PYTHON_VER	src/Make_cyg.mak	/^PYTHON_VER = 22$/;"	m
PYTHON_VER	src/Make_ming.mak	/^PYTHON_VER=22$/;"	m
PYTHON_VER	src/Make_mvc.mak	/^PYTHON_VER = 22$/;"	m
PY_CAN_RECURSE	src/if_python.c	93;"	d	file:
PY_SSIZE_T_CLEAN	src/if_python.c	47;"	d	file:
PY_SSIZE_T_CLEAN	src/if_python3.c	45;"	d	file:
P_ALLOCED	src/option.c	420;"	d	file:
P_BOOL	src/option.c	417;"	d	file:
P_COMMA	src/option.c	441;"	d	file:
P_DEF_ALLOCED	src/option.c	427;"	d	file:
P_EXPAND	src/option.c	424;"	d	file:
P_FLAGLIST	src/option.c	443;"	d	file:
P_GETTEXT	src/option.c	446;"	d	file:
P_HID	src/option.h	530;"	d
P_HID	src/option.h	532;"	d
P_INSECURE	src/option.c	449;"	d	file:
P_NFNAME	src/option.c	448;"	d	file:
P_NODEFAULT	src/option.c	426;"	d	file:
P_NODUP	src/option.c	442;"	d	file:
P_NOGLOB	src/option.c	447;"	d	file:
P_NO_MKRC	src/option.c	430;"	d	file:
P_NO_ML	src/option.c	452;"	d	file:
P_NUM	src/option.c	418;"	d	file:
P_PRI_MKRC	src/option.c	450;"	d	file:
P_RALL	src/option.c	438;"	d	file:
P_RBUF	src/option.c	437;"	d	file:
P_RCLR	src/option.c	439;"	d	file:
P_RSTAT	src/option.c	435;"	d	file:
P_RWIN	src/option.c	436;"	d	file:
P_SECURE	src/option.c	445;"	d	file:
P_STRING	src/option.c	419;"	d	file:
P_VIM	src/option.c	432;"	d	file:
P_VI_DEF	src/option.c	431;"	d	file:
P_WAS_SET	src/option.c	429;"	d	file:
PackageName	runtime/tools/pltags.pl	/^sub PackageName($)$/;"	s
PaintArrows	src/gui_at_sb.c	/^PaintArrows(sbw)$/;"	f	file:
PaintThumb	src/gui_at_sb.c	/^PaintThumb(sbw)$/;"	f	file:
ParmSub.If	runtime/macros/shellmenu.vim	/^imenu ParmSub.If parm not set print word and exit ${:?}hhi$/;"	m
ParmSub.Set	runtime/macros/shellmenu.vim	/^imenu ParmSub.Set parm to word if not set ${:=}hhi$/;"	m
ParmSub.Substitute	runtime/macros/shellmenu.vim	/^imenu ParmSub.Substitute word if parm not set ${:-}hhi$/;"	m
ParmSub.Substitute	runtime/macros/shellmenu.vim	/^imenu ParmSub.Substitute word if parm set else nothing ${:+}hhi$/;"	m
ParseDataToProps	runtime/tools/unicode.vim	/^func! ParseDataToProps()$/;"	f
ParseFoldProps	runtime/tools/unicode.vim	/^func! ParseFoldProps()$/;"	f
ParseRpmVars	runtime/ftplugin/spec.vim	/^    function s:ParseRpmVars(str, strline)$/;"	f
ParseSkip	runtime/macros/matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
ParseTagline	runtime/autoload/ccomplete.vim	/^function! s:ParseTagline(line)$/;"	f
ParseWidthProps	runtime/tools/unicode.vim	/^func! ParseWidthProps()$/;"	f
ParseWords	runtime/macros/matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
PeekNotifyEvent	src/gui_at_sb.c	/^PeekNotifyEvent(dpy, event, args)$/;"	f	file:
Peekstack	runtime/autoload/xmlcomplete.vim	/^function! s:Peekstack(sname)$/;"	f
PendingCommand	src/if_xcmdsrv.c	/^typedef struct PendingCommand$/;"	s	file:
PendingCommand	src/if_xcmdsrv.c	/^} PendingCommand;$/;"	t	typeref:struct:PendingCommand	file:
PendingCommand::code	src/if_xcmdsrv.c	/^    int	    code;	\/* Result Code. 0 is OK *\/$/;"	m	struct:PendingCommand	file:	access:public
PendingCommand::nextPtr	src/if_xcmdsrv.c	/^    struct PendingCommand *nextPtr;$/;"	m	struct:PendingCommand	typeref:struct:PendingCommand::PendingCommand	file:	access:public
PendingCommand::result	src/if_xcmdsrv.c	/^    char_u  *result;	\/* String result for command (malloc'ed).$/;"	m	struct:PendingCommand	file:	access:public
PendingCommand::serial	src/if_xcmdsrv.c	/^    int	    serial;	\/* Serial number expected in result. *\/$/;"	m	struct:PendingCommand	file:	access:public
PerformListing	runtime/autoload/netrw.vim	/^fun! s:PerformListing(islocal)$/;"	f
Pexplore	runtime/plugin/netrwPlugin.vim	/^com! -nargs=* -bar -bang			Pexplore	call netrw#Explore(-2,0,0,<q-args>)$/;"	c
PgColor_t	src/gui_photon.c	22;"	d	file:
Pg_BLACK	src/gui_photon.c	26;"	d	file:
PhEvent_t	src/gui_photon.c	23;"	d	file:
PhImage_t	src/gui_photon.c	31;"	d	file:
PhPoint_t	src/gui_photon.c	24;"	d	file:
PhTile_t	src/gui_photon.c	29;"	d	file:
Pick	runtime/ftplugin/gitrebase.vim	/^command! -buffer -bar Pick   :call s:choose('pick')$/;"	c
PixelToDialogX	src/gui_w48.c	/^PixelToDialogX(int numPixels)$/;"	f	file:	signature:(int numPixels)
PixelToDialogY	src/gui_w48.c	/^PixelToDialogY(int numPixels)$/;"	f	file:	signature:(int numPixels)
PlatformId	src/GvimExt/gvimext.cpp	/^PlatformId(void)$/;"	f	file:	signature:(void)
PlatformId	src/dosinst.h	/^PlatformId(void)$/;"	f	signature:(void)
PlatformId	src/os_win32.c	/^PlatformId(void)$/;"	f	signature:(void)
Pop	runtime/autoload/xmlcomplete.vim	/^function! s:Pop(sname)$/;"	f
PopPage	runtime/ftplugin/man.vim	/^func <SID>PopPage()$/;"	f
Port_Info	src/if_mzsch.c	/^} Port_Info;$/;"	t	typeref:struct:__anon27	file:
PostscrIndentGet	runtime/indent/postscr.vim	/^function! PostscrIndentGet(lnum)$/;"	f
PreGetPage	runtime/ftplugin/man.vim	/^func <SID>PreGetPage(cnt)$/;"	f
PreLink_Cmds	src/Make_ivc.mak	/^PreLink_Cmds=@if exist .\\oleDbg\\gvimd.pdb del .\\oleDbg\\gvimd.pdb$/;"	m
PrevNonBlankNonString	runtime/indent/ruby.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
Print	src/if_cscope.h	/^    Print$/;"	e	enum:__anon88
PrintDlgProc	src/os_mswin.c	/^PrintDlgProc(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	file:	signature:(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)
PrintHookProc	src/os_mswin.c	/^PrintHookProc($/;"	f	file:	signature:( HWND hDlg, UINT uiMsg, WPARAM wParam, LPARAM lParam )
ProcessSniffRequests	src/if_sniff.c	/^ProcessSniffRequests()$/;"	f
ProcessSniffRequests	src/if_sniff.h	/^extern void ProcessSniffRequests __ARGS((void));$/;"	p	signature:(void)
ProgressBar	runtime/syntax/2html.vim	/^  func! s:ProgressBar(title, max_value, winnr)$/;"	f
ProtoCheck	runtime/filetype.vim	/^func! s:ProtoCheck(default)$/;"	f
PtCallbackF_t	src/gui_photon.c	27;"	d	file:
PtCallbackInfo_t	src/gui_photon.c	28;"	d	file:
PtWidget_t	src/gui_photon.c	25;"	d	file:
PtWidget_t	src/gui_photon.c	30;"	d	file:
PtyProto	src/pty.c	/^static char PtyProto[] = "\/dev\/pt\/XY";$/;"	v	file:
PtyProto	src/pty.c	/^static char PtyProto[] = "\/dev\/ptyXY";$/;"	v	file:
PtyProto	src/pty.c	/^static char PtyProto[] = "\/dev\/ptym\/ptyXY";$/;"	v	file:
Push	runtime/autoload/xmlcomplete.vim	/^function! s:Push(el, sname)$/;"	f
PushToWindow	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::PushToWindow(HWND  \/* hParent *\/,$/;"	f	class:CShellExt	signature:(HWND , LPCSTR , LPCSTR , LPCSTR , int , int idHWnd)
PushToWindow	src/GvimExt/gvimext.h	/^    STDMETHODIMP PushToWindow(HWND hParent,$/;"	p	class:CShellExt	access:protected	signature:(HWND hParent, LPCSTR pszWorkingDir, LPCSTR pszCmd, LPCSTR pszParam, int iShowCmd, int idHWnd)
PutProperty	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::PutProperty (DISPID DispatchId, LPCTSTR Format, ...)$/;"	f	class:COleAutomationControl	signature:(DISPID DispatchId, LPCTSTR Format, ...)
PutProperty	src/VisVim/OleAut.cpp	/^bool COleAutomationControl::PutProperty (char* Name, LPCTSTR Format, ...)$/;"	f	class:COleAutomationControl	signature:(char* Name, LPCTSTR Format, ...)
PutProperty	src/VisVim/OleAut.h	/^	bool PutProperty (DISPID DispatchId, LPCTSTR Format, ...);$/;"	p	class:COleAutomationControl	access:public	signature:(DISPID DispatchId, LPCTSTR Format, ...)
PutProperty	src/VisVim/OleAut.h	/^	bool PutProperty (char* Name, LPCTSTR Format, ...);$/;"	p	class:COleAutomationControl	access:public	signature:(char* Name, LPCTSTR Format, ...)
Py3Init_vim	src/if_python3.c	/^PyMODINIT_FUNC Py3Init_vim(void)$/;"	f	signature:(void)
Py3Init_vim	src/if_python3.c	/^PyMODINIT_FUNC Py3Init_vim(void);$/;"	p	file:	signature:(void)
PyArg_Parse	src/if_python.c	121;"	d	file:
PyArg_Parse	src/if_python.c	130;"	d	file:
PyArg_Parse	src/if_python3.c	98;"	d	file:
PyArg_Parse	src/if_python3.c	99;"	d	file:
PyArg_ParseTuple	src/if_python.c	122;"	d	file:
PyArg_ParseTuple	src/if_python.c	131;"	d	file:
PyArg_ParseTuple	src/if_python3.c	100;"	d	file:
PyArg_ParseTuple	src/if_python3.c	101;"	d	file:
PyDict_GetItemString	src/if_python.c	157;"	d	file:
PyDict_GetItemString	src/if_python3.c	125;"	d	file:
PyDict_New	src/if_python.c	156;"	d	file:
PyDict_New	src/if_python3.c	124;"	d	file:
PyDict_SetItemString	src/if_python.c	132;"	d	file:
PyDict_SetItemString	src/if_python3.c	102;"	d	file:
PyErr_BadArgument	src/if_python.c	133;"	d	file:
PyErr_BadArgument	src/if_python3.c	103;"	d	file:
PyErr_Clear	src/if_python.c	134;"	d	file:
PyErr_Clear	src/if_python3.c	104;"	d	file:
PyErr_NoMemory	src/if_python.c	135;"	d	file:
PyErr_NoMemory	src/if_python3.c	105;"	d	file:
PyErr_Occurred	src/if_python.c	136;"	d	file:
PyErr_Occurred	src/if_python3.c	106;"	d	file:
PyErr_SetNone	src/if_python.c	137;"	d	file:
PyErr_SetNone	src/if_python3.c	107;"	d	file:
PyErr_SetString	src/if_python.c	138;"	d	file:
PyErr_SetString	src/if_python3.c	108;"	d	file:
PyErr_SetVim	src/if_py_both.h	54;"	d
PyEval_InitThreads	src/if_python.c	139;"	d	file:
PyEval_InitThreads	src/if_python3.c	109;"	d	file:
PyEval_RestoreThread	src/if_python.c	140;"	d	file:
PyEval_RestoreThread	src/if_python3.c	110;"	d	file:
PyEval_SaveThread	src/if_python.c	141;"	d	file:
PyEval_SaveThread	src/if_python3.c	111;"	d	file:
PyExc_AttributeError	src/if_python.c	252;"	d	file:
PyExc_AttributeError	src/if_python3.c	240;"	d	file:
PyExc_IndexError	src/if_python.c	253;"	d	file:
PyExc_IndexError	src/if_python3.c	241;"	d	file:
PyExc_KeyboardInterrupt	src/if_python.c	254;"	d	file:
PyExc_KeyboardInterrupt	src/if_python3.c	242;"	d	file:
PyExc_TypeError	src/if_python.c	255;"	d	file:
PyExc_TypeError	src/if_python3.c	243;"	d	file:
PyExc_ValueError	src/if_python.c	256;"	d	file:
PyExc_ValueError	src/if_python3.c	244;"	d	file:
PyGILState_Ensure	src/if_python.c	143;"	d	file:
PyGILState_Ensure	src/if_python3.c	112;"	d	file:
PyGILState_Release	src/if_python.c	144;"	d	file:
PyGILState_Release	src/if_python3.c	113;"	d	file:
PyImport_AppendInittab	src/if_python3.c	140;"	d	file:
PyImport_ImportModule	src/if_python.c	155;"	d	file:
PyImport_ImportModule	src/if_python3.c	122;"	d	file:
PyInquiry	src/if_python.c	70;"	d	file:
PyInquiry	src/if_python.c	78;"	d	file:
PyInt	src/if_python.c	69;"	d	file:
PyInt	src/if_python.c	77;"	d	file:
PyInt	src/if_python3.c	71;"	d	file:
PyIntArgFunc	src/if_python.c	71;"	d	file:
PyIntArgFunc	src/if_python.c	79;"	d	file:
PyIntIntArgFunc	src/if_python.c	72;"	d	file:
PyIntIntArgFunc	src/if_python.c	80;"	d	file:
PyIntIntObjArgProc	src/if_python.c	74;"	d	file:
PyIntIntObjArgProc	src/if_python.c	82;"	d	file:
PyIntObjArgProc	src/if_python.c	73;"	d	file:
PyIntObjArgProc	src/if_python.c	81;"	d	file:
PyInt_AsLong	src/if_python.c	146;"	d	file:
PyInt_FromLong	src/if_python.c	147;"	d	file:
PyInt_Type	src/if_python.c	148;"	d	file:
PyList_Append	src/if_python.c	150;"	d	file:
PyList_Append	src/if_python3.c	117;"	d	file:
PyList_GetItem	src/if_python.c	149;"	d	file:
PyList_GetItem	src/if_python3.c	116;"	d	file:
PyList_New	src/if_python.c	151;"	d	file:
PyList_New	src/if_python3.c	118;"	d	file:
PyList_SetItem	src/if_python.c	152;"	d	file:
PyList_SetItem	src/if_python3.c	119;"	d	file:
PyList_Size	src/if_python.c	153;"	d	file:
PyList_Size	src/if_python3.c	120;"	d	file:
PyList_Type	src/if_python.c	154;"	d	file:
PyLong_AsLong	src/if_python3.c	114;"	d	file:
PyLong_FromLong	src/if_python3.c	115;"	d	file:
PyMethodDef	src/if_python.c	/^struct PyMethodDef { Py_ssize_t a; };$/;"	s	file:
PyMethodDef::a	src/if_python.c	/^struct PyMethodDef { Py_ssize_t a; };$/;"	m	struct:PyMethodDef	file:	access:public
PyModule_AddObject	src/if_python3.c	139;"	d	file:
PyModule_Create2	src/if_python3.c	156;"	d	file:
PyModule_GetDict	src/if_python.c	158;"	d	file:
PyModule_GetDict	src/if_python3.c	126;"	d	file:
PyObject	src/if_python.c	61;"	d	file:
PyObject_Free	src/if_python.c	182;"	d	file:
PyObject_Free	src/if_python3.c	152;"	d	file:
PyObject_GenericGetAttr	src/if_python3.c	142;"	d	file:
PyObject_Init	src/if_python.c	176;"	d	file:
PyObject_Init	src/if_python3.c	123;"	d	file:
PyObject_Malloc	src/if_python.c	181;"	d	file:
PyObject_Malloc	src/if_python3.c	151;"	d	file:
PyObject_NEW	src/if_python3.c	163;"	d	file:
PyObject_NEW	src/if_python3.c	164;"	d	file:
PyRun_SimpleString	src/if_python.c	120;"	d	file:
PyRun_SimpleString	src/if_python.c	159;"	d	file:
PyRun_SimpleString	src/if_python3.c	127;"	d	file:
PyRun_SimpleString	src/if_python3.c	128;"	d	file:
PySequenceMethods	src/if_python.c	65;"	d	file:
PySlice_GetIndicesEx	src/if_python3.c	121;"	d	file:
PySlice_Type	src/if_python3.c	143;"	d	file:
PyString_AsString	src/if_python.c	160;"	d	file:
PyString_AsString	src/if_python3.c	73;"	d	file:
PyString_Check	src/if_python3.c	72;"	d	file:
PyString_FromString	src/if_python.c	161;"	d	file:
PyString_FromString	src/if_python3.c	75;"	d	file:
PyString_FromStringAndSize	src/if_python.c	162;"	d	file:
PyString_Size	src/if_python.c	163;"	d	file:
PyString_Size	src/if_python3.c	74;"	d	file:
PyString_Type	src/if_python.c	164;"	d	file:
PySys_SetArgv	src/if_python.c	166;"	d	file:
PySys_SetArgv	src/if_python3.c	130;"	d	file:
PySys_SetObject	src/if_python.c	165;"	d	file:
PySys_SetObject	src/if_python3.c	129;"	d	file:
PyThreadState	src/if_python.c	/^typedef PyObject PyThreadState;$/;"	t	file:
PyThreadState	src/if_python.c	62;"	d	file:
PyTypeObject	src/if_python.c	63;"	d	file:
PyType_GenericAlloc	src/if_python3.c	154;"	d	file:
PyType_GenericNew	src/if_python3.c	155;"	d	file:
PyType_IsSubtype	src/if_python.c	178;"	d	file:
PyType_Ready	src/if_python3.c	132;"	d	file:
PyType_Type	src/if_python.c	167;"	d	file:
PyType_Type	src/if_python3.c	131;"	d	file:
PyUnicode_FromString	src/if_python3.c	157;"	d	file:
PyUnicode_FromString	src/if_python3.c	158;"	d	file:
PyUnicode_FromStringAndSize	src/if_python3.c	159;"	d	file:
PyUnicode_FromStringAndSize	src/if_python3.c	160;"	d	file:
Py_BuildValue	src/if_python.c	123;"	d	file:
Py_BuildValue	src/if_python.c	168;"	d	file:
Py_BuildValue	src/if_python3.c	133;"	d	file:
Py_BuildValue	src/if_python3.c	134;"	d	file:
Py_Finalize	src/if_python.c	172;"	d	file:
Py_Finalize	src/if_python3.c	136;"	d	file:
Py_FindMethod	src/if_python.c	169;"	d	file:
Py_GetProgramName	src/if_python.c	/^Py_GetProgramName(void)$/;"	f	signature:(void)
Py_InitModule4	src/if_python.c	124;"	d	file:
Py_InitModule4	src/if_python.c	170;"	d	file:
Py_InitModule4_64	src/if_python.c	125;"	d	file:
Py_Initialize	src/if_python.c	171;"	d	file:
Py_Initialize	src/if_python3.c	135;"	d	file:
Py_IsInitialized	src/if_python.c	173;"	d	file:
Py_IsInitialized	src/if_python3.c	137;"	d	file:
Py_ssize_t_fmt	src/if_python.c	75;"	d	file:
Py_ssize_t_fmt	src/if_python.c	83;"	d	file:
Python3_Init	src/if_python3.c	/^Python3_Init(void)$/;"	f	file:	signature:(void)
PythonIO_Fini	src/if_python3.c	/^PythonIO_Fini(void)$/;"	f	file:	signature:(void)
PythonIO_Fini	src/if_python3.c	/^static void PythonIO_Fini(void);$/;"	p	file:	signature:(void)
PythonIO_Flush	src/if_py_both.h	/^PythonIO_Flush(void)$/;"	f	signature:(void)
PythonIO_Flush	src/if_python.c	/^static void PythonIO_Flush(void);$/;"	p	file:	signature:(void)
PythonIO_Init	src/if_python.c	/^PythonIO_Init(void)$/;"	f	file:	signature:(void)
PythonIO_Init	src/if_python.c	/^static int PythonIO_Init(void);$/;"	p	file:	signature:(void)
PythonIO_Init	src/if_python3.c	/^PythonIO_Init(void)$/;"	f	file:	signature:(void)
PythonIO_Init	src/if_python3.c	/^static int PythonIO_Init(void);$/;"	p	file:	signature:(void)
PythonIO_Init_io	src/if_py_both.h	/^PythonIO_Init_io(void)$/;"	f	signature:(void)
PythonMod_Init	src/if_python.c	/^PythonMod_Init(void)$/;"	f	file:	signature:(void)
PythonMod_Init	src/if_python.c	/^static int PythonMod_Init(void);$/;"	p	file:	signature:(void)
Python_Init	src/if_python.c	/^Python_Init(void)$/;"	f	file:	signature:(void)
Python_Lock_Vim	src/if_py_both.h	/^Python_Lock_Vim(void)$/;"	f	signature:(void)
Python_Release_Vim	src/if_py_both.h	/^Python_Release_Vim(void)$/;"	f	signature:(void)
Python_RestoreThread	src/if_python.c	/^Python_RestoreThread(void)$/;"	f	file:	signature:(void)
Python_SaveThread	src/if_python.c	/^Python_SaveThread(void)$/;"	f	file:	signature:(void)
Python_jump	runtime/ftplugin/python.vim	/^fun! <SID>Python_jump(motion) range$/;"	f
Q	runtime/evim.vim	/^map Q gq$/;"	m
Q	runtime/macros/hanoi/hanoi.vim	/^map Q 0iT$/;"	m
Q	runtime/vimrc_example.vim	/^map Q gq$/;"	m
QF_WINHEIGHT	src/vim.h	1413;"	d
QUOTESED	src/Makefile	/^QUOTESED = sed -e 's\/[\\\\"]\/\\\\&\/g' -e 's\/\\\\"\/"\/' -e 's\/\\\\";$$\/";\/'$/;"	m
QUOTESED	src/auto/config.mk	/^QUOTESED        = sed -e 's\/[\\\\"]\/\\\\&\/g' -e 's\/\\\\"\/"\/' -e 's\/\\\\";$$\/";\/'$/;"	m
QueryContextMenu	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::QueryContextMenu(HMENU hMenu,$/;"	f	class:CShellExt	signature:(HMENU hMenu, UINT indexMenu, UINT idCmdFirst, UINT , UINT )
QueryContextMenu	src/GvimExt/gvimext.h	/^    STDMETHODIMP QueryContextMenu(HMENU hMenu,$/;"	p	class:CShellExt	access:public	signature:(HMENU hMenu, UINT indexMenu, UINT idCmdFirst, UINT idCmdLast, UINT uFlags)
QueryInterface	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExt::QueryInterface(REFIID riid, LPVOID FAR *ppv)$/;"	f	class:CShellExt	signature:(REFIID riid, LPVOID FAR *ppv)
QueryInterface	src/GvimExt/gvimext.cpp	/^STDMETHODIMP CShellExtClassFactory::QueryInterface(REFIID riid,$/;"	f	class:CShellExtClassFactory	signature:(REFIID riid, LPVOID FAR *ppv)
QueryInterface	src/GvimExt/gvimext.h	/^	STDMETHODIMP			QueryInterface(REFIID, LPVOID FAR *);$/;"	p	class:CShellExtClassFactory	access:public	signature:(REFIID, LPVOID FAR *)
QueryInterface	src/GvimExt/gvimext.h	/^    STDMETHODIMP QueryInterface(REFIID, LPVOID FAR *);$/;"	p	class:CShellExt	access:public	signature:(REFIID, LPVOID FAR *)
QueryInterface	src/if_ole.cpp	/^    STDMETHOD(QueryInterface)(REFIID riid, void ** ppv);$/;"	p	class:CVim	file:	access:public	signature:(REFIID riid, void ** ppv)
QueryInterface	src/if_ole.cpp	/^    STDMETHOD(QueryInterface)(REFIID riid, void ** ppv);$/;"	p	class:CVimCF	file:	access:public	signature:(REFIID riid, void ** ppv)
QueryInterface	src/if_ole.cpp	/^CVim::QueryInterface(REFIID riid, void **ppv)$/;"	f	class:CVim	signature:(REFIID riid, void **ppv)
QueryInterface	src/if_ole.cpp	/^CVimCF::QueryInterface(REFIID riid, void **ppv)$/;"	f	class:CVimCF	signature:(REFIID riid, void **ppv)
QueryInterface	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )($/;"	m	struct:IVimVtbl	access:public
R	runtime/macros/hanoi/hanoi.vim	/^map R $rn$/;"	m
R	runtime/macros/less.vim	/^noremap <script> R <C-L><SID>L$/;"	m
R	runtime/macros/life/life.vim	/^map R CV$/;"	m
R	src/sha256.c	97;"	d	file:
R	src/testdir/test49.vim	/^    function! R(jump, retval) abort$/;"	f
R	src/testdir/test49.vim	/^function! R()$/;"	f
R13_	src/ascii.h	104;"	d
RANGE	src/ex_cmds.h	30;"	d
RANGE	src/ex_cmds.h	33;"	d
RARRAY_LEN	src/if_ruby.c	93;"	d	file:
RARRAY_PTR	src/if_ruby.c	96;"	d	file:
RA_BREAK	src/regexp.c	3827;"	d	file:
RA_CONT	src/regexp.c	3826;"	d	file:
RA_FAIL	src/regexp.c	3825;"	d	file:
RA_MATCH	src/regexp.c	3828;"	d	file:
RA_NOMATCH	src/regexp.c	3829;"	d	file:
RBAppend	src/if_py_both.h	/^RBAppend(BufferObject *self, PyObject *args, PyInt start, PyInt end, PyInt *new_end)$/;"	f	signature:(BufferObject *self, PyObject *args, PyInt start, PyInt end, PyInt *new_end)
RBAsItem	src/if_py_both.h	/^RBAsItem(BufferObject *self, PyInt n, PyObject *val, PyInt start, PyInt end, PyInt *new_end)$/;"	f	signature:(BufferObject *self, PyInt n, PyObject *val, PyInt start, PyInt end, PyInt *new_end)
RBAssSlice	src/if_python.c	/^RBAssSlice(BufferObject *self, PyInt lo, PyInt hi, PyObject *val, PyInt start, PyInt end, PyInt *new_end)$/;"	f	file:	signature:(BufferObject *self, PyInt lo, PyInt hi, PyObject *val, PyInt start, PyInt end, PyInt *new_end)
RBItem	src/if_py_both.h	/^RBItem(BufferObject *self, PyInt n, PyInt start, PyInt end)$/;"	f	signature:(BufferObject *self, PyInt n, PyInt start, PyInt end)
RBSlice	src/if_py_both.h	/^RBSlice(BufferObject *self, PyInt lo, PyInt hi, PyInt start, PyInt end)$/;"	f	signature:(BufferObject *self, PyInt lo, PyInt hi, PyInt start, PyInt end)
RC	src/Make_cyg.mak	/^RC = windres$/;"	m
RCFLAGS	src/Make_cyg.mak	/^RCFLAGS = -O coff $(DEFINES)$/;"	m
RCFLAGS	src/Make_mvc.mak	/^RCFLAGS = $(RCFLAGS) -DFEAT_GUI_W32$/;"	m
RCFLAGS	src/Make_mvc.mak	/^RCFLAGS = $(RCFLAGS) -DFEAT_OLE$/;"	m
RCFLAGS	src/Make_mvc.mak	/^RCFLAGS = $(rcflags) $(rcvars) -DNDEBUG$/;"	m
RCFLAGS	src/Make_mvc.mak	/^RCFLAGS = $(rcflags) $(rcvars) -D_DEBUG -DDEBUG$/;"	m
RE	src/farsi.h	122;"	d
READBIN	src/vim.h	1456;"	d
READBIN	src/vim.h	1460;"	d
READ_BUFFER	src/vim.h	955;"	d
READ_DUMMY	src/vim.h	956;"	d
READ_FILTER	src/vim.h	953;"	d
READ_KEEP_UNDO	src/vim.h	957;"	d
READ_NEW	src/vim.h	952;"	d
READ_STDIN	src/vim.h	954;"	d
RECT	src/gui_w48.c	/^typedef int RECT;$/;"	t	file:
REDRAW_TOP	src/vim.h	614;"	d
REGEXP_ABBR	src/regexp.c	/^static char_u REGEXP_ABBR[] = "nrtebdoxuU";$/;"	v	file:
REGEXP_INRANGE	src/regexp.c	/^static char_u REGEXP_INRANGE[] = "]^-n\\\\";$/;"	v	file:
REGION_ALL	src/spell.c	539;"	d	file:
REGMAGIC	src/regexp.c	271;"	d	file:
REGSTACK_INITIAL	src/regexp.c	3281;"	d	file:
REGSTR	src/ex_cmds.h	43;"	d
REG_MULTI	src/regexp.c	3322;"	d	file:
REG_NOPAREN	src/regexp.c	636;"	d	file:
REG_NPAREN	src/regexp.c	639;"	d	file:
REG_PAREN	src/regexp.c	637;"	d	file:
REG_ZPAREN	src/regexp.c	638;"	d	file:
REMAP_NONE	src/vim.h	932;"	d
REMAP_SCRIPT	src/vim.h	933;"	d
REMAP_SKIP	src/vim.h	934;"	d
REMAP_YES	src/vim.h	931;"	d
REN	src/Make_manx.mak	/^REN = $(SHELL) -c mv -f$/;"	m
REPLACE	src/vim.h	681;"	d
REPLACE_FLAG	src/vim.h	680;"	d
REPLACE_NORMAL	src/macros.h	237;"	d
REPLACE_NORMAL	src/macros.h	239;"	d
REPLY_COUNT	src/os_mswin.c	3023;"	d	file:
REPLY_ITEM	src/os_mswin.c	3022;"	d	file:
RES	src/GvimExt/Make_ming.mak	/^RES  := gvimext.res$/;"	m
RESCORE	src/spell.c	76;"	d	file:
RESDIR	src/Makefile	/^RESDIR = $(APPDIR)\/Contents\/Resources$/;"	m
RESETSTKOFLW	src/os_win32.h	135;"	d
RESETSTKOFLW	src/os_win32.h	137;"	d
RESET_CHARTAB	src/charset.c	30;"	d	file:
RESFILE	src/Make_bc5.mak	/^RESFILE = vim.res$/;"	m
RESIZE_BOTH	src/vim.h	1158;"	d
RESIZE_HOR	src/vim.h	1157;"	d
RESIZE_VERT	src/vim.h	1156;"	d
RETSIGTYPE	src/auto/config.h	134;"	d
RETSIGTYPE	src/os_mac.h	282;"	d
RETSIGTYPE	src/os_os2_cfg.h	88;"	d
RETSIGTYPE	src/os_vms_conf.h	72;"	d
RETURN	src/testdir/test49.vim	/^command! -nargs=? RETURN$/;"	c
RET_WIN_BUF_CHARTABSIZE	src/charset.c	812;"	d	file:
REX_SET	src/vim.h	997;"	d
REX_USE	src/vim.h	998;"	d
REZ	src/Makefile	/^REZ    = \/Developer\/Tools\/Rez$/;"	m
RE_BOF	src/regexp.c	224;"	d	file:
RE_BOTH	src/vim.h	987;"	d
RE_COL	src/regexp.c	229;"	d	file:
RE_EOF	src/regexp.c	225;"	d	file:
RE_LAST	src/vim.h	988;"	d
RE_LNUM	src/regexp.c	228;"	d	file:
RE_MAGIC	src/vim.h	991;"	d
RE_MARK	src/regexp.c	232;"	d	file:
RE_SEARCH	src/vim.h	985;"	d
RE_STRICT	src/vim.h	993;"	d
RE_STRING	src/vim.h	992;"	d
RE_SUBST	src/vim.h	986;"	d
RE_VCOL	src/regexp.c	230;"	d	file:
RE_VISUAL	src/regexp.c	233;"	d	file:
RF_HASNL	src/regexp.c	568;"	d	file:
RF_ICASE	src/regexp.c	566;"	d	file:
RF_ICOMBINE	src/regexp.c	569;"	d	file:
RF_LOOKBH	src/regexp.c	570;"	d	file:
RF_NOICASE	src/regexp.c	567;"	d	file:
RGB	src/gui_mac.c	180;"	d	file:
RGB	src/gui_photon.c	35;"	d	file:
RGVIEWNAME	src/Makefile	/^RGVIEWNAME	= r$(GVIEWNAME)$/;"	m
RGVIEWTARGET	src/Makefile	/^RGVIEWTARGET	= $(RGVIEWNAME)$(LNKEXT)$/;"	m
RGVIMNAME	src/Makefile	/^RGVIMNAME	= r$(GVIMNAME)$/;"	m
RGVIMTARGET	src/Makefile	/^RGVIMTARGET	= $(RGVIMNAME)$(LNKEXT)$/;"	m
RIGHTMOST_BUTTON_PRESSED	src/os_mswin.c	67;"	d	file:
RIGHTMOST_BUTTON_PRESSED	src/os_win32.c	54;"	d	file:
RI_ALPHA	src/regexp.c	495;"	d	file:
RI_DIGIT	src/regexp.c	490;"	d	file:
RI_HEAD	src/regexp.c	494;"	d	file:
RI_HEX	src/regexp.c	491;"	d	file:
RI_LOWER	src/regexp.c	496;"	d	file:
RI_OCTAL	src/regexp.c	492;"	d	file:
RI_UPPER	src/regexp.c	497;"	d	file:
RI_WHITE	src/regexp.c	498;"	d	file:
RI_WORD	src/regexp.c	493;"	d	file:
RLADDSUBFIX	src/ops.c	5053;"	d	file:
RLADDSUBFIX	src/ops.c	5055;"	d	file:
RL_MEMSET	src/screen.c	2264;"	d	file:
RM	src/Make_morph.mak	/^RM =		rm$/;"	m
RM	src/po/Make_cyg.mak	/^RM = rm -f$/;"	m
RM	src/po/Make_ming.mak	/^RM = del$/;"	m
RM	src/po/Make_mvc.mak	/^RM = del$/;"	m
RM_ABBR	src/getchar.c	103;"	d	file:
RM_NONE	src/getchar.c	101;"	d	file:
RM_SCRIPT	src/getchar.c	102;"	d	file:
RM_YES	src/getchar.c	100;"	d	file:
ROOT_UID	src/vim.h	74;"	d
ROT13	src/ascii.h	105;"	d
ROT13	src/ascii.h	22;"	d
ROTR	src/sha256.c	86;"	d	file:
ROWS_AVAIL	src/window.c	81;"	d	file:
ROWS_AVAIL	src/window.c	83;"	d	file:
RO_LOAD_CLIPBOARD	src/gui_riscos.c	68;"	d	file:
RP_DISCARD	src/ex_eval.c	714;"	d	file:
RP_MAKE	src/ex_eval.c	712;"	d	file:
RP_RESUME	src/ex_eval.c	713;"	d	file:
RQ_CONNECT	src/if_sniff.c	45;"	d	file:
RQ_CONTEXT	src/if_sniff.c	41;"	d	file:
RQ_DISCONNECT	src/if_sniff.c	46;"	d	file:
RQ_NONE	src/if_sniff.c	39;"	d	file:
RQ_NOSYMBOL	src/if_sniff.c	43;"	d	file:
RQ_SCONTEXT	src/if_sniff.c	42;"	d	file:
RQ_SILENT	src/if_sniff.c	44;"	d	file:
RQ_SIMPLE	src/if_sniff.c	40;"	d	file:
RSC	src/Make_dvc.mak	/^RSC=rc.exe$/;"	m
RSC	src/Make_ivc.mak	/^RSC=rc.exe$/;"	m
RSC	src/VisVim/VisVim.mak	/^RSC=rc.exe$/;"	m
RSC_PROJ	src/Make_ivc.mak	/^RSC_PROJ= \/l 0x409 \/d "FEAT_GUI_W32"$/;"	m
RSC_PROJ	src/Make_ivc.mak	/^RSC_PROJ=$(RSC_PROJ) \/I ".\\oleRel" \/d "NDEBUG" \/d "FEAT_OLE" \/fo.\\oleRel\\vim.res$/;"	m
RSC_PROJ	src/Make_ivc.mak	/^RSC_PROJ=$(RSC_PROJ) \/I .\\oleDbg \/d "_DEBUG" \/d "FEAT_OLE" \/fo.\\oleDbg\\vim.res$/;"	m
RSC_PROJ	src/Make_ivc.mak	/^RSC_PROJ=$(RSC_PROJ) \/d "NDEBUG" \/fo.\\gRel\\vim.res$/;"	m
RSC_PROJ	src/Make_ivc.mak	/^RSC_PROJ=$(RSC_PROJ) \/d "_DEBUG" \/fo.\\gDbg\\vim.res$/;"	m
RSC_PROJ	src/VisVim/VisVim.mak	/^RSC_PROJ= \/d "NDEBUG"$/;"	m
RSC_PROJ	src/VisVim/VisVim.mak	/^RSC_PROJ= \/d "_DEBUG"$/;"	m
RSC_PROJ	src/VisVim/VisVim.mak	/^RSC_PROJ=$(RSC_PROJ) \/l 0x409 \/d "_AFXDLL" \/fo"$(INTDIR)\/VisVim.res"$/;"	m
RSRC_DIR	src/Makefile	/^RSRC_DIR = os_mac_rsrc$/;"	m
RSTRING_LEN	src/if_ruby.c	99;"	d	file:
RSTRING_PTR	src/if_ruby.c	102;"	d	file:
RS_BEHIND1	src/regexp.c	/^    , RS_BEHIND1	\/* BEHIND \/ NOBEHIND matching rest *\/$/;"	e	enum:regstate_E	file:
RS_BEHIND2	src/regexp.c	/^    , RS_BEHIND2	\/* BEHIND \/ NOBEHIND matching behind part *\/$/;"	e	enum:regstate_E	file:
RS_BRANCH	src/regexp.c	/^    , RS_BRANCH		\/* BRANCH *\/$/;"	e	enum:regstate_E	file:
RS_BRCPLX_LONG	src/regexp.c	/^    , RS_BRCPLX_LONG	\/* BRACE_COMPLEX and trying longest match *\/$/;"	e	enum:regstate_E	file:
RS_BRCPLX_MORE	src/regexp.c	/^    , RS_BRCPLX_MORE	\/* BRACE_COMPLEX and trying one more match *\/$/;"	e	enum:regstate_E	file:
RS_BRCPLX_SHORT	src/regexp.c	/^    , RS_BRCPLX_SHORT	\/* BRACE_COMPLEX and trying shortest match *\/$/;"	e	enum:regstate_E	file:
RS_FAIL	src/gui_gtk_x11.c	1161;"	d	file:
RS_MCLOSE	src/regexp.c	/^    , RS_MCLOSE		\/* MCLOSE + [0-9] *\/$/;"	e	enum:regstate_E	file:
RS_MOPEN	src/regexp.c	/^    , RS_MOPEN		\/* MOPEN + [0-9] *\/$/;"	e	enum:regstate_E	file:
RS_NOMATCH	src/regexp.c	/^    , RS_NOMATCH	\/* NOMATCH *\/$/;"	e	enum:regstate_E	file:
RS_NONE	src/gui_gtk_x11.c	1159;"	d	file:
RS_NOPEN	src/regexp.c	/^    RS_NOPEN = 0	\/* NOPEN and NCLOSE *\/$/;"	e	enum:regstate_E	file:
RS_OK	src/gui_gtk_x11.c	1160;"	d	file:
RS_STAR_LONG	src/regexp.c	/^    , RS_STAR_LONG	\/* STAR\/PLUS\/BRACE_SIMPLE longest match *\/$/;"	e	enum:regstate_E	file:
RS_STAR_SHORT	src/regexp.c	/^    , RS_STAR_SHORT	\/* STAR\/PLUS\/BRACE_SIMPLE shortest match *\/$/;"	e	enum:regstate_E	file:
RS_ZCLOSE	src/regexp.c	/^    , RS_ZCLOSE		\/* ZCLOSE + [0-9] *\/$/;"	e	enum:regstate_E	file:
RS_ZOPEN	src/regexp.c	/^    , RS_ZOPEN		\/* ZOPEN + [0-9] *\/$/;"	e	enum:regstate_E	file:
RT_DEF	src/GvimExt/Make_bc5.mak	/^RT_DEF = -D_RTLDLL$/;"	m
RT_DEF	src/GvimExt/Make_bc5.mak	/^RT_DEF =$/;"	m
RT_LIB	src/GvimExt/Make_bc5.mak	/^RT_LIB = cw32.lib$/;"	m
RT_LIB	src/GvimExt/Make_bc5.mak	/^RT_LIB = cw32i.lib$/;"	m
RUBY	src/auto/config.mk	/^RUBY		= $/;"	m
RUBY19_OR_LATER	src/if_ruby.c	58;"	d	file:
RUBYEXTERN	src/if_ruby.c	22;"	d	file:
RUBYEXTERN	src/if_ruby.c	26;"	d	file:
RUBYINC	src/Make_ming.mak	/^RUBYINC =-I $(RUBY)\/lib\/ruby\/$(RUBY_VER_LONG)\/$(RUBY_PLATFORM) -I $(RUBY)\/include\/ruby-$(RUBY_VER_LONG) -I $(RUBY)\/include\/ruby-$(RUBY_VER_LONG)\/$(RUBY_PLATFORM)$/;"	m
RUBYLIB	src/Make_ming.mak	/^RUBYLIB = -L$(RUBY)\/lib -l$(RUBY_INSTALL_NAME)$/;"	m
RUBY_CFLAGS	src/auto/config.mk	/^RUBY_CFLAGS	= $/;"	m
RUBY_DATA_FUNC	src/if_ruby.c	111;"	d	file:
RUBY_EXPORT	src/if_ruby.c	47;"	d	file:
RUBY_INC	src/Make_mvc.mak	/^RUBY_INC = \/I "$(RUBY)\\include\\ruby-$(RUBY_VER_LONG)\\$(RUBY_PLATFORM)" \/I "$(RUBY)\\include\\ruby-$(RUBY_VER_LONG)"$/;"	m
RUBY_INC	src/Make_mvc.mak	/^RUBY_INC = \/I "$(RUBY)\\lib\\ruby\\$(RUBY_VER_LONG)\\$(RUBY_PLATFORM)"$/;"	m
RUBY_INSTALL_NAME	src/Make_bc5.mak	/^RUBY_INSTALL_NAME = msvcrt-ruby$(RUBY_VER)$/;"	m
RUBY_INSTALL_NAME	src/Make_bc5.mak	/^RUBY_INSTALL_NAME = mswin32-ruby$(RUBY_VER)$/;"	m
RUBY_INSTALL_NAME	src/Make_cyg.mak	/^RUBY_INSTALL_NAME = msvcrt-ruby$(RUBY_VER)$/;"	m
RUBY_INSTALL_NAME	src/Make_cyg.mak	/^RUBY_INSTALL_NAME = mswin32-ruby$(RUBY_VER)$/;"	m
RUBY_INSTALL_NAME	src/Make_ming.mak	/^RUBY_INSTALL_NAME = msvcrt-ruby$(RUBY_VER)$/;"	m
RUBY_INSTALL_NAME	src/Make_ming.mak	/^RUBY_INSTALL_NAME = mswin32-ruby$(RUBY_VER)$/;"	m
RUBY_INSTALL_NAME	src/Make_mvc.mak	/^RUBY_INSTALL_NAME = msvcrt-ruby$(RUBY_VER)$/;"	m
RUBY_INSTALL_NAME	src/Make_mvc.mak	/^RUBY_INSTALL_NAME = mswin32-ruby$(RUBY_VER)$/;"	m
RUBY_LIB	src/Make_mvc.mak	/^RUBY_LIB = $(RUBY)\\lib\\$(RUBY_INSTALL_NAME).lib$/;"	m
RUBY_LIBS	src/auto/config.mk	/^RUBY_LIBS	= $/;"	m
RUBY_LIB_FLAG	src/Make_bc5.mak	/^RUBY_LIB_FLAG = \/nodefaultlib:$/;"	m
RUBY_OBJ	src/Make_mvc.mak	/^RUBY_OBJ = $(OUTDIR)\\if_ruby.obj$/;"	m
RUBY_OBJ	src/auto/config.mk	/^RUBY_OBJ	= $/;"	m
RUBY_PLATFORM	src/Make_bc5.mak	/^RUBY_PLATFORM = i386-mswin32$/;"	m
RUBY_PLATFORM	src/Make_bc5.mak	/^RUBY_PLATFORM = i586-mswin32$/;"	m
RUBY_PLATFORM	src/Make_cyg.mak	/^RUBY_PLATFORM = i386-mswin32$/;"	m
RUBY_PLATFORM	src/Make_cyg.mak	/^RUBY_PLATFORM = i586-mswin32$/;"	m
RUBY_PLATFORM	src/Make_ming.mak	/^RUBY_PLATFORM = i386-mingw32$/;"	m
RUBY_PLATFORM	src/Make_ming.mak	/^RUBY_PLATFORM = i386-mswin32$/;"	m
RUBY_PLATFORM	src/Make_ming.mak	/^RUBY_PLATFORM = i586-mswin32$/;"	m
RUBY_PLATFORM	src/Make_mvc.mak	/^RUBY_PLATFORM = i386-mswin32$/;"	m
RUBY_PLATFORM	src/Make_mvc.mak	/^RUBY_PLATFORM = i586-mswin32$/;"	m
RUBY_PRO	src/auto/config.mk	/^RUBY_PRO	= $/;"	m
RUBY_PROC	src/if_ruby.c	305;"	d	file:
RUBY_SRC	src/auto/config.mk	/^RUBY_SRC	= $/;"	m
RUBY_VER	src/Make_bc5.mak	/^RUBY_VER = 16$/;"	m
RUBY_VER	src/Make_cyg.mak	/^RUBY_VER=16$/;"	m
RUBY_VER	src/Make_ming.mak	/^RUBY_VER = 16$/;"	m
RUBY_VER	src/Make_mvc.mak	/^RUBY_VER = 18$/;"	m
RUBY_VER_LONG	src/Make_bc5.mak	/^RUBY_VER_LONG = 1.6$/;"	m
RUBY_VER_LONG	src/Make_cyg.mak	/^RUBY_VER_LONG=1.6$/;"	m
RUBY_VER_LONG	src/Make_ming.mak	/^RUBY_VER_LONG = 1.6$/;"	m
RUBY_VER_LONG	src/Make_mvc.mak	/^RUBY_VER_LONG = 1.8$/;"	m
RULER_BUF_LEN	src/screen.c	9958;"	d	file:
RUNTIME_DIRNAME	src/feature.h	987;"	d
RVIEWNAME	src/Makefile	/^RVIEWNAME	= r$(VIEWNAME)$/;"	m
RVIEWTARGET	src/Makefile	/^RVIEWTARGET	= $(RVIEWNAME)$(LNKEXT)$/;"	m
RVIMNAME	src/Makefile	/^RVIMNAME	= r$(VIMNAME)$/;"	m
RVIMTARGET	src/Makefile	/^RVIMTARGET	= $(RVIMNAME)$(LNKEXT)$/;"	m
R_OK	src/vim.h	1482;"	d
Range	runtime/tools/unicode.vim	/^func! Range(ranges, start, end, step, add)$/;"	f
RangeAppend	src/if_py_both.h	/^RangeAppend(PyObject *self, PyObject *args)$/;"	f	signature:(PyObject *self, PyObject *args)
RangeAsItem	src/if_python3.c	/^RangeAsItem(PyObject *self, Py_ssize_t n, PyObject *val)$/;"	f	file:	signature:(PyObject *self, Py_ssize_t n, PyObject *val)
RangeAsItem	src/if_python3.c	/^static Py_ssize_t RangeAsItem(PyObject *, Py_ssize_t, PyObject *);$/;"	p	file:	signature:(PyObject *, Py_ssize_t, PyObject *)
RangeAsMapping	src/if_python3.c	/^PyMappingMethods RangeAsMapping = {$/;"	v
RangeAsSeq	src/if_python.c	/^static PySequenceMethods RangeAsSeq = {$/;"	v	file:
RangeAsSeq	src/if_python3.c	/^static PySequenceMethods RangeAsSeq = {$/;"	v	file:
RangeAssItem	src/if_python.c	/^RangeAssItem(PyObject *self, PyInt n, PyObject *val)$/;"	f	file:	signature:(PyObject *self, PyInt n, PyObject *val)
RangeAssItem	src/if_python.c	/^static PyInt RangeAssItem(PyObject *, PyInt, PyObject *);$/;"	p	file:	signature:(PyObject *, PyInt, PyObject *)
RangeAssSlice	src/if_python.c	/^RangeAssSlice(PyObject *self, PyInt lo, PyInt hi, PyObject *val)$/;"	f	file:	signature:(PyObject *self, PyInt lo, PyInt hi, PyObject *val)
RangeAssSlice	src/if_python.c	/^static PyInt RangeAssSlice(PyObject *, PyInt, PyInt, PyObject *);$/;"	p	file:	signature:(PyObject *, PyInt, PyInt, PyObject *)
RangeDestructor	src/if_python.c	/^RangeDestructor(PyObject *self)$/;"	f	file:	signature:(PyObject *self)
RangeDestructor	src/if_python3.c	/^RangeDestructor(PyObject *self)$/;"	f	file:	signature:(PyObject *self)
RangeEnd	src/if_python.c	/^static PyInt RangeEnd;$/;"	v	file:
RangeEnd	src/if_python3.c	/^static Py_ssize_t RangeEnd;$/;"	v	file:
RangeGetattr	src/if_python.c	/^RangeGetattr(PyObject *self, char *name)$/;"	f	file:	signature:(PyObject *self, char *name)
RangeGetattro	src/if_python3.c	/^RangeGetattro(PyObject *self, PyObject *nameobj)$/;"	f	file:	signature:(PyObject *self, PyObject *nameobj)
RangeItem	src/if_py_both.h	/^RangeItem(PyObject *self, PyInt n)$/;"	f	signature:(PyObject *self, PyInt n)
RangeLength	src/if_py_both.h	/^RangeLength(PyObject *self)$/;"	f	signature:(PyObject *self)
RangeMethods	src/if_py_both.h	/^static struct PyMethodDef RangeMethods[] = {$/;"	v	typeref:struct:PyMethodDef
RangeNew	src/if_py_both.h	/^RangeNew(buf_T *buf, PyInt start, PyInt end)$/;"	f	signature:(buf_T *buf, PyInt start, PyInt end)
RangeObject	src/if_py_both.h	/^} RangeObject;$/;"	t	typeref:struct:__anon13
RangeRepr	src/if_py_both.h	/^RangeRepr(PyObject *self)$/;"	f	signature:(PyObject *self)
RangeSlice	src/if_py_both.h	/^RangeSlice(PyObject *self, PyInt lo, PyInt hi)$/;"	f	signature:(PyObject *self, PyInt lo, PyInt hi)
RangeStart	src/if_python.c	/^static PyInt RangeStart;$/;"	v	file:
RangeStart	src/if_python3.c	/^static Py_ssize_t RangeStart;$/;"	v	file:
RangeSubscript	src/if_python3.c	/^RangeSubscript(PyObject *self, PyObject* idx)$/;"	f	file:	signature:(PyObject *self, PyObject* idx)
RangeSubscript	src/if_python3.c	/^static PyObject* RangeSubscript(PyObject *self, PyObject* idx);$/;"	p	file:	signature:(PyObject *self, PyObject* idx)
RangeType	src/if_python.c	/^static PyTypeObject RangeType;$/;"	v	file:
RangeType	src/if_python3.c	/^static PyTypeObject RangeType;$/;"	v	file:
RangeType_Check	src/if_python.c	814;"	d	file:
RangeType_Check	src/if_python3.c	816;"	d	file:
ReadFromBuffer	src/if_sniff.c	/^ReadFromBuffer(char *buf, int maxlen)$/;"	f	file:	signature:(char *buf, int maxlen)
RealWaitForChar	src/os_unix.c	/^RealWaitForChar(fd, msec, check_for_gpm)$/;"	f
RealWaitForChar	src/os_unix.c	/^int  RealWaitForChar __ARGS((int, long, int *));$/;"	p	file:	signature:(int, long, int *)
RealWaitForChar	src/os_unix.c	/^static int  RealWaitForChar __ARGS((int, long, int *));$/;"	p	file:	signature:(int, long, int *)
Realize	src/gui_at_sb.c	/^Realize(w, valueMask, attributes)$/;"	f	file:
Realize	src/gui_at_sb.c	/^static void Realize __ARGS((Widget, Mask *, XSetWindowAttributes *));$/;"	p	file:	signature:(Widget, Mask *, XSetWindowAttributes *)
Reason	runtime/tools/ccfilter.c	/^char	       Reason[LINELENGTH];$/;"	v
RecordInFile	runtime/autoload/vimball.vim	/^fun! s:RecordInFile(home)$/;"	f
RecordInVar	runtime/autoload/vimball.vim	/^fun! s:RecordInVar(home,cmd)$/;"	f
Recording	src/globals.h	/^EXTERN int Recording INIT(= FALSE);	\/* TRUE when recording into a reg. *\/$/;"	v
RecursiveDeleteKey	src/if_ole.cpp	/^static void RecursiveDeleteKey(HKEY hKeyParent, const char *child)$/;"	f	file:	signature:(HKEY hKeyParent, const char *child)
RecursiveDeleteKey	src/if_ole.cpp	/^static void RecursiveDeleteKey(HKEY hKeyParent, const char *child);$/;"	p	file:	signature:(HKEY hKeyParent, const char *child)
Red	src/gui_mac.c	181;"	d	file:
Redisplay	src/gui_at_sb.c	/^Redisplay(w, event, region)$/;"	f	file:
Redisplay	src/gui_at_sb.c	/^static void Redisplay __ARGS((Widget, XEvent *, Region));$/;"	p	file:	signature:(Widget, XEvent *, Region)
Redisplay	src/gui_xmebw.c	/^Redisplay(Widget w, XEvent *event, Region region)$/;"	f	file:	signature:(Widget w, XEvent *event, Region region)
Redisplay	src/gui_xmebw.c	/^static void Redisplay(Widget, XEvent *, Region);$/;"	p	file:	signature:(Widget, XEvent *, Region)
RedrawingDisabled	src/globals.h	/^EXTERN int	RedrawingDisabled INIT(= 0);$/;"	v
Ref	runtime/macros/matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
RegisterMe	src/if_ole.cpp	/^extern "C" void RegisterMe(int silent)$/;"	f	signature:(int silent)
Release	runtime/tools/shtags.pl	/^Release:	$id[2]$/;"	l
Release	src/GvimExt/gvimext.cpp	/^STDMETHODIMP_(ULONG) CShellExt::Release()$/;"	f	class:CShellExt	signature:()
Release	src/GvimExt/gvimext.cpp	/^STDMETHODIMP_(ULONG) CShellExtClassFactory::Release()$/;"	f	class:CShellExtClassFactory	signature:()
Release	src/GvimExt/gvimext.h	/^	STDMETHODIMP_(ULONG)	Release();$/;"	p	class:CShellExtClassFactory	access:public	signature:()
Release	src/GvimExt/gvimext.h	/^    STDMETHODIMP_(ULONG) Release();$/;"	p	class:CShellExt	access:public	signature:()
Release	src/if_ole.cpp	/^CVim::Release()$/;"	f	class:CVim	signature:()
Release	src/if_ole.cpp	/^CVimCF::Release()$/;"	f	class:CVimCF	signature:()
Release	src/if_ole.h	/^	ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )($/;"	m	struct:IVimVtbl	access:public
RemotePathAnalysis	runtime/autoload/netrw.vim	/^fun! s:RemotePathAnalysis(dirname)$/;"	f
RemoteSystem	runtime/autoload/netrw.vim	/^fun! s:RemoteSystem(cmd)$/;"	f
RepeatNotify	src/gui_at_sb.c	/^RepeatNotify(client_data, idp)$/;"	f	file:
ReportInternalError	src/VisVim/DSAddIn.cpp	/^void ReportInternalError (char* Fct)$/;"	f	signature:(char* Fct)
ReportInternalError	src/VisVim/VisVim.h	/^void ReportInternalError (char* Fct);$/;"	p	signature:(char* Fct)
ReportLastError	src/VisVim/DSAddIn.cpp	/^void ReportLastError (HRESULT Err)$/;"	f	signature:(HRESULT Err)
ReportLastError	src/VisVim/VisVim.h	/^void ReportLastError (HRESULT Err);$/;"	p	signature:(HRESULT Err)
Reset	src/if_cscope.h	/^typedef enum { Add, Find, Help, Kill, Reset, Show } csid_e;$/;"	e	enum:__anon87
ResetPhpOptions	runtime/indent/php.vim	/^function! ResetPhpOptions()$/;"	f
ResetRedobuff	src/getchar.c	/^ResetRedobuff()$/;"	f
Resize	src/gui_at_sb.c	/^Resize(w)$/;"	f	file:
Resize	src/gui_at_sb.c	/^static void Resize __ARGS((Widget));$/;"	p	file:	signature:(Widget)
ResizeConBufAndWindow	src/os_win32.c	/^ResizeConBufAndWindow($/;"	f	file:	signature:( HANDLE hConsole, int xSize, int ySize)
Resolve	runtime/macros/matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
RestoreBufVars	runtime/autoload/netrw.vim	/^fun! s:RestoreBufVars()$/;"	f
RestoreConsoleBuffer	src/os_win32.c	/^RestoreConsoleBuffer($/;"	f	file:	signature:( ConsoleBuffer *cb, BOOL RestoreScreen)
RestoreCursorline	runtime/autoload/netrw.vim	/^fun! s:RestoreCursorline()$/;"	f
RestoreKeywords	runtime/autoload/xmlcomplete.vim	/^function! s:RestoreKeywords()$/;"	f
RestoreShiftwidth	runtime/ftplugin/cobol.vim	/^function! s:RestoreShiftwidth()$/;"	f
RestoreWinVars	runtime/autoload/netrw.vim	/^fun! s:RestoreWinVars()$/;"	f
ResultFromShort	src/GvimExt/gvimext.h	52;"	d
RevOut	src/gui_w32.c	/^RevOut( HDC s_hdc,$/;"	f	file:	signature:( HDC s_hdc, int col, int row, UINT foptions, CONST RECT *pcliprect, LPCTSTR text, UINT len, CONST INT *padding)
Reword	runtime/ftplugin/gitrebase.vim	/^command! -buffer -bar Reword :call s:choose('reword')$/;"	c
RmVimball	runtime/plugin/vimballPlugin.vim	/^com! -na=* -complete=dir  RmVimball				call vimball#SaveSettings()|call vimball#RmVimball(<f-args>)|call vimball#RestoreSettings()$/;"	c
Rmdir	runtime/autoload/tar.vim	/^fun! s:Rmdir(fname)$/;"	f
Rmdir	runtime/autoload/zip.vim	/^fun! s:Rmdir(fname)$/;"	f
Row	runtime/tools/ccfilter.c	/^unsigned long  Row;$/;"	v
Rows	src/globals.h	/^EXTERN long	Rows			\/* nr of rows in the screen *\/$/;"	v
RplGetFreeIndent	runtime/indent/rpl.vim	/^function RplGetFreeIndent()$/;"	f
RplGetIndent	runtime/indent/rpl.vim	/^function RplGetIndent(lnum)$/;"	f
RubyBalloonexpr	runtime/ftplugin/ruby.vim	/^function! RubyBalloonexpr()$/;"	f
RubyCursorIdentifier	runtime/ftplugin/ruby.vim	/^function! RubyCursorIdentifier()$/;"	f
S	runtime/macros/hanoi/hanoi.vim	/^map S $r\$$/;"	m
S	src/testdir/test49.vim	/^function! S(n) abort$/;"	f
S0	src/sha256.c	88;"	d	file:
S1	src/sha256.c	89;"	d	file:
S2	src/sha256.c	91;"	d	file:
S3	src/sha256.c	92;"	d	file:
SAD	src/farsi.h	127;"	d
SAFE_GETTEXT_DLL_OBJ	src/Make_ming.mak	/^SAFE_GETTEXT_DLL_OBJ = $(GETTEXT)\/src\/safe_gettext_dll\/safe_gettext_dll.o$/;"	m
SAL_COLLAPSE	src/spell.c	523;"	d	file:
SAL_F0LLOWUP	src/spell.c	522;"	d	file:
SAL_REM_ACCENTS	src/spell.c	524;"	d	file:
SAVE_YOURSELF_IDX	src/gui_x11.c	90;"	d	file:
SBAR_BOTTOM	src/gui.h	130;"	d
SBAR_HORIZ	src/gui.h	134;"	d
SBAR_LEFT	src/gui.h	128;"	d
SBAR_NONE	src/gui.h	127;"	d
SBAR_RIGHT	src/gui.h	129;"	d
SBAR_VERT	src/gui.h	133;"	d
SBLOCKSIZE	src/spell.c	4864;"	d	file:
SBOXOK	src/ex_cmds.h	53;"	d
SB_DEFAULT_WIDTH	src/gui.h	137;"	d
SCANF_DECIMAL_LONG_U	src/vim.h	398;"	d
SCANF_DECIMAL_LONG_U	src/vim.h	412;"	d
SCANF_HEX_LONG_U	src/vim.h	397;"	d
SCANF_HEX_LONG_U	src/vim.h	411;"	d
SCHEME_BYTE_STRLEN_VAL	src/if_mzsch.h	45;"	d
SCHEME_BYTE_STR_VAL	src/if_mzsch.h	46;"	d
SCHEME_GET_BYTE_STRING	src/if_mzsch.h	41;"	d
SCHEME_GET_BYTE_STRING	src/if_mzsch.h	44;"	d
SCHEME_STRINGP	src/if_mzsch.h	31;"	d
SCHEME_STR_VAL	src/if_mzsch.h	32;"	d
SCHEME_VIMBUFFERP	src/if_mzsch.c	37;"	d	file:
SCHEME_VIMWINDOWP	src/if_mzsch.c	38;"	d	file:
SCORE_BIG	src/spell.c	676;"	d	file:
SCORE_COMMON1	src/spell.c	662;"	d	file:
SCORE_COMMON2	src/spell.c	663;"	d	file:
SCORE_COMMON3	src/spell.c	664;"	d	file:
SCORE_DEL	src/spell.c	650;"	d	file:
SCORE_DELCOMP	src/spell.c	652;"	d	file:
SCORE_DELDUP	src/spell.c	651;"	d	file:
SCORE_EDIT_MIN	src/spell.c	682;"	d	file:
SCORE_FILE	src/spell.c	658;"	d	file:
SCORE_ICASE	src/spell.c	641;"	d	file:
SCORE_INS	src/spell.c	653;"	d	file:
SCORE_INSCOMP	src/spell.c	655;"	d	file:
SCORE_INSDUP	src/spell.c	654;"	d	file:
SCORE_LIMITMAX	src/spell.c	678;"	d	file:
SCORE_MAXINIT	src/spell.c	659;"	d	file:
SCORE_MAXMAX	src/spell.c	677;"	d	file:
SCORE_NONWORD	src/spell.c	656;"	d	file:
SCORE_RARE	src/spell.c	643;"	d	file:
SCORE_REGION	src/spell.c	642;"	d	file:
SCORE_REP	src/spell.c	646;"	d	file:
SCORE_SFMAX1	src/spell.c	672;"	d	file:
SCORE_SFMAX2	src/spell.c	673;"	d	file:
SCORE_SFMAX3	src/spell.c	674;"	d	file:
SCORE_SIMILAR	src/spell.c	648;"	d	file:
SCORE_SPLIT	src/spell.c	639;"	d	file:
SCORE_SPLIT_NO	src/spell.c	640;"	d	file:
SCORE_SUBCOMP	src/spell.c	649;"	d	file:
SCORE_SUBST	src/spell.c	647;"	d	file:
SCORE_SWAP	src/spell.c	644;"	d	file:
SCORE_SWAP3	src/spell.c	645;"	d	file:
SCORE_THRES2	src/spell.c	665;"	d	file:
SCORE_THRES3	src/spell.c	666;"	d	file:
SCRAPTEXTFLAVOR	src/gui_mac.c	52;"	d	file:
SCRAPTEXTFLAVOR	src/gui_mac.c	54;"	d	file:
SCREEN_LINE	src/screen.c	127;"	d	file:
SCREEN_LINE	src/screen.c	130;"	d	file:
SCRIPTID_INIT	src/option.c	405;"	d	file:
SCRIPTID_INIT	src/option.c	407;"	d	file:
SCRIPTLOC	src/Makefile	/^SCRIPTLOC	= $(VIMRTLOC)$/;"	m
SCRIPTMOD	src/Makefile	/^SCRIPTMOD = 755$/;"	m
SCRIPTS	src/testdir/Make_amiga.mak	/^SCRIPTS = test1.out test3.out test4.out test5.out test6.out \\$/;"	m
SCRIPTS	src/testdir/Make_dos.mak	/^SCRIPTS =	test3.out test4.out test5.out test6.out test7.out \\$/;"	m
SCRIPTS	src/testdir/Make_ming.mak	/^SCRIPTS =	test3.out test4.out test5.out test6.out test7.out \\$/;"	m
SCRIPTS	src/testdir/Make_os2.mak	/^SCRIPTS = test1.out test3.out test4.out test5.out test6.out \\$/;"	m
SCRIPTS	src/testdir/Makefile	/^SCRIPTS = test1.out test2.out test3.out test4.out test5.out test6.out \\$/;"	m
SCRIPTS16	src/testdir/Make_dos.mak	/^SCRIPTS16 =	test1.out test19.out test20.out test22.out \\$/;"	m
SCRIPTS16	src/testdir/Make_ming.mak	/^SCRIPTS16 =	test1.out test19.out test20.out test22.out \\$/;"	m
SCRIPTS32	src/testdir/Make_dos.mak	/^SCRIPTS32 =	test50.out test70.out$/;"	m
SCRIPTS32	src/testdir/Make_ming.mak	/^SCRIPTS32 =	test50.out test70.out$/;"	m
SCRIPTSOURCE	src/Makefile	/^SCRIPTSOURCE = ..\/runtime$/;"	m
SCRIPTS_GUI	src/testdir/Make_dos.mak	/^SCRIPTS_GUI = test16.out$/;"	m
SCRIPTS_GUI	src/testdir/Make_ming.mak	/^SCRIPTS_GUI = test16.out$/;"	m
SCRIPTS_GUI	src/testdir/Makefile	/^SCRIPTS_GUI = test16.out$/;"	m
SCRIPT_ITEM	src/ex_cmds2.c	57;"	d	file:
SCRIPT_SV	src/eval.c	156;"	d	file:
SCRIPT_VARS	src/eval.c	157;"	d	file:
SCROLL_PAST_END	src/gui.c	48;"	d	file:
SE	src/farsi.h	115;"	d
SEARCH_ECHO	src/vim.h	889;"	d
SEARCH_END	src/vim.h	894;"	d
SEARCH_HIS	src/vim.h	893;"	d
SEARCH_HL_PRIORITY	src/screen.c	139;"	d	file:
SEARCH_KEEP	src/vim.h	898;"	d
SEARCH_MARK	src/vim.h	897;"	d
SEARCH_MSG	src/vim.h	890;"	d
SEARCH_NFMSG	src/vim.h	891;"	d
SEARCH_NOOF	src/vim.h	895;"	d
SEARCH_OPT	src/vim.h	892;"	d
SEARCH_PEEK	src/vim.h	899;"	d
SEARCH_REV	src/vim.h	888;"	d
SEARCH_START	src/vim.h	896;"	d
SEA_DIALOG	src/vim.h	1183;"	d
SEA_NONE	src/vim.h	1182;"	d
SEA_QUIT	src/vim.h	1184;"	d
SEA_RECOVER	src/vim.h	1185;"	d
SECURITY_INFORMATION	src/os_mswin.c	/^typedef int SECURITY_INFORMATION;$/;"	t	file:
SECURITY_INFORMATION	src/os_win32.c	/^typedef int SECURITY_INFORMATION;$/;"	t	file:
SEEK_END	src/misc1.c	10001;"	d	file:
SEEK_END	src/os_unix.c	5209;"	d	file:
SEEK_SET	src/misc1.c	9998;"	d	file:
SEEK_SET	src/os_unix.c	5206;"	d	file:
SELECTMODE	src/vim.h	696;"	d
SELECT_CLEARED	src/vim.h	1856;"	d
SELECT_DONE	src/vim.h	1858;"	d
SELECT_IN_PROGRESS	src/vim.h	1857;"	d
SELECT_MODE_CHAR	src/vim.h	1860;"	d
SELECT_MODE_LINE	src/vim.h	1862;"	d
SELECT_MODE_WORD	src/vim.h	1861;"	d
SEL_FILE_CANCEL	src/gui_at_fs.c	73;"	d	file:
SEL_FILE_NULL	src/gui_at_fs.c	75;"	d	file:
SEL_FILE_OK	src/gui_at_fs.c	74;"	d	file:
SEL_FILE_TEXT	src/gui_at_fs.c	76;"	d	file:
SEND_MSEC_POLL	runtime/tools/xcmdsrv_client.c	206;"	d	file:
SEND_MSEC_POLL	src/if_xcmdsrv.c	578;"	d	file:
SESSION_FILE	src/feature.h	904;"	d
SESSION_FILE	src/os_riscos.h	87;"	d
SETJMP	src/os_unix.h	529;"	d
SETJMP	src/os_unix.h	533;"	d
SETWSIZE	src/vim.h	691;"	d
SET_CHARTAB	src/charset.c	29;"	d	file:
SET_FLAG	src/undo.c	1781;"	d	file:
SET_NUM_MOUSE_CLICKS	src/vim.h	1750;"	d
SET_SIG_ALARM	src/os_unix.c	182;"	d	file:
SFDir	src/gui_at_fs.c	/^} SFDir;$/;"	t	typeref:struct:__anon114	file:
SFEntry	src/gui_at_fs.c	/^} SFEntry;$/;"	t	typeref:struct:__anon113	file:
SFLogin	src/gui_at_fs.c	/^} SFLogin;$/;"	t	typeref:struct:__anon115	file:
SFNAME	src/regexp.c	179;"	d	file:
SF_CCOMMENT	src/syntax.c	183;"	d	file:
SF_DEFAULT_FONT	src/gui_at_fs.c	1062;"	d	file:
SF_DEFAULT_FONT	src/gui_at_fs.c	1064;"	d	file:
SF_DO_NOT_SCROLL	src/gui_at_fs.c	79;"	d	file:
SF_DO_SCROLL	src/gui_at_fs.c	78;"	d	file:
SF_MATCH	src/syntax.c	184;"	d	file:
SFaboveAndBelowText	src/gui_at_fs.c	/^static int	SFaboveAndBelowText = 2;$/;"	v	file:
SFapp	src/gui_at_fs.c	/^static XtAppContext SFapp;$/;"	v	file:
SFback	src/gui_at_fs.c	/^static Pixel	SFfore, SFback;$/;"	v	file:
SFbesideText	src/gui_at_fs.c	/^static int	SFbesideText = 3;$/;"	v	file:
SFbuttonPressList	src/gui_at_fs.c	/^SFbuttonPressList(w, n, event)$/;"	f	file:
SFbuttonPressList	src/gui_at_fs.c	/^static void SFbuttonPressList __ARGS((Widget w, int n, XButtonPressedEvent *event));$/;"	p	file:	signature:(Widget w, int n, XButtonPressedEvent *event)
SFbuttonPressed	src/gui_at_fs.c	/^static int	SFbuttonPressed = 0;$/;"	v	file:
SFbuttonReleaseList	src/gui_at_fs.c	/^SFbuttonReleaseList(w, n, event)$/;"	f	file:
SFbuttonReleaseList	src/gui_at_fs.c	/^static void SFbuttonReleaseList __ARGS((Widget w, int n, XButtonReleasedEvent *event));$/;"	p	file:	signature:(Widget w, int n, XButtonReleasedEvent *event)
SFcancelCallback	src/gui_at_fs.c	/^SFcancelCallback(w, cl, cd)$/;"	f	file:
SFcancelCallback	src/gui_at_fs.c	/^static void SFcancelCallback __ARGS((Widget w, XtPointer cl, XtPointer cd));$/;"	p	file:	signature:(Widget w, XtPointer cl, XtPointer cd)
SFcancelSelect	src/gui_at_fs.c	/^static XtCallbackRec SFcancelSelect[] =$/;"	v	file:
SFcharAscent	src/gui_at_fs.c	/^static int	SFcharWidth, SFcharAscent, SFcharHeight;$/;"	v	file:
SFcharHeight	src/gui_at_fs.c	/^static int	SFcharWidth, SFcharAscent, SFcharHeight;$/;"	v	file:
SFcharWidth	src/gui_at_fs.c	/^static int	SFcharWidth, SFcharAscent, SFcharHeight;$/;"	v	file:
SFcharsPerEntry	src/gui_at_fs.c	/^static int	SFcharsPerEntry = 15;$/;"	v	file:
SFchdir	src/gui_at_fs.c	/^SFchdir(path)$/;"	f	file:
SFchdir	src/gui_at_fs.c	/^static int SFchdir __ARGS((char *path));$/;"	p	file:	signature:(char *path)
SFcheckDir	src/gui_at_fs.c	/^SFcheckDir(n, dir)$/;"	f	file:
SFcheckDir	src/gui_at_fs.c	/^static int SFcheckDir __ARGS((int n, SFDir *dir));$/;"	p	file:	signature:(int n, SFDir *dir)
SFcheckFiles	src/gui_at_fs.c	/^SFcheckFiles(dir)$/;"	f	file:
SFcheckFiles	src/gui_at_fs.c	/^static int SFcheckFiles __ARGS((SFDir *dir));$/;"	p	file:	signature:(SFDir *dir)
SFclearList	src/gui_at_fs.c	/^SFclearList(n, doScroll)$/;"	f	file:
SFclearList	src/gui_at_fs.c	/^static void SFclearList __ARGS((int n, int doScroll));$/;"	p	file:	signature:(int n, int doScroll)
SFcompareEntries	src/gui_at_fs.c	/^SFcompareEntries(p, q)$/;"	f	file:
SFcompareEntries	src/gui_at_fs.c	/^static int SFcompareEntries __ARGS((const void *p, const void *q));$/;"	p	file:	signature:(const void *p, const void *q)
SFcompareLogins	src/gui_at_fs.c	/^SFcompareLogins(p, q)$/;"	f	file:
SFcompareLogins	src/gui_at_fs.c	/^static int SFcompareLogins __ARGS((const void *p, const void *q));$/;"	p	file:	signature:(const void *p, const void *q)
SFcompletionSegs	src/gui_at_fs.c	/^static XSegment SFsegs[2], SFcompletionSegs[2];$/;"	v	file:
SFcreateGC	src/gui_at_fs.c	/^SFcreateGC()$/;"	f	file:
SFcreateGC	src/gui_at_fs.c	/^static void SFcreateGC __ARGS((void));$/;"	p	file:	signature:(void)
SFcreateWidgets	src/gui_at_fs.c	/^SFcreateWidgets(toplevel, prompt, ok, cancel)$/;"	f	file:
SFcreateWidgets	src/gui_at_fs.c	/^static void SFcreateWidgets __ARGS((Widget toplevel, char *prompt, char *ok, char *cancel));$/;"	p	file:	signature:(Widget toplevel, char *prompt, char *ok, char *cancel)
SFcurrentDir	src/gui_at_fs.c	/^		SFcurrentDir[MAXPATHL];$/;"	v	file:
SFcurrentInvert	src/gui_at_fs.c	/^static int	SFcurrentInvert[3] = { -1, -1, -1 };$/;"	v	file:
SFcurrentListY	src/gui_at_fs.c	/^static int SFcurrentListY;$/;"	v	file:
SFcurrentPath	src/gui_at_fs.c	/^		SFcurrentPath[MAXPATHL],$/;"	v	file:
SFdeleteEntry	src/gui_at_fs.c	/^SFdeleteEntry(dir, entry)$/;"	f	file:
SFdeleteEntry	src/gui_at_fs.c	/^static void SFdeleteEntry __ARGS((SFDir *dir, SFEntry *entry));$/;"	p	file:	signature:(SFDir *dir, SFEntry *entry)
SFdirEnd	src/gui_at_fs.c	/^static int	SFdirEnd;$/;"	v	file:
SFdirModTimer	src/gui_at_fs.c	/^SFdirModTimer(cl, id)$/;"	f	file:
SFdirModTimer	src/gui_at_fs.c	/^static void SFdirModTimer __ARGS((XtPointer cl, XtIntervalId *id));$/;"	p	file:	signature:(XtPointer cl, XtIntervalId *id)
SFdirModTimerId	src/gui_at_fs.c	/^static XtIntervalId SFdirModTimerId;$/;"	v	file:
SFdirPtr	src/gui_at_fs.c	/^static int	SFdirPtr;$/;"	v	file:
SFdirs	src/gui_at_fs.c	/^static SFDir	*SFdirs = NULL;$/;"	v	file:
SFdismissAction	src/gui_at_fs.c	/^SFdismissAction(w, event, params, num_params)$/;"	f	file:
SFdismissAction	src/gui_at_fs.c	/^static void SFdismissAction __ARGS((Widget w, XEvent *event, String *params, Cardinal *num_params));$/;"	p	file:	signature:(Widget w, XEvent *event, String *params, Cardinal *num_params)
SFdisplay	src/gui_at_fs.c	/^static Display	*SFdisplay;$/;"	v	file:
SFdoNotTouchDirPtr	src/gui_at_fs.c	/^static int	SFdoNotTouchDirPtr = 0;$/;"	v	file:
SFdoNotTouchVorigin	src/gui_at_fs.c	/^static int	SFdoNotTouchVorigin = 0;$/;"	v	file:
SFdrawList	src/gui_at_fs.c	/^SFdrawList(n, doScroll)$/;"	f	file:
SFdrawList	src/gui_at_fs.c	/^static void SFdrawList __ARGS((int n, int doScroll));$/;"	p	file:	signature:(int n, int doScroll)
SFdrawLists	src/gui_at_fs.c	/^SFdrawLists(doScroll)$/;"	f	file:
SFdrawLists	src/gui_at_fs.c	/^static void SFdrawLists __ARGS((int doScroll));$/;"	p	file:	signature:(int doScroll)
SFdrawStrings	src/gui_at_fs.c	/^SFdrawStrings(w, dir, from, to)$/;"	f	file:
SFdrawStrings	src/gui_at_fs.c	/^static void SFdrawStrings __ARGS((Window w, SFDir *dir, int from, int to));$/;"	p	file:	signature:(Window w, SFDir *dir, int from, int to)
SFenterList	src/gui_at_fs.c	/^SFenterList(w, n, event)$/;"	f	file:
SFenterList	src/gui_at_fs.c	/^static void SFenterList __ARGS((Widget w, int n, XEnterWindowEvent *event));$/;"	p	file:	signature:(Widget w, int n, XEnterWindowEvent *event)
SFentryHeight	src/gui_at_fs.c	/^static int	SFentryWidth, SFentryHeight;$/;"	v	file:
SFentryWidth	src/gui_at_fs.c	/^static int	SFentryWidth, SFentryHeight;$/;"	v	file:
SFexpand	src/gui_at_fs.c	/^SFexpand(str)$/;"	f	file:
SFexpand	src/gui_at_fs.c	/^static void SFexpand __ARGS((char *str));$/;"	p	file:	signature:(char *str)
SFexposeList	src/gui_at_fs.c	/^SFexposeList(w, n, event, cont)$/;"	f	file:
SFexposeList	src/gui_at_fs.c	/^static void SFexposeList __ARGS((Widget w, XtPointer n, XEvent *event, Boolean *cont));$/;"	p	file:	signature:(Widget w, XtPointer n, XEvent *event, Boolean *cont)
SFfindFile	src/gui_at_fs.c	/^SFfindFile(dir, str)$/;"	f	file:
SFfindFile	src/gui_at_fs.c	/^static int SFfindFile __ARGS((SFDir *dir, char *str));$/;"	p	file:	signature:(SFDir *dir, char *str)
SFfindHomeDir	src/gui_at_fs.c	/^SFfindHomeDir(begin, end)$/;"	f	file:
SFfindHomeDir	src/gui_at_fs.c	/^static int SFfindHomeDir __ARGS((char *begin, char *end));$/;"	p	file:	signature:(char *begin, char *end)
SFfont	src/gui_at_fs.c	/^static XFontSet SFfont;$/;"	v	file:
SFfont	src/gui_at_fs.c	/^static XFontStruct *SFfont;$/;"	v	file:
SFfore	src/gui_at_fs.c	/^static Pixel	SFfore, SFback;$/;"	v	file:
SFfree	src/gui_at_fs.c	/^SFfree(i)$/;"	f	file:
SFfree	src/gui_at_fs.c	/^static void SFfree __ARGS((int i));$/;"	p	file:	signature:(int i)
SFfunc	src/gui_at_fs.c	/^static int	(*SFfunc)();$/;"	v	file:
SFgetDir	src/gui_at_fs.c	/^SFgetDir(dir)$/;"	f	file:
SFgetDir	src/gui_at_fs.c	/^static int SFgetDir __ARGS((SFDir *dir));$/;"	p	file:	signature:(SFDir *dir)
SFgetHomeDirs	src/gui_at_fs.c	/^SFgetHomeDirs()$/;"	f	file:
SFgetHomeDirs	src/gui_at_fs.c	/^static void SFgetHomeDirs __ARGS((void));$/;"	p	file:	signature:(void)
SFgetText	src/gui_at_fs.c	/^SFgetText()$/;"	f	file:
SFgetText	src/gui_at_fs.c	/^static char *SFgetText __ARGS((void));$/;"	p	file:	signature:(void)
SFhAreaSelectedCallback	src/gui_at_fs.c	/^SFhAreaSelectedCallback(w, n, pnew)$/;"	f	file:
SFhAreaSelectedCallback	src/gui_at_fs.c	/^static void SFhAreaSelectedCallback __ARGS((Widget w, XtPointer n, XtPointer pnew));$/;"	p	file:	signature:(Widget w, XtPointer n, XtPointer pnew)
SFhScrollWidth	src/gui_at_fs.c	/^static int	SFpathScrollWidth, SFvScrollHeight, SFhScrollWidth;$/;"	v	file:
SFhSliderMovedCallback	src/gui_at_fs.c	/^SFhSliderMovedCallback(w, n, nw)$/;"	f	file:
SFhSliderMovedCallback	src/gui_at_fs.c	/^static void SFhSliderMovedCallback __ARGS((Widget w, XtPointer n, XtPointer nw));$/;"	p	file:	signature:(Widget w, XtPointer n, XtPointer nw)
SFhomeDir	src/gui_at_fs.c	/^static SFDir	SFrootDir, SFhomeDir;$/;"	v	file:
SFinitFont	src/gui_at_fs.c	/^SFinitFont()$/;"	f	file:
SFinitFont	src/gui_at_fs.c	/^static void SFinitFont __ARGS((void));$/;"	p	file:	signature:(void)
SFinvertEntry	src/gui_at_fs.c	/^SFinvertEntry(n)$/;"	f	file:
SFinvertEntry	src/gui_at_fs.c	/^static void SFinvertEntry __ARGS((int n));$/;"	p	file:	signature:(int n)
SFinvertGC	src/gui_at_fs.c	/^static GC SFlineGC, SFscrollGC, SFinvertGC, SFtextGC;$/;"	v	file:
SFleaveList	src/gui_at_fs.c	/^SFleaveList(w, n, event)$/;"	f	file:
SFleaveList	src/gui_at_fs.c	/^static void SFleaveList __ARGS((Widget w, int n, XEvent *event));$/;"	p	file:	signature:(Widget w, int n, XEvent *event)
SFlineGC	src/gui_at_fs.c	/^static GC SFlineGC, SFscrollGC, SFinvertGC, SFtextGC;$/;"	v	file:
SFlineToTextH	src/gui_at_fs.c	/^static int	SFlineToTextH = 3;$/;"	v	file:
SFlineToTextV	src/gui_at_fs.c	/^static int	SFlineToTextV = 3;$/;"	v	file:
SFlistSize	src/gui_at_fs.c	/^static int	SFlistSize = 10;$/;"	v	file:
SFlogins	src/gui_at_fs.c	/^static SFLogin	*SFlogins;$/;"	v	file:
SFlowerY	src/gui_at_fs.c	/^static int	SFupperX, SFlowerY, SFupperY;$/;"	v	file:
SFmodVerifyCallback	src/gui_at_fs.c	/^SFmodVerifyCallback(w, client_data, event, cont)$/;"	f	file:
SFmodVerifyCallback	src/gui_at_fs.c	/^static void SFmodVerifyCallback __ARGS((Widget w, XtPointer client_data, XEvent *event, Boolean *cont));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XEvent *event, Boolean *cont)
SFmotionList	src/gui_at_fs.c	/^SFmotionList(w, n, event)$/;"	f	file:
SFmotionList	src/gui_at_fs.c	/^static void SFmotionList __ARGS((Widget w, int n, XMotionEvent *event));$/;"	p	file:	signature:(Widget w, int n, XMotionEvent *event)
SFnewInvertEntry	src/gui_at_fs.c	/^SFnewInvertEntry(n, event)$/;"	f	file:
SFnewInvertEntry	src/gui_at_fs.c	/^static int SFnewInvertEntry __ARGS((int n, XMotionEvent *event));$/;"	p	file:	signature:(int n, XMotionEvent *event)
SFokCallback	src/gui_at_fs.c	/^SFokCallback(w, cl, cd)$/;"	f	file:
SFokCallback	src/gui_at_fs.c	/^static void SFokCallback __ARGS((Widget w, XtPointer cl, XtPointer cd));$/;"	p	file:	signature:(Widget w, XtPointer cl, XtPointer cd)
SFokSelect	src/gui_at_fs.c	/^static XtCallbackRec SFokSelect[] =$/;"	v	file:
SFpathAreaSelectedCallback	src/gui_at_fs.c	/^SFpathAreaSelectedCallback(w, client_data, pnew)$/;"	f	file:
SFpathAreaSelectedCallback	src/gui_at_fs.c	/^static void SFpathAreaSelectedCallback __ARGS((Widget w, XtPointer client_data, XtPointer pnew));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XtPointer pnew)
SFpathScrollWidth	src/gui_at_fs.c	/^static int	SFpathScrollWidth, SFvScrollHeight, SFhScrollWidth;$/;"	v	file:
SFpathSliderMovedCallback	src/gui_at_fs.c	/^SFpathSliderMovedCallback(w, client_data, nw)$/;"	f	file:
SFpathSliderMovedCallback	src/gui_at_fs.c	/^static void SFpathSliderMovedCallback __ARGS((Widget w, XtPointer client_data, XtPointer nw));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XtPointer nw)
SFprepareToReturn	src/gui_at_fs.c	/^SFprepareToReturn()$/;"	f	file:
SFprepareToReturn	src/gui_at_fs.c	/^static void SFprepareToReturn __ARGS((void));$/;"	p	file:	signature:(void)
SFreplaceText	src/gui_at_fs.c	/^SFreplaceText(dir, str)$/;"	f	file:
SFreplaceText	src/gui_at_fs.c	/^static void SFreplaceText __ARGS((SFDir *dir, char *str));$/;"	p	file:	signature:(SFDir *dir, char *str)
SFrootDir	src/gui_at_fs.c	/^static SFDir	SFrootDir, SFhomeDir;$/;"	v	file:
SFscrollGC	src/gui_at_fs.c	/^static GC SFlineGC, SFscrollGC, SFinvertGC, SFtextGC;$/;"	v	file:
SFscrollTimer	src/gui_at_fs.c	/^SFscrollTimer(p, id)$/;"	f	file:
SFscrollTimer	src/gui_at_fs.c	/^static void SFscrollTimer __ARGS((XtPointer p, XtIntervalId *id));$/;"	p	file:	signature:(XtPointer p, XtIntervalId *id)
SFscrollTimerId	src/gui_at_fs.c	/^static XtIntervalId SFscrollTimerId;$/;"	v	file:
SFscrollTimerInterval	src/gui_at_fs.c	/^SFscrollTimerInterval()$/;"	f	file:
SFscrollTimerInterval	src/gui_at_fs.c	/^static unsigned long SFscrollTimerInterval __ARGS((void));$/;"	p	file:	signature:(void)
SFsegs	src/gui_at_fs.c	/^static XSegment SFsegs[2], SFcompletionSegs[2];$/;"	v	file:
SFsetColors	src/gui_at_fs.c	/^SFsetColors(bg, fg, scroll_bg, scroll_fg)$/;"	f	file:
SFsetColors	src/gui_at_fs.c	/^static void SFsetColors __ARGS((guicolor_T bg, guicolor_T fg, guicolor_T scroll_bg, guicolor_T scrollfg));$/;"	p	file:	signature:(guicolor_T bg, guicolor_T fg, guicolor_T scroll_bg, guicolor_T scrollfg)
SFsetText	src/gui_at_fs.c	/^SFsetText(path)$/;"	f	file:
SFsetText	src/gui_at_fs.c	/^static void SFsetText __ARGS((char *path));$/;"	p	file:	signature:(char *path)
SFstartDir	src/gui_at_fs.c	/^static char	SFstartDir[MAXPATHL],$/;"	v	file:
SFstatAndCheck	src/gui_at_fs.c	/^SFstatAndCheck(dir, entry)$/;"	f	file:
SFstatAndCheck	src/gui_at_fs.c	/^static int SFstatAndCheck __ARGS((SFDir *dir, SFEntry *entry));$/;"	p	file:	signature:(SFDir *dir, SFEntry *entry)
SFstatChar	src/gui_at_fs.c	/^SFstatChar(statBuf)$/;"	f	file:
SFstatChar	src/gui_at_fs.c	/^static char SFstatChar __ARGS((struct stat *statBuf));$/;"	p	file:	signature:(struct stat *statBuf)
SFstatus	src/gui_at_fs.c	/^static int	SFstatus = SEL_FILE_NULL;$/;"	v	file:
SFstrdup	src/gui_at_fs.c	/^SFstrdup(s1, s2)$/;"	f	file:
SFstrdup	src/gui_at_fs.c	/^static void SFstrdup __ARGS((char **s1, char *s2));$/;"	p	file:	signature:(char **s1, char *s2)
SFtextBuffer	src/gui_at_fs.c	/^static char	SFtextBuffer[MAXPATHL*sizeof(wchar_t)];$/;"	v	file:
SFtextBuffer	src/gui_at_fs.c	/^static char	SFtextBuffer[MAXPATHL];$/;"	v	file:
SFtextChanged	src/gui_at_fs.c	/^SFtextChanged()$/;"	f	file:
SFtextChanged	src/gui_at_fs.c	/^static void SFtextChanged __ARGS((void));$/;"	p	file:	signature:(void)
SFtextGC	src/gui_at_fs.c	/^static GC SFlineGC, SFscrollGC, SFinvertGC, SFtextGC;$/;"	v	file:
SFtextPos	src/gui_at_fs.c	/^static XawTextPosition SFtextPos;$/;"	v	file:
SFtextX	src/gui_at_fs.c	/^static int	SFtextX, SFtextYoffset;$/;"	v	file:
SFtextYoffset	src/gui_at_fs.c	/^static int	SFtextX, SFtextYoffset;$/;"	v	file:
SFtwiddle	src/gui_at_fs.c	/^static int	SFtwiddle = 0;$/;"	v	file:
SFunreadableDir	src/gui_at_fs.c	/^SFunreadableDir(dir)$/;"	f	file:
SFunreadableDir	src/gui_at_fs.c	/^static void SFunreadableDir __ARGS((SFDir *dir));$/;"	p	file:	signature:(SFDir *dir)
SFunselect	src/gui_at_fs.c	/^SFunselect()$/;"	f	file:
SFunselect	src/gui_at_fs.c	/^static void SFunselect __ARGS((void));$/;"	p	file:	signature:(void)
SFupdatePath	src/gui_at_fs.c	/^SFupdatePath()$/;"	f	file:
SFupdatePath	src/gui_at_fs.c	/^static void SFupdatePath __ARGS((void));$/;"	p	file:	signature:(void)
SFupperX	src/gui_at_fs.c	/^static int	SFupperX, SFlowerY, SFupperY;$/;"	v	file:
SFupperY	src/gui_at_fs.c	/^static int	SFupperX, SFlowerY, SFupperY;$/;"	v	file:
SFvAreaSelectedCallback	src/gui_at_fs.c	/^SFvAreaSelectedCallback(w, n, pnew)$/;"	f	file:
SFvAreaSelectedCallback	src/gui_at_fs.c	/^static void SFvAreaSelectedCallback __ARGS((Widget w, XtPointer n, XtPointer pnew));$/;"	p	file:	signature:(Widget w, XtPointer n, XtPointer pnew)
SFvFloatSliderMovedCallback	src/gui_at_fs.c	/^SFvFloatSliderMovedCallback(w, n, fnew)$/;"	f	file:
SFvFloatSliderMovedCallback	src/gui_at_fs.c	/^static void SFvFloatSliderMovedCallback __ARGS((Widget w, XtPointer n, XtPointer fnew));$/;"	p	file:	signature:(Widget w, XtPointer n, XtPointer fnew)
SFvScrollHeight	src/gui_at_fs.c	/^static int	SFpathScrollWidth, SFvScrollHeight, SFhScrollWidth;$/;"	v	file:
SFvSliderMovedCallback	src/gui_at_fs.c	/^SFvSliderMovedCallback(w, n, nw)$/;"	f	file:
SFvSliderMovedCallback	src/gui_at_fs.c	/^static void SFvSliderMovedCallback __ARGS((Widget w, int n, int nw));$/;"	p	file:	signature:(Widget w, int n, int nw)
SFwmDeleteWindow	src/gui_at_fs.c	/^static Atom	SFwmDeleteWindow;$/;"	v	file:
SFworkProc	src/gui_at_fs.c	/^SFworkProc()$/;"	f	file:
SFworkProc	src/gui_at_fs.c	/^static Boolean SFworkProc __ARGS((void));$/;"	p	file:	signature:(void)
SFworkProcAdded	src/gui_at_fs.c	/^static int	SFworkProcAdded = 0;$/;"	v	file:
SFwriteStatChar	src/gui_at_fs.c	/^SFwriteStatChar(name, last, statBuf)$/;"	f	file:
SFwriteStatChar	src/gui_at_fs.c	/^static void SFwriteStatChar __ARGS((char *name, int last, struct stat *statBuf));$/;"	p	file:	signature:(char *name, int last, struct stat *statBuf)
SG_CTERM	src/syntax.c	63;"	d	file:
SG_GUI	src/syntax.c	64;"	d	file:
SG_LINK	src/syntax.c	65;"	d	file:
SG_TERM	src/syntax.c	62;"	d	file:
SHADOWDIR	src/Makefile	/^SHADOWDIR = shadow$/;"	m
SHAPE_BLOCK	src/structs.h	2220;"	d
SHAPE_CURSOR	src/structs.h	2228;"	d
SHAPE_HOR	src/structs.h	2221;"	d
SHAPE_IDX_C	src/structs.h	2205;"	d
SHAPE_IDX_CI	src/structs.h	2206;"	d
SHAPE_IDX_CLINE	src/structs.h	2210;"	d
SHAPE_IDX_COUNT	src/structs.h	2218;"	d
SHAPE_IDX_CR	src/structs.h	2207;"	d
SHAPE_IDX_I	src/structs.h	2203;"	d
SHAPE_IDX_MORE	src/structs.h	2215;"	d
SHAPE_IDX_MOREL	src/structs.h	2216;"	d
SHAPE_IDX_N	src/structs.h	2201;"	d
SHAPE_IDX_O	src/structs.h	2208;"	d
SHAPE_IDX_R	src/structs.h	2204;"	d
SHAPE_IDX_SDRAG	src/structs.h	2212;"	d
SHAPE_IDX_SM	src/structs.h	2217;"	d
SHAPE_IDX_STATUS	src/structs.h	2211;"	d
SHAPE_IDX_V	src/structs.h	2202;"	d
SHAPE_IDX_VDRAG	src/structs.h	2214;"	d
SHAPE_IDX_VE	src/structs.h	2209;"	d
SHAPE_IDX_VSEP	src/structs.h	2213;"	d
SHAPE_MOUSE	src/structs.h	2227;"	d
SHAPE_VER	src/structs.h	2222;"	d
SHARED_MASK	src/spell.c	4073;"	d	file:
SHELL	src/Make_manx.mak	/^SHELL = csh$/;"	m
SHELL	src/Make_sas.mak	/^SHELL	= csh$/;"	m
SHELL	src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/po/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL_COOKED	src/vim.h	939;"	d
SHELL_DOOUT	src/vim.h	940;"	d
SHELL_EXPAND	src/vim.h	938;"	d
SHELL_FILTER	src/vim.h	937;"	d
SHELL_READ	src/vim.h	942;"	d
SHELL_SILENT	src/vim.h	941;"	d
SHELL_SPECIAL	src/os_unix.c	5212;"	d	file:
SHELL_WRITE	src/vim.h	943;"	d
SHIFT	src/os_win32.c	484;"	d	file:
SHIN	src/farsi.h	126;"	d
SHM_A	src/option.h	203;"	d
SHM_ALL	src/option.h	212;"	d
SHM_ATTENTION	src/option.h	210;"	d
SHM_FILE	src/option.h	197;"	d
SHM_INTRO	src/option.h	211;"	d
SHM_LAST	src/option.h	198;"	d
SHM_LINES	src/option.h	200;"	d
SHM_MOD	src/option.h	196;"	d
SHM_NEW	src/option.h	201;"	d
SHM_OVER	src/option.h	207;"	d
SHM_OVERALL	src/option.h	208;"	d
SHM_RO	src/option.h	195;"	d
SHM_SEARCH	src/option.h	209;"	d
SHM_TEXT	src/option.h	199;"	d
SHM_TRUNC	src/option.h	205;"	d
SHM_TRUNCALL	src/option.h	206;"	d
SHM_WRI	src/option.h	202;"	d
SHM_WRITE	src/option.h	204;"	d
SHORT	src/os_mswin.c	/^typedef int SHORT;$/;"	t	file:
SHORT	src/os_win16.c	/^typedef int SHORT;$/;"	t	file:
SHORT	src/os_win32.c	/^typedef int SHORT;$/;"	t	file:
SHORT_FNAME	src/os_msdos.h	26;"	d
SHORT_FNAME	src/os_mswin.c	29;"	d	file:
SHORT_FNAME	src/os_win16.h	40;"	d
SHOWCMD_BUFLEN	src/normal.c	3726;"	d	file:
SHOWCMD_BUFLEN	src/normal.c	3728;"	d	file:
SHOWCMD_COLS	src/vim.h	1586;"	d
SHOWMATCH	src/vim.h	694;"	d
SHR	src/sha256.c	85;"	d	file:
SHRPENV	src/auto/config.mk	/^SHRPENV		= $/;"	m
SIDENT	src/regexp.c	175;"	d	file:
SID_CARG	src/vim.h	1199;"	d
SID_CMDARG	src/vim.h	1198;"	d
SID_ENV	src/vim.h	1200;"	d
SID_ERROR	src/vim.h	1201;"	d
SID_MODELINE	src/vim.h	1197;"	d
SID_NONE	src/vim.h	1202;"	d
SIGDEFARG	src/if_cscope.c	/^sig_handler SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	src/os_mac.h	275;"	d
SIGDEFARG	src/os_unix.c	/^catch_sigint SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	src/os_unix.c	/^catch_sigpwr SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	src/os_unix.c	/^deathtrap SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	src/os_unix.c	/^sig_alarm SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	src/os_unix.c	/^sig_sysmouse SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	src/os_unix.c	/^sig_winch SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	src/os_unix.c	/^sigcont_handler SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	src/os_unix.h	123;"	d
SIGDEFARG	src/os_unix.h	127;"	d
SIGDEFARG	src/os_unix.h	132;"	d
SIGDUMMYARG	src/os_mac.h	278;"	d
SIGDUMMYARG	src/os_unix.h	124;"	d
SIGDUMMYARG	src/os_unix.h	128;"	d
SIGDUMMYARG	src/os_unix.h	133;"	d
SIGHAS3ARGS	src/os_unix.h	117;"	d
SIGHASARG	src/os_unix.h	113;"	d
SIGNAL_BLOCK	src/vim.h	2159;"	d
SIGNAL_UNBLOCK	src/vim.h	2160;"	d
SIGNCMD_DEFINE	src/ex_cmds.c	6583;"	d	file:
SIGNCMD_JUMP	src/ex_cmds.c	6593;"	d	file:
SIGNCMD_LAST	src/ex_cmds.c	6595;"	d	file:
SIGNCMD_LIST	src/ex_cmds.c	6587;"	d	file:
SIGNCMD_PLACE	src/ex_cmds.c	6589;"	d	file:
SIGNCMD_UNDEFINE	src/ex_cmds.c	6585;"	d	file:
SIGNCMD_UNPLACE	src/ex_cmds.c	6591;"	d	file:
SIGN_ANY	src/structs.h	618;"	d
SIGN_ASPECT	src/gui_gtk_x11.c	5892;"	d	file:
SIGN_BYTE	src/vim.h	2073;"	d
SIGN_HEIGHT	src/gui_gtk_x11.c	5891;"	d	file:
SIGN_ICON	src/structs.h	620;"	d
SIGN_LINEHL	src/structs.h	619;"	d
SIGN_TEXT	src/structs.h	621;"	d
SIGN_WIDTH	src/gui_gtk_x11.c	5890;"	d	file:
SIGN_WIDTH	src/gui_x11.c	3393;"	d	file:
SIGPROTOARG	src/auto/osdef.h	/^extern RETSIGTYPE (*sigset __ARGS((int, RETSIGTYPE (*func) SIGPROTOARG))) __ARGS(SIGPROTOARG);$/;"	v
SIGPROTOARG	src/os_mac.h	272;"	d
SIGPROTOARG	src/os_unix.h	122;"	d
SIGPROTOARG	src/os_unix.h	126;"	d
SIGPROTOARG	src/os_unix.h	131;"	d
SIGRETURN	src/auto/config.h	137;"	d
SIGRETURN	src/os_mac.h	283;"	d
SIGRETURN	src/os_os2_cfg.h	91;"	d
SIGRETURN	src/os_vms_conf.h	75;"	d
SIGSTKSZ	src/os_unix.c	794;"	d	file:
SIGWINCH	src/os_unix.c	110;"	d	file:
SIGWINCH	src/os_unix.c	118;"	d	file:
SIG_ERR	src/os_unix.c	202;"	d	file:
SILENT	src/if_sniff.c	35;"	d	file:
SIMPLE	src/regexp.c	367;"	d	file:
SIN	src/farsi.h	125;"	d
SIN_CHANGED	src/vim.h	1055;"	d
SIN_INSERT	src/vim.h	1056;"	d
SIN_UNDO	src/vim.h	1057;"	d
SIZE	src/gui_xmdlg.c	/^    SIZE,$/;"	e	enum:ListSpecifier	file:
SIZEOF_CSTR	src/hardcopy.c	1330;"	d	file:
SIZEOF_INT	src/auto/config.h	41;"	d
SIZEOF_INT	src/os_os2_cfg.h	50;"	d
SIZEOF_INT	src/os_vms_conf.h	26;"	d
SIZEOF_INT	src/os_win16.h	59;"	d
SIZEOF_INT	src/vim.h	146;"	d
SIZEOF_INT	src/vim.h	151;"	d
SIZEOF_INT	src/vim.h	168;"	d
SIZEOF_INT	src/vim.h	177;"	d
SIZEOF_INT	src/vim.h	183;"	d
SIZEOF_LONG	src/auto/config.h	44;"	d
SIZEOF_OFF_T	src/auto/config.h	47;"	d
SIZEOF_TIME_T	src/auto/config.h	50;"	d
SKIP	src/testdir/test49.vim	/^function! SKIP(x, n)$/;"	f
SKIP_FOLLOWING_SLASHES	src/os_vms.c	69;"	d	file:
SKIP_STOP	src/netbeans.c	1375;"	d	file:
SKWORD	src/regexp.c	177;"	d	file:
SMALL_MALLOC	src/os_win16.h	42;"	d
SMALL_MEM	src/misc2.c	804;"	d	file:
SMALL_RECT	src/os_mswin.c	/^typedef int SMALL_RECT;$/;"	t	file:
SMALL_RECT	src/os_win16.c	/^typedef int SMALL_RECT;$/;"	t	file:
SMALL_RECT	src/os_win32.c	/^typedef int SMALL_RECT;$/;"	t	file:
SMBUFSIZE	src/fileio.c	33;"	d	file:
SMODE_CONT	src/gui_at_sb.h	135;"	d
SMODE_LINE_DOWN	src/gui_at_sb.h	139;"	d
SMODE_LINE_UP	src/gui_at_sb.h	138;"	d
SMODE_NONE	src/gui_at_sb.h	134;"	d
SMODE_PAGE_DOWN	src/gui_at_sb.h	137;"	d
SMODE_PAGE_UP	src/gui_at_sb.h	136;"	d
SNAP_AUCMD_IDX	src/structs.h	1685;"	d
SNAP_COUNT	src/structs.h	1686;"	d
SNAP_COUNT	src/structs.h	1688;"	d
SNAP_HELP_IDX	src/structs.h	1683;"	d
SNF_REQUIRED	src/spell.c	568;"	d	file:
SNIFF_DEFS	src/Make_mvc.mak	/^SNIFF_DEFS  = -DFEAT_SNIFF$/;"	m
SNIFF_IDX	src/os_unix.c	4866;"	d	file:
SNIFF_INCL	src/Make_mvc.mak	/^SNIFF_INCL  = if_sniff.h$/;"	m
SNIFF_LIB	src/Make_mvc.mak	/^SNIFF_LIB   = shell32.lib$/;"	m
SNIFF_OBJ	src/Make_mvc.mak	/^SNIFF_OBJ   = $(OBJDIR)\/if_sniff.obj$/;"	m
SNIFF_OBJ	src/auto/config.mk	/^SNIFF_OBJ	= $/;"	m
SNIFF_SRC	src/auto/config.mk	/^SNIFF_SRC	= $/;"	m
SNIFF_TRACE	src/if_sniff.c	155;"	d	file:
SNIFF_TRACE1	src/if_sniff.c	156;"	d	file:
SNIFF_TRACE_CLOSE	src/if_sniff.c	157;"	d	file:
SNIFF_TRACE_OPEN	src/if_sniff.c	154;"	d	file:
SN_CHARFLAGS	src/spell.c	551;"	d	file:
SN_COMPOUND	src/spell.c	558;"	d	file:
SN_END	src/spell.c	566;"	d	file:
SN_INFO	src/spell.c	565;"	d	file:
SN_MAP	src/spell.c	557;"	d	file:
SN_MIDWORD	src/spell.c	552;"	d	file:
SN_NOBREAK	src/spell.c	560;"	d	file:
SN_NOSPLITSUGS	src/spell.c	564;"	d	file:
SN_PREFCOND	src/spell.c	553;"	d	file:
SN_REGION	src/spell.c	550;"	d	file:
SN_REP	src/spell.c	554;"	d	file:
SN_REPSAL	src/spell.c	562;"	d	file:
SN_SAL	src/spell.c	555;"	d	file:
SN_SOFO	src/spell.c	556;"	d	file:
SN_SUGFILE	src/spell.c	561;"	d	file:
SN_SYLLABLE	src/spell.c	559;"	d	file:
SN_WORDS	src/spell.c	563;"	d	file:
SOCK_ERRNO	src/netbeans.c	37;"	d	file:
SOCK_ERRNO	src/netbeans.c	60;"	d	file:
SOLARIS	src/os_unix.h	71;"	d
SOME_BUILTIN_TCAPS	src/feature.h	578;"	d
SOME_VALID	src/vim.h	615;"	d
SOURCE	src/Make_dvc.mak	/^SOURCE=.\\vimrun.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\blowfish.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\buffer.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\charset.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\diff.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\digraph.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\edit.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\eval.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\ex_cmds.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\ex_cmds2.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\ex_docmd.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\ex_eval.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\ex_getln.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\fileio.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\fold.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\getchar.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\gui.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\gui_beval.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\gui_w32.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\hardcopy.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\hashtab.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\if_ole.cpp$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\if_ole.idl$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\main.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\mark.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\mbyte.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\memfile.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\memline.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\menu.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\message.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\misc1.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\misc2.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\move.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\normal.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\ops.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\option.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\os_mswin.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\os_w32exe.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\os_win32.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\popupmnu.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\quickfix.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\regexp.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\screen.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\search.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\sha256.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\spell.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\syntax.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\tag.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\term.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\ui.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\undo.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\version.c$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\vim.rc$/;"	m
SOURCE	src/Make_ivc.mak	/^SOURCE=.\\window.c$/;"	m
SOURCE	src/VisVim/VisVim.mak	/^SOURCE=.\\Commands.cpp$/;"	m
SOURCE	src/VisVim/VisVim.mak	/^SOURCE=.\\DSAddIn.cpp$/;"	m
SOURCE	src/VisVim/VisVim.mak	/^SOURCE=.\\OleAut.cpp$/;"	m
SOURCE	src/VisVim/VisVim.mak	/^SOURCE=.\\Reg.cpp$/;"	m
SOURCE	src/VisVim/VisVim.mak	/^SOURCE=.\\StdAfx.cpp$/;"	m
SOURCE	src/VisVim/VisVim.mak	/^SOURCE=.\\VisVim.cpp$/;"	m
SOURCE	src/VisVim/VisVim.mak	/^SOURCE=.\\VisVim.def$/;"	m
SOURCE	src/VisVim/VisVim.mak	/^SOURCE=.\\VisVim.odl$/;"	m
SOURCE	src/VisVim/VisVim.mak	/^SOURCE=.\\VisVim.rc$/;"	m
SPACE_IN_FILENAME	src/os_amiga.h	14;"	d
SPACE_IN_FILENAME	src/os_dos.h	121;"	d
SPACE_IN_FILENAME	src/os_mac.h	87;"	d
SPACE_IN_FILENAME	src/os_os2_cfg.h	5;"	d
SPACE_IN_FILENAME	src/os_vms_conf.h	4;"	d
SPAWND	src/Make_bc3.mak	/^SPAWND = ;SPAWNO$/;"	m
SPAWND	src/Make_bc3.mak	/^SPAWND =$/;"	m
SPAWNL	src/Make_bc3.mak	/^SPAWNL = spawnl.lib$/;"	m
SPAWNL	src/Make_bc3.mak	/^SPAWNL =$/;"	m
SPAWNO	src/Make_bc3.mak	/^SPAWNO = C:\\CC\\SPAWN$/;"	m
SPECIAL_WILDCHAR	src/os_unix.h	425;"	d
SPEC_ABUF	src/ex_docmd.c	9532;"	d	file:
SPEC_AFILE	src/ex_docmd.c	9530;"	d	file:
SPEC_AMATCH	src/ex_docmd.c	9534;"	d	file:
SPEC_CCWORD	src/ex_docmd.c	9523;"	d	file:
SPEC_CFILE	src/ex_docmd.c	9525;"	d	file:
SPEC_CLIENT	src/ex_docmd.c	9538;"	d	file:
SPEC_CWORD	src/ex_docmd.c	9521;"	d	file:
SPEC_HASH	src/ex_docmd.c	9519;"	d	file:
SPEC_PERC	src/ex_docmd.c	9517;"	d	file:
SPEC_SFILE	src/ex_docmd.c	9527;"	d	file:
SPELLSOURCE	src/Makefile	/^SPELLSOURCE = ..\/runtime\/spell$/;"	m
SPELLSUBDIR	src/Makefile	/^SPELLSUBDIR = \/spell$/;"	m
SPELLSUBLOC	src/Makefile	/^SPELLSUBLOC	= $(VIMRTLOC)$(SPELLSUBDIR)$/;"	m
SPELL_ISUPPER	src/spell.c	950;"	d	file:
SPELL_ISUPPER	src/spell.c	975;"	d	file:
SPELL_ISUPPER	src/spell.c	978;"	d	file:
SPELL_TOFOLD	src/spell.c	948;"	d	file:
SPELL_TOFOLD	src/spell.c	959;"	d	file:
SPELL_TOFOLD	src/spell.c	962;"	d	file:
SPELL_TOUPPER	src/spell.c	949;"	d	file:
SPELL_TOUPPER	src/spell.c	967;"	d	file:
SPELL_TOUPPER	src/spell.c	970;"	d	file:
SPI_GETWHEELSCROLLLINES	src/gui_w32.c	517;"	d	file:
SPI_SETWHEELSCROLLLINES	src/gui_w32.c	520;"	d	file:
SPO_COUNT	src/syntax.c	126;"	d	file:
SPO_HE_OFF	src/syntax.c	122;"	d	file:
SPO_HS_OFF	src/syntax.c	121;"	d	file:
SPO_LC_OFF	src/syntax.c	125;"	d	file:
SPO_ME_OFF	src/syntax.c	120;"	d	file:
SPO_MS_OFF	src/syntax.c	119;"	d	file:
SPO_RE_OFF	src/syntax.c	124;"	d	file:
SPO_RS_OFF	src/syntax.c	123;"	d	file:
SPRINT	src/regexp.c	181;"	d	file:
SPSTART	src/regexp.c	368;"	d	file:
SPS_BEST	src/spell.c	10027;"	d	file:
SPS_DOUBLE	src/spell.c	10029;"	d	file:
SPS_FAST	src/spell.c	10028;"	d	file:
SPTYPE_END	src/syntax.c	172;"	d	file:
SPTYPE_MATCH	src/syntax.c	170;"	d	file:
SPTYPE_SKIP	src/syntax.c	173;"	d	file:
SPTYPE_START	src/syntax.c	171;"	d	file:
SPWORDLEN	src/screen.c	2732;"	d	file:
SP_BAD	src/spell.c	575;"	d	file:
SP_BANNED	src/spell.c	571;"	d	file:
SP_END	src/eval.c	15078;"	d	file:
SP_FORMERROR	src/spell.c	424;"	d	file:
SP_LOCAL	src/spell.c	574;"	d	file:
SP_NOMOVE	src/eval.c	15072;"	d	file:
SP_OK	src/spell.c	572;"	d	file:
SP_OTHERERROR	src/spell.c	425;"	d	file:
SP_RARE	src/spell.c	573;"	d	file:
SP_REPEAT	src/eval.c	15073;"	d	file:
SP_RETCOUNT	src/eval.c	15074;"	d	file:
SP_SETPCMARK	src/eval.c	15075;"	d	file:
SP_START	src/eval.c	15076;"	d	file:
SP_SUBPAT	src/eval.c	15077;"	d	file:
SP_TRUNCERROR	src/spell.c	423;"	d	file:
SQL	runtime/filetype.vim	/^func! s:SQL()$/;"	f
SQLCAddAlias	runtime/autoload/sqlcomplete.vim	/^function! s:SQLCAddAlias(table_name, table_alias, cols)$/;"	f
SQLCCheck4dbext	runtime/autoload/sqlcomplete.vim	/^function! s:SQLCCheck4dbext()$/;"	f
SQLCErrorMsg	runtime/autoload/sqlcomplete.vim	/^function! s:SQLCErrorMsg(msg)$/;"	f
SQLCGetColumns	runtime/autoload/sqlcomplete.vim	/^function! s:SQLCGetColumns(table_name, list_type)$/;"	f
SQLCGetObjectOwner	runtime/autoload/sqlcomplete.vim	/^function! s:SQLCGetObjectOwner(object) $/;"	f
SQLCGetSyntaxList	runtime/autoload/sqlcomplete.vim	/^function! s:SQLCGetSyntaxList(syn_group)$/;"	f
SQLCWarningMsg	runtime/autoload/sqlcomplete.vim	/^function! s:SQLCWarningMsg(msg)$/;"	f
SQLGetType	runtime/ftplugin/sql.vim	/^    command! -nargs=0 SQLGetType :call SQL_GetType()$/;"	c
SQLSetType	runtime/ftplugin/sql.vim	/^    command! -nargs=* -complete=custom,SQL_GetList SQLSetType :call SQL_SetType(<q-args>)$/;"	c
SQL_GetList	runtime/ftplugin/sql.vim	/^    function SQL_GetList(ArgLead, CmdLine, CursorPos)$/;"	f
SQL_GetType	runtime/ftplugin/sql.vim	/^    function SQL_GetType()$/;"	f
SQL_SetType	runtime/ftplugin/sql.vim	/^    function SQL_SetType(name)$/;"	f
SRC	src/Make_dice.mak	/^SRC = \\$/;"	m
SRC	src/Make_manx.mak	/^SRC =	blowfish.c \\$/;"	m
SRC	src/Make_morph.mak	/^SRC =	blowfish.c						\\$/;"	m
SRC	src/Make_sas.mak	/^SRC = \\$/;"	m
SRC	src/Makefile	/^SRC =	$(BASIC_SRC) \\$/;"	m
SRC_CMD	src/farsi.h	176;"	d
SRC_EDT	src/farsi.h	175;"	d
SRHEIGHT	src/os_win32.c	1699;"	d	file:
SROP_Add	src/if_xcmdsrv.c	/^enum ServerReplyOp { SROP_Find, SROP_Add, SROP_Delete };$/;"	e	enum:ServerReplyOp	file:
SROP_Delete	src/if_xcmdsrv.c	/^enum ServerReplyOp { SROP_Find, SROP_Add, SROP_Delete };$/;"	e	enum:ServerReplyOp	file:
SROP_Find	src/if_xcmdsrv.c	/^enum ServerReplyOp { SROP_Find, SROP_Add, SROP_Delete };$/;"	e	enum:ServerReplyOp	file:
SRWIDTH	src/os_win32.c	1698;"	d	file:
SSOP_BLANK	src/option.h	695;"	d
SSOP_BUFFERS	src/option.h	688;"	d
SSOP_CURDIR	src/option.h	700;"	d
SSOP_CURSOR	src/option.h	702;"	d
SSOP_FOLDS	src/option.h	701;"	d
SSOP_GLOBALS	src/option.h	696;"	d
SSOP_HELP	src/option.h	694;"	d
SSOP_LOCALOPTIONS	src/option.h	692;"	d
SSOP_OPTIONS	src/option.h	693;"	d
SSOP_RESIZE	src/option.h	690;"	d
SSOP_SESDIR	src/option.h	699;"	d
SSOP_SLASH	src/option.h	697;"	d
SSOP_TABPAGES	src/option.h	703;"	d
SSOP_UNIX	src/option.h	698;"	d
SSOP_WINPOS	src/option.h	689;"	d
SSOP_WINSIZE	src/option.h	691;"	d
SST_DIST	src/vim.h	863;"	d
SST_FIX_STATES	src/vim.h	862;"	d
SST_INVALID	src/vim.h	864;"	d
SST_MAX_ENTRIES	src/vim.h	858;"	d
SST_MAX_ENTRIES	src/vim.h	860;"	d
SST_MIN_ENTRIES	src/vim.h	856;"	d
STACK_INCR	src/memline.c	210;"	d	file:
STAR	src/regexp.c	148;"	d	file:
STARTUPOBJ	src/Make_bc5.mak	/^STARTUPOBJ = c0l.obj$/;"	m
STARTUPOBJ	src/Make_bc5.mak	/^STARTUPOBJ = c0w32.obj$/;"	m
STARTUPOBJ	src/Make_bc5.mak	/^STARTUPOBJ = c0x32.obj$/;"	m
STARTUPTIME	src/feature.h	878;"	d
STAR_REGISTER	src/ops.c	31;"	d	file:
STATE_DEL	src/spell.c	/^    STATE_DEL,		\/* Delete a byte from the bad word. *\/$/;"	e	enum:__anon14	file:
STATE_ENDNUL	src/spell.c	/^    STATE_ENDNUL,	\/* Past NUL bytes at start of the node. *\/$/;"	e	enum:__anon14	file:
STATE_FINAL	src/spell.c	/^    STATE_FINAL		\/* End of this node. *\/$/;"	e	enum:__anon14	file:
STATE_INS	src/spell.c	/^    STATE_INS,		\/* Insert a byte in the bad word. *\/$/;"	e	enum:__anon14	file:
STATE_INS_PREP	src/spell.c	/^    STATE_INS_PREP,	\/* Prepare for inserting bytes. *\/$/;"	e	enum:__anon14	file:
STATE_NOPREFIX	src/spell.c	/^    STATE_NOPREFIX,	\/* try without prefix *\/$/;"	e	enum:__anon14	file:
STATE_PLAIN	src/spell.c	/^    STATE_PLAIN,	\/* Use each byte of the node. *\/$/;"	e	enum:__anon14	file:
STATE_REP	src/spell.c	/^    STATE_REP,		\/* Use matching REP items from the .aff file. *\/$/;"	e	enum:__anon14	file:
STATE_REP_INI	src/spell.c	/^    STATE_REP_INI,	\/* Prepare for using REP items. *\/$/;"	e	enum:__anon14	file:
STATE_REP_UNDO	src/spell.c	/^    STATE_REP_UNDO,	\/* Undo a REP item replacement. *\/$/;"	e	enum:__anon14	file:
STATE_SPLITUNDO	src/spell.c	/^    STATE_SPLITUNDO,	\/* Undo splitting. *\/$/;"	e	enum:__anon14	file:
STATE_START	src/spell.c	/^    STATE_START = 0,	\/* At start of node check for NUL bytes (goodword$/;"	e	enum:__anon14	file:
STATE_SWAP	src/spell.c	/^    STATE_SWAP,		\/* Swap two bytes. *\/$/;"	e	enum:__anon14	file:
STATE_SWAP3	src/spell.c	/^    STATE_SWAP3,	\/* Swap two characters over three. *\/$/;"	e	enum:__anon14	file:
STATE_UNROT3L	src/spell.c	/^    STATE_UNROT3L,	\/* Undo rotate three characters left *\/$/;"	e	enum:__anon14	file:
STATE_UNROT3R	src/spell.c	/^    STATE_UNROT3R,	\/* Undo rotate three characters right *\/$/;"	e	enum:__anon14	file:
STATE_UNSWAP	src/spell.c	/^    STATE_UNSWAP,	\/* Undo swap two characters. *\/$/;"	e	enum:__anon14	file:
STATE_UNSWAP3	src/spell.c	/^    STATE_UNSWAP3,	\/* Undo Swap two characters over three. *\/$/;"	e	enum:__anon14	file:
STATFS	src/memfile.c	45;"	d	file:
STATFS	src/memfile.c	51;"	d	file:
STATIC_SPACE	runtime/tools/xcmdsrv_client.c	109;"	d	file:
STATUS_HEIGHT	src/vim.h	1412;"	d
STDMETHOD_	src/if_ole.cpp	/^    STDMETHOD_(unsigned long, AddRef)(void);$/;"	p	class:CVim	file:	access:public	signature:(unsigned long, AddRef)
STDMETHOD_	src/if_ole.cpp	/^    STDMETHOD_(unsigned long, AddRef)(void);$/;"	p	class:CVimCF	file:	access:public	signature:(unsigned long, AddRef)
STDMETHOD_	src/if_ole.cpp	/^    STDMETHOD_(unsigned long, Release)(void);$/;"	p	class:CVim	file:	access:public	signature:(unsigned long, Release)
STDMETHOD_	src/if_ole.cpp	/^    STDMETHOD_(unsigned long, Release)(void);$/;"	p	class:CVimCF	file:	access:public	signature:(unsigned long, Release)
STERM	src/ascii.h	124;"	d
STERM	src/ascii.h	40;"	d
STIPPLE_BITMAP	src/gui_xmebw.c	108;"	d	file:
STL_ALL	src/option.h	288;"	d
STL_ALTPERCENT	src/option.h	278;"	d
STL_ARGLISTSTAT	src/option.h	279;"	d
STL_BUFNO	src/option.h	260;"	d
STL_BYTEVAL	src/option.h	264;"	d
STL_BYTEVAL_X	src/option.h	265;"	d
STL_COLUMN	src/option.h	255;"	d
STL_FILENAME	src/option.h	254;"	d
STL_FILEPATH	src/option.h	252;"	d
STL_FILETYPE	src/option.h	270;"	d
STL_FILETYPE_ALT	src/option.h	271;"	d
STL_FULLPATH	src/option.h	253;"	d
STL_HELPFLAG	src/option.h	268;"	d
STL_HELPFLAG_ALT	src/option.h	269;"	d
STL_HIGHLIGHT	src/option.h	285;"	d
STL_IN_ICON	src/globals.h	1191;"	d
STL_IN_TITLE	src/globals.h	1192;"	d
STL_KEYMAP	src/option.h	261;"	d
STL_LINE	src/option.h	258;"	d
STL_MAX_ITEM	src/vim.h	1587;"	d
STL_MIDDLEMARK	src/option.h	282;"	d
STL_MODIFIED	src/option.h	274;"	d
STL_MODIFIED_ALT	src/option.h	275;"	d
STL_NUMLINES	src/option.h	259;"	d
STL_OFFSET	src/option.h	262;"	d
STL_OFFSET_X	src/option.h	263;"	d
STL_PAGENUM	src/option.h	280;"	d
STL_PERCENTAGE	src/option.h	277;"	d
STL_PREVIEWFLAG	src/option.h	272;"	d
STL_PREVIEWFLAG_ALT	src/option.h	273;"	d
STL_QUICKFIX	src/option.h	276;"	d
STL_ROFLAG	src/option.h	266;"	d
STL_ROFLAG_ALT	src/option.h	267;"	d
STL_TABCLOSENR	src/option.h	287;"	d
STL_TABPAGENR	src/option.h	286;"	d
STL_TRUNCMARK	src/option.h	283;"	d
STL_USER_HL	src/option.h	284;"	d
STL_VIM_EXPR	src/option.h	281;"	d
STL_VIRTCOL	src/option.h	256;"	d
STL_VIRTCOL_ALT	src/option.h	257;"	d
STRCAT	src/vim.h	1531;"	d
STRCMP	src/vim.h	1492;"	d
STRCPY	src/vim.h	1490;"	d
STRICMP	src/vim.h	1495;"	d
STRICMP	src/vim.h	1498;"	d
STRICMP	src/vim.h	1500;"	d
STRICT	src/GvimExt/gvimext.h	31;"	d
STRICT	src/os_win16.h	70;"	d
STRICT	src/os_win32.h	99;"	d
STRING_TAG	src/gui_motif.c	111;"	d	file:
STRING_TAG	src/gui_motif.c	113;"	d	file:
STRIP	src/auto/config.mk	/^STRIP		= strip$/;"	m
STRLEN	src/vim.h	1489;"	d
STRLEN	src/vim.h	2115;"	d
STRMOVE	src/vim.h	1505;"	d
STRNCAT	src/vim.h	1532;"	d
STRNCMP	src/vim.h	1493;"	d
STRNCMP	src/xxd/xxd.c	194;"	d	file:
STRNCMP	src/xxd/xxd.c	196;"	d	file:
STRNCPY	src/vim.h	1491;"	d
STRNICMP	src/vim.h	1508;"	d
STRNICMP	src/vim.h	1511;"	d
STRNICMP	src/vim.h	1513;"	d
STRPROCINT	src/os_unix.c	/^typedef int (*STRPROCINT)__ARGS((char_u *));$/;"	t	file:
STRPROCSTR	src/os_unix.c	/^typedef char_u * (*STRPROCSTR)__ARGS((char_u *));$/;"	t	file:
STR_CHAR	src/charset.c	433;"	d	file:
STR_PTR	src/charset.c	434;"	d	file:
STYLE	src/gui_xmdlg.c	/^    STYLE,$/;"	e	enum:ListSpecifier	file:
SUBPAT	src/regexp.c	156;"	d	file:
SUBST	src/testdir/test49.vim	/^function! SUBST(x, n)$/;"	f
SUBSYSTEM	src/Make_mvc.mak	/^SUBSYSTEM = console$/;"	m
SUBSYSTEM	src/Make_mvc.mak	/^SUBSYSTEM = windows$/;"	m
SUG	src/spell.c	624;"	d	file:
SUG_CLEAN_COUNT	src/spell.c	632;"	d	file:
SUG_MAX_COUNT	src/spell.c	636;"	d	file:
SWB_NEWTAB	src/option.h	762;"	d
SWB_SPLIT	src/option.h	761;"	d
SWB_USEOPEN	src/option.h	759;"	d
SWB_USETAB	src/option.h	760;"	d
SW_SHOWDEFAULT	src/gui_w48.c	1140;"	d	file:
SYMLDPREFIX	src/Make_mint.mak	/^SYMLDPREFIX = \/usr\/local\/bin\/sym-$/;"	m
SYMS	src/Make_dice.mak	/^SYMS = vim.syms$/;"	m
SYMS	src/Make_manx.mak	/^SYMS = vim.syms$/;"	m
SYNC_DUP_CLOSE	src/os_msdos.h	17;"	d
SYNC_DUP_CLOSE	src/os_win16.h	17;"	d
SYNC_DUP_CLOSE	src/os_win32.h	26;"	d
SYNID_ALLBUT	src/syntax.c	228;"	d	file:
SYNID_CLUSTER	src/syntax.c	231;"	d	file:
SYNID_CONTAINED	src/syntax.c	230;"	d	file:
SYNID_TOP	src/syntax.c	229;"	d	file:
SYNSOURCE	src/Makefile	/^SYNSOURCE = ..\/runtime\/syntax$/;"	m
SYNSPL_DEFAULT	src/structs.h	1165;"	d
SYNSPL_NOTOP	src/structs.h	1167;"	d
SYNSPL_TOP	src/structs.h	1166;"	d
SYNSUBDIR	src/Makefile	/^SYNSUBDIR = \/syntax$/;"	m
SYNSUBLOC	src/Makefile	/^SYNSUBLOC	= $(VIMRTLOC)$(SYNSUBDIR)$/;"	m
SYNTAX_FNAME	src/os_amiga.h	136;"	d
SYNTAX_FNAME	src/os_dos.h	102;"	d
SYNTAX_FNAME	src/os_mac.h	189;"	d
SYNTAX_FNAME	src/os_riscos.h	58;"	d
SYNTAX_FNAME	src/os_unix.h	350;"	d
SYN_CLSTR	src/syntax.c	218;"	d	file:
SYN_ITEMS	src/syntax.c	176;"	d	file:
SYN_NAMELEN	src/syntax.c	116;"	d	file:
SYN_STATE_P	src/syntax.c	186;"	d	file:
SYS_BUGR_FILE	src/Makefile	/^SYS_BUGR_FILE	= $(DESTDIR)$(SCRIPTLOC)\/bugreport.vim$/;"	m
SYS_DELMENU_FILE	src/Makefile	/^SYS_DELMENU_FILE = $(DESTDIR)$(SCRIPTLOC)\/delmenu.vim$/;"	m
SYS_FILETYPE_FILE	src/Makefile	/^SYS_FILETYPE_FILE = $(DESTDIR)$(SCRIPTLOC)\/filetype.vim$/;"	m
SYS_FTOFF_FILE	src/Makefile	/^SYS_FTOFF_FILE	= $(DESTDIR)$(SCRIPTLOC)\/ftoff.vim$/;"	m
SYS_FTPLUGIN_FILE	src/Makefile	/^SYS_FTPLUGIN_FILE = $(DESTDIR)$(SCRIPTLOC)\/ftplugin.vim$/;"	m
SYS_FTPLUGOF_FILE	src/Makefile	/^SYS_FTPLUGOF_FILE = $(DESTDIR)$(SCRIPTLOC)\/ftplugof.vim$/;"	m
SYS_GVIMRC_FILE	src/os_amiga.h	109;"	d
SYS_GVIMRC_FILE	src/os_dos.h	38;"	d
SYS_GVIMRC_FILE	src/os_mac.h	129;"	d
SYS_GVIMRC_FILE	src/os_riscos.h	102;"	d
SYS_GVIMRC_FILE	src/os_unix.h	244;"	d
SYS_INDENT_FILE	src/Makefile	/^SYS_INDENT_FILE = $(DESTDIR)$(SCRIPTLOC)\/indent.vim$/;"	m
SYS_INDOFF_FILE	src/Makefile	/^SYS_INDOFF_FILE = $(DESTDIR)$(SCRIPTLOC)\/indoff.vim$/;"	m
SYS_MENU_FILE	src/Makefile	/^SYS_MENU_FILE	= $(DESTDIR)$(SCRIPTLOC)\/menu.vim$/;"	m
SYS_MENU_FILE	src/os_amiga.h	112;"	d
SYS_MENU_FILE	src/os_dos.h	47;"	d
SYS_MENU_FILE	src/os_mac.h	132;"	d
SYS_MENU_FILE	src/os_riscos.h	105;"	d
SYS_MENU_FILE	src/os_unix.h	268;"	d
SYS_NMLN	src/os_unixx.h	83;"	d
SYS_OPTWIN_FILE	src/Makefile	/^SYS_OPTWIN_FILE = $(DESTDIR)$(SCRIPTLOC)\/optwin.vim$/;"	m
SYS_OPTWIN_FILE	src/feature.h	975;"	d
SYS_OPTWIN_FILE	src/os_dos.h	52;"	d
SYS_OPTWIN_FILE	src/os_mac.h	135;"	d
SYS_OPTWIN_FILE	src/os_riscos.h	108;"	d
SYS_SCRIPTS_FILE	src/Makefile	/^SYS_SCRIPTS_FILE = $(DESTDIR)$(SCRIPTLOC)\/scripts.vim$/;"	m
SYS_SELECT_WITH_SYS_TIME	src/auto/config.h	115;"	d
SYS_SELECT_WITH_SYS_TIME	src/os_mac.h	287;"	d
SYS_SELECT_WITH_SYS_TIME	src/os_os2_cfg.h	85;"	d
SYS_SYNMENU_FILE	src/Makefile	/^SYS_SYNMENU_FILE = $(DESTDIR)$(SCRIPTLOC)\/synmenu.vim$/;"	m
SYS_VIMRC_FILE	src/os_amiga.h	106;"	d
SYS_VIMRC_FILE	src/os_dos.h	17;"	d
SYS_VIMRC_FILE	src/os_mac.h	126;"	d
SYS_VIMRC_FILE	src/os_riscos.h	99;"	d
SYS_VIMRC_FILE	src/os_unix.h	241;"	d
SY_MAXLEN	src/spell.c	3708;"	d	file:
S_ISBLK	src/os_unix.h	504;"	d
S_ISCHR	src/os_unix.h	513;"	d
S_ISDIR	src/os_unix.h	498;"	d
S_ISFIFO	src/os_unix.h	510;"	d
S_ISREG	src/os_unix.h	501;"	d
S_ISSOCK	src/os_unix.h	507;"	d
S_ISXXX	src/gui_at_fs.c	218;"	d	file:
S_IXGRP	src/gui_at_fs.c	212;"	d	file:
S_IXOTH	src/gui_at_fs.c	215;"	d	file:
S_IXUSR	src/gui_at_fs.c	209;"	d	file:
S_blankbuffer	src/os_msdos.c	/^unsigned short	S_blankbuffer[256]; \/* <VN> max length of console line *\/$/;"	v
S_iBottom	src/os_msdos.c	/^static int S_iBottom = 0;$/;"	v	file:
S_iBufferColumn	src/os_msdos.c	/^int		S_iBufferColumn;$/;"	v
S_iBufferRow	src/os_msdos.c	/^int		S_iBufferRow;$/;"	v
S_iCurrentColumn	src/os_msdos.c	/^int		S_iCurrentColumn = 0;$/;"	v
S_iCurrentRow	src/os_msdos.c	/^int		S_iCurrentRow = 0;	\/* These are 0 offset *\/$/;"	v
S_iLeft	src/os_msdos.c	/^static int S_iLeft = 0;			\/* Scroll window; these are 1 offset *\/$/;"	v	file:
S_iRight	src/os_msdos.c	/^static int S_iRight = 0;$/;"	v	file:
S_iTop	src/os_msdos.c	/^static int S_iTop = 0;$/;"	v	file:
S_linebuffer	src/os_msdos.c	/^unsigned short	S_linebuffer[8000]; \/* <VN> enough for 160x50 *\/$/;"	v
S_linebufferpos	src/os_msdos.c	/^unsigned short	*S_linebufferpos = S_linebuffer;$/;"	v
S_selVideo	src/os_msdos.c	/^short		S_selVideo;	\/* Selector for DJGPP direct video transfers *\/$/;"	v
S_uiAttribute	src/os_msdos.c	/^unsigned short	S_uiAttribute = 0;$/;"	v
S_ulScreenBase	src/os_msdos.c	/^unsigned long	S_ulScreenBase = 0xb8000;$/;"	v
Safe_indent	runtime/indent/awk.vim	/^function! s:Safe_indent( base, wordlen, this_line )$/;"	f
SaveBufVars	runtime/autoload/netrw.vim	/^fun! s:SaveBufVars()$/;"	f
SaveConsoleBuffer	src/os_win32.c	/^SaveConsoleBuffer($/;"	f	file:	signature:( ConsoleBuffer *cb)
SaveConsoleTitleAndIcon	src/os_win32.c	/^SaveConsoleTitleAndIcon(void)$/;"	f	file:	signature:(void)
SaveInst	src/gui_w48.c	/^SaveInst(HINSTANCE hInst)$/;"	f	signature:(HINSTANCE hInst)
SaveInst	src/os_w32exe.c	/^void _cdecl SaveInst(HINSTANCE hInst);$/;"	p	file:	signature:(HINSTANCE hInst)
SaveInst	src/os_win16.c	/^void _cdecl SaveInst(HINSTANCE hInst);$/;"	p	file:	signature:(HINSTANCE hInst)
SaveVimSesn	runtime/menu.vim	/^fun! s:SaveVimSesn()$/;"	f
SaveWinVars	runtime/autoload/netrw.vim	/^fun! s:SaveWinVars()$/;"	f
ScreenAttrs	src/globals.h	/^EXTERN sattr_T	*ScreenAttrs INIT(= NULL);$/;"	v
ScreenLines	src/globals.h	/^EXTERN schar_T	*ScreenLines INIT(= NULL);$/;"	v
ScreenLines2	src/globals.h	/^EXTERN schar_T	*ScreenLines2 INIT(= NULL);$/;"	v
ScreenLinesC	src/globals.h	/^EXTERN u8char_T	*ScreenLinesC[MAX_MCO];		\/* composing characters *\/$/;"	v
ScreenLinesUC	src/globals.h	/^EXTERN u8char_T	*ScreenLinesUC INIT(= NULL);	\/* decoded UTF-8 characters *\/$/;"	v
Screen_mco	src/globals.h	/^EXTERN int	Screen_mco INIT(= 0);		\/* value of p_mco used when$/;"	v
ScrollOneLineDown	src/gui_at_sb.c	/^ScrollOneLineDown(w, event, params, num_params)$/;"	f	file:
ScrollOneLineDown	src/gui_at_sb.c	/^static void ScrollOneLineDown __ARGS((Widget, XEvent *, String *, Cardinal *));$/;"	p	file:	signature:(Widget, XEvent *, String *, Cardinal *)
ScrollOneLineUp	src/gui_at_sb.c	/^ScrollOneLineUp(w, event, params, num_params)$/;"	f	file:
ScrollOneLineUp	src/gui_at_sb.c	/^static void ScrollOneLineUp __ARGS((Widget, XEvent *, String *, Cardinal *));$/;"	p	file:	signature:(Widget, XEvent *, String *, Cardinal *)
ScrollPageDown	src/gui_at_sb.c	/^ScrollPageDown(w, event, params, num_params)$/;"	f	file:
ScrollPageDown	src/gui_at_sb.c	/^static void ScrollPageDown __ARGS((Widget, XEvent *, String *, Cardinal *));$/;"	p	file:	signature:(Widget, XEvent *, String *, Cardinal *)
ScrollPageUp	src/gui_at_sb.c	/^ScrollPageUp(w, event, params, num_params)$/;"	f	file:
ScrollPageUp	src/gui_at_sb.c	/^static void ScrollPageUp __ARGS((Widget, XEvent *, String *, Cardinal *));$/;"	p	file:	signature:(Widget, XEvent *, String *, Cardinal *)
ScrollSome	src/gui_at_sb.c	/^ScrollSome(w, event, call_data)$/;"	f	file:
ScrollSome	src/gui_at_sb.c	/^static void ScrollSome __ARGS((Widget w, XEvent *event, int call_data));$/;"	p	file:	signature:(Widget w, XEvent *event, int call_data)
ScrollTop	src/os_riscos.c	/^int ScrollTop;		\/* Make cursor movements relative to ScrollTop. *\/$/;"	v
ScrollbarClassPart	src/gui_at_sb.h	/^typedef struct {int empty;} ScrollbarClassPart;$/;"	t	typeref:struct:__anon32
ScrollbarClassRec	src/gui_at_sb.h	/^} ScrollbarClassRec;$/;"	t	typeref:struct:_ScrollbarClassRec
ScrollbarPart	src/gui_at_sb.h	/^} ScrollbarPart;$/;"	t	typeref:struct:__anon31
ScrollbarRec	src/gui_at_sb.h	/^} ScrollbarRec;$/;"	t	typeref:struct:_ScrollbarRec
ScrollbarWidget	src/gui_at_sb.h	/^typedef struct _ScrollbarRec	  *ScrollbarWidget;$/;"	t	typeref:struct:_ScrollbarRec
ScrollbarWidgetClass	src/gui_at_sb.h	/^typedef struct _ScrollbarClassRec *ScrollbarWidgetClass;$/;"	t	typeref:struct:_ScrollbarClassRec
SearchMembers	runtime/autoload/ccomplete.vim	/^function! s:SearchMembers(matches, items, all)$/;"	f
SearchP	runtime/menu.vim	/^fun! s:SearchP()$/;"	f
SearchedFile	src/search.c	/^typedef struct SearchedFile$/;"	s	file:
SearchedFile	src/search.c	/^} SearchedFile;$/;"	t	typeref:struct:SearchedFile	file:
SearchedFile::fp	src/search.c	/^    FILE	*fp;		\/* File pointer *\/$/;"	m	struct:SearchedFile	file:	access:public
SearchedFile::lnum	src/search.c	/^    linenr_T	lnum;		\/* Line we were up to in file *\/$/;"	m	struct:SearchedFile	file:	access:public
SearchedFile::matched	src/search.c	/^    int		matched;	\/* Found a match in this file *\/$/;"	m	struct:SearchedFile	file:	access:public
SearchedFile::name	src/search.c	/^    char_u	*name;		\/* Full name of file *\/$/;"	m	struct:SearchedFile	file:	access:public
Seems_continuing	runtime/indent/awk.vim	/^function! s:Seems_continuing( line )$/;"	f
SelectAll	runtime/menu.vim	/^func! <SID>SelectAll()$/;"	f
SelectFont	src/gui_w32.c	72;"	d	file:
SelectionRange	src/gui_mac.c	/^struct SelectionRange \/* for handling kCoreClassEvent:kOpenDocuments:keyAEPosition typeChar *\/$/;"	s	file:
SelectionRange	src/gui_mac.c	/^typedef struct SelectionRange SelectionRange;$/;"	t	typeref:struct:SelectionRange	file:
SelectionRange::endRange	src/gui_mac.c	/^    long endRange; \/\/ end of selection range (if line < 0)$/;"	m	struct:SelectionRange	file:	access:public
SelectionRange::lineNum	src/gui_mac.c	/^    short lineNum; \/\/ line to select (<0 to specify range)$/;"	m	struct:SelectionRange	file:	access:public
SelectionRange::startRange	src/gui_mac.c	/^    long startRange; \/\/ start of selection range (if line < 0)$/;"	m	struct:SelectionRange	file:	access:public
SelectionRange::theDate	src/gui_mac.c	/^    long theDate; \/\/ modification date\/time$/;"	m	struct:SelectionRange	file:	access:public
SelectionRange::unused1	src/gui_mac.c	/^    short unused1; \/\/ 0 (not used)$/;"	m	struct:SelectionRange	file:	access:public
SelectionRange::unused2	src/gui_mac.c	/^    long unused2; \/\/ 0 (not used)$/;"	m	struct:SelectionRange	file:	access:public
SendEventProc	runtime/tools/xcmdsrv_client.c	/^SendEventProc(dpy, eventPtr, expected, code)$/;"	f	file:
SendEventProc	runtime/tools/xcmdsrv_client.c	/^static char	*SendEventProc __ARGS((Display *dpy, XEvent *eventPtr,$/;"	p	file:	signature:(Display *dpy, XEvent *eventPtr, int expect, int *code)
SendInit	runtime/tools/xcmdsrv_client.c	/^SendInit(dpy)$/;"	f	file:
SendInit	runtime/tools/xcmdsrv_client.c	/^static int	SendInit __ARGS((Display *dpy));$/;"	p	file:	signature:(Display *dpy)
SendInit	src/if_xcmdsrv.c	/^SendInit(dpy)$/;"	f	file:
SendInit	src/if_xcmdsrv.c	/^static int	SendInit __ARGS((Display *dpy));$/;"	p	file:	signature:(Display *dpy)
SendKeys	src/if_ole.cpp	/^    STDMETHOD(SendKeys)(BSTR keys);$/;"	p	class:CVim	file:	access:public	signature:(BSTR keys)
SendKeys	src/if_ole.cpp	/^CVim::SendKeys(BSTR keys)$/;"	f	class:CVim	signature:(BSTR keys)
SendKeys	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendKeys )($/;"	m	struct:IVimVtbl	access:public
SendRequest	src/if_sniff.c	/^SendRequest(command, symbol)$/;"	f	file:
SendRequest	src/if_sniff.c	/^static void SendRequest __ARGS((struct sn_cmd *command, char* symbol));$/;"	p	file:	signature:(struct sn_cmd *command, char* symbol)
Send_KAHL_MOD_AE	src/gui_mac.c	/^Send_KAHL_MOD_AE(buf_T *buf)$/;"	f	signature:(buf_T *buf)
ServerReply	src/if_xcmdsrv.c	/^struct ServerReply$/;"	s	file:
ServerReply::id	src/if_xcmdsrv.c	/^    Window  id;$/;"	m	struct:ServerReply	file:	access:public
ServerReply::strings	src/if_xcmdsrv.c	/^    garray_T strings;$/;"	m	struct:ServerReply	file:	access:public
ServerReplyFind	src/if_xcmdsrv.c	/^ServerReplyFind(w, op)$/;"	f	file:
ServerReplyFind	src/if_xcmdsrv.c	/^static struct ServerReply *ServerReplyFind __ARGS((Window w, enum ServerReplyOp op));$/;"	p	file:	signature:(Window w, enum ServerReplyOp op)
ServerReplyOp	src/if_xcmdsrv.c	/^enum ServerReplyOp { SROP_Find, SROP_Add, SROP_Delete };$/;"	g	file:
ServerWait	src/if_xcmdsrv.c	/^ServerWait(dpy, w, endCond, endData, localLoop, seconds)$/;"	f	file:
ServerWait	src/if_xcmdsrv.c	/^static void	ServerWait __ARGS((Display *dpy, Window w, EndCond endCond, void *endData, int localLoop, int seconds));$/;"	p	file:	signature:(Display *dpy, Window w, EndCond endCond, void *endData, int localLoop, int seconds)
Set.All	runtime/macros/shellmenu.vim	/^imenu Set.All keyword arguments are placed in the environment set -k$/;"	m
Set.Disable	runtime/macros/shellmenu.vim	/^imenu Set.Disable file name generation set -f$/;"	m
Set.Exit	runtime/macros/shellmenu.vim	/^imenu Set.Exit after reading and executing one command set -t$/;"	m
Set.Print	runtime/macros/shellmenu.vim	/^imenu Set.Print commands and their arguments as they are executed set -x$/;"	m
Set.Print	runtime/macros/shellmenu.vim	/^imenu Set.Print shell input lines as they are read set -v$/;"	m
Set.Read	runtime/macros/shellmenu.vim	/^imenu Set.Read commands but do not execute them set -n$/;"	m
Set.Treat	runtime/macros/shellmenu.vim	/^imenu Set.Treat unset variables as an error when substituting set -u$/;"	m
Set.exit	runtime/macros/shellmenu.vim	/^imenu Set.exit when command returns non-zero exit code set -e$/;"	m
Set.mark	runtime/macros/shellmenu.vim	/^imenu Set.mark modified or modified variables set -a$/;"	m
Set.remember	runtime/macros/shellmenu.vim	/^imenu Set.remember function commands set -h$/;"	m
Set.set	runtime/macros/shellmenu.vim	/^imenu Set.set set$/;"	m
Set.unset	runtime/macros/shellmenu.vim	/^imenu Set.unset unset$/;"	m
SetApplicationObject	src/VisVim/Commands.cpp	/^void CCommands::SetApplicationObject(IApplication * pApplication)$/;"	f	class:CCommands	signature:(IApplication * pApplication)
SetApplicationObject	src/VisVim/Commands.h	/^	void SetApplicationObject (IApplication * m_pApplication);$/;"	p	class:CCommands	access:public	signature:(IApplication * m_pApplication)
SetBufWinVars	runtime/autoload/netrw.vim	/^fun! s:SetBufWinVars()$/;"	f
SetBufferLine	src/if_py_both.h	/^SetBufferLine(buf_T *buf, PyInt n, PyObject *line, PyInt *len_change)$/;"	f	signature:(buf_T *buf, PyInt n, PyObject *line, PyInt *len_change)
SetBufferLineList	src/if_python.c	/^SetBufferLineList(buf_T *buf, PyInt lo, PyInt hi, PyObject *list, PyInt *len_change)$/;"	f	file:	signature:(buf_T *buf, PyInt lo, PyInt hi, PyObject *list, PyInt *len_change)
SetBufferLineList	src/if_python.c	/^static int SetBufferLineList(buf_T *, PyInt, PyInt, PyObject *, PyInt *);$/;"	p	file:	signature:(buf_T *, PyInt, PyInt, PyObject *, PyInt *)
SetConsoleIcon	src/os_win32.c	/^SetConsoleIcon($/;"	f	file:	signature:( HWND hWnd, HICON hIconSmall, HICON hIcon)
SetDimensions	src/gui_at_sb.c	/^SetDimensions(sbw)$/;"	f	file:
SetFileTypeSH	runtime/filetype.vim	/^func! SetFileTypeSH(name)$/;"	f
SetFileTypeShell	runtime/filetype.vim	/^func! SetFileTypeShell(name)$/;"	f
SetForeground	src/if_ole.cpp	/^    STDMETHOD(SetForeground)(void);$/;"	p	class:CVim	file:	access:public	signature:(void)
SetForeground	src/if_ole.cpp	/^CVim::SetForeground(void)$/;"	f	class:CVim	signature:(void)
SetForeground	src/if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetForeground )($/;"	m	struct:IVimVtbl	access:public
SetIsk	runtime/syntax/bst.vim	/^    command -nargs=1 SetIsk set iskeyword=<args>$/;"	c
SetIsk	runtime/syntax/bst.vim	/^    command -nargs=1 SetIsk setlocal iskeyword=<args>$/;"	c
SetIsk	runtime/syntax/lilo.vim	/^  command -nargs=1 SetIsk set iskeyword=<args>$/;"	c
SetIsk	runtime/syntax/lilo.vim	/^  command -nargs=1 SetIsk setlocal iskeyword=<args>$/;"	c
SetKeyAndValue	src/if_ole.cpp	/^static void SetKeyAndValue(const char *key, const char *subkey, const char *value)$/;"	f	file:	signature:(const char *key, const char *subkey, const char *value)
SetKeyAndValue	src/if_ole.cpp	/^static void SetKeyAndValue(const char *path, const char *subkey, const char *value);$/;"	p	file:	signature:(const char *path, const char *subkey, const char *value)
SetKeywords	runtime/autoload/xmlcomplete.vim	/^function! s:SetKeywords()$/;"	f
SetLineNumber	src/testdir/test49.vim	/^    command! -nargs=1 SetLineNumber$/;"	c
SetRexDir	runtime/autoload/netrw.vim	/^fun! s:SetRexDir(islocal,dirname)$/;"	f
SetSyn	runtime/synmenu.vim	/^fun! SetSyn(name)$/;"	f
SetValues	src/gui_at_sb.c	/^SetValues(current, request, desired, args, num_args)$/;"	f	file:
SetValues	src/gui_at_sb.c	/^static Boolean SetValues __ARGS((Widget, Widget, Widget, ArgList, Cardinal *));$/;"	p	file:	signature:(Widget, Widget, Widget, ArgList, Cardinal *)
SetValues	src/gui_xmebw.c	/^SetValues(Widget current,$/;"	f	file:	signature:(Widget current, Widget request UNUSED, Widget new, ArgList args UNUSED, Cardinal *n UNUSED)
SetValues	src/gui_xmebw.c	/^static Boolean SetValues(Widget current, Widget request, Widget new, ArgList args, Cardinal *n);$/;"	p	file:	signature:(Widget current, Widget request, Widget new, ArgList args, Cardinal *n)
Setsynonly	runtime/synmenu.vim	/^fun! s:Setsynonly()$/;"	f
SetupNetrwStatusLine	runtime/autoload/netrw.vim	/^fun! s:SetupNetrwStatusLine(statline)$/;"	f
SetupRemoteReplies	runtime/plugin/rrhelper.vim	/^function SetupRemoteReplies()$/;"	f
SetupSlavePTY	src/pty.c	/^SetupSlavePTY(fd)$/;"	f
Severity	runtime/tools/ccfilter.c	/^char	       Severity;$/;"	v
Sexplore	runtime/plugin/netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Sexplore	call netrw#Explore(<count>,1,0+<bang>0,<q-args>)$/;"	c
Sfdisc_t	src/if_perlsfio.c	22;"	d	file:
Sfio_t	src/if_perlsfio.c	21;"	d	file:
ShS_NEUTRAL	src/gui_beval.h	/^    ShS_NEUTRAL,			\/* nothing showing or pending *\/$/;"	e	enum:__anon23
ShS_PENDING	src/gui_beval.h	/^    ShS_PENDING,			\/* data requested from debugger *\/$/;"	e	enum:__anon23
ShS_SHOWING	src/gui_beval.h	/^    ShS_SHOWING				\/* the balloon is being displayed *\/$/;"	e	enum:__anon23
ShS_UPDATE_PENDING	src/gui_beval.h	/^    ShS_UPDATE_PENDING,			\/* switching information displayed *\/$/;"	e	enum:__anon23
SharedFindReplace	src/gui_gtk.c	/^} SharedFindReplace;$/;"	t	typeref:struct:_SharedFindReplace	file:
SharedFindReplace	src/gui_motif.c	/^} SharedFindReplace;$/;"	t	typeref:struct:_SharedFindReplace	file:
SharedFontSelData	src/gui_xmdlg.c	/^} SharedFontSelData;$/;"	t	typeref:struct:_SharedFontSelData	file:
Show	src/if_cscope.h	/^typedef enum { Add, Find, Help, Kill, Reset, Show } csid_e;$/;"	e	enum:__anon87
ShowUsage	runtime/tools/ccfilter.c	/^int ShowUsage( char *szError )$/;"	f	signature:( char *szError )
SkipJavaBlanksAndComments	runtime/indent/java.vim	/^function! SkipJavaBlanksAndComments(startline)$/;"	f
SkipPattern	runtime/indent/sml.vim	/^function! s:SkipPattern(lnum, pat)$/;"	f
Skippmatch	runtime/indent/php.vim	/^function! Skippmatch()	" {{{$/;"	f
Skippmatch2	runtime/indent/php.vim	/^function! Skippmatch2()$/;"	f
SniffEmacs	src/if_sniff.c	/^static char *SniffEmacs[2] = {"sniffemacs", (char *)NULL};  \/* Yes, Emacs! *\/$/;"	v	file:
SniffEmacsReadThread	src/if_sniff.c	/^SniffEmacsReadThread(void *dummy)$/;"	f	file:	signature:(void *dummy)
SpShVars.All	runtime/macros/shellmenu.vim	/^imenu SpShVars.All positional parameters (quoted spaces) ${*}$/;"	m
SpShVars.All	runtime/macros/shellmenu.vim	/^imenu SpShVars.All positional parameters (unquoted spaces) ${@}$/;"	m
SpShVars.Flags	runtime/macros/shellmenu.vim	/^imenu SpShVars.Flags set ${-}$/;"	m
SpShVars.Number	runtime/macros/shellmenu.vim	/^imenu SpShVars.Number of positional parameters ${#}$/;"	m
SpShVars.Process	runtime/macros/shellmenu.vim	/^imenu SpShVars.Process number of last background command ${!}$/;"	m
SpShVars.Process	runtime/macros/shellmenu.vim	/^imenu SpShVars.Process number of this shell ${$}$/;"	m
SpShVars.Return	runtime/macros/shellmenu.vim	/^imenu SpShVars.Return code of last command ${?}$/;"	m
Space	runtime/optwin.vim	/^fun! <SID>Space()$/;"	f
SpecChangelog	runtime/ftplugin/spec.vim	/^	function s:SpecChangelog(format)$/;"	f
SpecialKey	src/term.h	/^enum SpecialKey$/;"	g
SpellDel	runtime/menu.vim	/^  func! <SID>SpellDel()$/;"	f
SpellLang	runtime/menu.vim	/^  func! s:SpellLang()$/;"	f
SpellPopup	runtime/menu.vim	/^  func! <SID>SpellPopup()$/;"	f
SpellPopupMenu	runtime/menu.vim	/^  augroup SpellPopupMenu$/;"	a
SpellReplace	runtime/menu.vim	/^  func! <SID>SpellReplace(n)$/;"	f
Squash	runtime/ftplugin/gitrebase.vim	/^command! -buffer -bar Squash :call s:choose('squash')$/;"	c
StarSetf	runtime/filetype.vim	/^func! s:StarSetf(ft)$/;"	f
Starts_with_word	runtime/indent/awk.vim	/^function! s:Starts_with_word( line )$/;"	f
State	src/globals.h	/^EXTERN int	State INIT(= NORMAL);	\/* This is the current state of the$/;"	v
StatementIndent	runtime/indent/ada.vim	/^function s:StatementIndent( current_indent, prev_lnum )$/;"	f
Stmts.break	break	runtime/macros/shellmenu.vim	/^imenu Stmts.break	break $/;"	m
Stmts.case	case	runtime/macros/shellmenu.vim	/^imenu Stmts.case	case  in$/;"	m
Stmts.continue	continue	runtime/macros/shellmenu.vim	/^imenu Stmts.continue	continue $/;"	m
Stmts.elif	elif	runtime/macros/shellmenu.vim	/^imenu Stmts.elif	elif   $/;"	m
Stmts.exit	exit	runtime/macros/shellmenu.vim	/^imenu Stmts.exit	exit $/;"	m
Stmts.for	for	runtime/macros/shellmenu.vim	/^imenu Stmts.for	for  in $/;"	m
Stmts.function	()	runtime/macros/shellmenu.vim	/^imenu Stmts.function	() {$/;"	m
Stmts.if	if	runtime/macros/shellmenu.vim	/^imenu Stmts.if	if   $/;"	m
Stmts.if-else	if	runtime/macros/shellmenu.vim	/^imenu Stmts.if-else	if   $/;"	m
Stmts.return	return	runtime/macros/shellmenu.vim	/^imenu Stmts.return	return $/;"	m
Stmts.return-false	return	runtime/macros/shellmenu.vim	/^imenu Stmts.return-false	return 1$/;"	m
Stmts.return-true	return	runtime/macros/shellmenu.vim	/^imenu Stmts.return-true	return 0$/;"	m
Stmts.shift	shift	runtime/macros/shellmenu.vim	/^imenu Stmts.shift	shift $/;"	m
Stmts.trap	trap	runtime/macros/shellmenu.vim	/^imenu Stmts.trap	trap $/;"	m
Stmts.while	while	runtime/macros/shellmenu.vim	/^imenu Stmts.while	while   $/;"	m
Store	src/if_cscope.h	/^    Store,$/;"	e	enum:__anon88
StringToLine	src/if_py_both.h	/^StringToLine(PyObject *obj)$/;"	f	signature:(PyObject *obj)
StringValuePtr	src/if_ruby.c	90;"	d	file:
Strlen	runtime/autoload/netrw.vim	/^fun! s:Strlen(x)$/;"	f
StructMembers	runtime/autoload/ccomplete.vim	/^function! s:StructMembers(typename, items, all)$/;"	f
SubName	runtime/tools/pltags.pl	/^sub SubName($)$/;"	s
SuperSub	runtime/syntax/tex.vim	/^  fun! s:SuperSub(group,leader,pat,cchar)$/;"	f
Syn	runtime/makemenu.vim	/^fun! <SID>Syn(arg)$/;"	f
SynColor	runtime/syntax/doxygen.vim	/^    command -nargs=+ SynColor hi def <args>$/;"	c
SynColor	runtime/syntax/syncolor.vim	/^    command -nargs=* SynColor hi <args>$/;"	c
SynColor	runtime/syntax/syncolor.vim	/^    command -nargs=* SynColor hi def <args>$/;"	c
SynColor	runtime/syntax/syncolor.vim	/^  command -nargs=* SynColor hi <args>$/;"	c
SynDisplay	runtime/syntax/inform.vim	/^  command -nargs=+ SynDisplay syntax <args> display$/;"	c
SynDisplay	runtime/syntax/inform.vim	/^  command -nargs=+ SynDisplay syntax <args>$/;"	c
SynLink	runtime/syntax/doxygen.vim	/^    command -nargs=+ SynLink hi def link <args>$/;"	c
SynLink	runtime/syntax/syncolor.vim	/^    command -nargs=* SynLink hi def link <args>$/;"	c
SynLink	runtime/syntax/syncolor.vim	/^    command -nargs=* SynLink hi! link <args>$/;"	c
SynLink	runtime/syntax/syncolor.vim	/^  command -nargs=* SynLink hi link <args>$/;"	c
SynMenu	runtime/makemenu.vim	/^command! -nargs=* SynMenu call <SID>Syn(<q-args>)$/;"	c
SynOnOff	runtime/menu.vim	/^    fun s:SynOnOff()$/;"	f
SynSet	runtime/syntax/synload.vim	/^fun! s:SynSet()$/;"	f
SyntaxCSyntaxGroupItems	runtime/autoload/syntaxcomplete.vim	/^function! s:SyntaxCSyntaxGroupItems( group_name, syntax_full )$/;"	f
T	runtime/macros/hanoi/hanoi.vim	/^map T ko0$/;"	m
T	runtime/macros/life/life.vim	/^map T G,c2k,!9k,@,#j>2k,$j$/;"	m
T	runtime/macros/maze/maze.c	/^char*M,A,Z,E=40,J[40],T[40];main(C){for(*J=A=scanf(M="%d",&C);$/;"	v
T	runtime/macros/maze/mazeansi.c	/^char*M,A,Z,E=40,J[80],T[3];main(C){for(M=J+E,*J=A=scanf("%d",&$/;"	v
T	runtime/macros/maze/mazeclean.c	/^char *M, A, Z, E = 40, line[80], T[3];$/;"	v
T	runtime/macros/urm/urm.vim	/^map T y\$$/;"	m
T	src/testdir/test49.vim	/^    function! T()$/;"	f
T	src/testdir/test49.vim	/^    function! T(jump)$/;"	f
T	src/testdir/test49.vim	/^    function! T(line)$/;"	f
T	src/testdir/test49.vim	/^function! T(arg, line)$/;"	f
T1	src/testdir/test49.vim	/^function! T1()$/;"	f
T2	src/testdir/test49.vim	/^function! T2()$/;"	f
TAB	src/ascii.h	110;"	d
TAB	src/ascii.h	27;"	d
TABLE_SIZE	src/dosinst.c	51;"	d	file:
TABLINE_HEIGHT	src/gui.h	174;"	d
TABLINE_HEIGHT	src/gui.h	177;"	d
TABLINE_MENU_CLOSE	src/globals.h	464;"	d
TABLINE_MENU_NEW	src/globals.h	465;"	d
TABLINE_MENU_OPEN	src/globals.h	466;"	d
TAGPRG	src/auto/config.mk	/^TAGPRG		= ctags -I INIT+ --fields=+S$/;"	m
TAGSTACKSIZE	src/structs.h	99;"	d
TAGS_INCL	src/Makefile	/^TAGS_INCL = *.h$/;"	m
TAGS_SRC	src/Makefile	/^TAGS_SRC = *.c *.cpp if_perl.xs$/;"	m
TAG_BREAK	src/if_ruby.c	653;"	d	file:
TAG_CSCOPE	src/vim.h	1113;"	d
TAG_FATAL	src/if_ruby.c	659;"	d	file:
TAG_HELP	src/vim.h	1108;"	d
TAG_INS_COMP	src/vim.h	1116;"	d
TAG_KEEP_LANG	src/vim.h	1117;"	d
TAG_MANY	src/vim.h	1119;"	d
TAG_MASK	src/if_ruby.c	660;"	d	file:
TAG_NAMES	src/vim.h	1109;"	d
TAG_NEXT	src/if_ruby.c	654;"	d	file:
TAG_NOIC	src/vim.h	1111;"	d
TAG_RAISE	src/if_ruby.c	657;"	d	file:
TAG_REDO	src/if_ruby.c	656;"	d	file:
TAG_REGEXP	src/vim.h	1110;"	d
TAG_RETRY	src/if_ruby.c	655;"	d	file:
TAG_RETURN	src/if_ruby.c	652;"	d	file:
TAG_THROW	src/if_ruby.c	658;"	d	file:
TAG_VERBOSE	src/vim.h	1115;"	d
TARGET	src/Make_bc5.mak	/^TARGET = gvim.exe$/;"	m
TARGET	src/Make_bc5.mak	/^TARGET = gvimd.exe$/;"	m
TARGET	src/Make_bc5.mak	/^TARGET = vim.exe$/;"	m
TARGET	src/Make_bc5.mak	/^TARGET = vimd.exe$/;"	m
TARGET	src/Make_ming.mak	/^TARGET := gvim$(DEBUG_SUFFIX).exe$/;"	m
TARGET	src/Make_ming.mak	/^TARGET := vim$(DEBUG_SUFFIX).exe$/;"	m
TARGET	src/Make_os2.mak	/^TARGET = vim.exe$/;"	m
TARGETOS	src/GvimExt/Makefile	/^TARGETOS=BOTH$/;"	m
TARGETOS	src/Make_mvc.mak	/^TARGETOS = BOTH$/;"	m
TARGETS	src/Make_bc5.mak	/^TARGETS = $(DLLTARGET)$/;"	m
TARGETS	src/Make_bc5.mak	/^TARGETS = $(TARGET)$/;"	m
TARGETS	src/Make_bc5.mak	/^TARGETS = $(TARGETS) $(TARGET)$/;"	m
TARGET_COMPOUND_TEXT	src/gui_gtk_x11.c	/^    TARGET_COMPOUND_TEXT,$/;"	e	enum:__anon90	file:
TARGET_COUNT	src/dosinst.h	366;"	d
TARGET_HTML	src/gui_gtk_x11.c	/^    TARGET_HTML,$/;"	e	enum:__anon90	file:
TARGET_STRING	src/gui_gtk_x11.c	/^    TARGET_STRING,$/;"	e	enum:__anon90	file:
TARGET_TEXT	src/gui_gtk_x11.c	/^    TARGET_TEXT,$/;"	e	enum:__anon90	file:
TARGET_TEXT_PLAIN	src/gui_gtk_x11.c	/^    TARGET_TEXT_PLAIN,$/;"	e	enum:__anon90	file:
TARGET_TEXT_URI_LIST	src/gui_gtk_x11.c	/^    TARGET_TEXT_URI_LIST,$/;"	e	enum:__anon90	file:
TARGET_TYPE_NONE	src/gui_gtk_x11.c	/^    TARGET_TYPE_NONE,$/;"	e	enum:__anon90	file:
TARGET_UTF8_STRING	src/gui_gtk_x11.c	/^    TARGET_UTF8_STRING,$/;"	e	enum:__anon90	file:
TARGET_VIM	src/gui_gtk_x11.c	/^    TARGET_VIM,$/;"	e	enum:__anon90	file:
TARGET_VIMENC	src/gui_gtk_x11.c	/^    TARGET_VIMENC$/;"	e	enum:__anon90	file:
TASH	src/farsi.h	164;"	d
TASK	src/gui_riscos.h	11;"	d
TASM	src/Make_w16.mak	/^TASM    = Tasm$/;"	m
TBBUTTON	src/vimtbar.h	/^} TBBUTTON;$/;"	t	typeref:struct:tagTBBUTTON
TBIS_LARGE	src/option.h	812;"	d
TBIS_MEDIUM	src/option.h	811;"	d
TBIS_SMALL	src/option.h	810;"	d
TBIS_TINY	src/option.h	809;"	d
TBN_BEGINDRAG	src/vimtbar.h	184;"	d
TBN_ENDDRAG	src/vimtbar.h	185;"	d
TBSTATE_CHECKED	src/vimtbar.h	38;"	d
TBSTATE_ENABLED	src/vimtbar.h	40;"	d
TBSTATE_HIDDEN	src/vimtbar.h	41;"	d
TBSTATE_INDETERMINATE	src/vimtbar.h	42;"	d
TBSTATE_PRESSED	src/vimtbar.h	39;"	d
TBSTATE_SELECTED	src/vimtbar.h	43;"	d
TBSTYLE_BUTTON	src/vimtbar.h	29;"	d
TBSTYLE_CHECK	src/vimtbar.h	31;"	d
TBSTYLE_CHECKGROUP	src/vimtbar.h	33;"	d
TBSTYLE_FLAT	src/gui_w32.c	4062;"	d	file:
TBSTYLE_GROUP	src/vimtbar.h	32;"	d
TBSTYLE_SEP	src/vimtbar.h	30;"	d
TBUFSZ	src/vim.h	1439;"	d
TB_ADDBITMAP	src/vimtbar.h	136;"	d
TB_ADDBUTTONS	src/vimtbar.h	146;"	d
TB_BUTTONCOUNT	src/vimtbar.h	170;"	d
TB_CHECKBUTTON	src/vimtbar.h	71;"	d
TB_COMMANDTOINDEX	src/vimtbar.h	176;"	d
TB_DELETEBUTTON	src/vimtbar.h	158;"	d
TB_ENABLEBUTTON	src/vimtbar.h	65;"	d
TB_GETBUTTON	src/vimtbar.h	164;"	d
TB_GETSTATE	src/vimtbar.h	130;"	d
TB_HIDEBUTTON	src/vimtbar.h	83;"	d
TB_INDETERMINATE	src/vimtbar.h	88;"	d
TB_INSERTBUTTON	src/vimtbar.h	152;"	d
TB_ISBUTTONCHECKED	src/vimtbar.h	100;"	d
TB_ISBUTTONENABLED	src/vimtbar.h	94;"	d
TB_ISBUTTONHIDDEN	src/vimtbar.h	112;"	d
TB_ISBUTTONINDETERMINATE	src/vimtbar.h	118;"	d
TB_ISBUTTONPRESSED	src/vimtbar.h	106;"	d
TB_PRESSBUTTON	src/vimtbar.h	77;"	d
TB_SETSTATE	src/vimtbar.h	124;"	d
TB_SETUNICODEFORMAT	src/gui_w48.c	2291;"	d	file:
TCL	src/auto/config.mk	/^TCL		= $/;"	m
TCL_CFLAGS	src/auto/config.mk	/^TCL_CFLAGS	= $/;"	m
TCL_DLL	src/Make_mvc.mak	/^TCL_DLL = tcl$(TCL_VER).dll$/;"	m
TCL_EXIT	src/if_tcl.c	291;"	d	file:
TCL_INC	src/Make_mvc.mak	/^TCL_INC	= \/I "$(TCL)\\Include" \/I "$(TCL)"$/;"	m
TCL_LIB	src/Make_bc5.mak	/^TCL_LIB = $(TCL)\\lib\\tcl$(TCL_VER).lib$/;"	m
TCL_LIB	src/Make_bc5.mak	/^TCL_LIB = tclstub$(TCL_VER)-bor.lib$/;"	m
TCL_LIB	src/Make_mvc.mak	/^TCL_LIB = $(TCL)\\lib\\tcl$(TCL_VER)vc.lib$/;"	m
TCL_LIB	src/Make_mvc.mak	/^TCL_LIB = $(TCL)\\lib\\tclstub$(TCL_VER).lib$/;"	m
TCL_LIBS	src/auto/config.mk	/^TCL_LIBS	= $/;"	m
TCL_LIB_FLAG	src/Make_bc5.mak	/^TCL_LIB_FLAG =$/;"	m
TCL_OBJ	src/Make_mvc.mak	/^TCL_OBJ	= $(OUTDIR)\\if_tcl.obj$/;"	m
TCL_OBJ	src/auto/config.mk	/^TCL_OBJ		= $/;"	m
TCL_PRO	src/auto/config.mk	/^TCL_PRO		= $/;"	m
TCL_PROC	src/if_tcl.c	172;"	d	file:
TCL_SRC	src/auto/config.mk	/^TCL_SRC		= $/;"	m
TCL_VER	src/Make_bc5.mak	/^TCL_VER = 83$/;"	m
TCL_VER	src/Make_cyg.mak	/^TCL_VER = 83$/;"	m
TCL_VER	src/Make_ming.mak	/^TCL_VER = 83$/;"	m
TCL_VER	src/Make_mvc.mak	/^TCL_VER = 83$/;"	m
TCL_VER_LONG	src/Make_mvc.mak	/^TCL_VER_LONG = 8.3$/;"	m
TE	src/farsi.h	114;"	d
TEAROFF_BUTTON_PAD_X	src/gui_w32.c	170;"	d	file:
TEAROFF_COLUMN_PADDING	src/gui_w32.c	173;"	d	file:
TEAROFF_MIN_WIDTH	src/gui_w32.c	171;"	d	file:
TEAROFF_PADDING_X	src/gui_w32.c	169;"	d	file:
TEAROFF_SUBMENU_LABEL	src/gui_w32.c	172;"	d	file:
TEAR_LEN	src/gui.h	161;"	d
TEAR_STRING	src/gui.h	160;"	d
TECObjectRef	src/os_mac_conv.c	/^typedef int *TECObjectRef;$/;"	t	file:
TEE	src/farsi.h	143;"	d
TEE_	src/farsi.h	27;"	d
TEMPDIRNAMES	src/os_msdos.h	73;"	d
TEMPDIRNAMES	src/os_unix.h	409;"	d
TEMPDIRNAMES	src/os_unix.h	419;"	d
TEMPNAME	src/os_amiga.h	55;"	d
TEMPNAME	src/os_riscos.h	31;"	d
TEMPNAME	src/os_unix.h	416;"	d
TEMPNAMELEN	src/os_amiga.h	56;"	d
TEMPNAMELEN	src/os_msdos.h	74;"	d
TEMPNAMELEN	src/os_riscos.h	32;"	d
TEMPNAMELEN	src/os_unix.h	410;"	d
TEMPNAMELEN	src/os_unix.h	417;"	d
TEMPNAMELEN	src/os_unix.h	420;"	d
TEMPNAMELEN	src/os_win32.h	119;"	d
TEMP_BUF_SIZE	src/gui_xmdlg.c	87;"	d	file:
TERMCAP2KEY	src/keymap.h	118;"	d
TERMCAPFILE	src/os_riscos.h	53;"	d
TERMCAPFILE	src/termlib.c	58;"	d	file:
TERMCAPFILE	src/termlib.c	61;"	d	file:
TERMCAPFILE	src/termlib.c	63;"	d	file:
TERMFLAG	src/Make_ro.mak	/^TERMFLAG   = -DUP_BC_PC_EXTERN$/;"	m
TERMINFO	src/auto/config.h	14;"	d
TERMINFO	src/os_os2_cfg.h	24;"	d
TERMINFO	src/os_vms_conf.h	11;"	d
TERMLIB	src/Make_dice.mak	/^TERMLIB = o\/termlib.o$/;"	m
TERMLIB	src/Make_manx.mak	/^TERMLIB =$/;"	m
TERMLIB	src/Make_sas.mak	/^TERMLIB =$/;"	m
TERM_ATTR_ENTRY	src/syntax.c	8111;"	d	file:
TEXT	src/os_mswin.c	1740;"	d	file:
TEXTMETRIC	src/os_mswin.c	/^typedef int TEXTMETRIC;$/;"	t	file:
TEXTMETRIC	src/os_win32.c	/^typedef int TEXTMETRIC;$/;"	t	file:
TEXT_X	src/gui.h	110;"	d
TEXT_X	src/gui.h	117;"	d
TEXT_Y	src/gui.h	111;"	d
TEXT_Y	src/gui.h	120;"	d
TFN_INT	src/eval.c	162;"	d	file:
TFN_QUIET	src/eval.c	163;"	d	file:
TGETENT	src/term.c	139;"	d	file:
TGETENT_ZERO_ERR	src/auto/config.h	152;"	d
TGETENT_ZERO_ERR	src/os_vms_conf.h	98;"	d
TGETSTR	src/term.c	138;"	d	file:
TGETSTR_CHAR_P	src/os_os2_cfg.h	97;"	d
TGetMonitorInfo	src/gui_w32.c	/^typedef BOOL (WINAPI *TGetMonitorInfo)(_HMONITOR, _MONITORINFO *);$/;"	t	file:
THIS_FILE	src/VisVim/Commands.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/VisVim/Commands.cpp	9;"	d	file:
THIS_FILE	src/VisVim/DSAddIn.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/VisVim/DSAddIn.cpp	8;"	d	file:
THIS_FILE	src/VisVim/OleAut.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/VisVim/OleAut.cpp	42;"	d	file:
THIS_FILE	src/VisVim/VisVim.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/VisVim/VisVim.cpp	12;"	d	file:
THR	src/testdir/test49.vim	/^    function! THR(n)$/;"	f
THROW	src/testdir/test49.vim	/^function! THROW(x)$/;"	f
THROW	src/testdir/test49.vim	/^function! THROW(x, n)$/;"	f
THROW1	src/testdir/test49.vim	/^command! -nargs=? THROW1    throw <args> | throw 1$/;"	c
THROW2	src/testdir/test49.vim	/^command! -nargs=? THROW2    try | throw <args> | endtry | throw 2$/;"	c
THROW3	src/testdir/test49.vim	/^command! -nargs=? THROW3    try | throw 3 | catch \/3\/ | throw <args> | endtry$/;"	c
THROW4	src/testdir/test49.vim	/^command! -nargs=? THROW4    try | throw 4 | finally   | throw <args> | endtry$/;"	c
THROW_ON_ERROR	src/ex_eval.c	62;"	d	file:
THROW_ON_ERROR_TRUE	src/ex_eval.c	63;"	d	file:
THROW_ON_INTERRUPT	src/ex_eval.c	64;"	d	file:
THROW_ON_INTERRUPT_TRUE	src/ex_eval.c	65;"	d	file:
TILDE_REGISTER	src/ops.c	39;"	d	file:
TIME_MSG	src/macros.h	231;"	d
TIME_MSG	src/macros.h	233;"	d
TIME_WITH_SYS_TIME	src/auto/config.h	112;"	d
TIME_WITH_SYS_TIME	src/os_os2_cfg.h	82;"	d
TIME_WITH_SYS_TIME	src/os_vms_conf.h	66;"	d
TIOCGWINSZ	src/os_unix.c	113;"	d	file:
TLIB	src/Make_w16.mak	/^TLIB    = TLib$/;"	m
TLINK	src/Make_bc3.mak	/^TLINK = $(BOR)\\bin\\tlink.exe$/;"	m
TLINK	src/Make_w16.mak	/^TLINK   = TLink$/;"	m
TMODE_COOK	src/term.h	162;"	d
TMODE_RAW	src/term.h	164;"	d
TMODE_SLEEP	src/term.h	163;"	d
TMP	src/testdir/test49.vim	/^		aug TMP$/;"	a
TMP	src/testdir/test49.vim	/^	    aug TMP$/;"	a
TMP	src/testdir/test49.vim	/^    aug TMP$/;"	a
TMP	src/testdir/test49.vim	/^augroup TMP$/;"	a
TMPLEN	src/buffer.c	3421;"	d	file:
TMP_LEN	src/message.c	4095;"	d	file:
TMonitorFromWindow	src/gui_w32.c	/^typedef _HMONITOR (WINAPI *TMonitorFromWindow)(HWND, DWORD);$/;"	t	file:
TOKEN_INFORMATION_CLASS	src/os_win32.c	/^typedef int TOKEN_INFORMATION_CLASS;$/;"	t	file:
TOLOWER_ASC	src/macros.h	80;"	d
TOLOWER_ASC	src/macros.h	83;"	d
TOLOWER_LOC	src/macros.h	66;"	d
TOLOWER_LOC	src/macros.h	70;"	d
TOLOWER_LOC	src/macros.h	73;"	d
TOOLBAR_BITMAP_COUNT	src/gui_w48.c	2304;"	d	file:
TOOLBAR_BORDER_HEIGHT	src/gui.h	171;"	d
TOOLBAR_BUTTON_HEIGHT	src/gui.h	165;"	d
TOOLBAR_BUTTON_HEIGHT	src/gui.h	168;"	d
TOOLBAR_BUTTON_WIDTH	src/gui.h	166;"	d
TOOLBAR_BUTTON_WIDTH	src/gui.h	169;"	d
TOOLBAR_HORIZ	src/option.h	801;"	d
TOOLBAR_ICONS	src/option.h	799;"	d
TOOLBAR_NAME_COUNT	src/menu.c	82;"	d	file:
TOOLBAR_TEXT	src/option.h	798;"	d
TOOLBAR_TOOLTIPS	src/option.h	800;"	d
TOOLINFO_NEW	src/gui_w32.c	/^} TOOLINFO_NEW;$/;"	t	typeref:struct:tagTOOLINFOA_NEW	file:
TOOLS	src/Make_os2.mak	/^TOOLS = xxd\/xxd.exe tee\/tee.exe$/;"	m
TOOLS	src/Makefile	/^TOOLS = xxd\/xxd$(EXEEXT)$/;"	m
TOOLSSOURCE	src/Makefile	/^TOOLSSOURCE = ..\/runtime\/tools$/;"	m
TOOLSSUBDIR	src/Makefile	/^TOOLSSUBDIR = \/tools$/;"	m
TOOLSSUBLOC	src/Makefile	/^TOOLSSUBLOC	= $(VIMRTLOC)$(TOOLSSUBDIR)$/;"	m
TOP_SHADOW	src/gui_x11_pm.h	91;"	d
TOUPPER_ASC	src/macros.h	79;"	d
TOUPPER_ASC	src/macros.h	82;"	d
TOUPPER_LOC	src/macros.h	65;"	d
TOUPPER_LOC	src/macros.h	69;"	d
TOUPPER_LOC	src/macros.h	72;"	d
TO_OLE_STR	src/VisVim/OleAut.h	56;"	d
TO_OLE_STR	src/VisVim/OleAut.h	64;"	d
TO_OLE_STR_BUF	src/VisVim/OleAut.h	57;"	d
TO_OLE_STR_BUF	src/VisVim/OleAut.h	65;"	d
TO_SPECIAL	src/keymap.h	132;"	d
TOhtml	runtime/plugin/tohtml.vim	/^  command -range=% TOhtml :call tohtml#Convert2HTML(<line1>, <line2>)$/;"	c
TPUTSFUNCAST	src/term.c	41;"	d	file:
TPUTSFUNCAST	src/term.c	44;"	d	file:
TPUTSFUNCAST	src/term.c	46;"	d	file:
TRACE	src/os_win16.h	109;"	d
TRACE	src/os_win16.h	123;"	d
TRACE	src/os_win32.h	158;"	d
TRACE	src/os_win32.h	173;"	d
TRACE0	src/os_win16.h	110;"	d
TRACE0	src/os_win16.h	124;"	d
TRACE0	src/os_win32.h	159;"	d
TRACE0	src/os_win32.h	174;"	d
TRACE1	src/os_win16.h	111;"	d
TRACE1	src/os_win16.h	125;"	d
TRACE1	src/os_win32.h	160;"	d
TRACE1	src/os_win32.h	175;"	d
TRACE2	src/os_win16.h	112;"	d
TRACE2	src/os_win16.h	126;"	d
TRACE2	src/os_win32.h	161;"	d
TRACE2	src/os_win32.h	176;"	d
TRACE3	src/os_win16.h	113;"	d
TRACE3	src/os_win16.h	127;"	d
TRACE3	src/os_win32.h	162;"	d
TRACE3	src/os_win32.h	177;"	d
TRACE4	src/os_win32.h	163;"	d
TRACE4	src/os_win32.h	178;"	d
TRLBAR	src/ex_cmds.h	42;"	d
TRUE	src/dosinst.h	83;"	d
TRUE	src/os_amiga.c	22;"	d	file:
TRUE	src/os_amiga.c	61;"	d	file:
TRUE	src/os_amiga.c	62;"	d	file:
TRUE	src/vim.h	1357;"	d
TRUSTEE	src/os_win32.c	/^typedef int TRUSTEE;$/;"	t	file:
TRY_ABORT	src/os_beos.c	32;"	d	file:
TRY_DEEPER	src/spell.c	11234;"	d	file:
TRY_SEEK	src/xxd/xxd.c	214;"	d	file:
TSF_DIDDEL	src/spell.c	824;"	d	file:
TSF_DIDSPLIT	src/spell.c	823;"	d	file:
TSF_PREFIXOK	src/spell.c	822;"	d	file:
TTF_DI_SETITEM	src/gui_w32.c	246;"	d	file:
TTM_SETMAXTIPWIDTH	src/gui_w32.c	242;"	d	file:
TTN_GETDISPINFO	src/gui_w32.c	250;"	d	file:
TTN_GETDISPINFOW	src/gui_w32.c	285;"	d	file:
TTYM_DEC	src/option.h	823;"	d
TTYM_JSBTERM	src/option.h	825;"	d
TTYM_NETTERM	src/option.h	824;"	d
TTYM_PTERM	src/option.h	826;"	d
TTYM_XTERM	src/option.h	821;"	d
TTYM_XTERM2	src/option.h	822;"	d
TT_MODE	src/os_vms.c	/^}	TT_MODE;$/;"	t	typeref:struct:__anon75	file:
TUTORSOURCE	src/Makefile	/^TUTORSOURCE = ..\/runtime\/tutor$/;"	m
TUTORSUBDIR	src/Makefile	/^TUTORSUBDIR = \/tutor$/;"	m
TUTORSUBLOC	src/Makefile	/^TUTORSUBLOC	= $(VIMRTLOC)$(TUTORSUBDIR)$/;"	m
TYPEAHEADLEN	src/os_win32.c	1364;"	d	file:
TYPELEN_INIT	src/getchar.c	109;"	d	file:
TYPE_EQUAL	src/eval.c	/^    , TYPE_EQUAL	\/* == *\/$/;"	e	enum:__anon143	file:
TYPE_GEQUAL	src/eval.c	/^    , TYPE_GEQUAL	\/* >= *\/$/;"	e	enum:__anon143	file:
TYPE_GREATER	src/eval.c	/^    , TYPE_GREATER	\/* >  *\/$/;"	e	enum:__anon143	file:
TYPE_MATCH	src/eval.c	/^    , TYPE_MATCH	\/* =~ *\/$/;"	e	enum:__anon143	file:
TYPE_NEQUAL	src/eval.c	/^    , TYPE_NEQUAL	\/* != *\/$/;"	e	enum:__anon143	file:
TYPE_NOMATCH	src/eval.c	/^    , TYPE_NOMATCH	\/* !~ *\/$/;"	e	enum:__anon143	file:
TYPE_SEQUAL	src/eval.c	/^    , TYPE_SEQUAL	\/* <= *\/$/;"	e	enum:__anon143	file:
TYPE_SMALLER	src/eval.c	/^    , TYPE_SMALLER	\/* <  *\/$/;"	e	enum:__anon143	file:
TYPE_UNKNOWN	src/eval.c	/^    TYPE_UNKNOWN = 0$/;"	e	enum:__anon143	file:
T_AL	src/term.h	106;"	d
T_BC	src/term.h	140;"	d
T_CAB	src/term.h	148;"	d
T_CAF	src/term.h	147;"	d
T_CAL	src/term.h	107;"	d
T_CCO	src/term.h	142;"	d
T_CCS	src/term.h	141;"	d
T_CD	src/term.h	113;"	d
T_CDL	src/term.h	109;"	d
T_CE	src/term.h	105;"	d
T_CEI	src/term.h	158;"	d
T_CIE	src/term.h	152;"	d
T_CIS	src/term.h	151;"	d
T_CL	src/term.h	112;"	d
T_CM	src/term.h	132;"	d
T_CRI	src/term.h	134;"	d
T_CRV	src/term.h	159;"	d
T_CS	src/term.h	110;"	d
T_CSB	src/term.h	144;"	d
T_CSF	src/term.h	143;"	d
T_CSI	src/term.h	157;"	d
T_CSV	src/term.h	111;"	d
T_CWP	src/term.h	155;"	d
T_CWS	src/term.h	156;"	d
T_CZH	src/term.h	125;"	d
T_CZR	src/term.h	126;"	d
T_DA	src/term.h	115;"	d
T_DB	src/term.h	116;"	d
T_DL	src/term.h	108;"	d
T_FS	src/term.h	154;"	d
T_KE	src/term.h	137;"	d
T_KS	src/term.h	136;"	d
T_LE	src/term.h	149;"	d
T_MB	src/term.h	146;"	d
T_MD	src/term.h	122;"	d
T_ME	src/term.h	120;"	d
T_MR	src/term.h	121;"	d
T_MS	src/term.h	131;"	d
T_NAME	src/term.h	104;"	d
T_ND	src/term.h	150;"	d
T_OP	src/term.h	160;"	d
T_SE	src/term.h	123;"	d
T_SO	src/term.h	124;"	d
T_SR	src/term.h	133;"	d
T_TE	src/term.h	139;"	d
T_TI	src/term.h	138;"	d
T_TS	src/term.h	153;"	d
T_UCE	src/term.h	129;"	d
T_UCS	src/term.h	130;"	d
T_UE	src/term.h	127;"	d
T_US	src/term.h	128;"	d
T_UT	src/term.h	114;"	d
T_VB	src/term.h	135;"	d
T_VE	src/term.h	118;"	d
T_VI	src/term.h	117;"	d
T_VS	src/term.h	119;"	d
T_XS	src/term.h	145;"	d
Tab	runtime/ftplugin/cobol.vim	/^function! s:Tab()$/;"	f
TabPageIdxs	src/globals.h	/^EXTERN short	*TabPageIdxs INIT(= NULL);$/;"	v
Tag	runtime/ftplugin/pdf.vim	/^function! s:Tag()$/;"	f
Tag2item	runtime/autoload/ccomplete.vim	/^function! s:Tag2item(val)$/;"	f
TagFiles	runtime/menu.vim	/^fun! s:TagFiles()$/;"	f
Tagcmd2extra	runtime/autoload/ccomplete.vim	/^function! s:Tagcmd2extra(cmd, name, fname)$/;"	f
Tagline2item	runtime/autoload/ccomplete.vim	/^function! s:Tagline2item(val, brackets)$/;"	f
TarBrowseSelect	runtime/autoload/tar.vim	/^fun! s:TarBrowseSelect()$/;"	f
TcshGetIndent	runtime/indent/tcsh.vim	/^function TcshGetIndent()$/;"	f
Test.String	runtime/macros/shellmenu.vim	/^imenu Test.String is empty [ x = "x$" ]hhi$/;"	m
Test.String	runtime/macros/shellmenu.vim	/^imenu Test.String is not empty [ x != "x$" ]hhi$/;"	m
Test.Strings	runtime/macros/shellmenu.vim	/^imenu Test.Strings is equal [ "" = "" ]hhhhhhhi$/;"	m
Test.Strings	runtime/macros/shellmenu.vim	/^imenu Test.Strings is not equal [ "" != "" ]hhhhhhhhi$/;"	m
Test.Values	runtime/macros/shellmenu.vim	/^imenu Test.Values is equal [  -eq  ]hhhhhhi$/;"	m
Test.Values	runtime/macros/shellmenu.vim	/^imenu Test.Values is greater equal [  -ge  ]hhhhhhi$/;"	m
Test.Values	runtime/macros/shellmenu.vim	/^imenu Test.Values is greater than [  -gt  ]hhhhhhi$/;"	m
Test.Values	runtime/macros/shellmenu.vim	/^imenu Test.Values is less equal [  -le  ]hhhhhhi$/;"	m
Test.Values	runtime/macros/shellmenu.vim	/^imenu Test.Values is less than [  -lt  ]hhhhhhi$/;"	m
Test.Values	runtime/macros/shellmenu.vim	/^imenu Test.Values is not equal [  -ne  ]hhhhhhi$/;"	m
Test.existence	[	runtime/macros/shellmenu.vim	/^imenu Test.existence	[ -e  ]hi$/;"	m
Test.existence	runtime/macros/shellmenu.vim	/^imenu Test.existence - directory	[ -d  ]hi$/;"	m
Test.existence	runtime/macros/shellmenu.vim	/^imenu Test.existence - executable	[ -x  ]hi$/;"	m
Test.existence	runtime/macros/shellmenu.vim	/^imenu Test.existence - file		[ -f  ]hi$/;"	m
Test.existence	runtime/macros/shellmenu.vim	/^imenu Test.existence - file (not empty)	[ -s  ]hi$/;"	m
Test.existence	runtime/macros/shellmenu.vim	/^imenu Test.existence - readable	[ -r  ]hi$/;"	m
Test.existence	runtime/macros/shellmenu.vim	/^imenu Test.existence - writable	[ -w  ]hi$/;"	m
TestFiletypeFuncs	runtime/filetype.vim	/^func! TestFiletypeFuncs(testlist)$/;"	f
TexNewMathZone	runtime/syntax/tex.vim	/^ fun! TexNewMathZone(sfx,mathzone,starform)$/;"	f
Texplore	runtime/plugin/netrwPlugin.vim	/^com! -nargs=* -bar       -count=0 -complete=dir	Texplore	call netrw#Explore(<count>,0,6        ,<q-args>)$/;"	c
TextData	src/gui_at_fs.c	/^} TextData;$/;"	t	typeref:struct:__anon116	file:
TextWidth	runtime/menu.vim	/^fun! s:TextWidth()$/;"	f
TheBufferList	src/if_python.c	/^static BufListObject TheBufferList =$/;"	v	file:
TheBufferList	src/if_python3.c	/^static BufListObject TheBufferList =$/;"	v	file:
TheCurrent	src/if_python.c	/^static CurrentObject TheCurrent =$/;"	v	file:
TheCurrent	src/if_python3.c	/^static CurrentObject TheCurrent =$/;"	v	file:
TheWindowList	src/if_python.c	/^static WinListObject TheWindowList =$/;"	v	file:
TheWindowList	src/if_python3.c	/^static WinListObject TheWindowList =$/;"	v	file:
Throw	src/testdir/test49.vim	/^    function! Throw()$/;"	f
ThrowOnError	src/testdir/test49.vim	/^    function! ThrowOnError()$/;"	f
ThrowOnInterrupt	src/testdir/test49.vim	/^    function! ThrowOnInterrupt()$/;"	f
Thunk_Info	src/if_mzsch.c	/^} Thunk_Info;$/;"	t	typeref:struct:__anon28	file:
ToggleGuiOption	runtime/menu.vim	/^fun! s:ToggleGuiOption(option)$/;"	f
ToolBar.Paste		<C-R>+	runtime/menu.vim	/^  cnoremenu	 ToolBar.Paste		<C-R>+$/;"	m
ToolBar.Print		:hardcopy<CR>	runtime/menu.vim	/^    vnoremenu ToolBar.Print		:hardcopy<CR>$/;"	m
ToolBar.Print		:w	runtime/menu.vim	/^    vnoremenu ToolBar.Print		:w !lpr<CR>$/;"	m
ToolBar.Replace		y:promptrepl	runtime/menu.vim	/^    vnoremenu ToolBar.Replace		y:promptrepl <C-R>=<SID>FixFText()<CR><CR>$/;"	m
Trace	src/os_mswin.c	/^Trace($/;"	f	signature:( char *pszFormat, ...)
Trace	src/os_win16.h	/^Trace(char *pszFormat, ...);$/;"	p	signature:(char *pszFormat, ...)
Trace	src/os_win32.h	/^Trace(char *pszFormat, ...);$/;"	p	signature:(char *pszFormat, ...)
TrackUserActivity	src/gui_w32.c	/^TrackUserActivity(UINT uMsg)$/;"	f	file:	signature:(UINT uMsg)
TrackUserActivity	src/gui_w48.c	/^static void TrackUserActivity __ARGS((UINT uMsg));$/;"	p	file:	signature:(UINT uMsg)
TreeListMove	runtime/autoload/netrw.vim	/^fun! s:TreeListMove(dir)$/;"	f
TtyProto	src/pty.c	/^static char TtyProto[] = "\/dev\/pty\/ttyXY";$/;"	v	file:
TtyProto	src/pty.c	/^static char TtyProto[] = "\/dev\/tt\/XY";$/;"	v	file:
TtyProto	src/pty.c	/^static char TtyProto[] = "\/dev\/ttyXY";$/;"	v	file:
U	runtime/macros/hanoi/hanoi.vim	/^map U L$/;"	m
UB_CRYPT	src/memline.c	/^    , UB_CRYPT		\/* update crypt key *\/$/;"	e	enum:__anon30	file:
UB_FNAME	src/memline.c	/^      UB_FNAME = 0	\/* update timestamp and filename *\/$/;"	e	enum:__anon30	file:
UB_SAME_DIR	src/memline.c	/^    , UB_SAME_DIR       \/* update the B0_SAME_DIR flag *\/$/;"	e	enum:__anon30	file:
UCHARAT	src/regexp.c	324;"	d	file:
UC_BUFFER	src/ex_docmd.c	38;"	d	file:
UE_MAGIC	src/undo.c	82;"	d	file:
UF2HIKEY	src/eval.c	221;"	d	file:
UF_ENTRY_END_MAGIC	src/undo.c	702;"	d	file:
UF_ENTRY_MAGIC	src/undo.c	701;"	d	file:
UF_HEADER_END_MAGIC	src/undo.c	700;"	d	file:
UF_HEADER_MAGIC	src/undo.c	699;"	d	file:
UF_LAST_SAVE_NR	src/undo.c	707;"	d	file:
UF_START_MAGIC	src/undo.c	697;"	d	file:
UF_START_MAGIC_LEN	src/undo.c	698;"	d	file:
UF_VERSION	src/undo.c	703;"	d	file:
UF_VERSION_CRYPT	src/undo.c	704;"	d	file:
UHP_SAVE_NR	src/undo.c	710;"	d	file:
UH_CHANGED	src/structs.h	342;"	d
UH_EMPTYBUF	src/structs.h	343;"	d
UH_MAGIC	src/undo.c	81;"	d	file:
UINT	src/gui_w48.c	/^typedef int UINT;$/;"	t	file:
UINT	src/os_mswin.c	/^typedef int UINT;$/;"	t	file:
UINT32_T	src/os_vms_conf.h	54;"	d
UINT32_T	src/vim.h	/^typedef UINT32_TYPEDEF UINT32_T;$/;"	t
UINT32_TYPEDEF	src/vim.h	55;"	d
UINT32_TYPEDEF	src/vim.h	60;"	d
UINT_PTR	src/GvimExt/gvimext.h	48;"	d
UINT_PTR	src/GvimExt/gvimext.h	49;"	d
UINT_PTR	src/gui_w32.c	189;"	d	file:
UINT_PTR	src/gui_w32.c	190;"	d	file:
UINT_PTR	src/if_ole.cpp	40;"	d	file:
UINT_PTR	src/if_ole.cpp	41;"	d	file:
UNDO_HASH_SIZE	src/vim.h	1448;"	d
UNHIGHLIGHTT	src/gui_xmebw.c	36;"	d	file:
UNIX	src/auto/config.h	38;"	d
UNIX	src/os_os2_cfg.h	47;"	d
UNIX	src/vim.h	95;"	d
UNKNOWN	src/fileio.c	267;"	d	file:
UNKNOWN_CREATOR	src/os_mac.h	301;"	d
UNUSED	src/vim.h	288;"	d
UNUSED_COLOUR	src/gui_riscos.c	66;"	d	file:
UP	src/term.c	/^char *UP, *BC, PC;$/;"	v
UP	src/termlib.c	/^char	*UP = 0, *BC = 0;     \/* Pointers to UP and BC strings from database *\/$/;"	v
UPCASE	src/os_msdos.c	2138;"	d	file:
UPDATE_KEYS_ZIP	src/misc2.c	3756;"	d	file:
UPPER	src/regexp.c	198;"	d	file:
UP_BC_PC_EXTERN	src/os_mac.h	261;"	d
UP_BC_PC_EXTERN	src/os_os2_cfg.h	39;"	d
URL_BACKSLASH	src/window.c	76;"	d	file:
URL_SLASH	src/window.c	75;"	d	file:
USAGE	runtime/tools/ccfilter.c	/^const char USAGE[] =$/;"	v
USAGE	runtime/tools/shtags.pl	/^USAGE: $program [-kvwVx] [-t <file>] <files>$/;"	l
USEBCOPY	src/os_os2_cfg.h	56;"	d
USECTRLV	src/ex_cmds.h	47;"	d
USEDLL	src/GvimExt/Make_bc5.mak	/^USEDLL = no$/;"	m
USEDLL	src/Make_bc5.mak	/^USEDLL = no$/;"	m
USEDLL	src/xxd/Make_cyg.mak	/^USEDLL = no$/;"	m
USEMAN_S	src/auto/config.h	64;"	d
USEMEMCPY	src/os_os2_cfg.h	58;"	d
USEMEMMOVE	src/auto/config.h	60;"	d
USEMEMMOVE	src/os_os2_cfg.h	57;"	d
USEMEMMOVE	src/os_vms_conf.h	29;"	d
USER_CMD	src/ex_docmd.c	42;"	d	file:
USER_CMDIDX	src/ex_cmds.h	1144;"	d
USER_CMD_GA	src/ex_docmd.c	43;"	d	file:
USER_HIGHLIGHT	src/globals.h	357;"	d
USE_AEVENT	src/gui_mac.c	41;"	d	file:
USE_AEVENT	src/gui_mac.c	46;"	d	file:
USE_ATSUI_DRAWING	src/gui_mac.c	169;"	d	file:
USE_CARBONIZED	src/gui_mac.c	40;"	d	file:
USE_CARBONKEYHANDLER	src/gui_mac.c	61;"	d	file:
USE_CMD_KEY	src/os_mac.h	68;"	d
USE_CR	src/os_mac.h	98;"	d
USE_CRNL	src/os_dos.h	123;"	d
USE_CRNL	src/os_os2_cfg.h	8;"	d
USE_DLOPEN	src/feature.h	725;"	d
USE_EXE_NAME	src/os_mac.h	85;"	d
USE_EXE_NAME	src/os_msdos.h	16;"	d
USE_EXE_NAME	src/os_os2_cfg.h	10;"	d
USE_EXE_NAME	src/os_win16.h	16;"	d
USE_EXE_NAME	src/os_win32.h	25;"	d
USE_FILE_CHOOSER	src/gui_gtk.c	776;"	d	file:
USE_FNAME_CASE	src/os_amiga.h	15;"	d
USE_FNAME_CASE	src/os_mac.h	93;"	d
USE_FNAME_CASE	src/os_msdos.h	22;"	d
USE_FNAME_CASE	src/os_unix.h	45;"	d
USE_FNAME_CASE	src/os_win32.h	70;"	d
USE_FONTSET	src/os_vms_conf.h	189;"	d
USE_FOPEN_NOINH	src/ex_cmds2.c	2877;"	d	file:
USE_FSTATFS	src/memfile.c	129;"	d	file:
USE_GETCWD	src/os_unix.h	81;"	d
USE_GETCWD	src/os_vms_conf.h	7;"	d
USE_ICONV	src/feature.h	673;"	d
USE_IM_CONTROL	src/vim.h	548;"	d
USE_INPUT_BUF	src/vim.h	1640;"	d
USE_LONG_FNAME	src/os_msdos.h	21;"	d
USE_MCH_ACCESS	src/fileio.c	50;"	d	file:
USE_MCH_ERRMSG	src/vim.h	1931;"	d
USE_NL	src/screen.c	8911;"	d	file:
USE_OFFSETED_WINDOW	src/gui_mac.c	42;"	d	file:
USE_ON_FLY_SCROLL	src/gui.h	79;"	d
USE_PANEL_GROUP	src/gui_photon.c	44;"	d	file:
USE_REDRAW	src/screen.c	8913;"	d	file:
USE_START_TV	src/os_unix.c	4797;"	d	file:
USE_SYSMENU_FONT	src/gui_w32.c	297;"	d	file:
USE_SYSTEM	src/os_beos.h	14;"	d
USE_SYSTEM	src/os_vms_conf.h	8;"	d
USE_TCL_STUBS	src/if_tcl.c	73;"	d	file:
USE_TERM_CONSOLE	src/os_amiga.h	16;"	d
USE_TERM_CONSOLE	src/os_beos.h	16;"	d
USE_TERM_CONSOLE	src/os_msdos.h	18;"	d
USE_TERM_CONSOLE	src/os_os2_cfg.h	11;"	d
USE_TERM_CONSOLE	src/os_riscos.h	22;"	d
USE_TERM_CONSOLE	src/os_win16.h	18;"	d
USE_TERM_CONSOLE	src/os_win32.h	27;"	d
USE_THREAD_FOR_INPUT_WITH_TIMEOUT	src/os_beos.h	15;"	d
USE_TMPNAM	src/os_amiga.h	80;"	d
USE_TMPNAM	src/os_mac.h	108;"	d
USE_TMPNAM	src/os_qnx.h	13;"	d
USE_TMPNAM	src/os_win16.h	25;"	d
USE_T_AL	src/screen.c	8907;"	d	file:
USE_T_CAL	src/screen.c	8905;"	d	file:
USE_T_CD	src/screen.c	8912;"	d	file:
USE_T_CDL	src/screen.c	8906;"	d	file:
USE_T_CE	src/screen.c	8908;"	d	file:
USE_T_DL	src/screen.c	8909;"	d	file:
USE_T_SR	src/screen.c	8910;"	d	file:
USE_UNIXFILENAME	src/os_mac.h	75;"	d
USE_UTF8LOOKUP	src/gui_x11.c	758;"	d	file:
USE_UTF8_STRING	src/os_unix.c	1870;"	d	file:
USE_VIMPTY_GETENV	src/os_mac.h	249;"	d
USE_X11R6_XIM	src/mbyte.c	5227;"	d	file:
USE_XIM	src/feature.h	688;"	d
USE_XSMP	src/feature.h	1035;"	d
USE_XSMP_INTERACT	src/auto/config.h	431;"	d
USE_XSMP_INTERACT	src/feature.h	1038;"	d
USR_EXRC_FILE	src/os_amiga.h	140;"	d
USR_EXRC_FILE	src/os_dos.h	30;"	d
USR_EXRC_FILE	src/os_mac.h	154;"	d
USR_EXRC_FILE	src/os_riscos.h	96;"	d
USR_EXRC_FILE	src/os_unix.h	273;"	d
USR_EXRC_FILE	src/os_unix.h	275;"	d
USR_EXRC_FILE2	src/os_amiga.h	143;"	d
USR_EXRC_FILE2	src/os_dos.h	33;"	d
USR_EXRC_FILE2	src/os_unix.h	280;"	d
USR_EXRC_FILE2	src/os_unix.h	283;"	d
USR_GVIMRC_FILE	src/os_amiga.h	160;"	d
USR_GVIMRC_FILE	src/os_dos.h	41;"	d
USR_GVIMRC_FILE	src/os_mac.h	143;"	d
USR_GVIMRC_FILE	src/os_riscos.h	93;"	d
USR_GVIMRC_FILE	src/os_unix.h	303;"	d
USR_GVIMRC_FILE	src/os_unix.h	305;"	d
USR_GVIMRC_FILE2	src/os_amiga.h	163;"	d
USR_GVIMRC_FILE2	src/os_dos.h	44;"	d
USR_GVIMRC_FILE2	src/os_unix.h	311;"	d
USR_GVIMRC_FILE3	src/os_amiga.h	166;"	d
USR_VIMRC_FILE	src/os_amiga.h	147;"	d
USR_VIMRC_FILE	src/os_dos.h	20;"	d
USR_VIMRC_FILE	src/os_mac.h	150;"	d
USR_VIMRC_FILE	src/os_riscos.h	84;"	d
USR_VIMRC_FILE	src/os_riscos.h	90;"	d
USR_VIMRC_FILE	src/os_unix.h	288;"	d
USR_VIMRC_FILE	src/os_unix.h	290;"	d
USR_VIMRC_FILE2	src/os_amiga.h	150;"	d
USR_VIMRC_FILE2	src/os_dos.h	23;"	d
USR_VIMRC_FILE2	src/os_unix.h	295;"	d
USR_VIMRC_FILE2	src/os_unix.h	298;"	d
USR_VIMRC_FILE3	src/os_amiga.h	153;"	d
UTF_COMPOSINGLIKE	src/macros.h	243;"	d
UTF_COMPOSINGLIKE	src/macros.h	245;"	d
UWAGA	runtime/tutor/tutor.pl	/^	 UWAGA:$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^  UWAGA: Litera  d  pojawi siê na dole ekranu. Vim czeka na wpisanie  w .$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^  UWAGA: Przeczytaj ca³± lekcjê zanim wykonasz jakie¶ polecenia!!!$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^UWAGA:  Mno¿nik pomiêdzy operatorem  d  i ruchem dzia³a podobnie do ruchu bez$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^UWAGA:  Mo¿esz u¿ywaæ <BS> aby poprawiaæ b³êdy w czasie pisania.$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^UWAGA: :q!<ENTER> porzuca wszelkie zmiany jakie zrobi³e¶. W nastêpnych$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^UWAGA: Mo¿esz te¿ wczytaæ wyj¶cie zewnêtrznego polecenia. Na przyk³ad$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^UWAGA: Mo¿esz te¿ zobaczyæ pozycjê kursora w prawym, dolnym rogu ekranu.$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^UWAGA: Pamiêtaj, by uczyæ siê æwicz±c, a nie pamiêciowo.$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^UWAGA: Po wykonaniu kroku 2. zobaczysz tekst z Lekcji 5.3. Potem przejd¼$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^UWAGA: Tryb Replace jest jak tryb Insert, ale ka¿dy znak usuwa istniej±cy$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^UWAGA: Ucz siê przez æwiczenie, nie wkuwanie.$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^UWAGA: Uzupe³nianie dzia³a dla wielu poleceñ. Spróbuj wcisn±æ CTRL-D i <TAB>.$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^UWAGA: Wci¶niêcie  v  zaczyna tryb Wizualny. Mo¿esz poruszaæ kursorem, by$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^UWAGA: Wci¶niêcie <ESC> przeniesie Ciê z powrotem do trybu Normal$/;"	l
UWAGA	runtime/tutor/tutor.pl	/^UWAGA: Wpisanie tylko ruchu w trybie Normal bez operatora przeniesie kursor$/;"	l
U_ALLOC_LINE	src/undo.c	118;"	d	file:
UnRegisterTypeLib	src/if_ole.cpp	/^WINOLEAUTAPI UnRegisterTypeLib(REFGUID libID, WORD wVerMajor,$/;"	p	file:	signature:(REFGUID libID, WORD wVerMajor, WORD wVerMinor, LCID lcid, SYSKIND syskind)
UnadviseFromEvents	src/VisVim/Commands.cpp	/^void CCommands::UnadviseFromEvents()$/;"	f	class:CCommands	signature:()
UnadviseFromEvents	src/VisVim/Commands.h	/^	void UnadviseFromEvents ();$/;"	p	class:CCommands	access:public	signature:()
Unfinalise	runtime/ftplugin/debchangelog.vim	/^function Unfinalise()$/;"	f
UnfinaliseMenu	runtime/ftplugin/debchangelog.vim	/^function <SID>UnfinaliseMenu()$/;"	f
UniChar	src/os_mac_conv.c	/^typedef int UniChar;$/;"	t	file:
UninitOLE	src/if_ole.cpp	/^extern "C" void UninitOLE()$/;"	f	signature:()
UnregisterMe	src/if_ole.cpp	/^extern "C" void UnregisterMe(int bNotifyUser)$/;"	f	signature:(int bNotifyUser)
Update	runtime/optwin.vim	/^fun! <SID>Update(lnum, line, local, thiswin)$/;"	f
UpdateBuffersMenu	runtime/autoload/netrw.vim	/^fun! s:UpdateBuffersMenu()$/;"	f
Urgency	runtime/ftplugin/debchangelog.vim	/^function Urgency(urg)$/;"	f
Usage	runtime/tools/efm_perl.pl	/^Usage:$/;"	l
UseBufWinVars	runtime/autoload/netrw.vim	/^fun! s:UseBufWinVars()$/;"	f
UseVimball	runtime/plugin/vimballPlugin.vim	/^com! -na=? -complete=dir  UseVimball			call vimball#Vimball(1,<f-args>)$/;"	c
Uwaga	runtime/tutor/tutor.pl	/^Uwaga:  'b³ond' to nie jest metoda, by przeliterowaæ b³±d; 'b³ond' to b³±d.$/;"	l
Uwaga	runtime/tutor/tutor.pl	/^Uwaga:  Kiedy szukanie osi±gnie koniec pliku, bêdzie kontynuowane od pocz±tku$/;"	l
Uwaga	runtime/tutor/tutor.pl	/^Uwaga:  W ten sposób mo¿na wykonaæ wszystkie polecenia pow³oki.$/;"	l
Uwaga	runtime/tutor/tutor.pl	/^Uwaga:  Wszystkie polecenia  :  musz± byæ zakoñczone <ENTER>.$/;"	l
Uwaga	runtime/tutor/tutor.pl	/^Uwaga:  a ,  i  oraz  A  prowadz± do trybu Insert, jedyn± ró¿nic± jest miejsce,$/;"	l
Uwaga	runtime/tutor/tutor.pl	/^Uwaga: Aby ignorowaæ wielko¶æ liter dla jednego wyszukiwania: \/ignore\\c<ENTER>$/;"	l
Uwaga	runtime/tutor/tutor.pl	/^Uwaga: Aby usun±æ pod¶wietlanie dopasowañ, wpisz:   :nohlsearch$/;"	l
Uwaga	runtime/tutor/tutor.pl	/^Uwaga: Je¶li nie jeste¶ pewien czego¶ co wpisa³e¶, wci¶nij <ESC>, by wróciæ do$/;"	l
Uwaga	runtime/tutor/tutor.pl	/^Uwaga: Klawisze kursora tak¿e powinny dzia³aæ, ale u¿ywaj±c  hjkl  bêdziesz$/;"	l
Uwaga	runtime/tutor/tutor.pl	/^Uwaga: Ta funkcja jest bardzo u¿yteczna w debuggowaniu programu$/;"	l
Uwaga	runtime/tutor/tutor.pl	/^Uwaga: Zauwa¿, ¿e gdyby¶ teraz wyszed³ z Vima, a nastêpnie wszed³ ponownie$/;"	l
Uwaga	runtime/tutor/tutor.pl	/^Uwaga: mo¿esz u¿yæ  y  jako operatora;  yw  kopiuje jeden wyraz.$/;"	l
V	runtime/macros/hanoi/hanoi.vim	/^map V Go\/$/;"	m
V	runtime/macros/life/life.vim	/^map V R$/;"	m
V0	src/testdir/test49.vim	/^let V0 = 1$/;"	v
VALID	src/vim.h	610;"	d
VALID_BOTLINE	src/vim.h	643;"	d
VALID_BOTLINE_AP	src/vim.h	644;"	d
VALID_CHEIGHT	src/vim.h	641;"	d
VALID_CROW	src/vim.h	642;"	d
VALID_HEAD	src/vim.h	1787;"	d
VALID_PATH	src/vim.h	1786;"	d
VALID_STATE	src/syntax.c	346;"	d	file:
VALID_TOPLINE	src/vim.h	645;"	d
VALID_VIRTCOL	src/vim.h	640;"	d
VALID_WCOL	src/vim.h	639;"	d
VALID_WROW	src/vim.h	638;"	d
VALUE	src/if_ruby.c	110;"	d	file:
VARNAME_SIZE	src/if_tcl.c	98;"	d	file:
VAR_CURBUF	src/if_tcl.c	93;"	d	file:
VAR_CURLINE	src/if_tcl.c	96;"	d	file:
VAR_CURLNUM	src/if_tcl.c	97;"	d	file:
VAR_CURWIN	src/if_tcl.c	94;"	d	file:
VAR_DICT	src/structs.h	1082;"	d
VAR_FIXED	src/structs.h	1087;"	d
VAR_FLAVOUR_DEFAULT	src/eval.c	/^    VAR_FLAVOUR_DEFAULT,	\/* doesn't start with uppercase *\/$/;"	e	enum:__anon144	file:
VAR_FLAVOUR_SESSION	src/eval.c	/^    VAR_FLAVOUR_SESSION,	\/* starts with uppercase, some lower *\/$/;"	e	enum:__anon144	file:
VAR_FLAVOUR_VIMINFO	src/eval.c	/^    VAR_FLAVOUR_VIMINFO		\/* all uppercase *\/$/;"	e	enum:__anon144	file:
VAR_FLOAT	src/structs.h	1083;"	d
VAR_FUNC	src/structs.h	1080;"	d
VAR_LBASE	src/if_tcl.c	95;"	d	file:
VAR_LIST	src/structs.h	1081;"	d
VAR_LOCKED	src/structs.h	1086;"	d
VAR_NUMBER	src/structs.h	1078;"	d
VAR_RANGE1	src/if_tcl.c	90;"	d	file:
VAR_RANGE2	src/if_tcl.c	91;"	d	file:
VAR_RANGE3	src/if_tcl.c	92;"	d	file:
VAR_SHORT_LEN	src/eval.c	229;"	d	file:
VAR_STRING	src/structs.h	1079;"	d
VAR_UNKNOWN	src/structs.h	1077;"	d
VAR_WIN	src/option.c	266;"	d	file:
VCOL_HLC	src/screen.c	2827;"	d	file:
VC_EXTRALEAN	src/VisVim/StdAfx.h	9;"	d
VDOT	Makefile	/^VDOT	= $(MAJOR).$(MINOR)$/;"	m
VERIFY_OK	src/VisVim/StdAfx.h	48;"	d
VERIFY_OK	src/VisVim/StdAfx.h	66;"	d
VERSION	Makefile	/^VERSION = $(MAJOR)$(MINOR)$/;"	m
VERSION	runtime/tools/efm_perl.pl	/^use constant VERSION => 0.2;$/;"	c
VERSION	src/Makefile	/^VERSION = $(VIMMAJOR).$(VIMMINOR)$/;"	m
VER_PLATFORM_WIN32_WINDOWS	src/GvimExt/gvimext.cpp	797;"	d	file:
VER_PLATFORM_WIN32_WINDOWS	src/dosinst.h	143;"	d
VER_PLATFORM_WIN32_WINDOWS	src/os_win32.c	379;"	d	file:
VE_ALL	src/option.h	853;"	d
VE_BLOCK	src/option.h	851;"	d
VE_INSERT	src/option.h	852;"	d
VE_ONEMORE	src/option.h	854;"	d
VGR_GLOBAL	src/vim.h	2166;"	d
VGR_NOJUMP	src/vim.h	2167;"	d
VIEWNAME	src/auto/config.mk	/^VIEWNAME	= view$/;"	m
VIEWTARGET	src/Makefile	/^VIEWTARGET	= $(VIEWNAME)$(LNKEXT)$/;"	m
VIF_FORCEIT	src/vim.h	2182;"	d
VIF_GET_OLDFILES	src/vim.h	2183;"	d
VIF_WANT_INFO	src/vim.h	2180;"	d
VIF_WANT_MARKS	src/vim.h	2181;"	d
VIM	Makefile	/^VIM	= vim$/;"	m
VIM	src/Make_ivc.mak	/^VIM=gvim$/;"	m
VIM	src/Make_ivc.mak	/^VIM=gvimd$/;"	m
VIM	src/Make_ivc.mak	/^VIM=vim$/;"	m
VIM	src/Make_ivc.mak	/^VIM=vimd$/;"	m
VIM	src/Make_mvc.mak	/^VIM = g$(VIM)$/;"	m
VIM	src/Make_mvc.mak	/^VIM = vim$/;"	m
VIM	src/Make_mvc.mak	/^VIM = vimd$/;"	m
VIM	src/po/Makefile	/^VIM = ..\/vim$/;"	m
VIMDIFFNAME	src/Makefile	/^VIMDIFFNAME	= $(VIMNAME)diff$/;"	m
VIMDIFFTARGET	src/Makefile	/^VIMDIFFTARGET	= $(VIMDIFFNAME)$(LNKEXT)$/;"	m
VIMDIR	src/Makefile	/^VIMDIR = \/vim$/;"	m
VIMENC_ATOM_NAME	src/vim.h	1853;"	d
VIMERR	src/if_tcl.c	107;"	d	file:
VIMEXE	runtime/doc/Makefile	/^VIMEXE = vim$/;"	m
VIMINFO_FILE	src/os_amiga.h	171;"	d
VIMINFO_FILE	src/os_dos.h	57;"	d
VIMINFO_FILE	src/os_mac.h	194;"	d
VIMINFO_FILE	src/os_riscos.h	68;"	d
VIMINFO_FILE	src/os_unix.h	322;"	d
VIMINFO_FILE	src/os_unix.h	324;"	d
VIMINFO_FILE2	src/os_dos.h	60;"	d
VIMINFO_FILE2	src/os_riscos.h	71;"	d
VIMINFO_FILE2	src/os_unix.h	328;"	d
VIMINFO_FILE2	src/os_unix.h	331;"	d
VIMLOC	src/Makefile	/^VIMLOC		= $(DATADIR)$(VIMDIR)$/;"	m
VIMMAJOR	src/Makefile	/^VIMMAJOR = 7$/;"	m
VIMMINOR	src/Makefile	/^VIMMINOR = 3$/;"	m
VIMNAME	src/auto/config.mk	/^VIMNAME		= vim$/;"	m
VIMOUT	src/if_tcl.c	106;"	d	file:
VIMPACKAGE	src/GvimExt/gvimext.cpp	133;"	d	file:
VIMPACKAGE	src/vim.h	233;"	d
VIMPROG	src/testdir/Make_amiga.mak	/^VIMPROG = \/vim$/;"	m
VIMPROG	src/testdir/Make_dos.mak	/^VIMPROG = ..\\\\vim$/;"	m
VIMPROG	src/testdir/Make_ming.mak	/^VIMPROG = ..$(DIRSLASH)vim$/;"	m
VIMPROG	src/testdir/Make_os2.mak	/^VIMPROG = ..\/vim.exe$/;"	m
VIMPROG	src/testdir/Makefile	/^VIMPROG = ..\/vim$/;"	m
VIMRCLOC	src/Makefile	/^VIMRCLOC	= $(VIMLOC)$/;"	m
VIMRC_FILE	src/os_amiga.h	180;"	d
VIMRC_FILE	src/os_dos.h	65;"	d
VIMRC_FILE	src/os_mac.h	158;"	d
VIMRC_FILE	src/os_riscos.h	75;"	d
VIMRC_FILE	src/os_unix.h	340;"	d
VIMRTDIR	Makefile	/^VIMRTDIR = vim$(VERSION)$/;"	m
VIMRTDIR	src/Makefile	/^VIMRTDIR = \/vim$(VIMMAJOR)$(VIMMINOR)$/;"	m
VIMRTLOC	src/Makefile	/^VIMRTLOC	= $(DATADIR)$(VIMDIR)$(VIMRTDIR)$/;"	m
VIMRUNTIME	src/po/Make_cyg.mak	/^VIMRUNTIME = ..\/..\/runtime$/;"	m
VIMSCRAPFLAVOR	src/gui_mac.c	50;"	d	file:
VIMSCRIPTMOD	src/Makefile	/^VIMSCRIPTMOD = 644$/;"	m
VIMSPELLMAGIC	src/spell.c	541;"	d	file:
VIMSPELLMAGICL	src/spell.c	542;"	d	file:
VIMSPELLVERSION	src/spell.c	543;"	d	file:
VIMSUGMAGIC	src/spell.c	545;"	d	file:
VIMSUGMAGICL	src/spell.c	546;"	d	file:
VIMSUGVERSION	src/spell.c	547;"	d	file:
VIMTARGET	src/Makefile	/^VIMTARGET	= $(VIMNAME)$(EXEEXT)$/;"	m
VIMVER	Makefile	/^VIMVER	= vim-$(MAJOR).$(MINOR)$/;"	m
VIM_ALL	src/vim.h	1138;"	d
VIM_ATOM_NAME	src/vim.h	1852;"	d
VIM_BACKTICK	src/feature.h	210;"	d
VIM_CANCEL	src/vim.h	1137;"	d
VIM_CLASS	src/gui_w16.c	56;"	d	file:
VIM_CLASS	src/gui_w32.c	301;"	d	file:
VIM_CLASS	src/gui_x11.c	58;"	d	file:
VIM_CLASSNAME	src/os_mswin.c	2515;"	d	file:
VIM_CLASSNAME_LEN	src/os_mswin.c	2516;"	d	file:
VIM_CLASSW	src/gui_w32.c	302;"	d	file:
VIM_DEFAULT	src/option.c	412;"	d	file:
VIM_DISCARDALL	src/vim.h	1139;"	d
VIM_ERROR	src/vim.h	1126;"	d
VIM_GENERIC	src/vim.h	1125;"	d
VIM_INFO	src/vim.h	1128;"	d
VIM_ISDIGIT	src/macros.h	120;"	d
VIM_LAST_TYPE	src/vim.h	1130;"	d
VIM_LC_MESSAGES	src/ex_cmds2.c	4061;"	d	file:
VIM_MEMCMP	src/vim.h	1634;"	d
VIM_MEMMOVE	src/os_unix.h	474;"	d
VIM_NAME	src/gui_w16.c	55;"	d	file:
VIM_NAME	src/gui_w32.c	300;"	d	file:
VIM_NAME	src/gui_x11.c	57;"	d	file:
VIM_NO	src/vim.h	1136;"	d
VIM_QUESTION	src/vim.h	1129;"	d
VIM_STARTMENU	src/dosinst.h	94;"	d
VIM_VERSION_100	src/version.h	20;"	d
VIM_VERSION_BUILD	src/version.h	22;"	d
VIM_VERSION_BUILD_BCD	src/version.h	23;"	d
VIM_VERSION_BUILD_STR	src/version.h	24;"	d
VIM_VERSION_LONG	src/version.h	39;"	d
VIM_VERSION_LONG_DATE	src/version.h	40;"	d
VIM_VERSION_MAJOR	src/version.h	16;"	d
VIM_VERSION_MAJOR_STR	src/version.h	17;"	d
VIM_VERSION_MEDIUM	src/version.h	38;"	d
VIM_VERSION_MINOR	src/version.h	18;"	d
VIM_VERSION_MINOR_STR	src/version.h	19;"	d
VIM_VERSION_NODOT	src/version.h	36;"	d
VIM_VERSION_PATCHLEVEL	src/version.h	25;"	d
VIM_VERSION_PATCHLEVEL_STR	src/version.h	26;"	d
VIM_VERSION_RELEASE	src/version.h	28;"	d
VIM_VERSION_SHORT	src/version.h	37;"	d
VIM_WARNING	src/vim.h	1127;"	d
VIM_YES	src/vim.h	1135;"	d
VIM__H	src/vim.h	10;"	d
VISUAL	src/vim.h	672;"	d
VIS_SEL	src/getchar.c	5076;"	d	file:
VIS_SEL	src/getchar.c	5149;"	d	file:
VI_DEFAULT	src/option.c	411;"	d	file:
VIsual	src/globals.h	/^EXTERN pos_T	VIsual;		\/* start position of active Visual selection *\/$/;"	v
VIsual_active	src/globals.h	/^EXTERN int	VIsual_active INIT(= FALSE);$/;"	v
VIsual_mode	src/globals.h	/^EXTERN int	VIsual_mode INIT(= 'v');$/;"	v
VIsual_reselect	src/globals.h	/^EXTERN int	VIsual_reselect;$/;"	v
VIsual_select	src/globals.h	/^EXTERN int	VIsual_select INIT(= FALSE);$/;"	v
VMOUSEZ_CLASSNAME	src/gui_w32.c	523;"	d	file:
VMOUSEZ_TITLE	src/gui_w32.c	524;"	d	file:
VMSH_MOUSEWHEEL	src/gui_w32.c	525;"	d	file:
VMSH_SCROLL_LINES	src/gui_w32.c	526;"	d	file:
VMS_TEMPNAM	src/os_unix.h	414;"	d
VOID	src/gui_w48.c	/^typedef void VOID;$/;"	t	file:
VOID	src/os_mswin.c	/^typedef void VOID;$/;"	t	file:
VOID	src/os_win32.c	/^typedef void VOID;$/;"	t	file:
VREPLACE	src/vim.h	684;"	d
VREPLACE_FLAG	src/vim.h	683;"	d
VV_BEVAL_BUFNR	src/vim.h	1829;"	d
VV_BEVAL_COL	src/vim.h	1832;"	d
VV_BEVAL_LNUM	src/vim.h	1831;"	d
VV_BEVAL_TEXT	src/vim.h	1833;"	d
VV_BEVAL_WINNR	src/vim.h	1830;"	d
VV_CC_FROM	src/vim.h	1805;"	d
VV_CC_TO	src/vim.h	1806;"	d
VV_CHAR	src/vim.h	1838;"	d
VV_CMDARG	src/vim.h	1811;"	d
VV_CMDBANG	src/vim.h	1822;"	d
VV_COMPAT	src/eval.c	292;"	d	file:
VV_COUNT	src/vim.h	1790;"	d
VV_COUNT1	src/vim.h	1791;"	d
VV_CTYPE	src/vim.h	1804;"	d
VV_DYING	src/vim.h	1818;"	d
VV_ERRMSG	src/vim.h	1793;"	d
VV_EXCEPTION	src/vim.h	1819;"	d
VV_FCS_CHOICE	src/vim.h	1828;"	d
VV_FCS_REASON	src/vim.h	1827;"	d
VV_FNAME	src/vim.h	1801;"	d
VV_FNAME_DIFF	src/vim.h	1810;"	d
VV_FNAME_IN	src/vim.h	1807;"	d
VV_FNAME_NEW	src/vim.h	1809;"	d
VV_FNAME_OUT	src/vim.h	1808;"	d
VV_FOLDDASHES	src/vim.h	1814;"	d
VV_FOLDEND	src/vim.h	1813;"	d
VV_FOLDLEVEL	src/vim.h	1815;"	d
VV_FOLDSTART	src/vim.h	1812;"	d
VV_INSERTMODE	src/vim.h	1823;"	d
VV_KEY	src/vim.h	1825;"	d
VV_LANG	src/vim.h	1802;"	d
VV_LC_TIME	src/vim.h	1803;"	d
VV_LEN	src/vim.h	1845;"	d
VV_LNUM	src/vim.h	1799;"	d
VV_MOUSE_COL	src/vim.h	1841;"	d
VV_MOUSE_LNUM	src/vim.h	1840;"	d
VV_MOUSE_WIN	src/vim.h	1839;"	d
VV_NAME	src/eval.c	296;"	d	file:
VV_OLDFILES	src/vim.h	1844;"	d
VV_OP	src/vim.h	1842;"	d
VV_PREVCOUNT	src/vim.h	1792;"	d
VV_PROFILING	src/vim.h	1826;"	d
VV_PROGNAME	src/vim.h	1816;"	d
VV_REG	src/vim.h	1821;"	d
VV_RO	src/eval.c	293;"	d	file:
VV_RO_SBX	src/eval.c	294;"	d	file:
VV_SCROLLSTART	src/vim.h	1834;"	d
VV_SEARCHFORWARD	src/vim.h	1843;"	d
VV_SEND_SERVER	src/vim.h	1817;"	d
VV_SHELL_ERROR	src/vim.h	1796;"	d
VV_STATUSMSG	src/vim.h	1795;"	d
VV_SWAPCHOICE	src/vim.h	1836;"	d
VV_SWAPCOMMAND	src/vim.h	1837;"	d
VV_SWAPNAME	src/vim.h	1835;"	d
VV_TERMRESPONSE	src/vim.h	1800;"	d
VV_THIS_SESSION	src/vim.h	1797;"	d
VV_THROWPOINT	src/vim.h	1820;"	d
VV_VAL	src/vim.h	1824;"	d
VV_VERSION	src/vim.h	1798;"	d
VV_WARNINGMSG	src/vim.h	1794;"	d
VW_POS_CENTER	src/gui.h	/^    VW_POS_CENTER,$/;"	e	enum:__anon69
VW_POS_MOUSE	src/gui.h	/^    VW_POS_MOUSE,$/;"	e	enum:__anon69
VW_POS_TOP_CENTER	src/gui.h	/^    VW_POS_TOP_CENTER$/;"	e	enum:__anon69
VarNames	runtime/tools/pltags.pl	/^sub VarNames($)$/;"	s
VbGetIndent	runtime/indent/vb.vim	/^fun! VbGetIndent(lnum)$/;"	f
VbSearch	runtime/ftplugin/vb.vim	/^fun! <SID>VbSearch(pattern, flags)$/;"	f
VerbSense	src/integration.h	/^} VerbSense;$/;"	t	typeref:struct:__anon70
Version	src/version.c	/^char		*Version = VIM_VERSION_SHORT;$/;"	v
Vexplore	runtime/plugin/netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Vexplore	call netrw#Explore(<count>,1,4+<bang>0,<q-args>)$/;"	c
Vim	src/if_ole.h	/^typedef class Vim Vim;$/;"	t	typeref:class:Vim
Vim	src/if_ole.h	/^typedef struct Vim Vim;$/;"	t	typeref:struct:Vim
VimChangeDir	src/VisVim/Commands.cpp	/^static void VimChangeDir(COleAutomationControl& VimOle, DISPID DispatchId, BSTR& FileName)$/;"	f	file:	signature:(COleAutomationControl& VimOle, DISPID DispatchId, BSTR& FileName)
VimChangeDir	src/VisVim/Commands.cpp	/^static void VimChangeDir(COleAutomationControl& VimOle, DISPID DispatchId, BSTR& FileName);$/;"	p	file:	signature:(COleAutomationControl& VimOle, DISPID DispatchId, BSTR& FileName)
VimClipType_t	src/os_mswin.c	/^} VimClipType_t;$/;"	t	typeref:struct:__anon19	file:
VimClipboard	src/vim.h	/^typedef int VimClipboard;	\/* This is required for the prototypes. *\/$/;"	t
VimClipboard	src/vim.h	/^typedef struct VimClipboard$/;"	s
VimClipboard	src/vim.h	/^} VimClipboard;$/;"	t	typeref:struct:VimClipboard
VimClipboard::available	src/vim.h	/^    int		available;	\/* Is clipboard available? *\/$/;"	m	struct:VimClipboard	access:public
VimClipboard::end	src/vim.h	/^    pos_T	end;		\/* End of selected area *\/$/;"	m	struct:VimClipboard	access:public
VimClipboard::format	src/vim.h	/^    int_u	format;		\/* Vim's own special clipboard format *\/$/;"	m	struct:VimClipboard	access:public
VimClipboard::format_raw	src/vim.h	/^    int_u	format_raw;	\/* Vim's raw text clipboard format *\/$/;"	m	struct:VimClipboard	access:public
VimClipboard::gtk_sel_atom	src/vim.h	/^    GdkAtom     gtk_sel_atom;	\/* PRIMARY\/CLIPBOARD selection ID *\/$/;"	m	struct:VimClipboard	access:public
VimClipboard::mode	src/vim.h	/^    short_u	mode;		\/* Select by char, word, or line. *\/$/;"	m	struct:VimClipboard	access:public
VimClipboard::origin_end_col	src/vim.h	/^    short_u	origin_end_col;$/;"	m	struct:VimClipboard	access:public
VimClipboard::origin_row	src/vim.h	/^    short_u	origin_row;$/;"	m	struct:VimClipboard	access:public
VimClipboard::origin_start_col	src/vim.h	/^    short_u	origin_start_col;$/;"	m	struct:VimClipboard	access:public
VimClipboard::owned	src/vim.h	/^    int		owned;		\/* Flag: do we own the selection? *\/$/;"	m	struct:VimClipboard	access:public
VimClipboard::prev	src/vim.h	/^    pos_T	prev;		\/* Previous position *\/$/;"	m	struct:VimClipboard	access:public
VimClipboard::sel_atom	src/vim.h	/^    Atom	sel_atom;	\/* PRIMARY\/CLIPBOARD selection ID *\/$/;"	m	struct:VimClipboard	access:public
VimClipboard::start	src/vim.h	/^    pos_T	start;		\/* Start of selected area *\/$/;"	m	struct:VimClipboard	access:public
VimClipboard::state	src/vim.h	/^    short_u	state;		\/* Current selection state *\/$/;"	m	struct:VimClipboard	access:public
VimClipboard::vmode	src/vim.h	/^    int		vmode;		\/* Visual mode character *\/$/;"	m	struct:VimClipboard	access:public
VimClipboard::word_end_col	src/vim.h	/^    short_u	word_end_col;$/;"	m	struct:VimClipboard	access:public
VimClipboard::word_start_col	src/vim.h	/^    short_u	word_start_col;$/;"	m	struct:VimClipboard	access:public
VimCommand	src/if_py_both.h	/^VimCommand(PyObject *self UNUSED, PyObject *args)$/;"	f	signature:(PyObject *self UNUSED, PyObject *args)
VimEnter	runtime/plugin/netrwPlugin.vim	/^fun! s:VimEnter(dirname)$/;"	f
VimErrDiag	src/VisVim/Commands.cpp	/^static void VimErrDiag(COleAutomationControl& VimOle)$/;"	f	file:	signature:(COleAutomationControl& VimOle)
VimErrDiag	src/VisVim/Commands.cpp	/^static void VimErrDiag(COleAutomationControl& VimOle);$/;"	p	file:	signature:(COleAutomationControl& VimOle)
VimError	src/if_py_both.h	/^static PyObject *VimError;$/;"	v
VimErrorCheck	src/if_py_both.h	/^VimErrorCheck(void)$/;"	f	signature:(void)
VimEval	src/if_py_both.h	/^VimEval(PyObject *self UNUSED, PyObject *args UNUSED)$/;"	f	signature:(PyObject *self UNUSED, PyObject *args UNUSED)
VimGetDispatchId	src/VisVim/Commands.cpp	/^static DISPID VimGetDispatchId(COleAutomationControl& VimOle, char* Method)$/;"	f	file:	signature:(COleAutomationControl& VimOle, char* Method)
VimGetDispatchId	src/VisVim/Commands.cpp	/^static DISPID VimGetDispatchId(COleAutomationControl& VimOle, char* Method);$/;"	p	file:	signature:(COleAutomationControl& VimOle, char* Method)
VimMain	src/main.c	/^VimMain$/;"	f
VimMain	src/os_w32exe.c	/^VimMain$/;"	p	file:	signature:(int argc, char **argv)
VimMain	src/os_win16.c	/^VimMain$/;"	p	file:	signature:(int argc, char **argv)
VimMenu	src/structs.h	/^struct VimMenu$/;"	s
VimMenu::actext	src/structs.h	/^    char_u	*actext;	    \/* accelerator text (after TAB) *\/$/;"	m	struct:VimMenu	access:public
VimMenu::cb	src/structs.h	/^    void	(*cb) __ARGS((vimmenu_T *));	    \/* Call-back routine *\/$/;"	m	struct:VimMenu	access:public
VimMenu::children	src/structs.h	/^    vimmenu_T	*children;	    \/* Children of sub-menu *\/$/;"	m	struct:VimMenu	access:public
VimMenu::dname	src/structs.h	/^    char_u	*dname;		    \/* Displayed Name ("name" without '&') *\/$/;"	m	struct:VimMenu	access:public
VimMenu::en_dname	src/structs.h	/^    char_u	*en_dname;	    \/* "dname" untranslated, NULL when "dname"$/;"	m	struct:VimMenu	access:public
VimMenu::en_name	src/structs.h	/^    char_u	*en_name;	    \/* "name" untranslated, NULL when "name"$/;"	m	struct:VimMenu	access:public
VimMenu::enabled	src/structs.h	/^    int		enabled;	    \/* for which modes the menu is enabled *\/$/;"	m	struct:VimMenu	access:public
VimMenu::greyed_out	src/structs.h	/^    int		greyed_out;	    \/* Flag *\/$/;"	m	struct:VimMenu	access:public
VimMenu::hidden	src/structs.h	/^    int		hidden;$/;"	m	struct:VimMenu	access:public
VimMenu::icon_builtin	src/structs.h	/^    int		icon_builtin;	    \/* icon names is BuiltIn{nr} *\/$/;"	m	struct:VimMenu	access:public
VimMenu::iconfile	src/structs.h	/^    char_u	*iconfile;	    \/* name of file for icon or NULL *\/$/;"	m	struct:VimMenu	access:public
VimMenu::iconidx	src/structs.h	/^    int		iconidx;	    \/* icon index (-1 if not set) *\/$/;"	m	struct:VimMenu	access:public
VimMenu::id	src/structs.h	/^    GtkWidget	*id;		    \/* Manage this to enable item *\/$/;"	m	struct:VimMenu	access:public
VimMenu::id	src/structs.h	/^    PtWidget_t	*id;$/;"	m	struct:VimMenu	access:public
VimMenu::id	src/structs.h	/^    UINT	id;		    \/* Id of menu item *\/$/;"	m	struct:VimMenu	access:public
VimMenu::id	src/structs.h	/^    Widget	id;		    \/* Manage this to enable item *\/$/;"	m	struct:VimMenu	access:public
VimMenu::id	src/structs.h	/^    int		*id;		    \/* Not used, but gui.c needs it *\/$/;"	m	struct:VimMenu	access:public
VimMenu::image	src/structs.h	/^    Pixmap	image;		    \/* Toolbar image *\/$/;"	m	struct:VimMenu	access:public
VimMenu::label	src/structs.h	/^    GtkWidget   *label;		    \/* Used by "set wak=" code. *\/$/;"	m	struct:VimMenu	access:public
VimMenu::menu_handle	src/structs.h	/^    MenuHandle	menu_handle;$/;"	m	struct:VimMenu	access:public
VimMenu::menu_id	src/structs.h	/^    short	menu_id;	    \/* the menu id to which this item belong *\/$/;"	m	struct:VimMenu	access:public
VimMenu::mnemonic	src/structs.h	/^    int		mnemonic;	    \/* mnemonic key (after '&') *\/$/;"	m	struct:VimMenu	access:public
VimMenu::modes	src/structs.h	/^    int		modes;		    \/* Which modes is this menu visible for? *\/$/;"	m	struct:VimMenu	access:public
VimMenu::name	src/structs.h	/^    char_u	*name;		    \/* Name of menu, possibly translated *\/$/;"	m	struct:VimMenu	access:public
VimMenu::next	src/structs.h	/^    vimmenu_T	*next;		    \/* Next item in menu *\/$/;"	m	struct:VimMenu	access:public
VimMenu::noremap	src/structs.h	/^    int		noremap[MENU_MODES]; \/* A REMAP_ flag for each mode *\/$/;"	m	struct:VimMenu	access:public
VimMenu::parent	src/structs.h	/^    vimmenu_T	*parent;	    \/* Parent of menu *\/$/;"	m	struct:VimMenu	access:public
VimMenu::priority	src/structs.h	/^    int		priority;	    \/* Menu order priority *\/$/;"	m	struct:VimMenu	access:public
VimMenu::sensitive	src/structs.h	/^    int		sensitive;	    \/* turn button on\/off *\/$/;"	m	struct:VimMenu	access:public
VimMenu::silent	src/structs.h	/^    char	silent[MENU_MODES]; \/* A silent flag for each mode *\/$/;"	m	struct:VimMenu	access:public
VimMenu::strings	src/structs.h	/^    char_u	*strings[MENU_MODES]; \/* Mapped string for each mode *\/$/;"	m	struct:VimMenu	access:public
VimMenu::submenu_handle	src/structs.h	/^    MenuHandle	submenu_handle;$/;"	m	struct:VimMenu	access:public
VimMenu::submenu_id	src/structs.h	/^    GtkWidget	*submenu_id;	    \/* If this is submenu, add children here *\/$/;"	m	struct:VimMenu	access:public
VimMenu::submenu_id	src/structs.h	/^    HMENU	submenu_id;	    \/* If this is submenu, add children here *\/$/;"	m	struct:VimMenu	access:public
VimMenu::submenu_id	src/structs.h	/^    PtWidget_t	*submenu_id;$/;"	m	struct:VimMenu	access:public
VimMenu::submenu_id	src/structs.h	/^    Widget	submenu_id;	    \/* If this is submenu, add children here *\/$/;"	m	struct:VimMenu	access:public
VimMenu::submenu_id	src/structs.h	/^    short	submenu_id;	    \/* the menu id of the children (could be$/;"	m	struct:VimMenu	access:public
VimMenu::tearoff_handle	src/structs.h	/^    GtkWidget	*tearoff_handle;$/;"	m	struct:VimMenu	access:public
VimMenu::tearoff_handle	src/structs.h	/^    HWND	tearoff_handle;	    \/* hWnd of tearoff if created *\/$/;"	m	struct:VimMenu	access:public
VimMenu::tip	src/structs.h	/^    BalloonEval *tip;		    \/* tooltip for this menu item *\/$/;"	m	struct:VimMenu	access:public
VimMenu::xpm	src/structs.h	/^    char	**xpm;		    \/* pixmap data *\/$/;"	m	struct:VimMenu	access:public
VimMenu::xpm_fname	src/structs.h	/^    char	*xpm_fname;	    \/* file with pixmap data *\/$/;"	m	struct:VimMenu	access:public
VimMethods	src/if_py_both.h	/^static struct PyMethodDef VimMethods[] = {$/;"	v	typeref:struct:PyMethodDef
VimOpenFile	src/VisVim/Commands.cpp	/^static BOOL VimOpenFile(BSTR& FileName, long LineNr)$/;"	f	file:	signature:(BSTR& FileName, long LineNr)
VimOpenFile	src/VisVim/Commands.cpp	/^static BOOL VimOpenFile(BSTR& FileName, long LineNr);$/;"	p	file:	signature:(BSTR& FileName, long LineNr)
VimSetEnableState	src/VisVim/Commands.cpp	/^static void VimSetEnableState(BOOL bEnableState)$/;"	f	file:	signature:(BOOL bEnableState)
VimSetEnableState	src/VisVim/Commands.cpp	/^static void VimSetEnableState(BOOL bEnableState);$/;"	p	file:	signature:(BOOL bEnableState)
VimToPython	src/if_py_both.h	/^VimToPython(typval_T *our_tv, int depth, PyObject *lookupDict)$/;"	f	signature:(typval_T *our_tv, int depth, PyObject *lookupDict)
VimWindow	src/gui.h	/^    WindowPtr	VimWindow;$/;"	m	struct:Gui	access:public
Vim_Prim	src/if_mzsch.c	/^} Vim_Prim;$/;"	t	typeref:struct:__anon26	file:
VimballList	runtime/plugin/vimballPlugin.vim	/^com! -na=0                VimballList			call vimball#Vimball(0)$/;"	c
Vimuntar	runtime/plugin/tarPlugin.vim	/^com! -nargs=? -complete=file Vimuntar call tar#Vimuntar(<q-args>)$/;"	c
VirtKeyMap	src/os_win32.c	/^} VirtKeyMap[] =$/;"	v	typeref:struct:__anon89	file:
VisVimDialog	src/VisVim/Commands.cpp	/^STDMETHODIMP CCommands::VisVimDialog()$/;"	f	class:CCommands	signature:()
VisVimDialog	src/VisVim/Commands.h	/^	STDMETHOD (VisVimDialog) (THIS);$/;"	p	class:CCommands	access:public	signature:(THIS)
VisVimDisable	src/VisVim/Commands.cpp	/^STDMETHODIMP CCommands::VisVimDisable()$/;"	f	class:CCommands	signature:()
VisVimDisable	src/VisVim/Commands.h	/^	STDMETHOD (VisVimDisable) (THIS);$/;"	p	class:CCommands	access:public	signature:(THIS)
VisVimEnable	src/VisVim/Commands.cpp	/^STDMETHODIMP CCommands::VisVimEnable()$/;"	f	class:CCommands	signature:()
VisVimEnable	src/VisVim/Commands.h	/^	STDMETHOD (VisVimEnable) (THIS);$/;"	p	class:CCommands	access:public	signature:(THIS)
VisVimLoad	src/VisVim/Commands.cpp	/^STDMETHODIMP CCommands::VisVimLoad()$/;"	f	class:CCommands	signature:()
VisVimLoad	src/VisVim/Commands.h	/^	STDMETHOD (VisVimLoad) (THIS);$/;"	p	class:CCommands	access:public	signature:(THIS)
VisVimToggle	src/VisVim/Commands.cpp	/^STDMETHODIMP CCommands::VisVimToggle()$/;"	f	class:CCommands	signature:()
VisVimToggle	src/VisVim/Commands.h	/^	STDMETHOD (VisVimToggle) (THIS);$/;"	p	class:CCommands	access:public	signature:(THIS)
W	runtime/macros/life/life.vim	/^map W makh,3`ah,3`ajh,3($/;"	m
WANT_X11	src/feature.h	1022;"	d
WARGCOUNT	src/structs.h	656;"	d
WARGLIST	src/structs.h	652;"	d
WAS_BANNED	src/spell.c	627;"	d	file:
WAW	src/farsi.h	140;"	d
WAW_H	src/farsi.h	167;"	d
WCHAR	src/gui_w48.c	/^typedef int WCHAR;$/;"	t	file:
WCHAR	src/os_mswin.c	/^typedef int WCHAR;$/;"	t	file:
WCHAR	src/os_win32.c	/^typedef int WCHAR;$/;"	t	file:
WC_KEY_OFF	src/spell.c	587;"	d	file:
WEXITSTATUS	src/os_unixx.h	33;"	d
WEXITSTATUS	src/os_unixx.h	35;"	d
WFP_COMPFORBID	src/spell.c	359;"	d	file:
WFP_COMPPERMIT	src/spell.c	358;"	d	file:
WFP_NC	src/spell.c	356;"	d	file:
WFP_RARE	src/spell.c	355;"	d	file:
WFP_UP	src/spell.c	357;"	d	file:
WF_AFX	src/spell.c	337;"	d	file:
WF_ALLCAP	src/spell.c	334;"	d	file:
WF_BANNED	src/spell.c	336;"	d	file:
WF_CAPMASK	src/spell.c	352;"	d	file:
WF_COMPROOT	src/spell.c	345;"	d	file:
WF_FIXCAP	src/spell.c	338;"	d	file:
WF_HAS_AFF	src/spell.c	342;"	d	file:
WF_KEEPCAP	src/spell.c	339;"	d	file:
WF_MIXCAP	src/spell.c	350;"	d	file:
WF_NEEDCOMP	src/spell.c	343;"	d	file:
WF_NOCOMPAFT	src/spell.c	347;"	d	file:
WF_NOCOMPBEF	src/spell.c	346;"	d	file:
WF_NOSUGGEST	src/spell.c	344;"	d	file:
WF_ONECAP	src/spell.c	333;"	d	file:
WF_PFX_COMPFORBID	src/spell.c	368;"	d	file:
WF_PFX_COMPPERMIT	src/spell.c	366;"	d	file:
WF_PFX_NC	src/spell.c	364;"	d	file:
WF_PFX_UP	src/spell.c	365;"	d	file:
WF_RARE	src/spell.c	335;"	d	file:
WF_RAREPFX	src/spell.c	363;"	d	file:
WF_REGION	src/spell.c	332;"	d	file:
WHITE	src/regexp.c	182;"	d	file:
WHITECHAR	src/edit.c	5556;"	d	file:
WHITECHAR	src/edit.c	5558;"	d	file:
WHOLEFOLD	src/ex_cmds.h	39;"	d
WIFEXITED	src/os_unixx.h	41;"	d
WIFEXITED	src/os_unixx.h	43;"	d
WILDCHAR_LIST	src/os_mac.h	234;"	d
WILD_ADD_SLASH	src/vim.h	797;"	d
WILD_ALL	src/vim.h	790;"	d
WILD_ESCAPE	src/vim.h	800;"	d
WILD_EXPAND_FREE	src/vim.h	786;"	d
WILD_EXPAND_KEEP	src/vim.h	787;"	d
WILD_FREE	src/vim.h	785;"	d
WILD_HOME_REPLACE	src/vim.h	794;"	d
WILD_KEEP_ALL	src/vim.h	798;"	d
WILD_LIST_NOTFOUND	src/vim.h	793;"	d
WILD_LONGEST	src/vim.h	791;"	d
WILD_NEXT	src/vim.h	788;"	d
WILD_NO_BEEP	src/vim.h	796;"	d
WILD_PREV	src/vim.h	789;"	d
WILD_SILENT	src/vim.h	799;"	d
WILD_USE_NL	src/vim.h	795;"	d
WIM_FULL	src/option.h	291;"	d
WIM_LIST	src/option.h	293;"	d
WIM_LONGEST	src/option.h	292;"	d
WIN32	src/mbyte.c	88;"	d	file:
WIN3264	src/dosinst.h	34;"	d
WIN3264	src/vim.h	138;"	d
WIN32UNIX	src/os_unix.h	41;"	d
WIN32_LEAN_AND_MEAN	src/glbl_ime.cpp	38;"	d	file:
WIN32_LEAN_AND_MEAN	src/if_cscope.h	20;"	d
WIN32_LEAN_AND_MEAN	src/mbyte.c	84;"	d	file:
WIN32_LEAN_AND_MEAN	src/os_w32dll.c	16;"	d	file:
WIN32_LEAN_AND_MEAN	src/vimrun.c	35;"	d	file:
WIN32_LEAN_AND_MEAN	src/vimrun.c	41;"	d	file:
WIN32_LEAN_AND_MEAN	src/xpm_w32.c	12;"	d	file:
WINAPI	src/gui_w16.c	41;"	d	file:
WINAPI	src/gui_w32.c	54;"	d	file:
WINAPI	src/gui_w48.c	/^typedef int WINAPI;$/;"	t	file:
WINAPI	src/os_mswin.c	95;"	d	file:
WINAPI	src/os_win16.c	63;"	d	file:
WINAPI	src/os_win32.c	89;"	d	file:
WINBASEAPI	src/os_mswin.c	96;"	d	file:
WINBASEAPI	src/os_win16.c	66;"	d	file:
WINBASEAPI	src/os_win32.c	142;"	d	file:
WINBASEAPI	src/os_win32.c	90;"	d	file:
WINDRES	src/GvimExt/Make_ming.mak	/^WINDRES := $(CROSS_COMPILE)windres$/;"	m
WINDRES	src/Make_ming.mak	/^WINDRES := $(CROSS_COMPILE)windres$/;"	m
WINVER	src/Make_bc5.mak	/^WINVER = 0x0400$/;"	m
WINVER	src/Make_cyg.mak	/^WINVER = 0x0400$/;"	m
WINVER	src/Make_ming.mak	/^WINVER = 0x0400$/;"	m
WINVER	src/Make_mvc.mak	/^WINVER = 0x0400$/;"	m
WIN_HOR	src/main.c	34;"	d	file:
WIN_TABS	src/main.c	36;"	d	file:
WIN_VER	src/main.c	35;"	d	file:
WITH_NL	src/regexp.c	201;"	d	file:
WITH_OFF	src/screen.c	9972;"	d	file:
WITH_WIDTH	src/screen.c	9973;"	d	file:
WL_CMDLINE	src/screen.c	2790;"	d	file:
WL_FOLD	src/screen.c	2795;"	d	file:
WL_LINE	src/screen.c	2810;"	d	file:
WL_NR	src/screen.c	2804;"	d	file:
WL_SBR	src/screen.c	2806;"	d	file:
WL_SIGN	src/screen.c	2800;"	d	file:
WL_START	src/screen.c	2788;"	d	file:
WM_EXITSIZEMOVE	src/gui_w16.c	32;"	d	file:
WM_MOUSEWHEEL	src/gui_w32.c	178;"	d	file:
WM_NETBEANS	src/vim.h	1870;"	d
WM_OLE	src/vim.h	1866;"	d
WM_SCROLLED	src/globals.h	1098;"	d
WM_SHOWN	src/globals.h	1097;"	d
WM_XBUTTONDBLCLK	src/gui_w48.c	71;"	d	file:
WM_XBUTTONDOWN	src/gui_w48.c	69;"	d	file:
WM_XBUTTONUP	src/gui_w48.c	70;"	d	file:
WN_MASK	src/spell.c	4912;"	d	file:
WORD	src/gui_w48.c	/^typedef int WORD;$/;"	t	file:
WORD	src/os_mswin.c	/^typedef int WORD;$/;"	t	file:
WORD	src/os_win16.c	/^typedef int WORD;$/;"	t	file:
WORD	src/os_win32.c	/^typedef int WORD;$/;"	t	file:
WORD	src/regexp.c	190;"	d	file:
WORD1	src/ex_cmds.h	58;"	d
WORKDIR	src/dosinst.c	1778;"	d	file:
WORKSHOP_H	src/workshop.h	11;"	d
WORKSHOP_OBJ	src/auto/config.mk	/^WORKSHOP_OBJ	= $/;"	m
WORKSHOP_SRC	src/auto/config.mk	/^WORKSHOP_SRC	= $/;"	m
WORST	src/regexp.c	371;"	d	file:
WP64CHECK	src/Make_mvc.mak	/^WP64CHECK = \/Wp64$/;"	m
WPARAM	src/gui_w48.c	/^typedef int WPARAM;$/;"	t	file:
WPARAM	src/os_mswin.c	/^typedef int WPARAM;$/;"	t	file:
WPF_RESTORETOMAXIMIZED	src/gui_w48.c	3151;"	d	file:
WRAP	src/testdir/test49.vim	/^    function! WRAP(n, arg)$/;"	f
WRITEBIN	src/vim.h	1455;"	d
WRITEBIN	src/vim.h	1459;"	d
WSDEBUG_H	src/wsdebug.h	12;"	d
WSDEBUG_TRACE	src/wsdebug.h	37;"	d
WSDLEVEL	src/wsdebug.h	31;"	d
WSInitialized	src/gui_w32.c	/^int WSInitialized = FALSE; \/* WinSock is initialized *\/$/;"	v
WSP_ABOVE	src/vim.h	1150;"	d
WSP_BELOW	src/vim.h	1149;"	d
WSP_BOT	src/vim.h	1147;"	d
WSP_HELP	src/vim.h	1148;"	d
WSP_NEWLOC	src/vim.h	1151;"	d
WSP_ROOM	src/vim.h	1144;"	d
WSP_TOP	src/vim.h	1146;"	d
WSP_VERT	src/vim.h	1145;"	d
WS_DEBUG_ALL	src/wsdebug.h	29;"	d
WS_TRACE	src/wsdebug.h	26;"	d
WS_TRACE_COLONCMD	src/wsdebug.h	28;"	d
WS_TRACE_VERBOSE	src/wsdebug.h	27;"	d
WT_ENV	src/nbdebug.h	/^		WT_ENV = 1,		\/* look for env var if set *\/$/;"	e	enum:__anon3
WT_ENV	src/wsdebug.h	/^		WT_ENV = 1,		\/* look for env var if set *\/$/;"	e	enum:__anon112
WT_STOP	src/nbdebug.h	/^		WT_STOP			\/* look for ~\/.gvimstop if set *\/$/;"	e	enum:__anon3
WT_STOP	src/wsdebug.h	/^		WT_STOP			\/* look for ~\/.gvimstop if set *\/$/;"	e	enum:__anon112
WT_WAIT	src/nbdebug.h	/^		WT_WAIT,		\/* look for ~\/.gvimwait if set *\/$/;"	e	enum:__anon3
WT_WAIT	src/wsdebug.h	/^		WT_WAIT,		\/* look for ~\/.gvimwait if set *\/$/;"	e	enum:__anon112
WV_ARAB	src/option.h	/^    , WV_ARAB$/;"	e	enum:__anon22
WV_CC	src/option.h	/^    , WV_CC$/;"	e	enum:__anon22
WV_COCU	src/option.h	/^    , WV_COCU$/;"	e	enum:__anon22
WV_COLE	src/option.h	/^    , WV_COLE$/;"	e	enum:__anon22
WV_COUNT	src/option.h	/^    , WV_COUNT	    \/* must be the last one *\/$/;"	e	enum:__anon22
WV_CRBIND	src/option.h	/^    , WV_CRBIND$/;"	e	enum:__anon22
WV_CUC	src/option.h	/^    , WV_CUC$/;"	e	enum:__anon22
WV_CUL	src/option.h	/^    , WV_CUL$/;"	e	enum:__anon22
WV_DIFF	src/option.h	/^    , WV_DIFF$/;"	e	enum:__anon22
WV_FDC	src/option.h	/^    , WV_FDC$/;"	e	enum:__anon22
WV_FDE	src/option.h	/^    , WV_FDE$/;"	e	enum:__anon22
WV_FDI	src/option.h	/^    , WV_FDI$/;"	e	enum:__anon22
WV_FDL	src/option.h	/^    , WV_FDL$/;"	e	enum:__anon22
WV_FDM	src/option.h	/^    , WV_FDM$/;"	e	enum:__anon22
WV_FDN	src/option.h	/^    , WV_FDN$/;"	e	enum:__anon22
WV_FDT	src/option.h	/^    , WV_FDT$/;"	e	enum:__anon22
WV_FEN	src/option.h	/^    , WV_FEN$/;"	e	enum:__anon22
WV_FML	src/option.h	/^    , WV_FML$/;"	e	enum:__anon22
WV_FMR	src/option.h	/^    , WV_FMR$/;"	e	enum:__anon22
WV_LBR	src/option.h	/^    , WV_LBR$/;"	e	enum:__anon22
WV_LIST	src/option.h	/^    WV_LIST = 0$/;"	e	enum:__anon22
WV_NU	src/option.h	/^    , WV_NU$/;"	e	enum:__anon22
WV_NUW	src/option.h	/^    , WV_NUW$/;"	e	enum:__anon22
WV_PVW	src/option.h	/^    , WV_PVW$/;"	e	enum:__anon22
WV_RL	src/option.h	/^    , WV_RL$/;"	e	enum:__anon22
WV_RLC	src/option.h	/^    , WV_RLC$/;"	e	enum:__anon22
WV_RNU	src/option.h	/^    , WV_RNU$/;"	e	enum:__anon22
WV_SCBIND	src/option.h	/^    , WV_SCBIND$/;"	e	enum:__anon22
WV_SCROLL	src/option.h	/^    , WV_SCROLL$/;"	e	enum:__anon22
WV_SPELL	src/option.h	/^    , WV_SPELL$/;"	e	enum:__anon22
WV_STL	src/option.h	/^    , WV_STL$/;"	e	enum:__anon22
WV_WFH	src/option.h	/^    , WV_WFH$/;"	e	enum:__anon22
WV_WFW	src/option.h	/^    , WV_WFW$/;"	e	enum:__anon22
WV_WRAP	src/option.h	/^    , WV_WRAP$/;"	e	enum:__anon22
WW_ALL	src/option.h	178;"	d
W_CONV	src/farsi.h	183;"	d
W_ENDCOL	src/vim.h	822;"	d
W_ENDCOL	src/vim.h	827;"	d
W_NEXT	src/globals.h	531;"	d
W_NEXT	src/globals.h	540;"	d
W_OK	src/vim.h	1479;"	d
W_R_L	src/farsi.h	184;"	d
W_STATUS_HEIGHT	src/vim.h	831;"	d
W_STATUS_HEIGHT	src/vim.h	834;"	d
W_VSEP_WIDTH	src/vim.h	823;"	d
W_VSEP_WIDTH	src/vim.h	828;"	d
W_WIDTH	src/vim.h	821;"	d
W_WIDTH	src/vim.h	826;"	d
W_WINCOL	src/vim.h	820;"	d
W_WINCOL	src/vim.h	825;"	d
W_WINROW	src/vim.h	832;"	d
W_WINROW	src/vim.h	835;"	d
WaitForChar	src/os_msdos.c	/^WaitForChar(long msec)$/;"	f	file:	signature:(long msec)
WaitForChar	src/os_unix.c	/^WaitForChar(msec)$/;"	f	file:
WaitForChar	src/os_unix.c	/^static int  WaitForChar __ARGS((long));$/;"	p	file:	signature:(long)
WaitForChar	src/os_win32.c	/^WaitForChar(long msec)$/;"	f	file:	signature:(long msec)
WaitForPend	src/if_xcmdsrv.c	/^WaitForPend(p)$/;"	f	file:
WaitForPend	src/if_xcmdsrv.c	/^static int	WaitForPend __ARGS((void *p));$/;"	p	file:	signature:(void *p)
WaitForReply	src/if_xcmdsrv.c	/^WaitForReply(p)$/;"	f	file:
WaitForReply	src/if_xcmdsrv.c	/^static int	WaitForReply __ARGS((void *p));$/;"	p	file:	signature:(void *p)
WaitNextEventWrp	src/gui_mac.c	/^WaitNextEventWrp(EventMask eventMask, EventRecord *theEvent, UInt32 sleep, RgnHandle mouseRgn)$/;"	f	signature:(EventMask eventMask, EventRecord *theEvent, UInt32 sleep, RgnHandle mouseRgn)
WantQueryMouse	src/globals.h	/^EXTERN int	WantQueryMouse INIT(= FALSE);$/;"	v
WarnIfNotUnfinalised	runtime/ftplugin/debchangelog.vim	/^function <SID>WarnIfNotUnfinalised()$/;"	f
WcsLen	src/gui_at_fs.c	/^WcsLen(p)$/;"	f	file:
Wholematch	runtime/macros/matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
WideCharToMultiByte_alloc	src/os_mswin.c	/^WideCharToMultiByte_alloc(UINT cp, DWORD flags,$/;"	f	signature:(UINT cp, DWORD flags, LPCWSTR in, int inlen, LPSTR *out, int *outlen, LPCSTR def, LPBOOL useddef)
Widget	src/proto.h	25;"	d
Win16CloseClipboard	src/os_msdos.c	/^Win16CloseClipboard(void)$/;"	f	file:	signature:(void)
Win16CloseClipboard	src/os_msdos.c	/^static int Win16CloseClipboard(void);$/;"	p	file:	signature:(void)
Win16EmptyClipboard	src/os_msdos.c	/^Win16EmptyClipboard(void)$/;"	f	file:	signature:(void)
Win16EmptyClipboard	src/os_msdos.c	/^static int Win16EmptyClipboard(void);$/;"	p	file:	signature:(void)
Win16GetClipboardData	src/os_msdos.c	/^Win16GetClipboardData(int clip_data_format)$/;"	f	file:	signature:(int clip_data_format)
Win16GetClipboardData	src/os_msdos.c	/^static char_u *Win16GetClipboardData(int clip_data_format);$/;"	p	file:	signature:(int clip_data_format)
Win16OpenClipboard	src/os_msdos.c	/^Win16OpenClipboard(void)$/;"	f	file:	signature:(void)
Win16OpenClipboard	src/os_msdos.c	/^static int Win16OpenClipboard(void);$/;"	p	file:	signature:(void)
Win16SetClipboardData	src/os_msdos.c	/^Win16SetClipboardData($/;"	f	file:	signature:( int clip_data_format, char_u *clip_data, int clip_data_size, int clip_data_type)
Win16SetClipboardData	src/os_msdos.c	/^static int Win16SetClipboardData(int clip_data_format, char_u *clip_data, int clip_data_size, int clip_data_type);$/;"	p	file:	signature:(int clip_data_format, char_u *clip_data, int clip_data_size, int clip_data_type)
WinLeft	src/os_riscos.c	/^int WinLeft, WinTop;	\/* We might be started inside a text window *\/$/;"	v
WinListAsSeq	src/if_python.c	/^static PySequenceMethods WinListAsSeq = {$/;"	v	file:
WinListAsSeq	src/if_python3.c	/^static PySequenceMethods WinListAsSeq = {$/;"	v	file:
WinListItem	src/if_py_both.h	/^WinListItem(PyObject *self UNUSED, PyInt n)$/;"	f	signature:(PyObject *self UNUSED, PyInt n)
WinListLength	src/if_py_both.h	/^WinListLength(PyObject *self UNUSED)$/;"	f	signature:(PyObject *self UNUSED)
WinListObject	src/if_python.c	/^WinListObject;$/;"	t	typeref:struct:__anon95	file:
WinListObject	src/if_python3.c	/^WinListObject;$/;"	t	typeref:struct:__anon109	file:
WinListType	src/if_python.c	/^static PyTypeObject WinListType = {$/;"	v	file:
WinListType	src/if_python3.c	/^static PyTypeObject WinListType;$/;"	v	file:
WinMain	src/os_w32exe.c	/^WinMain($/;"	f	signature:( HINSTANCE hInstance, HINSTANCE hPrevInst, LPSTR lpszCmdLine, int nCmdShow)
WinMain	src/os_win16.c	/^WinMain($/;"	f	signature:( HINSTANCE hInstance, HINSTANCE hPrevInst, LPSTR lpszCmdLine, int nCmdShow)
WinTop	src/os_riscos.c	/^int WinLeft, WinTop;	\/* We might be started inside a text window *\/$/;"	v
Window	src/os_amiga.c	19;"	d	file:
WindowActivate	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::WindowActivate(IDispatch * theWindow)$/;"	f	class:CCommands::XApplicationEvents	signature:(IDispatch * theWindow)
WindowActivate	src/VisVim/Commands.h	/^		STDMETHOD (WindowActivate) (THIS_ IDispatch * theWindow);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS_ IDispatch * theWindow)
WindowDeactivate	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::WindowDeactivate(IDispatch * theWindow)$/;"	f	class:CCommands::XApplicationEvents	signature:(IDispatch * theWindow)
WindowDeactivate	src/VisVim/Commands.h	/^		STDMETHOD (WindowDeactivate) (THIS_ IDispatch * theWindow);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS_ IDispatch * theWindow)
WindowDestructor	src/if_python.c	/^WindowDestructor(PyObject *self)$/;"	f	file:	signature:(PyObject *self)
WindowDestructor	src/if_python.c	/^static void WindowDestructor(PyObject *);$/;"	p	file:	signature:(PyObject *)
WindowDestructor	src/if_python3.c	/^WindowDestructor(PyObject *self)$/;"	f	file:	signature:(PyObject *self)
WindowGetattr	src/if_python.c	/^WindowGetattr(PyObject *self, char *name)$/;"	f	file:	signature:(PyObject *self, char *name)
WindowGetattr	src/if_python.c	/^static PyObject *WindowGetattr(PyObject *, char *);$/;"	p	file:	signature:(PyObject *, char *)
WindowGetattro	src/if_python3.c	/^WindowGetattro(PyObject *self, PyObject *nameobj)$/;"	f	file:	signature:(PyObject *self, PyObject *nameobj)
WindowMethods	src/if_python.c	/^static struct PyMethodDef WindowMethods[] = {$/;"	v	typeref:struct:PyMethodDef	file:
WindowMethods	src/if_python3.c	/^static struct PyMethodDef WindowMethods[] = {$/;"	v	typeref:struct:PyMethodDef	file:
WindowNew	src/if_python.c	/^WindowNew(win_T *win)$/;"	f	file:	signature:(win_T *win)
WindowNew	src/if_python.c	/^static PyObject *WindowNew(win_T *);$/;"	p	file:	signature:(win_T *)
WindowNew	src/if_python3.c	/^WindowNew(win_T *win)$/;"	f	file:	signature:(win_T *win)
WindowNew	src/if_python3.c	/^static PyObject *WindowNew(win_T *);$/;"	p	file:	signature:(win_T *)
WindowObject	src/if_py_both.h	/^} WindowObject;$/;"	t	typeref:struct:__anon12
WindowRepr	src/if_py_both.h	/^WindowRepr(PyObject *self)$/;"	f	signature:(PyObject *self)
WindowRepr	src/if_py_both.h	/^static PyObject *WindowRepr(PyObject *);$/;"	p	signature:(PyObject *)
WindowSearch	src/gui_mac.c	/^struct WindowSearch \/* for handling class 'KAHL', event 'SRCH', keyDirectObject typeChar*\/$/;"	s	file:
WindowSearch	src/gui_mac.c	/^typedef struct WindowSearch WindowSearch;$/;"	t	typeref:struct:WindowSearch	file:
WindowSearch::theDate	src/gui_mac.c	/^    long *theDate; \/\/ where to put the modification date\/time$/;"	m	struct:WindowSearch	file:	access:public
WindowSearch::theFile	src/gui_mac.c	/^    FSSpec theFile; \/\/ identifies the file$/;"	m	struct:WindowSearch	file:	access:public
WindowSetattr	src/if_py_both.h	/^WindowSetattr(PyObject *self, char *name, PyObject *val)$/;"	f	signature:(PyObject *self, char *name, PyObject *val)
WindowSetattr	src/if_py_both.h	/^static int WindowSetattr(PyObject *, char *, PyObject *);$/;"	p	signature:(PyObject *, char *, PyObject *)
WindowSetattro	src/if_python3.c	/^WindowSetattro(PyObject *self, PyObject *nameobj, PyObject *val)$/;"	f	file:	signature:(PyObject *self, PyObject *nameobj, PyObject *val)
WindowType	src/if_python.c	/^static PyTypeObject WindowType = {$/;"	v	file:
WindowType	src/if_python3.c	/^static PyTypeObject WindowType;$/;"	v	file:
WindowType_Check	src/if_python.c	789;"	d	file:
WindowType_Check	src/if_python3.c	798;"	d	file:
WindowValid	src/if_xcmdsrv.c	/^WindowValid(dpy, w)$/;"	f	file:
WindowValid	src/if_xcmdsrv.c	/^static int	WindowValid __ARGS((Display *dpy, Window w));$/;"	p	file:	signature:(Display *dpy, Window w)
WorkspaceClose	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::WorkspaceClose()$/;"	f	class:CCommands::XApplicationEvents	signature:()
WorkspaceClose	src/VisVim/Commands.h	/^		STDMETHOD (WorkspaceClose) (THIS);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS)
WorkspaceOpen	src/VisVim/Commands.cpp	/^HRESULT CCommands::XApplicationEvents::WorkspaceOpen()$/;"	f	class:CCommands::XApplicationEvents	signature:()
WorkspaceOpen	src/VisVim/Commands.h	/^		STDMETHOD (WorkspaceOpen) (THIS);$/;"	p	class:CCommands::XApplicationEvents	access:public	signature:(THIS)
WriteRegistryInt	src/VisVim/Reg.cpp	/^bool WriteRegistryInt (HKEY hSectionKey, char* Entry, int nValue)$/;"	f	signature:(HKEY hSectionKey, char* Entry, int nValue)
WriteRegistryInt	src/VisVim/VisVim.h	/^bool WriteRegistryInt (HKEY hSectionKey, char* Entry, int nValue);$/;"	p	signature:(HKEY hSectionKey, char* Entry, int nValue)
WriteToSniff	src/if_sniff.c	/^WriteToSniff(str)$/;"	f	file:
WriteToSniff	src/if_sniff.c	/^static void WriteToSniff __ARGS((char *str));$/;"	p	file:	signature:(char *str)
WtWait	src/nbdebug.h	/^} WtWait;$/;"	t	typeref:enum:__anon3
WtWait	src/wsdebug.h	/^} WtWait;$/;"	t	typeref:enum:__anon112
Wydawca	runtime/tutor/tutor.pl	/^	Wydawca: Helion 2001 (O'Reilly) - wg 6. ang. wydania$/;"	l
Wydawca	runtime/tutor/tutor.pl	/^	Wydawca: Helion 2001 (O'Reilly).$/;"	l
Wydawca	runtime/tutor/tutor.pl	/^	Wydawca: New Riders$/;"	l
Wydawca	runtime/tutor/tutor.pl	/^	Wydawca: O'Reilly & Associates Inc.$/;"	l
X	runtime/macros/hanoi/hanoi.vim	/^map X x$/;"	m
XAW_LIB	src/Makefile	/^XAW_LIB = -lXaw$/;"	m
XAllocClassHint	src/gui_gtk_vms.h	85;"	d
XAllocColor	src/gui_gtk_vms.h	86;"	d
XAllocColorCells	src/gui_gtk_vms.h	87;"	d
XAllocSizeHints	src/gui_gtk_vms.h	88;"	d
XAllocWMHints	src/gui_gtk_vms.h	89;"	d
XApplicationEvents	src/VisVim/Commands.h	/^	class XApplicationEvents : public XEventHandler < IApplicationEvents,$/;"	c	class:CCommands	inherits:XEventHandler	access:protected
XApplicationEventsObj	src/VisVim/Commands.h	/^	typedef CComObject < XApplicationEvents > XApplicationEventsObj;$/;"	t	class:CCommands	access:protected
XAutoRepeatOff	src/gui_gtk_vms.h	90;"	d
XAutoRepeatOn	src/gui_gtk_vms.h	91;"	d
XBaseFontNameListOfFontSet	src/gui_gtk_vms.h	92;"	d
XBell	src/gui_gtk_vms.h	93;"	d
XBitmapPad	src/gui_gtk_vms.h	94;"	d
XChangeActivePointerGrab	src/gui_gtk_vms.h	95;"	d
XChangeGC	src/gui_gtk_vms.h	96;"	d
XChangeProperty	src/gui_gtk_vms.h	97;"	d
XChangeWindowAttributes	src/gui_gtk_vms.h	98;"	d
XCheckIfEvent	src/gui_gtk_vms.h	99;"	d
XCheckMaskEvent	src/gui_gtk_vms.h	100;"	d
XCheckTypedEvent	src/gui_gtk_vms.h	101;"	d
XCheckTypedWindowEvent	src/gui_gtk_vms.h	102;"	d
XCheckWindowEvent	src/gui_gtk_vms.h	103;"	d
XClearArea	src/gui_gtk_vms.h	104;"	d
XClearWindow	src/gui_gtk_vms.h	105;"	d
XClipBox	src/gui_gtk_vms.h	106;"	d
XCloseDisplay	src/gui_gtk_vms.h	107;"	d
XCloseIM	src/gui_gtk_vms.h	108;"	d
XConfigureWindow	src/gui_gtk_vms.h	109;"	d
XConvertSelection	src/gui_gtk_vms.h	110;"	d
XCopyArea	src/gui_gtk_vms.h	111;"	d
XCopyGC	src/gui_gtk_vms.h	112;"	d
XCopyPlane	src/gui_gtk_vms.h	113;"	d
XCreateBitmapFromData	src/gui_gtk_vms.h	114;"	d
XCreateColormap	src/gui_gtk_vms.h	115;"	d
XCreateFontCursor	src/gui_gtk_vms.h	116;"	d
XCreateFontSet	src/gui_gtk_vms.h	117;"	d
XCreateGC	src/gui_gtk_vms.h	118;"	d
XCreateIC	src/gui_gtk_vms.h	119;"	d
XCreateImage	src/gui_gtk_vms.h	120;"	d
XCreatePixmap	src/gui_gtk_vms.h	121;"	d
XCreatePixmapCursor	src/gui_gtk_vms.h	122;"	d
XCreatePixmapFromBitmapData	src/gui_gtk_vms.h	123;"	d
XCreateRegion	src/gui_gtk_vms.h	124;"	d
XCreateSimpleWindow	src/gui_gtk_vms.h	125;"	d
XCreateWindow	src/gui_gtk_vms.h	126;"	d
XD_GUI	src/os_unix.c	1588;"	d	file:
XD_HERE	src/os_unix.c	1587;"	d	file:
XD_NONE	src/os_unix.c	1586;"	d	file:
XD_XTERM	src/os_unix.c	1589;"	d	file:
XDebuggerEvents	src/VisVim/Commands.h	/^	class XDebuggerEvents : public XEventHandler < IDebuggerEvents,$/;"	c	class:CCommands	inherits:XEventHandler	access:protected
XDebuggerEventsObj	src/VisVim/Commands.h	/^	typedef CComObject < XDebuggerEvents > XDebuggerEventsObj;$/;"	t	class:CCommands	access:protected
XDefaultRootWindow	src/gui_gtk_vms.h	127;"	d
XDefaultScreenOfDisplay	src/gui_gtk_vms.h	128;"	d
XDefineCursor	src/gui_gtk_vms.h	129;"	d
XDeleteProperty	src/gui_gtk_vms.h	130;"	d
XDestroyIC	src/gui_gtk_vms.h	131;"	d
XDestroyRegion	src/gui_gtk_vms.h	132;"	d
XDestroyWindow	src/gui_gtk_vms.h	133;"	d
XDisplayName	src/gui_gtk_vms.h	134;"	d
XDisplayOfScreen	src/gui_gtk_vms.h	135;"	d
XDisplayString	src/gui_gtk_vms.h	136;"	d
XDrawArc	src/gui_gtk_vms.h	137;"	d
XDrawImageString	src/gui_gtk_vms.h	138;"	d
XDrawImageString16	src/gui_gtk_vms.h	139;"	d
XDrawImageString16	src/gui_x11.c	117;"	d	file:
XDrawLine	src/gui_gtk_vms.h	140;"	d
XDrawLines	src/gui_gtk_vms.h	141;"	d
XDrawPoint	src/gui_gtk_vms.h	142;"	d
XDrawPoints	src/gui_gtk_vms.h	143;"	d
XDrawRectangle	src/gui_gtk_vms.h	144;"	d
XDrawSegments	src/gui_gtk_vms.h	145;"	d
XDrawString	src/gui_gtk_vms.h	146;"	d
XDrawString	src/gui_x11.c	99;"	d	file:
XDrawString16	src/gui_gtk_vms.h	147;"	d
XDrawString16	src/gui_x11.c	108;"	d	file:
XE	src/farsi.h	119;"	d
XEmptyRegion	src/gui_gtk_vms.h	148;"	d
XEqualRegion	src/gui_gtk_vms.h	149;"	d
XEventHandler	src/VisVim/Commands.h	/^		class XEventHandler :$/;"	c	class:CCommands	inherits:CComDualImpl,CComObjectRoot,CComCoClass	access:protected
XEventsQueued	src/gui_gtk_vms.h	150;"	d
XExtentsOfFontSet	src/gui_gtk_vms.h	151;"	d
XFILE	src/ex_cmds.h	36;"	d
XFetchBuffer	src/gui_gtk_vms.h	152;"	d
XFillArc	src/gui_gtk_vms.h	153;"	d
XFillPolygon	src/gui_gtk_vms.h	154;"	d
XFillRectangle	src/gui_gtk_vms.h	155;"	d
XFillRectangles	src/gui_gtk_vms.h	156;"	d
XFilterEvent	src/gui_gtk_vms.h	157;"	d
XFlush	src/gui_gtk_vms.h	158;"	d
XFontsOfFontSet	src/gui_gtk_vms.h	159;"	d
XFree	src/gui_gtk_vms.h	160;"	d
XFreeColormap	src/gui_gtk_vms.h	161;"	d
XFreeColors	src/gui_gtk_vms.h	162;"	d
XFreeCursor	src/gui_gtk_vms.h	163;"	d
XFreeFont	src/gui_gtk_vms.h	164;"	d
XFreeFontInfo	src/gui_gtk_vms.h	165;"	d
XFreeFontNames	src/gui_gtk_vms.h	166;"	d
XFreeFontSet	src/gui_gtk_vms.h	167;"	d
XFreeGC	src/gui_gtk_vms.h	168;"	d
XFreeModifiermap	src/gui_gtk_vms.h	169;"	d
XFreePixmap	src/gui_gtk_vms.h	170;"	d
XFreeStringList	src/gui_gtk_vms.h	171;"	d
XGETTEXT	src/po/Make_cyg.mak	/^XGETTEXT = OLD_PO_FILE_INPUT=yes OLD_PO_FILE_OUTPUT=yes $(GETTEXT_PATH)xgettext$/;"	m
XGETTEXT	src/po/Make_ming.mak	/^XGETTEXT = $(GETTEXT_PATH)xgettext$/;"	m
XGETTEXT	src/po/Make_mvc.mak	/^XGETTEXT = $(GETTEXT_PATH)\\xgettext$/;"	m
XGETTEXT	src/po/Makefile	/^XGETTEXT = OLD_PO_FILE_INPUT=yes OLD_PO_FILE_OUTPUT=yes xgettext$/;"	m
XGetAtomName	src/gui_gtk_vms.h	172;"	d
XGetDefault	src/gui_gtk_vms.h	173;"	d
XGetErrorDatabaseText	src/gui_gtk_vms.h	174;"	d
XGetErrorText	src/gui_gtk_vms.h	175;"	d
XGetFontProperty	src/gui_gtk_vms.h	176;"	d
XGetGCValues	src/gui_gtk_vms.h	177;"	d
XGetGeometry	src/gui_gtk_vms.h	178;"	d
XGetICValues	src/gui_gtk_vms.h	180;"	d
XGetIMValues	src/gui_gtk_vms.h	181;"	d
XGetIconSizes	src/gui_gtk_vms.h	179;"	d
XGetImage	src/gui_gtk_vms.h	182;"	d
XGetKeyboardControl	src/gui_gtk_vms.h	183;"	d
XGetModifierMapping	src/gui_gtk_vms.h	184;"	d
XGetMotionEvents	src/gui_gtk_vms.h	185;"	d
XGetNormalHints	src/gui_gtk_vms.h	186;"	d
XGetSelectionOwner	src/gui_gtk_vms.h	187;"	d
XGetSubImage	src/gui_gtk_vms.h	188;"	d
XGetVisualInfo	src/gui_gtk_vms.h	189;"	d
XGetWMColormapWindows	src/gui_gtk_vms.h	190;"	d
XGetWMHints	src/gui_gtk_vms.h	193;"	d
XGetWMIconName	src/gui_gtk_vms.h	191;"	d
XGetWMName	src/gui_gtk_vms.h	194;"	d
XGetWMNormalHints	src/gui_gtk_vms.h	195;"	d
XGetWMProtocols	src/gui_gtk_vms.h	192;"	d
XGetWindowAttributes	src/gui_gtk_vms.h	196;"	d
XGetWindowProperty	src/gui_gtk_vms.h	197;"	d
XGrabKeyboard	src/gui_gtk_vms.h	198;"	d
XGrabPointer	src/gui_gtk_vms.h	199;"	d
XGrabServer	src/gui_gtk_vms.h	200;"	d
XHeightOfScreen	src/gui_gtk_vms.h	201;"	d
XIconifyWindow	src/gui_gtk_vms.h	202;"	d
XIfEvent	src/gui_gtk_vms.h	203;"	d
XImage	src/proto.h	32;"	d
XInternAtom	src/gui_gtk_vms.h	204;"	d
XIntersectRegion	src/gui_gtk_vms.h	205;"	d
XKeycodeToKeysym	src/gui_gtk_vms.h	206;"	d
XKeysymToKeycode	src/gui_gtk_vms.h	207;"	d
XKeysymToString	src/gui_gtk_vms.h	208;"	d
XListFonts	src/gui_gtk_vms.h	209;"	d
XListFontsWithInfo	src/gui_gtk_vms.h	210;"	d
XListPixmapFormats	src/gui_gtk_vms.h	211;"	d
XListProperties	src/gui_gtk_vms.h	212;"	d
XLoadQueryFont	src/gui_gtk_vms.h	213;"	d
XLookupString	src/gui_gtk_vms.h	214;"	d
XLowerWindow	src/gui_gtk_vms.h	215;"	d
XMLent	runtime/ftplugin/xml.vim	/^command! -nargs=? XMLent call xmlcomplete#CreateEntConnection(<f-args>)$/;"	c
XMLns	runtime/ftplugin/xml.vim	/^command! -nargs=+ XMLns call xmlcomplete#CreateConnection(<f-args>)$/;"	c
XMapRaised	src/gui_gtk_vms.h	216;"	d
XMapWindow	src/gui_gtk_vms.h	217;"	d
XMatchVisualInfo	src/gui_gtk_vms.h	218;"	d
XMoveResizeWindow	src/gui_gtk_vms.h	219;"	d
XMoveWindow	src/gui_gtk_vms.h	220;"	d
XNextEvent	src/gui_gtk_vms.h	221;"	d
XOffsetRegion	src/gui_gtk_vms.h	222;"	d
XOpenDisplay	src/gui_gtk_vms.h	223;"	d
XOpenIM	src/gui_gtk_vms.h	224;"	d
XPM_DEFS	src/Make_mvc.mak	/^XPM_DEFS  = -DFEAT_XPM_W32$/;"	m
XPM_INC	src/Make_mvc.mak	/^XPM_INC	  = -I $(XPM)\\include$/;"	m
XPM_LIB	src/Make_mvc.mak	/^XPM_LIB   = $(XPM)\\lib\\libXpm.lib$/;"	m
XPM_OBJ	src/Make_mvc.mak	/^XPM_OBJ   = $(OBJDIR)\/xpm_w32.obj$/;"	m
XP_BS_NONE	src/structs.h	469;"	d
XP_BS_ONE	src/structs.h	470;"	d
XP_BS_THREE	src/structs.h	471;"	d
XParseColor	src/gui_gtk_vms.h	225;"	d
XParseGeometry	src/gui_gtk_vms.h	226;"	d
XPeekEvent	src/gui_gtk_vms.h	227;"	d
XPending	src/gui_gtk_vms.h	228;"	d
XPointInRegion	src/gui_gtk_vms.h	229;"	d
XPolygonRegion	src/gui_gtk_vms.h	230;"	d
XPutBackEvent	src/gui_gtk_vms.h	231;"	d
XPutImage	src/gui_gtk_vms.h	232;"	d
XQueryColor	src/gui_gtk_vms.h	234;"	d
XQueryColors	src/gui_gtk_vms.h	235;"	d
XQueryExtension	src/gui_gtk_vms.h	236;"	d
XQueryPointer	src/gui_gtk_vms.h	237;"	d
XQueryTree	src/gui_gtk_vms.h	238;"	d
XRaiseWindow	src/gui_gtk_vms.h	239;"	d
XReconfigureWMWindow	src/gui_gtk_vms.h	240;"	d
XRectInRegion	src/gui_gtk_vms.h	241;"	d
XRefreshKeyboardMapping	src/gui_gtk_vms.h	242;"	d
XReparentWindow	src/gui_gtk_vms.h	243;"	d
XResizeWindow	src/gui_gtk_vms.h	244;"	d
XRestackWindows	src/gui_gtk_vms.h	245;"	d
XRootWindow	src/gui_gtk_vms.h	233;"	d
XRootWindowOfScreen	src/gui_gtk_vms.h	246;"	d
XSUBPP	src/Make_mvc.mak	/^XSUBPP = $(PERL)\\lib\\ExtUtils\\xsubpp$/;"	m
XSUBPP_TYPEMAP	src/Make_mvc.mak	/^XSUBPP_TYPEMAP = $(PERL)\\lib\\ExtUtils\\typemap$/;"	m
XScreenNumberOfScreen	src/gui_gtk_vms.h	247;"	d
XSelectAsyncEvent	src/gui_gtk_vms.h	248;"	d
XSelectAsyncInput	src/gui_gtk_vms.h	249;"	d
XSelectInput	src/gui_gtk_vms.h	250;"	d
XSendEvent	src/gui_gtk_vms.h	251;"	d
XServerVendor	src/gui_gtk_vms.h	252;"	d
XSetBackground	src/gui_gtk_vms.h	253;"	d
XSetClassHint	src/gui_gtk_vms.h	254;"	d
XSetClipMask	src/gui_gtk_vms.h	255;"	d
XSetClipOrigin	src/gui_gtk_vms.h	256;"	d
XSetClipRectangles	src/gui_gtk_vms.h	257;"	d
XSetCloseDownMode	src/gui_gtk_vms.h	258;"	d
XSetCommand	src/gui_gtk_vms.h	259;"	d
XSetDashes	src/gui_gtk_vms.h	260;"	d
XSetErrorHandler	src/gui_gtk_vms.h	261;"	d
XSetFillStyle	src/gui_gtk_vms.h	262;"	d
XSetFont	src/gui_gtk_vms.h	263;"	d
XSetForeground	src/gui_gtk_vms.h	264;"	d
XSetFunction	src/gui_gtk_vms.h	265;"	d
XSetGraphicsExposures	src/gui_gtk_vms.h	266;"	d
XSetICFocus	src/gui_gtk_vms.h	267;"	d
XSetICValues	src/gui_gtk_vms.h	268;"	d
XSetIOErrorHandler	src/gui_gtk_vms.h	269;"	d
XSetInputFocus	src/gui_gtk_vms.h	270;"	d
XSetLineAttributes	src/gui_gtk_vms.h	271;"	d
XSetLocaleModifiers	src/gui_gtk_vms.h	272;"	d
XSetNormalHints	src/gui_gtk_vms.h	273;"	d
XSetRegion	src/gui_gtk_vms.h	274;"	d
XSetSelectionOwner	src/gui_gtk_vms.h	275;"	d
XSetStipple	src/gui_gtk_vms.h	276;"	d
XSetSubwindowMode	src/gui_gtk_vms.h	277;"	d
XSetTSOrigin	src/gui_gtk_vms.h	278;"	d
XSetTile	src/gui_gtk_vms.h	279;"	d
XSetTransientForHint	src/gui_gtk_vms.h	280;"	d
XSetWMColormapWindows	src/gui_gtk_vms.h	281;"	d
XSetWMHints	src/gui_gtk_vms.h	282;"	d
XSetWMIconName	src/gui_gtk_vms.h	283;"	d
XSetWMName	src/gui_gtk_vms.h	284;"	d
XSetWMNormalHints	src/gui_gtk_vms.h	285;"	d
XSetWMProperties	src/gui_gtk_vms.h	286;"	d
XSetWMProtocols	src/gui_gtk_vms.h	287;"	d
XSetWindowBackground	src/gui_gtk_vms.h	288;"	d
XSetWindowBackgroundPixmap	src/gui_gtk_vms.h	289;"	d
XSetWindowColormap	src/gui_gtk_vms.h	290;"	d
XShapeCombineMask	src/gui_gtk_vms.h	291;"	d
XShapeCombineRectangles	src/gui_gtk_vms.h	292;"	d
XShapeGetRectangles	src/gui_gtk_vms.h	293;"	d
XShrinkRegion	src/gui_gtk_vms.h	294;"	d
XStoreBuffer	src/gui_gtk_vms.h	295;"	d
XStoreColor	src/gui_gtk_vms.h	296;"	d
XStoreColors	src/gui_gtk_vms.h	297;"	d
XStoreName	src/gui_gtk_vms.h	298;"	d
XStringToKeysym	src/gui_gtk_vms.h	299;"	d
XSubtractRegion	src/gui_gtk_vms.h	300;"	d
XSupportsLocale	src/gui_gtk_vms.h	301;"	d
XSync	src/gui_gtk_vms.h	302;"	d
XSynchronize	src/gui_gtk_vms.h	303;"	d
XTFREE	src/gui_gtk_vms.h	/^extern void XTFREE(char*);$/;"	p	signature:(char*)
XT_LEN	src/term.c	5458;"	d	file:
XT_TRACE_DELAY	src/os_unix.c	166;"	d	file:
XTextExtents	src/gui_gtk_vms.h	304;"	d
XTextExtents16	src/gui_gtk_vms.h	305;"	d
XTextWidth	src/gui_gtk_vms.h	306;"	d
XTextWidth16	src/gui_gtk_vms.h	307;"	d
XTranslateCoordinates	src/gui_gtk_vms.h	308;"	d
XUndefineCursor	src/gui_gtk_vms.h	309;"	d
XUngrabKeyboard	src/gui_gtk_vms.h	310;"	d
XUngrabPointer	src/gui_gtk_vms.h	311;"	d
XUngrabServer	src/gui_gtk_vms.h	312;"	d
XUnionRectWithRegion	src/gui_gtk_vms.h	313;"	d
XUnionRegion	src/gui_gtk_vms.h	314;"	d
XUnmapWindow	src/gui_gtk_vms.h	315;"	d
XUnsetICFocus	src/gui_gtk_vms.h	317;"	d
XVaCreateNestedList	src/gui_gtk_vms.h	318;"	d
XVisualIDFromVisual	src/gui_gtk_vms.h	319;"	d
XWarpPointer	src/gui_gtk_vms.h	320;"	d
XWidthOfScreen	src/gui_gtk_vms.h	321;"	d
XWindowEvent	src/gui_gtk_vms.h	322;"	d
XWithdrawWindow	src/gui_gtk_vms.h	323;"	d
XXorRegion	src/gui_gtk_vms.h	324;"	d
X_2_COL	src/gui.h	114;"	d
X_2_COL	src/gui.h	119;"	d
X_CFLAGS	src/auto/config.mk	/^X_CFLAGS	=  $/;"	m
X_DISPLAY	src/vim.h	2085;"	d
X_DISPLAY	src/vim.h	2087;"	d
X_DISPLAY	src/vim.h	2092;"	d
X_DISPLAY	src/vim.h	2094;"	d
X_DISPLAY	src/vim.h	2097;"	d
X_EXTRA_LIBS	src/auto/config.mk	/^X_EXTRA_LIBS	=  -lXdmcp -lSM -lICE$/;"	m
X_LIBS	src/auto/config.mk	/^X_LIBS		= -lXt -lX11$/;"	m
X_LIBS_DIR	src/auto/config.mk	/^X_LIBS_DIR	=  $/;"	m
X_LOCALE	src/os_vms_conf.h	190;"	d
X_PRE_LIBS	src/auto/config.mk	/^X_PRE_LIBS	=  -lSM -lICE$/;"	m
Xcheck	src/testdir/test49.vim	/^    function! Xcheck()$/;"	f
Xcheck	src/testdir/test49.vim	/^com! -count	    Xcheck	let Xresult = "*** Test " .$/;"	c
Xcomment	src/testdir/test49.vim	/^    function! Xcomment(num)$/;"	f
Xf86confdeclopt	runtime/syntax/xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained nextgroup=xf86confValue,xf86confComment skipwhite$/;"	c
Xf86confdeclopt	runtime/syntax/xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained$/;"	c
XgCreateEPushButtonWidget	src/gui_xmebw.h	/^extern Widget XgCreateEPushButtonWidget(Widget, char *, ArgList, Cardinal);$/;"	p	signature:(Widget, char *, ArgList, Cardinal)
Xloop	src/testdir/test49.vim	/^    com! -count=1 -bar  Xloop	exec "!echo " . (g:Xnext * <count>) . " >>" .$/;"	c
Xloop	src/testdir/test49.vim	/^    com! -count=1 -bar  Xloop	let g:Xpath = g:Xpath + g:Xnext * <count>$/;"	c
Xloop	src/testdir/test49.vim	/^    function! Xloop()$/;"	f
XloopINIT	src/testdir/test49.vim	/^		  \\ XloopINIT	let g:Xnext = <count> |$/;"	c
XloopNEXT	src/testdir/test49.vim	/^com!		    XloopNEXT	let g:Xnext = g:Xnext *$/;"	c
XmAddProtocolCallback	src/gui_gtk_vms.h	325;"	d
XmAddProtocols	src/gui_gtk_vms.h	326;"	d
XmBOTTOM	src/gui_xmebw.h	58;"	d
XmCLocation	src/gui_xmebw.h	38;"	d
XmCShift	src/gui_xmebw.h	31;"	d
XmChangeColor	src/gui_gtk_vms.h	327;"	d
XmClipboardCopy	src/gui_gtk_vms.h	328;"	d
XmClipboardEndCopy	src/gui_gtk_vms.h	329;"	d
XmClipboardInquireLength	src/gui_gtk_vms.h	330;"	d
XmClipboardLock	src/gui_gtk_vms.h	331;"	d
XmClipboardRetrieve	src/gui_gtk_vms.h	332;"	d
XmClipboardStartCopy	src/gui_gtk_vms.h	333;"	d
XmClipboardUnlock	src/gui_gtk_vms.h	334;"	d
XmCreateArrowButton	src/gui_gtk_vms.h	335;"	d
XmCreateArrowButtonGadget	src/gui_gtk_vms.h	336;"	d
XmCreateCascadeButton	src/gui_gtk_vms.h	337;"	d
XmCreateDialogShell	src/gui_gtk_vms.h	338;"	d
XmCreateDragIcon	src/gui_gtk_vms.h	339;"	d
XmCreateDrawingArea	src/gui_gtk_vms.h	340;"	d
XmCreateDrawnButton	src/gui_gtk_vms.h	341;"	d
XmCreateFileSelectionBox	src/gui_gtk_vms.h	342;"	d
XmCreateFileSelectionDialog	src/gui_gtk_vms.h	343;"	d
XmCreateForm	src/gui_gtk_vms.h	344;"	d
XmCreateFormDialog	src/gui_gtk_vms.h	345;"	d
XmCreateFrame	src/gui_gtk_vms.h	346;"	d
XmCreateInformationDialog	src/gui_gtk_vms.h	347;"	d
XmCreateLabelGadget	src/gui_gtk_vms.h	348;"	d
XmCreateMainWindow	src/gui_gtk_vms.h	349;"	d
XmCreateMenuBar	src/gui_gtk_vms.h	350;"	d
XmCreateMessageBox	src/gui_gtk_vms.h	351;"	d
XmCreateMessageDialog	src/gui_gtk_vms.h	352;"	d
XmCreateOptionMenu	src/gui_gtk_vms.h	353;"	d
XmCreatePanedWindow	src/gui_gtk_vms.h	354;"	d
XmCreatePopupMenu	src/gui_gtk_vms.h	355;"	d
XmCreatePromptDialog	src/gui_gtk_vms.h	356;"	d
XmCreatePulldownMenu	src/gui_gtk_vms.h	357;"	d
XmCreatePushButton	src/gui_gtk_vms.h	358;"	d
XmCreatePushButtonGadget	src/gui_gtk_vms.h	359;"	d
XmCreateQuestionDialog	src/gui_gtk_vms.h	360;"	d
XmCreateRadioBox	src/gui_gtk_vms.h	361;"	d
XmCreateRowColumn	src/gui_gtk_vms.h	362;"	d
XmCreateScale	src/gui_gtk_vms.h	363;"	d
XmCreateScrollBar	src/gui_gtk_vms.h	364;"	d
XmCreateScrolledList	src/gui_gtk_vms.h	365;"	d
XmCreateScrolledText	src/gui_gtk_vms.h	366;"	d
XmCreateScrolledWindow	src/gui_gtk_vms.h	367;"	d
XmCreateSelectionDialog	src/gui_gtk_vms.h	368;"	d
XmCreateSeparator	src/gui_gtk_vms.h	369;"	d
XmCreateSeparatorGadget	src/gui_gtk_vms.h	370;"	d
XmCreateTemplateDialog	src/gui_gtk_vms.h	371;"	d
XmCreateText	src/gui_gtk_vms.h	372;"	d
XmCreateTextField	src/gui_gtk_vms.h	373;"	d
XmCreateToggleButton	src/gui_gtk_vms.h	374;"	d
XmCreateToggleButtonGadget	src/gui_gtk_vms.h	375;"	d
XmDragStart	src/gui_gtk_vms.h	376;"	d
XmDropSiteRegister	src/gui_gtk_vms.h	377;"	d
XmDropSiteUnregister	src/gui_gtk_vms.h	378;"	d
XmDropSiteUpdate	src/gui_gtk_vms.h	379;"	d
XmDropTransferStart	src/gui_gtk_vms.h	380;"	d
XmEnhancedButtonClassPart	src/gui_xmebwp.h	/^} XmEnhancedButtonClassPart;$/;"	t	typeref:struct:_XmEnhancedButtonClassPart
XmEnhancedButtonClassRec	src/gui_xmebwp.h	/^} XmEnhancedButtonClassRec;$/;"	t	typeref:struct:__anon92
XmEnhancedButtonPart	src/gui_xmebwp.h	/^} XmEnhancedButtonPart;$/;"	t	typeref:struct:_XmEnhancedButtonPart
XmEnhancedButtonRec	src/gui_xmebwp.h	/^} XmEnhancedButtonRec;$/;"	t	typeref:struct:_XmEnhancedButtonRec
XmEnhancedButtonWidget	src/gui_xmebw.h	/^typedef struct _XmEnhancedButtonRec *XmEnhancedButtonWidget;$/;"	t	typeref:struct:_XmEnhancedButtonRec
XmEnhancedButtonWidgetClass	src/gui_xmebw.h	/^typedef struct _XmEnhancedButtonClassRec *XmEnhancedButtonWidgetClass;$/;"	t	typeref:struct:_XmEnhancedButtonClassRec
XmFOCUS_IGNORE	src/gui_xmebw.c	73;"	d	file:
XmFileSelectionBoxGetChild	src/gui_gtk_vms.h	381;"	d
XmFileSelectionDoSearch	src/gui_gtk_vms.h	382;"	d
XmFontListAppendEntry	src/gui_gtk_vms.h	383;"	d
XmFontListCopy	src/gui_gtk_vms.h	384;"	d
XmFontListCreate	src/gui_gtk_vms.h	385;"	d
XmFontListEntryCreate	src/gui_gtk_vms.h	386;"	d
XmFontListEntryFree	src/gui_gtk_vms.h	387;"	d
XmFontListEntryGetFont	src/gui_gtk_vms.h	388;"	d
XmFontListEntryGetTag	src/gui_gtk_vms.h	389;"	d
XmFontListEntryLoad	src/gui_gtk_vms.h	390;"	d
XmFontListFree	src/gui_gtk_vms.h	391;"	d
XmFontListFreeFontContext	src/gui_gtk_vms.h	392;"	d
XmFontListGetNextFont	src/gui_gtk_vms.h	393;"	d
XmFontListInitFontContext	src/gui_gtk_vms.h	394;"	d
XmFontListNextEntry	src/gui_gtk_vms.h	395;"	d
XmGetColors	src/gui_gtk_vms.h	396;"	d
XmGetFocusWidget	src/gui_gtk_vms.h	397;"	d
XmGetMenuCursor	src/gui_gtk_vms.h	398;"	d
XmGetPixmapByDepth	src/gui_gtk_vms.h	399;"	d
XmGetTearOffControl	src/gui_gtk_vms.h	400;"	d
XmGetXmDisplay	src/gui_gtk_vms.h	401;"	d
XmImMbLookupString	src/gui_gtk_vms.h	402;"	d
XmImRegister	src/gui_gtk_vms.h	403;"	d
XmImSetFocusValues	src/gui_gtk_vms.h	404;"	d
XmImSetValues	src/gui_gtk_vms.h	405;"	d
XmImUnregister	src/gui_gtk_vms.h	406;"	d
XmImUnsetFocus	src/gui_gtk_vms.h	407;"	d
XmInternAtom	src/gui_gtk_vms.h	408;"	d
XmIsEnhancedButton	src/gui_xmebw.h	61;"	d
XmIsMotifWMRunning	src/gui_gtk_vms.h	409;"	d
XmLEFT	src/gui_xmebw.h	55;"	d
XmListAddItem	src/gui_gtk_vms.h	410;"	d
XmListAddItemUnselected	src/gui_gtk_vms.h	411;"	d
XmListAddItemsUnselected	src/gui_gtk_vms.h	412;"	d
XmListDeleteAllItems	src/gui_gtk_vms.h	413;"	d
XmListDeleteItemsPos	src/gui_gtk_vms.h	414;"	d
XmListDeletePos	src/gui_gtk_vms.h	415;"	d
XmListDeselectAllItems	src/gui_gtk_vms.h	416;"	d
XmListDeselectPos	src/gui_gtk_vms.h	417;"	d
XmListGetKbdItemPos	src/gui_gtk_vms.h	418;"	d
XmListGetMatchPos	src/gui_gtk_vms.h	419;"	d
XmListGetSelectedPos	src/gui_gtk_vms.h	420;"	d
XmListPosSelected	src/gui_gtk_vms.h	421;"	d
XmListSelectItem	src/gui_gtk_vms.h	422;"	d
XmListSelectPos	src/gui_gtk_vms.h	423;"	d
XmListSetBottomPos	src/gui_gtk_vms.h	424;"	d
XmListSetItem	src/gui_gtk_vms.h	425;"	d
XmListSetKbdItemPos	src/gui_gtk_vms.h	426;"	d
XmListSetPos	src/gui_gtk_vms.h	427;"	d
XmMainWindowSetAreas	src/gui_gtk_vms.h	428;"	d
XmMenuPosition	src/gui_gtk_vms.h	429;"	d
XmMessageBoxGetChild	src/gui_gtk_vms.h	430;"	d
XmNlabelLocation	src/gui_xmebw.h	35;"	d
XmNpixmapData	src/gui_xmebw.h	42;"	d
XmNpixmapFile	src/gui_xmebw.h	46;"	d
XmNshift	src/gui_xmebw.h	28;"	d
XmOptionButtonGadget	src/gui_gtk_vms.h	431;"	d
XmOptionLabelGadget	src/gui_gtk_vms.h	432;"	d
XmProcessTraversal	src/gui_gtk_vms.h	433;"	d
XmQmotif	src/gui_gtk_vms.h	434;"	d
XmRIGHT	src/gui_xmebw.h	56;"	d
XmRemoveProtocolCallback	src/gui_gtk_vms.h	435;"	d
XmRepTypeGetId	src/gui_gtk_vms.h	436;"	d
XmRepTypeGetRecord	src/gui_gtk_vms.h	437;"	d
XmRepTypeRegister	src/gui_gtk_vms.h	438;"	d
XmRepTypeValidValue	src/gui_gtk_vms.h	439;"	d
XmScrollBarSetValues	src/gui_gtk_vms.h	440;"	d
XmScrolledWindowSetAreas	src/gui_gtk_vms.h	441;"	d
XmSelectionBoxGetChild	src/gui_gtk_vms.h	442;"	d
XmStringByteCompare	src/gui_gtk_vms.h	443;"	d
XmStringCompare	src/gui_gtk_vms.h	444;"	d
XmStringConcat	src/gui_gtk_vms.h	445;"	d
XmStringCopy	src/gui_gtk_vms.h	446;"	d
XmStringCreate	src/gui_gtk_vms.h	447;"	d
XmStringCreateLocalized	src/gui_gtk_vms.h	448;"	d
XmStringCreateLtoR	src/gui_gtk_vms.h	449;"	d
XmStringCreateSimple	src/gui_gtk_vms.h	450;"	d
XmStringDraw	src/gui_gtk_vms.h	451;"	d
XmStringDrawUnderline	src/gui_gtk_vms.h	452;"	d
XmStringExtent	src/gui_gtk_vms.h	453;"	d
XmStringFree	src/gui_gtk_vms.h	454;"	d
XmStringFreeContext	src/gui_gtk_vms.h	455;"	d
XmStringGetLtoR	src/gui_gtk_vms.h	456;"	d
XmStringGetNextComponent	src/gui_gtk_vms.h	457;"	d
XmStringGetNextSegment	src/gui_gtk_vms.h	458;"	d
XmStringInitContext	src/gui_gtk_vms.h	459;"	d
XmStringLength	src/gui_gtk_vms.h	460;"	d
XmStringLtoRCreate	src/gui_gtk_vms.h	461;"	d
XmStringNConcat	src/gui_gtk_vms.h	462;"	d
XmStringSegmentCreate	src/gui_gtk_vms.h	463;"	d
XmStringWidth	src/gui_gtk_vms.h	464;"	d
XmTOP	src/gui_xmebw.h	57;"	d
XmTextClearSelection	src/gui_gtk_vms.h	465;"	d
XmTextFieldGetEditable	src/gui_gtk_vms.h	466;"	d
XmTextFieldGetInsertionPosition	src/gui_gtk_vms.h	467;"	d
XmTextFieldGetLastPosition	src/gui_gtk_vms.h	468;"	d
XmTextFieldGetSelection	src/gui_gtk_vms.h	469;"	d
XmTextFieldGetString	src/gui_gtk_vms.h	470;"	d
XmTextFieldInsert	src/gui_gtk_vms.h	471;"	d
XmTextFieldRemove	src/gui_gtk_vms.h	472;"	d
XmTextFieldSetSelection	src/gui_gtk_vms.h	473;"	d
XmTextFieldSetString	src/gui_gtk_vms.h	474;"	d
XmTextGetCursorPosition	src/gui_gtk_vms.h	475;"	d
XmTextGetInsertionPosition	src/gui_gtk_vms.h	476;"	d
XmTextGetLastPosition	src/gui_gtk_vms.h	477;"	d
XmTextGetMaxLength	src/gui_gtk_vms.h	478;"	d
XmTextGetSelection	src/gui_gtk_vms.h	479;"	d
XmTextGetSelectionPosition	src/gui_gtk_vms.h	480;"	d
XmTextGetString	src/gui_gtk_vms.h	481;"	d
XmTextInsert	src/gui_gtk_vms.h	482;"	d
XmTextRemove	src/gui_gtk_vms.h	483;"	d
XmTextReplace	src/gui_gtk_vms.h	484;"	d
XmTextSetCursorPosition	src/gui_gtk_vms.h	485;"	d
XmTextSetHighlight	src/gui_gtk_vms.h	486;"	d
XmTextSetInsertionPosition	src/gui_gtk_vms.h	487;"	d
XmTextSetSelection	src/gui_gtk_vms.h	488;"	d
XmTextSetString	src/gui_gtk_vms.h	489;"	d
XmToggleButtonGadgetGetState	src/gui_gtk_vms.h	490;"	d
XmToggleButtonGadgetSetState	src/gui_gtk_vms.h	491;"	d
XmToggleButtonGetState	src/gui_gtk_vms.h	492;"	d
XmToggleButtonSetState	src/gui_gtk_vms.h	493;"	d
XmUpdateDisplay	src/gui_gtk_vms.h	494;"	d
XmVaCreateSimpleRadioBox	src/gui_gtk_vms.h	495;"	d
XmbDrawString	src/gui_gtk_vms.h	496;"	d
XmbLookupString	src/gui_gtk_vms.h	497;"	d
XmbResetIC	src/gui_gtk_vms.h	498;"	d
XmbSetWMProperties	src/gui_gtk_vms.h	499;"	d
XmbTextEscapement	src/gui_gtk_vms.h	500;"	d
XmbTextExtents	src/gui_gtk_vms.h	501;"	d
XmbTextListToTextProperty	src/gui_gtk_vms.h	502;"	d
XmbTextPropertyToTextList	src/gui_gtk_vms.h	503;"	d
XmeClearBorder	src/gui_xmebw.c	61;"	d	file:
XmeDrawHighlight	src/gui_xmebw.c	63;"	d	file:
XmeDrawShadows	src/gui_xmebw.c	62;"	d	file:
XmlIndentGet	runtime/indent/xml.vim	/^fun! XmlIndentGet(lnum, use_syntax_check)$/;"	f
XmlIndentSum	runtime/indent/xml.vim	/^fun! <SID>XmlIndentSum(lnum, style, add)$/;"	f
XmlIndentSynCheck	runtime/indent/xml.vim	/^fun! <SID>XmlIndentSynCheck(lnum)$/;"	f
XmlIndentWithPattern	runtime/indent/xml.vim	/^fun! <SID>XmlIndentWithPattern(line, pat)$/;"	f
XmuClientWindow	src/gui_gtk_vms.h	504;"	d
XmuPrintDefaultErrorMessage	src/gui_gtk_vms.h	505;"	d
Xout	src/testdir/test49.vim	/^com! -nargs=+	    Xout	exec 'Xoutq' <args>$/;"	c
Xoutq	src/testdir/test49.vim	/^    com! -nargs=+    Xoutq	exec "!echo @R:'" .$/;"	c
Xoutq	src/testdir/test49.vim	/^    com! -nargs=+    Xoutq	let @R = "--- Test " .$/;"	c
Xpath	src/testdir/test49.vim	/^    aug Xpath$/;"	a
Xpath	src/testdir/test49.vim	/^    com! -count -bar    Xpath	exec "!echo <count> >>" . g:ExtraVimResult$/;"	c
Xpath	src/testdir/test49.vim	/^    com! -count -bar    Xpath	let g:Xpath = g:Xpath + <count>$/;"	c
Xpath	src/testdir/test49.vim	/^    function! Xpath(loopinit)$/;"	f
Xpath	src/testdir/test49.vim	/^    let Xpath = Xpath + 2147483648			" X: 0$/;"	v
Xpath	src/testdir/test49.vim	/^    let Xpath = Xpath + 2147483648		" X: 0$/;"	v
XpathINIT	src/testdir/test49.vim	/^com!		    XpathINIT	let g:Xpath = 0$/;"	c
XrmGetDatabase	src/gui_gtk_vms.h	506;"	d
XrmGetResource	src/gui_gtk_vms.h	507;"	d
XrmInitialize	src/auto/configure	/^XrmInitialize ()$/;"	f
XrmPutStringResource	src/gui_gtk_vms.h	508;"	d
XrmQuarkToString	src/gui_gtk_vms.h	509;"	d
XrmStringToQuark	src/gui_gtk_vms.h	510;"	d
Xsum	src/testdir/test49.vim	/^    function! Xsum()$/;"	f
XtAddCallback	src/gui_gtk_vms.h	511;"	d
XtAddCallbacks	src/gui_gtk_vms.h	512;"	d
XtAddEventHandler	src/gui_gtk_vms.h	513;"	d
XtAddGrab	src/gui_gtk_vms.h	514;"	d
XtAllocateGC	src/gui_gtk_vms.h	515;"	d
XtAppAddActions	src/gui_gtk_vms.h	516;"	d
XtAppAddInput	src/gui_gtk_vms.h	517;"	d
XtAppAddTimeOut	src/gui_gtk_vms.h	518;"	d
XtAppCreateShell	src/gui_gtk_vms.h	519;"	d
XtAppInitialize	src/gui_gtk_vms.h	520;"	d
XtAppNextEvent	src/gui_gtk_vms.h	521;"	d
XtAppPeekEvent	src/gui_gtk_vms.h	522;"	d
XtAppPending	src/gui_gtk_vms.h	523;"	d
XtAppProcessEvent	src/gui_gtk_vms.h	524;"	d
XtAppSetErrorHandler	src/gui_gtk_vms.h	525;"	d
XtAppSetFallbackResources	src/gui_gtk_vms.h	526;"	d
XtAppSetWarningHandler	src/gui_gtk_vms.h	527;"	d
XtAppSetWarningMsgHandler	src/gui_gtk_vms.h	528;"	d
XtAppWarning	src/gui_gtk_vms.h	529;"	d
XtCBoldFont	src/gui_x11.c	269;"	d	file:
XtCBoldItalicFont	src/gui_x11.c	273;"	d	file:
XtCBottomShadowPixel	src/gui_at_sb.h	81;"	d
XtCItalicFont	src/gui_x11.c	271;"	d	file:
XtCLimitThumb	src/gui_at_sb.h	82;"	d
XtCMaxOfThumb	src/gui_at_sb.h	78;"	d
XtCMenuBackground	src/gui_x11.c	286;"	d	file:
XtCMenuFont	src/gui_x11.c	279;"	d	file:
XtCMenuFontSet	src/gui_x11.c	281;"	d	file:
XtCMenuForeground	src/gui_x11.c	288;"	d	file:
XtCMenuHeight	src/gui_x11.c	277;"	d	file:
XtCMinimumThumb	src/gui_at_sb.h	75;"	d
XtCScrollBackground	src/gui_x11.c	292;"	d	file:
XtCScrollForeground	src/gui_x11.c	294;"	d	file:
XtCScrollbarWidth	src/gui_x11.c	275;"	d	file:
XtCShadowWidth	src/gui_at_sb.h	79;"	d
XtCShown	src/gui_at_sb.h	76;"	d
XtCTooltipBackground	src/gui_x11.c	298;"	d	file:
XtCTooltipFont	src/gui_x11.c	302;"	d	file:
XtCTooltipForeground	src/gui_x11.c	300;"	d	file:
XtCTopOfThumb	src/gui_at_sb.h	77;"	d
XtCTopShadowPixel	src/gui_at_sb.h	80;"	d
XtCallActionProc	src/gui_gtk_vms.h	530;"	d
XtCallCallbackList	src/gui_gtk_vms.h	531;"	d
XtCallCallbacks	src/gui_gtk_vms.h	532;"	d
XtConfigureWidget	src/gui_gtk_vms.h	533;"	d
XtConvertAndStore	src/gui_gtk_vms.h	534;"	d
XtCreateApplicationContext	src/gui_gtk_vms.h	535;"	d
XtCreateManagedWidget	src/gui_gtk_vms.h	536;"	d
XtCreatePopupShell	src/gui_gtk_vms.h	537;"	d
XtCreateWidget	src/gui_gtk_vms.h	538;"	d
XtDatabase	src/gui_gtk_vms.h	539;"	d
XtDestroyWidget	src/gui_gtk_vms.h	540;"	d
XtDisownSelection	src/gui_gtk_vms.h	541;"	d
XtDispatchEvent	src/gui_gtk_vms.h	542;"	d
XtDisplayOfObject	src/gui_gtk_vms.h	543;"	d
XtDisplayStringConvWarning	src/gui_gtk_vms.h	544;"	d
XtDisplayToApplicationContext	src/gui_gtk_vms.h	545;"	d
XtFree	src/gui_gtk_vms.h	/^extern void XtFree(char*);$/;"	p	signature:(char*)
XtFree	src/gui_gtk_vms.h	546;"	d
XtGetActionKeysym	src/gui_gtk_vms.h	547;"	d
XtGetActionList	src/gui_gtk_vms.h	548;"	d
XtGetApplicationNameAndClass	src/gui_gtk_vms.h	549;"	d
XtGetApplicationResources	src/gui_gtk_vms.h	550;"	d
XtGetGC	src/gui_gtk_vms.h	551;"	d
XtGetMultiClickTime	src/gui_gtk_vms.h	552;"	d
XtGetSelectionValue	src/gui_gtk_vms.h	553;"	d
XtGetSelectionValues	src/gui_gtk_vms.h	554;"	d
XtGetSubresources	src/gui_gtk_vms.h	555;"	d
XtGetValues	src/gui_gtk_vms.h	556;"	d
XtGrabKeyboard	src/gui_gtk_vms.h	557;"	d
XtGrabPointer	src/gui_gtk_vms.h	558;"	d
XtHasCallbacks	src/gui_gtk_vms.h	559;"	d
XtInitializeWidgetClass	src/gui_gtk_vms.h	560;"	d
XtInsertEventHandler	src/gui_gtk_vms.h	561;"	d
XtIsManaged	src/gui_gtk_vms.h	562;"	d
XtIsObject	src/gui_gtk_vms.h	563;"	d
XtIsSensitive	src/gui_gtk_vms.h	564;"	d
XtIsSubclass	src/gui_gtk_vms.h	565;"	d
XtLastTimestampProcessed	src/gui_gtk_vms.h	566;"	d
XtMakeGeometryRequest	src/gui_gtk_vms.h	567;"	d
XtMakeResizeRequest	src/gui_gtk_vms.h	568;"	d
XtMalloc	src/gui_gtk_vms.h	569;"	d
XtManageChild	src/gui_gtk_vms.h	570;"	d
XtManageChildren	src/gui_gtk_vms.h	571;"	d
XtMergeArgLists	src/gui_gtk_vms.h	572;"	d
XtMoveWidget	src/gui_gtk_vms.h	573;"	d
XtName	src/gui_gtk_vms.h	574;"	d
XtNameToWidget	src/gui_gtk_vms.h	575;"	d
XtNboldFont	src/gui_x11.c	268;"	d	file:
XtNboldItalicFont	src/gui_x11.c	272;"	d	file:
XtNbottomShadowPixel	src/gui_at_sb.h	89;"	d
XtNitalicFont	src/gui_x11.c	270;"	d	file:
XtNlimitThumb	src/gui_at_sb.h	90;"	d
XtNmaxOfThumb	src/gui_at_sb.h	86;"	d
XtNmenuBackground	src/gui_x11.c	285;"	d	file:
XtNmenuFont	src/gui_x11.c	278;"	d	file:
XtNmenuFontSet	src/gui_x11.c	280;"	d	file:
XtNmenuForeground	src/gui_x11.c	287;"	d	file:
XtNmenuHeight	src/gui_x11.c	276;"	d	file:
XtNminimumThumb	src/gui_at_sb.h	84;"	d
XtNscrollBackground	src/gui_x11.c	291;"	d	file:
XtNscrollForeground	src/gui_x11.c	293;"	d	file:
XtNscrollbarWidth	src/gui_x11.c	274;"	d	file:
XtNshadowWidth	src/gui_at_sb.h	87;"	d
XtNtooltipBackground	src/gui_x11.c	297;"	d	file:
XtNtooltipFont	src/gui_x11.c	301;"	d	file:
XtNtooltipForeground	src/gui_x11.c	299;"	d	file:
XtNtopOfThumb	src/gui_at_sb.h	85;"	d
XtNtopShadowPixel	src/gui_at_sb.h	88;"	d
XtOpenDisplay	src/gui_gtk_vms.h	576;"	d
XtOverrideTranslations	src/gui_gtk_vms.h	577;"	d
XtOwnSelection	src/gui_gtk_vms.h	578;"	d
XtParent	src/gui_gtk_vms.h	579;"	d
XtParseTranslationTable	src/gui_gtk_vms.h	580;"	d
XtPopdown	src/gui_gtk_vms.h	581;"	d
XtPopup	src/gui_gtk_vms.h	582;"	d
XtQueryGeometry	src/gui_gtk_vms.h	583;"	d
XtRealizeWidget	src/gui_gtk_vms.h	584;"	d
XtRealloc	src/gui_gtk_vms.h	585;"	d
XtRegisterDrawable	src/gui_gtk_vms.h	738;"	d
XtReleaseGC	src/gui_gtk_vms.h	586;"	d
XtRemoveAllCallbacks	src/gui_gtk_vms.h	587;"	d
XtRemoveCallback	src/gui_gtk_vms.h	588;"	d
XtRemoveEventHandler	src/gui_gtk_vms.h	589;"	d
XtRemoveGrab	src/gui_gtk_vms.h	590;"	d
XtRemoveInput	src/gui_gtk_vms.h	591;"	d
XtRemoveTimeOut	src/gui_gtk_vms.h	592;"	d
XtResizeWidget	src/gui_gtk_vms.h	593;"	d
XtResolvePathname	src/gui_gtk_vms.h	594;"	d
XtSetKeyboardFocus	src/gui_gtk_vms.h	595;"	d
XtSetMappedWhenManaged	src/gui_gtk_vms.h	596;"	d
XtSetSensitive	src/gui_gtk_vms.h	597;"	d
XtSetTypeConverter	src/gui_gtk_vms.h	598;"	d
XtSetValues	src/gui_gtk_vms.h	599;"	d
XtShellStrings	src/gui_gtk_vms.h	600;"	d
XtStrings	src/gui_gtk_vms.h	601;"	d
XtToolkitInitialize	src/gui_gtk_vms.h	602;"	d
XtTranslateCoords	src/gui_gtk_vms.h	603;"	d
XtTranslateKeycode	src/gui_gtk_vms.h	604;"	d
XtUngrabKeyboard	src/gui_gtk_vms.h	605;"	d
XtUngrabPointer	src/gui_gtk_vms.h	606;"	d
XtUnmanageChild	src/gui_gtk_vms.h	607;"	d
XtUnmanageChildren	src/gui_gtk_vms.h	608;"	d
XtUnrealizeWidget	src/gui_gtk_vms.h	609;"	d
XtUnregisterDrawable	src/gui_gtk_vms.h	739;"	d
XtVaAppCreateShell	src/gui_gtk_vms.h	610;"	d
XtVaCreateManagedWidget	src/gui_gtk_vms.h	611;"	d
XtVaCreatePopupShell	src/gui_gtk_vms.h	612;"	d
XtVaCreateWidget	src/gui_gtk_vms.h	613;"	d
XtVaGetValues	src/gui_gtk_vms.h	614;"	d
XtVaSetValues	src/gui_gtk_vms.h	615;"	d
XtWarning	src/gui_gtk_vms.h	616;"	d
XtWidgetToApplicationContext	src/gui_gtk_vms.h	617;"	d
XtWindow	src/gui_gtk_vms.h	618;"	d
XtWindowOfObject	src/gui_gtk_vms.h	619;"	d
XtWindowToWidget	src/gui_gtk_vms.h	620;"	d
Xtest	src/testdir/test49.vim	/^let Xtest = 1$/;"	v
XwcDrawString	src/gui_gtk_vms.h	621;"	d
XwcFreeStringList	src/gui_gtk_vms.h	622;"	d
XwcTextEscapement	src/gui_gtk_vms.h	623;"	d
XwcTextExtents	src/gui_gtk_vms.h	624;"	d
XwcTextListToTextProperty	src/gui_gtk_vms.h	625;"	d
XwcTextPropertyToTextList	src/gui_gtk_vms.h	626;"	d
XxdBack	runtime/menu.vim	/^func! s:XxdBack()$/;"	f
XxdConv	runtime/menu.vim	/^func! s:XxdConv()$/;"	f
XxdFind	runtime/menu.vim	/^func! s:XxdFind()$/;"	f
Y	runtime/macros/hanoi/hanoi.vim	/^map Y o0123456789Z0q$/;"	m
YE	src/farsi.h	142;"	d
YEE	src/farsi.h	145;"	d
YEE_	src/farsi.h	63;"	d
YE_	src/farsi.h	64;"	d
Y_2_ROW	src/gui.h	115;"	d
Y_2_ROW	src/gui.h	123;"	d
Z	runtime/macros/maze/maze.c	/^char*M,A,Z,E=40,J[40],T[40];main(C){for(*J=A=scanf(M="%d",&C);$/;"	v
Z	runtime/macros/maze/mazeansi.c	/^char*M,A,Z,E=40,J[80],T[3];main(C){for(M=J+E,*J=A=scanf("%d",&$/;"	v
Z	runtime/macros/maze/mazeclean.c	/^char *M, A, Z, E = 40, line[80], T[3];$/;"	v
ZAD	src/farsi.h	128;"	d
ZAL	src/farsi.h	121;"	d
ZAP_BITALIC	src/gui_riscos.c	131;"	d	file:
ZAP_BOLD	src/gui_riscos.c	129;"	d	file:
ZAP_ITALIC	src/gui_riscos.c	130;"	d	file:
ZAP_NORMAL	src/gui_riscos.c	128;"	d	file:
ZAP_STYLES	src/gui_riscos.c	132;"	d	file:
ZCLOSE	src/regexp.c	213;"	d	file:
ZE	src/farsi.h	123;"	d
ZERO	src/testdir/test49.vim	/^function! ZERO()$/;"	f
ZEROR	src/ex_cmds.h	46;"	d
ZERO_BL	src/memline.c	/^typedef struct block0		ZERO_BL;    \/* contents of the first block *\/$/;"	t	typeref:struct:block0	file:
ZOPEN	src/regexp.c	211;"	d	file:
ZREF	src/regexp.c	214;"	d	file:
ZipBrowseSelect	runtime/autoload/zip.vim	/^fun! s:ZipBrowseSelect()$/;"	f
["	runtime/ftplugin/vim.vim	/^nnoremap <silent><buffer> [" :call search('\\%(^\\s*".*\\n\\)\\%(^\\s*"\\)\\@!', "bW")<CR>$/;"	m
["	runtime/ftplugin/vim.vim	/^vnoremap <silent><buffer> [" :<C-U>exe "normal! gv"<Bar>call search('\\%(^\\s*".*\\n\\)\\%(^\\s*"\\)\\@!', "bW")<CR>$/;"	m
[#	runtime/ftplugin/hamster.vim	/^noremap <silent><buffer> [# :call search('^\\s*#\\@!', "bW")<CR>$/;"	m
[%	runtime/macros/matchit.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	m
[%	runtime/macros/matchit.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	m
[%	runtime/macros/matchit.vim	/^vmap [% <Esc>[%m'gv``$/;"	m
[M	runtime/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','b','n')<CR>$/;"	m
[[	runtime/ftplugin/abaqus.vim	/^noremap <silent><buffer> [[ ?^\\*\\a<CR>:nohlsearch<CR>$/;"	m
[[	runtime/ftplugin/cobol.vim	/^    noremap <silent> <buffer> [[ m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z0-9-]\\+\\s\\+\\%(division\\<Bar>section\\)\\s*\\.','bW')<CR>$/;"	m
[[	runtime/ftplugin/hamster.vim	/^noremap <silent><buffer> [[ :call search('^\\s*sub\\>', "bW")<CR>$/;"	m
[[	runtime/ftplugin/python.vim	/^nnoremap <silent> <buffer> [[ :call <SID>Python_jump('?^\\(class\\\\|def\\)')<cr>$/;"	m
[[	runtime/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[[	runtime/ftplugin/sql.vim	/^nmap <buffer> <silent> [[ :call search('\\\\c^\\\\s*begin\\\\>', 'bW' )<CR>$/;"	m
[[	runtime/ftplugin/sql.vim	/^vmap <buffer> <silent> [[ :<C-U>exec "normal! gv"<Bar>call search('\\\\c^\\\\s*begin\\\\>', 'bW' )<CR>$/;"	m
[[	runtime/ftplugin/vb.vim	/^nnoremap <buffer> <silent> [[ :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(function\\\\|sub\\)', 'bW')<cr>$/;"	m
[[	runtime/ftplugin/vhdl.vim	/^noremap  <buffer><silent>[[ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\%(\\\\<end\\\\s\\\\+\\\\)\\\\@<!\\\\<".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%^","bW")')<CR>$/;"	m
[[	runtime/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>[[ :<C-u>cal <SID>CountWrapper('[[')<CR>$/;"	m
[[	runtime/ftplugin/vim.vim	/^nnoremap <silent><buffer> [[ m':call search('^\\s*fu\\%[nction]\\>', "bW")<CR>$/;"	m
[[	runtime/ftplugin/vim.vim	/^vnoremap <silent><buffer> [[ m':<C-U>exe "normal! gv"<Bar>call search('^\\s*fu\\%[nction]\\>', "bW")<CR>$/;"	m
[]	runtime/ftplugin/cobol.vim	/^    noremap <silent> <buffer> [] m':call <SID>toend('b')<CR>$/;"	m
[]	runtime/ftplugin/hamster.vim	/^noremap <silent><buffer> [] :call search('^\\s*endsub\\>', "bW")<CR>$/;"	m
[]	runtime/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[]	runtime/ftplugin/sql.vim	/^nmap <buffer> <silent> [] :call search('\\\\c^\\\\s*end\\\\W*$', 'bW' )<CR>$/;"	m
[]	runtime/ftplugin/sql.vim	/^vmap <buffer> <silent> [] :<C-U>exec "normal! gv"<Bar>call search('\\\\c^\\\\s*end\\\\W*$', 'bW' )<CR>$/;"	m
[]	runtime/ftplugin/vb.vim	/^nnoremap <buffer> <silent> [] :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', 'bW')<cr>$/;"	m
[]	runtime/ftplugin/vhdl.vim	/^noremap  <buffer><silent>[] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\<end\\\\s\\\\+".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%^","bW")')<CR>$/;"	m
[]	runtime/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>[] :<C-u>cal <SID>CountWrapper('[]')<CR>$/;"	m
[]	runtime/ftplugin/vim.vim	/^nnoremap <silent><buffer> [] m':call search('^\\s*endf*\\%[unction]\\>', "bW")<CR>$/;"	m
[]	runtime/ftplugin/vim.vim	/^vnoremap <silent><buffer> [] m':<C-U>exe "normal! gv"<Bar>call search('^\\s*endf*\\%[unction]\\>', "bW")<CR>$/;"	m
[m	runtime/ftplugin/python.vim	/^nnoremap <silent> <buffer> [m :call <SID>Python_jump('?^\\s*\\(class\\\\|def\\)')<cr>$/;"	m
[m	runtime/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','b','n')<CR>$/;"	m
]"	runtime/ftplugin/vim.vim	/^nnoremap <silent><buffer> ]" :call search('^\\(\\s*".*\\n\\)\\@<!\\(\\s*"\\)', "W")<CR>$/;"	m
]"	runtime/ftplugin/vim.vim	/^vnoremap <silent><buffer> ]" :<C-U>exe "normal! gv"<Bar>call search('^\\(\\s*".*\\n\\)\\@<!\\(\\s*"\\)', "W")<CR>$/;"	m
]#	runtime/ftplugin/hamster.vim	/^noremap <silent><buffer> ]# :call search('^\\s*#\\@!', "W")<CR>$/;"	m
]%	runtime/macros/matchit.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W",  "n") <CR>$/;"	m
]%	runtime/macros/matchit.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W",  "o") <CR>$/;"	m
]%	runtime/macros/matchit.vim	/^vmap ]% <Esc>]%m'gv``$/;"	m
]M	runtime/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','','n')<CR>$/;"	m
][	runtime/ftplugin/cobol.vim	/^    noremap <silent> <buffer> ][ m':call <SID>toend('')<CR>$/;"	m
][	runtime/ftplugin/hamster.vim	/^noremap <silent><buffer> ][ :call search('^\\s*endsub\\>', "W")<CR>$/;"	m
][	runtime/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
][	runtime/ftplugin/sql.vim	/^nmap <buffer> <silent> ][ :call search('\\\\c^\\\\s*end\\\\W*$', 'W' )<CR>$/;"	m
][	runtime/ftplugin/sql.vim	/^vmap <buffer> <silent> ][ :<C-U>exec "normal! gv"<Bar>call search('\\\\c^\\\\s*end\\\\W*$', 'W' )<CR>$/;"	m
][	runtime/ftplugin/vb.vim	/^nnoremap <buffer> <silent> ][ :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', 'W')<cr>$/;"	m
][	runtime/ftplugin/vhdl.vim	/^noremap  <buffer><silent>][ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\<end\\\\s\\\\+".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%$","W")')<CR>$/;"	m
][	runtime/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>][ :<C-u>cal <SID>CountWrapper('][')<CR>$/;"	m
][	runtime/ftplugin/vim.vim	/^nnoremap <silent><buffer> ][ m':call search('^\\s*endf*\\%[unction]\\>', "W")<CR>$/;"	m
][	runtime/ftplugin/vim.vim	/^vnoremap <silent><buffer> ][ m':<C-U>exe "normal! gv"<Bar>call search('^\\s*endf*\\%[unction]\\>', "W")<CR>$/;"	m
]]	runtime/ftplugin/abaqus.vim	/^noremap <silent><buffer> ]] \/^\\*\\a<CR>:nohlsearch<CR>$/;"	m
]]	runtime/ftplugin/cobol.vim	/^    noremap <silent> <buffer> ]] m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z0-9-]\\+\\s\\+\\%(division\\<Bar>section\\)\\.','W')<CR>$/;"	m
]]	runtime/ftplugin/hamster.vim	/^noremap <silent><buffer> ]] :call search('^\\s*sub\\>', "W")<CR>$/;"	m
]]	runtime/ftplugin/python.vim	/^nnoremap <silent> <buffer> ]] :call <SID>Python_jump('\/^\\(class\\\\|def\\)')<cr>$/;"	m
]]	runtime/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]]	runtime/ftplugin/sql.vim	/^nmap <buffer> <silent> ]] :call search('\\\\c^\\\\s*begin\\\\>', 'W' )<CR>$/;"	m
]]	runtime/ftplugin/sql.vim	/^vmap <buffer> <silent> ]] :<C-U>exec "normal! gv"<Bar>call search('\\\\c^\\\\s*begin\\\\>', 'W' )<CR>$/;"	m
]]	runtime/ftplugin/vb.vim	/^nnoremap <buffer> <silent> ]] :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(function\\\\|sub\\)', 'W')<cr>$/;"	m
]]	runtime/ftplugin/vhdl.vim	/^noremap  <buffer><silent>]] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\%(\\\\<end\\\\s\\\\+\\\\)\\\\@<!\\\\<".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%$","W")')<CR>$/;"	m
]]	runtime/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>]] :<C-u>cal <SID>CountWrapper(']]')<CR>$/;"	m
]]	runtime/ftplugin/vim.vim	/^nnoremap <silent><buffer> ]] m':call search('^\\s*fu\\%[nction]\\>', "W")<CR>$/;"	m
]]	runtime/ftplugin/vim.vim	/^vnoremap <silent><buffer> ]] m':<C-U>exe "normal! gv"<Bar>call search('^\\s*fu\\%[nction]\\>', "W")<CR>$/;"	m
]m	runtime/ftplugin/python.vim	/^nnoremap <silent> <buffer> ]m :call <SID>Python_jump('\/^\\s*\\(class\\\\|def\\)')<cr>$/;"	m
]m	runtime/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','','n')<CR>$/;"	m
_	src/GvimExt/gvimext.cpp	130;"	d	file:
_	src/GvimExt/gvimext.cpp	132;"	d	file:
_	src/gui_gtk.c	45;"	d	file:
_	src/gui_gtk_x11.c	29;"	d	file:
_	src/if_ruby.c	74;"	d	file:
_	src/vim.h	2131;"	d
_	src/vim.h	572;"	d
_	src/vim.h	582;"	d
_	src/vim.h	590;"	d
_APS_NEXT_COMMAND_VALUE	src/GvimExt/resource.h	11;"	d
_APS_NEXT_COMMAND_VALUE	src/VisVim/Resource.h	26;"	d
_APS_NEXT_CONTROL_VALUE	src/GvimExt/resource.h	12;"	d
_APS_NEXT_CONTROL_VALUE	src/VisVim/Resource.h	27;"	d
_APS_NEXT_RESOURCE_VALUE	src/GvimExt/resource.h	10;"	d
_APS_NEXT_RESOURCE_VALUE	src/VisVim/Resource.h	25;"	d
_APS_NEXT_SYMED_VALUE	src/GvimExt/resource.h	13;"	d
_APS_NEXT_SYMED_VALUE	src/VisVim/Resource.h	28;"	d
_AYN	src/farsi.h	42;"	d
_AYN_	src/farsi.h	43;"	d
_BE	src/farsi.h	30;"	d
_CHE	src/farsi.h	35;"	d
_CRT_NONSTDC_NO_DEPRECATE	src/GvimExt/gvimext.h	39;"	d
_CRT_NONSTDC_NO_DEPRECATE	src/dosinst.h	16;"	d
_CRT_NONSTDC_NO_DEPRECATE	src/os_win32.h	21;"	d
_CRT_NONSTDC_NO_DEPRECATE	src/vim.h	127;"	d
_CRT_NONSTDC_NO_DEPRECATE	src/vimio.h	13;"	d
_CRT_NONSTDC_NO_DEPRECATE	src/xxd/xxd.c	65;"	d	file:
_CRT_SECURE_NO_DEPRECATE	src/GvimExt/gvimext.h	38;"	d
_CRT_SECURE_NO_DEPRECATE	src/dosinst.h	15;"	d
_CRT_SECURE_NO_DEPRECATE	src/os_win32.h	20;"	d
_CRT_SECURE_NO_DEPRECATE	src/vim.h	126;"	d
_CRT_SECURE_NO_DEPRECATE	src/vimio.h	12;"	d
_CRT_SECURE_NO_DEPRECATE	src/xxd/xxd.c	64;"	d	file:
_DEBUG	src/if_python.c	34;"	d	file:
_DEBUG	src/if_python3.c	42;"	d	file:
_DEBUG	src/vim.h	2137;"	d
_DialogInfo	src/gui_gtk.c	/^typedef struct _DialogInfo$/;"	s	file:
_DialogInfo::dialog	src/gui_gtk.c	/^    GtkDialog	*dialog;	    \/* Widget of the dialog *\/$/;"	m	struct:_DialogInfo	file:	access:public
_DialogInfo::ignore_enter	src/gui_gtk.c	/^    int		ignore_enter;	    \/* no default button, ignore "Enter" *\/$/;"	m	struct:_DialogInfo	file:	access:public
_DialogInfo::noalt	src/gui_gtk.c	/^    int		noalt;		    \/* accept accelerators without Alt *\/$/;"	m	struct:_DialogInfo	file:	access:public
_DllVersionInfo	src/gui_w32.c	/^typedef struct _DllVersionInfo$/;"	s	file:
_DllVersionInfo::cbSize	src/gui_w32.c	/^    DWORD cbSize;$/;"	m	struct:_DllVersionInfo	file:	access:public
_DllVersionInfo::dwBuildNumber	src/gui_w32.c	/^    DWORD dwBuildNumber;$/;"	m	struct:_DllVersionInfo	file:	access:public
_DllVersionInfo::dwMajorVersion	src/gui_w32.c	/^    DWORD dwMajorVersion;$/;"	m	struct:_DllVersionInfo	file:	access:public
_DllVersionInfo::dwMinorVersion	src/gui_w32.c	/^    DWORD dwMinorVersion;$/;"	m	struct:_DllVersionInfo	file:	access:public
_DllVersionInfo::dwPlatformID	src/gui_w32.c	/^    DWORD dwPlatformID;$/;"	m	struct:_DllVersionInfo	file:	access:public
_DuringSizing	src/gui_w32.c	/^_DuringSizing($/;"	f	file:	signature:( UINT fwSide, LPRECT lprc)
_FE	src/farsi.h	48;"	d
_FILE_OFFSET_BITS	src/auto/config.h	217;"	d
_GAF	src/farsi.h	51;"	d
_GHAF	src/farsi.h	49;"	d
_GHAYN	src/farsi.h	45;"	d
_GHAYN_	src/farsi.h	46;"	d
_GtkForm	src/gui_gtk_f.h	/^struct _GtkForm$/;"	s
_GtkForm::bin_window	src/gui_gtk_f.h	/^    GdkWindow *bin_window;$/;"	m	struct:_GtkForm	access:public
_GtkForm::children	src/gui_gtk_f.h	/^    GList *children;$/;"	m	struct:_GtkForm	access:public
_GtkForm::configure_serial	src/gui_gtk_f.h	/^    gulong configure_serial;$/;"	m	struct:_GtkForm	access:public
_GtkForm::container	src/gui_gtk_f.h	/^    GtkContainer container;$/;"	m	struct:_GtkForm	access:public
_GtkForm::freeze_count	src/gui_gtk_f.h	/^    gint freeze_count;$/;"	m	struct:_GtkForm	access:public
_GtkForm::height	src/gui_gtk_f.h	/^    guint height;$/;"	m	struct:_GtkForm	access:public
_GtkForm::visibility	src/gui_gtk_f.h	/^    GdkVisibilityState visibility;$/;"	m	struct:_GtkForm	access:public
_GtkForm::width	src/gui_gtk_f.h	/^    guint width;$/;"	m	struct:_GtkForm	access:public
_GtkFormChild	src/gui_gtk_f.c	/^struct _GtkFormChild$/;"	s	file:
_GtkFormChild::mapped	src/gui_gtk_f.c	/^    gint mapped;$/;"	m	struct:_GtkFormChild	file:	access:public
_GtkFormChild::widget	src/gui_gtk_f.c	/^    GtkWidget *widget;$/;"	m	struct:_GtkFormChild	file:	access:public
_GtkFormChild::window	src/gui_gtk_f.c	/^    GdkWindow *window;$/;"	m	struct:_GtkFormChild	file:	access:public
_GtkFormChild::x	src/gui_gtk_f.c	/^    gint x;		\/* relative subwidget x position *\/$/;"	m	struct:_GtkFormChild	file:	access:public
_GtkFormChild::y	src/gui_gtk_f.c	/^    gint y;		\/* relative subwidget y position *\/$/;"	m	struct:_GtkFormChild	file:	access:public
_GtkFormClass	src/gui_gtk_f.h	/^struct _GtkFormClass$/;"	s
_GtkFormClass::parent_class	src/gui_gtk_f.h	/^    GtkContainerClass parent_class;$/;"	m	struct:_GtkFormClass	access:public
_HE	src/farsi.h	56;"	d
_HE_	src/farsi.h	57;"	d
_HE_J	src/farsi.h	36;"	d
_HMONITOR	src/gui_w32.c	/^typedef HANDLE _HMONITOR;$/;"	t	file:
_IE	src/farsi.h	59;"	d
_IF_MZSCH_H_	src/if_mzsch.h	6;"	d
_IID	src/iid_ole.c	/^typedef struct _IID$/;"	s	file:
_IID::c	src/iid_ole.c	/^    unsigned char  c[8];$/;"	m	struct:_IID	file:	access:public
_IID::s1	src/iid_ole.c	/^    unsigned short s1;$/;"	m	struct:_IID	file:	access:public
_IID::s2	src/iid_ole.c	/^    unsigned short s2;$/;"	m	struct:_IID	file:	access:public
_IID::x	src/iid_ole.c	/^    unsigned long x;$/;"	m	struct:_IID	file:	access:public
_INC_GLOBAL_IME	src/glbl_ime.h	11;"	d
_INTEGRATION_H	src/integration.h	15;"	d
_IO_PTEM_H	src/os_unixx.h	110;"	d
_JIM	src/farsi.h	34;"	d
_KAF	src/farsi.h	50;"	d
_KAF_H	src/farsi.h	144;"	d
_LAM	src/farsi.h	52;"	d
_MIM	src/farsi.h	54;"	d
_MONITORINFO	src/gui_w32.c	/^} _MONITORINFO;$/;"	t	typeref:struct:_MONITORINFOstruct	file:
_MONITORINFOstruct	src/gui_w32.c	/^typedef struct _MONITORINFOstruct$/;"	s	file:
_MONITORINFOstruct::cbSize	src/gui_w32.c	/^    DWORD cbSize;$/;"	m	struct:_MONITORINFOstruct	file:	access:public
_MONITORINFOstruct::dwFlags	src/gui_w32.c	/^    DWORD dwFlags;$/;"	m	struct:_MONITORINFOstruct	file:	access:public
_MONITORINFOstruct::rcMonitor	src/gui_w32.c	/^    RECT rcMonitor;$/;"	m	struct:_MONITORINFOstruct	file:	access:public
_MONITORINFOstruct::rcWork	src/gui_w32.c	/^    RECT rcWork;$/;"	m	struct:_MONITORINFOstruct	file:	access:public
_Module	src/VisVim/VisVim.cpp	/^CComModule _Module;$/;"	v
_NOON	src/farsi.h	55;"	d
_NO_PROTO	src/os_unix.h	52;"	d
_OnActivateApp	src/gui_w48.c	/^_OnActivateApp($/;"	f	file:	signature:( HWND hwnd, BOOL fActivate, HTASK dwThreadId )
_OnBlinkTimer	src/gui_w48.c	/^_OnBlinkTimer($/;"	f	file:	signature:( HWND hwnd, UINT uMsg, UINT idEvent, DWORD dwTime)
_OnChar	src/gui_w48.c	/^_OnChar($/;"	f	file:	signature:( HWND hwnd, UINT ch, int cRepeat)
_OnClose	src/gui_w48.c	/^_OnClose($/;"	f	file:	signature:( HWND hwnd)
_OnDeadChar	src/gui_w48.c	/^_OnDeadChar($/;"	f	file:	signature:( HWND hwnd, UINT ch, int cRepeat)
_OnDestroy	src/gui_w48.c	/^_OnDestroy($/;"	f	file:	signature:( HWND hwnd)
_OnDropFiles	src/gui_w48.c	/^_OnDropFiles($/;"	f	file:	signature:( HWND hwnd, HDROP hDrop)
_OnEndSession	src/gui_w48.c	/^_OnEndSession(void)$/;"	f	file:	signature:(void)
_OnFindRepl	src/gui_w48.c	/^_OnFindRepl(void)$/;"	f	file:	signature:(void)
_OnImeComposition	src/gui_w32.c	/^_OnImeComposition(HWND hwnd, WPARAM dbcs, LPARAM param)$/;"	f	file:	signature:(HWND hwnd, WPARAM dbcs, LPARAM param)
_OnImeComposition	src/gui_w32.c	/^static LRESULT _OnImeComposition(HWND hwnd, WPARAM dbcs, LPARAM param);$/;"	p	file:	signature:(HWND hwnd, WPARAM dbcs, LPARAM param)
_OnImeNotify	src/gui_w32.c	/^_OnImeNotify(HWND hWnd, DWORD dwCommand, DWORD dwData)$/;"	f	file:	signature:(HWND hWnd, DWORD dwCommand, DWORD dwData)
_OnImeNotify	src/gui_w48.c	/^static LRESULT _OnImeNotify(HWND hWnd, DWORD dwCommand, DWORD dwData);$/;"	p	file:	signature:(HWND hWnd, DWORD dwCommand, DWORD dwData)
_OnKillFocus	src/gui_w48.c	/^_OnKillFocus($/;"	f	file:	signature:( HWND hwnd, HWND hwndNewFocus)
_OnMenu	src/gui_w48.c	/^_OnMenu($/;"	f	file:	signature:( HWND hwnd, int id, HWND hwndCtl, UINT codeNotify)
_OnMouseButtonDown	src/gui_w48.c	/^_OnMouseButtonDown($/;"	f	file:	signature:( HWND hwnd, BOOL fDoubleClick, int x, int y, UINT keyFlags)
_OnMouseEvent	src/gui_w48.c	/^_OnMouseEvent($/;"	f	file:	signature:( int button, int x, int y, int repeated_click, UINT keyFlags)
_OnMouseMoveOrRelease	src/gui_w48.c	/^_OnMouseMoveOrRelease($/;"	f	file:	signature:( HWND hwnd, int x, int y, UINT keyFlags)
_OnMouseWheel	src/gui_w32.c	/^_OnMouseWheel($/;"	f	file:	signature:( HWND hwnd, short zDelta)
_OnPaint	src/gui_w48.c	/^_OnPaint($/;"	f	file:	signature:( HWND hwnd)
_OnPaint	src/gui_w48.c	/^static void _OnPaint( HWND hwnd);$/;"	p	file:	signature:( HWND hwnd)
_OnScroll	src/gui_w48.c	/^_OnScroll($/;"	f	file:	signature:( HWND hwnd, HWND hwndCtl, UINT code, int pos)
_OnSetFocus	src/gui_w48.c	/^_OnSetFocus($/;"	f	file:	signature:( HWND hwnd, HWND hwndOldFocus)
_OnSettingChange	src/gui_w32.c	/^_OnSettingChange(UINT n)$/;"	f	file:	signature:(UINT n)
_OnSize	src/gui_w48.c	/^_OnSize($/;"	f	file:	signature:( HWND hwnd, UINT state, int cx, int cy)
_OnSysChar	src/gui_w48.c	/^_OnSysChar($/;"	f	file:	signature:( HWND hwnd, UINT cch, int cRepeat)
_OnTimer	src/gui_w48.c	/^_OnTimer($/;"	f	file:	signature:( HWND hwnd, UINT uMsg, UINT idEvent, DWORD dwTime)
_OnWindowPosChanged	src/gui_w32.c	/^_OnWindowPosChanged($/;"	f	file:	signature:( HWND hwnd, const LPWINDOWPOS lpwpos)
_OnWindowPosChanging	src/gui_w16.c	/^_OnWindowPosChanging($/;"	f	file:	signature:( HWND hwnd, LPWINDOWPOS lpwpos)
_PE	src/farsi.h	31;"	d
_POSIX_C_SOURCE	src/if_python.c	41;"	d	file:
_POSIX_C_SOURCE	src/if_python3.c	55;"	d	file:
_POSIX_THREADS	src/if_python.c	26;"	d	file:
_POSIX_THREADS	src/if_python3.c	34;"	d	file:
_PROTO_H	src/proto.h	297;"	d
_PyObject_DebugFree	src/if_python3.c	149;"	d	file:
_PyObject_DebugMalloc	src/if_python3.c	148;"	d	file:
_PyObject_New	src/if_python.c	174;"	d	file:
_PyUnicode_AsString	src/if_python3.c	141;"	d	file:
_Py_Dealloc	src/if_python3.c	147;"	d	file:
_Py_NegativeRefcount	src/if_python3.c	145;"	d	file:
_Py_NoneStruct	src/if_python.c	175;"	d	file:
_Py_NoneStruct	src/if_python3.c	138;"	d	file:
_Py_RefTotal	src/if_python3.c	146;"	d	file:
_REGEXP_H	src/regexp.h	14;"	d
_RTLENTRYF	src/os_msdos.h	50;"	d
_SAD	src/farsi.h	40;"	d
_SE	src/farsi.h	33;"	d
_SHIN	src/farsi.h	39;"	d
_SIN	src/farsi.h	38;"	d
_ScrollbarClassRec	src/gui_at_sb.h	/^typedef struct _ScrollbarClassRec {$/;"	s
_ScrollbarClassRec::core_class	src/gui_at_sb.h	/^    CoreClassPart		core_class;$/;"	m	struct:_ScrollbarClassRec	access:public
_ScrollbarClassRec::scrollbar_class	src/gui_at_sb.h	/^    ScrollbarClassPart		scrollbar_class;$/;"	m	struct:_ScrollbarClassRec	access:public
_ScrollbarClassRec::simple_class	src/gui_at_sb.h	/^    SimpleClassPart		simple_class;$/;"	m	struct:_ScrollbarClassRec	access:public
_ScrollbarRec	src/gui_at_sb.h	/^typedef struct _ScrollbarRec {$/;"	s
_ScrollbarRec::core	src/gui_at_sb.h	/^    CorePart		core;$/;"	m	struct:_ScrollbarRec	access:public
_ScrollbarRec::scrollbar	src/gui_at_sb.h	/^    ScrollbarPart	scrollbar;$/;"	m	struct:_ScrollbarRec	access:public
_ScrollbarRec::simple	src/gui_at_sb.h	/^    SimplePart		simple;$/;"	m	struct:_ScrollbarRec	access:public
_Scrollbar_h	src/gui_at_sb.h	60;"	d
_SharedFindReplace	src/gui_gtk.c	/^typedef struct _SharedFindReplace$/;"	s	file:
_SharedFindReplace	src/gui_motif.c	/^typedef struct _SharedFindReplace$/;"	s	file:
_SharedFindReplace::all	src/gui_gtk.c	/^    GtkWidget *all;	\/* 'Replace All' action button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::all	src/gui_motif.c	/^    Widget all;		\/* 'Replace All' action button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::cancel	src/gui_motif.c	/^    Widget cancel;$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::dialog	src/gui_gtk.c	/^    GtkWidget *dialog;	\/* the main dialog widget *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::dialog	src/gui_motif.c	/^    Widget dialog;	\/* the main dialog widget *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::down	src/gui_gtk.c	/^    GtkWidget *down;	\/* search direction 'Down' radio button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::down	src/gui_motif.c	/^    Widget down;	\/* search direction 'Down' radio button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::find	src/gui_gtk.c	/^    GtkWidget *find;	\/* 'Find Next' action button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::find	src/gui_motif.c	/^    Widget find;	\/* 'Find Next' action button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::mcase	src/gui_gtk.c	/^    GtkWidget *mcase;	\/* 'Match case' check button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::mcase	src/gui_motif.c	/^    Widget mcase;	\/* 'match case' check button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::replace	src/gui_gtk.c	/^    GtkWidget *replace;	\/* 'Replace With' action button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::replace	src/gui_motif.c	/^    Widget replace;	\/* 'Replace With' action button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::undo	src/gui_motif.c	/^    Widget undo;	\/* 'Undo' action button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::up	src/gui_gtk.c	/^    GtkWidget *up;	\/* search direction 'Up' radio button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::up	src/gui_motif.c	/^    Widget up;		\/* search direction 'Up' radio button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::what	src/gui_gtk.c	/^    GtkWidget *what;	\/* 'Find what' entry text widget *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::what	src/gui_motif.c	/^    Widget what;	\/* 'Find what' entry text widget *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::with	src/gui_gtk.c	/^    GtkWidget *with;	\/* 'Replace with' entry text widget *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::with	src/gui_motif.c	/^    Widget with;	\/* 'Replace with' entry text widget *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::wword	src/gui_gtk.c	/^    GtkWidget *wword;	\/* 'Whole word only' check button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFindReplace::wword	src/gui_motif.c	/^    Widget wword;	\/* 'Exact match' check button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
_SharedFontSelData	src/gui_xmdlg.c	/^typedef struct _SharedFontSelData$/;"	s	file:
_SharedFontSelData::cancel	src/gui_xmdlg.c	/^    Widget	cancel;$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::dialog	src/gui_xmdlg.c	/^    Widget	dialog;$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::encoding_menu	src/gui_xmdlg.c	/^    Widget	encoding_menu;$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::encoding_pulldown	src/gui_xmdlg.c	/^    Widget	encoding_pulldown;$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::exit	src/gui_xmdlg.c	/^    Boolean	exit;		\/* used for program exit control *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::font_name	src/gui_xmdlg.c	/^    char	*font_name;	\/* current font name *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::in_pixels	src/gui_xmdlg.c	/^    Boolean	in_pixels;	\/* toggle state - size in pixels  *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::list	src/gui_xmdlg.c	/^    Widget	list[NONE];$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::name	src/gui_xmdlg.c	/^    Widget	name;$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::names	src/gui_xmdlg.c	/^    char	**names;	\/* font name array of arrays *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::num	src/gui_xmdlg.c	/^    int		num;		\/* number of font names *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::ok	src/gui_xmdlg.c	/^    Widget	ok;$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::old	src/gui_xmdlg.c	/^    XFontStruct	*old;		\/* font data structure for sample display *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::old_list	src/gui_xmdlg.c	/^    XmFontList	old_list;	\/* font data structure for sample display *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::sample	src/gui_xmdlg.c	/^    Widget	sample;$/;"	m	struct:_SharedFontSelData	file:	access:public
_SharedFontSelData::sel	src/gui_xmdlg.c	/^    String	sel[NONE];	\/* selection category *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
_TA	src/farsi.h	129;"	d
_TANDEM_SOURCE	src/vim.h	71;"	d
_TE	src/farsi.h	32;"	d
_TextAreaWndProc	src/gui_w48.c	/^_TextAreaWndProc($/;"	f	file:	signature:( HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
_WIN32_WINNT	src/if_ruby.c	53;"	d	file:
_WndProc	src/gui_w16.c	/^_WndProc($/;"	f	file:	signature:( HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
_WndProc	src/gui_w32.c	/^_WndProc($/;"	f	file:	signature:( HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
_XE	src/farsi.h	37;"	d
_XOPEN_SOURCE	src/if_python.c	44;"	d	file:
_XOPEN_SOURCE	src/if_python3.c	58;"	d	file:
_XRegisterFilterByType	src/gui_gtk_vms.h	83;"	d
_XUnregisterFilter	src/gui_gtk_vms.h	316;"	d
_Xaw3dDrawShadows	src/gui_at_sb.c	/^_Xaw3dDrawShadows(gw, event, region, out)$/;"	f	file:
_Xaw3dDrawShadows	src/gui_at_sb.c	/^static void _Xaw3dDrawShadows __ARGS((Widget, XEvent *, Region, int));$/;"	p	file:	signature:(Widget, XEvent *, Region, int)
_XmBottomShadowColorDefault	src/gui_gtk_vms.h	627;"	d
_XmCalcLabelDimensions	src/gui_xmebw.c	/^extern void _XmCalcLabelDimensions(Widget wid);$/;"	p	file:	signature:(Widget wid)
_XmClearBorder	src/gui_gtk_vms.h	628;"	d
_XmConfigureObject	src/gui_gtk_vms.h	629;"	d
_XmDestroyParentCallback	src/gui_gtk_vms.h	630;"	d
_XmDrawArrow	src/gui_gtk_vms.h	631;"	d
_XmDrawShadows	src/gui_gtk_vms.h	632;"	d
_XmEnhancedButtonClassPart	src/gui_xmebwp.h	/^typedef struct _XmEnhancedButtonClassPart$/;"	s
_XmEnhancedButtonClassPart::stipple_bitmap	src/gui_xmebwp.h	/^    Pixmap stipple_bitmap;$/;"	m	struct:_XmEnhancedButtonClassPart	access:public
_XmEnhancedButtonPart	src/gui_xmebwp.h	/^typedef struct _XmEnhancedButtonPart$/;"	s
_XmEnhancedButtonPart::armed_pixmap	src/gui_xmebwp.h	/^    Pixmap armed_pixmap;$/;"	m	struct:_XmEnhancedButtonPart	access:public
_XmEnhancedButtonPart::doing_destroy	src/gui_xmebwp.h	/^    int doing_destroy;$/;"	m	struct:_XmEnhancedButtonPart	access:public
_XmEnhancedButtonPart::doing_setvalues	src/gui_xmebwp.h	/^    int doing_setvalues;$/;"	m	struct:_XmEnhancedButtonPart	access:public
_XmEnhancedButtonPart::highlight_pixmap	src/gui_xmebwp.h	/^    Pixmap highlight_pixmap;$/;"	m	struct:_XmEnhancedButtonPart	access:public
_XmEnhancedButtonPart::insensitive_pixmap	src/gui_xmebwp.h	/^    Pixmap insensitive_pixmap;$/;"	m	struct:_XmEnhancedButtonPart	access:public
_XmEnhancedButtonPart::label_location	src/gui_xmebwp.h	/^    int label_location;$/;"	m	struct:_XmEnhancedButtonPart	access:public
_XmEnhancedButtonPart::normal_pixmap	src/gui_xmebwp.h	/^    Pixmap normal_pixmap;$/;"	m	struct:_XmEnhancedButtonPart	access:public
_XmEnhancedButtonPart::pixmap_data	src/gui_xmebwp.h	/^    String pixmap_data;$/;"	m	struct:_XmEnhancedButtonPart	access:public
_XmEnhancedButtonPart::pixmap_depth	src/gui_xmebwp.h	/^    int pixmap_depth;$/;"	m	struct:_XmEnhancedButtonPart	access:public
_XmEnhancedButtonPart::pixmap_file	src/gui_xmebwp.h	/^    String pixmap_file;$/;"	m	struct:_XmEnhancedButtonPart	access:public
_XmEnhancedButtonPart::pixmap_height	src/gui_xmebwp.h	/^    Dimension pixmap_height;$/;"	m	struct:_XmEnhancedButtonPart	access:public
_XmEnhancedButtonPart::pixmap_width	src/gui_xmebwp.h	/^    Dimension pixmap_width;$/;"	m	struct:_XmEnhancedButtonPart	access:public
_XmEnhancedButtonPart::spacing	src/gui_xmebwp.h	/^    Dimension spacing;$/;"	m	struct:_XmEnhancedButtonPart	access:public
_XmEnhancedButtonRec	src/gui_xmebwp.h	/^typedef struct _XmEnhancedButtonRec$/;"	s
_XmEnhancedButtonRec::core	src/gui_xmebwp.h	/^    CorePart core;$/;"	m	struct:_XmEnhancedButtonRec	access:public
_XmEnhancedButtonRec::enhancedbutton	src/gui_xmebwp.h	/^    XmEnhancedButtonPart enhancedbutton;$/;"	m	struct:_XmEnhancedButtonRec	access:public
_XmEnhancedButtonRec::label	src/gui_xmebwp.h	/^    XmLabelPart label;$/;"	m	struct:_XmEnhancedButtonRec	access:public
_XmEnhancedButtonRec::primitive	src/gui_xmebwp.h	/^    XmPrimitivePart primitive;$/;"	m	struct:_XmEnhancedButtonRec	access:public
_XmEnhancedButtonRec::pushbutton	src/gui_xmebwp.h	/^    XmPushButtonPart pushbutton;$/;"	m	struct:_XmEnhancedButtonRec	access:public
_XmFontListGetDefaultFont	src/gui_gtk_vms.h	633;"	d
_XmFromHorizontalPixels	src/gui_gtk_vms.h	634;"	d
_XmFromVerticalPixels	src/gui_gtk_vms.h	635;"	d
_XmGetClassExtensionPtr	src/gui_gtk_vms.h	636;"	d
_XmGetDefaultFontList	src/gui_gtk_vms.h	637;"	d
_XmGetInDragMode	src/gui_xmebw.c	/^extern Boolean _XmGetInDragMode(Widget widget);$/;"	p	file:	signature:(Widget widget)
_XmGetTextualDragIcon	src/gui_gtk_vms.h	638;"	d
_XmGetWidgetExtData	src/gui_gtk_vms.h	639;"	d
_XmGrabKeyboard	src/gui_gtk_vms.h	640;"	d
_XmGrabPointer	src/gui_gtk_vms.h	641;"	d
_XmInheritClass	src/gui_gtk_vms.h	642;"	d
_XmInputInGadget	src/gui_gtk_vms.h	643;"	d
_XmMakeGeometryRequest	src/gui_gtk_vms.h	644;"	d
_XmMenuPopDown	src/gui_gtk_vms.h	645;"	d
_XmMoveObject	src/gui_gtk_vms.h	646;"	d
_XmNavigChangeManaged	src/gui_gtk_vms.h	647;"	d
_XmOSBuildFileList	src/gui_gtk_vms.h	648;"	d
_XmOSFileCompare	src/gui_gtk_vms.h	649;"	d
_XmOSFindPatternPart	src/gui_gtk_vms.h	650;"	d
_XmOSQualifyFileSpec	src/gui_gtk_vms.h	651;"	d
_XmPostPopupMenu	src/gui_gtk_vms.h	652;"	d
_XmPrimitiveEnter	src/gui_gtk_vms.h	653;"	d
_XmPrimitiveEnter	src/gui_xmebw.c	/^extern void _XmPrimitiveEnter(Widget wid,$/;"	p	file:	signature:(Widget wid, XEvent * event, String * params, Cardinal * num_params)
_XmPrimitiveLeave	src/gui_gtk_vms.h	654;"	d
_XmPrimitiveLeave	src/gui_xmebw.c	/^extern void _XmPrimitiveLeave(Widget wid,$/;"	p	file:	signature:(Widget wid, XEvent * event, String * params, Cardinal * num_params)
_XmRedisplayGadgets	src/gui_gtk_vms.h	655;"	d
_XmSetFocusFlag	src/gui_xmebw.c	/^extern void _XmSetFocusFlag(Widget w, unsigned int mask, Boolean value);$/;"	p	file:	signature:(Widget w, unsigned int mask, Boolean value)
_XmShellIsExclusive	src/gui_gtk_vms.h	656;"	d
_XmStringDraw	src/gui_gtk_vms.h	657;"	d
_XmStringGetTextConcat	src/gui_gtk_vms.h	658;"	d
_XmStrings	src/gui_gtk_vms.h	659;"	d
_XmToHorizontalPixels	src/gui_gtk_vms.h	660;"	d
_XmToVerticalPixels	src/gui_gtk_vms.h	661;"	d
_XmTopShadowColorDefault	src/gui_gtk_vms.h	662;"	d
_Xm_fastPtr	src/gui_gtk_vms.h	663;"	d
_XtCheckSubclassFlag	src/gui_gtk_vms.h	664;"	d
_XtInherit	src/gui_gtk_vms.h	665;"	d
_XtInheritTranslations	src/gui_gtk_vms.h	666;"	d
_XtRegisterWindow	src/gui_gtk_vms.h	723;"	d
_XtUnregisterWindow	src/gui_gtk_vms.h	724;"	d
_YE	src/farsi.h	58;"	d
_YEE	src/farsi.h	62;"	d
_ZA	src/farsi.h	130;"	d
_ZAD	src/farsi.h	41;"	d
__ARGS	runtime/tools/xcmdsrv_client.c	32;"	d	file:
__ARGS	src/os_unix.c	/^static RETSIGTYPE catch_sigint __ARGS(SIGPROTOARG);$/;"	p	file:
__ARGS	src/os_unix.c	/^static RETSIGTYPE catch_sigpwr __ARGS(SIGPROTOARG);$/;"	p	file:
__ARGS	src/os_unix.c	/^static RETSIGTYPE deathtrap __ARGS(SIGPROTOARG);$/;"	p	file:
__ARGS	src/os_unix.c	/^static RETSIGTYPE sig_alarm __ARGS(SIGPROTOARG);$/;"	p	file:
__ARGS	src/os_unix.c	/^static RETSIGTYPE sig_sysmouse __ARGS(SIGPROTOARG);$/;"	p	file:
__ARGS	src/os_unix.c	/^static RETSIGTYPE sig_winch __ARGS(SIGPROTOARG);$/;"	p	file:
__ARGS	src/os_unix.c	/^static RETSIGTYPE sigcont_handler __ARGS(SIGPROTOARG);$/;"	p	file:
__ARGS	src/os_unix.h	196;"	d
__ARGS	src/os_unix.h	88;"	d
__ARGS	src/os_unix.h	90;"	d
__ARGS	src/regexp.c	/^typedef void (*(*fptr_T) __ARGS((int *, int)))();$/;"	t	file:
__ARGS	src/regexp.c	6730;"	d	file:
__ARGS	src/regexp.c	6731;"	d	file:
__ARGS	src/vim.h	241;"	d
__ARGS	src/vim.h	246;"	d
__ARGS	src/vim.h	251;"	d
__ARGS	src/vim.h	255;"	d
__ARGS	src/vim.h	260;"	d
__ARGS	src/vim.h	270;"	d
__ARGS	src/vim.h	274;"	d
__ARGS	src/xpm_w32.c	19;"	d	file:
__ARGS	src/xpm_w32.c	21;"	d	file:
__CCFILTER_C__	runtime/tools/ccfilter.c	14;"	d	file:
__CYGWIN32__	src/if_mzsch.h	19;"	d
__CYGWIN32__	src/if_mzsch.h	9;"	d
__GTK_FORM_H__	src/gui_gtk_f.h	10;"	d
__IID_DEFINED__	src/iid_ole.c	25;"	d	file:
__IID_DEFINED__	src/iid_ole.c	30;"	d	file:
__IVim_FWD_DEFINED__	src/if_ole.h	29;"	d
__IVim_INTERFACE_DEFINED__	src/if_ole.h	53;"	d
__OLEAUT_H__	src/VisVim/OleAut.h	2;"	d
__OPENTRANSPORTPROTOCOL__	src/if_ruby.c	79;"	d	file:
__OPENTRANSPORTPROVIDERS__	src/if_ruby.c	80;"	d	file:
__OPENTRANSPORT__	src/if_ruby.c	78;"	d	file:
__P	src/xxd/xxd.c	124;"	d	file:
__P	src/xxd/xxd.c	202;"	d	file:
__P	src/xxd/xxd.c	204;"	d	file:
__PARMS	src/vim.h	282;"	d
__SUSV3	src/os_unixx.h	118;"	d
__USE_FIXED_PROTOTYPES__	src/xxd/xxd.c	111;"	d	file:
__Vim_FWD_DEFINED__	src/if_ole.h	35;"	d
__Vim_LIBRARY_DEFINED__	src/if_ole.h	255;"	d
__anon101::__anon102::pos	src/regexp.c	/^	lpos_T	pos;$/;"	m	union:__anon101::__anon102	file:	access:public
__anon101::__anon102::ptr	src/regexp.c	/^	char_u	*ptr;$/;"	m	union:__anon101::__anon102	file:	access:public
__anon101::se_u	src/regexp.c	/^    } se_u;$/;"	m	struct:__anon101	typeref:union:__anon101::__anon102	file:	access:public
__anon104::a	src/regexp.c	/^    int a, b, c;$/;"	m	struct:__anon104	file:	access:public
__anon104::b	src/regexp.c	/^    int a, b, c;$/;"	m	struct:__anon104	file:	access:public
__anon104::c	src/regexp.c	/^    int a, b, c;$/;"	m	struct:__anon104	file:	access:public
__anon106::accel	src/workshop.c	/^    char	*accel;			\/* optional accelerator key *\/$/;"	m	struct:__anon106	file:	access:public
__anon106::name	src/workshop.c	/^    char	*name;			\/* name of the menu *\/$/;"	m	struct:__anon106	file:	access:public
__anon106::verb	src/workshop.c	/^    char	*verb;			\/* menu verb *\/$/;"	m	struct:__anon106	file:	access:public
__anon107::name	src/if_python3.c	/^    char *name;$/;"	m	struct:__anon107	file:	access:public
__anon107::ptr	src/if_python3.c	/^    PYTHON_PROC *ptr;$/;"	m	struct:__anon107	file:	access:public
__anon10::error	src/if_py_both.h	/^    long error;$/;"	m	struct:__anon10	access:public
__anon10::softspace	src/if_py_both.h	/^    long softspace;$/;"	m	struct:__anon10	access:public
__anon113::real	src/gui_at_fs.c	/^    char	*real;$/;"	m	struct:__anon113	file:	access:public
__anon113::shown	src/gui_at_fs.c	/^    char	*shown;$/;"	m	struct:__anon113	file:	access:public
__anon113::statDone	src/gui_at_fs.c	/^    int		statDone;$/;"	m	struct:__anon113	file:	access:public
__anon114::beginSelection	src/gui_at_fs.c	/^    int		beginSelection;$/;"	m	struct:__anon114	file:	access:public
__anon114::changed	src/gui_at_fs.c	/^    int		changed;$/;"	m	struct:__anon114	file:	access:public
__anon114::dir	src/gui_at_fs.c	/^    char	*dir;$/;"	m	struct:__anon114	file:	access:public
__anon114::endSelection	src/gui_at_fs.c	/^    int		endSelection;$/;"	m	struct:__anon114	file:	access:public
__anon114::entries	src/gui_at_fs.c	/^    SFEntry	*entries;$/;"	m	struct:__anon114	file:	access:public
__anon114::hOrigin	src/gui_at_fs.c	/^    int		hOrigin;$/;"	m	struct:__anon114	file:	access:public
__anon114::mtime	src/gui_at_fs.c	/^    time_t	mtime;$/;"	m	struct:__anon114	file:	access:public
__anon114::nChars	src/gui_at_fs.c	/^    int		nChars;$/;"	m	struct:__anon114	file:	access:public
__anon114::nEntries	src/gui_at_fs.c	/^    int		nEntries;$/;"	m	struct:__anon114	file:	access:public
__anon114::path	src/gui_at_fs.c	/^    char	*path;$/;"	m	struct:__anon114	file:	access:public
__anon114::vOrigin	src/gui_at_fs.c	/^    int		vOrigin;$/;"	m	struct:__anon114	file:	access:public
__anon115::dir	src/gui_at_fs.c	/^    char	*dir;$/;"	m	struct:__anon115	file:	access:public
__anon115::name	src/gui_at_fs.c	/^    char	*name;$/;"	m	struct:__anon115	file:	access:public
__anon116::fontname	src/gui_at_fs.c	/^    char *fontname;$/;"	m	struct:__anon116	file:	access:public
__anon11::buf	src/if_py_both.h	/^    buf_T *buf;$/;"	m	struct:__anon11	access:public
__anon121::uc	src/blowfish.c	/^    char_u   uc[8];$/;"	m	union:__anon121	file:	access:public
__anon121::ul	src/blowfish.c	/^    UINT32_T ul[2];$/;"	m	union:__anon121	file:	access:public
__anon122::badcryptxt	src/blowfish.c	/^    char_u   badcryptxt[9]; \/* cryptxt when big\/little endian is wrong *\/$/;"	m	struct:__anon122	file:	access:public
__anon122::cryptxt	src/blowfish.c	/^    char_u   cryptxt[9];$/;"	m	struct:__anon122	file:	access:public
__anon122::keysum	src/blowfish.c	/^    UINT32_T keysum;$/;"	m	struct:__anon122	file:	access:public
__anon122::password	src/blowfish.c	/^    char_u   password[64];$/;"	m	struct:__anon122	file:	access:public
__anon122::plaintxt	src/blowfish.c	/^    char_u   plaintxt[9];$/;"	m	struct:__anon122	file:	access:public
__anon122::salt	src/blowfish.c	/^    char_u   salt[9];$/;"	m	struct:__anon122	file:	access:public
__anon123::curbuf	src/if_tcl.c	/^    char *curbuf, *curwin;$/;"	m	struct:__anon123	file:	access:public
__anon123::curwin	src/if_tcl.c	/^    char *curbuf, *curwin;$/;"	m	struct:__anon123	file:	access:public
__anon123::interp	src/if_tcl.c	/^    Tcl_Interp *interp;$/;"	m	struct:__anon123	file:	access:public
__anon123::lbase	src/if_tcl.c	/^    int lbase;$/;"	m	struct:__anon123	file:	access:public
__anon123::range_end	src/if_tcl.c	/^    int range_start, range_end;$/;"	m	struct:__anon123	file:	access:public
__anon123::range_start	src/if_tcl.c	/^    int range_start, range_end;$/;"	m	struct:__anon123	file:	access:public
__anon124::name	src/if_tcl.c	/^    char* name;$/;"	m	struct:__anon124	file:	access:public
__anon124::ptr	src/if_tcl.c	/^    TCL_PROC* ptr;$/;"	m	struct:__anon124	file:	access:public
__anon125::from	src/digraph.c	/^    char_u	*from;$/;"	m	struct:__anon125	file:	access:public
__anon125::to	src/digraph.c	/^    char_u	*to;$/;"	m	struct:__anon125	file:	access:public
__anon126::bytes_printed	src/hardcopy.c	/^    long_u	bytes_printed;	    \/* bytes printed so far *\/$/;"	m	struct:__anon126	file:	access:public
__anon126::column	src/hardcopy.c	/^    colnr_T	column;		    \/* byte column *\/$/;"	m	struct:__anon126	file:	access:public
__anon126::ff	src/hardcopy.c	/^    int		ff;		    \/* seen form feed character *\/$/;"	m	struct:__anon126	file:	access:public
__anon126::file_line	src/hardcopy.c	/^    linenr_T	file_line;	    \/* line nr in the buffer *\/$/;"	m	struct:__anon126	file:	access:public
__anon126::lead_spaces	src/hardcopy.c	/^    int		lead_spaces;	    \/* remaining spaces for a TAB *\/$/;"	m	struct:__anon126	file:	access:public
__anon126::print_pos	src/hardcopy.c	/^    int		print_pos;	    \/* virtual column for computing TABs *\/$/;"	m	struct:__anon126	file:	access:public
__anon127::func	src/if_lua.c	/^    luaV_function func;$/;"	m	struct:__anon127	file:	access:public
__anon127::name	src/if_lua.c	/^    const char *name;$/;"	m	struct:__anon127	file:	access:public
__anon128::family	src/gui_mac.c	/^    FMFontFamily family;$/;"	m	struct:__anon128	file:	access:public
__anon128::isPanelVisible	src/gui_mac.c	/^    Boolean isPanelVisible;$/;"	m	struct:__anon128	file:	access:public
__anon128::size	src/gui_mac.c	/^    FMFontSize size;$/;"	m	struct:__anon128	file:	access:public
__anon128::style	src/gui_mac.c	/^    FMFontStyle style;$/;"	m	struct:__anon128	file:	access:public
__anon129::key_sym	src/gui_mac.c	/^    KeySym  key_sym;$/;"	m	struct:__anon129	file:	access:public
__anon129::vim_code0	src/gui_mac.c	/^    char_u  vim_code0;$/;"	m	struct:__anon129	file:	access:public
__anon129::vim_code1	src/gui_mac.c	/^    char_u  vim_code1;$/;"	m	struct:__anon129	file:	access:public
__anon12::win	src/if_py_both.h	/^    win_T	*win;$/;"	m	struct:__anon12	access:public
__anon130::box	src/gui_mac.c	/^    Rect    box;$/;"	m	struct:__anon130	file:	access:public
__anon130::idx	src/gui_mac.c	/^    short   idx;$/;"	m	struct:__anon130	file:	access:public
__anon130::width	src/gui_mac.c	/^    short   width;	\/* Size of the text in pixel *\/$/;"	m	struct:__anon130	file:	access:public
__anon134::codepage	src/mbyte.c	/^{   char *name;		int prop;		int codepage;}$/;"	m	struct:__anon134	file:	access:public
__anon134::name	src/mbyte.c	/^{   char *name;		int prop;		int codepage;}$/;"	m	struct:__anon134	file:	access:public
__anon134::prop	src/mbyte.c	/^{   char *name;		int prop;		int codepage;}$/;"	m	struct:__anon134	file:	access:public
__anon135::canon	src/mbyte.c	/^{   char *name;		int canon;}$/;"	m	struct:__anon135	file:	access:public
__anon135::name	src/mbyte.c	/^{   char *name;		int canon;}$/;"	m	struct:__anon135	file:	access:public
__anon136::offset	src/mbyte.c	/^    int offset;$/;"	m	struct:__anon136	file:	access:public
__anon136::rangeEnd	src/mbyte.c	/^    int rangeEnd;$/;"	m	struct:__anon136	file:	access:public
__anon136::rangeStart	src/mbyte.c	/^    int rangeStart;$/;"	m	struct:__anon136	file:	access:public
__anon136::step	src/mbyte.c	/^    int step;$/;"	m	struct:__anon136	file:	access:public
__anon137::name	src/if_ruby.c	/^    char *name;$/;"	m	struct:__anon137	file:	access:public
__anon137::ptr	src/if_ruby.c	/^    RUBY_PROC *ptr;$/;"	m	struct:__anon137	file:	access:public
__anon138::batname	src/dosinst.h	/^    char	*batname;	\/* batch file name *\/$/;"	m	struct:__anon138	access:public
__anon138::batpath	src/dosinst.h	/^    char	batpath[BUFSIZE];  \/* path of batch file to create; not$/;"	m	struct:__anon138	access:public
__anon138::exearg	src/dosinst.h	/^    char	*exearg;	\/* argument for vim.exe or gvim.exe *\/$/;"	m	struct:__anon138	access:public
__anon138::exename	src/dosinst.h	/^    char	*exename;	\/* exe file name *\/$/;"	m	struct:__anon138	access:public
__anon138::exenamearg	src/dosinst.h	/^    char	*exenamearg;	\/* exe file name when using exearg *\/$/;"	m	struct:__anon138	access:public
__anon138::lnkname	src/dosinst.h	/^    char	*lnkname;	\/* shortcut file name *\/$/;"	m	struct:__anon138	access:public
__anon138::name	src/dosinst.h	/^    char	*name;		\/* Vim exe name (without .exe) *\/$/;"	m	struct:__anon138	access:public
__anon138::oldbat	src/dosinst.h	/^    char	*oldbat;	\/* path to existing xxx.bat or NULL *\/$/;"	m	struct:__anon138	access:public
__anon138::oldexe	src/dosinst.h	/^    char	*oldexe;	\/* path to existing xxx.exe or NULL *\/$/;"	m	struct:__anon138	access:public
__anon139::sv_dict	src/eval.c	/^    dict_T	sv_dict;$/;"	m	struct:__anon139	file:	access:public
__anon139::sv_var	src/eval.c	/^    dictitem_T	sv_var;$/;"	m	struct:__anon139	file:	access:public
__anon13::buf	src/if_py_both.h	/^    BufferObject *buf;$/;"	m	struct:__anon13	access:public
__anon13::end	src/if_py_both.h	/^    PyInt end;$/;"	m	struct:__anon13	access:public
__anon13::start	src/if_py_both.h	/^    PyInt start;$/;"	m	struct:__anon13	access:public
__anon141::fi_list	src/eval.c	/^    list_T	*fi_list;	\/* list being used *\/$/;"	m	struct:__anon141	file:	access:public
__anon141::fi_lw	src/eval.c	/^    listwatch_T	fi_lw;		\/* keep an eye on the item used. *\/$/;"	m	struct:__anon141	file:	access:public
__anon141::fi_semicolon	src/eval.c	/^    int		fi_semicolon;	\/* TRUE if ending in '; var]' *\/$/;"	m	struct:__anon141	file:	access:public
__anon141::fi_varcount	src/eval.c	/^    int		fi_varcount;	\/* nr of variables in the list *\/$/;"	m	struct:__anon141	file:	access:public
__anon142::fd_di	src/eval.c	/^    dictitem_T	*fd_di;		\/* Dictionary item used *\/$/;"	m	struct:__anon142	file:	access:public
__anon142::fd_dict	src/eval.c	/^    dict_T	*fd_dict;	\/* Dictionary used *\/$/;"	m	struct:__anon142	file:	access:public
__anon142::fd_newkey	src/eval.c	/^    char_u	*fd_newkey;	\/* new key in "dict" in allocated memory *\/$/;"	m	struct:__anon142	file:	access:public
__anon145::key_sym	src/gui_w48.c	/^    UINT    key_sym;$/;"	m	struct:__anon145	file:	access:public
__anon145::vim_code0	src/gui_w48.c	/^    char_u  vim_code0;$/;"	m	struct:__anon145	file:	access:public
__anon145::vim_code1	src/gui_w48.c	/^    char_u  vim_code1;$/;"	m	struct:__anon145	file:	access:public
__anon17::sft_score	src/spell.c	/^    short	sft_score;	\/* lowest score used *\/$/;"	m	struct:__anon17	file:	access:public
__anon17::sft_word	src/spell.c	/^    char_u	sft_word[1];    \/* soundfolded word, actually longer *\/$/;"	m	struct:__anon17	file:	access:public
__anon18::badi	src/spell.c	/^    int		badi;$/;"	m	struct:__anon18	file:	access:public
__anon18::goodi	src/spell.c	/^    int		goodi;$/;"	m	struct:__anon18	file:	access:public
__anon18::score	src/spell.c	/^    int		score;$/;"	m	struct:__anon18	file:	access:public
__anon19::rawlen	src/os_mswin.c	/^    int rawlen;		\/* length of clip_star.format_raw, including encoding,$/;"	m	struct:__anon19	file:	access:public
__anon19::txtlen	src/os_mswin.c	/^    int txtlen;		\/* length of CF_TEXT in bytes *\/$/;"	m	struct:__anon19	file:	access:public
__anon19::type	src/os_mswin.c	/^    int type;		\/* MCHAR, MBLOCK or MLINE *\/$/;"	m	struct:__anon19	file:	access:public
__anon19::ucslen	src/os_mswin.c	/^    int ucslen;		\/* length of CF_UNICODETEXT in words *\/$/;"	m	struct:__anon19	file:	access:public
__anon20::expr_result	src/os_mswin.c	/^    int		expr_result;	\/* 0 for REPLY, 1 for RESULT 2 for error *\/$/;"	m	struct:__anon20	file:	access:public
__anon20::reply	src/os_mswin.c	/^    char_u	*reply;		\/* reply string *\/$/;"	m	struct:__anon20	file:	access:public
__anon20::server	src/os_mswin.c	/^    HWND	server;		\/* server window *\/$/;"	m	struct:__anon20	file:	access:public
__anon24::buf	src/if_mzsch.c	/^    buf_T	    *buf;$/;"	m	struct:__anon24	file:	access:public
__anon24::so	src/if_mzsch.c	/^    Scheme_Object   so;$/;"	m	struct:__anon24	file:	access:public
__anon25::so	src/if_mzsch.c	/^    Scheme_Object   so;$/;"	m	struct:__anon25	file:	access:public
__anon25::win	src/if_mzsch.c	/^    win_T	    *win;$/;"	m	struct:__anon25	file:	access:public
__anon26::maxa	src/if_mzsch.c	/^    int		maxa;$/;"	m	struct:__anon26	file:	access:public
__anon26::mina	src/if_mzsch.c	/^    int		mina;	\/* arity information *\/$/;"	m	struct:__anon26	file:	access:public
__anon26::name	src/if_mzsch.c	/^    char	*name;$/;"	m	struct:__anon26	file:	access:public
__anon26::prim	src/if_mzsch.c	/^    Scheme_Closed_Prim	*prim;$/;"	m	struct:__anon26	file:	access:public
__anon27::name	src/if_mzsch.c	/^    char	    *name;$/;"	m	struct:__anon27	file:	access:public
__anon27::port	src/if_mzsch.c	/^    Scheme_Object   *port;$/;"	m	struct:__anon27	file:	access:public
__anon28::name	src/if_mzsch.c	/^    char    *name;$/;"	m	struct:__anon28	file:	access:public
__anon28::ptr	src/if_mzsch.c	/^    void    **ptr;$/;"	m	struct:__anon28	file:	access:public
__anon29::head	src/tag.c	/^    char_u	*head;		\/* start of pattern head *\/$/;"	m	struct:__anon29	file:	access:public
__anon29::headlen	src/tag.c	/^    int		headlen;	\/* length of head[] *\/$/;"	m	struct:__anon29	file:	access:public
__anon29::len	src/tag.c	/^    int		len;		\/* length of pat[] *\/$/;"	m	struct:__anon29	file:	access:public
__anon29::pat	src/tag.c	/^    char_u	*pat;		\/* the pattern *\/$/;"	m	struct:__anon29	file:	access:public
__anon29::regmatch	src/tag.c	/^    regmatch_T	regmatch;	\/* regexp program, may be NULL *\/$/;"	m	struct:__anon29	file:	access:public
__anon2::from	src/option.c	/^    int	    from;$/;"	m	struct:__anon2	file:	access:public
__anon2::to	src/option.c	/^    int     to;$/;"	m	struct:__anon2	file:	access:public
__anon31::bot_shadow_GC	src/gui_at_sb.h	/^    GC		bot_shadow_GC;$/;"	m	struct:__anon31	access:public
__anon31::bot_shadow_contrast	src/gui_at_sb.h	/^    int		bot_shadow_contrast;$/;"	m	struct:__anon31	access:public
__anon31::bot_shadow_pixel	src/gui_at_sb.h	/^    Pixel	bot_shadow_pixel;$/;"	m	struct:__anon31	access:public
__anon31::foreground	src/gui_at_sb.h	/^    Pixel	  foreground;	\/* thumb foreground color *\/$/;"	m	struct:__anon31	access:public
__anon31::gc	src/gui_at_sb.h	/^    GC		  gc;		\/* a (shared) gc *\/$/;"	m	struct:__anon31	access:public
__anon31::jumpProc	src/gui_at_sb.h	/^    XtCallbackList jumpProc;	\/* same as thumbProc but pass data by ref *\/$/;"	m	struct:__anon31	access:public
__anon31::length	src/gui_at_sb.h	/^    Dimension	  length;	\/* either height or width *\/$/;"	m	struct:__anon31	access:public
__anon31::limit_thumb	src/gui_at_sb.h	/^    Bool	limit_thumb;	\/* limit thumb to inside scrollbar *\/$/;"	m	struct:__anon31	access:public
__anon31::max	src/gui_at_sb.h	/^    float	  max;		\/* Maximum value for top *\/$/;"	m	struct:__anon31	access:public
__anon31::min_thumb	src/gui_at_sb.h	/^    Dimension	  min_thumb;	\/* minimum size for the thumb. *\/$/;"	m	struct:__anon31	access:public
__anon31::orientation	src/gui_at_sb.h	/^    XtOrientation orientation;	\/* horizontal or vertical *\/$/;"	m	struct:__anon31	access:public
__anon31::scrollProc	src/gui_at_sb.h	/^    XtCallbackList scrollProc;	\/* proportional scroll *\/$/;"	m	struct:__anon31	access:public
__anon31::scroll_mode	src/gui_at_sb.h	/^    char	  scroll_mode;	\/* see below *\/$/;"	m	struct:__anon31	access:public
__anon31::scroll_off	src/gui_at_sb.h	/^    float	  scroll_off;	\/* offset from event to top of thumb *\/$/;"	m	struct:__anon31	access:public
__anon31::shadow_width	src/gui_at_sb.h	/^    Dimension	shadow_width;$/;"	m	struct:__anon31	access:public
__anon31::shown	src/gui_at_sb.h	/^    float	  shown;	\/* What percent is shown in the win *\/$/;"	m	struct:__anon31	access:public
__anon31::shownLength	src/gui_at_sb.h	/^    Dimension	  shownLength;	\/* Num pixels corresponding to shown *\/$/;"	m	struct:__anon31	access:public
__anon31::thickness	src/gui_at_sb.h	/^    Dimension	  thickness;	\/* either width or height *\/$/;"	m	struct:__anon31	access:public
__anon31::thumb	src/gui_at_sb.h	/^    Pixmap	  thumb;	\/* thumb color *\/$/;"	m	struct:__anon31	access:public
__anon31::thumbProc	src/gui_at_sb.h	/^    XtCallbackList thumbProc;	\/* jump (to position) scroll *\/$/;"	m	struct:__anon31	access:public
__anon31::timer_id	src/gui_at_sb.h	/^    XtIntervalId  timer_id;	\/* autorepeat timer; remove on destruction *\/$/;"	m	struct:__anon31	access:public
__anon31::top	src/gui_at_sb.h	/^    float	  top;		\/* What percent is above the win's top *\/$/;"	m	struct:__anon31	access:public
__anon31::topLoc	src/gui_at_sb.h	/^    Position	  topLoc;	\/* Pixel that corresponds to top *\/$/;"	m	struct:__anon31	access:public
__anon31::top_shadow_GC	src/gui_at_sb.h	/^    GC		top_shadow_GC;$/;"	m	struct:__anon31	access:public
__anon31::top_shadow_contrast	src/gui_at_sb.h	/^    int		top_shadow_contrast;$/;"	m	struct:__anon31	access:public
__anon31::top_shadow_pixel	src/gui_at_sb.h	/^    Pixel	top_shadow_pixel;$/;"	m	struct:__anon31	access:public
__anon32::empty	src/gui_at_sb.h	/^typedef struct {int empty;} ScrollbarClassPart;$/;"	m	struct:__anon32	access:public
__anon34::col	src/structs.h	/^    colnr_T	col;	\/* column number *\/$/;"	m	struct:__anon34	access:public
__anon34::coladd	src/structs.h	/^    colnr_T	coladd;$/;"	m	struct:__anon34	access:public
__anon34::lnum	src/structs.h	/^    linenr_T	lnum;	\/* line number *\/$/;"	m	struct:__anon34	access:public
__anon35::col	src/structs.h	/^    colnr_T	col;	\/* column number *\/$/;"	m	struct:__anon35	access:public
__anon35::lnum	src/structs.h	/^    linenr_T	lnum;	\/* line number *\/$/;"	m	struct:__anon35	access:public
__anon36::wo_arab	src/structs.h	/^    int		wo_arab;$/;"	m	struct:__anon36	access:public
__anon36::wo_cc	src/structs.h	/^    char_u	*wo_cc;$/;"	m	struct:__anon36	access:public
__anon36::wo_cocu	src/structs.h	/^    char_u	*wo_cocu;		\/* 'concealcursor' *\/$/;"	m	struct:__anon36	access:public
__anon36::wo_cole	src/structs.h	/^    long	wo_cole;		\/* 'conceallevel' *\/$/;"	m	struct:__anon36	access:public
__anon36::wo_crb	src/structs.h	/^    int		wo_crb;$/;"	m	struct:__anon36	access:public
__anon36::wo_cuc	src/structs.h	/^    int		wo_cuc;$/;"	m	struct:__anon36	access:public
__anon36::wo_cul	src/structs.h	/^    int		wo_cul;$/;"	m	struct:__anon36	access:public
__anon36::wo_diff	src/structs.h	/^    int		wo_diff;$/;"	m	struct:__anon36	access:public
__anon36::wo_fdc	src/structs.h	/^    long	wo_fdc;$/;"	m	struct:__anon36	access:public
__anon36::wo_fde	src/structs.h	/^    char_u	*wo_fde;$/;"	m	struct:__anon36	access:public
__anon36::wo_fdi	src/structs.h	/^    char_u	*wo_fdi;$/;"	m	struct:__anon36	access:public
__anon36::wo_fdl	src/structs.h	/^    long	wo_fdl;$/;"	m	struct:__anon36	access:public
__anon36::wo_fdm	src/structs.h	/^    char_u	*wo_fdm;$/;"	m	struct:__anon36	access:public
__anon36::wo_fdn	src/structs.h	/^    long	wo_fdn;$/;"	m	struct:__anon36	access:public
__anon36::wo_fdt	src/structs.h	/^    char_u	*wo_fdt;$/;"	m	struct:__anon36	access:public
__anon36::wo_fen	src/structs.h	/^    int		wo_fen;$/;"	m	struct:__anon36	access:public
__anon36::wo_fml	src/structs.h	/^    long	wo_fml;$/;"	m	struct:__anon36	access:public
__anon36::wo_fmr	src/structs.h	/^    char_u	*wo_fmr;$/;"	m	struct:__anon36	access:public
__anon36::wo_lbr	src/structs.h	/^    int		wo_lbr;$/;"	m	struct:__anon36	access:public
__anon36::wo_list	src/structs.h	/^    int		wo_list;$/;"	m	struct:__anon36	access:public
__anon36::wo_nu	src/structs.h	/^    int		wo_nu;$/;"	m	struct:__anon36	access:public
__anon36::wo_nuw	src/structs.h	/^    long	wo_nuw;$/;"	m	struct:__anon36	access:public
__anon36::wo_pvw	src/structs.h	/^    int		wo_pvw;$/;"	m	struct:__anon36	access:public
__anon36::wo_rl	src/structs.h	/^    int		wo_rl;$/;"	m	struct:__anon36	access:public
__anon36::wo_rlc	src/structs.h	/^    char_u	*wo_rlc;$/;"	m	struct:__anon36	access:public
__anon36::wo_rnu	src/structs.h	/^    int		wo_rnu;$/;"	m	struct:__anon36	access:public
__anon36::wo_scb	src/structs.h	/^    int		wo_scb;$/;"	m	struct:__anon36	access:public
__anon36::wo_scr	src/structs.h	/^    long	wo_scr;$/;"	m	struct:__anon36	access:public
__anon36::wo_scriptID	src/structs.h	/^    int		wo_scriptID[WV_COUNT];	\/* SIDs for window-local options *\/$/;"	m	struct:__anon36	access:public
__anon36::wo_spell	src/structs.h	/^    int		wo_spell;$/;"	m	struct:__anon36	access:public
__anon36::wo_stl	src/structs.h	/^    char_u	*wo_stl;$/;"	m	struct:__anon36	access:public
__anon36::wo_wfh	src/structs.h	/^    int		wo_wfh;$/;"	m	struct:__anon36	access:public
__anon36::wo_wfw	src/structs.h	/^    int		wo_wfw;$/;"	m	struct:__anon36	access:public
__anon36::wo_wrap	src/structs.h	/^    int		wo_wrap;$/;"	m	struct:__anon36	access:public
__anon37::vi_curswant	src/structs.h	/^    colnr_T	vi_curswant;	\/* MAXCOL from w_curswant *\/$/;"	m	struct:__anon37	access:public
__anon37::vi_end	src/structs.h	/^    pos_T	vi_end;		\/* end position of last VIsual *\/$/;"	m	struct:__anon37	access:public
__anon37::vi_mode	src/structs.h	/^    int		vi_mode;	\/* VIsual_mode of last VIsual *\/$/;"	m	struct:__anon37	access:public
__anon37::vi_start	src/structs.h	/^    pos_T	vi_start;	\/* start pos of last VIsual *\/$/;"	m	struct:__anon37	access:public
__anon42::browse	src/structs.h	/^    int		browse;			\/* TRUE to invoke file dialog *\/$/;"	m	struct:__anon42	access:public
__anon42::confirm	src/structs.h	/^    int		confirm;		\/* TRUE to invoke yes\/no dialog *\/$/;"	m	struct:__anon42	access:public
__anon42::hide	src/structs.h	/^    int		hide;			\/* TRUE when ":hide" was used *\/$/;"	m	struct:__anon42	access:public
__anon42::keepalt	src/structs.h	/^    int		keepalt;		\/* TRUE when ":keepalt" was used *\/$/;"	m	struct:__anon42	access:public
__anon42::keepjumps	src/structs.h	/^    int		keepjumps;		\/* TRUE when ":keepjumps" was used *\/$/;"	m	struct:__anon42	access:public
__anon42::keepmarks	src/structs.h	/^    int		keepmarks;		\/* TRUE when ":keepmarks" was used *\/$/;"	m	struct:__anon42	access:public
__anon42::lockmarks	src/structs.h	/^    int		lockmarks;		\/* TRUE when ":lockmarks" was used *\/$/;"	m	struct:__anon42	access:public
__anon42::save_ei	src/structs.h	/^    char_u	*save_ei;		\/* saved value of 'eventignore' *\/$/;"	m	struct:__anon42	access:public
__anon42::split	src/structs.h	/^    int		split;			\/* flags for win_split() *\/$/;"	m	struct:__anon42	access:public
__anon42::tab	src/structs.h	/^    int		tab;			\/* > 0 when ":tab" was used *\/$/;"	m	struct:__anon42	access:public
__anon49::tb_buf	src/structs.h	/^    char_u	*tb_buf;	\/* buffer for typed characters *\/$/;"	m	struct:__anon49	access:public
__anon49::tb_buflen	src/structs.h	/^    int		tb_buflen;	\/* size of tb_buf[] *\/$/;"	m	struct:__anon49	access:public
__anon49::tb_change_cnt	src/structs.h	/^    int		tb_change_cnt;	\/* nr of time tb_buf was changed; never zero *\/$/;"	m	struct:__anon49	access:public
__anon49::tb_len	src/structs.h	/^    int		tb_len;		\/* number of valid bytes in tb_buf[] *\/$/;"	m	struct:__anon49	access:public
__anon49::tb_maplen	src/structs.h	/^    int		tb_maplen;	\/* nr of mapped bytes in tb_buf[] *\/$/;"	m	struct:__anon49	access:public
__anon49::tb_no_abbr_cnt	src/structs.h	/^    int		tb_no_abbr_cnt; \/* nr of bytes without abbrev. in tb_buf[] *\/$/;"	m	struct:__anon49	access:public
__anon49::tb_noremap	src/structs.h	/^    char_u	*tb_noremap;	\/* mapping flags for characters in tb_buf[] *\/$/;"	m	struct:__anon49	access:public
__anon49::tb_off	src/structs.h	/^    int		tb_off;		\/* current position in tb_buf[] *\/$/;"	m	struct:__anon49	access:public
__anon49::tb_silent	src/structs.h	/^    int		tb_silent;	\/* nr of silently mapped bytes in tb_buf[] *\/$/;"	m	struct:__anon49	access:public
__anon4::line	src/ex_docmd.c	/^    char_u	*line;		\/* command line *\/$/;"	m	struct:__anon4	file:	access:public
__anon4::lnum	src/ex_docmd.c	/^    linenr_T	lnum;		\/* sourcing_lnum of the line *\/$/;"	m	struct:__anon4	file:	access:public
__anon50::old_char	src/structs.h	/^    int			old_char;$/;"	m	struct:__anon50	access:public
__anon50::old_mod_mask	src/structs.h	/^    int			old_mod_mask;$/;"	m	struct:__anon50	access:public
__anon50::save_inputbuf	src/structs.h	/^    char_u		*save_inputbuf;$/;"	m	struct:__anon50	access:public
__anon50::save_stuffbuff	src/structs.h	/^    struct buffheader	save_stuffbuff;$/;"	m	struct:__anon50	typeref:struct:__anon50::buffheader	access:public
__anon50::save_typebuf	src/structs.h	/^    typebuf_T		save_typebuf;$/;"	m	struct:__anon50	access:public
__anon50::typebuf_valid	src/structs.h	/^    int			typebuf_valid;	    \/* TRUE when save_typebuf valid *\/$/;"	m	struct:__anon50	access:public
__anon51::vc_cpfrom	src/structs.h	/^    int		vc_cpfrom;	\/* codepage to convert from (CONV_CODEPAGE) *\/$/;"	m	struct:__anon51	access:public
__anon51::vc_cpto	src/structs.h	/^    int		vc_cpto;	\/* codepage to convert to (CONV_CODEPAGE) *\/$/;"	m	struct:__anon51	access:public
__anon51::vc_factor	src/structs.h	/^    int		vc_factor;	\/* max. expansion factor *\/$/;"	m	struct:__anon51	access:public
__anon51::vc_fail	src/structs.h	/^    int		vc_fail;	\/* fail for invalid char, don't use '?' *\/$/;"	m	struct:__anon51	access:public
__anon51::vc_fd	src/structs.h	/^    iconv_t	vc_fd;		\/* for CONV_ICONV *\/$/;"	m	struct:__anon51	access:public
__anon51::vc_type	src/structs.h	/^    int		vc_type;	\/* zero or one of the CONV_ values *\/$/;"	m	struct:__anon51	access:public
__anon52::vir_conv	src/structs.h	/^    vimconv_T	vir_conv;	\/* encoding conversion *\/$/;"	m	struct:__anon52	access:public
__anon52::vir_fd	src/structs.h	/^    FILE	*vir_fd;	\/* file descriptor *\/$/;"	m	struct:__anon52	access:public
__anon52::vir_line	src/structs.h	/^    char_u	*vir_line;	\/* text of the current line *\/$/;"	m	struct:__anon52	access:public
__anon53::__anon54::v_dict	src/structs.h	/^	dict_T		*v_dict;	\/* dict value (can be NULL!) *\/$/;"	m	union:__anon53::__anon54	access:public
__anon53::__anon54::v_float	src/structs.h	/^	float_T		v_float;	\/* floating number value *\/$/;"	m	union:__anon53::__anon54	access:public
__anon53::__anon54::v_list	src/structs.h	/^	list_T		*v_list;	\/* list value (can be NULL!) *\/$/;"	m	union:__anon53::__anon54	access:public
__anon53::__anon54::v_number	src/structs.h	/^	varnumber_T	v_number;	\/* number value *\/$/;"	m	union:__anon53::__anon54	access:public
__anon53::__anon54::v_string	src/structs.h	/^	char_u		*v_string;	\/* string value (can be NULL!) *\/$/;"	m	union:__anon53::__anon54	access:public
__anon53::v_lock	src/structs.h	/^    char	v_lock;	    \/* see below: VAR_LOCKED, VAR_FIXED *\/$/;"	m	struct:__anon53	access:public
__anon53::v_type	src/structs.h	/^    char	v_type;	    \/* see below: VAR_NUMBER, VAR_STRING, etc. *\/$/;"	m	struct:__anon53	access:public
__anon53::vval	src/structs.h	/^    }		vval;$/;"	m	struct:__anon53	typeref:union:__anon53::__anon54	access:public
__anon55::b_cap_prog	src/structs.h	/^    regprog_T	*b_cap_prog;	\/* program for 'spellcapcheck' *\/$/;"	m	struct:__anon55	access:public
__anon55::b_keywtab	src/structs.h	/^    hashtab_T	b_keywtab;		\/* syntax keywords hash table *\/$/;"	m	struct:__anon55	access:public
__anon55::b_keywtab_ic	src/structs.h	/^    hashtab_T	b_keywtab_ic;		\/* idem, ignore case *\/$/;"	m	struct:__anon55	access:public
__anon55::b_langp	src/structs.h	/^    garray_T	b_langp;	\/* list of pointers to slang_T, see spell.c *\/$/;"	m	struct:__anon55	access:public
__anon55::b_nospell_cluster_id	src/structs.h	/^    int		b_nospell_cluster_id;	\/* @NoSpell cluster ID or 0 *\/$/;"	m	struct:__anon55	access:public
__anon55::b_p_spc	src/structs.h	/^    char_u	*b_p_spc;	\/* 'spellcapcheck' *\/$/;"	m	struct:__anon55	access:public
__anon55::b_p_spf	src/structs.h	/^    char_u	*b_p_spf;	\/* 'spellfile' *\/$/;"	m	struct:__anon55	access:public
__anon55::b_p_spl	src/structs.h	/^    char_u	*b_p_spl;	\/* 'spelllang' *\/$/;"	m	struct:__anon55	access:public
__anon55::b_spell_cluster_id	src/structs.h	/^    int		b_spell_cluster_id;	\/* @Spell cluster ID or 0 *\/$/;"	m	struct:__anon55	access:public
__anon55::b_spell_ismw	src/structs.h	/^    char_u	b_spell_ismw[256];\/* flags: is midword char *\/$/;"	m	struct:__anon55	access:public
__anon55::b_spell_ismw_mb	src/structs.h	/^    char_u	*b_spell_ismw_mb; \/* multi-byte midword chars *\/$/;"	m	struct:__anon55	access:public
__anon55::b_sst_array	src/structs.h	/^    synstate_T	*b_sst_array;$/;"	m	struct:__anon55	access:public
__anon55::b_sst_check_lnum	src/structs.h	/^    linenr_T	b_sst_check_lnum;$/;"	m	struct:__anon55	access:public
__anon55::b_sst_first	src/structs.h	/^    synstate_T	*b_sst_first;$/;"	m	struct:__anon55	access:public
__anon55::b_sst_firstfree	src/structs.h	/^    synstate_T	*b_sst_firstfree;$/;"	m	struct:__anon55	access:public
__anon55::b_sst_freecount	src/structs.h	/^    int		b_sst_freecount;$/;"	m	struct:__anon55	access:public
__anon55::b_sst_lasttick	src/structs.h	/^    short_u	b_sst_lasttick;	\/* last display tick *\/$/;"	m	struct:__anon55	access:public
__anon55::b_sst_len	src/structs.h	/^    int		b_sst_len;$/;"	m	struct:__anon55	access:public
__anon55::b_syn_clusters	src/structs.h	/^    garray_T	b_syn_clusters;		\/* table for syntax clusters *\/$/;"	m	struct:__anon55	access:public
__anon55::b_syn_conceal	src/structs.h	/^    int		b_syn_conceal;		\/* auto-conceal for :syn cmds *\/$/;"	m	struct:__anon55	access:public
__anon55::b_syn_containedin	src/structs.h	/^    int		b_syn_containedin;	\/* TRUE when there is an item with a$/;"	m	struct:__anon55	access:public
__anon55::b_syn_error	src/structs.h	/^    int		b_syn_error;		\/* TRUE when error occured in HL *\/$/;"	m	struct:__anon55	access:public
__anon55::b_syn_folditems	src/structs.h	/^    int		b_syn_folditems;	\/* number of patterns with the HL_FOLD$/;"	m	struct:__anon55	access:public
__anon55::b_syn_ic	src/structs.h	/^    int		b_syn_ic;		\/* ignore case for :syn cmds *\/$/;"	m	struct:__anon55	access:public
__anon55::b_syn_linecont_ic	src/structs.h	/^    int		b_syn_linecont_ic;	\/* ignore-case flag for above *\/$/;"	m	struct:__anon55	access:public
__anon55::b_syn_linecont_pat	src/structs.h	/^    char_u	*b_syn_linecont_pat;	\/* line continuation pattern *\/$/;"	m	struct:__anon55	access:public
__anon55::b_syn_linecont_prog	src/structs.h	/^    regprog_T	*b_syn_linecont_prog;	\/* line continuation program *\/$/;"	m	struct:__anon55	access:public
__anon55::b_syn_patterns	src/structs.h	/^    garray_T	b_syn_patterns;		\/* table for syntax patterns *\/$/;"	m	struct:__anon55	access:public
__anon55::b_syn_spell	src/structs.h	/^    int		b_syn_spell;		\/* SYNSPL_ values *\/$/;"	m	struct:__anon55	access:public
__anon55::b_syn_sync_flags	src/structs.h	/^    int		b_syn_sync_flags;	\/* flags about how to sync *\/$/;"	m	struct:__anon55	access:public
__anon55::b_syn_sync_id	src/structs.h	/^    short	b_syn_sync_id;		\/* group to sync on *\/$/;"	m	struct:__anon55	access:public
__anon55::b_syn_sync_linebreaks	src/structs.h	/^    long	b_syn_sync_linebreaks;	\/* offset for multi-line pattern *\/$/;"	m	struct:__anon55	access:public
__anon55::b_syn_sync_maxlines	src/structs.h	/^    long	b_syn_sync_maxlines;	\/* maximal sync lines offset *\/$/;"	m	struct:__anon55	access:public
__anon55::b_syn_sync_minlines	src/structs.h	/^    long	b_syn_sync_minlines;	\/* minimal sync lines offset *\/$/;"	m	struct:__anon55	access:public
__anon55::b_syn_topgrp	src/structs.h	/^    int		b_syn_topgrp;		\/* for ":syntax include" *\/$/;"	m	struct:__anon55	access:public
__anon55::dummy	src/structs.h	/^    int		dummy;$/;"	m	struct:__anon55	access:public
__anon56::attr	src/structs.h	/^    int		attr;	\/* attributes to be used for a match *\/$/;"	m	struct:__anon56	access:public
__anon56::attr_cur	src/structs.h	/^    int		attr_cur; \/* attributes currently active in win_line() *\/$/;"	m	struct:__anon56	access:public
__anon56::buf	src/structs.h	/^    buf_T	*buf;	\/* the buffer to search for a match *\/$/;"	m	struct:__anon56	access:public
__anon56::endcol	src/structs.h	/^    colnr_T	endcol;	 \/* in win_line() points to char where HL ends *\/$/;"	m	struct:__anon56	access:public
__anon56::first_lnum	src/structs.h	/^    linenr_T	first_lnum;	\/* first lnum to search for multi-line pat *\/$/;"	m	struct:__anon56	access:public
__anon56::lnum	src/structs.h	/^    linenr_T	lnum;	\/* the line to search for a match *\/$/;"	m	struct:__anon56	access:public
__anon56::rm	src/structs.h	/^    regmmatch_T	rm;	\/* points to the regexp program; contains last found$/;"	m	struct:__anon56	access:public
__anon56::startcol	src/structs.h	/^    colnr_T	startcol; \/* in win_line() points to char where HL starts *\/$/;"	m	struct:__anon56	access:public
__anon56::tm	src/structs.h	/^    proftime_T	tm;	\/* for a time limit *\/$/;"	m	struct:__anon56	access:public
__anon57::globaldir	src/structs.h	/^    char_u	*globaldir;	\/* saved value of globaldir *\/$/;"	m	struct:__anon57	access:public
__anon57::new_curbuf	src/structs.h	/^    buf_T	*new_curbuf;	\/* new curbuf *\/$/;"	m	struct:__anon57	access:public
__anon57::new_curwin	src/structs.h	/^    win_T	*new_curwin;	\/* new curwin *\/$/;"	m	struct:__anon57	access:public
__anon57::save_curbuf	src/structs.h	/^    buf_T	*save_curbuf;	\/* saved curbuf *\/$/;"	m	struct:__anon57	access:public
__anon57::save_curwin	src/structs.h	/^    win_T	*save_curwin;	\/* saved curwin *\/$/;"	m	struct:__anon57	access:public
__anon57::use_aucmd_win	src/structs.h	/^    int		use_aucmd_win;	\/* using aucmd_win *\/$/;"	m	struct:__anon57	access:public
__anon58::hasnum	src/structs.h	/^    int		hasnum;$/;"	m	struct:__anon58	access:public
__anon58::name	src/structs.h	/^    const char	*name;$/;"	m	struct:__anon58	access:public
__anon58::number	src/structs.h	/^    long	number;$/;"	m	struct:__anon58	access:public
__anon58::present	src/structs.h	/^    int		present;$/;"	m	struct:__anon58	access:public
__anon58::string	src/structs.h	/^    char_u	*string;	\/* points into option string *\/$/;"	m	struct:__anon58	access:public
__anon58::strlen	src/structs.h	/^    int		strlen;$/;"	m	struct:__anon58	access:public
__anon59::bg_color	src/structs.h	/^    long_u	bg_color;$/;"	m	struct:__anon59	access:public
__anon59::bold	src/structs.h	/^    int		bold;$/;"	m	struct:__anon59	access:public
__anon59::fg_color	src/structs.h	/^    long_u	fg_color;$/;"	m	struct:__anon59	access:public
__anon59::italic	src/structs.h	/^    int		italic;$/;"	m	struct:__anon59	access:public
__anon59::undercurl	src/structs.h	/^    int		undercurl;$/;"	m	struct:__anon59	access:public
__anon59::underline	src/structs.h	/^    int		underline;$/;"	m	struct:__anon59	access:public
__anon5::expand	src/ex_docmd.c	/^    int	    expand;$/;"	m	struct:__anon5	file:	access:public
__anon5::name	src/ex_docmd.c	/^    char    *name;$/;"	m	struct:__anon5	file:	access:public
__anon60::arguments	src/structs.h	/^    char_u	*arguments;$/;"	m	struct:__anon60	access:public
__anon60::chars_per_line	src/structs.h	/^    int		chars_per_line;$/;"	m	struct:__anon60	access:public
__anon60::do_syntax	src/structs.h	/^    int		do_syntax;$/;"	m	struct:__anon60	access:public
__anon60::duplex	src/structs.h	/^    int		duplex;$/;"	m	struct:__anon60	access:public
__anon60::has_color	src/structs.h	/^    int		has_color;$/;"	m	struct:__anon60	access:public
__anon60::jobname	src/structs.h	/^    char_u	*jobname;$/;"	m	struct:__anon60	access:public
__anon60::lines_per_page	src/structs.h	/^    int		lines_per_page;$/;"	m	struct:__anon60	access:public
__anon60::modec	src/structs.h	/^    int		modec;$/;"	m	struct:__anon60	access:public
__anon60::n_collated_copies	src/structs.h	/^    int		n_collated_copies;$/;"	m	struct:__anon60	access:public
__anon60::n_uncollated_copies	src/structs.h	/^    int		n_uncollated_copies;$/;"	m	struct:__anon60	access:public
__anon60::number	src/structs.h	/^    prt_text_attr_T number;$/;"	m	struct:__anon60	access:public
__anon60::outfile	src/structs.h	/^    char_u	*outfile;$/;"	m	struct:__anon60	access:public
__anon60::user_abort	src/structs.h	/^    int		user_abort;$/;"	m	struct:__anon60	access:public
__anon61::pum_extra	src/structs.h	/^    char_u	*pum_extra;	\/* extra menu text (may be truncated) *\/$/;"	m	struct:__anon61	access:public
__anon61::pum_info	src/structs.h	/^    char_u	*pum_info;	\/* extra info *\/$/;"	m	struct:__anon61	access:public
__anon61::pum_kind	src/structs.h	/^    char_u	*pum_kind;	\/* extra kind text (may be truncated) *\/$/;"	m	struct:__anon61	access:public
__anon61::pum_text	src/structs.h	/^    char_u	*pum_text;	\/* main menu text *\/$/;"	m	struct:__anon61	access:public
__anon62::tn_did_filefind_init	src/structs.h	/^    int		tn_did_filefind_init;$/;"	m	struct:__anon62	access:public
__anon62::tn_hf_idx	src/structs.h	/^    int		tn_hf_idx;$/;"	m	struct:__anon62	access:public
__anon62::tn_np	src/structs.h	/^    char_u	*tn_np;		\/* current position in tn_tags *\/$/;"	m	struct:__anon62	access:public
__anon62::tn_search_ctx	src/structs.h	/^    void	*tn_search_ctx;$/;"	m	struct:__anon62	access:public
__anon62::tn_tags	src/structs.h	/^    char_u	*tn_tags;	\/* value of 'tags' when starting *\/$/;"	m	struct:__anon62	access:public
__anon63::buffer	src/structs.h	/^  char_u   buffer[64];$/;"	m	struct:__anon63	access:public
__anon63::state	src/structs.h	/^  UINT32_T state[8];$/;"	m	struct:__anon63	access:public
__anon63::total	src/structs.h	/^  UINT32_T total[2];$/;"	m	struct:__anon63	access:public
__anon65::clientid	src/os_unix.c	/^    char *clientid;	    \/* The client ID for the current smc session *\/$/;"	m	struct:__anon65	file:	access:public
__anon65::iceconn	src/os_unix.c	/^    IceConn iceconn;	    \/* The ICE connection ID *\/$/;"	m	struct:__anon65	file:	access:public
__anon65::save_yourself	src/os_unix.c	/^    Bool save_yourself;     \/* If we're in the middle of a save_yourself *\/$/;"	m	struct:__anon65	file:	access:public
__anon65::shutdown	src/os_unix.c	/^    Bool shutdown;	    \/* If we're in shutdown mode *\/$/;"	m	struct:__anon65	file:	access:public
__anon65::smcconn	src/os_unix.c	/^    SmcConn smcconn;	    \/* The SM connection ID *\/$/;"	m	struct:__anon65	file:	access:public
__anon66::end_col_nr	src/ex_cmds.c	/^    long	end_col_nr;		\/* ending column number *\/$/;"	m	struct:__anon66	file:	access:public
__anon66::lnum	src/ex_cmds.c	/^    linenr_T	lnum;			\/* line number *\/$/;"	m	struct:__anon66	file:	access:public
__anon66::start_col_nr	src/ex_cmds.c	/^    long	start_col_nr;		\/* starting column number or number *\/$/;"	m	struct:__anon66	file:	access:public
__anon68::from	src/menu.c	/^    char_u	*from;		\/* English name *\/$/;"	m	struct:__anon68	file:	access:public
__anon68::from_noamp	src/menu.c	/^    char_u	*from_noamp;	\/* same, without '&' *\/$/;"	m	struct:__anon68	file:	access:public
__anon68::to	src/menu.c	/^    char_u	*to;		\/* translated name *\/$/;"	m	struct:__anon68	file:	access:public
__anon70::sense	src/integration.h	/^	Boolean		sense;$/;"	m	struct:__anon70	access:public
__anon70::verb	src/integration.h	/^	char		*verb;$/;"	m	struct:__anon70	access:public
__anon71::program	src/regexp.h	/^    char_u		program[1];		\/* actually longer.. *\/$/;"	m	struct:__anon71	access:public
__anon71::reganch	src/regexp.h	/^    char_u		reganch;$/;"	m	struct:__anon71	access:public
__anon71::regflags	src/regexp.h	/^    unsigned		regflags;$/;"	m	struct:__anon71	access:public
__anon71::reghasz	src/regexp.h	/^    char_u		reghasz;$/;"	m	struct:__anon71	access:public
__anon71::regmlen	src/regexp.h	/^    int			regmlen;$/;"	m	struct:__anon71	access:public
__anon71::regmust	src/regexp.h	/^    char_u		*regmust;$/;"	m	struct:__anon71	access:public
__anon71::regstart	src/regexp.h	/^    int			regstart;$/;"	m	struct:__anon71	access:public
__anon72::endp	src/regexp.h	/^    char_u		*endp[NSUBEXP];$/;"	m	struct:__anon72	access:public
__anon72::regprog	src/regexp.h	/^    regprog_T		*regprog;$/;"	m	struct:__anon72	access:public
__anon72::rm_ic	src/regexp.h	/^    int			rm_ic;$/;"	m	struct:__anon72	access:public
__anon72::startp	src/regexp.h	/^    char_u		*startp[NSUBEXP];$/;"	m	struct:__anon72	access:public
__anon73::endpos	src/regexp.h	/^    lpos_T		endpos[NSUBEXP];$/;"	m	struct:__anon73	access:public
__anon73::regprog	src/regexp.h	/^    regprog_T		*regprog;$/;"	m	struct:__anon73	access:public
__anon73::rmm_ic	src/regexp.h	/^    int			rmm_ic;$/;"	m	struct:__anon73	access:public
__anon73::rmm_maxcol	src/regexp.h	/^    colnr_T		rmm_maxcol;	\/* when not zero: maximum column *\/$/;"	m	struct:__anon73	access:public
__anon73::startpos	src/regexp.h	/^    lpos_T		startpos[NSUBEXP];$/;"	m	struct:__anon73	access:public
__anon74::matches	src/regexp.h	/^    char_u		*matches[NSUBEXP];$/;"	m	struct:__anon74	access:public
__anon74::refcnt	src/regexp.h	/^    short		refcnt;$/;"	m	struct:__anon74	access:public
__anon75::__anon76::__anon77::_basic	src/os_vms.c	/^	    char	_basic[3];$/;"	m	struct:__anon75::__anon76::__anon77	file:	access:public
__anon75::__anon76::__anon77::length	src/os_vms.c	/^	    char	length;$/;"	m	struct:__anon75::__anon76::__anon77	file:	access:public
__anon75::__anon76::basic	src/os_vms.c	/^	int	basic;$/;"	m	union:__anon75::__anon76	file:	access:public
__anon75::__anon76::y	src/os_vms.c	/^	}	y;$/;"	m	union:__anon75::__anon76	typeref:struct:__anon75::__anon76::__anon77	file:	access:public
__anon75::class	src/os_vms.c	/^    char	class;$/;"	m	struct:__anon75	file:	access:public
__anon75::extended	src/os_vms.c	/^    int		extended;$/;"	m	struct:__anon75	file:	access:public
__anon75::type	src/os_vms.c	/^    char	type;$/;"	m	struct:__anon75	file:	access:public
__anon75::width	src/os_vms.c	/^    short	width;$/;"	m	struct:__anon75	file:	access:public
__anon75::x	src/os_vms.c	/^    }	x;$/;"	m	struct:__anon75	typeref:union:__anon75::__anon76	file:	access:public
__anon78::bufadrs	src/os_vms.c	/^    char	*bufadrs;$/;"	m	struct:__anon78	file:	access:public
__anon78::buflen	src/os_vms.c	/^    short	buflen;$/;"	m	struct:__anon78	file:	access:public
__anon78::itemcode	src/os_vms.c	/^    short	itemcode;$/;"	m	struct:__anon78	file:	access:public
__anon78::retlen	src/os_vms.c	/^    int		*retlen;$/;"	m	struct:__anon78	file:	access:public
__anon79::equ	src/os_vms.c	/^    ITEM	equ;$/;"	m	struct:__anon79	file:	access:public
__anon79::nul	src/os_vms.c	/^    int		nul;$/;"	m	struct:__anon79	file:	access:public
__anon7::key_sym	src/gui_photon.c	/^    int	    key_sym;$/;"	m	struct:__anon7	file:	access:public
__anon7::vim_code0	src/gui_photon.c	/^    char_u  vim_code0;$/;"	m	struct:__anon7	file:	access:public
__anon7::vim_code1	src/gui_photon.c	/^    char_u  vim_code1;$/;"	m	struct:__anon7	file:	access:public
__anon80::index	src/os_vms.c	/^    ITEM	index;$/;"	m	struct:__anon80	file:	access:public
__anon80::nul	src/os_vms.c	/^    int	nul;$/;"	m	struct:__anon80	file:	access:public
__anon80::string	src/os_vms.c	/^    ITEM	string;$/;"	m	struct:__anon80	file:	access:public
__anon81::metakey	src/os_msdos.c	/^    char_u	metakey;$/;"	m	struct:__anon81	file:	access:public
__anon81::scancode	src/os_msdos.c	/^    char_u	scancode;$/;"	m	struct:__anon81	file:	access:public
__anon82::cont_in_list	src/syntax.c	/^    short	*cont_in_list;	\/* group IDs for "containedin" argument *\/$/;"	m	struct:__anon82	file:	access:public
__anon82::cont_list	src/syntax.c	/^    short	*cont_list;	\/* group IDs for "contains" argument *\/$/;"	m	struct:__anon82	file:	access:public
__anon82::flags	src/syntax.c	/^    int		flags;		\/* flags for contained and transparent *\/$/;"	m	struct:__anon82	file:	access:public
__anon82::has_cont_list	src/syntax.c	/^    char	has_cont_list;	\/* TRUE if "cont_list" can be used *\/$/;"	m	struct:__anon82	file:	access:public
__anon82::keyword	src/syntax.c	/^    int		keyword;	\/* TRUE for ":syn keyword" *\/$/;"	m	struct:__anon82	file:	access:public
__anon82::next_list	src/syntax.c	/^    short	*next_list;	\/* group IDs for "nextgroup" argument *\/$/;"	m	struct:__anon82	file:	access:public
__anon82::sync_idx	src/syntax.c	/^    int		*sync_idx;	\/* syntax item for "grouphere" argument, NULL$/;"	m	struct:__anon82	file:	access:public
__anon84::fill	src/move.c	/^    int		    fill;	\/* filler lines *\/$/;"	m	struct:__anon84	file:	access:public
__anon84::height	src/move.c	/^    int		    height;	\/* height of added line *\/$/;"	m	struct:__anon84	file:	access:public
__anon84::lnum	src/move.c	/^    linenr_T	    lnum;	\/* line number *\/$/;"	m	struct:__anon84	file:	access:public
__anon86::cansplit	src/if_cscope.h	/^    int	    cansplit;		\/* if supports splitting window *\/$/;"	m	struct:__anon86	access:public
__anon86::func	src/if_cscope.h	/^    int     (*func) __ARGS((exarg_T *eap));$/;"	m	struct:__anon86	access:public
__anon86::help	src/if_cscope.h	/^    char *  help;$/;"	m	struct:__anon86	access:public
__anon86::name	src/if_cscope.h	/^    char *  name;$/;"	m	struct:__anon86	access:public
__anon86::usage	src/if_cscope.h	/^    char *  usage;$/;"	m	struct:__anon86	access:public
__anon89::chAlone	src/os_win32.c	/^    int	    chAlone;$/;"	m	struct:__anon89	file:	access:public
__anon89::chAlt	src/os_win32.c	/^    int	    chAlt;$/;"	m	struct:__anon89	file:	access:public
__anon89::chCtrl	src/os_win32.c	/^    int	    chCtrl;$/;"	m	struct:__anon89	file:	access:public
__anon89::chShift	src/os_win32.c	/^    int	    chShift;$/;"	m	struct:__anon89	file:	access:public
__anon89::fAnsiKey	src/os_win32.c	/^    BOOL    fAnsiKey;$/;"	m	struct:__anon89	file:	access:public
__anon89::wVirtKey	src/os_win32.c	/^    WORD    wVirtKey;$/;"	m	struct:__anon89	file:	access:public
__anon8::r_bac	src/gui_riscos.c	/^    int		r_bac;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_bpl	src/gui_riscos.c	/^    int		r_bpl;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_bpp	src/gui_riscos.c	/^    int		r_bpp;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_caddr	src/gui_riscos.c	/^    char	*r_caddr;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_cbpc	src/gui_riscos.c	/^    int		r_cbpc;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_cbpl	src/gui_riscos.c	/^    int		r_cbpl;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_charh	src/gui_riscos.c	/^    int		r_charh;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_charw	src/gui_riscos.c	/^    int		r_charw;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_data	src/gui_riscos.c	/^    int		r_data;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_flags	src/gui_riscos.c	/^    int		r_flags;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_for	src/gui_riscos.c	/^    int		r_for;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_linesp	src/gui_riscos.c	/^    int		r_linesp;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_magx	src/gui_riscos.c	/^    int		r_magx;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_magy	src/gui_riscos.c	/^    int		r_magy;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_maxx	src/gui_riscos.c	/^    int		r_maxx;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_maxy	src/gui_riscos.c	/^    int		r_maxy;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_minx	src/gui_riscos.c	/^    int		r_minx;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_miny	src/gui_riscos.c	/^    int		r_miny;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_mode	src/gui_riscos.c	/^    int		r_mode;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_palette	src/gui_riscos.c	/^    int		*r_palette;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_screen	src/gui_riscos.c	/^    int		r_screen;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_scrollx	src/gui_riscos.c	/^    int		r_scrollx;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_scrolly	src/gui_riscos.c	/^    int		r_scrolly;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_workarea	src/gui_riscos.c	/^    char	*r_workarea;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_xsize	src/gui_riscos.c	/^    int		r_xsize;$/;"	m	struct:__anon8	file:	access:public
__anon8::r_ysize	src/gui_riscos.c	/^    int		r_ysize;$/;"	m	struct:__anon8	file:	access:public
__anon91::flags	src/gui_gtk_x11.c	/^    unsigned int    flags;$/;"	m	struct:__anon91	file:	access:public
__anon91::name	src/gui_gtk_x11.c	/^    const char	    *name;$/;"	m	struct:__anon91	file:	access:public
__anon92::core_class	src/gui_xmebwp.h	/^    CoreClassPart core_class;$/;"	m	struct:__anon92	access:public
__anon92::enhancedbutton_class	src/gui_xmebwp.h	/^    XmEnhancedButtonClassPart enhancedbutton_class;$/;"	m	struct:__anon92	access:public
__anon92::label_class	src/gui_xmebwp.h	/^    XmLabelClassPart label_class;$/;"	m	struct:__anon92	access:public
__anon92::primitive_class	src/gui_xmebwp.h	/^    XmPrimitiveClassPart primitive_class;$/;"	m	struct:__anon92	access:public
__anon92::pushbutton_class	src/gui_xmebwp.h	/^    XmPushButtonClassPart pushbutton_class;$/;"	m	struct:__anon92	access:public
__anon93::name	src/if_python.c	/^    char *name;$/;"	m	struct:__anon93	file:	access:public
__anon93::ptr	src/if_python.c	/^    PYTHON_PROC *ptr;$/;"	m	struct:__anon93	file:	access:public
__anon97::fd_flags	src/fold.c	/^    char	fd_flags;	\/* see below *\/$/;"	m	struct:__anon97	file:	access:public
__anon97::fd_len	src/fold.c	/^    linenr_T	fd_len;		\/* number of lines in the fold *\/$/;"	m	struct:__anon97	file:	access:public
__anon97::fd_nested	src/fold.c	/^    garray_T	fd_nested;	\/* array of nested folds *\/$/;"	m	struct:__anon97	file:	access:public
__anon97::fd_small	src/fold.c	/^    char	fd_small;	\/* TRUE, FALSE or MAYBE: fold smaller than$/;"	m	struct:__anon97	file:	access:public
__anon97::fd_top	src/fold.c	/^    linenr_T	fd_top;		\/* first line of fold; for nested fold$/;"	m	struct:__anon97	file:	access:public
__anon98::end	src/fold.c	/^    int		end;		\/* level of fold that is forced to end below$/;"	m	struct:__anon98	file:	access:public
__anon98::had_end	src/fold.c	/^    int		had_end;	\/* level of fold that is forced to end above$/;"	m	struct:__anon98	file:	access:public
__anon98::lnum	src/fold.c	/^    linenr_T	lnum;		\/* current line number *\/$/;"	m	struct:__anon98	file:	access:public
__anon98::lnum_save	src/fold.c	/^    linenr_T	lnum_save;	\/* line nr used by foldUpdateIEMSRecurse() *\/$/;"	m	struct:__anon98	file:	access:public
__anon98::lvl	src/fold.c	/^    int		lvl;		\/* current level (-1 for undefined) *\/$/;"	m	struct:__anon98	file:	access:public
__anon98::lvl_next	src/fold.c	/^    int		lvl_next;	\/* level used for next line *\/$/;"	m	struct:__anon98	file:	access:public
__anon98::off	src/fold.c	/^    linenr_T	off;		\/* offset between lnum and real line number *\/$/;"	m	struct:__anon98	file:	access:public
__anon98::start	src/fold.c	/^    int		start;		\/* number of folds that are forced to start at$/;"	m	struct:__anon98	file:	access:public
__anon98::wp	src/fold.c	/^    win_T	*wp;		\/* window *\/$/;"	m	struct:__anon98	file:	access:public
__anon99::__anon100::pos	src/regexp.c	/^	lpos_T	pos;	\/* reginput pos, for multi-line regexp *\/$/;"	m	union:__anon99::__anon100	file:	access:public
__anon99::__anon100::ptr	src/regexp.c	/^	char_u	*ptr;	\/* reginput pointer, for single-line regexp *\/$/;"	m	union:__anon99::__anon100	file:	access:public
__anon99::rs_len	src/regexp.c	/^    int		rs_len;$/;"	m	struct:__anon99	file:	access:public
__anon99::rs_u	src/regexp.c	/^    } rs_u;$/;"	m	struct:__anon99	typeref:union:__anon99::__anon100	file:	access:public
__anon9::argc	src/main.c	/^    int		argc;$/;"	m	struct:__anon9	file:	access:public
__anon9::argv	src/main.c	/^    char	**argv;$/;"	m	struct:__anon9	file:	access:public
__anon9::ask_for_key	src/main.c	/^    int		ask_for_key;		\/* -x argument *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::cmds_tofree	src/main.c	/^    char_u	cmds_tofree[MAX_ARG_CMDS];   \/* commands that need free() *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::commands	src/main.c	/^    char_u	*commands[MAX_ARG_CMDS];     \/* commands from + or -c arg. *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::diff_mode	src/main.c	/^    int		diff_mode;		\/* start with 'diff' set *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::edit_type	src/main.c	/^    int		edit_type;		\/* type of editing to do *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::evim_mode	src/main.c	/^    int		evim_mode;		\/* started as "evim" *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::full_path	src/main.c	/^    int		full_path;		\/* file name argument was full path *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::literal	src/main.c	/^    int		literal;		\/* don't expand file names *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::n_commands	src/main.c	/^    int		n_commands;		     \/* no. of commands from + or -c *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::n_pre_commands	src/main.c	/^    int		n_pre_commands;		     \/* no. of commands from --cmd *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::no_swap_file	src/main.c	/^    int		no_swap_file;		\/* "-n" argument used *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::pre_commands	src/main.c	/^    char_u	*pre_commands[MAX_ARG_CMDS]; \/* commands from --cmd argument *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::serverArg	src/main.c	/^    int		serverArg;		\/* TRUE when argument for a server *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::serverName_arg	src/main.c	/^    char_u	*serverName_arg;	\/* cmdline arg for server name *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::serverStr	src/main.c	/^    char_u	*serverStr;		\/* remote server command *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::serverStrEnc	src/main.c	/^    char_u	*serverStrEnc;		\/* encoding of serverStr *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::servername	src/main.c	/^    char_u	*servername;		\/* allocated name for our server *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::stdout_isatty	src/main.c	/^    int		stdout_isatty;		\/* is stdout a terminal? *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::tagname	src/main.c	/^    char_u	*tagname;		\/* tag from -t argument *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::term	src/main.c	/^    char_u	*term;			\/* specified terminal name *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::use_debug_break_level	src/main.c	/^    int		use_debug_break_level;$/;"	m	struct:__anon9	file:	access:public
__anon9::use_ef	src/main.c	/^    char_u	*use_ef;		\/* 'errorfile' from -q argument *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::use_vimrc	src/main.c	/^    char_u	*use_vimrc;		\/* vimrc from -u argument *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::want_full_screen	src/main.c	/^    int		want_full_screen;$/;"	m	struct:__anon9	file:	access:public
__anon9::window_count	src/main.c	/^    int		window_count;		\/* number of windows to use *\/$/;"	m	struct:__anon9	file:	access:public
__anon9::window_layout	src/main.c	/^    int		window_layout;		\/* 0, WIN_HOR, WIN_VER or WIN_TABS *\/$/;"	m	struct:__anon9	file:	access:public
__chkabort	src/os_amiga.c	/^void __regargs __chkabort(void)$/;"	f	signature:(void)
__chkabort	src/os_amiga.c	/^void __regargs __chkabort(void);$/;"	p	file:	signature:(void)
__dynamic_da_name	src/os_riscos.c	/^const char *__dynamic_da_name = "Vim heap"; \/* Enable and name our dynamic area *\/$/;"	v
__if_ole_h__	src/if_ole.h	20;"	d
__if_sniff_h__	src/if_sniff.h	6;"	d
__w64	src/vim.h	407;"	d
_addfmt	src/termlib.c	/^_addfmt(buf, fmt, val)$/;"	f	file:
_addfmt	src/termlib.c	/^static char *_addfmt __ARGS((char *, char *, int));$/;"	p	file:	signature:(char *, char *, int)
_apply_thunk_catch_exceptions	src/if_mzsch.c	/^_apply_thunk_catch_exceptions(Scheme_Object *f, Scheme_Object **exn)$/;"	f	file:	signature:(Scheme_Object *f, Scheme_Object **exn)
_apply_thunk_catch_exceptions	src/if_mzsch.c	/^static Scheme_Object *_apply_thunk_catch_exceptions($/;"	p	file:	signature:( Scheme_Object *, Scheme_Object **)
_basic	src/os_vms.c	/^	    char	_basic[3];$/;"	m	struct:__anon75::__anon76::__anon77	file:	access:public
_bauds	src/termlib.c	/^long _bauds[16]={$/;"	v
_cdecl	src/gui_w32.c	63;"	d	file:
_cdecl	src/gui_w48.c	86;"	d	file:
_cdecl	src/misc1.c	8708;"	d	file:
_cdecl	src/misc1.c	8711;"	d	file:
_cdecl	src/os_msdos.c	49;"	d	file:
_cdecl	src/os_w32exe.c	19;"	d	file:
_cdecl	src/os_win16.c	68;"	d	file:
_chdrive	src/os_mswin.c	/^int _chdrive(int drive)$/;"	f	signature:(int drive)
_filbuf	src/auto/osdef.h	/^extern int	_filbuf __ARGS((FILE *));$/;"	p	signature:(FILE *)
_filbuf	src/xxd/xxd.c	/^extern int _filbuf __P((FILE *));$/;"	p	file:	signature:(FILE *)
_find	src/termlib.c	/^_find(s, set)$/;"	f	file:
_find	src/termlib.c	/^static char *_find __ARGS((char *, char *));$/;"	p	file:	signature:(char *, char *)
_flsbuf	src/auto/osdef.h	/^extern int	_flsbuf __ARGS((int, FILE *));$/;"	p	signature:(int, FILE *)
_flsbuf	src/xxd/xxd.c	/^extern int _flsbuf __P((unsigned char, FILE *));$/;"	p	file:	signature:(unsigned char, FILE *)
_fullpath	src/os_mswin.c	/^char * _fullpath(char *buf, char *fname, int len)$/;"	f	signature:(char *buf, char *fname, int len)
_getch	src/vimrun.c	31;"	d	file:
_getch	src/vimrun.c	44;"	d	file:
_j	runtime/macros/justify.vim	/^nmap _j :%call Justify('tw',4)<CR>$/;"	m
_j	runtime/macros/justify.vim	/^vmap _j :call Justify('tw',4)<CR>$/;"	m
_kbhit	src/vimrun.c	30;"	d	file:
_match	src/termlib.c	/^_match(s1, s2)		\/* returns length of text common to s1 and s2 *\/$/;"	f	file:
_match	src/termlib.c	/^static int  _match __ARGS((char *, char *));$/;"	p	file:	signature:(char *, char *)
_memory_h	src/if_perlsfio.c	13;"	d	file:
_signicon_t	src/gui_w32.c	/^typedef struct _signicon_t$/;"	s	file:
_signicon_t::hImage	src/gui_w32.c	/^    HANDLE	hImage;$/;"	m	struct:_signicon_t	file:	access:public
_signicon_t::hShape	src/gui_w32.c	/^    HANDLE	hShape;	\/* Mask bitmap handle *\/$/;"	m	struct:_signicon_t	file:	access:public
_signicon_t::uType	src/gui_w32.c	/^    UINT	uType;$/;"	m	struct:_signicon_t	file:	access:public
_stati64	src/vim.h	2150;"	d
_stricoll	src/os_mswin.c	/^int _stricoll(char *a, char *b)$/;"	f	signature:(char *a, char *b)
_stricoll	src/os_win16.c	/^int _stricoll(char *a, char *b);$/;"	p	file:	signature:(char *a, char *b)
_stricoll	src/proto.h	/^extern int _stricoll __ARGS((char *a, char *b));$/;"	p	signature:(char *a, char *b)
_strnicmp	src/GvimExt/gvimext.cpp	22;"	d	file:
_xsmp_xtinputid	src/gui_x11.c	/^static XtInputId _xsmp_xtinputid;$/;"	v	file:
a	src/if_python.c	/^struct PyMethodDef { Py_ssize_t a; };$/;"	m	struct:PyMethodDef	file:	access:public
a	src/regexp.c	/^    int a, b, c;$/;"	m	struct:__anon104	file:	access:public
a%	runtime/macros/matchit.vim	/^vmap a% <Esc>[%v]%$/;"	m
a_AIN	src/arabic.h	59;"	d
a_ALEF	src/arabic.h	41;"	d
a_ALEF_HAMZA_ABOVE	src/arabic.h	37;"	d
a_ALEF_HAMZA_BELOW	src/arabic.h	39;"	d
a_ALEF_MADDA	src/arabic.h	36;"	d
a_ALEF_MAKSURA	src/arabic.h	70;"	d
a_BEH	src/arabic.h	42;"	d
a_BYTE_ORDER_MARK	src/arabic.h	255;"	d
a_COMMA	src/arabic.h	32;"	d
a_DAD	src/arabic.h	56;"	d
a_DAL	src/arabic.h	49;"	d
a_DAMMA	src/arabic.h	77;"	d
a_DAMMATAN	src/arabic.h	74;"	d
a_DECIMAL	src/arabic.h	97;"	d
a_EIGHT	src/arabic.h	94;"	d
a_FATHA	src/arabic.h	76;"	d
a_FATHATAN	src/arabic.h	73;"	d
a_FEH	src/arabic.h	62;"	d
a_FIVE	src/arabic.h	91;"	d
a_FOUR	src/arabic.h	90;"	d
a_GHAIN	src/arabic.h	60;"	d
a_HAH	src/arabic.h	47;"	d
a_HAMZA	src/arabic.h	35;"	d
a_HAMZA_ABOVE	src/arabic.h	83;"	d
a_HAMZA_BELOW	src/arabic.h	84;"	d
a_HEH	src/arabic.h	68;"	d
a_JEEM	src/arabic.h	46;"	d
a_KAF	src/arabic.h	64;"	d
a_KASRA	src/arabic.h	78;"	d
a_KASRATAN	src/arabic.h	75;"	d
a_KHAH	src/arabic.h	48;"	d
a_LAM	src/arabic.h	65;"	d
a_MADDA_ABOVE	src/arabic.h	82;"	d
a_MEEM	src/arabic.h	66;"	d
a_MINI_ALEF	src/arabic.h	100;"	d
a_NINE	src/arabic.h	95;"	d
a_NOON	src/arabic.h	67;"	d
a_ONE	src/arabic.h	87;"	d
a_PERCENT	src/arabic.h	96;"	d
a_QAF	src/arabic.h	63;"	d
a_QUESTION	src/arabic.h	34;"	d
a_REH	src/arabic.h	51;"	d
a_SAD	src/arabic.h	55;"	d
a_SEEN	src/arabic.h	53;"	d
a_SEMICOLON	src/arabic.h	33;"	d
a_SEVEN	src/arabic.h	93;"	d
a_SHADDA	src/arabic.h	79;"	d
a_SHEEN	src/arabic.h	54;"	d
a_SIX	src/arabic.h	92;"	d
a_STAR	src/arabic.h	99;"	d
a_SUKUN	src/arabic.h	80;"	d
a_TAH	src/arabic.h	57;"	d
a_TATWEEL	src/arabic.h	61;"	d
a_TEH	src/arabic.h	44;"	d
a_TEH_MARBUTA	src/arabic.h	43;"	d
a_THAL	src/arabic.h	50;"	d
a_THEH	src/arabic.h	45;"	d
a_THOUSANDS	src/arabic.h	98;"	d
a_THREE	src/arabic.h	89;"	d
a_TWO	src/arabic.h	88;"	d
a_WAW	src/arabic.h	69;"	d
a_WAW_HAMZA	src/arabic.h	38;"	d
a_YEH	src/arabic.h	71;"	d
a_YEH_HAMZA	src/arabic.h	40;"	d
a_ZAH	src/arabic.h	58;"	d
a_ZAIN	src/arabic.h	52;"	d
a_ZERO	src/arabic.h	86;"	d
a_cur_menu	src/gui_athena.c	/^static vimmenu_T *a_cur_menu = NULL;$/;"	v	file:
a_f_AIN	src/arabic.h	203;"	d
a_f_ALEF	src/arabic.h	143;"	d
a_f_ALEF_HAMZA_ABOVE	src/arabic.h	133;"	d
a_f_ALEF_HAMZA_BELOW	src/arabic.h	137;"	d
a_f_ALEF_MADDA	src/arabic.h	131;"	d
a_f_ALEF_MAKSURA	src/arabic.h	241;"	d
a_f_BEH	src/arabic.h	145;"	d
a_f_DAD	src/arabic.h	191;"	d
a_f_DAL	src/arabic.h	171;"	d
a_f_FEH	src/arabic.h	211;"	d
a_f_GHAIN	src/arabic.h	207;"	d
a_f_HAH	src/arabic.h	163;"	d
a_f_HEH	src/arabic.h	235;"	d
a_f_JEEM	src/arabic.h	159;"	d
a_f_KAF	src/arabic.h	219;"	d
a_f_KHAH	src/arabic.h	167;"	d
a_f_LAM	src/arabic.h	223;"	d
a_f_LAM_ALEF	src/arabic.h	253;"	d
a_f_LAM_ALEF_HAMZA_ABOVE	src/arabic.h	249;"	d
a_f_LAM_ALEF_HAMZA_BELOW	src/arabic.h	251;"	d
a_f_LAM_ALEF_MADDA_ABOVE	src/arabic.h	247;"	d
a_f_MEEM	src/arabic.h	227;"	d
a_f_NOON	src/arabic.h	231;"	d
a_f_QAF	src/arabic.h	215;"	d
a_f_REH	src/arabic.h	175;"	d
a_f_SAD	src/arabic.h	187;"	d
a_f_SEEN	src/arabic.h	179;"	d
a_f_SHEEN	src/arabic.h	183;"	d
a_f_TAH	src/arabic.h	195;"	d
a_f_TEH	src/arabic.h	151;"	d
a_f_TEH_MARBUTA	src/arabic.h	149;"	d
a_f_THAL	src/arabic.h	173;"	d
a_f_THEH	src/arabic.h	155;"	d
a_f_WAW	src/arabic.h	239;"	d
a_f_WAW_HAMZA	src/arabic.h	135;"	d
a_f_YEH	src/arabic.h	243;"	d
a_f_YEH_HAMZA	src/arabic.h	139;"	d
a_f_ZAH	src/arabic.h	199;"	d
a_f_ZAIN	src/arabic.h	177;"	d
a_i_AIN	src/arabic.h	204;"	d
a_i_BEH	src/arabic.h	146;"	d
a_i_DAD	src/arabic.h	192;"	d
a_i_FEH	src/arabic.h	212;"	d
a_i_GHAIN	src/arabic.h	208;"	d
a_i_HAH	src/arabic.h	164;"	d
a_i_HEH	src/arabic.h	236;"	d
a_i_JEEM	src/arabic.h	160;"	d
a_i_KAF	src/arabic.h	220;"	d
a_i_KHAH	src/arabic.h	168;"	d
a_i_LAM	src/arabic.h	224;"	d
a_i_MEEM	src/arabic.h	228;"	d
a_i_NOON	src/arabic.h	232;"	d
a_i_QAF	src/arabic.h	216;"	d
a_i_SAD	src/arabic.h	188;"	d
a_i_SEEN	src/arabic.h	180;"	d
a_i_SHEEN	src/arabic.h	184;"	d
a_i_TAH	src/arabic.h	196;"	d
a_i_TEH	src/arabic.h	152;"	d
a_i_THEH	src/arabic.h	156;"	d
a_i_YEH	src/arabic.h	244;"	d
a_i_YEH_HAMZA	src/arabic.h	140;"	d
a_i_ZAH	src/arabic.h	200;"	d
a_m_AIN	src/arabic.h	205;"	d
a_m_BEH	src/arabic.h	147;"	d
a_m_DAD	src/arabic.h	193;"	d
a_m_DAMMA	src/arabic.h	121;"	d
a_m_FATHA	src/arabic.h	119;"	d
a_m_FEH	src/arabic.h	213;"	d
a_m_GHAIN	src/arabic.h	209;"	d
a_m_HAH	src/arabic.h	165;"	d
a_m_HEH	src/arabic.h	237;"	d
a_m_JEEM	src/arabic.h	161;"	d
a_m_KAF	src/arabic.h	221;"	d
a_m_KASRA	src/arabic.h	123;"	d
a_m_KHAH	src/arabic.h	169;"	d
a_m_LAM	src/arabic.h	225;"	d
a_m_MEEM	src/arabic.h	229;"	d
a_m_NOON	src/arabic.h	233;"	d
a_m_QAF	src/arabic.h	217;"	d
a_m_SAD	src/arabic.h	189;"	d
a_m_SEEN	src/arabic.h	181;"	d
a_m_SHADDA	src/arabic.h	125;"	d
a_m_SHEEN	src/arabic.h	185;"	d
a_m_SUKUN	src/arabic.h	127;"	d
a_m_TAH	src/arabic.h	197;"	d
a_m_TATWEEL_FATHATAN	src/arabic.h	113;"	d
a_m_TEH	src/arabic.h	153;"	d
a_m_THEH	src/arabic.h	157;"	d
a_m_YEH	src/arabic.h	245;"	d
a_m_YEH_HAMZA	src/arabic.h	141;"	d
a_m_ZAH	src/arabic.h	201;"	d
a_s_AIN	src/arabic.h	202;"	d
a_s_ALEF	src/arabic.h	142;"	d
a_s_ALEF_HAMZA_ABOVE	src/arabic.h	132;"	d
a_s_ALEF_HAMZA_BELOW	src/arabic.h	136;"	d
a_s_ALEF_MADDA	src/arabic.h	130;"	d
a_s_ALEF_MAKSURA	src/arabic.h	240;"	d
a_s_BEH	src/arabic.h	144;"	d
a_s_DAD	src/arabic.h	190;"	d
a_s_DAL	src/arabic.h	170;"	d
a_s_DAMMA	src/arabic.h	120;"	d
a_s_DAMMATAN	src/arabic.h	114;"	d
a_s_FATHA	src/arabic.h	118;"	d
a_s_FATHATAN	src/arabic.h	112;"	d
a_s_FEH	src/arabic.h	210;"	d
a_s_GHAIN	src/arabic.h	206;"	d
a_s_HAH	src/arabic.h	162;"	d
a_s_HAMZA	src/arabic.h	129;"	d
a_s_HEH	src/arabic.h	234;"	d
a_s_JEEM	src/arabic.h	158;"	d
a_s_KAF	src/arabic.h	218;"	d
a_s_KASRA	src/arabic.h	122;"	d
a_s_KASRATAN	src/arabic.h	116;"	d
a_s_KHAH	src/arabic.h	166;"	d
a_s_LAM	src/arabic.h	222;"	d
a_s_LAM_ALEF	src/arabic.h	252;"	d
a_s_LAM_ALEF_HAMZA_ABOVE	src/arabic.h	248;"	d
a_s_LAM_ALEF_HAMZA_BELOW	src/arabic.h	250;"	d
a_s_LAM_ALEF_MADDA_ABOVE	src/arabic.h	246;"	d
a_s_MEEM	src/arabic.h	226;"	d
a_s_NOON	src/arabic.h	230;"	d
a_s_QAF	src/arabic.h	214;"	d
a_s_REH	src/arabic.h	174;"	d
a_s_SAD	src/arabic.h	186;"	d
a_s_SEEN	src/arabic.h	178;"	d
a_s_SHADDA	src/arabic.h	124;"	d
a_s_SHEEN	src/arabic.h	182;"	d
a_s_SUKUN	src/arabic.h	126;"	d
a_s_TAH	src/arabic.h	194;"	d
a_s_TEH	src/arabic.h	150;"	d
a_s_TEH_MARBUTA	src/arabic.h	148;"	d
a_s_THAL	src/arabic.h	172;"	d
a_s_THEH	src/arabic.h	154;"	d
a_s_WAW	src/arabic.h	238;"	d
a_s_WAW_HAMZA	src/arabic.h	134;"	d
a_s_YEH	src/arabic.h	242;"	d
a_s_YEH_HAMZA	src/arabic.h	138;"	d
a_s_ZAH	src/arabic.h	198;"	d
a_s_ZAIN	src/arabic.h	176;"	d
aborted_in_try	src/ex_eval.c	/^aborted_in_try()$/;"	f
aborting	src/ex_eval.c	/^aborting()$/;"	f
abs_mouse	src/gui_photon.c	/^static PhPoint_t    abs_mouse;$/;"	v	file:
abs_restart_command	src/gui_gtk_x11.c	/^static       char *abs_restart_command = NULL;$/;"	v	file:
ac_fn_c_check_func	src/auto/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	src/auto/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	src/auto/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	src/auto/configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_compute_int	src/auto/configure	/^ac_fn_c_compute_int ()$/;"	f
ac_fn_c_find_uintX_t	src/auto/configure	/^ac_fn_c_find_uintX_t ()$/;"	f
ac_fn_c_try_compile	src/auto/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	src/auto/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	src/auto/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	src/auto/configure	/^ac_fn_c_try_run ()$/;"	f
accel	src/workshop.c	/^    char	*accel;			\/* optional accelerator key *\/$/;"	m	struct:__anon106	file:	access:public
accel_group	src/gui.h	/^    GtkAccelGroup *accel_group;$/;"	m	struct:Gui	access:public
acl_cnt	src/os_unix.c	/^    int acl_cnt;$/;"	m	struct:vim_acl_solaris_T	file:	access:public
acl_entry	src/os_unix.c	/^    aclent_t *acl_entry;$/;"	m	struct:vim_acl_solaris_T	file:	access:public
aco_save_T	src/structs.h	/^} aco_save_T;$/;"	t	typeref:struct:__anon57
acp_to_enc	src/os_mswin.c	/^acp_to_enc(str, str_size, out, outlen)$/;"	f
actext	src/structs.h	/^    char_u	*actext;	    \/* accelerator text (after TAB) *\/$/;"	m	struct:VimMenu	access:public
actions	src/gui_at_fs.c	/^static XtActionsRec actions[] =$/;"	v	file:
actions	src/gui_at_sb.c	/^static XtActionsRec actions[] =$/;"	v	file:
actionsList	src/gui_xmebw.c	/^static XtActionsRec actionsList[] =$/;"	v	file:
activate_dialog_mnemonics	src/gui_motif.c	/^activate_dialog_mnemonics(Widget dialog)$/;"	f	file:	signature:(Widget dialog)
active	src/dosinst.c	/^    int	    active;			\/* non-zero when choice is active *\/$/;"	m	struct:choice	file:	access:public
active_apc_list	src/fileio.c	/^static AutoPatCmd *active_apc_list = NULL; \/* stack of active autocommands *\/$/;"	v	file:
ada#Completion	runtime/autoload/ada.vim	/^function ada#Completion (cmd)$/;"	f
ada#Completion_End	runtime/autoload/ada.vim	/^function ada#Completion_End ()$/;"	f
ada#Create_Tags	runtime/autoload/ada.vim	/^function ada#Create_Tags (option)$/;"	f
ada#Insert_Backspace	runtime/autoload/ada.vim	/^function ada#Insert_Backspace ()$/;"	f
ada#Jump_Tag	runtime/autoload/ada.vim	/^function ada#Jump_Tag (Word, Mode)$/;"	f
ada#List_Tag	runtime/autoload/ada.vim	/^function ada#List_Tag (...)$/;"	f
ada#Map_Menu	runtime/autoload/ada.vim	/^function ada#Map_Menu (Text, Keys, Command)$/;"	f
ada#Map_Popup	runtime/autoload/ada.vim	/^function ada#Map_Popup (Text, Keys, Command)$/;"	f
ada#Pretty_Print_Folding	runtime/autoload/ada.vim	/^   function ada#Pretty_Print_Folding (Line)			     " {{{2$/;"	f
ada#Switch_Session	runtime/autoload/ada.vim	/^function ada#Switch_Session (New_Session)$/;"	f
ada#Switch_Syntax_Option	runtime/autoload/ada.vim	/^function ada#Switch_Syntax_Option (option)$/;"	f
ada#User_Complete	runtime/autoload/ada.vim	/^function! ada#User_Complete(findstart, base)$/;"	f
ada#Word	runtime/autoload/ada.vim	/^function ada#Word (...)$/;"	f
adacomplete#Complete	runtime/autoload/adacomplete.vim	/^function! adacomplete#Complete (findstart, base)$/;"	f
addEventHandler	src/gui_beval.c	/^addEventHandler(GtkWidget *target, BalloonEval *beval)$/;"	f	file:	signature:(GtkWidget *target, BalloonEval *beval)
addEventHandler	src/gui_beval.c	/^addEventHandler(target, beval)$/;"	f	file:
addEventHandler	src/gui_beval.c	/^static void addEventHandler __ARGS((GtkWidget *, BalloonEval *));$/;"	p	file:	signature:(GtkWidget *, BalloonEval *)
addEventHandler	src/gui_beval.c	/^static void addEventHandler __ARGS((Widget, BalloonEval *));$/;"	p	file:	signature:(Widget, BalloonEval *)
addMenu	src/workshop.c	/^addMenu($/;"	f	file:	signature:( char *menu, char *accel, char *verb)
addMenu	src/workshop.c	/^static void	 addMenu(char *, char *, char *);$/;"	p	file:	signature:(char *, char *, char *)
addUniqueMnemonic	src/workshop.c	/^addUniqueMnemonic($/;"	f	file:	signature:( char *mnemonics, char *label)
addUniqueMnemonic	src/workshop.c	/^static char	*addUniqueMnemonic(char *, char *);$/;"	p	file:	signature:(char *, char *)
add_b0_fenc	src/memline.c	/^add_b0_fenc(b0p, buf)$/;"	f	file:
add_b0_fenc	src/memline.c	/^static void add_b0_fenc __ARGS((ZERO_BL *b0p, buf_T *buf));$/;"	p	file:	signature:(ZERO_BL *b0p, buf_T *buf)
add_banned	src/spell.c	/^add_banned(su, word)$/;"	f	file:
add_banned	src/spell.c	/^static void add_banned __ARGS((suginfo_T *su, char_u *word));$/;"	p	file:	signature:(suginfo_T *su, char_u *word)
add_buff	src/getchar.c	/^add_buff(buf, s, slen)$/;"	f	file:
add_buff	src/getchar.c	/^static void	add_buff __ARGS((struct buffheader *, char_u *, long n));$/;"	p	file:	signature:(struct buffheader *, char_u *, long n)
add_byte	src/gui_w16.c	1000;"	d	file:
add_byte	src/gui_w16.c	1499;"	d	file:
add_cancel_action	src/gui_xmdlg.c	/^add_cancel_action(Widget shell, XtCallbackProc close_callback, void *arg)$/;"	f	file:	signature:(Widget shell, XtCallbackProc close_callback, void *arg)
add_char2buf	src/edit.c	/^add_char2buf(c, s)$/;"	f
add_char_buff	src/getchar.c	/^add_char_buff(buf, c)$/;"	f	file:
add_char_buff	src/getchar.c	/^static void	add_char_buff __ARGS((struct buffheader *, int));$/;"	p	file:	signature:(struct buffheader *, int)
add_dialog_element	src/gui_w16.c	/^add_dialog_element($/;"	f	file:	signature:( LPWORD p, DWORD lStyle, WORD x, WORD y, WORD w, WORD h, WORD Id, BYTE clss, const char *caption)
add_dialog_element	src/gui_w16.c	/^add_dialog_element($/;"	p	file:	signature:( LPWORD p, DWORD lStyle, WORD x, WORD y, WORD w, WORD h, WORD Id, BYTE clss, const char *caption)
add_dialog_element	src/gui_w32.c	/^add_dialog_element($/;"	f	file:	signature:( PWORD p, DWORD lStyle, WORD x, WORD y, WORD w, WORD h, WORD Id, WORD clss, const char *caption)
add_dialog_element	src/gui_w32.c	/^add_dialog_element($/;"	p	file:	signature:( PWORD p, DWORD lStyle, WORD x, WORD y, WORD w, WORD h, WORD Id, WORD clss, const char *caption)
add_dummy_choice	src/dosinst.c	/^add_dummy_choice(void)$/;"	f	file:	signature:(void)
add_fromto	src/spell.c	/^add_fromto(spin, gap, from, to)$/;"	f	file:
add_fromto	src/spell.c	/^static void add_fromto __ARGS((spellinfo_T *spin, garray_T *gap, char_u	*from, char_u *to));$/;"	p	file:	signature:(spellinfo_T *spin, garray_T *gap, char_u *from, char_u *to)
add_keyword	src/syntax.c	/^add_keyword(name, id, flags, cont_in_list, next_list, conceal_char)$/;"	f	file:
add_keyword	src/syntax.c	/^static void add_keyword __ARGS((char_u *name, int id, int flags, short *cont_in_list, short *next_list, int conceal_char));$/;"	p	file:	signature:(char_u *name, int id, int flags, short *cont_in_list, short *next_list, int conceal_char)
add_long	src/gui_w16.c	1001;"	d	file:
add_long	src/gui_w16.c	1501;"	d	file:
add_long	src/gui_w32.c	2878;"	d	file:
add_long_to_buf	src/term.c	/^add_long_to_buf(val, dst)$/;"	f
add_map	src/getchar.c	/^add_map(map, mode)$/;"	f
add_menu_path	src/menu.c	/^add_menu_path(menu_path, menuarg, pri_tab, call_data$/;"	f	file:
add_menu_path	src/menu.c	/^static int add_menu_path __ARGS((char_u *, vimmenu_T *, int *, char_u *));$/;"	p	file:	signature:(char_u *, vimmenu_T *, int *, char_u *)
add_menu_path	src/menu.c	/^static int add_menu_path __ARGS((char_u *, vimmenu_T *, int *, char_u *, int));$/;"	p	file:	signature:(char_u *, vimmenu_T *, int *, char_u *, int)
add_mnemonic_grabs	src/gui_motif.c	/^add_mnemonic_grabs(Widget dialog, Widget w)$/;"	f	file:	signature:(Widget dialog, Widget w)
add_msg_hist	src/message.c	/^add_msg_hist(s, len, attr)$/;"	f	file:
add_msg_hist	src/message.c	/^static void add_msg_hist __ARGS((char_u *s, int len, int attr));$/;"	p	file:	signature:(char_u *s, int len, int attr)
add_nr_var	src/eval.c	/^add_nr_var(dp, v, name, nr)$/;"	f	file:
add_nr_var	src/eval.c	/^static void add_nr_var __ARGS((dict_T *dp, dictitem_T *v, char *name, varnumber_T nr));$/;"	p	file:	signature:(dict_T *dp, dictitem_T *v, char *name, varnumber_T nr)
add_num_buff	src/getchar.c	/^add_num_buff(buf, n)$/;"	f	file:
add_num_buff	src/getchar.c	/^static void	add_num_buff __ARGS((struct buffheader *, long));$/;"	p	file:	signature:(struct buffheader *, long)
add_pathsep	src/dosinst.h	/^add_pathsep(char *name)$/;"	f	signature:(char *name)
add_pathsep	src/misc1.c	/^add_pathsep(p)$/;"	f
add_pixmap_args	src/gui_motif.c	/^add_pixmap_args(menu, args, n)$/;"	f	file:
add_pixmap_args	src/gui_motif.c	/^static int add_pixmap_args __ARGS((vimmenu_T *menu, Arg *args, int n));$/;"	p	file:	signature:(vimmenu_T *menu, Arg *args, int n)
add_sniff_cmd	src/if_sniff.c	/^add_sniff_cmd(cmd, def, msg)$/;"	f	file:
add_sound_suggest	src/spell.c	/^add_sound_suggest(su, goodword, score, lp)$/;"	f	file:
add_sound_suggest	src/spell.c	/^static void add_sound_suggest __ARGS((suginfo_T *su, char_u *goodword, int score, langp_T *lp));$/;"	p	file:	signature:(suginfo_T *su, char_u *goodword, int score, langp_T *lp)
add_stock_icon	src/gui_gtk.c	/^add_stock_icon(GtkIconFactory	*factory,$/;"	f	file:	signature:(GtkIconFactory *factory, const char *stock_id, const guint8 *inline_data, int data_length)
add_string	src/gui_w16.c	1500;"	d	file:
add_string	src/gui_w16.c	998;"	d	file:
add_string	src/gui_w32.c	2876;"	d	file:
add_suggestion	src/spell.c	/^add_suggestion(su, gap, goodword, badlenarg, score, altscore, had_bonus,$/;"	f	file:
add_suggestion	src/spell.c	/^static void add_suggestion __ARGS((suginfo_T *su, garray_T *gap, char_u *goodword, int badlen, int score, int altscore, int had_bonus, slang_T *slang, int maxsf));$/;"	p	file:	signature:(suginfo_T *su, garray_T *gap, char_u *goodword, int badlen, int score, int altscore, int had_bonus, slang_T *slang, int maxsf)
add_tabline_menu_item	src/gui_gtk_x11.c	/^add_tabline_menu_item(GtkWidget *menu, char_u *text, int resp)$/;"	f	file:	signature:(GtkWidget *menu, char_u *text, int resp)
add_tabline_popup_menu_entry	src/gui_w48.c	/^add_tabline_popup_menu_entry(HMENU pmenu, UINT item_id, char_u *item_text)$/;"	f	file:	signature:(HMENU pmenu, UINT item_id, char_u *item_text)
add_tag_field	src/tag.c	/^add_tag_field(dict, field_name, start, end)$/;"	f	file:
add_tag_field	src/tag.c	/^static int add_tag_field __ARGS((dict_T *dict, char *field_name, char_u *start, char_u *end));$/;"	p	file:	signature:(dict_T *dict, char *field_name, char_u *start, char_u *end)
add_termcap_entry	src/term.c	/^add_termcap_entry(name, force)$/;"	f
add_termcode	src/term.c	/^add_termcode(name, string, flags)$/;"	f
add_to_history	src/ex_getln.c	/^add_to_history(histype, new_entry, in_map, sep)$/;"	f
add_to_input_buf	src/ui.c	/^add_to_input_buf(s, len)$/;"	f
add_to_input_buf_csi	src/ui.c	/^add_to_input_buf_csi(char_u *str, int len)$/;"	f	signature:(char_u *str, int len)
add_to_list	src/gui_xmdlg.c	/^add_to_list(char **buf, char *item, int *count)$/;"	f	file:	signature:(char **buf, char *item, int *count)
add_to_showcmd	src/normal.c	/^add_to_showcmd(c)$/;"	f
add_to_showcmd_c	src/normal.c	/^add_to_showcmd_c(c)$/;"	f
add_word	src/gui_w16.c	1502;"	d	file:
add_word	src/gui_w16.c	999;"	d	file:
add_word	src/gui_w32.c	2877;"	d	file:
addfile	src/misc1.c	/^addfile(gap, f, flags)$/;"	f
addpath	src/testdir/test49.vim	/^    let addpath = ""$/;"	v
addr	src/quickfix.c	/^    char_u	    addr[FMT_PATTERNS]; \/* indices of used % patterns *\/$/;"	m	struct:efm_S	file:	access:public
addr_count	src/ex_cmds.h	/^    int		addr_count;	\/* the number of addresses given *\/$/;"	m	struct:exarg	access:public
addr_time	src/swis.s	/^addr_time: dcd	time_of_last_poll$/;"	l
addsigntype	src/netbeans.c	/^addsigntype($/;"	f	file:	signature:( nbbuf_T *buf, int typeNum, char_u *typeName, char_u *tooltip UNUSED, char_u *glyphFile, char_u *fg, char_u *bg)
addsigntype	src/netbeans.c	/^static void addsigntype __ARGS((nbbuf_T *, int localsigntype, char_u *typeName,$/;"	p	file:	signature:(nbbuf_T *, int localsigntype, char_u *typeName, char_u *tooltip, char_u *glyphfile, char_u *fg, char_u *bg)
addstar	src/ex_getln.c	/^addstar(fname, len, context)$/;"	f
adjust_clip_reg	src/ops.c	/^adjust_clip_reg(rp)$/;"	f
adjust_cursor	src/normal.c	/^adjust_cursor(oap)$/;"	f	file:
adjust_cursor	src/normal.c	/^static void	adjust_cursor __ARGS((oparg_T *oap));$/;"	p	file:	signature:(oparg_T *oap)
adjust_cursor_col	src/misc2.c	/^adjust_cursor_col()$/;"	f
adjust_cursor_eol	src/ops.c	/^adjust_cursor_eol()$/;"	f
adjust_for_sel	src/normal.c	/^adjust_for_sel(cap)$/;"	f	file:
adjust_for_sel	src/normal.c	/^static void	adjust_for_sel __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
adjust_sign_name	src/integration.c	/^adjust_sign_name(char *filename)$/;"	f	signature:(char *filename)
adjust_sign_name	src/integration.c	/^static void adjust_sign_name(char *filename);$/;"	p	file:	signature:(char *filename)
adjustment_value_changed	src/gui_gtk.c	/^adjustment_value_changed(GtkAdjustment *adjustment, gpointer data)$/;"	f	file:	signature:(GtkAdjustment *adjustment, gpointer data)
advance_color_col	src/screen.c	/^advance_color_col(vcol, color_cols)$/;"	f	file:
advance_color_col	src/screen.c	/^static int advance_color_col __ARGS((int vcol, int **color_cols));$/;"	p	file:	signature:(int vcol, int **color_cols)
advapi_lib	src/os_win32.c	/^static HANDLE advapi_lib = NULL;	\/* Handle for ADVAPI library *\/$/;"	v	file:
ae_add	src/spell.c	/^    char_u	*ae_add;	\/* text to add to basic word (can be NULL) *\/$/;"	m	struct:affentry_S	file:	access:public
ae_attr	src/structs.h	/^    short	    ae_attr;		\/* HL_BOLD, etc. *\/$/;"	m	struct:attr_entry	access:public
ae_chop	src/spell.c	/^    char_u	*ae_chop;	\/* text to chop off basic word (can be NULL) *\/$/;"	m	struct:affentry_S	file:	access:public
ae_compforbid	src/spell.c	/^    char	ae_compforbid;	\/* COMPOUNDFORBIDFLAG found *\/$/;"	m	struct:affentry_S	file:	access:public
ae_comppermit	src/spell.c	/^    char	ae_comppermit;	\/* COMPOUNDPERMITFLAG found *\/$/;"	m	struct:affentry_S	file:	access:public
ae_cond	src/spell.c	/^    char_u	*ae_cond;	\/* condition (NULL for ".") *\/$/;"	m	struct:affentry_S	file:	access:public
ae_flags	src/spell.c	/^    char_u	*ae_flags;	\/* flags on the affix (can be NULL) *\/$/;"	m	struct:affentry_S	file:	access:public
ae_fname	src/structs.h	/^    char_u	*ae_fname;	\/* file name as specified *\/$/;"	m	struct:argentry	access:public
ae_fnum	src/structs.h	/^    int		ae_fnum;	\/* buffer number with expanded file name *\/$/;"	m	struct:argentry	access:public
ae_next	src/spell.c	/^    affentry_T	*ae_next;	\/* next affix with same name\/number *\/$/;"	m	struct:affentry_S	file:	access:public
ae_prog	src/spell.c	/^    regprog_T	*ae_prog;	\/* regexp program for ae_cond or NULL *\/$/;"	m	struct:affentry_S	file:	access:public
ae_u	src/structs.h	/^    } ae_u;$/;"	m	struct:attr_entry	typeref:union:attr_entry::__anon45	access:public
aentry_T	src/structs.h	/^} aentry_T;$/;"	t	typeref:struct:argentry
af_bad	src/spell.c	/^    unsigned	af_bad;		\/* BAD ID for banned word *\/$/;"	m	struct:afffile_S	file:	access:public
af_circumfix	src/spell.c	/^    unsigned	af_circumfix;	\/* CIRCUMFIX ID *\/$/;"	m	struct:afffile_S	file:	access:public
af_comp	src/spell.c	/^    hashtab_T	af_comp;	\/* hashtable for compound flags, compitem_T *\/$/;"	m	struct:afffile_S	file:	access:public
af_compforbid	src/spell.c	/^    unsigned	af_compforbid;	\/* COMPOUNDFORBIDFLAG ID *\/$/;"	m	struct:afffile_S	file:	access:public
af_comppermit	src/spell.c	/^    unsigned	af_comppermit;	\/* COMPOUNDPERMITFLAG ID *\/$/;"	m	struct:afffile_S	file:	access:public
af_comproot	src/spell.c	/^    unsigned	af_comproot;	\/* COMPOUNDROOT ID *\/$/;"	m	struct:afffile_S	file:	access:public
af_enc	src/spell.c	/^    char_u	*af_enc;	\/* "SET", normalized, alloc'ed string or NULL *\/$/;"	m	struct:afffile_S	file:	access:public
af_flagtype	src/spell.c	/^    int		af_flagtype;	\/* AFT_CHAR, AFT_LONG, AFT_NUM or AFT_CAPLONG *\/$/;"	m	struct:afffile_S	file:	access:public
af_keepcase	src/spell.c	/^    unsigned	af_keepcase;	\/* KEEPCASE ID for keep-case word *\/$/;"	m	struct:afffile_S	file:	access:public
af_needaffix	src/spell.c	/^    unsigned	af_needaffix;	\/* NEEDAFFIX ID *\/$/;"	m	struct:afffile_S	file:	access:public
af_needcomp	src/spell.c	/^    unsigned	af_needcomp;	\/* NEEDCOMPOUND ID *\/$/;"	m	struct:afffile_S	file:	access:public
af_nosuggest	src/spell.c	/^    unsigned	af_nosuggest;	\/* NOSUGGEST ID *\/$/;"	m	struct:afffile_S	file:	access:public
af_pfxpostpone	src/spell.c	/^    int		af_pfxpostpone;	\/* postpone prefixes without chop string and$/;"	m	struct:afffile_S	file:	access:public
af_pref	src/spell.c	/^    hashtab_T	af_pref;	\/* hashtable for prefixes, affheader_T *\/$/;"	m	struct:afffile_S	file:	access:public
af_rare	src/spell.c	/^    unsigned	af_rare;	\/* RARE ID for rare word *\/$/;"	m	struct:afffile_S	file:	access:public
af_suff	src/spell.c	/^    hashtab_T	af_suff;	\/* hashtable for suffixes, affheader_T *\/$/;"	m	struct:afffile_S	file:	access:public
aff_check_number	src/spell.c	/^aff_check_number(spinval, affval, name)$/;"	f	file:
aff_check_number	src/spell.c	/^static void aff_check_number __ARGS((int spinval, int affval, char *name));$/;"	p	file:	signature:(int spinval, int affval, char *name)
aff_check_string	src/spell.c	/^aff_check_string(spinval, affval, name)$/;"	f	file:
aff_check_string	src/spell.c	/^static void aff_check_string __ARGS((char_u *spinval, char_u *affval, char *name));$/;"	p	file:	signature:(char_u *spinval, char_u *affval, char *name)
aff_process_flags	src/spell.c	/^aff_process_flags(affile, entry)$/;"	f	file:
aff_process_flags	src/spell.c	/^static void aff_process_flags __ARGS((afffile_T *affile, affentry_T *entry));$/;"	p	file:	signature:(afffile_T *affile, affentry_T *entry)
affentry_S	src/spell.c	/^struct affentry_S$/;"	s	file:
affentry_S::ae_add	src/spell.c	/^    char_u	*ae_add;	\/* text to add to basic word (can be NULL) *\/$/;"	m	struct:affentry_S	file:	access:public
affentry_S::ae_chop	src/spell.c	/^    char_u	*ae_chop;	\/* text to chop off basic word (can be NULL) *\/$/;"	m	struct:affentry_S	file:	access:public
affentry_S::ae_compforbid	src/spell.c	/^    char	ae_compforbid;	\/* COMPOUNDFORBIDFLAG found *\/$/;"	m	struct:affentry_S	file:	access:public
affentry_S::ae_comppermit	src/spell.c	/^    char	ae_comppermit;	\/* COMPOUNDPERMITFLAG found *\/$/;"	m	struct:affentry_S	file:	access:public
affentry_S::ae_cond	src/spell.c	/^    char_u	*ae_cond;	\/* condition (NULL for ".") *\/$/;"	m	struct:affentry_S	file:	access:public
affentry_S::ae_flags	src/spell.c	/^    char_u	*ae_flags;	\/* flags on the affix (can be NULL) *\/$/;"	m	struct:affentry_S	file:	access:public
affentry_S::ae_next	src/spell.c	/^    affentry_T	*ae_next;	\/* next affix with same name\/number *\/$/;"	m	struct:affentry_S	file:	access:public
affentry_S::ae_prog	src/spell.c	/^    regprog_T	*ae_prog;	\/* regexp program for ae_cond or NULL *\/$/;"	m	struct:affentry_S	file:	access:public
affentry_T	src/spell.c	/^typedef struct affentry_S affentry_T;$/;"	t	typeref:struct:affentry_S	file:
afffile_S	src/spell.c	/^typedef struct afffile_S$/;"	s	file:
afffile_S::af_bad	src/spell.c	/^    unsigned	af_bad;		\/* BAD ID for banned word *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_circumfix	src/spell.c	/^    unsigned	af_circumfix;	\/* CIRCUMFIX ID *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_comp	src/spell.c	/^    hashtab_T	af_comp;	\/* hashtable for compound flags, compitem_T *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_compforbid	src/spell.c	/^    unsigned	af_compforbid;	\/* COMPOUNDFORBIDFLAG ID *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_comppermit	src/spell.c	/^    unsigned	af_comppermit;	\/* COMPOUNDPERMITFLAG ID *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_comproot	src/spell.c	/^    unsigned	af_comproot;	\/* COMPOUNDROOT ID *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_enc	src/spell.c	/^    char_u	*af_enc;	\/* "SET", normalized, alloc'ed string or NULL *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_flagtype	src/spell.c	/^    int		af_flagtype;	\/* AFT_CHAR, AFT_LONG, AFT_NUM or AFT_CAPLONG *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_keepcase	src/spell.c	/^    unsigned	af_keepcase;	\/* KEEPCASE ID for keep-case word *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_needaffix	src/spell.c	/^    unsigned	af_needaffix;	\/* NEEDAFFIX ID *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_needcomp	src/spell.c	/^    unsigned	af_needcomp;	\/* NEEDCOMPOUND ID *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_nosuggest	src/spell.c	/^    unsigned	af_nosuggest;	\/* NOSUGGEST ID *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_pfxpostpone	src/spell.c	/^    int		af_pfxpostpone;	\/* postpone prefixes without chop string and$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_pref	src/spell.c	/^    hashtab_T	af_pref;	\/* hashtable for prefixes, affheader_T *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_rare	src/spell.c	/^    unsigned	af_rare;	\/* RARE ID for rare word *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_S::af_suff	src/spell.c	/^    hashtab_T	af_suff;	\/* hashtable for suffixes, affheader_T *\/$/;"	m	struct:afffile_S	file:	access:public
afffile_T	src/spell.c	/^} afffile_T;$/;"	t	typeref:struct:afffile_S	file:
affheader_S	src/spell.c	/^typedef struct affheader_S$/;"	s	file:
affheader_S::ah_combine	src/spell.c	/^    int		ah_combine;	\/* suffix may combine with prefix *\/$/;"	m	struct:affheader_S	file:	access:public
affheader_S::ah_first	src/spell.c	/^    affentry_T	*ah_first;	\/* first affix entry *\/$/;"	m	struct:affheader_S	file:	access:public
affheader_S::ah_flag	src/spell.c	/^    unsigned	ah_flag;	\/* affix name as number, uses "af_flagtype" *\/$/;"	m	struct:affheader_S	file:	access:public
affheader_S::ah_follows	src/spell.c	/^    int		ah_follows;	\/* another affix block should be following *\/$/;"	m	struct:affheader_S	file:	access:public
affheader_S::ah_key	src/spell.c	/^    char_u	ah_key[AH_KEY_LEN]; \/* key for hashtab == name of affix *\/$/;"	m	struct:affheader_S	file:	access:public
affheader_S::ah_newID	src/spell.c	/^    int		ah_newID;	\/* prefix ID after renumbering; 0 if not used *\/$/;"	m	struct:affheader_S	file:	access:public
affheader_T	src/spell.c	/^} affheader_T;$/;"	t	typeref:struct:affheader_S	file:
affitem2flag	src/spell.c	/^affitem2flag(flagtype, item, fname, lnum)$/;"	f	file:
affitem2flag	src/spell.c	/^static unsigned affitem2flag __ARGS((int flagtype, char_u *item, char_u	*fname, int lnum));$/;"	p	file:	signature:(int flagtype, char_u *item, char_u *fname, int lnum)
after_label	src/misc1.c	/^after_label(l)$/;"	f	file:
after_label	src/misc1.c	/^static char_u	*after_label __ARGS((char_u *l));$/;"	p	file:	signature:(char_u *l)
after_pathsep	src/misc2.c	/^after_pathsep(b, p)$/;"	f
after_pathsep	src/vim.h	1935;"	d
ah_combine	src/spell.c	/^    int		ah_combine;	\/* suffix may combine with prefix *\/$/;"	m	struct:affheader_S	file:	access:public
ah_first	src/spell.c	/^    affentry_T	*ah_first;	\/* first affix entry *\/$/;"	m	struct:affheader_S	file:	access:public
ah_flag	src/spell.c	/^    unsigned	ah_flag;	\/* affix name as number, uses "af_flagtype" *\/$/;"	m	struct:affheader_S	file:	access:public
ah_follows	src/spell.c	/^    int		ah_follows;	\/* another affix block should be following *\/$/;"	m	struct:affheader_S	file:	access:public
ah_key	src/spell.c	/^    char_u	ah_key[AH_KEY_LEN]; \/* key for hashtab == name of affix *\/$/;"	m	struct:affheader_S	file:	access:public
ah_newID	src/spell.c	/^    int		ah_newID;	\/* prefix ID after renumbering; 0 if not used *\/$/;"	m	struct:affheader_S	file:	access:public
ai_col	src/globals.h	/^EXTERN colnr_T	ai_col INIT(= 0);$/;"	v
aixhack	src/pty.c	/^int aixhack = -1;$/;"	v
al_ga	src/structs.h	/^    garray_T	al_ga;		\/* growarray with the array of file names *\/$/;"	m	struct:arglist	access:public
al_refcount	src/structs.h	/^    int		al_refcount;	\/* number of windows using this arglist *\/$/;"	m	struct:arglist	access:public
alist_T	src/structs.h	/^} alist_T;$/;"	t	typeref:struct:arglist
alist_add	src/ex_docmd.c	/^alist_add(al, fname, set_fnum)$/;"	f
alist_add_list	src/ex_cmds2.c	/^alist_add_list(count, files, after)$/;"	f	file:
alist_add_list	src/ex_cmds2.c	/^static int	alist_add_list __ARGS((int count, char_u **files, int after));$/;"	p	file:	signature:(int count, char_u **files, int after)
alist_check_arg_idx	src/ex_cmds2.c	/^alist_check_arg_idx()$/;"	f	file:
alist_check_arg_idx	src/ex_cmds2.c	/^static void	alist_check_arg_idx __ARGS((void));$/;"	p	file:	signature:(void)
alist_clear	src/ex_docmd.c	/^alist_clear(al)$/;"	f
alist_expand	src/ex_docmd.c	/^alist_expand(fnum_list, fnum_len)$/;"	f
alist_init	src/ex_docmd.c	/^alist_init(al)$/;"	f
alist_name	src/buffer.c	/^alist_name(aep)$/;"	f
alist_new	src/ex_docmd.c	/^alist_new()$/;"	f
alist_set	src/ex_docmd.c	/^alist_set(al, count, files, use_curbuf, fnum_list, fnum_len)$/;"	f
alist_slash_adjust	src/ex_docmd.c	/^alist_slash_adjust()$/;"	f
alist_unlink	src/ex_docmd.c	/^alist_unlink(al)$/;"	f
all	src/gui_gtk.c	/^    GtkWidget *all;	\/* 'Replace All' action button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
all	src/gui_motif.c	/^    Widget all;		\/* 'Replace All' action button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
all_cflags	src/Make_bc5.mak	/^char_u *all_cflags = (char_u *)"$(CC:\\=\\\\) $(CFLAGS:\\=\\\\) $(DEFINES) $(MBDEFINES) $(INTERP_DEFINES_ESC) $(OPT) $(EXETYPE) $(CPUARG) $(ALIGNARG) $(DEBUG_FLAG) $(CODEGUARD_FLAG)";$/;"	m
all_cflags	src/Makefile	/^	-@echo 'char_u *all_cflags = (char_u *)"$(CC) -c -I$(srcdir) $(ALL_CFLAGS)";' | $(QUOTESED) >>  $@$/;"	m
all_cflags	src/auto/pathdef.c	/^char_u *all_cflags = (char_u *)"gcc -c -I. -Iproto -DHAVE_CONFIG_H -DFEAT_GUI_GTK  -I\/usr\/include\/gtk-2.0 -I\/usr\/lib\/gtk-2.0\/include -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/glib-2.0\/include -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12     -g -O2 -D_FORTIFY_SOURCE=1      ";$/;"	v
all_lflags	src/Make_bc5.mak	/^char_u *all_lflags = (char_u *)"$(LINK:\\=\\\\) $(LFLAGS:\\=\\\\)";$/;"	m
all_lflags	src/Makefile	/^	-@echo 'char_u *all_lflags = (char_u *)"$(CC) $(ALL_LIB_DIRS) $(LDFLAGS) -o $(VIMTARGET) $(ALL_LIBS) ";' | $(QUOTESED) >>  $@$/;"	m
all_lflags	src/auto/pathdef.c	/^char_u *all_lflags = (char_u *)"gcc   -L\/usr\/local\/lib -o vim   -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0   -lXt -lm -lncurses -lselinux          ";$/;"	v
allbuf_lock	src/globals.h	/^EXTERN int	allbuf_lock INIT(= 0);$/;"	v
allbuf_locked	src/ex_getln.c	/^allbuf_locked()$/;"	f
allcap_copy	src/spell.c	/^allcap_copy(word, wcopy)$/;"	f	file:
allcap_copy	src/spell.c	/^static void allcap_copy __ARGS((char_u *word, char_u *wcopy));$/;"	p	file:	signature:(char_u *word, char_u *wcopy)
alloc	src/dosinst.h	/^alloc(int len)$/;"	f	signature:(int len)
alloc	src/misc2.c	/^alloc(size)$/;"	f
alloc_check	src/misc2.c	/^alloc_check(size)$/;"	f
alloc_clear	src/misc2.c	/^alloc_clear(size)$/;"	f
alloc_cmdbuff	src/ex_getln.c	/^alloc_cmdbuff(len)$/;"	f	file:
alloc_cmdbuff	src/ex_getln.c	/^static void	alloc_cmdbuff __ARGS((int len));$/;"	p	file:	signature:(int len)
alloc_color	src/gui_xmebw.c	/^alloc_color(Display	*display,$/;"	f	file:	signature:(Display *display, Colormap colormap, char *colorname, XColor *xcolor, void *closure UNUSED)
alloc_string_tv	src/eval.c	/^alloc_string_tv(s)$/;"	f	file:
alloc_string_tv	src/eval.c	/^static typval_T *alloc_string_tv __ARGS((char_u *string));$/;"	p	file:	signature:(char_u *string)
alloc_tabpage	src/window.c	/^alloc_tabpage()$/;"	f	file:
alloc_tabpage	src/window.c	/^static tabpage_T *alloc_tabpage __ARGS((void));$/;"	p	file:	signature:(void)
alloc_text	src/dosinst.c	/^alloc_text(int idx, char *fmt, char *arg)$/;"	f	file:	signature:(int idx, char *fmt, char *arg)
alloc_tv	src/eval.c	/^alloc_tv()$/;"	f	file:
alloc_tv	src/eval.c	/^static typval_T *alloc_tv __ARGS((void));$/;"	p	file:	signature:(void)
alloc_typebuf	src/getchar.c	/^alloc_typebuf()$/;"	f
allow_dirs	src/fileio.c	/^    char	    allow_dirs;		\/* Pattern may match whole path *\/$/;"	m	struct:AutoPat	file:	access:public
allow_keys	src/globals.h	/^EXTERN int allow_keys INIT(= FALSE);	\/* allow key codes when no_mapping$/;"	v
allow_scrollbar	src/gui_mac.c	/^static int allow_scrollbar = FALSE;$/;"	v	file:
allow_scrollbar	src/gui_w48.c	/^static int allow_scrollbar = FALSE;$/;"	v	file:
allsteps	runtime/ftplugin/cucumber.vim	/^function! s:allsteps()$/;"	f
already_warned	src/fileio.c	/^static int already_warned = FALSE;$/;"	v	file:
alt_tabpage	src/window.c	/^alt_tabpage()$/;"	f	file:
alt_tabpage	src/window.c	/^static tabpage_T *alt_tabpage __ARGS((void));$/;"	p	file:	signature:(void)
altkey_table	src/os_msdos.c	/^} altkey_table[] =$/;"	v	typeref:struct:__anon81	file:
altname_buf_ptr	src/os_mswin.c	/^static char_u *altname_buf_ptr = NULL;$/;"	v	file:
amount	src/ex_cmds.h	/^    int		amount;		\/* number of '>' or '<' for shift command *\/$/;"	m	struct:exarg	access:public
ap	src/eval.c	/^static va_list	ap;$/;"	v	file:
app	src/if_ole.cpp	/^static CVim *app = 0;$/;"	v	file:
app_context	src/globals.h	/^EXTERN XtAppContext app_context INIT(= (XtAppContext)NULL);$/;"	v
app_id	src/if_ole.cpp	/^static unsigned long app_id = 0;$/;"	v	file:
append	src/ex_cmds.h	/^    int		append;		\/* TRUE with ":w >>file" command *\/$/;"	m	struct:exarg	access:public
append_arg_number	src/buffer.c	/^append_arg_number(wp, buf, buflen, add_file)$/;"	f	file:
append_arg_number	src/buffer.c	/^static int	append_arg_number __ARGS((win_T *wp, char_u *buf, int buflen, int add_file));$/;"	p	file:	signature:(win_T *wp, char_u *buf, int buflen, int add_file)
append_ga_line	src/os_unix.c	/^append_ga_line(gap)$/;"	f	file:
append_ga_line	src/os_unix.c	/^static void append_ga_line __ARGS((garray_T *gap));$/;"	p	file:	signature:(garray_T *gap)
append_indent	src/ex_cmds.c	/^static int append_indent = 0;	    \/* autoindent for first line *\/$/;"	v	file:
append_redir	src/ex_cmds.c	/^append_redir(buf, buflen, opt, fname)$/;"	f
append_selection	src/workshop.c	/^append_selection($/;"	f	file:	signature:( int lnum, char *sp, int *size, int *slen)
append_selection	src/workshop.c	/^static char	*append_selection(int, char *, int *, int *);$/;"	p	file:	signature:(int, char *, int *, int *)
appended_lines	src/misc1.c	/^appended_lines(lnum, count)$/;"	f
appended_lines_mark	src/misc1.c	/^appended_lines_mark(lnum, count)$/;"	f
applicationShellWidgetClass	src/gui_gtk_vms.h	667;"	d
apply_autocmds	src/fileio.c	/^apply_autocmds(event, fname, fname_io, force, buf)$/;"	f
apply_autocmds_exarg	src/fileio.c	/^apply_autocmds_exarg(event, fname, fname_io, force, buf, eap)$/;"	f	file:
apply_autocmds_exarg	src/fileio.c	/^static int apply_autocmds_exarg __ARGS((event_T event, char_u *fname, char_u *fname_io, int force, buf_T *buf, exarg_T *eap));$/;"	p	file:	signature:(event_T event, char_u *fname, char_u *fname_io, int force, buf_T *buf, exarg_T *eap)
apply_autocmds_group	src/fileio.c	/^apply_autocmds_group(event, fname, fname_io, force, group, buf, eap)$/;"	f	file:
apply_autocmds_group	src/fileio.c	/^static int apply_autocmds_group __ARGS((event_T event, char_u *fname, char_u *fname_io, int force, int group, buf_T *buf, exarg_T *eap));$/;"	p	file:	signature:(event_T event, char_u *fname, char_u *fname_io, int force, int group, buf_T *buf, exarg_T *eap)
apply_autocmds_retval	src/fileio.c	/^apply_autocmds_retval(event, fname, fname_io, force, buf, retval)$/;"	f
apply_fontlist	src/gui_xmdlg.c	44;"	d	file:
apply_fontlist	src/gui_xmdlg.c	46;"	d	file:
apply_wide_font_attr	src/gui_gtk_x11.c	/^apply_wide_font_attr(char_u *s, int len, PangoAttrList *attr_list)$/;"	f	file:	signature:(char_u *s, int len, PangoAttrList *attr_list)
approximate_botline_win	src/move.c	/^approximate_botline_win(wp)$/;"	f
ar0	src/swis.s	/^ar0	rn	0$/;"	l
ar1	src/swis.s	/^ar1	rn	1$/;"	l
ar10	src/swis.s	/^ar10	rn	10$/;"	l
ar11	src/swis.s	/^ar11	rn	11$/;"	l
ar15	src/swis.s	/^ar15	rn	15$/;"	l
ar2	src/swis.s	/^ar2	rn	2$/;"	l
ar3	src/swis.s	/^ar3	rn	3$/;"	l
ar4	src/swis.s	/^ar4	rn	4$/;"	l
ar5	src/swis.s	/^ar5	rn	5$/;"	l
ar6	src/swis.s	/^ar6	rn	6$/;"	l
ar7	src/swis.s	/^ar7	rn	7$/;"	l
arabic_combine	src/mbyte.c	/^arabic_combine(one, two)$/;"	f
arabic_maycombine	src/mbyte.c	/^arabic_maycombine(two)$/;"	f
arabic_shape	src/arabic.c	/^arabic_shape(c, ccp, c1p, prev_c, prev_c1, next_c)$/;"	f
arg	src/dosinst.c	/^    int	    arg;			\/* argument for function *\/$/;"	m	struct:choice	file:	access:public
arg	src/ex_cmds.h	/^    char_u	*arg;		\/* argument of the command *\/$/;"	m	struct:exarg	access:public
arg	src/getchar.c	/^    char_u	*arg;$/;"	m	struct:initmap	file:	access:public
arg	src/structs.h	/^    int		arg;		\/* extra argument from nv_cmds[] *\/$/;"	m	struct:cmdarg_S	access:public
arg_all	src/ex_docmd.c	/^arg_all()$/;"	f	file:
arg_all	src/ex_docmd.c	/^static char_u	*arg_all __ARGS((void));$/;"	p	file:	signature:(void)
arg_bufnr	src/fileio.c	/^    int		arg_bufnr;	\/* initially equal to <abuf>, set to zero when$/;"	m	struct:AutoPatCmd	file:	access:public
arg_had_last	src/globals.h	/^EXTERN int	arg_had_last INIT(= FALSE); \/* accessed last file in$/;"	v
argc	src/main.c	/^    int		argc;$/;"	m	struct:__anon9	file:	access:public
argentry	src/structs.h	/^typedef struct argentry$/;"	s
argentry::ae_fname	src/structs.h	/^    char_u	*ae_fname;	\/* file name as specified *\/$/;"	m	struct:argentry	access:public
argentry::ae_fnum	src/structs.h	/^    int		ae_fnum;	\/* buffer number with expanded file name *\/$/;"	m	struct:argentry	access:public
arglist	src/structs.h	/^typedef struct arglist$/;"	s
arglist::al_ga	src/structs.h	/^    garray_T	al_ga;		\/* growarray with the array of file names *\/$/;"	m	struct:arglist	access:public
arglist::al_refcount	src/structs.h	/^    int		al_refcount;	\/* number of windows using this arglist *\/$/;"	m	struct:arglist	access:public
args	src/gui_motif.c	/^    char *  args;   \/* not used right now *\/$/;"	m	struct:dialog_callback_arg	file:	access:public
argt	src/ex_cmds.h	/^    long	argt;		\/* flags for the command *\/$/;"	m	struct:exarg	access:public
arguments	src/structs.h	/^    char_u	*arguments;$/;"	m	struct:__anon60	access:public
argv	src/main.c	/^    char	**argv;$/;"	m	struct:__anon9	file:	access:public
armed_pixmap	src/gui_xmebwp.h	/^    Pixmap armed_pixmap;$/;"	m	struct:_XmEnhancedButtonPart	access:public
arrow_used	src/globals.h	/^EXTERN int arrow_used;			\/* Normally FALSE, set to TRUE after$/;"	v
arshape_buf	src/ex_getln.c	/^static char_u	*arshape_buf = NULL;$/;"	v	file:
as_fn_append	src/auto/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	src/auto/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	src/auto/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	src/auto/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	src/auto/config.status	/^as_fn_error ()$/;"	f
as_fn_error	src/auto/configure	/^as_fn_error ()$/;"	f
as_fn_exit	src/auto/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	src/auto/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	src/auto/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	src/auto/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	src/auto/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	src/auto/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	src/auto/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	src/auto/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	src/auto/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	src/auto/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	src/auto/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	src/auto/configure	/^as_fn_unset ()$/;"	f
ascii_enc	src/hardcopy.c	/^    char			*ascii_enc;$/;"	m	struct:prt_ps_mbfont_S	file:	access:public
ascii_font	src/gui.h	/^    PangoFont	     *ascii_font;   \/* cached font for ASCII strings *\/$/;"	m	struct:Gui	access:public
ascii_glyph_table_init	src/gui_gtk_x11.c	/^ascii_glyph_table_init(void)$/;"	f	file:	signature:(void)
ascii_glyphs	src/gui.h	/^    PangoGlyphString *ascii_glyphs; \/* cached code point -> glyph map *\/$/;"	m	struct:Gui	access:public
ask_for_key	src/main.c	/^    int		ask_for_key;		\/* -x argument *\/$/;"	m	struct:__anon9	file:	access:public
ask_yesno	src/misc1.c	/^ask_yesno(str, direct)$/;"	f
at	runtime/syntax/sed.vim	/^let __at = char2nr("@")$/;"	v
at_start	src/regexp.c	/^static int	at_start;	\/* True when on the first character *\/$/;"	v	file:
athena_calculate_ins_pos	src/gui_athena.c	/^athena_calculate_ins_pos(widget)$/;"	f	file:
athena_calculate_ins_pos	src/gui_athena.c	/^static Cardinal	athena_calculate_ins_pos __ARGS((Widget));$/;"	p	file:	signature:(Widget)
attachDump	src/gui_motif.c	/^static void attachDump(Widget, char *);$/;"	p	file:	signature:(Widget, char *)
attention_message	src/memline.c	/^attention_message(buf, fname)$/;"	f	file:
attention_message	src/memline.c	/^static void attention_message __ARGS((buf_T *buf, char_u *fname));$/;"	p	file:	signature:(buf_T *buf, char_u *fname)
attr	src/message.c	/^    int			attr;$/;"	m	struct:msg_hist	file:	access:public
attr	src/structs.h	/^    int		attr;	\/* attributes to be used for a match *\/$/;"	m	struct:__anon56	access:public
attr_cur	src/structs.h	/^    int		attr_cur; \/* attributes currently active in win_line() *\/$/;"	m	struct:__anon56	access:public
attr_entry	src/structs.h	/^typedef struct attr_entry$/;"	s
attr_entry::__anon45::__anon46::start	src/structs.h	/^	    char_u	    *start;	\/* start escape sequence *\/$/;"	m	struct:attr_entry::__anon45::__anon46	access:public
attr_entry::__anon45::__anon46::stop	src/structs.h	/^	    char_u	    *stop;	\/* stop escape sequence *\/$/;"	m	struct:attr_entry::__anon45::__anon46	access:public
attr_entry::__anon45::__anon47::bg_color	src/structs.h	/^	    short_u	    bg_color;	\/* background color number *\/$/;"	m	struct:attr_entry::__anon45::__anon47	access:public
attr_entry::__anon45::__anon47::fg_color	src/structs.h	/^	    short_u	    fg_color;	\/* foreground color number *\/$/;"	m	struct:attr_entry::__anon45::__anon47	access:public
attr_entry::__anon45::__anon48::bg_color	src/structs.h	/^	    guicolor_T	    bg_color;	\/* background color handle *\/$/;"	m	struct:attr_entry::__anon45::__anon48	access:public
attr_entry::__anon45::__anon48::fg_color	src/structs.h	/^	    guicolor_T	    fg_color;	\/* foreground color handle *\/$/;"	m	struct:attr_entry::__anon45::__anon48	access:public
attr_entry::__anon45::__anon48::font	src/structs.h	/^	    GuiFont	    font;	\/* font handle *\/$/;"	m	struct:attr_entry::__anon45::__anon48	access:public
attr_entry::__anon45::__anon48::fontset	src/structs.h	/^	    GuiFontset	    fontset;	\/* fontset handle *\/$/;"	m	struct:attr_entry::__anon45::__anon48	access:public
attr_entry::__anon45::__anon48::sp_color	src/structs.h	/^	    guicolor_T	    sp_color;	\/* special color handle *\/$/;"	m	struct:attr_entry::__anon45::__anon48	access:public
attr_entry::__anon45::cterm	src/structs.h	/^	} cterm;$/;"	m	union:attr_entry::__anon45	typeref:struct:attr_entry::__anon45::__anon47	access:public
attr_entry::__anon45::gui	src/structs.h	/^	} gui;$/;"	m	union:attr_entry::__anon45	typeref:struct:attr_entry::__anon45::__anon48	access:public
attr_entry::__anon45::term	src/structs.h	/^	} term;$/;"	m	union:attr_entry::__anon45	typeref:struct:attr_entry::__anon45::__anon46	access:public
attr_entry::ae_attr	src/structs.h	/^    short	    ae_attr;		\/* HL_BOLD, etc. *\/$/;"	m	struct:attr_entry	access:public
attr_entry::ae_u	src/structs.h	/^    } ae_u;$/;"	m	struct:attr_entry	typeref:union:attr_entry::__anon45	access:public
attrentry_T	src/structs.h	/^} attrentry_T;$/;"	t	typeref:struct:attr_entry
au_cleanup	src/fileio.c	/^au_cleanup()$/;"	f	file:
au_cleanup	src/fileio.c	/^static void au_cleanup __ARGS((void));$/;"	p	file:	signature:(void)
au_del_group	src/fileio.c	/^au_del_group(name)$/;"	f	file:
au_del_group	src/fileio.c	/^static void au_del_group __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
au_event_disable	src/fileio.c	/^au_event_disable(what)$/;"	f
au_event_restore	src/fileio.c	/^au_event_restore(old_ei)$/;"	f
au_exists	src/fileio.c	/^au_exists(arg)$/;"	f
au_find_group	src/fileio.c	/^au_find_group(name)$/;"	f	file:
au_find_group	src/fileio.c	/^static int au_find_group __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
au_get_grouparg	src/fileio.c	/^au_get_grouparg(argp)$/;"	f	file:
au_get_grouparg	src/fileio.c	/^static int au_get_grouparg __ARGS((char_u **argp));$/;"	p	file:	signature:(char_u **argp)
au_has_group	src/fileio.c	/^au_has_group(name)$/;"	f
au_need_clean	src/fileio.c	/^static int au_need_clean = FALSE;   \/* need to delete marked patterns *\/$/;"	v	file:
au_new_curbuf	src/globals.h	/^EXTERN buf_T	*au_new_curbuf INIT(= NULL);$/;"	v
au_new_group	src/fileio.c	/^au_new_group(name)$/;"	f	file:
au_new_group	src/fileio.c	/^static int au_new_group __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
au_remove_cmds	src/fileio.c	/^au_remove_cmds(ap)$/;"	f	file:
au_remove_cmds	src/fileio.c	/^static void au_remove_cmds __ARGS((AutoPat *ap));$/;"	p	file:	signature:(AutoPat *ap)
au_remove_pat	src/fileio.c	/^au_remove_pat(ap)$/;"	f	file:
au_remove_pat	src/fileio.c	/^static void au_remove_pat __ARGS((AutoPat *ap));$/;"	p	file:	signature:(AutoPat *ap)
aubuflocal_remove	src/fileio.c	/^aubuflocal_remove(buf)$/;"	f
aucmd_prepbuf	src/fileio.c	/^aucmd_prepbuf(aco, buf)$/;"	f
aucmd_restbuf	src/fileio.c	/^aucmd_restbuf(aco)$/;"	f
aucmd_win	src/globals.h	/^EXTERN win_T	*aucmd_win;	\/* window used in aucmd_prepbuf() *\/$/;"	v
aucmd_win_used	src/globals.h	/^EXTERN int	aucmd_win_used INIT(= FALSE);	\/* aucmd_win is being used *\/$/;"	v
augroups	src/fileio.c	/^static garray_T augroups = {0, 0, sizeof(char_u *), 10, NULL};$/;"	v	file:
auto_event	src/vim.h	/^enum auto_event$/;"	g
auto_format	src/edit.c	/^auto_format(trailblank, prev_line)$/;"	f
auto_next_pat	src/fileio.c	/^auto_next_pat(apc, stop_at_last)$/;"	f	file:
auto_next_pat	src/fileio.c	/^static void auto_next_pat __ARGS((AutoPatCmd *apc, int stop_at_last));$/;"	p	file:	signature:(AutoPatCmd *apc, int stop_at_last)
autocmd_blocked	src/fileio.c	/^static int	autocmd_blocked = 0;	\/* block all autocmds *\/$/;"	v	file:
autocmd_bufnr	src/globals.h	/^EXTERN int	autocmd_bufnr INIT(= 0);     \/* fnum for <abuf> on cmdline *\/$/;"	v
autocmd_busy	src/globals.h	/^EXTERN int	autocmd_busy INIT(= FALSE);	\/* Is apply_autocmds() busy? *\/$/;"	v
autocmd_fname	src/globals.h	/^EXTERN char_u	*autocmd_fname INIT(= NULL); \/* fname for <afile> on cmdline *\/$/;"	v
autocmd_fname_full	src/globals.h	/^EXTERN int	autocmd_fname_full;	     \/* autocmd_fname is full path *\/$/;"	v
autocmd_match	src/globals.h	/^EXTERN char_u	*autocmd_match INIT(= NULL); \/* name for <amatch> on cmdline *\/$/;"	v
autocmd_nested	src/fileio.c	/^static int	autocmd_nested = FALSE;$/;"	v	file:
autocmd_no_enter	src/globals.h	/^EXTERN int	autocmd_no_enter INIT(= FALSE); \/* *Enter autocmds disabled *\/$/;"	v
autocmd_no_leave	src/globals.h	/^EXTERN int	autocmd_no_leave INIT(= FALSE); \/* *Leave autocmds disabled *\/$/;"	v
autocmd_supported	src/fileio.c	/^autocmd_supported(name)$/;"	f
autoload_name	src/eval.c	/^autoload_name(name)$/;"	f	file:
autoload_name	src/eval.c	/^static char_u *autoload_name __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
autowrite	src/ex_cmds2.c	/^autowrite(buf, forceit)$/;"	f
autowrite_all	src/ex_cmds2.c	/^autowrite_all()$/;"	f
available	src/vim.h	/^    int		available;	\/* Is clipboard available? *\/$/;"	m	struct:VimClipboard	access:public
awkpath	src/Makefile	/^	awkpath=`.\/which.sh nawk` && sed -e "s+\/usr\/bin\/nawk+$$awkpath+" $(TOOLSSOURCE)\/mve.awk >$(DEST_TOOLS)\/mve.awk; if test -z "$$awkpath"; then \\$/;"	m
b	runtime/macros/less.vim	/^noremap <script> b <C-B><SID>L$/;"	m
b	src/regexp.c	/^    int a, b, c;$/;"	m	struct:__anon104	file:	access:public
b0_dirty	src/memline.c	184;"	d	file:
b0_flags	src/memline.c	189;"	d	file:
b0_fname	src/memline.c	/^    char_u	b0_fname[B0_FNAME_SIZE_ORG]; \/* name of file being edited *\/$/;"	m	struct:block0	file:	access:public
b0_hname	src/memline.c	/^    char_u	b0_hname[B0_HNAME_SIZE]; \/* host name (if it has a name) *\/$/;"	m	struct:block0	file:	access:public
b0_id	src/memline.c	/^    char_u	b0_id[2];	\/* id for block 0: BLOCK0_ID0 and BLOCK0_ID1,$/;"	m	struct:block0	file:	access:public
b0_ino	src/memline.c	/^    char_u	b0_ino[4];	\/* inode of b0_fname *\/$/;"	m	struct:block0	file:	access:public
b0_magic_char	src/memline.c	/^    char_u	b0_magic_char;	\/* check for last char *\/$/;"	m	struct:block0	file:	access:public
b0_magic_int	src/memline.c	/^    int		b0_magic_int;	\/* check for byte order of int *\/$/;"	m	struct:block0	file:	access:public
b0_magic_long	src/memline.c	/^    long	b0_magic_long;	\/* check for byte order of long *\/$/;"	m	struct:block0	file:	access:public
b0_magic_short	src/memline.c	/^    short	b0_magic_short;	\/* check for byte order of short *\/$/;"	m	struct:block0	file:	access:public
b0_magic_wrong	src/memline.c	/^b0_magic_wrong(b0p)$/;"	f	file:
b0_magic_wrong	src/memline.c	/^static int b0_magic_wrong __ARGS((ZERO_BL *));$/;"	p	file:	signature:(ZERO_BL *)
b0_mtime	src/memline.c	/^    char_u	b0_mtime[4];	\/* last modification time of file *\/$/;"	m	struct:block0	file:	access:public
b0_page_size	src/memline.c	/^    char_u	b0_page_size[4];\/* number of bytes per page *\/$/;"	m	struct:block0	file:	access:public
b0_pid	src/memline.c	/^    char_u	b0_pid[4];	\/* process id of creator (or 0) *\/$/;"	m	struct:block0	file:	access:public
b0_seed	src/memline.c	195;"	d	file:
b0_uname	src/memline.c	/^    char_u	b0_uname[B0_UNAME_SIZE]; \/* name of user (uid if no name) *\/$/;"	m	struct:block0	file:	access:public
b0_version	src/memline.c	/^    char_u	b0_version[10];	\/* Vim version string *\/$/;"	m	struct:block0	file:	access:public
b:	runtime/syntax/liquid.vim	/^      let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:InPHPcode	runtime/indent/php.vim	/^let b:InPHPcode = 0$/;"	v
b:InPHPcode_and_script	runtime/indent/php.vim	/^let b:InPHPcode_and_script = 0$/;"	v
b:InPHPcode_checked	runtime/indent/php.vim	/^let b:InPHPcode_checked = 0$/;"	v
b:InPHPcode_tofind	runtime/indent/php.vim	/^let b:InPHPcode_tofind = ""$/;"	v
b:PHP_BracesAtCodeLevel	runtime/indent/php.vim	/^    let b:PHP_BracesAtCodeLevel = 0$/;"	v
b:PHP_BracesAtCodeLevel	runtime/indent/php.vim	/^    let b:PHP_BracesAtCodeLevel = PHP_BracesAtCodeLevel$/;"	v
b:PHP_CurrentIndentLevel	runtime/indent/php.vim	/^let b:PHP_CurrentIndentLevel = b:PHP_default_indenting$/;"	v
b:PHP_InsideMultilineComment	runtime/indent/php.vim	/^let b:PHP_InsideMultilineComment = 0$/;"	v
b:PHP_LastIndentedWasComment	runtime/indent/php.vim	/^let b:PHP_LastIndentedWasComment = 0$/;"	v
b:PHP_autoformatcomment	runtime/indent/php.vim	/^    let b:PHP_autoformatcomment = 1$/;"	v
b:PHP_autoformatcomment	runtime/indent/php.vim	/^    let b:PHP_autoformatcomment = PHP_autoformatcomment$/;"	v
b:PHP_default_indenting	runtime/indent/php.vim	/^    let b:PHP_default_indenting = 0$/;"	v
b:PHP_default_indenting	runtime/indent/php.vim	/^    let b:PHP_default_indenting = PHP_default_indenting * &sw$/;"	v
b:PHP_indentbeforelast	runtime/indent/php.vim	/^let b:PHP_indentbeforelast = 0$/;"	v
b:PHP_indentinghuge	runtime/indent/php.vim	/^let b:PHP_indentinghuge = 0$/;"	v
b:PHP_lastindented	runtime/indent/php.vim	/^let b:PHP_lastindented = 0$/;"	v
b:PHP_oldchangetick	runtime/indent/php.vim	/^let b:PHP_oldchangetick = b:changedtick$/;"	v
b:PHP_outdentphpescape	runtime/indent/php.vim	/^    let b:PHP_outdentphpescape = 1$/;"	v
b:PHP_outdentphpescape	runtime/indent/php.vim	/^    let b:PHP_outdentphpescape = PHP_outdentphpescape$/;"	v
b:PHP_vintage_case_default_indent	runtime/indent/php.vim	/^    let b:PHP_vintage_case_default_indent = 0$/;"	v
b:PHP_vintage_case_default_indent	runtime/indent/php.vim	/^    let b:PHP_vintage_case_default_indent = 1$/;"	v
b:UserIsTypingComment	runtime/indent/php.vim	/^let b:UserIsTypingComment = 0$/;"	v
b:annotation_file_located	runtime/ftplugin/ocaml.vim	/^  let b:annotation_file_located = 0$/;"	v
b:autohotkey_syntax_sync_minlines	runtime/syntax/autohotkey.vim	/^  let b:autohotkey_syntax_sync_minlines = 50$/;"	v
b:autohotkey_syntax_sync_minlines	runtime/syntax/autohotkey.vim	/^  let b:autohotkey_syntax_sync_minlines = g:autohotkey_syntax_sync_minlines$/;"	v
b:bdf_minlines	runtime/syntax/bdf.vim	/^  let b:bdf_minlines = 30$/;"	v
b:bdf_minlines	runtime/syntax/bdf.vim	/^  let b:bdf_minlines = bdf_minlines$/;"	v
b:browsefilter	runtime/ftplugin/abaqus.vim	/^    let b:browsefilter = "Abaqus Input Files (*.inp *.inc)\\t*.inp;*.inc\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/ant.vim	/^    let b:browsefilter = "Build Files (build.xml)\\tbuild.xml\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/aspvbs.vim	/^    let  b:browsefilter="ASP Files (*.asp)\\t*.asp\\n" . s:browsefilter$/;"	v
b:browsefilter	runtime/ftplugin/c.vim	/^    let b:browsefilter = "C Source Files (*.c)\\t*.c\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/c.vim	/^    let b:browsefilter = "C++ Source Files (*.cpp *.c++)\\t*.cpp;*.c++\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/c.vim	/^    let b:browsefilter = "Ch Source Files (*.ch *.chf)\\t*.ch;*.chf\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/cobol.vim	/^  let b:browsefilter = "COBOL Source Files (*.cbl, *.cob)\\t*.cbl;*.cob;*.lib\\n".$/;"	v
b:browsefilter	runtime/ftplugin/config.vim	/^    let  b:browsefilter="Configure Scripts (configure.*, config.*)\\tconfigure*;config.*\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/cs.vim	/^    let b:browsefilter = "C# Source Files (*.cs)\\t*.cs\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/csh.vim	/^    let  b:browsefilter="csh Scripts (*.csh)\\t*.csh\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/dosbatch.vim	/^  let b:browsefilter = "DOS Batch Files (*.bat, *.cmd)\\t*.bat;*.cmd\\nAll Files (*.*)\\t*.*\\n"$/;"	v
b:browsefilter	runtime/ftplugin/dtd.vim	/^    let  b:browsefilter="DTD Files (*.dtd)\\t*.dtd\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	runtime/ftplugin/fortran.vim	/^  let b:browsefilter = "Fortran Files (*.f;*.F;*.for;*.f77;*.f90;*.f95;*.fpp;*.ftn)\\t*.f;*.F;*.for;*.f77;*.f90;*.f95;*.fpp;*.ftn\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:browsefilter	runtime/ftplugin/html.vim	/^    let  b:browsefilter="HTML Files (*.html,*.htm)\\t*.htm;*.html\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/ishd.vim	/^    let b:browsefilter = "InstallShield Files (*.rul)\\t*.rul\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/java.vim	/^    let  b:browsefilter="Java Files (*.java)\\t*.java\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/javascript.vim	/^    let  b:browsefilter="Javascript Files (*.js)\\t*.js\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/jsp.vim	/^    let  b:browsefilter="JSP Files (*.jsp)\\t*.jsp\\n" . s:browsefilter$/;"	v
b:browsefilter	runtime/ftplugin/kwt.vim	/^    let b:browsefilter = "Kimwitu\/Kimwitu++ Files (*.k)\\t*.k\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/liquid.vim	/^  let b:browsefilter = "\\n".b:browsefilter$/;"	v
b:browsefilter	runtime/ftplugin/liquid.vim	/^  let b:browsefilter = ''$/;"	v
b:browsefilter	runtime/ftplugin/liquid.vim	/^  let b:browsefilter="Liquid Files (*.liquid)\\t*.liquid" . b:browsefilter$/;"	v
b:browsefilter	runtime/ftplugin/msmessages.vim	/^  let b:browsefilter = "MS Message Files (*.mc)\\t*.mc\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/occam.vim	/^  let b:browsefilter = "All Occam Files (*.occ *.inc)\\t*.occ;*.inc\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/perl.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/perl6.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/php.vim	/^    let  b:browsefilter="PHP Files (*.php)\\t*.php\\n" . s:browsefilter$/;"	v
b:browsefilter	runtime/ftplugin/postscr.vim	/^  let b:browsefilter = "PostScript Files (*.ps)\\t*.ps\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/pyrex.vim	/^    let  b:browsefilter = "Pyrex files (*.pyx,*.pxd)\\t*.pyx;*.pxd\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/python.vim	/^    let b:browsefilter = "Python Files (*.py)\\t*.py\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/sgml.vim	/^    let  b:browsefilter="SGML Files (*.sgml,*.sgm)\\t*.sgm*\\n" . s:browsefilter$/;"	v
b:browsefilter	runtime/ftplugin/sh.vim	/^    let  b:browsefilter="Bourne Shell Scripts (*.sh)\\t*.sh\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/sql.vim	/^    let b:browsefilter = "SQL Files (*.sql)\\t*.sql\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/svg.vim	/^    let  b:browsefilter="SVG Files (*.svg)\\t*.svg\\n" . s:browsefilter$/;"	v
b:browsefilter	runtime/ftplugin/tcl.vim	/^    let b:browsefilter = "Tcl Source Files (.tcl)\\t*.tcl\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/tcsh.vim	/^    let  b:browsefilter="tcsh Scripts (*.tcsh)\\t*.tcsh\\n" . s:browsefilter$/;"	v
b:browsefilter	runtime/ftplugin/verilog.vim	/^  let b:browsefilter = "Verilog Source Files (*.v)\\t*.v\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/xhtml.vim	/^    let  b:browsefilter="XHTML files (*.xhtml, *.xhtm)\\t*.xhtml;*.xhtm\\n" . s:browsefilter$/;"	v
b:browsefilter	runtime/ftplugin/xml.vim	/^    let  b:browsefilter="XML Files (*.xml)\\t*.xml\\n" .$/;"	v
b:browsefilter	runtime/ftplugin/xsd.vim	/^    let  b:browsefilter="XSD Files (*.xsd)\\t*.xsd\\n" . s:browsefilter$/;"	v
b:browsefilter	runtime/ftplugin/xslt.vim	/^    let  b:browsefilter="XSLT Files (*.xsl,*.xslt)\\t*.xsl;*.xslt\\n" . b:browsefilter$/;"	v
b:browsefilter	runtime/syntax/lpc.vim	/^    let b:browsefilter = "LPC Source Files (*.c *.d *.h)\\t*.c;*.d;*.h\\n" .$/;"	v
b:c_minlines	runtime/syntax/c.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	runtime/syntax/c.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	runtime/syntax/c.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	runtime/syntax/calendar.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	runtime/syntax/calendar.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	runtime/syntax/calendar.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	runtime/syntax/indent.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	runtime/syntax/indent.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	runtime/syntax/indent.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	runtime/syntax/lpc.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	runtime/syntax/lpc.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	runtime/syntax/lpc.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:comment_end	runtime/ftplugin/sql.vim	/^let b:comment_end = '\\\\(^\\\\s*'.b:comment_leader.'.*\\\\n\\\\)'.$/;"	v
b:comment_jump_over	runtime/ftplugin/sql.vim	/^let b:comment_jump_over  = "call search('".$/;"	v
b:comment_leader	runtime/ftplugin/sql.vim	/^let b:comment_leader = '\\\\(--\\\\\\|\\\\\/\\\\\/\\\\\\|\\\\*\\\\\\|\\\\\/\\\\*\\\\\\|\\\\*\\\\\/\\\\)'$/;"	v
b:comment_skip_back	runtime/ftplugin/sql.vim	/^let b:comment_skip_back  = "call search('".$/;"	v
b:comment_start	runtime/ftplugin/sql.vim	/^let b:comment_start  = '^\\\\(\\\\s*'.b:comment_leader.'.*\\\\n\\\\)\\\\@<!'.$/;"	v
b:cucumber_root	runtime/ftplugin/cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:current_ftplugin	runtime/ftplugin/sql.vim	/^let b:current_ftplugin = 'sql'$/;"	v
b:current_indent	runtime/indent/sqlanywhere.vim	/^let b:current_indent = "sqlanywhere"$/;"	v
b:current_syntax	runtime/syntax/a2ps.vim	/^let b:current_syntax = "a2ps"$/;"	v
b:current_syntax	runtime/syntax/a65.vim	/^let b:current_syntax = "a65"$/;"	v
b:current_syntax	runtime/syntax/aap.vim	/^let b:current_syntax = "aap"$/;"	v
b:current_syntax	runtime/syntax/abap.vim	/^let b:current_syntax = "abap"$/;"	v
b:current_syntax	runtime/syntax/abaqus.vim	/^let b:current_syntax = "abaqus"$/;"	v
b:current_syntax	runtime/syntax/abc.vim	/^let b:current_syntax = "abc"$/;"	v
b:current_syntax	runtime/syntax/abel.vim	/^let b:current_syntax = "abel"$/;"	v
b:current_syntax	runtime/syntax/acedb.vim	/^let b:current_syntax = "acedb"$/;"	v
b:current_syntax	runtime/syntax/ada.vim	/^let b:current_syntax = "ada"$/;"	v
b:current_syntax	runtime/syntax/aflex.vim	/^let b:current_syntax = "aflex"$/;"	v
b:current_syntax	runtime/syntax/ahdl.vim	/^let b:current_syntax = "ahdl"$/;"	v
b:current_syntax	runtime/syntax/alsaconf.vim	/^let b:current_syntax = "alsaconf"$/;"	v
b:current_syntax	runtime/syntax/amiga.vim	/^let b:current_syntax = "amiga"$/;"	v
b:current_syntax	runtime/syntax/aml.vim	/^let b:current_syntax = "aml"$/;"	v
b:current_syntax	runtime/syntax/ampl.vim	/^let b:current_syntax = "ampl"$/;"	v
b:current_syntax	runtime/syntax/ant.vim	/^let b:current_syntax = "ant"$/;"	v
b:current_syntax	runtime/syntax/antlr.vim	/^let b:current_syntax = "antlr"$/;"	v
b:current_syntax	runtime/syntax/apache.vim	/^let b:current_syntax = "apache"$/;"	v
b:current_syntax	runtime/syntax/apachestyle.vim	/^let b:current_syntax = "apachestyle"$/;"	v
b:current_syntax	runtime/syntax/arch.vim	/^let b:current_syntax = "arch"$/;"	v
b:current_syntax	runtime/syntax/art.vim	/^let b:current_syntax = "art"$/;"	v
b:current_syntax	runtime/syntax/asm.vim	/^let b:current_syntax = "asm"$/;"	v
b:current_syntax	runtime/syntax/asm68k.vim	/^let b:current_syntax = "asm68k"$/;"	v
b:current_syntax	runtime/syntax/asmh8300.vim	/^let b:current_syntax = "asmh8300"$/;"	v
b:current_syntax	runtime/syntax/asn.vim	/^let b:current_syntax = "asn"$/;"	v
b:current_syntax	runtime/syntax/aspperl.vim	/^let b:current_syntax = "aspperl"$/;"	v
b:current_syntax	runtime/syntax/aspvbs.vim	/^let b:current_syntax = "aspvbs"$/;"	v
b:current_syntax	runtime/syntax/asterisk.vim	/^let b:current_syntax = "asterisk" $/;"	v
b:current_syntax	runtime/syntax/asteriskvm.vim	/^let b:current_syntax = "asteriskvm"$/;"	v
b:current_syntax	runtime/syntax/atlas.vim	/^let b:current_syntax = "atlas"$/;"	v
b:current_syntax	runtime/syntax/autohotkey.vim	/^let b:current_syntax = "autohotkey"$/;"	v
b:current_syntax	runtime/syntax/automake.vim	/^let b:current_syntax = "automake"$/;"	v
b:current_syntax	runtime/syntax/ave.vim	/^let b:current_syntax = "ave"$/;"	v
b:current_syntax	runtime/syntax/awk.vim	/^let b:current_syntax = "awk"$/;"	v
b:current_syntax	runtime/syntax/ayacc.vim	/^let b:current_syntax = "ayacc"$/;"	v
b:current_syntax	runtime/syntax/b.vim	/^let b:current_syntax = "b"$/;"	v
b:current_syntax	runtime/syntax/baan.vim	/^let b:current_syntax = "baan"$/;"	v
b:current_syntax	runtime/syntax/basic.vim	/^let b:current_syntax = "basic"$/;"	v
b:current_syntax	runtime/syntax/bc.vim	/^let b:current_syntax = "bc"$/;"	v
b:current_syntax	runtime/syntax/bdf.vim	/^let b:current_syntax = "bdf"$/;"	v
b:current_syntax	runtime/syntax/bib.vim	/^let b:current_syntax = "bib"$/;"	v
b:current_syntax	runtime/syntax/bindzone.vim	/^let b:current_syntax = "bindzone"$/;"	v
b:current_syntax	runtime/syntax/blank.vim	/^let b:current_syntax = "blank"$/;"	v
b:current_syntax	runtime/syntax/bst.vim	/^let b:current_syntax = "bst"$/;"	v
b:current_syntax	runtime/syntax/btm.vim	/^let b:current_syntax = "btm"$/;"	v
b:current_syntax	runtime/syntax/bzr.vim	/^let b:current_syntax = "bzr"$/;"	v
b:current_syntax	runtime/syntax/c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	runtime/syntax/cabal.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	runtime/syntax/calendar.vim	/^let b:current_syntax = "calendar"$/;"	v
b:current_syntax	runtime/syntax/catalog.vim	/^let b:current_syntax = "catalog"$/;"	v
b:current_syntax	runtime/syntax/cdl.vim	/^let b:current_syntax = "cdl"$/;"	v
b:current_syntax	runtime/syntax/cdrdaoconf.vim	/^let b:current_syntax = "cdrdaoconf"$/;"	v
b:current_syntax	runtime/syntax/cdrtoc.vim	/^let b:current_syntax = "cdrtoc"$/;"	v
b:current_syntax	runtime/syntax/cf.vim	/^let b:current_syntax = "cf"$/;"	v
b:current_syntax	runtime/syntax/cfg.vim	/^let b:current_syntax = "cfg"$/;"	v
b:current_syntax	runtime/syntax/ch.vim	/^let b:current_syntax = "ch"$/;"	v
b:current_syntax	runtime/syntax/chaiscript.vim	/^let b:current_syntax = "chaiscript"$/;"	v
b:current_syntax	runtime/syntax/change.vim	/^let b:current_syntax = "change"$/;"	v
b:current_syntax	runtime/syntax/changelog.vim	/^let b:current_syntax = "changelog"$/;"	v
b:current_syntax	runtime/syntax/cheetah.vim	/^let b:current_syntax = "cheetah"$/;"	v
b:current_syntax	runtime/syntax/chill.vim	/^let b:current_syntax = "chill"$/;"	v
b:current_syntax	runtime/syntax/chordpro.vim	/^let b:current_syntax = "chordpro"$/;"	v
b:current_syntax	runtime/syntax/cl.vim	/^let b:current_syntax = "cl"$/;"	v
b:current_syntax	runtime/syntax/clean.vim	/^let b:current_syntax = "clean"$/;"	v
b:current_syntax	runtime/syntax/clipper.vim	/^let b:current_syntax = "clipper"$/;"	v
b:current_syntax	runtime/syntax/cmake.vim	/^let b:current_syntax = "cmake"$/;"	v
b:current_syntax	runtime/syntax/cmusrc.vim	/^let b:current_syntax = "cmusrc"$/;"	v
b:current_syntax	runtime/syntax/cobol.vim	/^let b:current_syntax = "cobol"$/;"	v
b:current_syntax	runtime/syntax/conaryrecipe.vim	/^let b:current_syntax = "conaryrecipe"$/;"	v
b:current_syntax	runtime/syntax/conf.vim	/^let b:current_syntax = "conf"$/;"	v
b:current_syntax	runtime/syntax/config.vim	/^let b:current_syntax = "config"$/;"	v
b:current_syntax	runtime/syntax/context.vim	/^let b:current_syntax = "context"$/;"	v
b:current_syntax	runtime/syntax/cpp.vim	/^let b:current_syntax = "cpp"$/;"	v
b:current_syntax	runtime/syntax/crm.vim	/^let b:current_syntax = "crm"$/;"	v
b:current_syntax	runtime/syntax/crontab.vim	/^let b:current_syntax = "crontab"$/;"	v
b:current_syntax	runtime/syntax/cs.vim	/^let b:current_syntax = "cs"$/;"	v
b:current_syntax	runtime/syntax/csc.vim	/^let b:current_syntax = "csc"$/;"	v
b:current_syntax	runtime/syntax/csh.vim	/^let b:current_syntax = "csh"$/;"	v
b:current_syntax	runtime/syntax/csp.vim	/^let b:current_syntax = "csp"$/;"	v
b:current_syntax	runtime/syntax/css.vim	/^let b:current_syntax = "css"$/;"	v
b:current_syntax	runtime/syntax/cterm.vim	/^let b:current_syntax = "cterm"$/;"	v
b:current_syntax	runtime/syntax/cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	runtime/syntax/cuda.vim	/^let b:current_syntax = "cuda"$/;"	v
b:current_syntax	runtime/syntax/cupl.vim	/^let b:current_syntax = "cupl"$/;"	v
b:current_syntax	runtime/syntax/cuplsim.vim	/^let b:current_syntax = "cuplsim"$/;"	v
b:current_syntax	runtime/syntax/cvs.vim	/^let b:current_syntax = "cvs"$/;"	v
b:current_syntax	runtime/syntax/cvsrc.vim	/^let b:current_syntax = "cvsrc"$/;"	v
b:current_syntax	runtime/syntax/cweb.vim	/^let b:current_syntax = "cweb"$/;"	v
b:current_syntax	runtime/syntax/cynlib.vim	/^let b:current_syntax = "cynlib"$/;"	v
b:current_syntax	runtime/syntax/cynpp.vim	/^let b:current_syntax = "cynpp"$/;"	v
b:current_syntax	runtime/syntax/d.vim	/^let b:current_syntax = "d"$/;"	v
b:current_syntax	runtime/syntax/datascript.vim	/^let b:current_syntax = "datascript"$/;"	v
b:current_syntax	runtime/syntax/dcd.vim	/^let b:current_syntax = "dcd"$/;"	v
b:current_syntax	runtime/syntax/dcl.vim	/^let b:current_syntax = "dcl"$/;"	v
b:current_syntax	runtime/syntax/debchangelog.vim	/^let b:current_syntax = "debchangelog"$/;"	v
b:current_syntax	runtime/syntax/debcontrol.vim	/^let b:current_syntax = "debcontrol"$/;"	v
b:current_syntax	runtime/syntax/debsources.vim	/^let b:current_syntax = "debsources"$/;"	v
b:current_syntax	runtime/syntax/def.vim	/^let b:current_syntax = "def"$/;"	v
b:current_syntax	runtime/syntax/denyhosts.vim	/^let b:current_syntax = "denyhosts"$/;"	v
b:current_syntax	runtime/syntax/desc.vim	/^let b:current_syntax = "desc"$/;"	v
b:current_syntax	runtime/syntax/desktop.vim	/^let b:current_syntax = "desktop"$/;"	v
b:current_syntax	runtime/syntax/dictconf.vim	/^let b:current_syntax = "dictconf"$/;"	v
b:current_syntax	runtime/syntax/dictdconf.vim	/^let b:current_syntax = "dictdconf"$/;"	v
b:current_syntax	runtime/syntax/diff.vim	/^let b:current_syntax = "diff"$/;"	v
b:current_syntax	runtime/syntax/dircolors.vim	/^let b:current_syntax = "dircolors"$/;"	v
b:current_syntax	runtime/syntax/diva.vim	/^let b:current_syntax = "diva"$/;"	v
b:current_syntax	runtime/syntax/django.vim	/^let b:current_syntax = "django"$/;"	v
b:current_syntax	runtime/syntax/docbk.vim	/^let b:current_syntax = "docbk"$/;"	v
b:current_syntax	runtime/syntax/dosbatch.vim	/^let b:current_syntax = "dosbatch"$/;"	v
b:current_syntax	runtime/syntax/dosini.vim	/^let b:current_syntax = "dosini"$/;"	v
b:current_syntax	runtime/syntax/dot.vim	/^let b:current_syntax = "dot"$/;"	v
b:current_syntax	runtime/syntax/doxygen.vim	/^    let b:current_syntax = "doxygen"$/;"	v
b:current_syntax	runtime/syntax/doxygen.vim	/^    let b:current_syntax = b:current_syntax.'.doxygen'$/;"	v
b:current_syntax	runtime/syntax/doxygen.vim	/^    let b:current_syntax=b:doxygen_syntax_save$/;"	v
b:current_syntax	runtime/syntax/dracula.vim	/^let b:current_syntax = "dracula"$/;"	v
b:current_syntax	runtime/syntax/dsl.vim	/^let b:current_syntax = "dsl"$/;"	v
b:current_syntax	runtime/syntax/dtd.vim	/^let b:current_syntax = "dtd"$/;"	v
b:current_syntax	runtime/syntax/dtml.vim	/^let b:current_syntax = "dtml"$/;"	v
b:current_syntax	runtime/syntax/dtrace.vim	/^let b:current_syntax = "dtrace"$/;"	v
b:current_syntax	runtime/syntax/dylan.vim	/^let b:current_syntax = "dylan"$/;"	v
b:current_syntax	runtime/syntax/dylanintr.vim	/^let b:current_syntax = "dylanintr"$/;"	v
b:current_syntax	runtime/syntax/dylanlid.vim	/^let b:current_syntax = "dylanlid"$/;"	v
b:current_syntax	runtime/syntax/ecd.vim	/^let b:current_syntax = "ecd"$/;"	v
b:current_syntax	runtime/syntax/edif.vim	/^let b:current_syntax = "edif"$/;"	v
b:current_syntax	runtime/syntax/eiffel.vim	/^let b:current_syntax = "eiffel"$/;"	v
b:current_syntax	runtime/syntax/elf.vim	/^let b:current_syntax = "elf"$/;"	v
b:current_syntax	runtime/syntax/elinks.vim	/^let b:current_syntax = "elinks"$/;"	v
b:current_syntax	runtime/syntax/elmfilt.vim	/^let b:current_syntax = "elmfilt"$/;"	v
b:current_syntax	runtime/syntax/erlang.vim	/^let b:current_syntax = "erlang"$/;"	v
b:current_syntax	runtime/syntax/eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	runtime/syntax/esmtprc.vim	/^let b:current_syntax="esmtprc"$/;"	v
b:current_syntax	runtime/syntax/esqlc.vim	/^let b:current_syntax = "esqlc"$/;"	v
b:current_syntax	runtime/syntax/esterel.vim	/^let b:current_syntax = "esterel"$/;"	v
b:current_syntax	runtime/syntax/eterm.vim	/^let b:current_syntax = "eterm"$/;"	v
b:current_syntax	runtime/syntax/eviews.vim	/^let b:current_syntax="eviews"$/;"	v
b:current_syntax	runtime/syntax/exim.vim	/^let b:current_syntax = "exim"$/;"	v
b:current_syntax	runtime/syntax/expect.vim	/^let b:current_syntax = "expect"$/;"	v
b:current_syntax	runtime/syntax/exports.vim	/^let b:current_syntax = "exports"$/;"	v
b:current_syntax	runtime/syntax/fan.vim	/^let b:current_syntax = "fan"$/;"	v
b:current_syntax	runtime/syntax/fasm.vim	/^let b:current_syntax = "fasm"$/;"	v
b:current_syntax	runtime/syntax/fdcc.vim	/^let b:current_syntax = "fdcc"$/;"	v
b:current_syntax	runtime/syntax/fetchmail.vim	/^let b:current_syntax = "fetchmail"$/;"	v
b:current_syntax	runtime/syntax/fgl.vim	/^let b:current_syntax = "fgl"$/;"	v
b:current_syntax	runtime/syntax/flexwiki.vim	/^let b:current_syntax="FlexWiki"$/;"	v
b:current_syntax	runtime/syntax/focexec.vim	/^let b:current_syntax = "focexec"$/;"	v
b:current_syntax	runtime/syntax/form.vim	/^  let b:current_syntax = "form"$/;"	v
b:current_syntax	runtime/syntax/forth.vim	/^let b:current_syntax = "forth"$/;"	v
b:current_syntax	runtime/syntax/fortran.vim	/^let b:current_syntax = "fortran"$/;"	v
b:current_syntax	runtime/syntax/foxpro.vim	/^let b:current_syntax = "foxpro"$/;"	v
b:current_syntax	runtime/syntax/framescript.vim	/^let b:current_syntax = "framescript"$/;"	v
b:current_syntax	runtime/syntax/freebasic.vim	/^let b:current_syntax = "freebasic"$/;"	v
b:current_syntax	runtime/syntax/fstab.vim	/^let b:current_syntax = "fstab"$/;"	v
b:current_syntax	runtime/syntax/fvwm.vim	/^let b:current_syntax = "fvwm"$/;"	v
b:current_syntax	runtime/syntax/fvwm2m4.vim	/^let b:current_syntax = 'fvwm2m4'$/;"	v
b:current_syntax	runtime/syntax/gdb.vim	/^let b:current_syntax = "gdb"$/;"	v
b:current_syntax	runtime/syntax/gdmo.vim	/^let b:current_syntax = "gdmo"$/;"	v
b:current_syntax	runtime/syntax/gedcom.vim	/^let b:current_syntax = "gedcom"$/;"	v
b:current_syntax	runtime/syntax/git.vim	/^let b:current_syntax = "git"$/;"	v
b:current_syntax	runtime/syntax/gitcommit.vim	/^let b:current_syntax = "gitcommit"$/;"	v
b:current_syntax	runtime/syntax/gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
b:current_syntax	runtime/syntax/gitrebase.vim	/^let b:current_syntax = "gitrebase"$/;"	v
b:current_syntax	runtime/syntax/gitsendemail.vim	/^let b:current_syntax = "gitsendemail"$/;"	v
b:current_syntax	runtime/syntax/gkrellmrc.vim	/^let b:current_syntax = "gkrellmrc"$/;"	v
b:current_syntax	runtime/syntax/gnuplot.vim	/^let b:current_syntax = "gnuplot"$/;"	v
b:current_syntax	runtime/syntax/gp.vim	/^let b:current_syntax = "gp"$/;"	v
b:current_syntax	runtime/syntax/gpg.vim	/^let b:current_syntax = "gpg"$/;"	v
b:current_syntax	runtime/syntax/grads.vim	/^let b:current_syntax = "grads"$/;"	v
b:current_syntax	runtime/syntax/gretl.vim	/^let b:current_syntax="gretl"$/;"	v
b:current_syntax	runtime/syntax/groovy.vim	/^let b:current_syntax = "groovy"$/;"	v
b:current_syntax	runtime/syntax/group.vim	/^let b:current_syntax = "group"$/;"	v
b:current_syntax	runtime/syntax/grub.vim	/^let b:current_syntax = "grub"$/;"	v
b:current_syntax	runtime/syntax/gsp.vim	/^let b:current_syntax = "gsp"$/;"	v
b:current_syntax	runtime/syntax/gtkrc.vim	/^let b:current_syntax = "gtkrc"$/;"	v
b:current_syntax	runtime/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	runtime/syntax/hamster.vim	/^let b:current_syntax = "hamster"$/;"	v
b:current_syntax	runtime/syntax/haskell.vim	/^let b:current_syntax = "haskell"$/;"	v
b:current_syntax	runtime/syntax/haste.vim	/^let b:current_syntax = "haste"$/;"	v
b:current_syntax	runtime/syntax/hastepreproc.vim	/^let b:current_syntax = "hastepreproc"$/;"	v
b:current_syntax	runtime/syntax/hb.vim	/^let b:current_syntax = "hb"$/;"	v
b:current_syntax	runtime/syntax/help.vim	/^let b:current_syntax = "help"$/;"	v
b:current_syntax	runtime/syntax/hercules.vim	/^let b:current_syntax = "hercules"$/;"	v
b:current_syntax	runtime/syntax/hex.vim	/^let b:current_syntax = "hex"$/;"	v
b:current_syntax	runtime/syntax/hog.vim	/^let b:current_syntax = "hog"$/;"	v
b:current_syntax	runtime/syntax/hostconf.vim	/^let b:current_syntax = "hostconf"$/;"	v
b:current_syntax	runtime/syntax/html.vim	/^let b:current_syntax = "html"$/;"	v
b:current_syntax	runtime/syntax/htmlcheetah.vim	/^let b:current_syntax = "htmlcheetah"$/;"	v
b:current_syntax	runtime/syntax/htmldjango.vim	/^let b:current_syntax = "htmldjango"$/;"	v
b:current_syntax	runtime/syntax/htmlm4.vim	/^let b:current_syntax = "htmlm4"$/;"	v
b:current_syntax	runtime/syntax/htmlos.vim	/^let b:current_syntax = "htmlos"$/;"	v
b:current_syntax	runtime/syntax/ia64.vim	/^let b:current_syntax = "ia64"$/;"	v
b:current_syntax	runtime/syntax/ibasic.vim	/^let b:current_syntax = "ibasic"$/;"	v
b:current_syntax	runtime/syntax/icemenu.vim	/^let b:current_syntax = "IceMenu"$/;"	v
b:current_syntax	runtime/syntax/icon.vim	/^let b:current_syntax = "icon"$/;"	v
b:current_syntax	runtime/syntax/idl.vim	/^let b:current_syntax = "idl"$/;"	v
b:current_syntax	runtime/syntax/idlang.vim	/^let b:current_syntax = "idlang"$/;"	v
b:current_syntax	runtime/syntax/indent.vim	/^let b:current_syntax = "indent"$/;"	v
b:current_syntax	runtime/syntax/inform.vim	/^let b:current_syntax = "inform"$/;"	v
b:current_syntax	runtime/syntax/initex.vim	/^let b:current_syntax = "initex"$/;"	v
b:current_syntax	runtime/syntax/initng.vim	/^let b:current_syntax = "initng"$/;"	v
b:current_syntax	runtime/syntax/inittab.vim	/^let b:current_syntax = "inittab"$/;"	v
b:current_syntax	runtime/syntax/ishd.vim	/^let b:current_syntax = "ishd"$/;"	v
b:current_syntax	runtime/syntax/iss.vim	/^let b:current_syntax = "iss"$/;"	v
b:current_syntax	runtime/syntax/ist.vim	/^let b:current_syntax = "ist"$/;"	v
b:current_syntax	runtime/syntax/jal.vim	/^let b:current_syntax = "jal"$/;"	v
b:current_syntax	runtime/syntax/jam.vim	/^let b:current_syntax = "jam"$/;"	v
b:current_syntax	runtime/syntax/jargon.vim	/^let b:current_syntax = "jargon"$/;"	v
b:current_syntax	runtime/syntax/java.vim	/^let b:current_syntax = "java"$/;"	v
b:current_syntax	runtime/syntax/javacc.vim	/^let b:current_syntax = "javacc"$/;"	v
b:current_syntax	runtime/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	runtime/syntax/jess.vim	/^let b:current_syntax = "jess"$/;"	v
b:current_syntax	runtime/syntax/jgraph.vim	/^let b:current_syntax = "jgraph"$/;"	v
b:current_syntax	runtime/syntax/jproperties.vim	/^let b:current_syntax = "jproperties"$/;"	v
b:current_syntax	runtime/syntax/jsp.vim	/^let b:current_syntax = "jsp"$/;"	v
b:current_syntax	runtime/syntax/kconfig.vim	/^let b:current_syntax = "kconfig"$/;"	v
b:current_syntax	runtime/syntax/kix.vim	/^let b:current_syntax = "kix"$/;"	v
b:current_syntax	runtime/syntax/kscript.vim	/^let b:current_syntax = "kscript"$/;"	v
b:current_syntax	runtime/syntax/kwt.vim	/^let b:current_syntax = "kwt"$/;"	v
b:current_syntax	runtime/syntax/lace.vim	/^let b:current_syntax = "lace"$/;"	v
b:current_syntax	runtime/syntax/latte.vim	/^let b:current_syntax = "latte"$/;"	v
b:current_syntax	runtime/syntax/ld.vim	/^let b:current_syntax = "ld"$/;"	v
b:current_syntax	runtime/syntax/ldapconf.vim	/^let b:current_syntax = "ldapconf"$/;"	v
b:current_syntax	runtime/syntax/ldif.vim	/^let b:current_syntax = "ldif"$/;"	v
b:current_syntax	runtime/syntax/lex.vim	/^let b:current_syntax = "lex"$/;"	v
b:current_syntax	runtime/syntax/lftp.vim	/^let b:current_syntax = "lftp"$/;"	v
b:current_syntax	runtime/syntax/lhaskell.vim	/^let b:current_syntax = "lhaskell"$/;"	v
b:current_syntax	runtime/syntax/libao.vim	/^let b:current_syntax = "libao"$/;"	v
b:current_syntax	runtime/syntax/lifelines.vim	/^let b:current_syntax = "lifelines"$/;"	v
b:current_syntax	runtime/syntax/lilo.vim	/^let b:current_syntax = "lilo"$/;"	v
b:current_syntax	runtime/syntax/limits.vim	/^let b:current_syntax = "limits"$/;"	v
b:current_syntax	runtime/syntax/liquid.vim	/^let b:current_syntax = 'liquid'$/;"	v
b:current_syntax	runtime/syntax/lisp.vim	/^let b:current_syntax = "lisp"$/;"	v
b:current_syntax	runtime/syntax/lite.vim	/^let b:current_syntax = "lite"$/;"	v
b:current_syntax	runtime/syntax/litestep.vim	/^let b:current_syntax = "litestep"$/;"	v
b:current_syntax	runtime/syntax/loginaccess.vim	/^let b:current_syntax = "loginaccess"$/;"	v
b:current_syntax	runtime/syntax/logindefs.vim	/^let b:current_syntax = "logindefs"$/;"	v
b:current_syntax	runtime/syntax/logtalk.vim	/^let b:current_syntax = "logtalk"$/;"	v
b:current_syntax	runtime/syntax/lotos.vim	/^let b:current_syntax = "lotos"$/;"	v
b:current_syntax	runtime/syntax/lout.vim	/^let b:current_syntax = "lout"$/;"	v
b:current_syntax	runtime/syntax/lpc.vim	/^let b:current_syntax = "lpc"$/;"	v
b:current_syntax	runtime/syntax/lprolog.vim	/^let b:current_syntax = "lprolog"$/;"	v
b:current_syntax	runtime/syntax/lscript.vim	/^let b:current_syntax = "lscript"$/;"	v
b:current_syntax	runtime/syntax/lsl.vim	/^let b:current_syntax = "lsl"$/;"	v
b:current_syntax	runtime/syntax/lss.vim	/^let b:current_syntax = "lss"$/;"	v
b:current_syntax	runtime/syntax/lua.vim	/^let b:current_syntax = "lua"$/;"	v
b:current_syntax	runtime/syntax/lynx.vim	/^let b:current_syntax = "lynx"$/;"	v
b:current_syntax	runtime/syntax/m4.vim	/^let b:current_syntax = "m4"$/;"	v
b:current_syntax	runtime/syntax/mail.vim	/^let b:current_syntax = "mail"$/;"	v
b:current_syntax	runtime/syntax/mailaliases.vim	/^let b:current_syntax = "mailaliases"$/;"	v
b:current_syntax	runtime/syntax/mailcap.vim	/^let b:current_syntax = "mailcap"$/;"	v
b:current_syntax	runtime/syntax/make.vim	/^let b:current_syntax = "make"$/;"	v
b:current_syntax	runtime/syntax/man.vim	/^let b:current_syntax = "man"$/;"	v
b:current_syntax	runtime/syntax/manconf.vim	/^let b:current_syntax = "manconf"$/;"	v
b:current_syntax	runtime/syntax/maple.vim	/^let b:current_syntax = "maple"$/;"	v
b:current_syntax	runtime/syntax/markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
b:current_syntax	runtime/syntax/masm.vim	/^let b:current_syntax = "masm"$/;"	v
b:current_syntax	runtime/syntax/mason.vim	/^let b:current_syntax = "mason"$/;"	v
b:current_syntax	runtime/syntax/master.vim	/^let b:current_syntax = "master"$/;"	v
b:current_syntax	runtime/syntax/matlab.vim	/^let b:current_syntax = "matlab"$/;"	v
b:current_syntax	runtime/syntax/maxima.vim	/^let b:current_syntax = "maxima"$/;"	v
b:current_syntax	runtime/syntax/mel.vim	/^let b:current_syntax = "mel"$/;"	v
b:current_syntax	runtime/syntax/messages.vim	/^let b:current_syntax = "messages"$/;"	v
b:current_syntax	runtime/syntax/mf.vim	/^let b:current_syntax = "mf"$/;"	v
b:current_syntax	runtime/syntax/mgl.vim	/^let b:current_syntax = "mgl"$/;"	v
b:current_syntax	runtime/syntax/mgp.vim	/^let b:current_syntax = "mgp"$/;"	v
b:current_syntax	runtime/syntax/mib.vim	/^let b:current_syntax = "mib"$/;"	v
b:current_syntax	runtime/syntax/mma.vim	/^let b:current_syntax = "mma"$/;"	v
b:current_syntax	runtime/syntax/mmix.vim	/^let b:current_syntax = "mmix"$/;"	v
b:current_syntax	runtime/syntax/mmp.vim	/^let b:current_syntax = "mmp"$/;"	v
b:current_syntax	runtime/syntax/modconf.vim	/^let b:current_syntax = "modconf"$/;"	v
b:current_syntax	runtime/syntax/model.vim	/^let b:current_syntax = "model"$/;"	v
b:current_syntax	runtime/syntax/modsim3.vim	/^let b:current_syntax = "modsim3"$/;"	v
b:current_syntax	runtime/syntax/modula2.vim	/^let b:current_syntax = "modula2"$/;"	v
b:current_syntax	runtime/syntax/modula3.vim	/^let b:current_syntax = "modula3"$/;"	v
b:current_syntax	runtime/syntax/monk.vim	/^let b:current_syntax = "monk"$/;"	v
b:current_syntax	runtime/syntax/moo.vim	/^let b:current_syntax = "moo"$/;"	v
b:current_syntax	runtime/syntax/mp.vim	/^let b:current_syntax = "mp"$/;"	v
b:current_syntax	runtime/syntax/mplayerconf.vim	/^let b:current_syntax = "mplayerconf"$/;"	v
b:current_syntax	runtime/syntax/mrxvtrc.vim	/^let b:current_syntax = "mrxvtrc"$/;"	v
b:current_syntax	runtime/syntax/msidl.vim	/^let b:current_syntax = "msidl"$/;"	v
b:current_syntax	runtime/syntax/msmessages.vim	/^let b:current_syntax = "msmessages"$/;"	v
b:current_syntax	runtime/syntax/msql.vim	/^let b:current_syntax = "msql"$/;"	v
b:current_syntax	runtime/syntax/mush.vim	/^let b:current_syntax = "mush"$/;"	v
b:current_syntax	runtime/syntax/muttrc.vim	/^let b:current_syntax = "muttrc"$/;"	v
b:current_syntax	runtime/syntax/mysql.vim	/^let b:current_syntax = "mysql"$/;"	v
b:current_syntax	runtime/syntax/named.vim	/^let b:current_syntax = "named"$/;"	v
b:current_syntax	runtime/syntax/nanorc.vim	/^let b:current_syntax = "nanorc"$/;"	v
b:current_syntax	runtime/syntax/nasm.vim	/^let b:current_syntax = "nasm"$/;"	v
b:current_syntax	runtime/syntax/nastran.vim	/^let b:current_syntax = "nastran"$/;"	v
b:current_syntax	runtime/syntax/natural.vim	/^let b:current_syntax = "natural"$/;"	v
b:current_syntax	runtime/syntax/ncf.vim	/^let b:current_syntax = "ncf"$/;"	v
b:current_syntax	runtime/syntax/netrc.vim	/^let b:current_syntax = "netrc"$/;"	v
b:current_syntax	runtime/syntax/netrw.vim	/^let   b:current_syntax = "netrwlist"$/;"	v
b:current_syntax	runtime/syntax/nqc.vim	/^let b:current_syntax = "nqc"$/;"	v
b:current_syntax	runtime/syntax/nroff.vim	/^let b:current_syntax = "nroff"$/;"	v
b:current_syntax	runtime/syntax/nsis.vim	/^let b:current_syntax = "nsis"$/;"	v
b:current_syntax	runtime/syntax/obj.vim	/^let b:current_syntax = "obj"$/;"	v
b:current_syntax	runtime/syntax/objc.vim	/^let b:current_syntax = "objc"$/;"	v
b:current_syntax	runtime/syntax/objcpp.vim	/^let b:current_syntax = "objcpp"$/;"	v
b:current_syntax	runtime/syntax/ocaml.vim	/^let b:current_syntax = "ocaml"$/;"	v
b:current_syntax	runtime/syntax/occam.vim	/^let b:current_syntax = "occam"$/;"	v
b:current_syntax	runtime/syntax/omnimark.vim	/^let b:current_syntax = "omnimark"$/;"	v
b:current_syntax	runtime/syntax/openroad.vim	/^let b:current_syntax = "openroad"$/;"	v
b:current_syntax	runtime/syntax/opl.vim	/^let b:current_syntax = "opl"$/;"	v
b:current_syntax	runtime/syntax/ora.vim	/^let b:current_syntax = "ora"$/;"	v
b:current_syntax	runtime/syntax/pamconf.vim	/^let b:current_syntax = "pamconf"$/;"	v
b:current_syntax	runtime/syntax/papp.vim	/^let b:current_syntax = "papp"$/;"	v
b:current_syntax	runtime/syntax/pascal.vim	/^let b:current_syntax = "pascal"$/;"	v
b:current_syntax	runtime/syntax/passwd.vim	/^let b:current_syntax = "passwd"$/;"	v
b:current_syntax	runtime/syntax/pcap.vim	/^let b:current_syntax = "pcap"$/;"	v
b:current_syntax	runtime/syntax/pccts.vim	/^let b:current_syntax = "pccts"$/;"	v
b:current_syntax	runtime/syntax/pdf.vim	/^let b:current_syntax = "pdf"$/;"	v
b:current_syntax	runtime/syntax/perl.vim	/^let b:current_syntax = "perl"$/;"	v
b:current_syntax	runtime/syntax/perl6.vim	/^let b:current_syntax = "perl6"$/;"	v
b:current_syntax	runtime/syntax/pf.vim	/^let b:current_syntax = "pf"$/;"	v
b:current_syntax	runtime/syntax/pfmain.vim	/^let b:current_syntax = "pfmain"$/;"	v
b:current_syntax	runtime/syntax/php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	runtime/syntax/pic.vim	/^let b:current_syntax = "pic"$/;"	v
b:current_syntax	runtime/syntax/pike.vim	/^let b:current_syntax = "pike"$/;"	v
b:current_syntax	runtime/syntax/pilrc.vim	/^let b:current_syntax = "pilrc"$/;"	v
b:current_syntax	runtime/syntax/pine.vim	/^let b:current_syntax = "pine"$/;"	v
b:current_syntax	runtime/syntax/pinfo.vim	/^let b:current_syntax = "pinfo"$/;"	v
b:current_syntax	runtime/syntax/plaintex.vim	/^let b:current_syntax = "plaintex"$/;"	v
b:current_syntax	runtime/syntax/plm.vim	/^let b:current_syntax = "plm"$/;"	v
b:current_syntax	runtime/syntax/plp.vim	/^let b:current_syntax = "plp"$/;"	v
b:current_syntax	runtime/syntax/plsql.vim	/^let b:current_syntax = "plsql"$/;"	v
b:current_syntax	runtime/syntax/po.vim	/^let b:current_syntax = "po"$/;"	v
b:current_syntax	runtime/syntax/pod.vim	/^let b:current_syntax = "pod"$/;"	v
b:current_syntax	runtime/syntax/postscr.vim	/^let b:current_syntax = "postscr"$/;"	v
b:current_syntax	runtime/syntax/pov.vim	/^let b:current_syntax = "pov"$/;"	v
b:current_syntax	runtime/syntax/povini.vim	/^let b:current_syntax = "povini"$/;"	v
b:current_syntax	runtime/syntax/ppd.vim	/^let b:current_syntax = "ppd"$/;"	v
b:current_syntax	runtime/syntax/ppwiz.vim	/^let b:current_syntax = "ppwiz"$/;"	v
b:current_syntax	runtime/syntax/prescribe.vim	/^let b:current_syntax = "prescribe"$/;"	v
b:current_syntax	runtime/syntax/privoxy.vim	/^let b:current_syntax = "privoxy"$/;"	v
b:current_syntax	runtime/syntax/procmail.vim	/^let b:current_syntax = "procmail"$/;"	v
b:current_syntax	runtime/syntax/progress.vim	/^let b:current_syntax = "progress"$/;"	v
b:current_syntax	runtime/syntax/prolog.vim	/^let b:current_syntax = "prolog"$/;"	v
b:current_syntax	runtime/syntax/promela.vim	/^let b:current_syntax = "promela"$/;"	v
b:current_syntax	runtime/syntax/protocols.vim	/^let b:current_syntax = "protocols"$/;"	v
b:current_syntax	runtime/syntax/psf.vim	/^let b:current_syntax = "psf"$/;"	v
b:current_syntax	runtime/syntax/ptcap.vim	/^let b:current_syntax = "ptcap"$/;"	v
b:current_syntax	runtime/syntax/purifylog.vim	/^let b:current_syntax = "purifylog"$/;"	v
b:current_syntax	runtime/syntax/pyrex.vim	/^let b:current_syntax = "pyrex"$/;"	v
b:current_syntax	runtime/syntax/python.vim	/^let b:current_syntax = "python"$/;"	v
b:current_syntax	runtime/syntax/qf.vim	/^let b:current_syntax = "qf"$/;"	v
b:current_syntax	runtime/syntax/quake.vim	/^let b:current_syntax = "quake"$/;"	v
b:current_syntax	runtime/syntax/r.vim	/^let b:current_syntax="r"$/;"	v
b:current_syntax	runtime/syntax/racc.vim	/^let b:current_syntax = "racc"$/;"	v
b:current_syntax	runtime/syntax/radiance.vim	/^let b:current_syntax = "radiance"$/;"	v
b:current_syntax	runtime/syntax/ratpoison.vim	/^let b:current_syntax = "ratpoison"$/;"	v
b:current_syntax	runtime/syntax/rc.vim	/^let b:current_syntax = "rc"$/;"	v
b:current_syntax	runtime/syntax/rcs.vim	/^let b:current_syntax = "rcs"$/;"	v
b:current_syntax	runtime/syntax/rcslog.vim	/^let b:current_syntax = "rcslog"$/;"	v
b:current_syntax	runtime/syntax/readline.vim	/^let b:current_syntax = "readline"$/;"	v
b:current_syntax	runtime/syntax/rebol.vim	/^let b:current_syntax = "rebol"$/;"	v
b:current_syntax	runtime/syntax/registry.vim	/^let b:current_syntax = "registry"$/;"	v
b:current_syntax	runtime/syntax/remind.vim	/^let b:current_syntax = "remind"$/;"	v
b:current_syntax	runtime/syntax/resolv.vim	/^let b:current_syntax = "resolv"$/;"	v
b:current_syntax	runtime/syntax/reva.vim	/^let b:current_syntax = "reva"$/;"	v
b:current_syntax	runtime/syntax/rexx.vim	/^let b:current_syntax = "rexx"$/;"	v
b:current_syntax	runtime/syntax/rhelp.vim	/^let   b:current_syntax = "rhelp"$/;"	v
b:current_syntax	runtime/syntax/rib.vim	/^let b:current_syntax = "rib"$/;"	v
b:current_syntax	runtime/syntax/rnc.vim	/^let b:current_syntax = "rnc"$/;"	v
b:current_syntax	runtime/syntax/rnoweb.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	runtime/syntax/robots.vim	/^let b:current_syntax = "robots"$/;"	v
b:current_syntax	runtime/syntax/rpcgen.vim	/^let b:current_syntax = "rpcgen"$/;"	v
b:current_syntax	runtime/syntax/rpl.vim	/^let b:current_syntax = "rpl"$/;"	v
b:current_syntax	runtime/syntax/rst.vim	/^let b:current_syntax = "rst"$/;"	v
b:current_syntax	runtime/syntax/rtf.vim	/^let b:current_syntax = "rtf"$/;"	v
b:current_syntax	runtime/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	runtime/syntax/samba.vim	/^let b:current_syntax = "samba"$/;"	v
b:current_syntax	runtime/syntax/sas.vim	/^let b:current_syntax = "sas"$/;"	v
b:current_syntax	runtime/syntax/sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	runtime/syntax/sather.vim	/^let b:current_syntax = "sather"$/;"	v
b:current_syntax	runtime/syntax/scheme.vim	/^let b:current_syntax = "scheme"$/;"	v
b:current_syntax	runtime/syntax/scilab.vim	/^let b:current_syntax = "scilab"$/;"	v
b:current_syntax	runtime/syntax/screen.vim	/^let b:current_syntax = "screen"$/;"	v
b:current_syntax	runtime/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	runtime/syntax/sd.vim	/^let b:current_syntax = "sd"$/;"	v
b:current_syntax	runtime/syntax/sdc.vim	/^let b:current_syntax = "sdc"$/;"	v
b:current_syntax	runtime/syntax/sdl.vim	/^let b:current_syntax = "sdl"$/;"	v
b:current_syntax	runtime/syntax/sed.vim	/^let b:current_syntax = "sed"$/;"	v
b:current_syntax	runtime/syntax/sensors.vim	/^let b:current_syntax = "sensors"$/;"	v
b:current_syntax	runtime/syntax/services.vim	/^let b:current_syntax = "services"$/;"	v
b:current_syntax	runtime/syntax/setserial.vim	/^let b:current_syntax = "setserial"$/;"	v
b:current_syntax	runtime/syntax/sgml.vim	/^let b:current_syntax = "sgml"$/;"	v
b:current_syntax	runtime/syntax/sgmldecl.vim	/^let b:current_syntax = "sgmldecl"$/;"	v
b:current_syntax	runtime/syntax/sgmllnx.vim	/^let b:current_syntax = "sgmllnx"$/;"	v
b:current_syntax	runtime/syntax/sh.vim	/^ let b:current_syntax = "bash"$/;"	v
b:current_syntax	runtime/syntax/sh.vim	/^ let b:current_syntax = "ksh"$/;"	v
b:current_syntax	runtime/syntax/sh.vim	/^ let b:current_syntax = "sh"$/;"	v
b:current_syntax	runtime/syntax/sicad.vim	/^let b:current_syntax = "sicad"$/;"	v
b:current_syntax	runtime/syntax/sieve.vim	/^let b:current_syntax = "sieve"$/;"	v
b:current_syntax	runtime/syntax/simula.vim	/^let b:current_syntax = "simula"$/;"	v
b:current_syntax	runtime/syntax/sinda.vim	/^let b:current_syntax = "sinda"$/;"	v
b:current_syntax	runtime/syntax/sindacmp.vim	/^let b:current_syntax = "sindacmp"$/;"	v
b:current_syntax	runtime/syntax/sindaout.vim	/^let b:current_syntax = "sindaout"$/;"	v
b:current_syntax	runtime/syntax/sisu.vim	/^let b:current_syntax = "sisu"$/;"	v
b:current_syntax	runtime/syntax/skill.vim	/^let b:current_syntax = "skill"$/;"	v
b:current_syntax	runtime/syntax/sl.vim	/^let b:current_syntax = "sl"$/;"	v
b:current_syntax	runtime/syntax/slang.vim	/^let b:current_syntax = "slang"$/;"	v
b:current_syntax	runtime/syntax/slice.vim	/^let b:current_syntax = "slice"$/;"	v
b:current_syntax	runtime/syntax/slpconf.vim	/^let b:current_syntax = "slpconf"$/;"	v
b:current_syntax	runtime/syntax/slpreg.vim	/^let b:current_syntax = "slpreg"$/;"	v
b:current_syntax	runtime/syntax/slpspi.vim	/^let b:current_syntax = "slpspi"$/;"	v
b:current_syntax	runtime/syntax/slrnrc.vim	/^let b:current_syntax = "slrnrc"$/;"	v
b:current_syntax	runtime/syntax/slrnsc.vim	/^let b:current_syntax = "slrnsc"$/;"	v
b:current_syntax	runtime/syntax/sm.vim	/^let b:current_syntax = "sm"$/;"	v
b:current_syntax	runtime/syntax/smarty.vim	/^let b:current_syntax = "smarty"$/;"	v
b:current_syntax	runtime/syntax/smcl.vim	/^let b:current_syntax = "smcl"$/;"	v
b:current_syntax	runtime/syntax/smil.vim	/^let b:current_syntax = "smil"$/;"	v
b:current_syntax	runtime/syntax/smith.vim	/^let b:current_syntax = "smith"$/;"	v
b:current_syntax	runtime/syntax/sml.vim	/^let b:current_syntax = "sml"$/;"	v
b:current_syntax	runtime/syntax/snnsnet.vim	/^let b:current_syntax = "snnsnet"$/;"	v
b:current_syntax	runtime/syntax/snnspat.vim	/^let b:current_syntax = "snnspat"$/;"	v
b:current_syntax	runtime/syntax/snnsres.vim	/^let b:current_syntax = "snnsres"$/;"	v
b:current_syntax	runtime/syntax/snobol4.vim	/^let b:current_syntax = "snobol4"$/;"	v
b:current_syntax	runtime/syntax/spec.vim	/^let b:current_syntax = "spec"$/;"	v
b:current_syntax	runtime/syntax/specman.vim	/^let b:current_syntax = "specman"$/;"	v
b:current_syntax	runtime/syntax/spice.vim	/^let b:current_syntax = "spice"$/;"	v
b:current_syntax	runtime/syntax/splint.vim	/^let b:current_syntax = "splint"$/;"	v
b:current_syntax	runtime/syntax/spup.vim	/^let b:current_syntax = "spup"$/;"	v
b:current_syntax	runtime/syntax/spyce.vim	/^let b:current_syntax = "spyce"$/;"	v
b:current_syntax	runtime/syntax/sqlanywhere.vim	/^let b:current_syntax = "sqlanywhere"$/;"	v
b:current_syntax	runtime/syntax/sqlforms.vim	/^let b:current_syntax = "sqlforms"$/;"	v
b:current_syntax	runtime/syntax/sqlinformix.vim	/^let b:current_syntax = "sqlinformix"$/;"	v
b:current_syntax	runtime/syntax/sqlj.vim	/^let b:current_syntax = "sqlj"$/;"	v
b:current_syntax	runtime/syntax/sqloracle.vim	/^let b:current_syntax = "sql"$/;"	v
b:current_syntax	runtime/syntax/sqr.vim	/^let b:current_syntax = "sqr"$/;"	v
b:current_syntax	runtime/syntax/squid.vim	/^let b:current_syntax = "squid"$/;"	v
b:current_syntax	runtime/syntax/sshconfig.vim	/^let b:current_syntax = "sshconfig"$/;"	v
b:current_syntax	runtime/syntax/sshdconfig.vim	/^let b:current_syntax = "sshdconfig"$/;"	v
b:current_syntax	runtime/syntax/st.vim	/^let b:current_syntax = "st"$/;"	v
b:current_syntax	runtime/syntax/stata.vim	/^let b:current_syntax = "stata"$/;"	v
b:current_syntax	runtime/syntax/stp.vim	/^let b:current_syntax = "stp"$/;"	v
b:current_syntax	runtime/syntax/strace.vim	/^let b:current_syntax = "strace"$/;"	v
b:current_syntax	runtime/syntax/sudoers.vim	/^let b:current_syntax = "sudoers"$/;"	v
b:current_syntax	runtime/syntax/svg.vim	/^let b:current_syntax = "svg"$/;"	v
b:current_syntax	runtime/syntax/svn.vim	/^let b:current_syntax = "svn"$/;"	v
b:current_syntax	runtime/syntax/sysctl.vim	/^let b:current_syntax = "sysctl"$/;"	v
b:current_syntax	runtime/syntax/tads.vim	/^let b:current_syntax = "tads"$/;"	v
b:current_syntax	runtime/syntax/tags.vim	/^let b:current_syntax = "tags"$/;"	v
b:current_syntax	runtime/syntax/tak.vim	/^let b:current_syntax = "tak"$/;"	v
b:current_syntax	runtime/syntax/takcmp.vim	/^let b:current_syntax = "takcmp"$/;"	v
b:current_syntax	runtime/syntax/takout.vim	/^let b:current_syntax = "takout"$/;"	v
b:current_syntax	runtime/syntax/taskdata.vim	/^let b:current_syntax = "taskdata"$/;"	v
b:current_syntax	runtime/syntax/taskedit.vim	/^let b:current_syntax = "taskedit"$/;"	v
b:current_syntax	runtime/syntax/tcl.vim	/^let b:current_syntax = "tcl"$/;"	v
b:current_syntax	runtime/syntax/tcsh.vim	/^let b:current_syntax = 'tcsh'$/;"	v
b:current_syntax	runtime/syntax/terminfo.vim	/^let b:current_syntax = "terminfo"$/;"	v
b:current_syntax	runtime/syntax/tex.vim	/^let   b:current_syntax = "tex"$/;"	v
b:current_syntax	runtime/syntax/texinfo.vim	/^let b:current_syntax = "texinfo"$/;"	v
b:current_syntax	runtime/syntax/texmf.vim	/^let b:current_syntax = "texmf"$/;"	v
b:current_syntax	runtime/syntax/tf.vim	/^let b:current_syntax = "tf"$/;"	v
b:current_syntax	runtime/syntax/tidy.vim	/^let b:current_syntax = "tidy"$/;"	v
b:current_syntax	runtime/syntax/tilde.vim	/^let b:current_syntax = "tilde"$/;"	v
b:current_syntax	runtime/syntax/tli.vim	/^let b:current_syntax = "tli"$/;"	v
b:current_syntax	runtime/syntax/tpp.vim	/^let b:current_syntax = "tpp"$/;"	v
b:current_syntax	runtime/syntax/trasys.vim	/^let b:current_syntax = "trasys"$/;"	v
b:current_syntax	runtime/syntax/tsalt.vim	/^let b:current_syntax = "tsalt"$/;"	v
b:current_syntax	runtime/syntax/tsscl.vim	/^let b:current_syntax = "tsscl"$/;"	v
b:current_syntax	runtime/syntax/tssgm.vim	/^let b:current_syntax = "tssgm"$/;"	v
b:current_syntax	runtime/syntax/tssop.vim	/^let b:current_syntax = "tssop"$/;"	v
b:current_syntax	runtime/syntax/uc.vim	/^let b:current_syntax = "uc"$/;"	v
b:current_syntax	runtime/syntax/udevconf.vim	/^let b:current_syntax = "udevconf"$/;"	v
b:current_syntax	runtime/syntax/udevperm.vim	/^let b:current_syntax = "udevperm"$/;"	v
b:current_syntax	runtime/syntax/udevrules.vim	/^let b:current_syntax = "udevrules"$/;"	v
b:current_syntax	runtime/syntax/uil.vim	/^let b:current_syntax = "uil"$/;"	v
b:current_syntax	runtime/syntax/updatedb.vim	/^let b:current_syntax = "updatedb"$/;"	v
b:current_syntax	runtime/syntax/valgrind.vim	/^let b:current_syntax = "valgrind"$/;"	v
b:current_syntax	runtime/syntax/vb.vim	/^let b:current_syntax = "vb"$/;"	v
b:current_syntax	runtime/syntax/vera.vim	/^let b:current_syntax = "vera"$/;"	v
b:current_syntax	runtime/syntax/verilog.vim	/^let b:current_syntax = "verilog"$/;"	v
b:current_syntax	runtime/syntax/verilogams.vim	/^let b:current_syntax = "verilogams"$/;"	v
b:current_syntax	runtime/syntax/vgrindefs.vim	/^let b:current_syntax = "vgrindefs"$/;"	v
b:current_syntax	runtime/syntax/vhdl.vim	/^let b:current_syntax = "vhdl"$/;"	v
b:current_syntax	runtime/syntax/vim.vim	/^let b:current_syntax = "vim"$/;"	v
b:current_syntax	runtime/syntax/viminfo.vim	/^let b:current_syntax = "viminfo"$/;"	v
b:current_syntax	runtime/syntax/virata.vim	/^let b:current_syntax = "virata"$/;"	v
b:current_syntax	runtime/syntax/vmasm.vim	/^let b:current_syntax = "vmasm"$/;"	v
b:current_syntax	runtime/syntax/voscm.vim	/^let b:current_syntax = "voscm"$/;"	v
b:current_syntax	runtime/syntax/vrml.vim	/^let b:current_syntax = "vrml"$/;"	v
b:current_syntax	runtime/syntax/vsejcl.vim	/^let b:current_syntax = "vsejcl"$/;"	v
b:current_syntax	runtime/syntax/wdiff.vim	/^let b:current_syntax = "wdiff"$/;"	v
b:current_syntax	runtime/syntax/web.vim	/^let b:current_syntax = "web"$/;"	v
b:current_syntax	runtime/syntax/webmacro.vim	/^let b:current_syntax = "webmacro"$/;"	v
b:current_syntax	runtime/syntax/wget.vim	/^let b:current_syntax = "wget"$/;"	v
b:current_syntax	runtime/syntax/winbatch.vim	/^let b:current_syntax = "winbatch"$/;"	v
b:current_syntax	runtime/syntax/wml.vim	/^let b:current_syntax = "wml"$/;"	v
b:current_syntax	runtime/syntax/wsh.vim	/^let b:current_syntax = "wsh"$/;"	v
b:current_syntax	runtime/syntax/wsml.vim	/^let b:current_syntax = "wsml"$/;"	v
b:current_syntax	runtime/syntax/wvdial.vim	/^let b:current_syntax = "wvdial"$/;"	v
b:current_syntax	runtime/syntax/xbl.vim	/^let b:current_syntax = "xbl"$/;"	v
b:current_syntax	runtime/syntax/xdefaults.vim	/^let b:current_syntax = "xdefaults"$/;"	v
b:current_syntax	runtime/syntax/xf86conf.vim	/^let b:current_syntax = "xf86conf"$/;"	v
b:current_syntax	runtime/syntax/xhtml.vim	/^let b:current_syntax = "xhtml"$/;"	v
b:current_syntax	runtime/syntax/xinetd.vim	/^let b:current_syntax = "xinetd"$/;"	v
b:current_syntax	runtime/syntax/xkb.vim	/^let b:current_syntax = "xkb"$/;"	v
b:current_syntax	runtime/syntax/xmath.vim	/^let b:current_syntax = "xmath"$/;"	v
b:current_syntax	runtime/syntax/xml.vim	/^let b:current_syntax = "xml"$/;"	v
b:current_syntax	runtime/syntax/xmodmap.vim	/^let b:current_syntax = "xmodmap"$/;"	v
b:current_syntax	runtime/syntax/xpm.vim	/^let b:current_syntax = "xpm"$/;"	v
b:current_syntax	runtime/syntax/xpm2.vim	/^let b:current_syntax = "xpm2"$/;"	v
b:current_syntax	runtime/syntax/xs.vim	/^let b:current_syntax = "xs"$/;"	v
b:current_syntax	runtime/syntax/xxd.vim	/^let b:current_syntax = "xxd"$/;"	v
b:current_syntax	runtime/syntax/yacc.vim	/^let b:current_syntax = "yacc"$/;"	v
b:current_syntax	runtime/syntax/yaml.vim	/^let b:current_syntax = "yaml"$/;"	v
b:current_syntax	runtime/syntax/z8a.vim	/^let b:current_syntax = "z8a"$/;"	v
b:current_syntax	runtime/syntax/zsh.vim	/^let b:current_syntax = "zsh"$/;"	v
b:curret_syntax	runtime/syntax/tasm.vim	/^let b:curret_syntax = "tasm"$/;"	v
b:did_ftplugin	runtime/ftplugin/a2ps.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/aap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/abaqus.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/ada.vim	/^let b:did_ftplugin = 45$/;"	v
b:did_ftplugin	runtime/ftplugin/alsaconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/ant.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/arch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/aspvbs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/bdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/bst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/c.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/calendar.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/cdrdaoconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/changelog.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/cobol.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/config.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/context.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/crm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/cs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/csc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/csh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/css.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/cvsrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/debchangelog.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	runtime/ftplugin/debcontrol.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	runtime/ftplugin/denyhosts.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/dictconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/dictdconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/diff.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/dircolors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/dosbatch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/dosini.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/dtd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/dtrace.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/elinks.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/eterm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/fetchmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/flexwiki.vim	/^let b:did_ftplugin = 1  " Don't load another plugin for this buffer$/;"	v
b:did_ftplugin	runtime/ftplugin/fortran.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/framescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/fvwm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/git.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/gitcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/gitconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/gitrebase.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/gpg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/group.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/grub.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/hamster.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/haskell.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/help.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/hostconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/hostsaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/html.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/indent.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/initex.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/ishd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/java.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/javascript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/jsp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/kconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/ld.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/lftp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/libao.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/limits.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/liquid.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/lisp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/logcheck.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/loginaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/logindefs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/logtalk.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/lprolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/lua.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/m4.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/mail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/mailaliases.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/mailcap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/make.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/man.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/manconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/matlab.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/mf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/modconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/mp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/mplayerconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/mrxvtrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/msmessages.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/muttrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/nanorc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/netrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/nsis.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/ocaml.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	runtime/ftplugin/occam.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/pamconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/pascal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/passwd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/pdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/perl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/perl6.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/php.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/pinfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/postscr.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/procmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/prolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/protocols.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/python.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/qf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/quake.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/racc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/readline.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/reva.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/rnc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/rpl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/rst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/screen.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/sensors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/services.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/setserial.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/sgml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/sh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/sieve.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/slpconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/slpreg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/slpspi.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/spec.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/sql.vim	/^let b:did_ftplugin     = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/sshconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/sudoers.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/svg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/sysctl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/tcl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/tcsh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/terminfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/udevconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/udevperm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/udevrules.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/updatedb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/vb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/verilog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/vhdl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/vim.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/xdefaults.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/xf86conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/xhtml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/xinetd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/xml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/xmodmap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/xsd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/xslt.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/yaml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	runtime/ftplugin/zsh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	runtime/indent/ada.vim	/^let b:did_indent = 45$/;"	v
b:did_indent	runtime/indent/awk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/bib.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/bst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/c.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/cdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/ch.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/chaiscript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/changelog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/cmake.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/cobol.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/cpp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/cs.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/css.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/cuda.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/d.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/dictconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/dictdconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/dtrace.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/dylan.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/eiffel.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/erlang.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/eterm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/fortran.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/framescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/gitconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/hamster.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/idlang.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/ishd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/java.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/ld.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/lifelines.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/liquid.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/lisp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/logtalk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/lua.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/mail.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/make.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/matlab.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/mma.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/mp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/objc.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/ocaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/occam.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/pascal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/perl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/perl6.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/php.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/postscr.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/pov.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/prolog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/python.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/readline.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/rpl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/rst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/sdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/sh.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/sml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/sqlanywhere.vim	/^let b:did_indent     = 1$/;"	v
b:did_indent	runtime/indent/tcl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/tcsh.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/tf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/tilde.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/vb.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/verilog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/vhdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/vim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/xf86conf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/xinetd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/xml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/indent/yacc.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	runtime/syntax/spyce.vim	/^let b:did_indent = 1	     " don't perform HTML indentation!$/;"	v
b:docbk_type	runtime/syntax/docbk.vim	/^    let b:docbk_type = 'sgml'$/;"	v
b:docbk_type	runtime/syntax/docbk.vim	/^    let b:docbk_type = 'xml'$/;"	v
b:docbk_type	runtime/syntax/docbksgml.vim	/^let b:docbk_type="sgml"$/;"	v
b:docbk_type	runtime/syntax/docbkxml.vim	/^let b:docbk_type="xml"$/;"	v
b:doxygen_syntax_save	runtime/syntax/doxygen.vim	/^    let b:doxygen_syntax_save=b:current_syntax$/;"	v
b:enforce_freedesktop_standard	runtime/syntax/desktop.vim	/^	let b:enforce_freedesktop_standard = 0$/;"	v
b:enforce_freedesktop_standard	runtime/syntax/desktop.vim	/^	let b:enforce_freedesktop_standard = 1$/;"	v
b:eruby_nest_level	runtime/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	runtime/syntax/eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_subtype	runtime/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	runtime/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	runtime/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	runtime/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	runtime/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	runtime/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	runtime/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	runtime/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	runtime/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	runtime/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	runtime/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	runtime/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	runtime/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	runtime/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	runtime/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	runtime/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	runtime/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	runtime/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	runtime/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:eterm_minlines	runtime/syntax/eterm.vim	/^  let b:eterm_minlines = 50$/;"	v
b:eterm_minlines	runtime/syntax/eterm.vim	/^  let b:eterm_minlines = eterm_minlines$/;"	v
b:extfname	runtime/syntax/tex.vim	/^let b:extfname=expand("%:e")$/;"	v
b:fortran_dialect	runtime/syntax/fortran.vim	/^    let b:fortran_dialect = "F"$/;"	v
b:fortran_dialect	runtime/syntax/fortran.vim	/^    let b:fortran_dialect = "elf"$/;"	v
b:fortran_dialect	runtime/syntax/fortran.vim	/^    let b:fortran_dialect = "f77"$/;"	v
b:fortran_dialect	runtime/syntax/fortran.vim	/^    let b:fortran_dialect = "f90"$/;"	v
b:fortran_dialect	runtime/syntax/fortran.vim	/^    let b:fortran_dialect = "f95"$/;"	v
b:fortran_dialect	runtime/syntax/fortran.vim	/^    let b:fortran_dialect = "unknown"$/;"	v
b:fortran_dialect	runtime/syntax/fortran.vim	/^    let b:fortran_dialect = matchstr(fortran_dialect,'\\<\\(f\\(9[05]\\|77\\)\\|elf\\|F\\)\\>')$/;"	v
b:fortran_dialect	runtime/syntax/fortran.vim	/^  let b:fortran_dialect = "unknown"$/;"	v
b:fortran_fixed_source	runtime/ftplugin/fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	runtime/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	runtime/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	runtime/indent/fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	runtime/indent/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	runtime/indent/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	runtime/syntax/fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	runtime/syntax/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	runtime/syntax/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_retype	runtime/syntax/fortran.vim	/^  let b:fortran_retype = getline(1)." ".getline(2)." ".getline(3)$/;"	v
b:framescript_minlines	runtime/syntax/framescript.vim	/^let b:framescript_minlines = exists("framescript_minlines")$/;"	v
b:git_dir	runtime/ftplugin/git.vim	/^    let b:git_dir = $GIT_DIR$/;"	v
b:git_dir	runtime/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git\\>')$/;"	v
b:git_dir	runtime/ftplugin/git.vim	/^    let b:git_dir = substitute(b:git_dir,'\\\\','\/','g')$/;"	v
b:git_dir	runtime/ftplugin/gitcommit.vim	/^  let b:git_dir = expand("%:p:h")$/;"	v
b:hs_chs	runtime/syntax/chaskell.vim	/^let b:hs_chs=1$/;"	v
b:html_omni_flavor	runtime/ftplugin/html.vim	/^                let b:html_omni_flavor .= 'f'$/;"	v
b:html_omni_flavor	runtime/ftplugin/html.vim	/^                let b:html_omni_flavor .= 's'$/;"	v
b:html_omni_flavor	runtime/ftplugin/html.vim	/^                let b:html_omni_flavor .= 't'$/;"	v
b:html_omni_flavor	runtime/ftplugin/html.vim	/^                let b:html_omni_flavor = 'html40'$/;"	v
b:html_omni_flavor	runtime/ftplugin/html.vim	/^                let b:html_omni_flavor = 'html401'$/;"	v
b:html_omni_flavor	runtime/ftplugin/html.vim	/^                let b:html_omni_flavor = 'xhtml10'$/;"	v
b:html_omni_flavor	runtime/ftplugin/html.vim	/^            let b:html_omni_flavor = 'html32'$/;"	v
b:html_omni_flavor	runtime/ftplugin/html.vim	/^            let b:html_omni_flavor = 'html401t'$/;"	v
b:html_omni_flavor	runtime/ftplugin/html.vim	/^            let b:html_omni_flavor = 'xhtml10s'$/;"	v
b:html_omni_flavor	runtime/ftplugin/html.vim	/^            let b:html_omni_flavor = 'xhtml11'$/;"	v
b:i	runtime/syntax/hitest.vim	/^   let b:i = b:i + 1$/;"	v
b:i	runtime/syntax/hitest.vim	/^let b:i = 1$/;"	v
b:indent_use_syntax	runtime/indent/perl.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:indent_use_syntax	runtime/indent/perl6.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:is_bash	runtime/syntax/sh.vim	/^    let b:is_bash= 1$/;"	v
b:is_kornshell	runtime/syntax/sh.vim	/^    let b:is_kornshell= 1$/;"	v
b:is_sh	runtime/syntax/sh.vim	/^    let b:is_sh= 1$/;"	v
b:keymap	runtime/keymap/magyar_utf-8.vim	/^let b:keymap = "magyar"$/;"	v
b:keymap_name	runtime/keymap/accents.vim	/^let b:keymap_name = "acc"$/;"	v
b:keymap_name	runtime/keymap/arabic_utf-8.vim	/^let b:keymap_name = "arab"$/;"	v
b:keymap_name	runtime/keymap/bulgarian-bds.vim	/^let b:keymap_name = "bds"$/;"	v
b:keymap_name	runtime/keymap/bulgarian-phonetic.vim	/^let b:keymap_name = "pho"$/;"	v
b:keymap_name	runtime/keymap/canfr-win.vim	/^let b:keymap_name = "canfr"$/;"	v
b:keymap_name	runtime/keymap/croatian_cp1250.vim	/^let b:keymap_name = "croatian-cp1250"$/;"	v
b:keymap_name	runtime/keymap/croatian_iso-8859-2.vim	/^let b:keymap_name = "croatian-iso-8859-2"$/;"	v
b:keymap_name	runtime/keymap/croatian_utf-8.vim	/^let b:keymap_name = "croatian-UTF-8"$/;"	v
b:keymap_name	runtime/keymap/czech_utf-8.vim	/^let b:keymap_name = "czech"$/;"	v
b:keymap_name	runtime/keymap/dvorak.vim	/^let b:keymap_name = "en-dv"$/;"	v
b:keymap_name	runtime/keymap/esperanto_utf-8.vim	/^let b:keymap_name = "Eo"$/;"	v
b:keymap_name	runtime/keymap/greek_cp1253.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	runtime/keymap/greek_cp737.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	runtime/keymap/greek_iso-8859-7.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	runtime/keymap/greek_utf-8.vim	/^let b:keymap_name = "grk"$/;"	v
b:keymap_name	runtime/keymap/hebrew_cp1255.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	runtime/keymap/hebrew_iso-8859-8.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	runtime/keymap/hebrew_utf-8.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	runtime/keymap/hebrewp_cp1255.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	runtime/keymap/hebrewp_iso-8859-8.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	runtime/keymap/hebrewp_utf-8.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	runtime/keymap/kana.vim	/^let b:keymap_name = "kana"$/;"	v
b:keymap_name	runtime/keymap/lithuanian-baltic.vim	/^let b:keymap_name = "lt"$/;"	v
b:keymap_name	runtime/keymap/mongolian_utf-8.vim	/^let b:keymap_name = "mn"$/;"	v
b:keymap_name	runtime/keymap/persian-iranian_utf-8.vim	/^let b:keymap_name = "per"$/;"	v
b:keymap_name	runtime/keymap/pinyin.vim	/^let b:keymap_name = "py"$/;"	v
b:keymap_name	runtime/keymap/polish-slash_cp1250.vim	/^let b:keymap_name = "PL-slash-WIN"$/;"	v
b:keymap_name	runtime/keymap/polish-slash_cp852.vim	/^let b:keymap_name = "PL-slash-DOS"$/;"	v
b:keymap_name	runtime/keymap/polish-slash_iso-8859-2.vim	/^let b:keymap_name = "PL-slash-ISO"$/;"	v
b:keymap_name	runtime/keymap/polish-slash_utf-8.vim	/^let b:keymap_name = "PL-slash-UTF"$/;"	v
b:keymap_name	runtime/keymap/russian-dvorak.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	runtime/keymap/russian-jcuken.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	runtime/keymap/russian-jcukenwin.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	runtime/keymap/russian-yawerty.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	runtime/keymap/serbian-latin_utf-8.vim	/^let b:keymap_name = "serbian-UTF-8"$/;"	v
b:keymap_name	runtime/keymap/serbian_cp1250.vim	/^let b:keymap_name = "serbian-cp1250"$/;"	v
b:keymap_name	runtime/keymap/serbian_cp1251.vim	/^let b:keymap_name = "serbian-cp1251"$/;"	v
b:keymap_name	runtime/keymap/serbian_iso-8859-2.vim	/^let b:keymap_name = "serbian-iso-8859-2"$/;"	v
b:keymap_name	runtime/keymap/serbian_iso-8859-5.vim	/^let b:keymap_name = "serbian-iso-8859-5"$/;"	v
b:keymap_name	runtime/keymap/serbian_utf-8.vim	/^let b:keymap_name = "serbian-UTF-8"$/;"	v
b:keymap_name	runtime/keymap/sinhala-phonetic_utf-8.vim	/^let b:keymap_name = "sinhala"$/;"	v
b:keymap_name	runtime/keymap/slovak_cp1250.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	runtime/keymap/slovak_iso-8859-2.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	runtime/keymap/slovak_utf-8.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	runtime/keymap/tamil_tscii.vim	/^let b:keymap_name = "tamil_tscii"$/;"	v
b:keymap_name	runtime/keymap/thaana-phonetic_utf-8.vim	/^let b:keymap_name= "thaana"$/;"	v
b:keymap_name	runtime/keymap/ukrainian-dvorak.vim	/^let b:keymap_name = "uk"$/;"	v
b:keymap_name	runtime/keymap/ukrainian-jcuken.vim	/^let b:keymap_name = "uk"$/;"	v
b:keymap_name	runtime/keymap/vietnamese-viqr_utf-8.vim	/^let b:keymap_name = "vietnamese"$/;"	v
b:lhs_markup	runtime/syntax/lhaskell.vim	/^	    let b:lhs_markup = "unknown"$/;"	v
b:lhs_markup	runtime/syntax/lhaskell.vim	/^	    let b:lhs_markup = matchstr(lhs_markup,'\\<\\%(tex\\|none\\)\\>')$/;"	v
b:lhs_markup	runtime/syntax/lhaskell.vim	/^	let b:lhs_markup = "plain"$/;"	v
b:lhs_markup	runtime/syntax/lhaskell.vim	/^	let b:lhs_markup = "tex"$/;"	v
b:lhs_markup	runtime/syntax/lhaskell.vim	/^	let b:lhs_markup = "unknown"$/;"	v
b:liquid_subtype	runtime/ftplugin/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	runtime/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	runtime/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	runtime/ftplugin/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype	runtime/syntax/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	runtime/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	runtime/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	runtime/syntax/liquid.vim	/^    let b:liquid_subtype = s:subtype$/;"	v
b:liquid_subtype	runtime/syntax/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype_indentexpr	runtime/indent/liquid.vim	/^let b:liquid_subtype_indentexpr = &l:indentexpr$/;"	v
b:main_syntax	runtime/syntax/groff.vim	/^let b:main_syntax = "nroff"$/;"	v
b:match_ignorecase	runtime/ftplugin/abaqus.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	runtime/ftplugin/aspvbs.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	runtime/ftplugin/cobol.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	runtime/ftplugin/context.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	runtime/ftplugin/fortran.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	runtime/ftplugin/hamster.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	runtime/ftplugin/html.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	runtime/ftplugin/ishd.vim	/^    let b:match_ignorecase=0$/;"	v
b:match_ignorecase	runtime/ftplugin/lua.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	runtime/ftplugin/ocaml.vim	/^let b:match_ignorecase=0$/;"	v
b:match_ignorecase	runtime/ftplugin/plaintex.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	runtime/ftplugin/postscr.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	runtime/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	runtime/ftplugin/spec.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	runtime/ftplugin/sql.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	runtime/ftplugin/vb.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	runtime/ftplugin/verilog.vim	/^  let b:match_ignorecase=0$/;"	v
b:match_ignorecase	runtime/ftplugin/vhdl.vim	/^  let b:match_ignorecase=1$/;"	v
b:match_ignorecase	runtime/ftplugin/vim.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	runtime/ftplugin/xml.vim	/^    let b:match_ignorecase=0$/;"	v
b:match_skip	runtime/ftplugin/c.vim	/^let b:match_skip = 's:comment\\|string\\|character'$/;"	v
b:match_skip	runtime/ftplugin/context.vim	/^  let b:match_skip = 'r:\\\\\\@<!\\%(\\\\\\\\\\)*%'$/;"	v
b:match_skip	runtime/ftplugin/dtrace.vim	/^let b:match_skip = 's:comment\\|string\\|character'$/;"	v
b:match_skip	runtime/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_skip	runtime/ftplugin/vim.vim	/^  let b:match_skip = 'getline(".") =~ "^\\\\s*sy\\\\%[ntax]\\\\s\\\\+region" ||$/;"	v
b:match_words	runtime/ftplugin/abaqus.vim	/^    let b:match_words = $/;"	v
b:match_words	runtime/ftplugin/ada.vim	/^   let b:match_words =$/;"	v
b:match_words	runtime/ftplugin/aspvbs.vim	/^  let b:match_words =$/;"	v
b:match_words	runtime/ftplugin/c.vim	/^let b:match_words = &matchpairs$/;"	v
b:match_words	runtime/ftplugin/cobol.vim	/^    let b:match_words=$/;"	v
b:match_words	runtime/ftplugin/context.vim	/^  let b:match_words = '(:),\\[:],{:},\\\\(:\\\\),\\\\\\[:\\\\],' .$/;"	v
b:match_words	runtime/ftplugin/csc.vim	/^    let b:match_words=$/;"	v
b:match_words	runtime/ftplugin/csh.vim	/^    let b:match_words =$/;"	v
b:match_words	runtime/ftplugin/dtd.vim	/^    let b:match_words = '<!--:-->,<!:>'$/;"	v
b:match_words	runtime/ftplugin/dtrace.vim	/^let b:match_words = &matchpairs$/;"	v
b:match_words	runtime/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	runtime/ftplugin/fortran.vim	/^  let b:match_words =$/;"	v
b:match_words	runtime/ftplugin/framescript.vim	/^  let b:match_words =$/;"	v
b:match_words	runtime/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	runtime/ftplugin/hamster.vim	/^  let b:match_words =$/;"	v
b:match_words	runtime/ftplugin/html.vim	/^    let b:match_words = '<:>,' .$/;"	v
b:match_words	runtime/ftplugin/ishd.vim	/^    let b:match_words=$/;"	v
b:match_words	runtime/ftplugin/jsp.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	runtime/ftplugin/liquid.vim	/^  let b:match_words .= ','$/;"	v
b:match_words	runtime/ftplugin/liquid.vim	/^  let b:match_words .= '\\<\\%(if\\w*\\|unless\\|case\\)\\>:\\<\\%(elsif\\|else\\|when\\)\\>:\\<end\\%(if\\w*\\|unless\\|case\\)\\>,\\<\\%(for\\|tablerow\\)\\>:\\%({%\\s*\\)\\@<=empty\\>:\\<end\\%(for\\|tablerow\\)\\>,<\\(capture\\|comment\\|highlight\\)\\>:\\<end\\1\\>'$/;"	v
b:match_words	runtime/ftplugin/liquid.vim	/^  let b:match_words = ''$/;"	v
b:match_words	runtime/ftplugin/lua.vim	/^  let b:match_words =$/;"	v
b:match_words	runtime/ftplugin/matlab.vim	/^	let b:match_words = '\\<if\\>\\|\\<while\\>\\|\\<for\\>\\|\\<switch\\>:' .$/;"	v
b:match_words	runtime/ftplugin/ocaml.vim	/^let b:match_words = b:mw$/;"	v
b:match_words	runtime/ftplugin/pascal.vim	/^    let b:match_words='\\<\\%(begin\\|case\\|try\\)\\>:\\<end\\>'$/;"	v
b:match_words	runtime/ftplugin/pdf.vim	/^    let b:match_words = '\\<\\%(\\d\\+\\s\\+\\d\\+\\s\\+\\)obj\\>:\\<endobj\\>,\\<stream$:\\<endstream\\>,\\<xref\\>:\\<trailer\\>,<<:>>'$/;"	v
b:match_words	runtime/ftplugin/php.vim	/^    let b:match_words = '<?php:?>,\\<switch\\>:\\<endswitch\\>,' .$/;"	v
b:match_words	runtime/ftplugin/postscr.vim	/^  let b:match_words = '<<:>>,\\<begin\\>:\\<end\\>,\\<save\\>:\\<restore\\>,\\<gsave\\>:\\<grestore\\>'$/;"	v
b:match_words	runtime/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:match_words	runtime/ftplugin/sh.vim	/^    let b:match_words =$/;"	v
b:match_words	runtime/ftplugin/spec.vim	/^let b:match_words =$/;"	v
b:match_words	runtime/ftplugin/sql.vim	/^    let b:match_words =$/;"	v
b:match_words	runtime/ftplugin/tex.vim	/^  let b:match_words .= ',\\\\begin\\s*\\({\\a\\+\\*\\=}\\):\\\\end\\s*\\1'$/;"	v
b:match_words	runtime/ftplugin/vb.vim	/^    let b:match_words=$/;"	v
b:match_words	runtime/ftplugin/verilog.vim	/^  let b:match_words=$/;"	v
b:match_words	runtime/ftplugin/vhdl.vim	/^  let b:match_words =$/;"	v
b:match_words	runtime/ftplugin/vim.vim	/^  let b:match_words =$/;"	v
b:match_words	runtime/ftplugin/xhtml.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	runtime/ftplugin/xml.vim	/^    let b:match_words =$/;"	v
b:match_words	runtime/syntax/cdl.vim	/^let b:match_words='\\<if\\>:\\<then\\>:\\<elseif\\>:\\<else\\>:\\<endif\\>'$/;"	v
b:mw	runtime/ftplugin/ocaml.vim	/^let b:mw = ''$/;"	v
b:mw	runtime/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(for\\|while\\)\\>:\\<do\\>:\\<done\\>,'$/;"	v
b:mw	runtime/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(match\\|try\\)\\>:\\<with\\>'$/;"	v
b:mw	runtime/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(object\\|sig\\|struct\\|begin\\)\\>:\\<end\\>'$/;"	v
b:mw	runtime/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<if\\>:\\<then\\>:\\<else\\>'$/;"	v
b:mw	runtime/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<let\\>:\\<and\\>:\\(\\<in\\>\\|;;\\)'$/;"	v
b:nroff_is_groff	runtime/syntax/groff.vim	/^let b:nroff_is_groff = 1$/;"	v
b:optionsset	runtime/indent/php.vim	/^let b:optionsset = 0$/;"	v
b:pdf_tagstack	runtime/ftplugin/pdf.vim	/^    let b:pdf_tagstack = []$/;"	v
b:ruby_no_expensive	runtime/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	runtime/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:spell_options	runtime/syntax/groovy.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	runtime/syntax/java.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	runtime/syntax/wsml.vim	/^let b:spell_options="contained"$/;"	v
b:sql_compl_savefunc	runtime/ftplugin/sql.vim	/^    let b:sql_compl_savefunc = &omnifunc$/;"	v
b:sql_vis	runtime/ftplugin/sql.vim	/^    let b:sql_vis = 1$/;"	v
b:synhead	runtime/syntax/hitest.vim	/^	    let b:synhead = b:synhead."s"$/;"	v
b:synhead	runtime/syntax/hitest.vim	/^	 let b:synhead = b:synhead." - filetype"$/;"	v
b:synhead	runtime/syntax/hitest.vim	/^	 let b:synhead = b:synhead.":".@a$/;"	v
b:synhead	runtime/syntax/hitest.vim	/^   let b:synhead = "Syntax highlighting groups"$/;"	v
b:tex_stylish	runtime/syntax/tex.vim	/^  let b:tex_stylish= 0$/;"	v
b:tex_stylish	runtime/syntax/tex.vim	/^  let b:tex_stylish= 1$/;"	v
b:tex_stylish	runtime/syntax/tex.vim	/^ let b:tex_stylish= g:tex_stylish$/;"	v
b:undo_ftplugin	runtime/ftplugin/a2ps.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/aap.vim	/^let b:undo_ftplugin = "setl fo< com< et<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= " foldexpr< foldmethod<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= "|unlet b:browsefilter"$/;"	v
b:undo_ftplugin	runtime/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= "|unlet b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	runtime/ftplugin/abaqus.vim	/^let b:undo_ftplugin .= "|unmap <buffer> [[|unmap <buffer> ]]"$/;"	v
b:undo_ftplugin	runtime/ftplugin/abaqus.vim	/^let b:undo_ftplugin = "setlocal include< includeexpr< isfname<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/alsaconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/ant.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	runtime/ftplugin/arch.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/aspvbs.vim	/^let b:undo_ftplugin = "unlet! b:match_words b:match_ignorecase b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	runtime/ftplugin/bdf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/bst.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/c.vim	/^let b:undo_ftplugin = "setl fo< com< ofu< | if has('vms') | setl isk< | endif"$/;"	v
b:undo_ftplugin	runtime/ftplugin/calendar.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/cdrdaoconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/changelog.vim	/^    let b:undo_ftplugin .= " tw<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/changelog.vim	/^  let b:undo_ftplugin = "setl com< fo< et< ai<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/cobol.vim	/^    let b:undo_ftplugin = b:undo_ftplugin .$/;"	v
b:undo_ftplugin	runtime/ftplugin/cobol.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo< et< tw<" .$/;"	v
b:undo_ftplugin	runtime/ftplugin/conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/config.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . b:undo_ftplugin$/;"	v
b:undo_ftplugin	runtime/ftplugin/context.vim	/^let b:undo_ftplugin = "setl com< cms< def< inc< sua< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/crm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/csc.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	runtime/ftplugin/csh.vim	/^let b:undo_ftplugin = "setlocal commentstring< formatoptions<" .$/;"	v
b:undo_ftplugin	runtime/ftplugin/css.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo< ofu<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/cucumber.vim	/^  let b:undo_ftplugin .= "| sil! iunmap! <C-]>| sil! iunmap! <C-W>]| sil! iunmap! <C-W><C-]>| sil! iunmap! <C-W>}"$/;"	v
b:undo_ftplugin	runtime/ftplugin/cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/cvsrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/debchangelog.vim	/^let b:undo_ftplugin = "setlocal tw< comments< foldmethod< foldexpr< foldtext<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/debcontrol.vim	/^let b:undo_ftplugin = "setlocal tw< foldmethod< foldexpr< foldtext<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/denyhosts.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/dictconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/dictdconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/diff.vim	/^let b:undo_ftplugin = "setl modeline<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/dircolors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/dosini.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/dtd.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	runtime/ftplugin/dtrace.vim	/^let b:undo_ftplugin = "setl fo< com< cms< isk<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/elinks.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	runtime/ftplugin/eterm.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/fetchmail.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/flexwiki.vim	/^let b:undo_ftplugin = "setl tw< wrap< lbr< et< ts< fenc< bomb< ff<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/fortran.vim	/^let b:undo_ftplugin = "setl fo< com< tw< cms< et< inc<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/framescript.vim	/^let b:undo_ftplugin = "setl com< cms< fo< inc< | unlet! b:matchwords"$/;"	v
b:undo_ftplugin	runtime/ftplugin/fvwm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/git.vim	/^let b:undo_ftplugin = "setl keywordprg< path< includeexpr<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/gitcommit.vim	/^    let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	runtime/ftplugin/gitcommit.vim	/^  let b:undo_ftplugin = b:undo_ftplugin . "|setl tw<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/gitconfig.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/gitrebase.vim	/^  let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	runtime/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|nunmap <buffer> K"$/;"	v
b:undo_ftplugin	runtime/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin."|setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/gpg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/group.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/grub.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	runtime/ftplugin/hamster.vim	/^let b:undo_ftplugin = "setl fo< com< tw< commentstring<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/haskell.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/help.vim	/^let b:undo_ftplugin = "setl fo< tw< cole< cocu<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/hostconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/hostsaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/html.vim	/^let b:undo_ftplugin = "setlocal commentstring< matchpairs< omnifunc< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	runtime/ftplugin/indent.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/initex.vim	/^let b:undo_ftplugin = "setl com< cms< define< include< sua<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/java.vim	/^let b:undo_ftplugin = "setlocal suffixes< suffixesadd<" .$/;"	v
b:undo_ftplugin	runtime/ftplugin/javascript.vim	/^let b:undo_ftplugin = "setl fo< ofu< com< cms<" $/;"	v
b:undo_ftplugin	runtime/ftplugin/jsp.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	runtime/ftplugin/kconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/ld.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/lftp.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/libao.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/limits.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/liquid.vim	/^  let b:undo_ftplugin .= '|'$/;"	v
b:undo_ftplugin	runtime/ftplugin/liquid.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	runtime/ftplugin/liquid.vim	/^let b:undo_ftplugin .= 'setl cms< | unlet! b:browsefilter b:match_words'$/;"	v
b:undo_ftplugin	runtime/ftplugin/logcheck.vim	/^let b:undo_ftplugin = "setl fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/loginaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/logindefs.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/logtalk.vim	/^let b:undo_ftplugin = "setl ts< sw< fdm< fdc< ai< dict<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/m4.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/mail.vim	/^let b:undo_ftplugin = "setl modeline< tw< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/mailaliases.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/mailcap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/make.vim	/^let b:undo_ftplugin = "setl et< sts< fo< com< cms< inc<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/manconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/markdown.vim	/^let b:undo_ftplugin .= "|setl cms< com< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/matlab.vim	/^let b:undo_ftplugin = "setlocal suffixesadd< suffixes< "$/;"	v
b:undo_ftplugin	runtime/ftplugin/mf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/modconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/mp.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/mplayerconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/mrxvtrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/msmessages.vim	/^let b:undo_ftplugin = "setl fo< com< cms< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	runtime/ftplugin/muttrc.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/nanorc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/netrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/nsis.vim	/^let b:undo_ftplugin = "setl com< cms< fo< def< inc<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/pamconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/pascal.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	runtime/ftplugin/passwd.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/pdf.vim	/^let b:undo_ftplugin .= " | silent! nunmap <buffer> <C-]> | silent! nunmap <buffer> <C-T>"$/;"	v
b:undo_ftplugin	runtime/ftplugin/pdf.vim	/^let b:undo_ftplugin = "setlocal cms< com< | unlet! b:match_words"$/;"	v
b:undo_ftplugin	runtime/ftplugin/perl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< kp<" .$/;"	v
b:undo_ftplugin	runtime/ftplugin/perl6.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isk<" .$/;"	v
b:undo_ftplugin	runtime/ftplugin/php.vim	/^let b:undo_ftplugin = "setlocal commentstring< include< omnifunc<" .$/;"	v
b:undo_ftplugin	runtime/ftplugin/pinfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/plaintex.vim	/^let b:undo_ftplugin .= "| unlet! b:match_ignorecase b:match_skip b:match_words"$/;"	v
b:undo_ftplugin	runtime/ftplugin/procmail.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/prolog.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/protocols.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/qf.vim	/^let b:undo_ftplugin = "setl stl<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/quake.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/racc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/readline.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/rnc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/rst.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	runtime/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	runtime/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< kp<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/sass.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/screen.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/sensors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/services.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/setserial.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/sgml.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	runtime/ftplugin/sh.vim	/^let b:undo_ftplugin = "setlocal cms< | unlet! b:browsefilter b:match_words"$/;"	v
b:undo_ftplugin	runtime/ftplugin/sieve.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/slpconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/slpreg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/slpspi.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/sql.vim	/^let b:undo_ftplugin = "setl comments<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/sshconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/sudoers.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/svg.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	runtime/ftplugin/sysctl.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/tcl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< kp<" .$/;"	v
b:undo_ftplugin	runtime/ftplugin/tcsh.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	runtime/ftplugin/terminfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/tex.vim	/^let b:undo_ftplugin .= "| setl inex<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/udevconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/udevperm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/udevrules.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/updatedb.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/verilog.vim	/^let b:undo_ftplugin = "setlocal fo< com< tw<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/vim.vim	/^let b:undo_ftplugin = "setl fo< isk< com< tw< commentstring<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/xdefaults.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/xf86conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/xhtml.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	runtime/ftplugin/xinetd.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/xml.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	runtime/ftplugin/xmodmap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/xsd.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	runtime/ftplugin/yaml.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	runtime/ftplugin/zsh.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_indent	runtime/indent/bib.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	runtime/indent/c.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	runtime/indent/changelog.vim	/^let b:undo_indent = "setl ai<"$/;"	v
b:undo_indent	runtime/indent/cpp.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	runtime/indent/cs.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	runtime/indent/cuda.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	runtime/indent/dtrace.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	runtime/indent/ishd.vim	/^let b:undo_indent = "setl ai< indentexpr< indentkeys<"$/;"	v
b:undo_indent	runtime/indent/java.vim	/^let b:undo_indent = "set cin< cino< indentkeys< indentexpr<"$/;"	v
b:undo_indent	runtime/indent/javascript.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	runtime/indent/lifelines.vim	/^let b:undo_indent = "setl cin< cino< cinw<"$/;"	v
b:undo_indent	runtime/indent/lisp.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:undo_indent	runtime/indent/rpl.vim	/^let b:undo_indent = "set ai< indentkeys< indentexpr<"$/;"	v
b:undo_indent	runtime/indent/vb.vim	/^let b:undo_indent = "set ai< indentexpr< indentkeys<"$/;"	v
b:various	runtime/syntax/hitest.vim	/^let b:various = &highlight.',:Normal,:Cursor,:,'$/;"	v
b:vera_minlines	runtime/syntax/vera.vim	/^    let b:vera_minlines = 15	" mostly for () constructs$/;"	v
b:vera_minlines	runtime/syntax/vera.vim	/^    let b:vera_minlines = 50	" #if 0 constructs can be long$/;"	v
b:vera_minlines	runtime/syntax/vera.vim	/^  let b:vera_minlines = vera_minlines$/;"	v
b:vhdl_explore	runtime/ftplugin/vhdl.vim	/^let b:vhdl_explore = '\\%(architecture\\|block\\|configuration\\|component\\|entity\\|function\\|package\\|procedure\\|process\\|record\\|units\\)'$/;"	v
b:xf86conf_xfree86_version	runtime/syntax/xf86conf.vim	/^		let b:xf86conf_xfree86_version = 4$/;"	v
b:xf86conf_xfree86_version	runtime/syntax/xf86conf.vim	/^		let b:xf86conf_xfree86_version = xf86conf_xfree86_version$/;"	v
b:xml_indent_close	runtime/indent/xml.vim	/^    let b:xml_indent_close = '.\\{-}<\/'$/;"	v
b:xml_indent_open	runtime/indent/xml.vim	/^    let b:xml_indent_open = '.\\{-}<\\a'$/;"	v
bUserAbort	src/os_mswin.c	/^static int		*bUserAbort = NULL;$/;"	v	file:
b_FSSpec	src/structs.h	/^    FSSpec	b_FSSpec;	\/* MacOS File Identification *\/$/;"	m	struct:file_buffer	access:public
b_bad_char	src/structs.h	/^    int		b_bad_char;	\/* "++bad=" argument when edit started or 0 *\/$/;"	m	struct:file_buffer	access:public
b_bufvar	src/structs.h	/^    dictitem_T	b_bufvar;	\/* variable for "b:" Dictionary *\/$/;"	m	struct:file_buffer	access:public
b_cap_prog	src/structs.h	/^    regprog_T	*b_cap_prog;	\/* program for 'spellcapcheck' *\/$/;"	m	struct:__anon55	access:public
b_changed	src/structs.h	/^    int		b_changed;	\/* 'modified': Set to TRUE if something in the$/;"	m	struct:file_buffer	access:public
b_changedtick	src/structs.h	/^    int		b_changedtick;	\/* incremented for each change, also for undo *\/$/;"	m	struct:file_buffer	access:public
b_changelist	src/structs.h	/^    pos_T	b_changelist[JUMPLISTSIZE];$/;"	m	struct:file_buffer	access:public
b_changelistlen	src/structs.h	/^    int		b_changelistlen;	\/* number of active entries *\/$/;"	m	struct:file_buffer	access:public
b_chartab	src/structs.h	/^    char_u	b_chartab[32];$/;"	m	struct:file_buffer	access:public
b_dev	src/structs.h	/^    dev_t	b_dev;		\/* device number *\/$/;"	m	struct:file_buffer	access:public
b_dev_valid	src/structs.h	/^    int		b_dev_valid;	\/* TRUE when b_dev has a valid number *\/$/;"	m	struct:file_buffer	access:public
b_did_warn	src/structs.h	/^    int		b_did_warn;	\/* Set to 1 if user has been warned on first$/;"	m	struct:file_buffer	access:public
b_fab_mrs	src/structs.h	/^    unsigned int b_fab_mrs;	\/* Max record size  *\/$/;"	m	struct:file_buffer	access:public
b_fab_rat	src/structs.h	/^    char	 b_fab_rat;	\/* Record attribute *\/$/;"	m	struct:file_buffer	access:public
b_fab_rfm	src/structs.h	/^    char	 b_fab_rfm;	\/* Record format    *\/$/;"	m	struct:file_buffer	access:public
b_ffname	src/structs.h	/^    char_u	*b_ffname;	\/* full path file name *\/$/;"	m	struct:file_buffer	access:public
b_first_abbr	src/structs.h	/^    mapblock_T	*b_first_abbr;$/;"	m	struct:file_buffer	access:public
b_flags	src/structs.h	/^    int		b_flags;	\/* various BF_ flags *\/$/;"	m	struct:file_buffer	access:public
b_fname	src/structs.h	/^    char_u	*b_fname;	\/* current file name *\/$/;"	m	struct:file_buffer	access:public
b_fnum	src/structs.h	/^    int		b_fnum;		\/* buffer number for this file. *\/$/;"	m	struct:file_buffer	access:public
b_help	src/structs.h	/^    int		b_help;		\/* TRUE for help file buffer (when set b_p_bt$/;"	m	struct:file_buffer	access:public
b_ino	src/structs.h	/^    ino_t	b_ino;		\/* inode number *\/$/;"	m	struct:file_buffer	access:public
b_keywtab	src/structs.h	/^    hashtab_T	b_keywtab;		\/* syntax keywords hash table *\/$/;"	m	struct:__anon55	access:public
b_keywtab_ic	src/structs.h	/^    hashtab_T	b_keywtab_ic;		\/* idem, ignore case *\/$/;"	m	struct:__anon55	access:public
b_kmap_ga	src/structs.h	/^    garray_T	b_kmap_ga;	\/* the keymap table *\/$/;"	m	struct:file_buffer	access:public
b_kmap_state	src/structs.h	/^    short	b_kmap_state;	\/* using "lmap" mappings *\/$/;"	m	struct:file_buffer	access:public
b_langp	src/structs.h	/^    garray_T	b_langp;	\/* list of pointers to slang_T, see spell.c *\/$/;"	m	struct:__anon55	access:public
b_last_change	src/structs.h	/^    pos_T	b_last_change;	\/* position of last change: '. mark *\/$/;"	m	struct:file_buffer	access:public
b_last_cursor	src/structs.h	/^    pos_T	b_last_cursor;	\/* cursor position when last unloading this$/;"	m	struct:file_buffer	access:public
b_last_insert	src/structs.h	/^    pos_T	b_last_insert;	\/* where Insert mode was left *\/$/;"	m	struct:file_buffer	access:public
b_maphash	src/structs.h	/^    mapblock_T	*(b_maphash[256]);$/;"	m	struct:file_buffer	access:public
b_marks_read	src/structs.h	/^    int		b_marks_read;	\/* Have we read viminfo marks yet? *\/$/;"	m	struct:file_buffer	access:public
b_may_swap	src/structs.h	/^    int		b_may_swap;$/;"	m	struct:file_buffer	access:public
b_ml	src/structs.h	/^    memline_T	b_ml;		\/* associated memline (also contains line$/;"	m	struct:file_buffer	access:public
b_mod_bot	src/structs.h	/^    linenr_T	b_mod_bot;	\/* lnum below last changed line, AFTER the$/;"	m	struct:file_buffer	access:public
b_mod_set	src/structs.h	/^    int		b_mod_set;	\/* TRUE when there are changes since the last$/;"	m	struct:file_buffer	access:public
b_mod_top	src/structs.h	/^    linenr_T	b_mod_top;	\/* topmost lnum that was changed *\/$/;"	m	struct:file_buffer	access:public
b_mod_xlines	src/structs.h	/^    long	b_mod_xlines;	\/* number of extra buffer lines inserted;$/;"	m	struct:file_buffer	access:public
b_mtime	src/structs.h	/^    long	b_mtime;	\/* last change time of original file *\/$/;"	m	struct:file_buffer	access:public
b_mtime_read	src/structs.h	/^    long	b_mtime_read;	\/* last change time when reading *\/$/;"	m	struct:file_buffer	access:public
b_mzscheme_ref	src/structs.h	/^    void	*b_mzscheme_ref; \/* The MzScheme reference to this buffer *\/$/;"	m	struct:file_buffer	access:public
b_namedm	src/structs.h	/^    pos_T	b_namedm[NMARKS]; \/* current named marks (mark.c) *\/$/;"	m	struct:file_buffer	access:public
b_netbeans_file	src/structs.h	/^    int		b_netbeans_file;    \/* TRUE when buffer is owned by NetBeans *\/$/;"	m	struct:file_buffer	access:public
b_new_change	src/structs.h	/^    int		b_new_change;		\/* set by u_savecommon() *\/$/;"	m	struct:file_buffer	access:public
b_next	src/structs.h	/^    buf_T	*b_next;	\/* links in list of buffers *\/$/;"	m	struct:file_buffer	access:public
b_next	src/structs.h	/^    struct buffblock	*b_next;	\/* pointer to next buffblock *\/$/;"	m	struct:buffblock	typeref:struct:buffblock::buffblock	access:public
b_nospell_cluster_id	src/structs.h	/^    int		b_nospell_cluster_id;	\/* @NoSpell cluster ID or 0 *\/$/;"	m	struct:__anon55	access:public
b_nwindows	src/structs.h	/^    int		b_nwindows;	\/* nr of windows open on this buffer *\/$/;"	m	struct:file_buffer	access:public
b_op_end	src/structs.h	/^    pos_T	b_op_end;$/;"	m	struct:file_buffer	access:public
b_op_start	src/structs.h	/^    pos_T	b_op_start;$/;"	m	struct:file_buffer	access:public
b_orig_mode	src/structs.h	/^    int		b_orig_mode;	\/* mode of original file *\/$/;"	m	struct:file_buffer	access:public
b_orig_size	src/structs.h	/^    off_t	b_orig_size;	\/* size of original file in bytes *\/$/;"	m	struct:file_buffer	access:public
b_p_ai	src/structs.h	/^    int		b_p_ai;		\/* 'autoindent' *\/$/;"	m	struct:file_buffer	access:public
b_p_ai_nopaste	src/structs.h	/^    int		b_p_ai_nopaste;	\/* b_p_ai saved for paste mode *\/$/;"	m	struct:file_buffer	access:public
b_p_ar	src/structs.h	/^    int		b_p_ar;		\/* 'autoread' local value *\/$/;"	m	struct:file_buffer	access:public
b_p_bexpr	src/structs.h	/^    char_u	*b_p_bexpr;	\/* 'balloonexpr' local value *\/$/;"	m	struct:file_buffer	access:public
b_p_bexpr_flags	src/structs.h	/^    long_u	b_p_bexpr_flags;\/* flags for 'balloonexpr' *\/$/;"	m	struct:file_buffer	access:public
b_p_bh	src/structs.h	/^    char_u	*b_p_bh;	\/* 'bufhidden' *\/$/;"	m	struct:file_buffer	access:public
b_p_bin	src/structs.h	/^    int		b_p_bin;	\/* 'binary' *\/$/;"	m	struct:file_buffer	access:public
b_p_bl	src/structs.h	/^    int		b_p_bl;		\/* 'buflisted' *\/$/;"	m	struct:file_buffer	access:public
b_p_bomb	src/structs.h	/^    int		b_p_bomb;	\/* 'bomb' *\/$/;"	m	struct:file_buffer	access:public
b_p_bt	src/structs.h	/^    char_u	*b_p_bt;	\/* 'buftype' *\/$/;"	m	struct:file_buffer	access:public
b_p_cfu	src/structs.h	/^    char_u	*b_p_cfu;	\/* 'completefunc' *\/$/;"	m	struct:file_buffer	access:public
b_p_ci	src/structs.h	/^    int		b_p_ci;		\/* 'copyindent' *\/$/;"	m	struct:file_buffer	access:public
b_p_cin	src/structs.h	/^    int		b_p_cin;	\/* 'cindent' *\/$/;"	m	struct:file_buffer	access:public
b_p_cink	src/structs.h	/^    char_u	*b_p_cink;	\/* 'cinkeys' *\/$/;"	m	struct:file_buffer	access:public
b_p_cino	src/structs.h	/^    char_u	*b_p_cino;	\/* 'cinoptions' *\/$/;"	m	struct:file_buffer	access:public
b_p_cinw	src/structs.h	/^    char_u	*b_p_cinw;	\/* 'cinwords' *\/$/;"	m	struct:file_buffer	access:public
b_p_cm	src/structs.h	/^    char_u	*b_p_cm;	\/* 'cryptmethod' *\/$/;"	m	struct:file_buffer	access:public
b_p_cms	src/structs.h	/^    char_u	*b_p_cms;	\/* 'commentstring' *\/$/;"	m	struct:file_buffer	access:public
b_p_com	src/structs.h	/^    char_u	*b_p_com;	\/* 'comments' *\/$/;"	m	struct:file_buffer	access:public
b_p_cpt	src/structs.h	/^    char_u	*b_p_cpt;	\/* 'complete' *\/$/;"	m	struct:file_buffer	access:public
b_p_def	src/structs.h	/^    char_u	*b_p_def;	\/* 'define' local value *\/$/;"	m	struct:file_buffer	access:public
b_p_dict	src/structs.h	/^    char_u	*b_p_dict;	\/* 'dictionary' local value *\/$/;"	m	struct:file_buffer	access:public
b_p_efm	src/structs.h	/^    char_u	*b_p_efm;	\/* 'errorformat' local value *\/$/;"	m	struct:file_buffer	access:public
b_p_eol	src/structs.h	/^    int		b_p_eol;	\/* 'endofline' *\/$/;"	m	struct:file_buffer	access:public
b_p_ep	src/structs.h	/^    char_u	*b_p_ep;	\/* 'equalprg' local value *\/$/;"	m	struct:file_buffer	access:public
b_p_et	src/structs.h	/^    int		b_p_et;		\/* 'expandtab' *\/$/;"	m	struct:file_buffer	access:public
b_p_et_nobin	src/structs.h	/^    int		b_p_et_nobin;	\/* b_p_et saved for binary mode *\/$/;"	m	struct:file_buffer	access:public
b_p_fenc	src/structs.h	/^    char_u	*b_p_fenc;	\/* 'fileencoding' *\/$/;"	m	struct:file_buffer	access:public
b_p_fex	src/structs.h	/^    char_u	*b_p_fex;	\/* 'formatexpr' *\/$/;"	m	struct:file_buffer	access:public
b_p_fex_flags	src/structs.h	/^    long_u	b_p_fex_flags;	\/* flags for 'formatexpr' *\/$/;"	m	struct:file_buffer	access:public
b_p_ff	src/structs.h	/^    char_u	*b_p_ff;	\/* 'fileformat' *\/$/;"	m	struct:file_buffer	access:public
b_p_flp	src/structs.h	/^    char_u	*b_p_flp;	\/* 'formatlistpat' *\/$/;"	m	struct:file_buffer	access:public
b_p_fo	src/structs.h	/^    char_u	*b_p_fo;	\/* 'formatoptions' *\/$/;"	m	struct:file_buffer	access:public
b_p_ft	src/structs.h	/^    char_u	*b_p_ft;	\/* 'filetype' *\/$/;"	m	struct:file_buffer	access:public
b_p_gp	src/structs.h	/^    char_u	*b_p_gp;	\/* 'grepprg' local value *\/$/;"	m	struct:file_buffer	access:public
b_p_iminsert	src/structs.h	/^    long	b_p_iminsert;	\/* input mode for insert *\/$/;"	m	struct:file_buffer	access:public
b_p_imsearch	src/structs.h	/^    long	b_p_imsearch;	\/* input mode for search *\/$/;"	m	struct:file_buffer	access:public
b_p_inc	src/structs.h	/^    char_u	*b_p_inc;	\/* 'include' *\/$/;"	m	struct:file_buffer	access:public
b_p_inde	src/structs.h	/^    char_u	*b_p_inde;	\/* 'indentexpr' *\/$/;"	m	struct:file_buffer	access:public
b_p_inde_flags	src/structs.h	/^    long_u	b_p_inde_flags;	\/* flags for 'indentexpr' *\/$/;"	m	struct:file_buffer	access:public
b_p_indk	src/structs.h	/^    char_u	*b_p_indk;	\/* 'indentkeys' *\/$/;"	m	struct:file_buffer	access:public
b_p_inex	src/structs.h	/^    char_u	*b_p_inex;	\/* 'includeexpr' *\/$/;"	m	struct:file_buffer	access:public
b_p_inex_flags	src/structs.h	/^    long_u	b_p_inex_flags;	\/* flags for 'includeexpr' *\/$/;"	m	struct:file_buffer	access:public
b_p_inf	src/structs.h	/^    int		b_p_inf;	\/* 'infercase' *\/$/;"	m	struct:file_buffer	access:public
b_p_initialized	src/structs.h	/^    int		b_p_initialized;	\/* set when options initialized *\/$/;"	m	struct:file_buffer	access:public
b_p_isk	src/structs.h	/^    char_u	*b_p_isk;	\/* 'iskeyword' *\/$/;"	m	struct:file_buffer	access:public
b_p_key	src/structs.h	/^    char_u	*b_p_key;	\/* 'key' *\/$/;"	m	struct:file_buffer	access:public
b_p_keymap	src/structs.h	/^    char_u	*b_p_keymap;	\/* 'keymap' *\/$/;"	m	struct:file_buffer	access:public
b_p_kp	src/structs.h	/^    char_u	*b_p_kp;	\/* 'keywordprg' *\/$/;"	m	struct:file_buffer	access:public
b_p_lisp	src/structs.h	/^    int		b_p_lisp;	\/* 'lisp' *\/$/;"	m	struct:file_buffer	access:public
b_p_ma	src/structs.h	/^    int		b_p_ma;		\/* 'modifiable' *\/$/;"	m	struct:file_buffer	access:public
b_p_ml	src/structs.h	/^    int		b_p_ml;		\/* 'modeline' *\/$/;"	m	struct:file_buffer	access:public
b_p_ml_nobin	src/structs.h	/^    int		b_p_ml_nobin;	\/* b_p_ml saved for binary mode *\/$/;"	m	struct:file_buffer	access:public
b_p_mp	src/structs.h	/^    char_u	*b_p_mp;	\/* 'makeprg' local value *\/$/;"	m	struct:file_buffer	access:public
b_p_mps	src/structs.h	/^    char_u	*b_p_mps;	\/* 'matchpairs' *\/$/;"	m	struct:file_buffer	access:public
b_p_nf	src/structs.h	/^    char_u	*b_p_nf;	\/* 'nrformats' *\/$/;"	m	struct:file_buffer	access:public
b_p_oft	src/structs.h	/^    char_u	*b_p_oft;	\/* 'osfiletype' *\/$/;"	m	struct:file_buffer	access:public
b_p_ofu	src/structs.h	/^    char_u	*b_p_ofu;	\/* 'omnifunc' *\/$/;"	m	struct:file_buffer	access:public
b_p_path	src/structs.h	/^    char_u	*b_p_path;	\/* 'path' local value *\/$/;"	m	struct:file_buffer	access:public
b_p_pi	src/structs.h	/^    int		b_p_pi;		\/* 'preserveindent' *\/$/;"	m	struct:file_buffer	access:public
b_p_qe	src/structs.h	/^    char_u	*b_p_qe;	\/* 'quoteescape' *\/$/;"	m	struct:file_buffer	access:public
b_p_ro	src/structs.h	/^    int		b_p_ro;		\/* 'readonly' *\/$/;"	m	struct:file_buffer	access:public
b_p_scriptID	src/structs.h	/^    int		b_p_scriptID[BV_COUNT];	\/* SIDs for buffer-local options *\/$/;"	m	struct:file_buffer	access:public
b_p_si	src/structs.h	/^    int		b_p_si;		\/* 'smartindent' *\/$/;"	m	struct:file_buffer	access:public
b_p_smc	src/structs.h	/^    long	b_p_smc;	\/* 'synmaxcol' *\/$/;"	m	struct:file_buffer	access:public
b_p_sn	src/structs.h	/^    int		b_p_sn;		\/* 'shortname' *\/$/;"	m	struct:file_buffer	access:public
b_p_spc	src/structs.h	/^    char_u	*b_p_spc;	\/* 'spellcapcheck' *\/$/;"	m	struct:__anon55	access:public
b_p_spf	src/structs.h	/^    char_u	*b_p_spf;	\/* 'spellfile' *\/$/;"	m	struct:__anon55	access:public
b_p_spl	src/structs.h	/^    char_u	*b_p_spl;	\/* 'spelllang' *\/$/;"	m	struct:__anon55	access:public
b_p_sts	src/structs.h	/^    long	b_p_sts;	\/* 'softtabstop' *\/$/;"	m	struct:file_buffer	access:public
b_p_sts_nopaste	src/structs.h	/^    long	b_p_sts_nopaste; \/* b_p_sts saved for paste mode *\/$/;"	m	struct:file_buffer	access:public
b_p_sua	src/structs.h	/^    char_u	*b_p_sua;	\/* 'suffixesadd' *\/$/;"	m	struct:file_buffer	access:public
b_p_sw	src/structs.h	/^    long	b_p_sw;		\/* 'shiftwidth' *\/$/;"	m	struct:file_buffer	access:public
b_p_swf	src/structs.h	/^    int		b_p_swf;	\/* 'swapfile' *\/$/;"	m	struct:file_buffer	access:public
b_p_syn	src/structs.h	/^    char_u	*b_p_syn;	\/* 'syntax' *\/$/;"	m	struct:file_buffer	access:public
b_p_tags	src/structs.h	/^    char_u	*b_p_tags;	\/* 'tags' local value *\/$/;"	m	struct:file_buffer	access:public
b_p_ts	src/structs.h	/^    long	b_p_ts;		\/* 'tabstop' *\/$/;"	m	struct:file_buffer	access:public
b_p_tsr	src/structs.h	/^    char_u	*b_p_tsr;	\/* 'thesaurus' local value *\/$/;"	m	struct:file_buffer	access:public
b_p_tw	src/structs.h	/^    long	b_p_tw;		\/* 'textwidth' *\/$/;"	m	struct:file_buffer	access:public
b_p_tw_nobin	src/structs.h	/^    long	b_p_tw_nobin;	\/* b_p_tw saved for binary mode *\/$/;"	m	struct:file_buffer	access:public
b_p_tw_nopaste	src/structs.h	/^    long	b_p_tw_nopaste;	\/* b_p_tw saved for paste mode *\/$/;"	m	struct:file_buffer	access:public
b_p_tx	src/structs.h	/^    int		b_p_tx;		\/* 'textmode' *\/$/;"	m	struct:file_buffer	access:public
b_p_udf	src/structs.h	/^    int		b_p_udf;	\/* 'undofile' *\/$/;"	m	struct:file_buffer	access:public
b_p_wm	src/structs.h	/^    long	b_p_wm;		\/* 'wrapmargin' *\/$/;"	m	struct:file_buffer	access:public
b_p_wm_nobin	src/structs.h	/^    long	b_p_wm_nobin;	\/* b_p_wm saved for binary mode *\/$/;"	m	struct:file_buffer	access:public
b_p_wm_nopaste	src/structs.h	/^    long	b_p_wm_nopaste;	\/* b_p_wm saved for paste mode *\/$/;"	m	struct:file_buffer	access:public
b_perl_private	src/structs.h	/^    void	*b_perl_private;$/;"	m	struct:file_buffer	access:public
b_prev	src/structs.h	/^    buf_T	*b_prev;$/;"	m	struct:file_buffer	access:public
b_python3_ref	src/structs.h	/^    void	*b_python3_ref;	\/* The Python3 reference to this buffer *\/$/;"	m	struct:file_buffer	access:public
b_python_ref	src/structs.h	/^    void	*b_python_ref;	\/* The Python reference to this buffer *\/$/;"	m	struct:file_buffer	access:public
b_ruby_ref	src/structs.h	/^    void	*b_ruby_ref;$/;"	m	struct:file_buffer	access:public
b_s	src/structs.h	/^    synblock_T	b_s;		\/* Info related to syntax highlighting.  w_s$/;"	m	struct:file_buffer	access:public
b_saving	src/structs.h	/^    int		b_saving;	\/* Set to TRUE if we are in the middle of$/;"	m	struct:file_buffer	access:public
b_scanned	src/structs.h	/^    int		b_scanned;	\/* ^N\/^P have scanned this buffer *\/$/;"	m	struct:file_buffer	access:public
b_sfname	src/structs.h	/^    char_u	*b_sfname;	\/* short file name *\/$/;"	m	struct:file_buffer	access:public
b_shortname	src/structs.h	/^    int		b_shortname;	\/* this file has an 8.3 file name *\/$/;"	m	struct:file_buffer	access:public
b_signlist	src/structs.h	/^    signlist_T	*b_signlist;	\/* list of signs to draw *\/$/;"	m	struct:file_buffer	access:public
b_sniff	src/structs.h	/^    int		b_sniff;	\/* file was loaded through Sniff *\/$/;"	m	struct:file_buffer	access:public
b_spell	src/structs.h	/^    int		b_spell;	\/* TRUE for a spell file buffer, most fields$/;"	m	struct:file_buffer	access:public
b_spell_cluster_id	src/structs.h	/^    int		b_spell_cluster_id;	\/* @Spell cluster ID or 0 *\/$/;"	m	struct:__anon55	access:public
b_spell_ismw	src/structs.h	/^    char_u	b_spell_ismw[256];\/* flags: is midword char *\/$/;"	m	struct:__anon55	access:public
b_spell_ismw_mb	src/structs.h	/^    char_u	*b_spell_ismw_mb; \/* multi-byte midword chars *\/$/;"	m	struct:__anon55	access:public
b_sst_array	src/structs.h	/^    synstate_T	*b_sst_array;$/;"	m	struct:__anon55	access:public
b_sst_check_lnum	src/structs.h	/^    linenr_T	b_sst_check_lnum;$/;"	m	struct:__anon55	access:public
b_sst_first	src/structs.h	/^    synstate_T	*b_sst_first;$/;"	m	struct:__anon55	access:public
b_sst_firstfree	src/structs.h	/^    synstate_T	*b_sst_firstfree;$/;"	m	struct:__anon55	access:public
b_sst_freecount	src/structs.h	/^    int		b_sst_freecount;$/;"	m	struct:__anon55	access:public
b_sst_lasttick	src/structs.h	/^    short_u	b_sst_lasttick;	\/* last display tick *\/$/;"	m	struct:__anon55	access:public
b_sst_len	src/structs.h	/^    int		b_sst_len;$/;"	m	struct:__anon55	access:public
b_start_bomb	src/structs.h	/^    int		b_start_bomb;	\/* 'bomb' when it was read *\/$/;"	m	struct:file_buffer	access:public
b_start_eol	src/structs.h	/^    int		b_start_eol;	\/* last line had eol when it was read *\/$/;"	m	struct:file_buffer	access:public
b_start_fenc	src/structs.h	/^    char_u	*b_start_fenc;	\/* 'fileencoding' when edit started or NULL *\/$/;"	m	struct:file_buffer	access:public
b_start_ffc	src/structs.h	/^    int		b_start_ffc;	\/* first char of 'ff' when edit started *\/$/;"	m	struct:file_buffer	access:public
b_str	src/structs.h	/^    char_u		b_str[1];	\/* contents (actually longer) *\/$/;"	m	struct:buffblock	access:public
b_syn_clusters	src/structs.h	/^    garray_T	b_syn_clusters;		\/* table for syntax clusters *\/$/;"	m	struct:__anon55	access:public
b_syn_conceal	src/structs.h	/^    int		b_syn_conceal;		\/* auto-conceal for :syn cmds *\/$/;"	m	struct:__anon55	access:public
b_syn_containedin	src/structs.h	/^    int		b_syn_containedin;	\/* TRUE when there is an item with a$/;"	m	struct:__anon55	access:public
b_syn_error	src/structs.h	/^    int		b_syn_error;		\/* TRUE when error occured in HL *\/$/;"	m	struct:__anon55	access:public
b_syn_folditems	src/structs.h	/^    int		b_syn_folditems;	\/* number of patterns with the HL_FOLD$/;"	m	struct:__anon55	access:public
b_syn_ic	src/structs.h	/^    int		b_syn_ic;		\/* ignore case for :syn cmds *\/$/;"	m	struct:__anon55	access:public
b_syn_linecont_ic	src/structs.h	/^    int		b_syn_linecont_ic;	\/* ignore-case flag for above *\/$/;"	m	struct:__anon55	access:public
b_syn_linecont_pat	src/structs.h	/^    char_u	*b_syn_linecont_pat;	\/* line continuation pattern *\/$/;"	m	struct:__anon55	access:public
b_syn_linecont_prog	src/structs.h	/^    regprog_T	*b_syn_linecont_prog;	\/* line continuation program *\/$/;"	m	struct:__anon55	access:public
b_syn_patterns	src/structs.h	/^    garray_T	b_syn_patterns;		\/* table for syntax patterns *\/$/;"	m	struct:__anon55	access:public
b_syn_spell	src/structs.h	/^    int		b_syn_spell;		\/* SYNSPL_ values *\/$/;"	m	struct:__anon55	access:public
b_syn_sync_flags	src/structs.h	/^    int		b_syn_sync_flags;	\/* flags about how to sync *\/$/;"	m	struct:__anon55	access:public
b_syn_sync_id	src/structs.h	/^    short	b_syn_sync_id;		\/* group to sync on *\/$/;"	m	struct:__anon55	access:public
b_syn_sync_linebreaks	src/structs.h	/^    long	b_syn_sync_linebreaks;	\/* offset for multi-line pattern *\/$/;"	m	struct:__anon55	access:public
b_syn_sync_maxlines	src/structs.h	/^    long	b_syn_sync_maxlines;	\/* maximal sync lines offset *\/$/;"	m	struct:__anon55	access:public
b_syn_sync_minlines	src/structs.h	/^    long	b_syn_sync_minlines;	\/* minimal sync lines offset *\/$/;"	m	struct:__anon55	access:public
b_syn_topgrp	src/structs.h	/^    int		b_syn_topgrp;		\/* for ":syntax include" *\/$/;"	m	struct:__anon55	access:public
b_tcl_ref	src/structs.h	/^    void	*b_tcl_ref;$/;"	m	struct:file_buffer	access:public
b_u_curhead	src/structs.h	/^    u_header_T	*b_u_curhead;	\/* pointer to current header *\/$/;"	m	struct:file_buffer	access:public
b_u_line_colnr	src/structs.h	/^    colnr_T	b_u_line_colnr;	\/* optional column number *\/$/;"	m	struct:file_buffer	access:public
b_u_line_lnum	src/structs.h	/^    linenr_T	b_u_line_lnum;	\/* line number of line in u_line *\/$/;"	m	struct:file_buffer	access:public
b_u_line_ptr	src/structs.h	/^    char_u	*b_u_line_ptr;	\/* saved line for "U" command *\/$/;"	m	struct:file_buffer	access:public
b_u_newhead	src/structs.h	/^    u_header_T	*b_u_newhead;	\/* pointer to newest header; may not be valid$/;"	m	struct:file_buffer	access:public
b_u_numhead	src/structs.h	/^    int		b_u_numhead;	\/* current number of headers *\/$/;"	m	struct:file_buffer	access:public
b_u_oldhead	src/structs.h	/^    u_header_T	*b_u_oldhead;	\/* pointer to oldest header *\/$/;"	m	struct:file_buffer	access:public
b_u_save_nr_cur	src/structs.h	/^    long	b_u_save_nr_cur; \/* file write nr after which we are now *\/$/;"	m	struct:file_buffer	access:public
b_u_save_nr_last	src/structs.h	/^    long	b_u_save_nr_last; \/* counter for last file write *\/$/;"	m	struct:file_buffer	access:public
b_u_seq_cur	src/structs.h	/^    long	b_u_seq_cur;	\/* hu_seq of header below which we are now *\/$/;"	m	struct:file_buffer	access:public
b_u_seq_last	src/structs.h	/^    long	b_u_seq_last;	\/* last used undo sequence number *\/$/;"	m	struct:file_buffer	access:public
b_u_synced	src/structs.h	/^    int		b_u_synced;	\/* entry lists are synced *\/$/;"	m	struct:file_buffer	access:public
b_u_time_cur	src/structs.h	/^    time_t	b_u_time_cur;	\/* uh_time of header below which we are now *\/$/;"	m	struct:file_buffer	access:public
b_ucmds	src/structs.h	/^    garray_T	b_ucmds;$/;"	m	struct:file_buffer	access:public
b_vars	src/structs.h	/^    dict_T	b_vars;		\/* internal variables, local to buffer *\/$/;"	m	struct:file_buffer	access:public
b_visual	src/structs.h	/^    visualinfo_T b_visual;$/;"	m	struct:file_buffer	access:public
b_visual_mode_eval	src/structs.h	/^    int		b_visual_mode_eval;  \/* b_visual.vi_mode for visualmode() *\/$/;"	m	struct:file_buffer	access:public
b_was_netbeans_file	src/structs.h	/^    int		b_was_netbeans_file;\/* TRUE if b_netbeans_file was once set *\/$/;"	m	struct:file_buffer	access:public
b_wininfo	src/structs.h	/^    wininfo_T	*b_wininfo;	\/* list of last used info for each window *\/$/;"	m	struct:file_buffer	access:public
back_gc	src/gui.h	/^    GC		back_gc;$/;"	m	struct:Gui	access:public
back_in_line	src/search.c	/^back_in_line()$/;"	f	file:
back_in_line	src/search.c	/^static void back_in_line __ARGS((void));$/;"	p	file:	signature:(void)
back_pixel	src/gui.h	/^    guicolor_T	back_pixel;	    \/* Color of background *\/$/;"	m	struct:Gui	access:public
background_argument	src/globals.h	/^EXTERN char	*background_argument INIT(= NULL);$/;"	v
backpos	src/regexp.c	/^static garray_T	backpos = {0, 0, 0, 0, NULL};$/;"	v	file:
backpos_S	src/regexp.c	/^typedef struct backpos_S$/;"	s	file:
backpos_S::bp_pos	src/regexp.c	/^    regsave_T	bp_pos;		\/* last input position *\/$/;"	m	struct:backpos_S	file:	access:public
backpos_S::bp_scan	src/regexp.c	/^    char_u	*bp_scan;	\/* "scan" where BACK was encountered *\/$/;"	m	struct:backpos_S	file:	access:public
backpos_T	src/regexp.c	/^} backpos_T;$/;"	t	typeref:struct:backpos_S	file:
backslash_halve	src/charset.c	/^backslash_halve(p)$/;"	f
backslash_halve_save	src/charset.c	/^backslash_halve_save(p)$/;"	f
backslash_trans	src/regexp.c	/^backslash_trans(c)$/;"	f	file:
backslash_trans	src/regexp.c	/^static int	backslash_trans __ARGS((int c));$/;"	p	file:	signature:(int c)
backspace_until_column	src/edit.c	/^backspace_until_column(col)$/;"	f
bad_char	src/ex_cmds.h	/^    int		bad_char;	\/* BAD_KEEP, BAD_DROP or replacement byte *\/$/;"	m	struct:exarg	access:public
badcryptxt	src/blowfish.c	/^    char_u   badcryptxt[9]; \/* cryptxt when big\/little endian is wrong *\/$/;"	m	struct:__anon122	file:	access:public
badi	src/spell.c	/^    int		badi;$/;"	m	struct:__anon18	file:	access:public
badword_captype	src/spell.c	/^badword_captype(word, end)$/;"	f	file:
badword_captype	src/spell.c	/^static int badword_captype __ARGS((char_u *word, char_u *end));$/;"	p	file:	signature:(char_u *word, char_u *end)
balloonEval	src/globals.h	/^EXTERN BalloonEval	*balloonEval INIT(= NULL);$/;"	v
balloonLabel	src/gui_beval.h	/^    GtkWidget		*balloonLabel;$/;"	m	struct:BalloonEvalStruct	access:public
balloonShell	src/gui_beval.h	/^    GtkWidget		*balloonShell;$/;"	m	struct:BalloonEvalStruct	access:public
balloon_expose_event_cb	src/gui_beval.c	/^balloon_expose_event_cb(GtkWidget *widget,$/;"	f	file:	signature:(GtkWidget *widget, GdkEventExpose *event, gpointer data UNUSED)
balloon_expose_event_cb	src/gui_beval.c	/^static gint balloon_expose_event_cb __ARGS((GtkWidget *, GdkEventExpose *, gpointer));$/;"	p	file:	signature:(GtkWidget *, GdkEventExpose *, gpointer)
bangredo	src/globals.h	/^EXTERN int	bangredo INIT(= FALSE);	    \/* set to TRUE with ! command *\/$/;"	v
basic	src/os_vms.c	/^	int	basic;$/;"	m	union:__anon75::__anon76	file:	access:public
bat_text_no	src/dosinst.c	/^char *bat_text_no = "do NOT install .bat files to use Vim at the command line";$/;"	v
bat_text_yes	src/dosinst.c	/^char *bat_text_yes = "Install .bat files to use Vim at the command line:";$/;"	v
batfile_thisversion	src/uninstal.c	/^batfile_thisversion(char *path)$/;"	f	file:	signature:(char *path)
batname	src/dosinst.h	/^    char	*batname;	\/* batch file name *\/$/;"	m	struct:__anon138	access:public
batpath	src/dosinst.h	/^    char	batpath[BUFSIZE];  \/* path of batch file to create; not$/;"	m	struct:__anon138	access:public
bbox_max_y	src/hardcopy.c	/^    int		bbox_max_y;$/;"	m	struct:prt_ps_font_S	file:	access:public
bbox_min_y	src/hardcopy.c	/^    int		bbox_min_y;$/;"	m	struct:prt_ps_font_S	file:	access:public
bck_word	src/search.c	/^bck_word(count, bigword, stop)$/;"	f
bckend_word	src/search.c	/^bckend_word(count, bigword, eol)$/;"	f
beep_count	src/globals.h	/^EXTERN int	beep_count INIT(= 0);	\/* nr of beeps since last char typed *\/$/;"	v
beep_flush	src/misc1.c	/^beep_flush()$/;"	f
beepcmd	src/if_tcl.c	/^beepcmd(dummy, interp, objc, objv)$/;"	f	file:
before_blocking	src/getchar.c	/^before_blocking()$/;"	f
beginSelection	src/gui_at_fs.c	/^    int		beginSelection;$/;"	m	struct:__anon114	file:	access:public
beginline	src/edit.c	/^beginline(flags)$/;"	f
behind_pos	src/regexp.c	/^static regsave_T behind_pos;$/;"	v	file:
beos_cleanup_read_thread	src/os_beos.c	/^beos_cleanup_read_thread(void)$/;"	f	signature:(void)
beos_select	src/os_beos.c	/^beos_select(int nbits,$/;"	f	signature:(int nbits, struct fd_set *rbits, struct fd_set *wbits, struct fd_set *ebits, struct timeval *timeout)
bevalServers	src/globals.h	/^EXTERN int bevalServers INIT(= 0);$/;"	v
bf_check_tables	src/blowfish.c	/^bf_check_tables(a_ipa, a_sbi, val)$/;"	f	file:
bf_check_tables	src/blowfish.c	/^static int bf_check_tables __ARGS((UINT32_T a_ipa[18], UINT32_T a_sbi[4][256], UINT32_T val));$/;"	p	file:	signature:(UINT32_T a_ipa[18], UINT32_T a_sbi[4][256], UINT32_T val)
bf_crypt_decode	src/blowfish.c	/^bf_crypt_decode(ptr, len)$/;"	f
bf_crypt_encode	src/blowfish.c	/^bf_crypt_encode(from, len, to)$/;"	f
bf_crypt_init_keys	src/blowfish.c	/^bf_crypt_init_keys(passwd)$/;"	f
bf_crypt_restore	src/blowfish.c	/^bf_crypt_restore()$/;"	f
bf_crypt_save	src/blowfish.c	/^bf_crypt_save()$/;"	f
bf_e_block	src/blowfish.c	/^bf_e_block(p_xl, p_xr)$/;"	f	file:
bf_e_block	src/blowfish.c	/^static void bf_e_block __ARGS((UINT32_T *p_xl, UINT32_T *p_xr));$/;"	p	file:	signature:(UINT32_T *p_xl, UINT32_T *p_xr)
bf_e_cblock	src/blowfish.c	/^bf_e_cblock(block)$/;"	f	file:
bf_e_cblock	src/blowfish.c	/^static void bf_e_cblock __ARGS((char_u *block));$/;"	p	file:	signature:(char_u *block)
bf_key_init	src/blowfish.c	/^bf_key_init(password, salt, salt_len)$/;"	f
bf_ofb_init	src/blowfish.c	/^bf_ofb_init(iv, iv_len)$/;"	f
bf_self_test	src/blowfish.c	/^bf_self_test()$/;"	f	file:
bf_self_test	src/blowfish.c	/^static int bf_self_test __ARGS((void));$/;"	p	file:	signature:(void)
bf_test_data	src/blowfish.c	/^static struct_bf_test_data bf_test_data[] = {$/;"	v	file:
bg_color	src/structs.h	/^	    guicolor_T	    bg_color;	\/* background color handle *\/$/;"	m	struct:attr_entry::__anon45::__anon48	access:public
bg_color	src/structs.h	/^	    short_u	    bg_color;	\/* background color number *\/$/;"	m	struct:attr_entry::__anon45::__anon47	access:public
bg_color	src/structs.h	/^    long_u	bg_color;$/;"	m	struct:__anon59	access:public
bg_colour	src/gui.h	/^    int		bg_colour;$/;"	m	struct:Gui	access:public
bgcolor	src/gui.h	/^    GdkColor	*bgcolor;	    \/* GDK-styled background color *\/$/;"	m	struct:Gui	access:public
bh_bnum	src/structs.h	/^    blocknr_T	bh_bnum;	    \/* block number *\/$/;"	m	struct:block_hdr	access:public
bh_curr	src/structs.h	/^    struct buffblock	*bh_curr;	\/* buffblock for appending *\/$/;"	m	struct:buffheader	typeref:struct:buffheader::buffblock	access:public
bh_data	src/structs.h	/^    char_u	*bh_data;	    \/* pointer to memory (for used block) *\/$/;"	m	struct:block_hdr	access:public
bh_first	src/structs.h	/^    struct buffblock	bh_first;	\/* first (dummy) block of list *\/$/;"	m	struct:buffheader	typeref:struct:buffheader::buffblock	access:public
bh_flags	src/structs.h	/^    char	bh_flags;	    \/* BH_DIRTY or BH_LOCKED *\/$/;"	m	struct:block_hdr	access:public
bh_hash_next	src/structs.h	/^    bhdr_T	*bh_hash_next;	    \/* next block_hdr in hash list *\/$/;"	m	struct:block_hdr	access:public
bh_hash_prev	src/structs.h	/^    bhdr_T	*bh_hash_prev;	    \/* previous block_hdr in hash list *\/$/;"	m	struct:block_hdr	access:public
bh_index	src/structs.h	/^    int			bh_index;	\/* index for reading *\/$/;"	m	struct:buffheader	access:public
bh_next	src/structs.h	/^    bhdr_T	*bh_next;	    \/* next block_hdr in free or used list *\/$/;"	m	struct:block_hdr	access:public
bh_page_count	src/structs.h	/^    int		bh_page_count;	    \/* number of pages in this block *\/$/;"	m	struct:block_hdr	access:public
bh_prev	src/structs.h	/^    bhdr_T	*bh_prev;	    \/* previous block_hdr in used list *\/$/;"	m	struct:block_hdr	access:public
bh_space	src/structs.h	/^    int			bh_space;	\/* space in bh_curr for appending *\/$/;"	m	struct:buffheader	access:public
bhdr_T	src/structs.h	/^typedef struct block_hdr    bhdr_T;$/;"	t	typeref:struct:block_hdr
bin_window	src/gui_gtk_f.h	/^    GdkWindow *bin_window;$/;"	m	struct:_GtkForm	access:public
bind_textdomain_codeset	src/gui_gtk.c	57;"	d	file:
bind_textdomain_codeset	src/gui_gtk_x11.c	41;"	d	file:
bind_textdomain_codeset	src/vim.h	575;"	d
bind_textdomain_codeset	src/vim.h	597;"	d
bind_textdomain_codeset	src/vim.h	599;"	d
bindtextdomain	src/gui_gtk.c	54;"	d	file:
bindtextdomain	src/gui_gtk_x11.c	38;"	d	file:
bindtextdomain	src/vim.h	574;"	d
bindtextdomain	src/vim.h	593;"	d
bindtextdomain	src/vim.h	595;"	d
binhex	src/dehqx.py	/^import binhex$/;"	i
bioskey_read	src/os_msdos.c	/^static int bioskey_read = _NKEYBRD_READ;   \/* bioskey() argument: read key *\/$/;"	v	file:
bioskey_ready	src/os_msdos.c	/^static int bioskey_ready = _NKEYBRD_READY; \/* bioskey() argument: key ready? *\/$/;"	v	file:
bkc_flags	src/option.h	/^EXTERN unsigned	bkc_flags;$/;"	v
bl_maxval	src/regexp.c	/^static long	bl_maxval;$/;"	v	file:
bl_minval	src/regexp.c	/^static long	bl_minval;$/;"	v	file:
blank_pointer	src/gui.h	/^    Cursor	blank_pointer;	    \/* Blank pointer *\/$/;"	m	struct:Gui	access:public
blank_pointer	src/gui.h	/^    GdkCursor	*blank_pointer;	    \/* Blank pointer *\/$/;"	m	struct:Gui	access:public
blank_xpm	src/gui_xmebw.c	/^static char * blank_xpm[] =$/;"	v	file:
blink_cb	src/gui_gtk_x11.c	/^blink_cb(gpointer data UNUSED)$/;"	f	file:	signature:(gpointer data UNUSED)
blink_offtime	src/gui_gtk_x11.c	/^static long_u blink_offtime = 250;$/;"	v	file:
blink_offtime	src/gui_photon.c	/^static long_u	blink_offtime	= 250;$/;"	v	file:
blink_offtime	src/gui_w48.c	/^static long_u		blink_offtime = 250;$/;"	v	file:
blink_offtime	src/gui_x11.c	/^static long_u		blink_offtime = 250;$/;"	v	file:
blink_ontime	src/gui_gtk_x11.c	/^static long_u blink_ontime = 400;$/;"	v	file:
blink_ontime	src/gui_photon.c	/^static long_u	blink_ontime	= 400;$/;"	v	file:
blink_ontime	src/gui_w48.c	/^static long_u		blink_ontime = 400;$/;"	v	file:
blink_ontime	src/gui_x11.c	/^static long_u		blink_ontime = 400;$/;"	v	file:
blink_state	src/gui_gtk_x11.c	/^static int blink_state = BLINK_NONE;$/;"	v	file:
blink_state	src/gui_photon.c	/^} blink_state = BLINK_NONE;$/;"	v	typeref:enum:__anon6	file:
blink_state	src/gui_w48.c	/^static int		blink_state = BLINK_NONE;$/;"	v	file:
blink_state	src/gui_x11.c	/^static int		blink_state = BLINK_NONE;$/;"	v	file:
blink_timer	src/gui_gtk_x11.c	/^static guint blink_timer = 0;$/;"	v	file:
blink_timer	src/gui_w48.c	/^static UINT		blink_timer = 0;$/;"	v	file:
blink_timer	src/gui_x11.c	/^static XtIntervalId	blink_timer = (XtIntervalId)0;$/;"	v	file:
blink_waittime	src/gui_gtk_x11.c	/^static long_u blink_waittime = 700;$/;"	v	file:
blink_waittime	src/gui_photon.c	/^static long_u	blink_waittime	= 700;$/;"	v	file:
blink_waittime	src/gui_w48.c	/^static long_u		blink_waittime = 700;$/;"	v	file:
blink_waittime	src/gui_x11.c	/^static long_u		blink_waittime = 700;$/;"	v	file:
blinkoff	src/structs.h	/^    long	blinkoff;	\/* blinking, off time *\/$/;"	m	struct:cursor_entry	access:public
blinkon	src/structs.h	/^    long	blinkon;	\/* blinking, on time *\/$/;"	m	struct:cursor_entry	access:public
blinkwait	src/structs.h	/^    long	blinkwait;	\/* blinking, wait time before blinking starts *\/$/;"	m	struct:cursor_entry	access:public
block0	src/memline.c	/^struct block0$/;"	s	file:
block0::b0_fname	src/memline.c	/^    char_u	b0_fname[B0_FNAME_SIZE_ORG]; \/* name of file being edited *\/$/;"	m	struct:block0	file:	access:public
block0::b0_hname	src/memline.c	/^    char_u	b0_hname[B0_HNAME_SIZE]; \/* host name (if it has a name) *\/$/;"	m	struct:block0	file:	access:public
block0::b0_id	src/memline.c	/^    char_u	b0_id[2];	\/* id for block 0: BLOCK0_ID0 and BLOCK0_ID1,$/;"	m	struct:block0	file:	access:public
block0::b0_ino	src/memline.c	/^    char_u	b0_ino[4];	\/* inode of b0_fname *\/$/;"	m	struct:block0	file:	access:public
block0::b0_magic_char	src/memline.c	/^    char_u	b0_magic_char;	\/* check for last char *\/$/;"	m	struct:block0	file:	access:public
block0::b0_magic_int	src/memline.c	/^    int		b0_magic_int;	\/* check for byte order of int *\/$/;"	m	struct:block0	file:	access:public
block0::b0_magic_long	src/memline.c	/^    long	b0_magic_long;	\/* check for byte order of long *\/$/;"	m	struct:block0	file:	access:public
block0::b0_magic_short	src/memline.c	/^    short	b0_magic_short;	\/* check for byte order of short *\/$/;"	m	struct:block0	file:	access:public
block0::b0_mtime	src/memline.c	/^    char_u	b0_mtime[4];	\/* last modification time of file *\/$/;"	m	struct:block0	file:	access:public
block0::b0_page_size	src/memline.c	/^    char_u	b0_page_size[4];\/* number of bytes per page *\/$/;"	m	struct:block0	file:	access:public
block0::b0_pid	src/memline.c	/^    char_u	b0_pid[4];	\/* process id of creator (or 0) *\/$/;"	m	struct:block0	file:	access:public
block0::b0_uname	src/memline.c	/^    char_u	b0_uname[B0_UNAME_SIZE]; \/* name of user (uid if no name) *\/$/;"	m	struct:block0	file:	access:public
block0::b0_version	src/memline.c	/^    char_u	b0_version[10];	\/* Vim version string *\/$/;"	m	struct:block0	file:	access:public
block8	src/blowfish.c	/^} block8;$/;"	t	typeref:union:__anon121	file:
block_autocmds	src/fileio.c	/^block_autocmds()$/;"	f
block_def	src/ops.c	/^struct block_def$/;"	s	file:
block_def::end_char_vcols	src/ops.c	/^    colnr_T	end_char_vcols;	\/* number of vcols of post-block char *\/$/;"	m	struct:block_def	file:	access:public
block_def::end_vcol	src/ops.c	/^    colnr_T	end_vcol;	\/* start col of 1st char wholly after block *\/$/;"	m	struct:block_def	file:	access:public
block_def::endspaces	src/ops.c	/^    int		endspaces;	\/* 'extra' cols after last char *\/$/;"	m	struct:block_def	file:	access:public
block_def::is_MAX	src/ops.c	/^    int		is_MAX;		\/* TRUE if curswant==MAXCOL when starting *\/$/;"	m	struct:block_def	file:	access:public
block_def::is_oneChar	src/ops.c	/^    int		is_oneChar;	\/* TRUE if block within one character *\/$/;"	m	struct:block_def	file:	access:public
block_def::is_short	src/ops.c	/^    int		is_short;	\/* TRUE if line is too short to fit in block *\/$/;"	m	struct:block_def	file:	access:public
block_def::pre_whitesp	src/ops.c	/^    int		pre_whitesp;	\/* screen cols of ws before block *\/$/;"	m	struct:block_def	file:	access:public
block_def::pre_whitesp_c	src/ops.c	/^    int		pre_whitesp_c;	\/* chars of ws before block *\/$/;"	m	struct:block_def	file:	access:public
block_def::start_char_vcols	src/ops.c	/^    colnr_T	start_char_vcols; \/* number of vcols of pre-block char *\/$/;"	m	struct:block_def	file:	access:public
block_def::start_vcol	src/ops.c	/^    colnr_T	start_vcol;	\/* start col of 1st char wholly inside block *\/$/;"	m	struct:block_def	file:	access:public
block_def::startspaces	src/ops.c	/^    int		startspaces;	\/* 'extra' cols before first char *\/$/;"	m	struct:block_def	file:	access:public
block_def::textcol	src/ops.c	/^    colnr_T	textcol;	\/* index of chars (partially) in block *\/$/;"	m	struct:block_def	file:	access:public
block_def::textlen	src/ops.c	/^    int		textlen;	\/* chars in block *\/$/;"	m	struct:block_def	file:	access:public
block_def::textstart	src/ops.c	/^    char_u	*textstart;	\/* pointer to 1st char (partially) in block *\/$/;"	m	struct:block_def	file:	access:public
block_hdr	src/structs.h	/^struct block_hdr$/;"	s
block_hdr::bh_bnum	src/structs.h	/^    blocknr_T	bh_bnum;	    \/* block number *\/$/;"	m	struct:block_hdr	access:public
block_hdr::bh_data	src/structs.h	/^    char_u	*bh_data;	    \/* pointer to memory (for used block) *\/$/;"	m	struct:block_hdr	access:public
block_hdr::bh_flags	src/structs.h	/^    char	bh_flags;	    \/* BH_DIRTY or BH_LOCKED *\/$/;"	m	struct:block_hdr	access:public
block_hdr::bh_hash_next	src/structs.h	/^    bhdr_T	*bh_hash_next;	    \/* next block_hdr in hash list *\/$/;"	m	struct:block_hdr	access:public
block_hdr::bh_hash_prev	src/structs.h	/^    bhdr_T	*bh_hash_prev;	    \/* previous block_hdr in hash list *\/$/;"	m	struct:block_hdr	access:public
block_hdr::bh_next	src/structs.h	/^    bhdr_T	*bh_next;	    \/* next block_hdr in free or used list *\/$/;"	m	struct:block_hdr	access:public
block_hdr::bh_page_count	src/structs.h	/^    int		bh_page_count;	    \/* number of pages in this block *\/$/;"	m	struct:block_hdr	access:public
block_hdr::bh_prev	src/structs.h	/^    bhdr_T	*bh_prev;	    \/* previous block_hdr in used list *\/$/;"	m	struct:block_hdr	access:public
block_insert	src/ops.c	/^block_insert(oap, s, b_insert, bdp)$/;"	f	file:
block_insert	src/ops.c	/^static void block_insert __ARGS((oparg_T *oap, char_u *s, int b_insert, struct block_def*bdp));$/;"	p	file:	signature:(oparg_T *oap, char_u *s, int b_insert, struct block_def*bdp)
block_mode	src/structs.h	/^    int		block_mode;	\/* current operator is Visual block mode *\/$/;"	m	struct:oparg_S	access:public
block_prep	src/ops.c	/^block_prep(oap, bdp, lnum, is_del)$/;"	f	file:
block_prep	src/ops.c	/^static void	block_prep __ARGS((oparg_T *oap, struct block_def *, linenr_T, int));$/;"	p	file:	signature:(oparg_T *oap, struct block_def *, linenr_T, int)
block_redo	src/getchar.c	/^static int	block_redo = FALSE;$/;"	v	file:
blocknr_T	src/structs.h	/^typedef long		    blocknr_T;$/;"	t
blowfish_self_test	src/blowfish.c	/^blowfish_self_test()$/;"	f
bmenu_priority	runtime/menu.vim	/^  let bmenu_priority = 60$/;"	v
bold	src/structs.h	/^    int		bold;$/;"	m	struct:__anon59	access:public
bold_font	src/gui.h	/^    GuiFont	bold_font;	    \/* Bold font *\/$/;"	m	struct:Gui	access:public
boldface	src/os_mswin.c	/^static const int	boldface[2] = {FW_REGULAR, FW_BOLD};$/;"	v	file:
boldital_font	src/gui.h	/^    GuiFont	boldital_font;	    \/* Bold-Italic font *\/$/;"	m	struct:Gui	access:public
bomb_size	src/mbyte.c	/^bomb_size()$/;"	f
bonobo_dock_item_set_behavior	src/gui_gtk_x11.c	/^extern void bonobo_dock_item_set_behavior(BonoboDockItem *dock_item, BonoboDockItemBehavior beh);$/;"	p	file:	signature:(BonoboDockItem *dock_item, BonoboDockItemBehavior beh)
bool	src/vim.h	2145;"	d
boolvar	src/testdir/test49.vim	/^let boolvar = 1$/;"	v
border_offset	src/gui.h	/^    int		border_offset;	    \/* Total pixel offset for all borders *\/$/;"	m	struct:Gui	access:public
border_width	src/gui.h	/^    int		border_width;	    \/* Width of our border around text area *\/$/;"	m	struct:Gui	access:public
botRight	src/gui_mac.c	127;"	d	file:
bot_shadow_GC	src/gui_at_sb.h	/^    GC		bot_shadow_GC;$/;"	m	struct:__anon31	access:public
bot_shadow_contrast	src/gui_at_sb.h	/^    int		bot_shadow_contrast;$/;"	m	struct:__anon31	access:public
bot_shadow_pixel	src/gui_at_sb.h	/^    Pixel	bot_shadow_pixel;$/;"	m	struct:__anon31	access:public
bot_top_msg	src/globals.h	/^EXTERN char bot_top_msg[] INIT(= N_("search hit BOTTOM, continuing at TOP"));$/;"	v
botline_forw	src/move.c	/^botline_forw(lp)$/;"	f	file:
botline_forw	src/move.c	/^static void botline_forw __ARGS((lineoff_T *lp));$/;"	p	file:	signature:(lineoff_T *lp)
botline_topline	src/move.c	/^botline_topline(lp)$/;"	f	file:
botline_topline	src/move.c	/^static void botline_topline __ARGS((lineoff_T *lp));$/;"	p	file:	signature:(lineoff_T *lp)
bottom_sbar	src/gui.h	/^    scrollbar_T bottom_sbar;	    \/* Bottom scrollbar *\/$/;"	m	struct:Gui	access:public
bottommsg	src/tag.c	/^static char_u *bottommsg = (char_u *)N_("E555: at bottom of tag stack");$/;"	v	file:
box	src/gui_mac.c	/^    Rect    box;$/;"	m	struct:__anon130	file:	access:public
bp_pos	src/regexp.c	/^    regsave_T	bp_pos;		\/* last input position *\/$/;"	m	struct:backpos_S	file:	access:public
bp_scan	src/regexp.c	/^    char_u	*bp_scan;	\/* "scan" where BACK was encountered *\/$/;"	m	struct:backpos_S	file:	access:public
brace_count	src/regexp.c	/^static int	brace_count[10]; \/* Current counts for complex brace repeats *\/$/;"	v	file:
brace_max	src/regexp.c	/^static long	brace_max[10];	\/* Maximums for complex brace repeats *\/$/;"	v	file:
brace_min	src/regexp.c	/^static long	brace_min[10];	\/* Minimums for complex brace repeats *\/$/;"	v	file:
break_err	src/testdir/test49.vim	/^	    let break_err = 1$/;"	v
breakat_flags	src/globals.h	/^EXTERN char	breakat_flags[256];	\/* which characters are in 'breakat' *\/$/;"	v
breakcheck_count	src/misc1.c	/^static int	breakcheck_count = 0;$/;"	v	file:
breakpoint	src/eval.c	/^    linenr_T	breakpoint;	\/* next line with breakpoint or zero *\/$/;"	m	struct:funccall_S	file:	access:public
breakpoint	src/ex_cmds2.c	/^    linenr_T	breakpoint;	\/* next line with breakpoint or zero *\/$/;"	m	struct:source_cookie	file:	access:public
browse	src/structs.h	/^    int		browse;			\/* TRUE to invoke file dialog *\/$/;"	m	struct:__anon42	access:public
browse_cancel_cb	src/gui_gtk.c	/^browse_cancel_cb(GtkWidget *widget UNUSED, gpointer cbdata)$/;"	f	file:	signature:(GtkWidget *widget UNUSED, gpointer cbdata)
browse_destroy_cb	src/gui_gtk.c	/^browse_destroy_cb(GtkWidget *widget UNUSED)$/;"	f	file:	signature:(GtkWidget *widget UNUSED)
browse_fname	src/gui.h	/^    char_u	*browse_fname;	    \/* file name from filedlg *\/$/;"	m	struct:Gui	access:public
browse_fname	src/gui_motif.c	/^static char *browse_fname = NULL;$/;"	v	file:
browse_ok_cb	src/gui_gtk.c	/^browse_ok_cb(GtkWidget *widget UNUSED, gpointer cbdata)$/;"	f	file:	signature:(GtkWidget *widget UNUSED, gpointer cbdata)
browse_save_fname	src/ex_cmds2.c	/^browse_save_fname(buf)$/;"	f
bs_cchar	src/structs.h	/^    int		    bs_cchar;	 \/* stores si_cchar *\/$/;"	m	struct:buf_state	access:public
bs_extmatch	src/structs.h	/^    reg_extmatch_T *bs_extmatch; \/* external matches from start pattern *\/$/;"	m	struct:buf_state	access:public
bs_flags	src/structs.h	/^    int		    bs_flags;	 \/* flags for pattern *\/$/;"	m	struct:buf_state	access:public
bs_idx	src/structs.h	/^    int		    bs_idx;	 \/* index of pattern *\/$/;"	m	struct:buf_state	access:public
bs_seqnr	src/structs.h	/^    int		    bs_seqnr;	 \/* stores si_seqnr *\/$/;"	m	struct:buf_state	access:public
bsub	runtime/ftplugin/cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
bt_dontwrite	src/quickfix.c	/^bt_dontwrite(buf)$/;"	f
bt_dontwrite_msg	src/quickfix.c	/^bt_dontwrite_msg(buf)$/;"	f
bt_entry	src/term.c	/^    int		bt_entry;$/;"	m	struct:builtin_term	file:	access:public
bt_nofile	src/quickfix.c	/^bt_nofile(buf)$/;"	f
bt_quickfix	src/quickfix.c	/^bt_quickfix(buf)$/;"	f
bt_string	src/term.c	/^    char	*bt_string;$/;"	m	struct:builtin_term	file:	access:public
buf	src/if_mzsch.c	/^    buf_T	    *buf;$/;"	m	struct:__anon24	file:	access:public
buf	src/if_py_both.h	/^    BufferObject *buf;$/;"	m	struct:__anon13	access:public
buf	src/if_py_both.h	/^    buf_T *buf;$/;"	m	struct:__anon11	access:public
buf	src/if_sniff.c	/^    char   buf[MAX_REQUEST_LEN];$/;"	m	struct:sniffBufNode	file:	access:public
buf	src/structs.h	/^    buf_T	*buf;	\/* the buffer to search for a match *\/$/;"	m	struct:__anon56	access:public
bufIsChanged	src/undo.c	/^bufIsChanged(buf)$/;"	f
bufLen	src/if_sniff.c	/^    int    bufLen;$/;"	m	struct:sniffBufNode	file:	access:public
buf_T	src/os_unixx.h	51;"	d
buf_T	src/os_unixx.h	55;"	d
buf_T	src/pty.c	55;"	d	file:
buf_T	src/pty.c	59;"	d	file:
buf_T	src/structs.h	/^typedef struct file_buffer buf_T;  \/* forward declaration *\/$/;"	t	typeref:struct:file_buffer
buf_addsign	src/buffer.c	/^buf_addsign(buf, id, lnum, typenr)$/;"	f
buf_change_sign_type	src/buffer.c	/^buf_change_sign_type(buf, markId, typenr)$/;"	f
buf_check_timestamp	src/fileio.c	/^buf_check_timestamp(buf, focus)$/;"	f
buf_clear_file	src/buffer.c	/^buf_clear_file(buf)$/;"	f
buf_contents_changed	src/buffer.c	/^buf_contents_changed(buf)$/;"	f
buf_copy_options	src/option.c	/^buf_copy_options(buf, flags)$/;"	f
buf_delete_all_signs	src/buffer.c	/^buf_delete_all_signs()$/;"	f
buf_delete_signs	src/buffer.c	/^buf_delete_signs(buf)$/;"	f	file:
buf_delete_signs	src/buffer.c	/^static void buf_delete_signs __ARGS((buf_T *buf));$/;"	p	file:	signature:(buf_T *buf)
buf_delsign	src/buffer.c	/^buf_delsign(buf, id)$/;"	f
buf_findsign	src/buffer.c	/^buf_findsign(buf, id)$/;"	f
buf_findsign_id	src/buffer.c	/^buf_findsign_id(buf, lnum)$/;"	f
buf_findsigntype_id	src/buffer.c	/^buf_findsigntype_id(buf, lnum, typenr)$/;"	f
buf_freeall	src/buffer.c	/^buf_freeall(buf, flags)$/;"	f
buf_getsigntype	src/buffer.c	/^buf_getsigntype(buf, lnum, type)$/;"	f
buf_hide	src/quickfix.c	/^buf_hide(buf)$/;"	f
buf_init_chartab	src/charset.c	/^buf_init_chartab(buf, global)$/;"	f
buf_jump_open_tab	src/window.c	/^buf_jump_open_tab(buf)$/;"	f
buf_jump_open_win	src/window.c	/^buf_jump_open_win(buf)$/;"	f
buf_list	src/netbeans.c	/^static nbbuf_T *buf_list = NULL;$/;"	v	file:
buf_list_size	src/netbeans.c	/^static int buf_list_size = 0;	\/* size of buf_list *\/$/;"	v	file:
buf_list_used	src/netbeans.c	/^static int buf_list_used = 0;	\/* nr of entries in buf_list actually in use *\/$/;"	v	file:
buf_modname	src/fileio.c	/^buf_modname(shortname, fname, ext, prepend_dot)$/;"	f
buf_name_changed	src/buffer.c	/^buf_name_changed(buf)$/;"	f
buf_reload	src/fileio.c	/^buf_reload(buf, orig_mode)$/;"	f
buf_same_ino	src/buffer.c	/^buf_same_ino(buf, stp)$/;"	f	file:
buf_same_ino	src/buffer.c	/^static int	buf_same_ino __ARGS((buf_T *buf, struct stat *stp));$/;"	p	file:	signature:(buf_T *buf, struct stat *stp)
buf_set_name	src/buffer.c	/^buf_set_name(fnum, name)$/;"	f
buf_setino	src/buffer.c	/^buf_setino(buf)$/;"	f
buf_signcount	src/buffer.c	/^buf_signcount(buf, lnum)$/;"	f
buf_spname	src/buffer.c	/^buf_spname(buf)$/;"	f
buf_state	src/structs.h	/^typedef struct buf_state$/;"	s
buf_state::bs_cchar	src/structs.h	/^    int		    bs_cchar;	 \/* stores si_cchar *\/$/;"	m	struct:buf_state	access:public
buf_state::bs_extmatch	src/structs.h	/^    reg_extmatch_T *bs_extmatch; \/* external matches from start pattern *\/$/;"	m	struct:buf_state	access:public
buf_state::bs_flags	src/structs.h	/^    int		    bs_flags;	 \/* flags for pattern *\/$/;"	m	struct:buf_state	access:public
buf_state::bs_idx	src/structs.h	/^    int		    bs_idx;	 \/* index of pattern *\/$/;"	m	struct:buf_state	access:public
buf_state::bs_seqnr	src/structs.h	/^    int		    bs_seqnr;	 \/* stores si_seqnr *\/$/;"	m	struct:buf_state	access:public
buf_store_time	src/fileio.c	/^buf_store_time(buf, st, fname)$/;"	f
buf_valid	src/buffer.c	/^buf_valid(buf)$/;"	f
buf_write	src/fileio.c	/^buf_write(buf, fname, sfname, start, end, eap, append, forceit,$/;"	f
buf_write_all	src/ex_cmds2.c	/^buf_write_all(buf, forceit)$/;"	f
buf_write_bytes	src/fileio.c	/^buf_write_bytes(ip)$/;"	f	file:
buf_write_bytes	src/fileio.c	/^static int  buf_write_bytes __ARGS((struct bw_info *ip));$/;"	p	file:	signature:(struct bw_info *ip)
bufadrs	src/os_vms.c	/^    char	*bufadrs;$/;"	m	struct:__anon78	file:	access:public
bufempty	src/macros.h	53;"	d
buffblock	src/structs.h	/^struct buffblock$/;"	s
buffblock::b_next	src/structs.h	/^    struct buffblock	*b_next;	\/* pointer to next buffblock *\/$/;"	m	struct:buffblock	typeref:struct:buffblock::buffblock	access:public
buffblock::b_str	src/structs.h	/^    char_u		b_str[1];	\/* contents (actually longer) *\/$/;"	m	struct:buffblock	access:public
buffer	src/hardcopy.c	/^    char_u  buffer[PRT_FILE_BUFFER_LEN];$/;"	m	struct:prt_resfile_buffer_S	file:	access:public
buffer	src/if_py_both.h	/^static char_u *buffer = NULL;$/;"	v
buffer	src/netbeans.c	/^    char_u	    *buffer;$/;"	m	struct:cmdqueue	file:	access:public
buffer	src/structs.h	/^  char_u   buffer[64];$/;"	m	struct:__anon63	access:public
buffer_append	src/if_ruby.c	/^static VALUE buffer_append(VALUE self, VALUE num, VALUE str)$/;"	f	file:	signature:(VALUE self, VALUE num, VALUE str)
buffer_aref	src/if_ruby.c	/^static VALUE buffer_aref(VALUE self, VALUE num)$/;"	f	file:	signature:(VALUE self, VALUE num)
buffer_aset	src/if_ruby.c	/^static VALUE buffer_aset(VALUE self, VALUE num, VALUE str)$/;"	f	file:	signature:(VALUE self, VALUE num, VALUE str)
buffer_count	src/if_ruby.c	/^static VALUE buffer_count(VALUE self)$/;"	f	file:	signature:(VALUE self)
buffer_delete	src/if_ruby.c	/^static VALUE buffer_delete(VALUE self, VALUE num)$/;"	f	file:	signature:(VALUE self, VALUE num)
buffer_ensure	src/if_py_both.h	/^buffer_ensure(PyInt n)$/;"	f	signature:(PyInt n)
buffer_fixup_proc	src/if_mzsch.c	/^static int buffer_fixup_proc(void *obj)$/;"	f	file:	signature:(void *obj)
buffer_len	src/if_py_both.h	/^static PyInt buffer_len = 0;$/;"	v
buffer_mark_proc	src/if_mzsch.c	/^static int buffer_mark_proc(void *obj)$/;"	f	file:	signature:(void *obj)
buffer_name	src/if_ruby.c	/^static VALUE buffer_name(VALUE self)$/;"	f	file:	signature:(VALUE self)
buffer_new	src/if_mzsch.c	/^buffer_new(buf_T *buf)$/;"	f	file:	signature:(buf_T *buf)
buffer_new	src/if_mzsch.c	/^static Scheme_Object *buffer_new(buf_T *buf);$/;"	p	file:	signature:(buf_T *buf)
buffer_new	src/if_ruby.c	/^static VALUE buffer_new(buf_T *buf)$/;"	f	file:	signature:(buf_T *buf)
buffer_number	src/if_ruby.c	/^static VALUE buffer_number(VALUE self)$/;"	f	file:	signature:(VALUE self)
buffer_s_aref	src/if_ruby.c	/^static VALUE buffer_s_aref(VALUE self UNUSED, VALUE num)$/;"	f	file:	signature:(VALUE self UNUSED, VALUE num)
buffer_s_count	src/if_ruby.c	/^static VALUE buffer_s_count()$/;"	f	file:
buffer_s_current	src/if_ruby.c	/^static VALUE buffer_s_current()$/;"	f	file:
buffer_shiftwidth	runtime/indent/sh.vim	/^function s:buffer_shiftwidth()$/;"	f
buffer_size	src/if_py_both.h	/^static PyInt buffer_size = 0;$/;"	v
buffer_size_proc	src/if_mzsch.c	/^static int buffer_size_proc(void *obj UNUSED)$/;"	f	file:	signature:(void *obj UNUSED)
buffercmd	src/if_tcl.c	/^buffercmd(dummy, interp, objc, objv)$/;"	f	file:
buffheader	src/structs.h	/^struct buffheader$/;"	s
buffheader::bh_curr	src/structs.h	/^    struct buffblock	*bh_curr;	\/* buffblock for appending *\/$/;"	m	struct:buffheader	typeref:struct:buffheader::buffblock	access:public
buffheader::bh_first	src/structs.h	/^    struct buffblock	bh_first;	\/* first (dummy) block of list *\/$/;"	m	struct:buffheader	typeref:struct:buffheader::buffblock	access:public
buffheader::bh_index	src/structs.h	/^    int			bh_index;	\/* index for reading *\/$/;"	m	struct:buffheader	access:public
buffheader::bh_space	src/structs.h	/^    int			bh_space;	\/* space in bh_curr for appending *\/$/;"	m	struct:buffheader	access:public
buflen	src/os_vms.c	/^    short	buflen;$/;"	m	struct:__anon78	file:	access:public
buflist_add	src/buffer.c	/^buflist_add(fname, flags)$/;"	f
buflist_altfpos	src/buffer.c	/^buflist_altfpos(win)$/;"	f
buflist_findfpos	src/buffer.c	/^buflist_findfpos(buf)$/;"	f
buflist_findlnum	src/buffer.c	/^buflist_findlnum(buf)$/;"	f
buflist_findname	src/buffer.c	/^buflist_findname(ffname)$/;"	f
buflist_findname_exp	src/buffer.c	/^buflist_findname_exp(fname)$/;"	f
buflist_findname_stat	src/buffer.c	/^buflist_findname_stat(ffname, stp)$/;"	f	file:
buflist_findname_stat	src/buffer.c	/^static buf_T	*buflist_findname_stat __ARGS((char_u *ffname, struct stat *st));$/;"	p	file:	signature:(char_u *ffname, struct stat *st)
buflist_findnr	src/buffer.c	/^buflist_findnr(nr)$/;"	f
buflist_findpat	src/buffer.c	/^buflist_findpat(pattern, pattern_end, unlisted, diffmode)$/;"	f
buflist_getfile	src/buffer.c	/^buflist_getfile(n, lnum, options, forceit)$/;"	f
buflist_getfpos	src/buffer.c	/^buflist_getfpos()$/;"	f
buflist_list	src/buffer.c	/^buflist_list(eap)$/;"	f
buflist_list	src/ex_docmd.c	100;"	d	file:
buflist_match	src/buffer.c	/^buflist_match(prog, buf)$/;"	f	file:
buflist_match	src/buffer.c	/^static char_u	*buflist_match __ARGS((regprog_T *prog, buf_T *buf));$/;"	p	file:	signature:(regprog_T *prog, buf_T *buf)
buflist_name_nr	src/buffer.c	/^buflist_name_nr(fnum, fname, lnum)$/;"	f
buflist_new	src/buffer.c	/^buflist_new(ffname, sfname, lnum, flags)$/;"	f
buflist_nr2name	src/buffer.c	/^buflist_nr2name(n, fullname, helptail)$/;"	f
buflist_setfpos	src/buffer.c	/^buflist_setfpos(buf, win, lnum, col, copy_options)$/;"	f	file:
buflist_setfpos	src/buffer.c	/^static void	buflist_setfpos __ARGS((buf_T *buf, win_T *win, linenr_T lnum, colnr_T col, int copy_options));$/;"	p	file:	signature:(buf_T *buf, win_T *win, linenr_T lnum, colnr_T col, int copy_options)
buflist_slash_adjust	src/buffer.c	/^buflist_slash_adjust()$/;"	f
buflocal_nr	src/fileio.c	/^    int		    buflocal_nr;	\/* !=0 for buffer-local AutoPat *\/$/;"	m	struct:AutoPat	file:	access:public
bufp	src/netbeans.c	/^    buf_T		*bufp;$/;"	m	struct:nbbuf_struct	file:	access:public
bufselfcmd	src/if_tcl.c	/^bufselfcmd(ref, interp, objc, objv)$/;"	f	file:
bufstate_T	src/structs.h	/^} bufstate_T;$/;"	t	typeref:struct:buf_state
build_drop_cmd	src/main.c	/^build_drop_cmd(filec, filev, tabs, sendReply)$/;"	f	file:
build_drop_cmd	src/main.c	/^static char_u *build_drop_cmd __ARGS((int filec, char **filev, int tabs, int sendReply));$/;"	p	file:	signature:(int filec, char **filev, int tabs, int sendReply)
build_link_name	src/dosinst.c	/^build_link_name($/;"	f	signature:( char *link_path, const char *link_name, const char *shell_folder_name)
build_shortcut	src/dosinst.c	/^build_shortcut($/;"	f	file:	signature:( const char *name, const char *exename, const char *args, const char *shell_folder, const char *workingdir)
build_stl_str_hl	src/buffer.c	/^build_stl_str_hl(wp, out, outlen, fmt, use_sandbox, fillchar, maxwidth, hltab, tabtab)$/;"	f
built_in_pixmaps	src/gui_x11_pm.h	/^static char **(built_in_pixmaps[]) =$/;"	v
builtin_function	src/eval.c	/^builtin_function(name)$/;"	f	file:
builtin_function	src/eval.c	/^static int builtin_function __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
builtin_term	src/term.c	/^struct builtin_term$/;"	s	file:
builtin_term::bt_entry	src/term.c	/^    int		bt_entry;$/;"	m	struct:builtin_term	file:	access:public
builtin_term::bt_string	src/term.c	/^    char	*bt_string;$/;"	m	struct:builtin_term	file:	access:public
builtin_termcaps	src/term.c	/^static struct builtin_term builtin_termcaps[] =$/;"	v	typeref:struct:builtin_term	file:
bump_color	src/gui_xmebw.c	/^bump_color(unsigned short value)$/;"	f	file:	signature:(unsigned short value)
butproc	src/gui_athena.c	/^butproc(w, client_data, call_data)$/;"	f	file:
butproc	src/gui_athena.c	/^static void butproc __ARGS((Widget w, XtPointer client_data, XtPointer call_data));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XtPointer call_data)
butproc	src/gui_motif.c	/^butproc(w, client_data, call_data)$/;"	f	file:
butproc	src/gui_motif.c	/^static void butproc __ARGS((Widget w, XtPointer client_data, XtPointer call_data));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XtPointer call_data)
button	src/misc2.c	/^    int	    button;		\/* Which mouse button is it? *\/$/;"	m	struct:mousetable	file:	access:public
button_equal	src/gui_gtk.c	/^button_equal(const char *a, const char *b)$/;"	f	file:	signature:(const char *a, const char *b)
button_press_event	src/gui_gtk_x11.c	/^button_press_event(GtkWidget *widget,$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event, gpointer data UNUSED)
button_release_event	src/gui_gtk_x11.c	/^button_release_event(GtkWidget *widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GdkEventButton *event, gpointer data UNUSED)
bw_buf	src/fileio.c	/^    char_u	*bw_buf;	\/* buffer with data to be written *\/$/;"	m	struct:bw_info	file:	access:public
bw_conv_buf	src/fileio.c	/^    char_u	*bw_conv_buf;	\/* buffer for writing converted chars *\/$/;"	m	struct:bw_info	file:	access:public
bw_conv_buflen	src/fileio.c	/^    int		bw_conv_buflen; \/* size of bw_conv_buf *\/$/;"	m	struct:bw_info	file:	access:public
bw_conv_error	src/fileio.c	/^    int		bw_conv_error;	\/* set for conversion error *\/$/;"	m	struct:bw_info	file:	access:public
bw_conv_error_lnum	src/fileio.c	/^    linenr_T	bw_conv_error_lnum;  \/* first line with error or zero *\/$/;"	m	struct:bw_info	file:	access:public
bw_fd	src/fileio.c	/^    int		bw_fd;		\/* file descriptor *\/$/;"	m	struct:bw_info	file:	access:public
bw_first	src/fileio.c	/^    int		bw_first;	\/* first write call *\/$/;"	m	struct:bw_info	file:	access:public
bw_flags	src/fileio.c	/^    int		bw_flags;	\/* FIO_ flags *\/$/;"	m	struct:bw_info	file:	access:public
bw_iconv_fd	src/fileio.c	/^    iconv_t	bw_iconv_fd;	\/* descriptor for iconv() or -1 *\/$/;"	m	struct:bw_info	file:	access:public
bw_info	src/fileio.c	/^struct bw_info$/;"	s	file:
bw_info::bw_buf	src/fileio.c	/^    char_u	*bw_buf;	\/* buffer with data to be written *\/$/;"	m	struct:bw_info	file:	access:public
bw_info::bw_conv_buf	src/fileio.c	/^    char_u	*bw_conv_buf;	\/* buffer for writing converted chars *\/$/;"	m	struct:bw_info	file:	access:public
bw_info::bw_conv_buflen	src/fileio.c	/^    int		bw_conv_buflen; \/* size of bw_conv_buf *\/$/;"	m	struct:bw_info	file:	access:public
bw_info::bw_conv_error	src/fileio.c	/^    int		bw_conv_error;	\/* set for conversion error *\/$/;"	m	struct:bw_info	file:	access:public
bw_info::bw_conv_error_lnum	src/fileio.c	/^    linenr_T	bw_conv_error_lnum;  \/* first line with error or zero *\/$/;"	m	struct:bw_info	file:	access:public
bw_info::bw_fd	src/fileio.c	/^    int		bw_fd;		\/* file descriptor *\/$/;"	m	struct:bw_info	file:	access:public
bw_info::bw_first	src/fileio.c	/^    int		bw_first;	\/* first write call *\/$/;"	m	struct:bw_info	file:	access:public
bw_info::bw_flags	src/fileio.c	/^    int		bw_flags;	\/* FIO_ flags *\/$/;"	m	struct:bw_info	file:	access:public
bw_info::bw_iconv_fd	src/fileio.c	/^    iconv_t	bw_iconv_fd;	\/* descriptor for iconv() or -1 *\/$/;"	m	struct:bw_info	file:	access:public
bw_info::bw_len	src/fileio.c	/^    int		bw_len;		\/* length of data *\/$/;"	m	struct:bw_info	file:	access:public
bw_info::bw_rest	src/fileio.c	/^    char_u	bw_rest[CONV_RESTLEN]; \/* not converted bytes *\/$/;"	m	struct:bw_info	file:	access:public
bw_info::bw_restlen	src/fileio.c	/^    int		bw_restlen;	\/* nr of bytes in bw_rest[] *\/$/;"	m	struct:bw_info	file:	access:public
bw_info::bw_start_lnum	src/fileio.c	/^    linenr_T	bw_start_lnum;  \/* line number at start of buffer *\/$/;"	m	struct:bw_info	file:	access:public
bw_len	src/fileio.c	/^    int		bw_len;		\/* length of data *\/$/;"	m	struct:bw_info	file:	access:public
bw_rest	src/fileio.c	/^    char_u	bw_rest[CONV_RESTLEN]; \/* not converted bytes *\/$/;"	m	struct:bw_info	file:	access:public
bw_restlen	src/fileio.c	/^    int		bw_restlen;	\/* nr of bytes in bw_rest[] *\/$/;"	m	struct:bw_info	file:	access:public
bw_start_lnum	src/fileio.c	/^    linenr_T	bw_start_lnum;  \/* line number at start of buffer *\/$/;"	m	struct:bw_info	file:	access:public
byte2cells	src/charset.c	/^byte2cells(b)$/;"	f
byte_in_str	src/spell.c	/^byte_in_str(str, n)$/;"	f	file:
byte_in_str	src/spell.c	/^static int byte_in_str __ARGS((char_u *str, int byte));$/;"	p	file:	signature:(char_u *str, int byte)
bytes2offset	src/spell.c	/^bytes2offset(pp)$/;"	f	file:
bytes2offset	src/spell.c	/^static int bytes2offset __ARGS((char_u **pp));$/;"	p	file:	signature:(char_u **pp)
bytes_printed	src/hardcopy.c	/^    long_u	bytes_printed;	    \/* bytes printed so far *\/$/;"	m	struct:__anon126	file:	access:public
c	src/iid_ole.c	/^    unsigned char  c[8];$/;"	m	struct:_IID	file:	access:public
c	src/regexp.c	/^    int a, b, c;$/;"	m	struct:__anon104	file:	access:public
cBuffer	src/if_ruby.c	/^static VALUE cBuffer;$/;"	v	file:
cVimWindow	src/if_ruby.c	/^static VALUE cVimWindow;$/;"	v	file:
c_comment_strings	runtime/gvimrc_example.vim	/^  let c_comment_strings=1$/;"	v
c_flag	src/os_riscos.h	152;"	d
calc_hist_idx	src/ex_getln.c	/^calc_hist_idx(histype, num)$/;"	f	file:
calc_hist_idx	src/ex_getln.c	/^static int	calc_hist_idx __ARGS((int histype, int num));$/;"	p	file:	signature:(int histype, int num)
call_PyObject_Free	src/if_python3.c	/^call_PyObject_Free(void *p)$/;"	f	file:	signature:(void *p)
call_PyType_GenericAlloc	src/if_python3.c	/^call_PyType_GenericAlloc(PyTypeObject *type, Py_ssize_t nitems)$/;"	f	file:	signature:(PyTypeObject *type, Py_ssize_t nitems)
call_PyType_GenericNew	src/if_python3.c	/^call_PyType_GenericNew(PyTypeObject *type, PyObject *args, PyObject *kwds)$/;"	f	file:	signature:(PyTypeObject *type, PyObject *args, PyObject *kwds)
call_func	src/eval.c	/^call_func(funcname, len, rettv, argcount, argvars, firstline, lastline,$/;"	f	file:
call_func	src/eval.c	/^static int call_func __ARGS((char_u *funcname, int len, typval_T *rettv, int argcount, typval_T *argvars, linenr_T firstline, linenr_T lastline, int *doesrange, int evaluate, dict_T *selfdict));$/;"	p	file:	signature:(char_u *funcname, int len, typval_T *rettv, int argcount, typval_T *argvars, linenr_T firstline, linenr_T lastline, int *doesrange, int evaluate, dict_T *selfdict)
call_func_retlist	src/eval.c	/^call_func_retlist(func, argc, argv, safe)$/;"	f
call_func_retnr	src/eval.c	/^call_func_retnr(func, argc, argv, safe)$/;"	f
call_func_retstr	src/eval.c	/^call_func_retstr(func, argc, argv, safe)$/;"	f
call_shell	src/misc2.c	/^call_shell(cmd, opt)$/;"	f
call_user_expand_func	src/ex_getln.c	/^call_user_expand_func(user_expand_func, xp, num_file, file)$/;"	f	file:
call_user_expand_func	src/ex_getln.c	/^static void * call_user_expand_func __ARGS((void *(*user_expand_func) __ARGS((char_u *, int, char_u **, int)), expand_T	*xp, int *num_file, char_u ***file));$/;"	p	file:	signature:(void *(*user_expand_func) __ARGS((char_u *, int, char_u **, int)), expand_T *xp, int *num_file, char_u ***file)
call_user_func	src/eval.c	/^call_user_func(fp, argcount, argvars, rettv, firstline, lastline, selfdict)$/;"	f	file:
call_user_func	src/eval.c	/^static void call_user_func __ARGS((ufunc_T *fp, int argcount, typval_T *argvars, typval_T *rettv, linenr_T firstline, linenr_T lastline, dict_T *selfdict));$/;"	p	file:	signature:(ufunc_T *fp, int argcount, typval_T *argvars, typval_T *rettv, linenr_T firstline, linenr_T lastline, dict_T *selfdict)
call_vim_function	src/eval.c	/^call_vim_function(func, argc, argv, safe, rettv)$/;"	f	file:
call_vim_function	src/eval.c	/^static int call_vim_function __ARGS((char_u *func, int argc, char_u **argv, int safe, typval_T *rettv));$/;"	p	file:	signature:(char_u *func, int argc, char_u **argv, int safe, typval_T *rettv)
called_emsg	src/globals.h	/^EXTERN int	called_emsg;		    \/* always set by emsg() *\/$/;"	v
caller	src/eval.c	/^    funccall_T	*caller;	\/* calling function or NULL *\/$/;"	m	struct:funccall_S	file:	access:public
calls	src/testdir/test49.vim	/^    let calls = ""$/;"	v
calls	src/testdir/test49.vim	/^let calls = 0$/;"	v
canF_Ljoin	src/farsi.c	/^canF_Ljoin(c)$/;"	f	file:
canF_Ljoin	src/farsi.c	/^static int canF_Ljoin __ARGS((int c));$/;"	p	file:	signature:(int c)
canF_Rjoin	src/farsi.c	/^canF_Rjoin(c)$/;"	f	file:
canF_Rjoin	src/farsi.c	/^static int canF_Rjoin __ARGS((int c));$/;"	p	file:	signature:(int c)
can_abandon	src/ex_cmds2.c	/^can_abandon(buf, forceit)$/;"	f
can_be_compound	src/spell.c	/^can_be_compound(sp, slang, compflags, flag)$/;"	f	file:
can_be_compound	src/spell.c	/^static int can_be_compound __ARGS((trystate_T *sp, slang_T *slang, char_u *compflags, int flag));$/;"	p	file:	signature:(trystate_T *sp, slang_T *slang, char_u *compflags, int flag)
can_bs	src/option.c	/^can_bs(what)$/;"	f
can_cindent	src/edit.c	/^static int	can_cindent;		\/* may do cindenting on this line *\/$/;"	v	file:
can_clear	src/screen.c	/^can_clear(p)$/;"	f
can_compound	src/spell.c	/^can_compound(slang, word, flags)$/;"	f	file:
can_compound	src/spell.c	/^static int can_compound __ARGS((slang_T *slang, char_u *word, char_u *flags));$/;"	p	file:	signature:(slang_T *slang, char_u *word, char_u *flags)
can_end_termcap_mode	src/os_mswin.c	/^can_end_termcap_mode($/;"	f	signature:( int give_msg)
can_f_submatch	src/regexp.c	/^static int can_f_submatch = FALSE;	\/* TRUE when submatch() can be used *\/$/;"	v	file:
can_free_funccal	src/eval.c	/^can_free_funccal(fc, copyID)$/;"	f	file:
can_free_funccal	src/eval.c	/^static int can_free_funccal __ARGS((funccall_T *fc, int copyID)) ;$/;"	p	file:	signature:(funccall_T *fc, int copyID)
can_si	src/globals.h	/^EXTERN int	can_si INIT(= FALSE);$/;"	v
can_si_back	src/globals.h	/^EXTERN int	can_si_back INIT(= FALSE);$/;"	v
can_update_cursor	src/gui.c	/^static int can_update_cursor = TRUE; \/* can display the cursor *\/$/;"	v	file:
cancel	src/gui_motif.c	/^    Widget cancel;$/;"	m	struct:_SharedFindReplace	file:	access:public
cancel	src/gui_xmdlg.c	/^    Widget	cancel;$/;"	m	struct:_SharedFontSelData	file:	access:public
cancelBalloon	src/gui_beval.c	/^cancelBalloon(BalloonEval *beval)$/;"	f	file:	signature:(BalloonEval *beval)
cancelBalloon	src/gui_beval.c	/^cancelBalloon(beval)$/;"	f	file:
cancelBalloon	src/gui_beval.c	/^static void cancelBalloon __ARGS((BalloonEval *));$/;"	p	file:	signature:(BalloonEval *)
cancel_callback	src/gui_xmdlg.c	/^cancel_callback(Widget w UNUSED,$/;"	f	file:	signature:(Widget w UNUSED, SharedFontSelData *data, XmListCallbackStruct *call_data UNUSED)
canon	src/mbyte.c	/^{   char *name;		int canon;}$/;"	m	struct:__anon135	file:	access:public
cansplit	src/if_cscope.h	/^    int	    cansplit;		\/* if supports splitting window *\/$/;"	m	struct:__anon86	access:public
capitalize	runtime/ftplugin/changelog.vim	/^  function! s:capitalize(word)$/;"	f
captype	src/spell.c	/^captype(word, end)$/;"	f	file:
captype	src/spell.c	/^static int captype __ARGS((char_u *word, char_u *end));$/;"	p	file:	signature:(char_u *word, char_u *end)
case_args	src/syntax.c	/^static char *(case_args[]) = {"match", "ignore", NULL};$/;"	v	file:
cat_func_name	src/eval.c	/^cat_func_name(buf, fp)$/;"	f	file:
cat_func_name	src/eval.c	/^static void cat_func_name __ARGS((char_u *buf, ufunc_T *fp));$/;"	p	file:	signature:(char_u *buf, ufunc_T *fp)
cat_prefix_varname	src/eval.c	/^cat_prefix_varname(prefix, name)$/;"	f	file:
cat_prefix_varname	src/eval.c	/^static char_u *cat_prefix_varname __ARGS((int prefix, char_u *name));$/;"	p	file:	signature:(int prefix, char_u *name)
catch_cbrk	src/os_msdos.c	/^catch_cbrk(int a)$/;"	f	file:	signature:(int a)
catch_cint	src/os_msdos.c	/^catch_cint(bp, di, si, ds, es, dx, cx, bx, ax)$/;"	f	file:
catch_exception	src/ex_eval.c	/^catch_exception(excp)$/;"	f	file:
catch_exception	src/ex_eval.c	/^static void	catch_exception __ARGS((except_T *excp));$/;"	p	file:	signature:(except_T *excp)
catch_int_signal	src/os_unix.c	/^catch_int_signal()$/;"	f	file:
catch_int_signal	src/os_unix.c	/^static void catch_int_signal __ARGS((void));$/;"	p	file:	signature:(void)
catch_signals	src/os_unix.c	/^catch_signals(func_deadly, func_other)$/;"	f	file:
catch_signals	src/os_unix.c	/^static void catch_signals __ARGS((RETSIGTYPE (*func_deadly)(), RETSIGTYPE (*func_other)()));$/;"	p	file:	signature:(RETSIGTYPE (*func_deadly)(), RETSIGTYPE (*func_other)())
catchcmd	src/if_tcl.c	/^catchcmd(dummy, interp, objc, objv)$/;"	f	file:
caught	src/structs.h	/^    except_T		*caught;	\/* next exception on the caught stack *\/$/;"	m	struct:vim_exception	access:public
caught	src/testdir/test49.vim	/^		let caught = 0$/;"	v
caught	src/testdir/test49.vim	/^		let caught = 1$/;"	v
caught	src/testdir/test49.vim	/^	    let caught = 0$/;"	v
caught	src/testdir/test49.vim	/^	    let caught = 1$/;"	v
caught	src/testdir/test49.vim	/^	let caught = 0$/;"	v
caught_stack	src/ex_docmd.c	/^    except_T	*caught_stack;$/;"	m	struct:dbg_stuff	file:	access:public
caught_stack	src/globals.h	/^EXTERN except_T *caught_stack INIT(= NULL);$/;"	v
cause_abort	src/ex_eval.c	/^static int cause_abort = FALSE;$/;"	v	file:
cause_errthrow	src/ex_eval.c	/^cause_errthrow(mesg, severe, ignore)$/;"	f
cb	src/structs.h	/^    void	(*cb) __ARGS((vimmenu_T *));	    \/* Call-back routine *\/$/;"	m	struct:VimMenu	access:public
cbFiles	src/GvimExt/gvimext.cpp	/^UINT cbFiles = 0;$/;"	v
cbSize	src/gui_w32.c	/^	UINT cbSize;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
cbSize	src/gui_w32.c	/^    DWORD cbSize;$/;"	m	struct:_DllVersionInfo	file:	access:public
cbSize	src/gui_w32.c	/^    DWORD cbSize;$/;"	m	struct:_MONITORINFOstruct	file:	access:public
cbrk_handler	src/os_msdos.c	/^cbrk_handler(void)$/;"	f	file:	signature:(void)
cbrk_pressed	src/os_msdos.c	/^static int cbrk_pressed = FALSE;    \/* set by ctrl-break interrupt *\/$/;"	v	file:
ccheck_abbr	src/ex_getln.c	/^ccheck_abbr(c)$/;"	f	file:
ccheck_abbr	src/ex_getln.c	/^static int	ccheck_abbr __ARGS((int));$/;"	p	file:	signature:(int)
ccline	src/ex_getln.c	/^static struct cmdline_info ccline;$/;"	v	typeref:struct:cmdline_info	file:
ccomplete#Complete	runtime/autoload/ccomplete.vim	/^function! ccomplete#Complete(findstart, base)$/;"	f
cedit_key	src/globals.h	/^EXTERN int	cedit_key INIT(= -1);	\/* key value of 'cedit' option *\/$/;"	v
cf	src/if_ole.cpp	/^static CVimCF *cf = 0;$/;"	v	file:
cf_id	src/if_ole.cpp	/^static unsigned long cf_id = 0;$/;"	v	file:
chAlone	src/os_win32.c	/^    int	    chAlone;$/;"	m	struct:__anon89	file:	access:public
chAlt	src/os_win32.c	/^    int	    chAlt;$/;"	m	struct:__anon89	file:	access:public
chCtrl	src/os_win32.c	/^    int	    chCtrl;$/;"	m	struct:__anon89	file:	access:public
chShift	src/os_win32.c	/^    int	    chShift;$/;"	m	struct:__anon89	file:	access:public
change_bat_choice	src/dosinst.c	/^change_bat_choice(int idx)$/;"	f	file:	signature:(int idx)
change_compatible	src/option.c	/^change_compatible(on)$/;"	f
change_directories_choice	src/dosinst.c	/^change_directories_choice(int idx)$/;"	f	file:	signature:(int idx)
change_drive	src/dosinst.h	/^change_drive(int drive)$/;"	f	signature:(int drive)
change_drive	src/os_msdos.c	/^change_drive(int drive)$/;"	f	file:	signature:(int drive)
change_indent	src/edit.c	/^change_indent(type, amount, round, replaced, call_changed_bytes)$/;"	f
change_main_bat_choice	src/dosinst.c	/^change_main_bat_choice(int idx)$/;"	f	file:	signature:(int idx)
change_mouse_choice	src/dosinst.c	/^change_mouse_choice(int idx)$/;"	f	file:	signature:(int idx)
change_openwith_choice	src/dosinst.c	/^change_openwith_choice(int idx)$/;"	f	file:	signature:(int idx)
change_popup_choice	src/dosinst.c	/^change_popup_choice(int idx)$/;"	f	file:	signature:(int idx)
change_remap_choice	src/dosinst.c	/^change_remap_choice(int idx)$/;"	f	file:	signature:(int idx)
change_run_choice	src/dosinst.c	/^change_run_choice(int idx)$/;"	f	file:	signature:(int idx)
change_vimrc_choice	src/dosinst.c	/^change_vimrc_choice(int idx)$/;"	f	file:	signature:(int idx)
change_warning	src/misc1.c	/^change_warning(col)$/;"	f
changed	src/gui_at_fs.c	/^    int		changed;$/;"	m	struct:__anon114	file:	access:public
changed	src/misc1.c	/^changed()$/;"	f
changedOneline	src/misc1.c	/^changedOneline(buf, lnum)$/;"	f	file:
changedOneline	src/misc1.c	/^static void changedOneline __ARGS((buf_T *buf, linenr_T lnum));$/;"	p	file:	signature:(buf_T *buf, linenr_T lnum)
changed_bytes	src/misc1.c	/^changed_bytes(lnum, col)$/;"	f
changed_cline_bef_curs	src/move.c	/^changed_cline_bef_curs()$/;"	f
changed_cline_bef_curs_win	src/move.c	/^changed_cline_bef_curs_win(wp)$/;"	f
changed_common	src/misc1.c	/^changed_common(lnum, col, lnume, xtra)$/;"	f	file:
changed_common	src/misc1.c	/^static void changed_common __ARGS((linenr_T lnum, colnr_T col, linenr_T lnume, long xtra));$/;"	p	file:	signature:(linenr_T lnum, colnr_T col, linenr_T lnume, long xtra)
changed_int	src/misc1.c	/^changed_int()$/;"	f
changed_line_abv_curs	src/move.c	/^changed_line_abv_curs()$/;"	f
changed_line_abv_curs_win	src/move.c	/^changed_line_abv_curs_win(wp)$/;"	f
changed_lines	src/misc1.c	/^changed_lines(lnum, col, lnume, xtra)$/;"	f
changed_lines_buf	src/misc1.c	/^changed_lines_buf(buf, lnum, lnume, xtra)$/;"	f	file:
changed_lines_buf	src/misc1.c	/^static void changed_lines_buf __ARGS((buf_T *buf, linenr_T lnum, linenr_T lnume, long xtra));$/;"	p	file:	signature:(buf_T *buf, linenr_T lnum, linenr_T lnume, long xtra)
changed_mode	src/gui_riscos.c	/^int changed_mode = FALSE;$/;"	v
changed_window_setting	src/move.c	/^changed_window_setting()$/;"	f
changed_window_setting_win	src/move.c	/^changed_window_setting_win(wp)$/;"	f
changefunc	src/dosinst.c	/^    void    (*changefunc)(int idx);	\/* function to change this choice *\/$/;"	m	struct:choice	file:	access:public
changelogMenu	runtime/ftplugin/debchangelog.vim	/^augroup changelogMenu$/;"	a
channel_close	src/if_tcl.c	/^channel_close(instance, interp)$/;"	f	file:
channel_gethandle	src/if_tcl.c	/^channel_gethandle(instance, direction, handleptr)$/;"	f	file:
channel_input	src/if_tcl.c	/^channel_input(instance, buf, bufsiz, errptr)$/;"	f	file:
channel_output	src/if_tcl.c	/^channel_output(instance, buf, bufsiz, errptr)$/;"	f	file:
channel_type	src/if_tcl.c	/^static Tcl_ChannelType channel_type =$/;"	v	file:
channel_watch	src/if_tcl.c	/^channel_watch(instance, mask)$/;"	f	file:
char1	src/digraph.c	/^    char_u	char1;$/;"	m	struct:digraph	file:	access:public
char2	src/digraph.c	/^    char_u	char2;$/;"	m	struct:digraph	file:	access:public
char2cells	src/charset.c	/^char2cells(c)$/;"	f
char_ascent	src/gui.h	/^    int		char_ascent;	    \/* Ascent of char in pixels *\/$/;"	m	struct:Gui	access:public
char_avail	src/getchar.c	/^char_avail()$/;"	f
char_height	src/gui.h	/^    int		char_height;	    \/* Height of char cell in pixels, includes$/;"	m	struct:Gui	access:public
char_needs_redraw	src/screen.c	/^char_needs_redraw(off_from, off_to, cols)$/;"	f	file:
char_needs_redraw	src/screen.c	/^static int char_needs_redraw __ARGS((int off_from, int off_to, int cols));$/;"	p	file:	signature:(int off_from, int off_to, int cols)
char_to_long	src/memline.c	/^char_to_long(s)$/;"	f	file:
char_to_long	src/memline.c	/^static long char_to_long __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
char_to_string	src/gui_w48.c	/^char_to_string(int ch, char_u *string, int slen, int had_alt)$/;"	f	file:	signature:(int ch, char_u *string, int slen, int had_alt)
char_u	src/term.h	/^typedef unsigned char char_u;$/;"	t
char_u	src/vim.h	/^typedef unsigned char	char_u;$/;"	t
char_width	src/gui.h	/^    int		char_width;	    \/* Width of char cell in pixels *\/$/;"	m	struct:Gui	access:public
character_present	src/os_beos.c	/^sem_id character_present;$/;"	v
character_wanted	src/os_beos.c	/^sem_id character_wanted;$/;"	v
charbuf	src/os_beos.c	/^char_u charbuf;$/;"	v
charcount	src/os_beos.c	/^signed char charcount;$/;"	v
chars	runtime/syntax/xpm.vim	/^	 let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	runtime/syntax/xpm.vim	/^	 let chars = substitute(chars, '.$', '', '')$/;"	v
chars	runtime/syntax/xpm.vim	/^	 let chars = substitute(s, '"\\(.\\{'.cpp.'}\\s\\).*"', '\\1', '')$/;"	v
chars	runtime/syntax/xpm.vim	/^let chars  = ""$/;"	v
chars	runtime/syntax/xpm2.vim	/^	let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	runtime/syntax/xpm2.vim	/^	let chars = substitute(chars, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
chars	runtime/syntax/xpm2.vim	/^	let chars = substitute(chars, '\\\\s\\\\+$', '', '')$/;"	v
chars	runtime/syntax/xpm2.vim	/^	let chars = substitute(s, '\\(.\\{'.cpp.'}\\s\\+\\).*', '\\1', '')$/;"	v
chars	runtime/syntax/xpm2.vim	/^  let chars  = ""$/;"	v
chars_per_line	src/structs.h	/^    int		chars_per_line;$/;"	m	struct:__anon60	access:public
charset	src/gui_motif.c	/^static XmStringCharSet charset = (XmStringCharSet) XmSTRING_DEFAULT_CHARSET;$/;"	v	file:
charset	src/hardcopy.c	/^    char	*charset;$/;"	m	struct:prt_ps_charset_S	file:	access:public
charset	src/os_mswin.c	/^    BYTE	charset;$/;"	m	struct:charset_pair	file:	access:public
charset	src/po/Makefile	/^		sed -e 's\/charset=ISO-8859-2\/charset=cp1250\/' -e 's\/# Original translations\/# Generated from cs.po, DO NOT EDIT\/' > cs.cp1250.po$/;"	m
charset	src/po/Makefile	/^		sed -e 's\/charset=ISO-8859-2\/charset=cp1250\/' -e 's\/# Original translations\/# Generated from pl.po, DO NOT EDIT\/' > pl.cp1250.po$/;"	m
charset	src/po/Makefile	/^		sed -e 's\/charset=ISO-8859-2\/charset=cp1250\/' -e 's\/# Original translations\/# Generated from sk.po, DO NOT EDIT\/' > sk.cp1250.po$/;"	m
charset	src/po/Makefile	/^		sed -e 's\/charset=ISO-8859-2\/charset=utf-8\/' -e 's\/# Original translations\/# Generated from pl.po, DO NOT EDIT\/' > pl.UTF-8.po$/;"	m
charset	src/po/Makefile	/^		sed -e 's\/charset=UTF-8\/charset=euc-kr\/' \\$/;"	m
charset	src/po/Makefile	/^		sed -e 's\/charset=gb2312\/charset=gbk\/' -e 's\/# Original translations\/# Generated from zh_CN.po, DO NOT EDIT\/' > zh_CN.cp936.po$/;"	m
charset	src/po/Makefile	/^		sed -e 's\/charset=utf-8\/charset=cp1251\/' -e 's\/# Original translations\/# Generated from ru.po, DO NOT EDIT\/' > ru.cp1251.po$/;"	m
charset	src/po/Makefile	/^		sed -e 's\/charset=utf-8\/charset=cp1251\/' -e 's\/# Original translations\/# Generated from uk.po, DO NOT EDIT\/' > uk.cp1251.po$/;"	m
charset_id2name	src/os_mswin.c	/^charset_id2name(int id)$/;"	f	signature:(int id)
charset_pair	src/os_mswin.c	/^struct charset_pair$/;"	s	file:
charset_pair::charset	src/os_mswin.c	/^    BYTE	charset;$/;"	m	struct:charset_pair	file:	access:public
charset_pair::name	src/os_mswin.c	/^    char	*name;$/;"	m	struct:charset_pair	file:	access:public
charset_pairs	src/os_mswin.c	/^charset_pairs[] =$/;"	v	typeref:struct:charset_pair	file:
charset_translate	src/gui_photon.c	/^static struct PxTransCtrl *charset_translate;$/;"	v	typeref:struct:PxTransCtrl	file:
charsets	src/hardcopy.c	/^    struct prt_ps_charset_S	*charsets;$/;"	m	struct:prt_ps_mbfont_S	typeref:struct:prt_ps_mbfont_S::prt_ps_charset_S	file:	access:public
chartab	src/globals.h	/^EXTERN char_u	chartab[256];		\/* table used in charset.c; See$/;"	v
chartab_initialized	src/charset.c	/^static int    chartab_initialized = FALSE;$/;"	v	file:
chartabsize	src/charset.c	/^chartabsize(p, col)$/;"	f
chdir	src/os_mswin.c	39;"	d	file:
chdir	src/os_win16.c	34;"	d	file:
chdir	src/os_win32.c	36;"	d	file:
chdir	src/vim.h	307;"	d
check	runtime/autoload/gzip.vim	/^fun s:check(cmd)$/;"	f
checkCloseRec	src/fold.c	/^checkCloseRec(gap, lnum, level)$/;"	f	file:
checkCloseRec	src/fold.c	/^static int checkCloseRec __ARGS((garray_T *gap, linenr_T lnum, int level));$/;"	p	file:	signature:(garray_T *gap, linenr_T lnum, int level)
checkSmall	src/fold.c	/^checkSmall(wp, fp, lnum_off)$/;"	f	file:
checkSmall	src/fold.c	/^static void checkSmall __ARGS((win_T *wp, fold_T *fp, linenr_T lnum_off));$/;"	p	file:	signature:(win_T *wp, fold_T *fp, linenr_T lnum_off)
check_abbr	src/getchar.c	/^check_abbr(c, ptr, col, mincol)$/;"	f
check_arg_idx	src/ex_cmds2.c	/^check_arg_idx(win)$/;"	f
check_auto_format	src/edit.c	/^check_auto_format(end_insert)$/;"	f	file:
check_auto_format	src/edit.c	/^static void check_auto_format __ARGS((int));$/;"	p	file:	signature:(int)
check_buf_options	src/option.c	/^check_buf_options(buf)$/;"	f
check_cedit	src/option.c	/^check_cedit()$/;"	f	file:
check_cedit	src/option.c	/^static char_u *check_cedit __ARGS((void));$/;"	p	file:	signature:(void)
check_changed	src/ex_cmds2.c	/^check_changed(buf, checkaw, mult_win, forceit, allbuf)$/;"	f
check_changed_any	src/ex_cmds2.c	/^check_changed_any(hidden)$/;"	f
check_changedtick	src/eval.c	/^check_changedtick(arg)$/;"	f	file:
check_changedtick	src/eval.c	/^static int check_changedtick __ARGS((char_u *arg));$/;"	p	file:	signature:(char_u *arg)
check_clipboard_option	src/option.c	/^check_clipboard_option()$/;"	f	file:
check_clipboard_option	src/option.c	/^static char_u *check_clipboard_option __ARGS((void));$/;"	p	file:	signature:(void)
check_closed	src/fold.c	/^check_closed(win, fp, use_levelp, level, maybe_smallp, lnum_off)$/;"	f	file:
check_closed	src/fold.c	/^static int check_closed __ARGS((win_T *win, fold_T *fp, int *use_levelp, int level, int *maybe_smallp, linenr_T lnum_off));$/;"	p	file:	signature:(win_T *win, fold_T *fp, int *use_levelp, int level, int *maybe_smallp, linenr_T lnum_off)
check_col	src/ui.c	/^check_col(col)$/;"	f
check_colorcolumn	src/option.c	/^check_colorcolumn(wp)$/;"	f
check_connection	src/eval.c	/^check_connection()$/;"	f	file:
check_connection	src/eval.c	/^static int check_connection __ARGS((void));$/;"	p	file:	signature:(void)
check_copy_area	src/gui_gtk_x11.c	/^check_copy_area(void)$/;"	f	file:	signature:(void)
check_cstack	src/ex_docmd.c	/^    int		check_cstack;$/;"	m	struct:dbg_stuff	file:	access:public
check_cstack	src/globals.h	/^EXTERN int check_cstack INIT(= FALSE);$/;"	v
check_cursor	src/misc2.c	/^check_cursor()$/;"	f
check_cursor_col	src/misc2.c	/^check_cursor_col()$/;"	f
check_cursor_lnum	src/misc2.c	/^check_cursor_lnum()$/;"	f
check_cursor_moved	src/move.c	/^check_cursor_moved(wp)$/;"	f
check_ei	src/fileio.c	/^check_ei()$/;"	f
check_ff_value	src/option.c	/^check_ff_value(p)$/;"	f
check_file_readonly	src/fileio.c	/^check_file_readonly(fname, perm)$/;"	f
check_fname	src/ex_cmds2.c	/^check_fname()$/;"	f
check_fontset_sanity	src/gui_x11.c	/^check_fontset_sanity(fs)$/;"	f	file:
check_fontset_sanity	src/gui_x11.c	/^static int check_fontset_sanity __ARGS((XFontSet fs));$/;"	p	file:	signature:(XFontSet fs)
check_for_bom	src/fileio.c	/^check_for_bom(p, size, lenp, flags)$/;"	f	file:
check_for_bom	src/fileio.c	/^static char_u *check_for_bom __ARGS((char_u *p, long size, int *lenp, int flags));$/;"	p	file:	signature:(char_u *p, long size, int *lenp, int flags)
check_for_codes	src/term.c	/^static int	check_for_codes = FALSE;    \/* check for key code response *\/$/;"	v	file:
check_for_codes_from_term	src/term.c	/^check_for_codes_from_term()$/;"	f	file:
check_for_codes_from_term	src/term.c	/^static void check_for_codes_from_term __ARGS((void));$/;"	p	file:	signature:(void)
check_for_cryptkey	src/fileio.c	/^check_for_cryptkey(cryptkey, ptr, sizep, filesizep, newfile, fname, did_ask)$/;"	f	file:
check_for_cryptkey	src/fileio.c	/^static char_u *check_for_cryptkey __ARGS((char_u *cryptkey, char_u *ptr, long *sizep, off_t *filesizep, int newfile, char_u *fname, int *did_ask));$/;"	p	file:	signature:(char_u *cryptkey, char_u *ptr, long *sizep, off_t *filesizep, int newfile, char_u *fname, int *did_ask)
check_for_delay	src/screen.c	/^check_for_delay(check_msg_scroll)$/;"	f
check_help_lang	src/ex_cmds.c	/^check_help_lang(arg)$/;"	f
check_keepend	src/syntax.c	/^check_keepend()$/;"	f	file:
check_keepend	src/syntax.c	/^static void check_keepend __ARGS((void));$/;"	p	file:	signature:(void)
check_keyword_id	src/syntax.c	/^check_keyword_id(line, startcol, endcolp, flagsp, next_listp, cur_si, ccharp)$/;"	f	file:
check_keyword_id	src/syntax.c	/^static int check_keyword_id __ARGS((char_u *line, int startcol, int *endcol, long *flags, short **next_list, stateitem_T *cur_si, int *ccharp));$/;"	p	file:	signature:(char_u *line, int startcol, int *endcol, long *flags, short **next_list, stateitem_T *cur_si, int *ccharp)
check_line_range	src/if_mzsch.c	/^check_line_range(linenr_T lnum, buf_T *buf)$/;"	f	file:	signature:(linenr_T lnum, buf_T *buf)
check_line_range	src/if_mzsch.c	/^static void check_line_range(linenr_T, buf_T *);$/;"	p	file:	signature:(linenr_T, buf_T *)
check_linecomment	src/search.c	/^check_linecomment(line)$/;"	f	file:
check_linecomment	src/search.c	/^static int check_linecomment __ARGS((char_u *line));$/;"	p	file:	signature:(char_u *line)
check_lnums	src/window.c	/^check_lnums(do_curwin)$/;"	f
check_map	src/getchar.c	/^check_map(keys, mode, exact, ign_mod, abbr)$/;"	f
check_map_keycodes	src/getchar.c	/^check_map_keycodes()$/;"	f
check_mark	src/mark.c	/^check_mark(pos)$/;"	f
check_marks_read	src/fileio.c	/^check_marks_read()$/;"	f	file:
check_marks_read	src/fileio.c	/^static void check_marks_read __ARGS((void));$/;"	p	file:	signature:(void)
check_menu_pointer	src/menu.c	/^check_menu_pointer(root, menu_to_check)$/;"	f
check_more	src/ex_docmd.c	/^check_more(message, forceit)$/;"	f	file:
check_more	src/ex_docmd.c	/^static int	check_more __ARGS((int, int));$/;"	p	file:	signature:(int, int)
check_mouse_termcode	src/os_unix.c	/^check_mouse_termcode()$/;"	f
check_mtime	src/fileio.c	/^check_mtime(buf, st)$/;"	f	file:
check_mtime	src/fileio.c	/^static int check_mtime __ARGS((buf_T *buf, struct stat *s));$/;"	p	file:	signature:(buf_T *buf, struct stat *s)
check_need_cap	src/spell.c	/^check_need_cap(lnum, col)$/;"	f	file:
check_need_cap	src/spell.c	/^static int check_need_cap __ARGS((linenr_T lnum, colnr_T col));$/;"	p	file:	signature:(linenr_T lnum, colnr_T col)
check_need_swap	src/memline.c	/^check_need_swap(newfile)$/;"	f
check_nextcmd	src/ex_docmd.c	/^check_nextcmd(p)$/;"	f
check_opt_strings	src/option.c	/^check_opt_strings(val, values, list)$/;"	f	file:
check_opt_strings	src/option.c	/^static int check_opt_strings __ARGS((char_u *val, char **values, int));$/;"	p	file:	signature:(char_u *val, char **values, int)
check_opt_wim	src/option.c	/^check_opt_wim()$/;"	f	file:
check_opt_wim	src/option.c	/^static int check_opt_wim __ARGS((void));$/;"	p	file:	signature:(void)
check_options	src/option.c	/^check_options()$/;"	f
check_overwrite	src/ex_cmds.c	/^check_overwrite(eap, buf, fname, ffname, other)$/;"	f	file:
check_overwrite	src/ex_cmds.c	/^static int check_overwrite __ARGS((exarg_T *eap, buf_T *buf, char_u *fname, char_u *ffname, int other));$/;"	p	file:	signature:(exarg_T *eap, buf_T *buf, char_u *fname, char_u *ffname, int other)
check_prevcol	src/search.c	/^check_prevcol(linep, col, ch, prevcol)$/;"	f	file:
check_prevcol	src/search.c	/^static int check_prevcol __ARGS((char_u *linep, int col, int ch, int *prevcol));$/;"	p	file:	signature:(char_u *linep, int col, int ch, int *prevcol)
check_readonly	src/ex_cmds.c	/^check_readonly(forceit, buf)$/;"	f	file:
check_readonly	src/ex_cmds.c	/^static int check_readonly __ARGS((int *forceit, buf_T *buf));$/;"	p	file:	signature:(int *forceit, buf_T *buf)
check_redraw	src/option.c	/^check_redraw(flags)$/;"	f	file:
check_redraw	src/option.c	/^static void check_redraw __ARGS((long_u flags));$/;"	p	file:	signature:(long_u flags)
check_renumber	src/spell.c	/^check_renumber(spin)$/;"	f	file:
check_renumber	src/spell.c	/^static void check_renumber __ARGS((spellinfo_T *spin));$/;"	p	file:	signature:(spellinfo_T *spin)
check_restricted	src/ex_cmds.c	/^check_restricted()$/;"	f
check_row	src/ui.c	/^check_row(row)$/;"	f
check_scrollbind	src/normal.c	/^check_scrollbind(topline_diff, leftcol_diff)$/;"	f
check_secure	src/ex_cmds.c	/^check_secure()$/;"	f
check_shell	runtime/tools/shtags.pl	/^sub check_shell$/;"	s
check_shellsize	src/term.c	/^check_shellsize()$/;"	f
check_snapshot_rec	src/window.c	/^check_snapshot_rec(sn, fr)$/;"	f	file:
check_snapshot_rec	src/window.c	/^static int check_snapshot_rec __ARGS((frame_T *sn, frame_T *fr));$/;"	p	file:	signature:(frame_T *sn, frame_T *fr)
check_spell_redraw	src/edit.c	/^check_spell_redraw()$/;"	f	file:
check_spell_redraw	src/edit.c	/^static void check_spell_redraw __ARGS((void));$/;"	p	file:	signature:(void)
check_stack_growth	src/os_unix.c	/^check_stack_growth(p)$/;"	f	file:
check_stack_growth	src/os_unix.c	/^static void check_stack_growth __ARGS((char *p));$/;"	p	file:	signature:(char *p)
check_startup_plug_hints	src/gui_gtk_x11.c	/^check_startup_plug_hints(gpointer data UNUSED)$/;"	f	file:	signature:(gpointer data UNUSED)
check_state_ends	src/syntax.c	/^check_state_ends()$/;"	f	file:
check_state_ends	src/syntax.c	/^static void check_state_ends __ARGS((void));$/;"	p	file:	signature:(void)
check_status	src/misc1.c	/^check_status(buf)$/;"	f
check_stl_option	src/option.c	/^check_stl_option(s)$/;"	f
check_str_len	src/os_mswin.c	/^check_str_len(char_u *str)$/;"	f	file:	signature:(char_u *str)
check_string_option	src/option.c	/^check_string_option(pp)$/;"	f	file:
check_string_option	src/option.c	/^static void check_string_option __ARGS((char_u **pp));$/;"	p	file:	signature:(char_u **pp)
check_suggestions	src/spell.c	/^check_suggestions(su, gap)$/;"	f	file:
check_suggestions	src/spell.c	/^static void check_suggestions __ARGS((suginfo_T *su, garray_T *gap));$/;"	p	file:	signature:(suginfo_T *su, garray_T *gap)
check_swap_exists_action	src/main.c	/^check_swap_exists_action()$/;"	f	file:
check_swap_exists_action	src/main.c	/^static void check_swap_exists_action __ARGS((void));$/;"	p	file:	signature:(void)
check_termcode	src/term.c	/^check_termcode(max_offset, buf, buflen)$/;"	f
check_timestamps	src/fileio.c	/^check_timestamps(focus)$/;"	f
check_top_offset	src/move.c	/^check_top_offset()$/;"	f	file:
check_top_offset	src/move.c	/^static int check_top_offset __ARGS((void));$/;"	p	file:	signature:(void)
check_topfill	src/move.c	/^check_topfill(wp, down)$/;"	f
check_tty	src/main.c	/^check_tty(parmp)$/;"	f	file:
check_tty	src/main.c	/^static void check_tty __ARGS((mparm_T *parmp));$/;"	p	file:	signature:(mparm_T *parmp)
check_unpack	src/dosinst.c	/^check_unpack(void)$/;"	f	file:	signature:(void)
check_visual_highlight	src/normal.c	/^check_visual_highlight()$/;"	f
check_win_options	src/option.c	/^check_win_options(win)$/;"	f
check_winopt	src/option.c	/^check_winopt(wop)$/;"	f
check_xpm	src/gui_motif.c	/^check_xpm(path)$/;"	f	file:
check_xpm	src/gui_motif.c	/^static int check_xpm __ARGS((char_u *path));$/;"	p	file:	signature:(char_u *path)
checkclearop	src/normal.c	/^checkclearop(oap)$/;"	f	file:
checkclearop	src/normal.c	/^static int	checkclearop __ARGS((oparg_T *oap));$/;"	p	file:	signature:(oparg_T *oap)
checkclearopq	src/normal.c	/^checkclearopq(oap)$/;"	f	file:
checkclearopq	src/normal.c	/^static int	checkclearopq __ARGS((oparg_T *oap));$/;"	p	file:	signature:(oparg_T *oap)
checkforcmd	src/ex_docmd.c	/^checkforcmd(pp, cmd, len)$/;"	f
checkpcmark	src/mark.c	/^checkpcmark()$/;"	f
checkupdate	src/fold.c	/^checkupdate(wp)$/;"	f	file:
checkupdate	src/fold.c	/^static void checkupdate __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
chg_c_a2f	src/arabic.c	/^chg_c_a2f(cur_c)$/;"	f	file:
chg_c_a2f	src/arabic.c	/^static int  chg_c_a2f __ARGS((int cur_c));$/;"	p	file:	signature:(int cur_c)
chg_c_a2i	src/arabic.c	/^chg_c_a2i(cur_c)$/;"	f	file:
chg_c_a2i	src/arabic.c	/^static int  chg_c_a2i __ARGS((int cur_c));$/;"	p	file:	signature:(int cur_c)
chg_c_a2m	src/arabic.c	/^chg_c_a2m(cur_c)$/;"	f	file:
chg_c_a2m	src/arabic.c	/^static int  chg_c_a2m __ARGS((int cur_c));$/;"	p	file:	signature:(int cur_c)
chg_c_a2s	src/arabic.c	/^chg_c_a2s(cur_c)$/;"	f	file:
chg_c_a2s	src/arabic.c	/^static int  chg_c_a2s __ARGS((int cur_c));$/;"	p	file:	signature:(int cur_c)
chg_c_f2m	src/arabic.c	/^chg_c_f2m(cur_c)$/;"	f	file:
chg_c_f2m	src/arabic.c	/^static int  chg_c_f2m __ARGS((int cur_c));$/;"	p	file:	signature:(int cur_c)
chg_c_i2m	src/arabic.c	/^chg_c_i2m(cur_c)$/;"	f	file:
chg_c_i2m	src/arabic.c	/^static int  chg_c_i2m __ARGS((int cur_c));$/;"	p	file:	signature:(int cur_c)
chg_c_laa2f	src/arabic.c	/^chg_c_laa2f(hid_c)$/;"	f	file:
chg_c_laa2f	src/arabic.c	/^static int  chg_c_laa2f __ARGS((int hid_c));$/;"	p	file:	signature:(int hid_c)
chg_c_laa2i	src/arabic.c	/^chg_c_laa2i(hid_c)$/;"	f	file:
chg_c_laa2i	src/arabic.c	/^static int  chg_c_laa2i __ARGS((int hid_c));$/;"	p	file:	signature:(int hid_c)
chg_c_toX_orX	src/farsi.c	/^chg_c_toX_orX()$/;"	f	file:
chg_c_toX_orX	src/farsi.c	/^static void chg_c_toX_orX __ARGS((void));$/;"	p	file:	signature:(void)
chg_c_to_X_orX_	src/farsi.c	/^chg_c_to_X_orX_()$/;"	f	file:
chg_c_to_X_orX_	src/farsi.c	/^static void chg_c_to_X_orX_ __ARGS((void));$/;"	p	file:	signature:(void)
chg_c_to_X_or_X	src/farsi.c	/^chg_c_to_X_or_X ()$/;"	f	file:
chg_c_to_X_or_X	src/farsi.c	/^static void chg_c_to_X_or_X __ARGS((void));$/;"	p	file:	signature:(void)
chg_l_toXor_X	src/farsi.c	/^chg_l_toXor_X ()$/;"	f	file:
chg_l_toXor_X	src/farsi.c	/^static void chg_l_toXor_X __ARGS((void));$/;"	p	file:	signature:(void)
chg_l_to_X_orX_	src/farsi.c	/^chg_l_to_X_orX_ ()$/;"	f	file:
chg_l_to_X_orX_	src/farsi.c	/^static void chg_l_to_X_orX_ __ARGS((void));$/;"	p	file:	signature:(void)
chg_r_to_Xor_X_	src/farsi.c	/^chg_r_to_Xor_X_()$/;"	f	file:
chg_r_to_Xor_X_	src/farsi.c	/^static void chg_r_to_Xor_X_ __ARGS((void));$/;"	p	file:	signature:(void)
child_handle	src/gui_riscos.c	/^int child_handle = 0;		\/* Task handle of our child process (zero if none). *\/$/;"	v
children	src/gui_gtk_f.h	/^    GList *children;$/;"	m	struct:_GtkForm	access:public
children	src/structs.h	/^    vimmenu_T	*children;	    \/* Children of sub-menu *\/$/;"	m	struct:VimMenu	access:public
chill_minlines	runtime/syntax/chill.vim	/^  let chill_minlines = 15$/;"	v
chk_modeline	src/buffer.c	/^chk_modeline(lnum, flags)$/;"	f	file:
chk_modeline	src/buffer.c	/^static int  chk_modeline __ARGS((linenr_T, int));$/;"	p	file:	signature:(linenr_T, int)
choice	src/dosinst.c	/^struct choice$/;"	s	file:
choice::active	src/dosinst.c	/^    int	    active;			\/* non-zero when choice is active *\/$/;"	m	struct:choice	file:	access:public
choice::arg	src/dosinst.c	/^    int	    arg;			\/* argument for function *\/$/;"	m	struct:choice	file:	access:public
choice::changefunc	src/dosinst.c	/^    void    (*changefunc)(int idx);	\/* function to change this choice *\/$/;"	m	struct:choice	file:	access:public
choice::installfunc	src/dosinst.c	/^    void    (*installfunc)(int idx);	\/* function to install this choice *\/$/;"	m	struct:choice	file:	access:public
choice::text	src/dosinst.c	/^    char    *text;			\/* text displayed for this choice *\/$/;"	m	struct:choice	file:	access:public
choice_count	src/dosinst.c	/^int		choice_count = 0;	\/* number of choices available *\/$/;"	v
choices	src/dosinst.c	/^struct choice	choices[30];		\/* choices the user can make *\/$/;"	v	typeref:struct:choice
choose	runtime/ftplugin/gitrebase.vim	/^function! s:choose(word)$/;"	f
chunksize_T	src/structs.h	/^} chunksize_T;$/;"	t	typeref:struct:ml_chunksize
ci_flag	src/spell.c	/^    unsigned	ci_flag;	\/* affix name as number, uses "af_flagtype" *\/$/;"	m	struct:compitem_S	file:	access:public
ci_key	src/spell.c	/^    char_u	ci_key[AH_KEY_LEN]; \/* key for hashtab == name of compound *\/$/;"	m	struct:compitem_S	file:	access:public
ci_newID	src/spell.c	/^    int		ci_newID;	\/* affix ID after renumbering. *\/$/;"	m	struct:compitem_S	file:	access:public
cin_ends_in	src/misc1.c	/^cin_ends_in(s, find, ignore)$/;"	f	file:
cin_ends_in	src/misc1.c	/^static int	cin_ends_in __ARGS((char_u *, char_u *, char_u *));$/;"	p	file:	signature:(char_u *, char_u *, char_u *)
cin_first_id_amount	src/misc1.c	/^cin_first_id_amount()$/;"	f	file:
cin_first_id_amount	src/misc1.c	/^static int	cin_first_id_amount __ARGS((void));$/;"	p	file:	signature:(void)
cin_get_equal_amount	src/misc1.c	/^cin_get_equal_amount(lnum)$/;"	f	file:
cin_get_equal_amount	src/misc1.c	/^static int	cin_get_equal_amount __ARGS((linenr_T lnum));$/;"	p	file:	signature:(linenr_T lnum)
cin_is_cinword	src/misc1.c	/^cin_is_cinword(line)$/;"	f	file:
cin_is_cinword	src/misc1.c	/^static int cin_is_cinword __ARGS((char_u *line));$/;"	p	file:	signature:(char_u *line)
cin_is_cpp_baseclass	src/misc1.c	/^cin_is_cpp_baseclass(col)$/;"	f	file:
cin_is_cpp_baseclass	src/misc1.c	/^static int	cin_is_cpp_baseclass __ARGS((colnr_T *col));$/;"	p	file:	signature:(colnr_T *col)
cin_isbreak	src/misc1.c	/^cin_isbreak(p)$/;"	f	file:
cin_isbreak	src/misc1.c	/^static int	cin_isbreak __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
cin_iscase	src/misc1.c	/^cin_iscase(s, strict)$/;"	f
cin_iscomment	src/misc1.c	/^cin_iscomment(p)$/;"	f	file:
cin_iscomment	src/misc1.c	/^static int	cin_iscomment __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
cin_isdefault	src/misc1.c	/^cin_isdefault(s)$/;"	f	file:
cin_isdefault	src/misc1.c	/^static int	cin_isdefault __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
cin_isdo	src/misc1.c	/^cin_isdo(p)$/;"	f	file:
cin_isdo	src/misc1.c	/^static int	cin_isdo __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
cin_iselse	src/misc1.c	/^cin_iselse(p)$/;"	f	file:
cin_iselse	src/misc1.c	/^static int	cin_iselse __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
cin_isfuncdecl	src/misc1.c	/^cin_isfuncdecl(sp, first_lnum)$/;"	f	file:
cin_isfuncdecl	src/misc1.c	/^static int	cin_isfuncdecl __ARGS((char_u **, linenr_T));$/;"	p	file:	signature:(char_u **, linenr_T)
cin_isif	src/misc1.c	/^cin_isif(p)$/;"	f	file:
cin_isif	src/misc1.c	/^static int	cin_isif __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
cin_isinit	src/misc1.c	/^cin_isinit(void)$/;"	f	file:	signature:(void)
cin_isinit	src/misc1.c	/^static int	cin_isinit __ARGS((void));$/;"	p	file:	signature:(void)
cin_islabel	src/misc1.c	/^cin_islabel(ind_maxcomment)		\/* XXX *\/$/;"	f
cin_islabel_skip	src/misc1.c	/^cin_islabel_skip(s)$/;"	f	file:
cin_islabel_skip	src/misc1.c	/^static int	cin_islabel_skip __ARGS((char_u **));$/;"	p	file:	signature:(char_u **)
cin_islinecomment	src/misc1.c	/^cin_islinecomment(p)$/;"	f	file:
cin_islinecomment	src/misc1.c	/^static int	cin_islinecomment __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
cin_ispreproc	src/misc1.c	/^cin_ispreproc(s)$/;"	f	file:
cin_ispreproc	src/misc1.c	/^static int	cin_ispreproc __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
cin_ispreproc_cont	src/misc1.c	/^cin_ispreproc_cont(pp, lnump)$/;"	f	file:
cin_ispreproc_cont	src/misc1.c	/^static int	cin_ispreproc_cont __ARGS((char_u **pp, linenr_T *lnump));$/;"	p	file:	signature:(char_u **pp, linenr_T *lnump)
cin_isscopedecl	src/misc1.c	/^cin_isscopedecl(s)$/;"	f
cin_isterminated	src/misc1.c	/^cin_isterminated(s, incl_open, incl_comma)$/;"	f	file:
cin_isterminated	src/misc1.c	/^static int	cin_isterminated __ARGS((char_u *, int, int));$/;"	p	file:	signature:(char_u *, int, int)
cin_iswhileofdo	src/misc1.c	/^cin_iswhileofdo(p, lnum, ind_maxparen)	    \/* XXX *\/$/;"	f	file:
cin_iswhileofdo	src/misc1.c	/^static int	cin_iswhileofdo __ARGS((char_u *, linenr_T, int));$/;"	p	file:	signature:(char_u *, linenr_T, int)
cin_iswhileofdo_end	src/misc1.c	/^cin_iswhileofdo_end(terminated, ind_maxparen, ind_maxcomment)$/;"	f	file:
cin_iswhileofdo_end	src/misc1.c	/^static int	cin_iswhileofdo_end __ARGS((int terminated, int	ind_maxparen, int ind_maxcomment));$/;"	p	file:	signature:(int terminated, int ind_maxparen, int ind_maxcomment)
cin_nocode	src/misc1.c	/^cin_nocode(s)$/;"	f	file:
cin_nocode	src/misc1.c	/^static int	cin_nocode __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
cin_skip2pos	src/misc1.c	/^cin_skip2pos(trypos)$/;"	f	file:
cin_skip2pos	src/misc1.c	/^static int	cin_skip2pos __ARGS((pos_T *trypos));$/;"	p	file:	signature:(pos_T *trypos)
cin_skipcomment	src/misc1.c	/^cin_skipcomment(s)$/;"	f	file:
cin_skipcomment	src/misc1.c	/^static char_u	*cin_skipcomment __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
cindent_on	src/edit.c	/^cindent_on()$/;"	f	file:
cindent_on	src/edit.c	/^static int cindent_on __ARGS((void));$/;"	p	file:	signature:(void)
class	src/os_vms.c	/^    char	class;$/;"	m	struct:__anon75	file:	access:public
class_tab	src/regexp.c	/^static short	class_tab[256];$/;"	v	file:
cleanup_T	src/structs.h	/^typedef struct cleanup_stuff cleanup_T;$/;"	t	typeref:struct:cleanup_stuff
cleanup_conditionals	src/ex_eval.c	/^cleanup_conditionals(cstack, searched_cond, inclusive)$/;"	f
cleanup_help_tags	src/ex_getln.c	/^cleanup_help_tags(num_file, file)$/;"	f	file:
cleanup_help_tags	src/ex_getln.c	/^static void	cleanup_help_tags __ARGS((int num_file, char_u **file));$/;"	p	file:	signature:(int num_file, char_u **file)
cleanup_jumplist	src/mark.c	/^cleanup_jumplist()$/;"	f	file:
cleanup_jumplist	src/mark.c	/^static void cleanup_jumplist __ARGS((void));$/;"	p	file:	signature:(void)
cleanup_stuff	src/structs.h	/^struct cleanup_stuff$/;"	s
cleanup_stuff::exception	src/structs.h	/^    except_T *exception;	\/* exception value *\/$/;"	m	struct:cleanup_stuff	access:public
cleanup_stuff::pending	src/structs.h	/^    int pending;		\/* error\/interrupt\/exception state *\/$/;"	m	struct:cleanup_stuff	access:public
cleanup_subexpr	src/regexp.c	/^cleanup_subexpr()$/;"	f	file:
cleanup_subexpr	src/regexp.c	/^static void	cleanup_subexpr __ARGS((void));$/;"	p	file:	signature:(void)
cleanup_suggestions	src/spell.c	/^cleanup_suggestions(gap, maxscore, keep)$/;"	f	file:
cleanup_suggestions	src/spell.c	/^static int cleanup_suggestions __ARGS((garray_T *gap, int maxscore, int keep));$/;"	p	file:	signature:(garray_T *gap, int maxscore, int keep)
cleanup_zsubexpr	src/regexp.c	/^cleanup_zsubexpr()$/;"	f	file:
cleanup_zsubexpr	src/regexp.c	/^static void	cleanup_zsubexpr __ARGS((void));$/;"	p	file:	signature:(void)
clearFolding	src/fold.c	/^clearFolding(win)$/;"	f
clear_chars	src/os_win32.c	/^clear_chars($/;"	f	file:	signature:( COORD coord, DWORD n)
clear_chars	src/os_win32.c	/^static void clear_chars(COORD coord, DWORD n);$/;"	p	file:	signature:(COORD coord, DWORD n)
clear_cmdline	src/globals.h	/^EXTERN int	clear_cmdline INIT(= FALSE);	\/* cmdline must be cleared *\/$/;"	v
clear_csinfo	src/if_cscope.c	/^clear_csinfo(i)$/;"	f	file:
clear_csinfo	src/if_cscope.c	/^static void	    clear_csinfo __ARGS((int i));$/;"	p	file:	signature:(int i)
clear_current_state	src/syntax.c	/^clear_current_state()$/;"	f	file:
clear_current_state	src/syntax.c	/^static void clear_current_state __ARGS((void));$/;"	p	file:	signature:(void)
clear_hl_tables	src/syntax.c	/^clear_hl_tables()$/;"	f
clear_keywtab	src/syntax.c	/^clear_keywtab(ht)$/;"	f	file:
clear_keywtab	src/syntax.c	/^static void clear_keywtab __ARGS((hashtab_T *ht));$/;"	p	file:	signature:(hashtab_T *ht)
clear_lval	src/eval.c	/^clear_lval(lp)$/;"	f	file:
clear_lval	src/eval.c	/^static void clear_lval __ARGS((lval_T *lp));$/;"	p	file:	signature:(lval_T *lp)
clear_matches	src/window.c	/^clear_matches(wp)$/;"	f
clear_midword	src/spell.c	/^clear_midword(wp)$/;"	f	file:
clear_midword	src/spell.c	/^static void clear_midword __ARGS((win_T *buf));$/;"	p	file:	signature:(win_T *buf)
clear_node	src/spell.c	/^clear_node(node)$/;"	f	file:
clear_node	src/spell.c	/^static void clear_node __ARGS((wordnode_T *node));$/;"	p	file:	signature:(wordnode_T *node)
clear_oparg	src/ops.c	/^clear_oparg(oap)$/;"	f
clear_rect	src/gui_w16.c	/^clear_rect(RECT *rcp)$/;"	f	file:	signature:(RECT *rcp)
clear_rect	src/gui_w32.c	/^clear_rect(RECT *rcp)$/;"	f	file:	signature:(RECT *rcp)
clear_rect	src/gui_w48.c	/^static void clear_rect(RECT *rcp);$/;"	p	file:	signature:(RECT *rcp)
clear_registers	src/ops.c	/^clear_registers()$/;"	f
clear_sb_text	src/message.c	/^clear_sb_text()$/;"	f
clear_screen	src/os_win32.c	/^clear_screen(void)$/;"	f	file:	signature:(void)
clear_screen	src/os_win32.c	/^static void clear_screen(void);$/;"	p	file:	signature:(void)
clear_showcmd	src/normal.c	/^clear_showcmd()$/;"	f
clear_snapshot	src/window.c	/^clear_snapshot(tp, idx)$/;"	f	file:
clear_snapshot	src/window.c	/^static void clear_snapshot __ARGS((tabpage_T *tp, int idx));$/;"	p	file:	signature:(tabpage_T *tp, int idx)
clear_snapshot_rec	src/window.c	/^clear_snapshot_rec(fr)$/;"	f	file:
clear_snapshot_rec	src/window.c	/^static void clear_snapshot_rec __ARGS((frame_T *fr));$/;"	p	file:	signature:(frame_T *fr)
clear_spell_chartab	src/spell.c	/^clear_spell_chartab(sp)$/;"	f	file:
clear_spell_chartab	src/spell.c	/^static void clear_spell_chartab __ARGS((spelltab_T *sp));$/;"	p	file:	signature:(spelltab_T *sp)
clear_string_option	src/option.c	/^clear_string_option(pp)$/;"	f
clear_syn_state	src/syntax.c	/^clear_syn_state(p)$/;"	f	file:
clear_syn_state	src/syntax.c	/^static void clear_syn_state __ARGS((synstate_T *p));$/;"	p	file:	signature:(synstate_T *p)
clear_termcodes	src/term.c	/^clear_termcodes()$/;"	f
clear_termoptions	src/option.c	/^clear_termoptions()$/;"	f
clear_to_end_of_display	src/os_win32.c	/^clear_to_end_of_display(void)$/;"	f	file:	signature:(void)
clear_to_end_of_display	src/os_win32.c	/^static void clear_to_end_of_display(void);$/;"	p	file:	signature:(void)
clear_to_end_of_line	src/os_win32.c	/^clear_to_end_of_line(void)$/;"	f	file:	signature:(void)
clear_to_end_of_line	src/os_win32.c	/^static void clear_to_end_of_line(void);$/;"	p	file:	signature:(void)
clear_tv	src/eval.c	/^clear_tv(varp)$/;"	f
clear_wininfo	src/buffer.c	/^clear_wininfo(buf)$/;"	f	file:
clear_wininfo	src/buffer.c	/^static void	clear_wininfo __ARGS((buf_T *buf));$/;"	p	file:	signature:(buf_T *buf)
clear_winopt	src/option.c	/^clear_winopt(wop)$/;"	f
clear_xterm_clip	src/os_unix.c	/^clear_xterm_clip()$/;"	f
clearop	src/normal.c	/^clearop(oap)$/;"	f	file:
clearop	src/normal.c	/^static void	clearop __ARGS((oparg_T *oap));$/;"	p	file:	signature:(oparg_T *oap)
clearopbeep	src/normal.c	/^clearopbeep(oap)$/;"	f	file:
clearopbeep	src/normal.c	/^static void	clearopbeep __ARGS((oparg_T *oap));$/;"	p	file:	signature:(oparg_T *oap)
clearpos	src/macros.h	33;"	d
clearpos	src/macros.h	40;"	d
clickIsPopup	src/gui_mac.c	/^static short clickIsPopup;$/;"	v	file:
clicked_page	src/gui_gtk_x11.c	/^static int clicked_page;	    \/* page clicked in tab line *\/$/;"	v	file:
clientData	src/gui_beval.h	/^    void		*clientData;	\/* For callback *\/$/;"	m	struct:BalloonEvalStruct	access:public
clientWindow	src/globals.h	/^EXTERN HWND	clientWindow INIT(= 0);$/;"	v
clientWindow	src/globals.h	/^EXTERN Window	clientWindow INIT(= None);$/;"	v
client_enc	src/os_mswin.c	/^static char_u	*client_enc = NULL;$/;"	v	file:
clientid	src/os_unix.c	/^    char *clientid;	    \/* The client ID for the current smc session *\/$/;"	m	struct:__anon65	file:	access:public
clip_auto_select	src/ui.c	/^clip_auto_select()$/;"	f
clip_autoselect	src/globals.h	/^EXTERN int	clip_autoselect INIT(= FALSE);$/;"	v
clip_autoselectml	src/globals.h	/^EXTERN int	clip_autoselectml INIT(= FALSE);$/;"	v
clip_clear_selection	src/ui.c	/^clip_clear_selection()$/;"	f
clip_compare_pos	src/ui.c	/^clip_compare_pos(row1, col1, row2, col2)$/;"	f	file:
clip_compare_pos	src/ui.c	/^static int clip_compare_pos __ARGS((int row1, int col1, int row2, int col2));$/;"	p	file:	signature:(int row1, int col1, int row2, int col2)
clip_convert_selection	src/ops.c	/^clip_convert_selection(str, len, cbd)$/;"	f
clip_copy_modeless_selection	src/ui.c	/^clip_copy_modeless_selection(both)$/;"	f
clip_copy_selection	src/ui.c	/^clip_copy_selection()$/;"	f
clip_exclude_prog	src/globals.h	/^EXTERN regprog_T *clip_exclude_prog INIT(= NULL);$/;"	v
clip_free_selection	src/ops.c	/^clip_free_selection(cbd)$/;"	f
clip_gen_lose_selection	src/ui.c	/^clip_gen_lose_selection(cbd)$/;"	f
clip_gen_own_selection	src/ui.c	/^clip_gen_own_selection(cbd)$/;"	f
clip_gen_request_selection	src/ui.c	/^clip_gen_request_selection(cbd)$/;"	f
clip_gen_set_selection	src/ui.c	/^clip_gen_set_selection(cbd)$/;"	f
clip_get_line_end	src/ui.c	/^clip_get_line_end(row)$/;"	f	file:
clip_get_line_end	src/ui.c	/^static int  clip_get_line_end __ARGS((int));$/;"	p	file:	signature:(int)
clip_get_selection	src/ops.c	/^clip_get_selection(cbd)$/;"	f
clip_get_word_boundaries	src/ui.c	/^clip_get_word_boundaries(cb, row, col)$/;"	f	file:
clip_get_word_boundaries	src/ui.c	/^static void clip_get_word_boundaries __ARGS((VimClipboard *, int, int));$/;"	p	file:	signature:(VimClipboard *, int, int)
clip_html	src/globals.h	/^EXTERN int	clip_html INIT(= FALSE);$/;"	v
clip_init	src/ui.c	/^clip_init(can_use)$/;"	f
clip_invert_area	src/ui.c	/^clip_invert_area(row1, col1, row2, col2, how)$/;"	f	file:
clip_invert_area	src/ui.c	/^static void clip_invert_area __ARGS((int, int, int, int, int how));$/;"	p	file:	signature:(int, int, int, int, int how)
clip_invert_rectangle	src/ui.c	/^clip_invert_rectangle(row, col, height, width, invert)$/;"	f	file:
clip_invert_rectangle	src/ui.c	/^static void clip_invert_rectangle __ARGS((int row, int col, int height, int width, int invert));$/;"	p	file:	signature:(int row, int col, int height, int width, int invert)
clip_isautosel	src/ui.c	/^clip_isautosel()$/;"	f
clip_lose_selection	src/ui.c	/^clip_lose_selection(cbd)$/;"	f
clip_may_clear_selection	src/ui.c	/^clip_may_clear_selection(row1, row2)$/;"	f
clip_may_redraw_selection	src/ui.c	/^clip_may_redraw_selection(row, col, len)$/;"	f
clip_mch_lose_selection	src/gui_gtk_x11.c	/^clip_mch_lose_selection(VimClipboard *cbd UNUSED)$/;"	f	signature:(VimClipboard *cbd UNUSED)
clip_mch_lose_selection	src/gui_mac.c	/^clip_mch_lose_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_lose_selection	src/gui_riscos.c	/^clip_mch_lose_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_lose_selection	src/gui_x11.c	/^clip_mch_lose_selection(cbd)$/;"	f
clip_mch_lose_selection	src/os_msdos.c	/^clip_mch_lose_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_lose_selection	src/os_mswin.c	/^clip_mch_lose_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_lose_selection	src/os_qnx.c	/^clip_mch_lose_selection( VimClipboard *cbd )$/;"	f	signature:( VimClipboard *cbd )
clip_mch_lose_selection	src/proto.h	/^void clip_mch_lose_selection(VimClipboard *cbd);$/;"	p	signature:(VimClipboard *cbd)
clip_mch_own_selection	src/gui_gtk_x11.c	/^clip_mch_own_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_own_selection	src/gui_mac.c	/^clip_mch_own_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_own_selection	src/gui_riscos.c	/^clip_mch_own_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_own_selection	src/gui_x11.c	/^clip_mch_own_selection(cbd)$/;"	f
clip_mch_own_selection	src/os_msdos.c	/^clip_mch_own_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_own_selection	src/os_mswin.c	/^clip_mch_own_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_own_selection	src/os_qnx.c	/^clip_mch_own_selection( VimClipboard *cbd )$/;"	f	signature:( VimClipboard *cbd )
clip_mch_own_selection	src/proto.h	/^int clip_mch_own_selection(VimClipboard *cbd);$/;"	p	signature:(VimClipboard *cbd)
clip_mch_request_selection	src/gui_gtk_x11.c	/^clip_mch_request_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_request_selection	src/gui_mac.c	/^clip_mch_request_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_request_selection	src/gui_riscos.c	/^clip_mch_request_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_request_selection	src/gui_x11.c	/^clip_mch_request_selection(cbd)$/;"	f
clip_mch_request_selection	src/os_msdos.c	/^clip_mch_request_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_request_selection	src/os_mswin.c	/^clip_mch_request_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_request_selection	src/os_qnx.c	/^clip_mch_request_selection( VimClipboard *cbd )$/;"	f	signature:( VimClipboard *cbd )
clip_mch_request_selection	src/proto.h	/^void clip_mch_request_selection(VimClipboard *cbd);$/;"	p	signature:(VimClipboard *cbd)
clip_mch_set_selection	src/gui_gtk_x11.c	/^clip_mch_set_selection(VimClipboard *cbd UNUSED)$/;"	f	signature:(VimClipboard *cbd UNUSED)
clip_mch_set_selection	src/gui_mac.c	/^clip_mch_set_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_set_selection	src/gui_riscos.c	/^clip_mch_set_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_set_selection	src/gui_x11.c	/^clip_mch_set_selection(cbd)$/;"	f
clip_mch_set_selection	src/os_msdos.c	/^clip_mch_set_selection( VimClipboard *cbd )$/;"	f	signature:( VimClipboard *cbd )
clip_mch_set_selection	src/os_mswin.c	/^clip_mch_set_selection(VimClipboard *cbd)$/;"	f	signature:(VimClipboard *cbd)
clip_mch_set_selection	src/os_qnx.c	/^clip_mch_set_selection( VimClipboard *cbd )$/;"	f	signature:( VimClipboard *cbd )
clip_mch_set_selection	src/proto.h	/^void clip_mch_set_selection(VimClipboard *cbd);$/;"	p	signature:(VimClipboard *cbd)
clip_modeless	src/ui.c	/^clip_modeless(button, is_click, is_drag)$/;"	f
clip_own_selection	src/ui.c	/^clip_own_selection(cbd)$/;"	f
clip_plus	src/globals.h	/^EXTERN VimClipboard clip_plus;	\/* CLIPBOARD selection in X11 *\/$/;"	v
clip_plus	src/globals.h	512;"	d
clip_process_selection	src/ui.c	/^clip_process_selection(button, col, row, repeated_click)$/;"	f
clip_scroll_selection	src/ui.c	/^clip_scroll_selection(rows)$/;"	f
clip_star	src/globals.h	/^EXTERN VimClipboard clip_star;	\/* PRIMARY selection in X11 *\/$/;"	v
clip_start_selection	src/ui.c	/^clip_start_selection(col, row, repeated_click)$/;"	f
clip_unnamed	src/globals.h	/^EXTERN int	clip_unnamed INIT(= FALSE);$/;"	v
clip_update_modeless_selection	src/ui.c	/^clip_update_modeless_selection(cb, row1, col1, row2, col2)$/;"	f	file:
clip_update_modeless_selection	src/ui.c	/^static void clip_update_modeless_selection __ARGS((VimClipboard *, int, int,$/;"	p	file:	signature:(VimClipboard *, int, int, int, int)
clip_update_selection	src/ui.c	/^clip_update_selection()$/;"	f
clip_x11_convert_selection_cb	src/ui.c	/^clip_x11_convert_selection_cb(w, sel_atom, target, type, value, length, format)$/;"	f	file:
clip_x11_convert_selection_cb	src/ui.c	/^static Boolean	clip_x11_convert_selection_cb __ARGS((Widget, Atom *, Atom *, Atom *, XtPointer *, long_u *, int *));$/;"	p	file:	signature:(Widget, Atom *, Atom *, Atom *, XtPointer *, long_u *, int *)
clip_x11_lose_ownership_cb	src/ui.c	/^clip_x11_lose_ownership_cb(w, sel_atom)$/;"	f	file:
clip_x11_lose_ownership_cb	src/ui.c	/^static void  clip_x11_lose_ownership_cb __ARGS((Widget, Atom *));$/;"	p	file:	signature:(Widget, Atom *)
clip_x11_lose_selection	src/ui.c	/^clip_x11_lose_selection(myShell, cbd)$/;"	f
clip_x11_own_selection	src/ui.c	/^clip_x11_own_selection(myShell, cbd)$/;"	f
clip_x11_request_selection	src/ui.c	/^clip_x11_request_selection(myShell, dpy, cbd)$/;"	f
clip_x11_request_selection_cb	src/ui.c	/^clip_x11_request_selection_cb(w, success, sel_atom, type, value, length,$/;"	f	file:
clip_x11_request_selection_cb	src/ui.c	/^static void  clip_x11_request_selection_cb __ARGS((Widget, XtPointer, Atom *, Atom *, XtPointer, long_u *, int *));$/;"	p	file:	signature:(Widget, XtPointer, Atom *, Atom *, XtPointer, long_u *, int *)
clip_x11_set_selection	src/ui.c	/^clip_x11_set_selection(cbd)$/;"	f
clip_x11_timestamp_cb	src/ui.c	/^clip_x11_timestamp_cb(w, n, event, cont)$/;"	f	file:
clip_x11_timestamp_cb	src/ui.c	/^static void clip_x11_timestamp_cb __ARGS((Widget w, XtPointer n, XEvent *event, Boolean *cont));$/;"	p	file:	signature:(Widget w, XtPointer n, XEvent *event, Boolean *cont)
clip_xterm_lose_selection	src/os_unix.c	/^clip_xterm_lose_selection(cbd)$/;"	f
clip_xterm_own_selection	src/os_unix.c	/^clip_xterm_own_selection(cbd)$/;"	f
clip_xterm_request_selection	src/os_unix.c	/^clip_xterm_request_selection(cbd)$/;"	f
clip_xterm_set_selection	src/os_unix.c	/^clip_xterm_set_selection(cbd)$/;"	f
clip_yank_selection	src/ops.c	/^clip_yank_selection(type, str, len, cbd)$/;"	f
clipboard_event_time	src/gui_gtk_x11.c	/^static guint32 clipboard_event_time = CurrentTime;$/;"	v	file:
cloneFoldGrowArray	src/fold.c	/^cloneFoldGrowArray(from, to)$/;"	f
closeFold	src/fold.c	/^closeFold(lnum, count)$/;"	f
closeFoldRecurse	src/fold.c	/^closeFoldRecurse(lnum)$/;"	f
close_all_scripts	src/getchar.c	/^close_all_scripts()$/;"	f
close_buffer	src/buffer.c	/^close_buffer(win, buf, action)$/;"	f
close_dll	src/if_lua.c	50;"	d	file:
close_dll	src/if_lua.c	54;"	d	file:
close_dll	src/if_python.c	110;"	d	file:
close_dll	src/if_python.c	114;"	d	file:
close_dll	src/if_python3.c	88;"	d	file:
close_dll	src/if_python3.c	92;"	d	file:
close_others	src/window.c	/^close_others(message, forceit)$/;"	f
close_redir	src/ex_docmd.c	/^close_redir()$/;"	f	file:
close_redir	src/ex_docmd.c	/^static void	close_redir __ARGS((void));$/;"	p	file:	signature:(void)
close_signicon_image	src/gui_w32.c	/^close_signicon_image(signicon_t *sign)$/;"	f	file:	signature:(signicon_t *sign)
close_spellbuf	src/spell.c	/^close_spellbuf(buf)$/;"	f	file:
close_spellbuf	src/spell.c	/^static void close_spellbuf __ARGS((buf_T *buf));$/;"	p	file:	signature:(buf_T *buf)
close_win	src/os_amiga.c	/^static int		close_win = FALSE;  \/* set if Vim opened the window *\/$/;"	v	file:
close_windows	src/window.c	/^close_windows(buf, keep_curwin)$/;"	f
closescript	src/getchar.c	/^closescript()$/;"	f	file:
closescript	src/getchar.c	/^static void	closescript __ARGS((void));$/;"	p	file:	signature:(void)
clr_history	src/ex_getln.c	/^clr_history(histype)$/;"	f
clrallmarks	src/mark.c	/^clrallmarks(buf)$/;"	f
cls	src/search.c	/^cls()$/;"	f	file:
cls	src/search.c	/^static int cls __ARGS((void));$/;"	p	file:	signature:(void)
cls_bigword	src/search.c	/^static int	cls_bigword;	\/* TRUE for "W", "B" or "E" *\/$/;"	v	file:
cmap_charset	src/hardcopy.c	/^    char	*cmap_charset;$/;"	m	struct:prt_ps_charset_S	file:	access:public
cmap_encoding	src/hardcopy.c	/^    char	*cmap_encoding;$/;"	m	struct:prt_ps_encoding_S	file:	access:public
cmd	src/ex_cmds.h	/^    char_u	*cmd;		\/* the name of the command (except for :make) *\/$/;"	m	struct:exarg	access:public
cmd	src/fileio.c	/^    char_u	    *cmd;		\/* The command to be executed (NULL$/;"	m	struct:AutoCmd	file:	access:public
cmd	src/if_tcl.c	/^    Tcl_Command cmd;	    \/* Tcl command that represents this object *\/$/;"	m	struct:ref	file:	access:public
cmd	src/testdir/test49.vim	/^		let cmd = ""$/;"	v
cmd	src/testdir/test49.vim	/^		let cmd = "unlet"$/;"	v
cmd	src/testdir/test49.vim	/^    let cmd = "let"$/;"	v
cmd_arg	src/normal.c	/^    short	cmd_arg;	\/* value for ca.arg *\/$/;"	m	struct:nv_cmd	file:	access:public
cmd_argt	src/ex_cmds.h	/^    long_u	cmd_argt;	\/* flags declared above *\/$/;"	m	struct:cmdname	access:public
cmd_char	src/normal.c	/^    int		cmd_char;	\/* (first) command character *\/$/;"	m	struct:nv_cmd	file:	access:public
cmd_code	src/if_sniff.c	/^    char cmd_code;$/;"	m	struct:sn_cmd	file:	access:public
cmd_exists	src/ex_docmd.c	/^cmd_exists(name)$/;"	f
cmd_fkmap	src/ex_getln.c	/^static int	cmd_fkmap = 0;	\/* Farsi mapping during command line *\/$/;"	v	file:
cmd_flags	src/normal.c	/^    short_u	cmd_flags;	\/* NV_ flags *\/$/;"	m	struct:nv_cmd	file:	access:public
cmd_func	src/ex_cmds.h	/^    ex_func_T   cmd_func;	\/* function for this command *\/$/;"	m	struct:cmdname	access:public
cmd_func	src/normal.c	/^    nv_func_T   cmd_func;	\/* function for this command *\/$/;"	m	struct:nv_cmd	file:	access:public
cmd_gchar	src/ex_getln.c	/^cmd_gchar(offset)$/;"	f
cmd_hkmap	src/ex_getln.c	/^static int	cmd_hkmap = 0;	\/* Hebrew mapping during command line *\/$/;"	v	file:
cmd_msg	src/if_sniff.c	/^    char *cmd_msg;$/;"	m	struct:sn_cmd	file:	access:public
cmd_name	src/ex_cmds.h	/^    char_u	*cmd_name;	\/* name of the command *\/$/;"	m	struct:cmdname	access:public
cmd_name	src/if_sniff.c	/^    char *cmd_name;$/;"	m	struct:sn_cmd	file:	access:public
cmd_pchar	src/ex_getln.c	/^cmd_pchar(c, offset)$/;"	f
cmd_showtail	src/ex_getln.c	/^static int	cmd_showtail;		\/* Only show path tail in lists ? *\/$/;"	v	file:
cmd_silent	src/globals.h	/^EXTERN int	cmd_silent INIT(= FALSE); \/* don't echo the command line *\/$/;"	v
cmd_source	src/ex_cmds2.c	/^cmd_source(fname, eap)$/;"	f	file:
cmd_source	src/ex_cmds2.c	/^static void	cmd_source __ARGS((char_u *fname, exarg_T *eap));$/;"	p	file:	signature:(char_u *fname, exarg_T *eap)
cmd_type	src/if_sniff.c	/^    int  cmd_type;$/;"	m	struct:sn_cmd	file:	access:public
cmdarg_S	src/structs.h	/^typedef struct cmdarg_S$/;"	s
cmdarg_S::arg	src/structs.h	/^    int		arg;		\/* extra argument from nv_cmds[] *\/$/;"	m	struct:cmdarg_S	access:public
cmdarg_S::cmdchar	src/structs.h	/^    int		cmdchar;	\/* command character *\/$/;"	m	struct:cmdarg_S	access:public
cmdarg_S::count0	src/structs.h	/^    long	count0;		\/* count before command, default 0 *\/$/;"	m	struct:cmdarg_S	access:public
cmdarg_S::count1	src/structs.h	/^    long	count1;		\/* count before command, default 1 *\/$/;"	m	struct:cmdarg_S	access:public
cmdarg_S::extra_char	src/structs.h	/^    int		extra_char;	\/* yet another character (optional) *\/$/;"	m	struct:cmdarg_S	access:public
cmdarg_S::nchar	src/structs.h	/^    int		nchar;		\/* next command character (optional) *\/$/;"	m	struct:cmdarg_S	access:public
cmdarg_S::ncharC1	src/structs.h	/^    int		ncharC1;	\/* first composing character (optional) *\/$/;"	m	struct:cmdarg_S	access:public
cmdarg_S::ncharC2	src/structs.h	/^    int		ncharC2;	\/* second composing character (optional) *\/$/;"	m	struct:cmdarg_S	access:public
cmdarg_S::oap	src/structs.h	/^    oparg_T	*oap;		\/* Operator arguments *\/$/;"	m	struct:cmdarg_S	access:public
cmdarg_S::opcount	src/structs.h	/^    long	opcount;	\/* count before an operator *\/$/;"	m	struct:cmdarg_S	access:public
cmdarg_S::prechar	src/structs.h	/^    int		prechar;	\/* prefix character (optional, always 'g') *\/$/;"	m	struct:cmdarg_S	access:public
cmdarg_S::retval	src/structs.h	/^    int		retval;		\/* return: CA_* values *\/$/;"	m	struct:cmdarg_S	access:public
cmdarg_S::searchbuf	src/structs.h	/^    char_u	*searchbuf;	\/* return: pointer to search pattern or NULL *\/$/;"	m	struct:cmdarg_S	access:public
cmdarg_T	src/structs.h	/^} cmdarg_T;$/;"	t	typeref:struct:cmdarg_S
cmdattr	src/ex_getln.c	/^    int		cmdattr;	\/* attributes for prompt *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdbuff	src/ex_getln.c	/^    char_u	*cmdbuff;	\/* pointer to command line buffer *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdbufflen	src/ex_getln.c	/^    int		cmdbufflen;	\/* length of cmdbuff *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdchar	src/structs.h	/^    int		cmdchar;	\/* command character *\/$/;"	m	struct:cmdarg_S	access:public
cmdfirstc	src/ex_getln.c	/^    int		cmdfirstc;	\/* ':', '\/', '?', '=' or NUL *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdidx	src/ex_cmds.h	/^    cmdidx_T	cmdidx;		\/* the index for the command *\/$/;"	m	struct:exarg	access:public
cmdidx_T	src/ex_cmds.h	/^typedef enum CMD_index cmdidx_T;$/;"	t	typeref:enum:CMD_index
cmdidxs	src/ex_docmd.c	/^static cmdidx_T cmdidxs[27] =$/;"	v	file:
cmdindent	src/ex_getln.c	/^    int		cmdindent;	\/* number of spaces before cmdline *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdl_fkmap	src/farsi.c	/^cmdl_fkmap(c)$/;"	f
cmdlen	src/ex_getln.c	/^    int		cmdlen;		\/* number of chars in command line *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdline_at_end	src/ex_getln.c	/^cmdline_at_end()$/;"	f
cmdline_charsize	src/ex_getln.c	/^cmdline_charsize(idx)$/;"	f	file:
cmdline_charsize	src/ex_getln.c	/^static int	cmdline_charsize __ARGS((int idx));$/;"	p	file:	signature:(int idx)
cmdline_del	src/ex_getln.c	/^cmdline_del(from)$/;"	f	file:
cmdline_del	src/ex_getln.c	/^static void	cmdline_del __ARGS((int from));$/;"	p	file:	signature:(int from)
cmdline_getvcol_cursor	src/ex_getln.c	/^cmdline_getvcol_cursor()$/;"	f
cmdline_info	src/ex_getln.c	/^struct cmdline_info$/;"	s	file:
cmdline_info::cmdattr	src/ex_getln.c	/^    int		cmdattr;	\/* attributes for prompt *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdline_info::cmdbuff	src/ex_getln.c	/^    char_u	*cmdbuff;	\/* pointer to command line buffer *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdline_info::cmdbufflen	src/ex_getln.c	/^    int		cmdbufflen;	\/* length of cmdbuff *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdline_info::cmdfirstc	src/ex_getln.c	/^    int		cmdfirstc;	\/* ':', '\/', '?', '=' or NUL *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdline_info::cmdindent	src/ex_getln.c	/^    int		cmdindent;	\/* number of spaces before cmdline *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdline_info::cmdlen	src/ex_getln.c	/^    int		cmdlen;		\/* number of chars in command line *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdline_info::cmdpos	src/ex_getln.c	/^    int		cmdpos;		\/* current cursor position *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdline_info::cmdprompt	src/ex_getln.c	/^    char_u	*cmdprompt;	\/* message in front of cmdline *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdline_info::cmdspos	src/ex_getln.c	/^    int		cmdspos;	\/* cursor column on screen *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdline_info::input_fn	src/ex_getln.c	/^    int		input_fn;	\/* when TRUE Invoked for input() function *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdline_info::overstrike	src/ex_getln.c	/^    int		overstrike;	\/* Typing mode on the command line.  Shared by$/;"	m	struct:cmdline_info	file:	access:public
cmdline_info::xp_arg	src/ex_getln.c	/^    char_u	*xp_arg;	\/* user-defined expansion arg *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdline_info::xp_context	src/ex_getln.c	/^    int		xp_context;	\/* type of expansion *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdline_info::xpc	src/ex_getln.c	/^    expand_T	*xpc;		\/* struct being used for expansion, xp_pattern$/;"	m	struct:cmdline_info	file:	access:public
cmdline_option_T	src/gui_gtk_x11.c	/^cmdline_option_T;$/;"	t	typeref:struct:__anon91	file:
cmdline_options	src/gui_gtk_x11.c	/^static const cmdline_option_T cmdline_options[] =$/;"	v	file:
cmdline_options	src/gui_x11.c	/^static XrmOptionDescRec cmdline_options[] =$/;"	v	file:
cmdline_overstrike	src/ex_getln.c	/^cmdline_overstrike()$/;"	f
cmdline_paste	src/ex_getln.c	/^cmdline_paste(regname, literally, remcr)$/;"	f	file:
cmdline_paste	src/ex_getln.c	/^static int	cmdline_paste __ARGS((int regname, int literally, int remcr));$/;"	p	file:	signature:(int regname, int literally, int remcr)
cmdline_paste_reg	src/ops.c	/^cmdline_paste_reg(regname, literally, remcr)$/;"	f
cmdline_paste_str	src/ex_getln.c	/^cmdline_paste_str(s, literally)$/;"	f
cmdline_row	src/globals.h	/^EXTERN int	cmdline_row;$/;"	v
cmdline_star	src/globals.h	/^EXTERN int	cmdline_star INIT(= FALSE);	\/* cmdline is crypted *\/$/;"	v
cmdlinep	src/ex_cmds.h	/^    char_u	**cmdlinep;	\/* pointer to pointer of allocated cmdline *\/$/;"	m	struct:exarg	access:public
cmdmod	src/ex_docmd.c	/^static struct cmdmod$/;"	s	file:
cmdmod	src/globals.h	/^EXTERN cmdmod_T	cmdmod;			\/* Ex command modifiers *\/$/;"	v
cmdmod::has_count	src/ex_docmd.c	/^    int		has_count;  \/* :123verbose  :3tab *\/$/;"	m	struct:cmdmod	file:	access:public
cmdmod::minlen	src/ex_docmd.c	/^    int		minlen;$/;"	m	struct:cmdmod	file:	access:public
cmdmod::name	src/ex_docmd.c	/^    char	*name;$/;"	m	struct:cmdmod	file:	access:public
cmdmod_T	src/structs.h	/^} cmdmod_T;$/;"	t	typeref:struct:__anon42
cmdmods	src/ex_docmd.c	/^} cmdmods[] = {$/;"	v	typeref:struct:cmdmod	file:
cmdmsg_rl	src/globals.h	/^EXTERN int	cmdmsg_rl INIT(= FALSE);    \/* cmdline is drawn right to left *\/$/;"	v
cmdname	src/ex_cmds.h	/^static struct cmdname$/;"	s
cmdname::cmd_argt	src/ex_cmds.h	/^    long_u	cmd_argt;	\/* flags declared above *\/$/;"	m	struct:cmdname	access:public
cmdname::cmd_func	src/ex_cmds.h	/^    ex_func_T   cmd_func;	\/* function for this command *\/$/;"	m	struct:cmdname	access:public
cmdname::cmd_name	src/ex_cmds.h	/^    char_u	*cmd_name;	\/* name of the command *\/$/;"	m	struct:cmdname	access:public
cmdnames	src/ex_cmds.h	/^cmdnames[] =$/;"	v	typeref:struct:cmdname
cmdpos	src/ex_getln.c	/^    int		cmdpos;		\/* current cursor position *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdprompt	src/ex_getln.c	/^    char_u	*cmdprompt;	\/* message in front of cmdline *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdqueue	src/netbeans.c	/^struct cmdqueue$/;"	s	file:
cmdqueue::buffer	src/netbeans.c	/^    char_u	    *buffer;$/;"	m	struct:cmdqueue	file:	access:public
cmdqueue::next	src/netbeans.c	/^    struct cmdqueue *next;$/;"	m	struct:cmdqueue	typeref:struct:cmdqueue::cmdqueue	file:	access:public
cmdqueue::prev	src/netbeans.c	/^    struct cmdqueue *prev;$/;"	m	struct:cmdqueue	typeref:struct:cmdqueue::cmdqueue	file:	access:public
cmds	src/ex_cmds.c	/^static char *cmds[] = {$/;"	v	file:
cmds	src/fileio.c	/^    AutoCmd	    *cmds;		\/* list of commands to do *\/$/;"	m	struct:AutoPat	file:	access:public
cmds_tofree	src/main.c	/^    char_u	cmds_tofree[MAX_ARG_CMDS];   \/* commands that need free() *\/$/;"	m	struct:__anon9	file:	access:public
cmdspos	src/ex_getln.c	/^    int		cmdspos;	\/* cursor column on screen *\/$/;"	m	struct:cmdline_info	file:	access:public
cmdsrv_main	src/main.c	/^cmdsrv_main(argc, argv, serverName_arg, serverStr)$/;"	f	file:
cmdsrv_main	src/main.c	/^static void cmdsrv_main __ARGS((int *argc, char **argv, char_u *serverName_arg, char_u **serverStr));$/;"	p	file:	signature:(int *argc, char **argv, char_u *serverName_arg, char_u **serverStr)
cmdwin_result	src/globals.h	/^EXTERN int	cmdwin_result INIT(= 0); \/* result of cmdline window or 0 *\/$/;"	v
cmdwin_type	src/globals.h	/^EXTERN int	cmdwin_type INIT(= 0);	\/* type of cmdline window or 0 *\/$/;"	v
cmp_flags	src/option.h	/^EXTERN unsigned	cmp_flags;$/;"	v
code	src/if_xcmdsrv.c	/^    int	    code;	\/* Result Code. 0 is OK *\/$/;"	m	struct:PendingCommand	file:	access:public
code	src/term.c	/^    char_u  *code;	    \/* terminal code (in allocated memory) *\/$/;"	m	struct:termcode	file:	access:public
code0	src/gui_gtk_x11.c	/^    char_u code0;$/;"	m	struct:special_key	file:	access:public
code1	src/gui_gtk_x11.c	/^    char_u code1;$/;"	m	struct:special_key	file:	access:public
codepage	src/mbyte.c	/^{   char *name;		int prop;		int codepage;}$/;"	m	struct:__anon134	file:	access:public
col	src/gui.h	/^    int		col;		    \/* Current cursor column in GUI display *\/$/;"	m	struct:Gui	access:public
col	src/structs.h	/^    colnr_T	col;	\/* column number *\/$/;"	m	struct:__anon34	access:public
col	src/structs.h	/^    colnr_T	col;	\/* column number *\/$/;"	m	struct:__anon35	access:public
col1	runtime/syntax/colortest.vim	/^  let col1 = substitute(expand("<cword>"), '\\(\\a\\+\\)_on_\\a\\+', '\\1', "")$/;"	v
col2	runtime/syntax/colortest.vim	/^  let col2 = substitute(expand("<cword>"), '\\a\\+_on_\\(\\a\\+\\)', '\\1', "")$/;"	v
col2tcl	src/if_tcl.c	102;"	d	file:
col2vim	src/if_tcl.c	103;"	d	file:
col_adjust	src/mark.c	1175;"	d	file:
col_print	src/buffer.c	/^col_print(buf, buflen, col, vcol)$/;"	f
coladd	src/structs.h	/^    colnr_T	coladd;$/;"	m	struct:__anon34	access:public
coladvance	src/misc2.c	/^coladvance(wcol)$/;"	f
coladvance2	src/misc2.c	/^coladvance2(pos, addspaces, finetune, wcol)$/;"	f	file:
coladvance2	src/misc2.c	/^static int coladvance2 __ARGS((pos_T *pos, int addspaces, int finetune, colnr_T wcol));$/;"	p	file:	signature:(pos_T *pos, int addspaces, int finetune, colnr_T wcol)
coladvance_force	src/misc2.c	/^coladvance_force(wcol)$/;"	f
coll_get_char	src/regexp.c	/^coll_get_char()$/;"	f	file:
coll_get_char	src/regexp.c	/^static int	coll_get_char __ARGS((void));$/;"	p	file:	signature:(void)
colnr_T	src/structs.h	/^typedef int		colnr_T;$/;"	t
colnr_T	src/vim.h	/^typedef int	colnr_T;		\/* column number type *\/$/;"	t
cologne	src/testdir/test49.vim	/^    let cologne = 4711$/;"	v
coloncmd	src/netbeans.c	/^coloncmd(char *cmd, ...)$/;"	f	file:	signature:(char *cmd, ...)
coloncmd	src/netbeans.c	/^static void coloncmd __ARGS((char *cmd, ...));$/;"	p	file:	signature:(char *cmd, ...)
coloncmd	src/workshop.c	/^coloncmd($/;"	f	file:	signature:( char *cmd, Boolean force)
coloncmd	src/workshop.c	/^static void	 coloncmd(char *, Boolean);$/;"	p	file:	signature:(char *, Boolean)
color	runtime/syntax/xpm.vim	/^		     let color = ""$/;"	v
color	runtime/syntax/xpm.vim	/^		  let color = substitute(s, '".*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	runtime/syntax/xpm.vim	/^	       let color = substitute(s, '".*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	runtime/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	runtime/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	runtime/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	runtime/syntax/xpm.vim	/^	    let color = substitute(s, '".*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	runtime/syntax/xpm.vim	/^	 let color = substitute(s, '".*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	runtime/syntax/xpm.vim	/^let color  = ""$/;"	v
color	runtime/syntax/xpm2.vim	/^		let color = ""$/;"	v
color	runtime/syntax/xpm2.vim	/^	      let color = substitute(s, '.*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	runtime/syntax/xpm2.vim	/^	    let color = substitute(s, '.*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	runtime/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	runtime/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	runtime/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	runtime/syntax/xpm2.vim	/^	  let color = substitute(s, '.*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	runtime/syntax/xpm2.vim	/^	let color = substitute(s, '.*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	runtime/syntax/xpm2.vim	/^  let color  = ""$/;"	v
color_approx	src/gui.h	/^    Bool	color_approx;	    \/* Some color was approximated *\/$/;"	m	struct:Gui	access:public
color_name2handle	src/syntax.c	/^color_name2handle(name)$/;"	f	file:
color_name2handle	src/syntax.c	/^static guicolor_T color_name2handle __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
colors	runtime/syntax/xpm.vim	/^	 let colors = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
colors	runtime/syntax/xpm.vim	/^let colors = 0$/;"	v
colors	runtime/syntax/xpm2.vim	/^	let colors = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
colors	runtime/syntax/xpm2.vim	/^  let colors = 0$/;"	v
colors_name	runtime/colors/darkblue.vim	/^let colors_name = "darkblue"$/;"	v
colors_name	runtime/colors/default.vim	/^let colors_name = "default"$/;"	v
colors_name	runtime/colors/delek.vim	/^let colors_name = "delek"$/;"	v
colors_name	runtime/colors/evening.vim	/^let colors_name = "evening"$/;"	v
colors_name	runtime/colors/morning.vim	/^let colors_name = "morning"$/;"	v
colors_name	runtime/colors/peachpuff.vim	/^let colors_name = "peachpuff"$/;"	v
colors_name	runtime/colors/shine.vim	/^let colors_name = "shine"$/;"	v
colors_name	runtime/colors/slate.vim	/^let colors_name = "slate"$/;"	v
column	src/hardcopy.c	/^    colnr_T	column;		    \/* byte column *\/$/;"	m	struct:__anon126	file:	access:public
comcon2	src/hangulin.c	/^comcon2(k, c)$/;"	f	file:
comcon3	src/hangulin.c	/^comcon3(k, c)$/;"	f	file:
comfcon3	src/hangulin.c	/^comfcon3(v, c)$/;"	f	file:
commProperty	runtime/tools/xcmdsrv_client.c	/^static Atom	commProperty = None;$/;"	v	file:
commProperty	src/globals.h	/^EXTERN Atom	commProperty INIT(= None);$/;"	v
commWindow	runtime/tools/xcmdsrv_client.c	/^static Window	commWindow = None;$/;"	v	file:
commWindow	src/globals.h	/^EXTERN Window	commWindow INIT(= None);$/;"	v
command	src/tag.c	/^    char_u	*command;	\/* first char of command *\/$/;"	m	struct:tag_pointers	file:	access:public
command_complete	src/ex_docmd.c	/^} command_complete[] =$/;"	v	typeref:struct:__anon5	file:
command_end	src/tag.c	/^    char_u	*command_end;	\/* first char after command *\/$/;"	m	struct:tag_pointers	file:	access:public
command_height	src/window.c	/^command_height()$/;"	f
command_line_scan	src/main.c	/^command_line_scan(parmp)$/;"	f	file:
command_line_scan	src/main.c	/^static void command_line_scan __ARGS((mparm_T *parmp));$/;"	p	file:	signature:(mparm_T *parmp)
command_line_setup_choices	src/dosinst.c	/^command_line_setup_choices(int argc, char **argv)$/;"	f	file:	signature:(int argc, char **argv)
commandcmd	src/if_tcl.c	/^commandcmd(dummy, interp, objc, objv)$/;"	f	file:
commands	src/main.c	/^    char_u	*commands[MAX_ARG_CMDS];     \/* commands from + or -c arg. *\/$/;"	m	struct:__anon9	file:	access:public
comp_botline	src/move.c	/^comp_botline(wp)$/;"	f	file:
comp_botline	src/move.c	/^static void comp_botline __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
comp_char_differs	src/screen.c	/^comp_char_differs(off_from, off_to)$/;"	f	file:
comp_char_differs	src/screen.c	/^static int comp_char_differs __ARGS((int, int));$/;"	p	file:	signature:(int, int)
comp_col	src/option.c	/^comp_col()$/;"	f
comp_textwidth	src/edit.c	/^comp_textwidth(ff)$/;"	f
compare_func_name	src/eval.c	/^compare_func_name(s1, s2)$/;"	f	file:
compare_func_name	src/eval.c	/^static int compare_func_name __ARGS((const void *s1, const void *s2));$/;"	p	file:	signature:(const void *s1, const void *s2)
compat_all_enhancements	src/dosinst.c	/^    compat_all_enhancements$/;"	e	enum:__anon117	file:
compat_choice	src/dosinst.c	/^int	compat_choice = (int)compat_all_enhancements;$/;"	v
compat_choices	src/dosinst.c	/^char	*(compat_choices[]) =$/;"	v
compat_hashtab	src/eval.c	/^static hashtab_T	compat_hashtab;$/;"	v	file:
compat_some_enhancements	src/dosinst.c	/^    compat_some_enhancements,$/;"	e	enum:__anon117	file:
compat_text	src/dosinst.c	/^char	*compat_text = "- run Vim %s";$/;"	v
compat_vi	src/dosinst.c	/^    compat_vi = 1,$/;"	e	enum:__anon117	file:
compatible_set	src/option.c	/^compatible_set()$/;"	f	file:
compatible_set	src/option.c	/^static void compatible_set __ARGS((void));$/;"	p	file:	signature:(void)
compile_cap_prog	src/option.c	/^compile_cap_prog(synblock)$/;"	f	file:
compile_cap_prog	src/option.c	/^static char_u *compile_cap_prog __ARGS((synblock_T *synblock));$/;"	p	file:	signature:(synblock_T *synblock)
compiled_sys	src/Make_bc5.mak	/^char_u *compiled_sys = (char_u *)"$(USERDOMAIN)";$/;"	m
compiled_sys	src/Makefile	/^	-@echo 'char_u *compiled_sys = (char_u *)"' | tr -d $(NL) >> $@$/;"	m
compiled_sys	src/auto/pathdef.c	/^char_u *compiled_sys = (char_u *)"oliverspc";$/;"	v
compiled_user	src/Make_bc5.mak	/^char_u *compiled_user = (char_u *)"$(USERNAME)";$/;"	m
compiled_user	src/Makefile	/^	-@echo 'char_u *compiled_user = (char_u *)"' | tr -d $(NL) >> $@$/;"	m
compiled_user	src/auto/pathdef.c	/^char_u *compiled_user = (char_u *)"oliver";$/;"	v
compitem_S	src/spell.c	/^typedef struct compitem_S$/;"	s	file:
compitem_S::ci_flag	src/spell.c	/^    unsigned	ci_flag;	\/* affix name as number, uses "af_flagtype" *\/$/;"	m	struct:compitem_S	file:	access:public
compitem_S::ci_key	src/spell.c	/^    char_u	ci_key[AH_KEY_LEN]; \/* key for hashtab == name of compound *\/$/;"	m	struct:compitem_S	file:	access:public
compitem_S::ci_newID	src/spell.c	/^    int		ci_newID;	\/* affix ID after renumbering. *\/$/;"	m	struct:compitem_S	file:	access:public
compitem_T	src/spell.c	/^} compitem_T;$/;"	t	typeref:struct:compitem_S	file:
compl_S	src/edit.c	/^struct compl_S$/;"	s	file:
compl_S::cp_flags	src/edit.c	/^    int		cp_flags;	\/* ORIGINAL_TEXT, CONT_S_IPOS or FREE_FNAME *\/$/;"	m	struct:compl_S	file:	access:public
compl_S::cp_fname	src/edit.c	/^    char_u	*cp_fname;	\/* file containing the match, allocated when$/;"	m	struct:compl_S	file:	access:public
compl_S::cp_icase	src/edit.c	/^    char	cp_icase;	\/* TRUE or FALSE: ignore case *\/$/;"	m	struct:compl_S	file:	access:public
compl_S::cp_next	src/edit.c	/^    compl_T	*cp_next;$/;"	m	struct:compl_S	file:	access:public
compl_S::cp_number	src/edit.c	/^    int		cp_number;	\/* sequence number *\/$/;"	m	struct:compl_S	file:	access:public
compl_S::cp_prev	src/edit.c	/^    compl_T	*cp_prev;$/;"	m	struct:compl_S	file:	access:public
compl_S::cp_str	src/edit.c	/^    char_u	*cp_str;	\/* matched text *\/$/;"	m	struct:compl_S	file:	access:public
compl_S::cp_text	src/edit.c	/^    char_u	*(cp_text[CPT_COUNT]);	\/* text for the menu *\/$/;"	m	struct:compl_S	file:	access:public
compl_T	src/edit.c	/^typedef struct compl_S compl_T;$/;"	t	typeref:struct:compl_S	file:
compl_busy	src/edit.c	/^static int	  compl_busy = FALSE;$/;"	v	file:
compl_col	src/edit.c	/^static colnr_T	  compl_col = 0;	    \/* column where the text starts$/;"	v	file:
compl_cont_mode	src/edit.c	/^static int	  compl_cont_mode = 0;$/;"	v	file:
compl_cont_status	src/globals.h	/^EXTERN int	compl_cont_status INIT(= 0);$/;"	v
compl_curr_match	src/edit.c	/^static compl_T    *compl_curr_match = NULL;$/;"	v	file:
compl_direction	src/edit.c	/^static int	  compl_direction = FORWARD;$/;"	v	file:
compl_enter_selects	src/edit.c	/^static int	  compl_enter_selects = FALSE;$/;"	v	file:
compl_first_match	src/edit.c	/^static compl_T    *compl_first_match = NULL;$/;"	v	file:
compl_get_longest	src/edit.c	/^static int	  compl_get_longest = FALSE;	\/* put longest common string$/;"	v	file:
compl_interrupted	src/globals.h	/^EXTERN int	compl_interrupted INIT(= FALSE);$/;"	v
compl_leader	src/edit.c	/^static char_u	  *compl_leader = NULL;$/;"	v	file:
compl_length	src/globals.h	/^EXTERN int	compl_length INIT(= 0);$/;"	v
compl_match_array	src/edit.c	/^static pumitem_T *compl_match_array = NULL;$/;"	v	file:
compl_match_arraysize	src/edit.c	/^static int compl_match_arraysize;$/;"	v	file:
compl_matches	src/edit.c	/^static int	  compl_matches = 0;$/;"	v	file:
compl_orig_text	src/edit.c	/^static char_u	  *compl_orig_text = NULL;  \/* text as it was before$/;"	v	file:
compl_pattern	src/edit.c	/^static char_u	  *compl_pattern = NULL;$/;"	v	file:
compl_pending	src/edit.c	/^static int	  compl_pending = 0;	    \/* > 1 for postponed CTRL-N *\/$/;"	v	file:
compl_restarting	src/edit.c	/^static int	  compl_restarting = FALSE;	\/* don't insert match *\/$/;"	v	file:
compl_shown_match	src/edit.c	/^static compl_T    *compl_shown_match = NULL;$/;"	v	file:
compl_shows_dir	src/edit.c	/^static int	  compl_shows_dir = FORWARD;$/;"	v	file:
compl_started	src/edit.c	/^static int	  compl_started = FALSE;$/;"	v	file:
compl_startpos	src/edit.c	/^static pos_T	  compl_startpos;$/;"	v	file:
compl_used_match	src/edit.c	/^static int	  compl_used_match;	\/* Selected one of the matches.  When$/;"	v	file:
compl_was_interrupted	src/edit.c	/^static int	  compl_was_interrupted = FALSE;  \/* didn't finish finding$/;"	v	file:
compl_xp	src/edit.c	/^static expand_T	  compl_xp;$/;"	v	file:
composing_hangul	src/globals.h	/^EXTERN int		composing_hangul INIT(= 0);$/;"	v
composing_hangul_buffer	src/globals.h	/^EXTERN char_u		composing_hangul_buffer[5];$/;"	v
compositeWidgetClass	src/gui_gtk_vms.h	668;"	d
compound_text_atom	src/ui.c	/^static Atom	compound_text_atom;$/;"	v	file:
compress_added	src/spell.c	/^static long compress_added = 500000;	\/* word count *\/$/;"	v	file:
compress_inc	src/spell.c	/^static long compress_inc = 100;		\/* memory \/ SBLOCKSIZE *\/$/;"	v	file:
compress_start	src/spell.c	/^static long compress_start = 30000;	\/* memory \/ SBLOCKSIZE *\/$/;"	v	file:
computeIndex	src/workshop.c	/^computeIndex($/;"	f	file:	signature:( int wantedCol, char_u *line, int ts)
computeIndex	src/workshop.c	/^static int	 computeIndex(int, char_u *, int);$/;"	p	file:	signature:(int, char_u *, int)
compute_cmdrow	src/ex_getln.c	/^compute_cmdrow()$/;"	f
comvow2	src/hangulin.c	/^comvow2(v, c)$/;"	f	file:
comvow3	src/hangulin.c	/^comvow3(v, c)$/;"	f	file:
concat_esc	src/gui.c	/^concat_esc(gap, text, what)$/;"	f	file:
concat_esc	src/gui.c	/^static void concat_esc __ARGS((garray_T *gap, char_u *text, int what));$/;"	p	file:	signature:(garray_T *gap, char_u *text, int what)
concat_fnames	src/misc1.c	/^concat_fnames(fname1, fname2, sep)$/;"	f
concat_str	src/misc1.c	/^concat_str(str1, str2)$/;"	f
conceal_check_cursur_line	src/screen.c	/^conceal_check_cursur_line()$/;"	f
conceal_cursor_line	src/screen.c	/^conceal_cursor_line(wp)$/;"	f
condstack	src/structs.h	/^struct condstack$/;"	s
condstack::__anon43::csp_ex	src/structs.h	/^	void	*csp_ex[CSTACK_LEN];	\/* exception for pending throw *\/$/;"	m	union:condstack::__anon43	access:public
condstack::__anon43::csp_rv	src/structs.h	/^	void	*csp_rv[CSTACK_LEN];	\/* return typeval for pending return *\/$/;"	m	union:condstack::__anon43	access:public
condstack::cs_emsg_silent_list	src/structs.h	/^    eslist_T	*cs_emsg_silent_list;	\/* saved values of "emsg_silent" *\/$/;"	m	struct:condstack	access:public
condstack::cs_flags	src/structs.h	/^    short	cs_flags[CSTACK_LEN];	\/* CSF_ flags *\/$/;"	m	struct:condstack	access:public
condstack::cs_forinfo	src/structs.h	/^    void	*cs_forinfo[CSTACK_LEN]; \/* info used by ":for" *\/$/;"	m	struct:condstack	access:public
condstack::cs_idx	src/structs.h	/^    int		cs_idx;			\/* current entry, or -1 if none *\/$/;"	m	struct:condstack	access:public
condstack::cs_lflags	src/structs.h	/^    char	cs_lflags;		\/* loop flags: CSL_ flags *\/$/;"	m	struct:condstack	access:public
condstack::cs_line	src/structs.h	/^    int		cs_line[CSTACK_LEN];	\/* line nr of ":while"\/":for" line *\/$/;"	m	struct:condstack	access:public
condstack::cs_looplevel	src/structs.h	/^    int		cs_looplevel;		\/* nr of nested ":while"s and ":for"s *\/$/;"	m	struct:condstack	access:public
condstack::cs_pend	src/structs.h	/^    }		cs_pend;$/;"	m	struct:condstack	typeref:union:condstack::__anon43	access:public
condstack::cs_pending	src/structs.h	/^    char	cs_pending[CSTACK_LEN];	\/* CSTP_: what's pending in ":finally"*\/$/;"	m	struct:condstack	access:public
condstack::cs_trylevel	src/structs.h	/^    int		cs_trylevel;		\/* nr of nested ":try"s *\/$/;"	m	struct:condstack	access:public
configure_serial	src/gui_gtk_f.h	/^    gulong configure_serial;$/;"	m	struct:_GtkForm	access:public
confirm	src/structs.h	/^    int		confirm;		\/* TRUE to invoke yes\/no dialog *\/$/;"	m	struct:__anon42	access:public
confirm	src/uninstal.c	/^confirm(void)$/;"	f	file:	signature:(void)
confirm_msg	src/message.c	/^static char_u	*confirm_msg = NULL;		\/* ":confirm" message *\/$/;"	v	file:
confirm_msg_tail	src/message.c	/^static char_u	*confirm_msg_tail;		\/* tail of confirm_msg *\/$/;"	v	file:
confirm_msg_used	src/message.c	/^static int	confirm_msg_used = FALSE;	\/* displaying confirm_msg *\/$/;"	v	file:
conflags	src/Make_mvc.mak	/^conflags = $(conflags) \/map \/mapinfo:lines$/;"	m
conflags	src/Make_mvc.mak	/^conflags = $(conflags) \/map$/;"	m
conflags	src/Make_mvc.mak	/^conflags = \/nologo \/subsystem:$(SUBSYSTEM)$/;"	m
cons_getch	src/os_msdos.c	/^cons_getch(void)$/;"	f	file:	signature:(void)
cons_getkey	src/os_msdos.c	/^cons_getkey(void)$/;"	f	file:	signature:(void)
cons_kbhit	src/os_msdos.c	/^cons_kbhit(void)$/;"	f	file:	signature:(void)
cons_key	src/os_msdos.c	/^static int cons_key = -1;$/;"	v	file:
const	src/os_os2_cfg.h	61;"	d
cont_in_list	src/structs.h	/^    short	*cont_in_list;	\/* cont.in group IDs, if non-zero *\/$/;"	m	struct:sp_syn	access:public
cont_in_list	src/syntax.c	/^    short	*cont_in_list;	\/* group IDs for "containedin" argument *\/$/;"	m	struct:__anon82	file:	access:public
cont_list	src/syntax.c	/^    short	*cont_list;	\/* group IDs for "contains" argument *\/$/;"	m	struct:__anon82	file:	access:public
container	src/gui_gtk_f.h	/^    GtkContainer container;$/;"	m	struct:_GtkForm	access:public
contextMenu	src/gui_mac.c	/^static MenuRef contextMenu = NULL;$/;"	v	file:
context_sha256_T	src/structs.h	/^} context_sha256_T;$/;"	t	typeref:struct:__anon63
conthere	src/quickfix.c	/^    int		    conthere;	\/* %> used *\/$/;"	m	struct:efm_S	file:	access:public
conv	src/dehqx.py	/^conv = binhex.HexBin(input)$/;"	v
conv	src/ex_cmds2.c	/^    vimconv_T	conv;		\/* type of conversion *\/$/;"	m	struct:source_cookie	file:	access:public
conv_to_pstd	src/farsi.c	/^conv_to_pstd()$/;"	f
conv_to_pvim	src/farsi.c	/^conv_to_pvim()$/;"	f
convertStruct	src/mbyte.c	/^} convertStruct;$/;"	t	typeref:struct:__anon136	file:
convert_3_to_code	src/hangulin.c	47;"	d	file:
convert_3_to_ks	src/hangulin.c	/^convert_3_to_ks(fv, mv, lv, des)$/;"	f	file:
convert_3_to_ks	src/hangulin.c	/^static int convert_3_to_ks __ARGS((int fv, int mv, int lv, char_u *des));$/;"	p	file:	signature:(int fv, int mv, int lv, char_u *des)
convert_filter	src/gui_w48.c	/^convert_filter(char_u *s)$/;"	f	file:	signature:(char_u *s)
convert_filterW	src/gui_w48.c	/^convert_filterW(char_u *s)$/;"	f	file:	signature:(char_u *s)
convert_input	src/mbyte.c	/^convert_input(ptr, len, maxlen)$/;"	f
convert_input_safe	src/mbyte.c	/^convert_input_safe(ptr, len, maxlen, restp, restlenp)$/;"	f
convert_ks_to_3	src/hangulin.c	/^convert_ks_to_3(src, fp, mp, lp)$/;"	f	file:
convert_ks_to_3	src/hangulin.c	/^static void convert_ks_to_3 __ARGS((const char_u *src, int *fp, int *mp, int *lp));$/;"	p	file:	signature:(const char_u *src, int *fp, int *mp, int *lp)
convert_localized_message	src/gui_gtk.c	/^convert_localized_message(char_u **buffer, const char *message)$/;"	f	file:	signature:(char_u **buffer, const char *message)
convert_setup	src/mbyte.c	/^convert_setup(vcp, from, to)$/;"	f
convert_setup_ext	src/mbyte.c	/^convert_setup_ext(vcp, from, from_unicode_is_utf8, to, to_unicode_is_utf8)$/;"	f
cookie	src/ex_cmds.h	/^    void	*cookie;	\/* argument for getline() *\/$/;"	m	struct:exarg	access:public
cookie	src/ex_docmd.c	/^    void	*cookie;$/;"	m	struct:loop_cookie	file:	access:public
copyFoldingState	src/fold.c	/^copyFoldingState(wp_from, wp_to)$/;"	f
copy_char	src/message.c	/^copy_char(from, to, lowercase)$/;"	f	file:
copy_char	src/message.c	/^static int copy_char __ARGS((char_u *from, char_u *to, int lowercase));$/;"	p	file:	signature:(char_u *from, char_u *to, int lowercase)
copy_chars	src/misc2.c	/^copy_chars(ptr, count, c)$/;"	f
copy_id_list	src/syntax.c	/^copy_id_list(list)$/;"	f	file:
copy_id_list	src/syntax.c	/^static short *copy_id_list __ARGS((short *list));$/;"	p	file:	signature:(short *list)
copy_indent	src/misc1.c	/^copy_indent(size, src)$/;"	f	file:
copy_indent	src/misc1.c	/^static int copy_indent __ARGS((int size, char_u	*src));$/;"	p	file:	signature:(int size, char_u *src)
copy_infostreams	src/os_win32.c	/^copy_infostreams(char_u *from, char_u *to)$/;"	f	file:	signature:(char_u *from, char_u *to)
copy_jumplist	src/mark.c	/^copy_jumplist(from, to)$/;"	f
copy_loclist	src/quickfix.c	/^copy_loclist(from, to)$/;"	f
copy_option_part	src/misc2.c	/^copy_option_part(option, buf, maxlen, sep_chars)$/;"	f
copy_redo	src/getchar.c	/^copy_redo(old_redo)$/;"	f	file:
copy_redo	src/getchar.c	/^static void	copy_redo __ARGS((int));$/;"	p	file:	signature:(int)
copy_spaces	src/misc2.c	/^copy_spaces(ptr, count)$/;"	f
copy_substream	src/os_win32.c	/^copy_substream(HANDLE sh, void *context, WCHAR *to, WCHAR *substream, long len)$/;"	f	file:	signature:(HANDLE sh, void *context, WCHAR *to, WCHAR *substream, long len)
copy_text_attr	src/screen.c	/^copy_text_attr(off, buf, len, attr)$/;"	f	file:
copy_text_attr	src/screen.c	/^static void copy_text_attr __ARGS((int off, char_u *buf, int len, int attr));$/;"	p	file:	signature:(int off, char_u *buf, int len, int attr)
copy_tv	src/eval.c	/^copy_tv(from, to)$/;"	f
copy_viminfo_marks	src/mark.c	/^copy_viminfo_marks(virp, fp_out, count, eof, flags)$/;"	f
copy_winopt	src/option.c	/^copy_winopt(from, to)$/;"	f
copy_yank_reg	src/ops.c	/^copy_yank_reg(reg)$/;"	f	file:
copy_yank_reg	src/ops.c	/^static void	copy_yank_reg __ARGS((struct yankreg *reg));$/;"	p	file:	signature:(struct yankreg *reg)
core	src/gui_at_sb.h	/^    CorePart		core;$/;"	m	struct:_ScrollbarRec	access:public
core	src/gui_xmebwp.h	/^    CorePart core;$/;"	m	struct:_XmEnhancedButtonRec	access:public
core_class	src/gui_at_sb.h	/^    CoreClassPart		core_class;$/;"	m	struct:_ScrollbarClassRec	access:public
core_class	src/gui_xmebwp.h	/^    CoreClassPart core_class;$/;"	m	struct:__anon92	access:public
corr_ind_maxparen	src/misc1.c	/^corr_ind_maxparen(ind_maxparen, startpos)$/;"	f	file:
corr_ind_maxparen	src/misc1.c	/^static int	corr_ind_maxparen __ARGS((int ind_maxparen, pos_T *startpos));$/;"	p	file:	signature:(int ind_maxparen, pos_T *startpos)
correct_cmdspos	src/ex_getln.c	/^correct_cmdspos(idx, cells)$/;"	f	file:
correct_cmdspos	src/ex_getln.c	/^static void	correct_cmdspos __ARGS((int idx, int cells));$/;"	p	file:	signature:(int idx, int cells)
correct_range	src/ex_docmd.c	/^correct_range(eap)$/;"	f	file:
correct_range	src/ex_docmd.c	/^static void	correct_range __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
corruption_error	src/undo.c	/^corruption_error(mesg, file_name)$/;"	f	file:
corruption_error	src/undo.c	/^static void corruption_error __ARGS((char *mesg, char_u *file_name));$/;"	p	file:	signature:(char *mesg, char_u *file_name)
count	runtime/indent/bst.vim	/^function! s:count(string,char)$/;"	f
count	runtime/indent/liquid.vim	/^function! s:count(string,pattern)$/;"	f
count	src/gui_at_sb.c	/^    int count;$/;"	m	struct:EventData	file:	access:public
count	src/regexp.c	/^    long	count;$/;"	m	struct:regstar_S	file:	access:public
count0	src/structs.h	/^    long	count0;		\/* count before command, default 0 *\/$/;"	m	struct:cmdarg_S	access:public
count1	src/structs.h	/^    long	count1;		\/* count before command, default 1 *\/$/;"	m	struct:cmdarg_S	access:public
count_and_decode_uri_list	src/gui_gtk_x11.c	/^count_and_decode_uri_list(char_u *out, char_u *raw, int len)$/;"	f	file:	signature:(char_u *out, char_u *raw, int len)
count_braces	runtime/indent/css.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_braces	runtime/indent/ld.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_braces	runtime/indent/tcl.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_braces	runtime/indent/xinetd.vim	/^function s:count_braces(lnum, count_open)$/;"	f
count_changed_buffers	src/netbeans.c	/^count_changed_buffers(void)$/;"	f	file:	signature:(void)
count_cluster_cells	src/gui_gtk_x11.c	/^count_cluster_cells(char_u *s, PangoItem *item,$/;"	f	file:	signature:(char_u *s, PangoItem *item, PangoGlyphString* glyphs, int i, int *cluster_width, int *last_glyph_rbearing)
count_common_word	src/spell.c	/^count_common_word(lp, word, len, count)$/;"	f	file:
count_common_word	src/spell.c	/^static void count_common_word __ARGS((slang_T *lp, char_u *word, int len, int count));$/;"	p	file:	signature:(slang_T *lp, char_u *word, int len, int count)
count_syllables	src/spell.c	/^count_syllables(slang, word)$/;"	f	file:
count_syllables	src/spell.c	/^static int count_syllables __ARGS((slang_T *slang, char_u *word));$/;"	p	file:	signature:(slang_T *slang, char_u *word)
cp_flags	src/edit.c	/^    int		cp_flags;	\/* ORIGINAL_TEXT, CONT_S_IPOS or FREE_FNAME *\/$/;"	m	struct:compl_S	file:	access:public
cp_fname	src/edit.c	/^    char_u	*cp_fname;	\/* file containing the match, allocated when$/;"	m	struct:compl_S	file:	access:public
cp_icase	src/edit.c	/^    char	cp_icase;	\/* TRUE or FALSE: ignore case *\/$/;"	m	struct:compl_S	file:	access:public
cp_next	src/edit.c	/^    compl_T	*cp_next;$/;"	m	struct:compl_S	file:	access:public
cp_number	src/edit.c	/^    int		cp_number;	\/* sequence number *\/$/;"	m	struct:compl_S	file:	access:public
cp_prev	src/edit.c	/^    compl_T	*cp_prev;$/;"	m	struct:compl_S	file:	access:public
cp_str	src/edit.c	/^    char_u	*cp_str;	\/* matched text *\/$/;"	m	struct:compl_S	file:	access:public
cp_text	src/edit.c	/^    char_u	*(cp_text[CPT_COUNT]);	\/* text for the menu *\/$/;"	m	struct:compl_S	file:	access:public
cpo_save	runtime/ftplugin/hamster.vim	/^let cpo_save = &cpo$/;"	v
cpp	runtime/syntax/xpm.vim	/^	 let cpp = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
cpp	runtime/syntax/xpm.vim	/^let cpp    = 0$/;"	v
cpp	runtime/syntax/xpm2.vim	/^	let cpp = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
cpp	runtime/syntax/xpm2.vim	/^  let cpp    = 0$/;"	v
crc_32_tab	src/misc2.c	/^static ulg crc_32_tab[256];$/;"	v	file:
createBalloonEvalWindow	src/gui_beval.c	/^createBalloonEvalWindow(BalloonEval *beval)$/;"	f	file:	signature:(BalloonEval *beval)
createBalloonEvalWindow	src/gui_beval.c	/^createBalloonEvalWindow(beval)$/;"	f	file:
createBalloonEvalWindow	src/gui_beval.c	/^static void createBalloonEvalWindow __ARGS((BalloonEval *));$/;"	p	file:	signature:(BalloonEval *)
createXpmImages	src/gui_athena.c	/^createXpmImages(path, xpm, sen)$/;"	f	file:
createXpmImages	src/gui_athena.c	/^static void createXpmImages __ARGS((char_u *path, char **xpm, Pixmap *sen));$/;"	p	file:	signature:(char_u *path, char **xpm, Pixmap *sen)
create_blank_pointer	src/gui_gtk_x11.c	/^create_blank_pointer(void)$/;"	f	file:	signature:(void)
create_conin	src/os_win32.c	/^create_conin(void)$/;"	f	file:	signature:(void)
create_conin	src/os_win32.c	/^static void create_conin(void);$/;"	p	file:	signature:(void)
create_image_button	src/gui_gtk.c	/^create_image_button(const char *stock_id, const char *label)$/;"	f	file:	signature:(const char *stock_id, const char *label)
create_menu_icon	src/gui_gtk.c	/^create_menu_icon(vimmenu_T *menu, GtkIconSize icon_size)$/;"	f	file:	signature:(vimmenu_T *menu, GtkIconSize icon_size)
create_message_dialog	src/gui_gtk.c	/^create_message_dialog(int type, char_u *title, char_u *message)$/;"	f	file:	signature:(int type, char_u *title, char_u *message)
create_pixmap_label	src/gui_motif.c	/^create_pixmap_label(parent, name, data, args, arg)$/;"	f	file:
create_pixmap_label	src/gui_motif.c	/^static Widget create_pixmap_label(Widget parent, String name, char **data, ArgList args, Cardinal arg);$/;"	p	file:	signature:(Widget parent, String name, char **data, ArgList args, Cardinal arg)
create_shortcut	src/dosinst.c	/^create_shortcut($/;"	f	signature:( const char *shortcut_name, const char *iconfile_path, int iconindex, const char *shortcut_target, const char *shortcut_args, const char *workingdir )
create_tabline_menu	src/gui_gtk_x11.c	/^create_tabline_menu(void)$/;"	f	file:	signature:(void)
create_windows	src/main.c	/^create_windows(parmp)$/;"	f	file:
create_windows	src/main.c	/^static void create_windows __ARGS((mparm_T *parmp));$/;"	p	file:	signature:(mparm_T *parmp)
crnl_to_nl	src/os_mswin.c	/^crnl_to_nl(const char_u *str, int *size)$/;"	f	file:	signature:(const char_u *str, int *size)
crv_status	src/term.c	/^static int crv_status = CRV_GET;$/;"	v	file:
crypt_busy	src/misc2.c	/^static int crypt_busy = 0;$/;"	v	file:
crypt_decode	src/misc2.c	/^crypt_decode(ptr, len)$/;"	f
crypt_encode	src/misc2.c	/^crypt_encode(from, len, to)$/;"	f
crypt_init_keys	src/misc2.c	/^crypt_init_keys(passwd)$/;"	f
crypt_magic	src/fileio.c	/^static char	*crypt_magic[] = {"VimCrypt~01!", "VimCrypt~02!"};$/;"	v	file:
crypt_magic_head	src/fileio.c	/^static char	crypt_magic_head[] = "VimCrypt~";$/;"	v	file:
crypt_method_from_magic	src/fileio.c	/^crypt_method_from_magic(ptr, len)$/;"	f	file:
crypt_method_from_magic	src/fileio.c	/^static int crypt_method_from_magic __ARGS((char *ptr, int len));$/;"	p	file:	signature:(char *ptr, int len)
crypt_method_from_string	src/misc2.c	/^crypt_method_from_string(s)$/;"	f
crypt_pop_state	src/misc2.c	/^crypt_pop_state()$/;"	f
crypt_push_state	src/misc2.c	/^crypt_push_state()$/;"	f
crypt_salt_len	src/fileio.c	/^static int	crypt_salt_len[] = {0, 8};$/;"	v	file:
crypt_seed_len	src/fileio.c	/^static int	crypt_seed_len[] = {0, 8};$/;"	v	file:
cryptxt	src/blowfish.c	/^    char_u   cryptxt[9];$/;"	m	struct:__anon122	file:	access:public
cs_add	src/if_cscope.c	/^cs_add(eap)$/;"	f	file:
cs_add	src/if_cscope.c	/^static int	    cs_add __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
cs_add_common	src/if_cscope.c	/^cs_add_common(arg1, arg2, flags)$/;"	f	file:
cs_add_common	src/if_cscope.c	/^static int	    cs_add_common __ARGS((char *, char *, char *));$/;"	p	file:	signature:(char *, char *, char *)
cs_check_for_connections	src/if_cscope.c	/^cs_check_for_connections()$/;"	f	file:
cs_check_for_connections	src/if_cscope.c	/^static int	    cs_check_for_connections __ARGS((void));$/;"	p	file:	signature:(void)
cs_check_for_tags	src/if_cscope.c	/^cs_check_for_tags()$/;"	f	file:
cs_check_for_tags	src/if_cscope.c	/^static int	    cs_check_for_tags __ARGS((void));$/;"	p	file:	signature:(void)
cs_cmds	src/if_cscope.c	/^static cscmd_T	    cs_cmds[] =$/;"	v	file:
cs_cnt_connections	src/if_cscope.c	/^cs_cnt_connections()$/;"	f	file:
cs_cnt_connections	src/if_cscope.c	/^static int	    cs_cnt_connections __ARGS((void));$/;"	p	file:	signature:(void)
cs_cnt_matches	src/if_cscope.c	/^cs_cnt_matches(idx)$/;"	f	file:
cs_cnt_matches	src/if_cscope.c	/^static int	    cs_cnt_matches __ARGS((int idx));$/;"	p	file:	signature:(int idx)
cs_connection	src/if_cscope.c	/^cs_connection(num, dbpath, ppath)$/;"	f
cs_create_cmd	src/if_cscope.c	/^cs_create_cmd(csoption, pattern)$/;"	f	file:
cs_create_cmd	src/if_cscope.c	/^static char *	    cs_create_cmd __ARGS((char *csoption, char *pattern));$/;"	p	file:	signature:(char *csoption, char *pattern)
cs_create_connection	src/if_cscope.c	/^cs_create_connection(i)$/;"	f	file:
cs_create_connection	src/if_cscope.c	/^static int	    cs_create_connection __ARGS((int i));$/;"	p	file:	signature:(int i)
cs_emsg_silent_list	src/structs.h	/^    eslist_T	*cs_emsg_silent_list;	\/* saved values of "emsg_silent" *\/$/;"	m	struct:condstack	access:public
cs_end	src/if_cscope.c	/^cs_end()$/;"	f
cs_exception	src/structs.h	694;"	d
cs_fgets	src/if_cscope.c	/^cs_fgets(buf, size)$/;"	f
cs_file_results	src/if_cscope.c	/^cs_file_results(f, nummatches_a)$/;"	f	file:
cs_file_results	src/if_cscope.c	/^static void	    cs_file_results __ARGS((FILE *, int *));$/;"	p	file:	signature:(FILE *, int *)
cs_fill_results	src/if_cscope.c	/^cs_fill_results(tagstr, totmatches, nummatches_a, matches_p, cntxts_p, matched)$/;"	f	file:
cs_fill_results	src/if_cscope.c	/^static void	    cs_fill_results __ARGS((char *, int , int *, char ***,$/;"	p	file:	signature:(char *, int , int *, char ***, char ***, int *)
cs_find	src/if_cscope.c	/^cs_find(eap)$/;"	f	file:
cs_find	src/if_cscope.c	/^static int	    cs_find __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
cs_find_common	src/if_cscope.c	/^cs_find_common(opt, pat, forceit, verbose, use_ll, cmdline)$/;"	f	file:
cs_find_common	src/if_cscope.c	/^static int	    cs_find_common __ARGS((char *opt, char *pat, int, int, int, char_u *cmdline));$/;"	p	file:	signature:(char *opt, char *pat, int, int, int, char_u *cmdline)
cs_flags	src/structs.h	/^    short	cs_flags[CSTACK_LEN];	\/* CSF_ flags *\/$/;"	m	struct:condstack	access:public
cs_forinfo	src/structs.h	/^    void	*cs_forinfo[CSTACK_LEN]; \/* info used by ":for" *\/$/;"	m	struct:condstack	access:public
cs_free_tags	src/if_cscope.c	/^cs_free_tags()$/;"	f
cs_help	src/if_cscope.c	/^cs_help(eap)$/;"	f	file:
cs_help	src/if_cscope.c	/^static int	    cs_help __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
cs_idx	src/structs.h	/^    int		cs_idx;			\/* current entry, or -1 if none *\/$/;"	m	struct:condstack	access:public
cs_insert_filelist	src/if_cscope.c	/^cs_insert_filelist(fname, ppath, flags, sb)$/;"	f	file:
cs_insert_filelist	src/if_cscope.c	/^static int	    cs_insert_filelist __ARGS((char *, char *, char *,$/;"	p	file:	signature:(char *, char *, char *, struct stat *)
cs_kill	src/if_cscope.c	/^cs_kill(eap)$/;"	f	file:
cs_kill	src/if_cscope.c	/^static int	    cs_kill __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
cs_kill_execute	src/if_cscope.c	/^cs_kill_execute(i, cname)$/;"	f	file:
cs_kill_execute	src/if_cscope.c	/^static void	    cs_kill_execute __ARGS((int, char *));$/;"	p	file:	signature:(int, char *)
cs_lflags	src/structs.h	/^    char	cs_lflags;		\/* loop flags: CSL_ flags *\/$/;"	m	struct:condstack	access:public
cs_line	src/structs.h	/^    int		cs_line[CSTACK_LEN];	\/* line nr of ":while"\/":for" line *\/$/;"	m	struct:condstack	access:public
cs_lookup_cmd	src/if_cscope.c	/^cs_lookup_cmd(eap)$/;"	f	file:
cs_lookup_cmd	src/if_cscope.c	/^static cscmd_T *    cs_lookup_cmd __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
cs_looplevel	src/structs.h	/^    int		cs_looplevel;		\/* nr of nested ":while"s and ":for"s *\/$/;"	m	struct:condstack	access:public
cs_make_vim_style_matches	src/if_cscope.c	/^cs_make_vim_style_matches(fname, slno, search, tagstr)$/;"	f	file:
cs_make_vim_style_matches	src/if_cscope.c	/^static char *	    cs_make_vim_style_matches __ARGS((char *, char *,$/;"	p	file:	signature:(char *, char *, char *, char *)
cs_manage_matches	src/if_cscope.c	/^cs_manage_matches(matches, contexts, totmatches, cmd)$/;"	f	file:
cs_manage_matches	src/if_cscope.c	/^static char *	    cs_manage_matches __ARGS((char **, char **, int, mcmd_e));$/;"	p	file:	signature:(char **, char **, int, mcmd_e)
cs_parse_results	src/if_cscope.c	/^cs_parse_results(cnumber, buf, bufsize, context, linenumber, search)$/;"	f	file:
cs_parse_results	src/if_cscope.c	/^static char *	    cs_parse_results __ARGS((int cnumber, char *buf, int bufsize, char **context, char **linenumber, char **search));$/;"	p	file:	signature:(int cnumber, char *buf, int bufsize, char **context, char **linenumber, char **search)
cs_pathcomponents	src/if_cscope.c	/^cs_pathcomponents(path)$/;"	f	file:
cs_pathcomponents	src/if_cscope.c	/^static char *	    cs_pathcomponents __ARGS((char *path));$/;"	p	file:	signature:(char *path)
cs_pend	src/structs.h	/^    }		cs_pend;$/;"	m	struct:condstack	typeref:union:condstack::__anon43	access:public
cs_pending	src/structs.h	/^    char	cs_pending[CSTACK_LEN];	\/* CSTP_: what's pending in ":finally"*\/$/;"	m	struct:condstack	access:public
cs_print_tags	src/if_cscope.c	/^cs_print_tags()$/;"	f
cs_print_tags_priv	src/if_cscope.c	/^cs_print_tags_priv(matches, cntxts, num_matches)$/;"	f	file:
cs_print_tags_priv	src/if_cscope.c	/^static void	    cs_print_tags_priv __ARGS((char **, char **, int));$/;"	p	file:	signature:(char **, char **, int)
cs_read_prompt	src/if_cscope.c	/^cs_read_prompt(i)$/;"	f	file:
cs_read_prompt	src/if_cscope.c	/^static int	    cs_read_prompt __ARGS((int));$/;"	p	file:	signature:(int)
cs_reading_emsg	src/if_cscope.c	/^cs_reading_emsg(idx)$/;"	f	file:
cs_reading_emsg	src/if_cscope.c	/^static void	    cs_reading_emsg __ARGS((int idx));$/;"	p	file:	signature:(int idx)
cs_release_csp	src/if_cscope.c	/^cs_release_csp(i, freefnpp)$/;"	f	file:
cs_release_csp	src/if_cscope.c	/^static void	    cs_release_csp __ARGS((int, int freefnpp));$/;"	p	file:	signature:(int, int freefnpp)
cs_reset	src/if_cscope.c	/^cs_reset(eap)$/;"	f	file:
cs_reset	src/if_cscope.c	/^static int	    cs_reset __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
cs_resolve_file	src/if_cscope.c	/^cs_resolve_file(i, name)$/;"	f	file:
cs_resolve_file	src/if_cscope.c	/^static char *	    cs_resolve_file __ARGS((int, char *));$/;"	p	file:	signature:(int, char *)
cs_rettv	src/structs.h	693;"	d
cs_show	src/if_cscope.c	/^cs_show(eap)$/;"	f	file:
cs_show	src/if_cscope.c	/^static int	    cs_show __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
cs_stat_emsg	src/if_cscope.c	/^cs_stat_emsg(fname)$/;"	f	file:
cs_stat_emsg	src/if_cscope.c	/^static void	    cs_stat_emsg __ARGS((char *fname));$/;"	p	file:	signature:(char *fname)
cs_trylevel	src/structs.h	/^    int		cs_trylevel;		\/* nr of nested ":try"s *\/$/;"	m	struct:condstack	access:public
cs_usage_msg	src/if_cscope.c	/^cs_usage_msg(x)$/;"	f	file:
cs_usage_msg	src/if_cscope.c	/^static void	    cs_usage_msg __ARGS((csid_e x));$/;"	p	file:	signature:(csid_e x)
csc_minlines	runtime/syntax/csc.vim	/^	let csc_minlines = 50	" mostly for () constructs$/;"	v
cscmd_T	src/if_cscope.h	/^} cscmd_T;$/;"	t	typeref:struct:__anon86
csh_like_shell	src/misc2.c	/^csh_like_shell()$/;"	f
csi	src/if_cscope.h	/^typedef struct csi {$/;"	s
csi::flags	src/if_cscope.h	/^    char *	    flags;	\/* additional cscope flags\/options (e.g, -p2) *\/$/;"	m	struct:csi	access:public
csi::fname	src/if_cscope.h	/^    char *	    fname;	\/* cscope db name *\/$/;"	m	struct:csi	access:public
csi::fr_fp	src/if_cscope.h	/^    FILE *	    fr_fp;	\/* from cscope: FILE. *\/$/;"	m	struct:csi	access:public
csi::hProc	src/if_cscope.h	/^    HANDLE	    hProc;	\/* cscope process handle *\/$/;"	m	struct:csi	access:public
csi::nIndexHigh	src/if_cscope.h	/^    DWORD	    nIndexHigh;	\/* st_ino has no meaning in the Windows *\/$/;"	m	struct:csi	access:public
csi::nIndexLow	src/if_cscope.h	/^    DWORD	    nIndexLow;$/;"	m	struct:csi	access:public
csi::nVolume	src/if_cscope.h	/^    DWORD	    nVolume;	\/* Volume serial number, instead of st_dev *\/$/;"	m	struct:csi	access:public
csi::pid	src/if_cscope.h	/^    DWORD	    pid;	\/* PID of the connected cscope process. *\/$/;"	m	struct:csi	access:public
csi::pid	src/if_cscope.h	/^    pid_t	    pid;	\/* PID of the connected cscope process. *\/$/;"	m	struct:csi	access:public
csi::ppath	src/if_cscope.h	/^    char *	    ppath;	\/* path to prepend (the -P option) *\/$/;"	m	struct:csi	access:public
csi::st_dev	src/if_cscope.h	/^    dev_t	    st_dev;	\/* ID of dev containing cscope db *\/$/;"	m	struct:csi	access:public
csi::st_ino	src/if_cscope.h	/^    ino_t	    st_ino;	\/* inode number of cscope db *\/$/;"	m	struct:csi	access:public
csi::to_fp	src/if_cscope.h	/^    FILE *	    to_fp;	\/* to cscope: FILE. *\/$/;"	m	struct:csi	access:public
csid_e	src/if_cscope.h	/^typedef enum { Add, Find, Help, Kill, Reset, Show } csid_e;$/;"	t	typeref:enum:__anon87
csinfo	src/if_cscope.c	/^static csinfo_T *   csinfo = NULL;$/;"	v	file:
csinfo_T	src/if_cscope.h	/^} csinfo_T;$/;"	t	typeref:struct:csi
csinfo_size	src/if_cscope.c	/^static int	    csinfo_size = 0;	\/* number of items allocated in$/;"	v	file:
csp_ex	src/structs.h	/^	void	*csp_ex[CSTACK_LEN];	\/* exception for pending throw *\/$/;"	m	union:condstack::__anon43	access:public
csp_rv	src/structs.h	/^	void	*csp_rv[CSTACK_LEN];	\/* return typeval for pending return *\/$/;"	m	union:condstack::__anon43	access:public
csscomplete#CompleteCSS	runtime/autoload/csscomplete.vim	/^function! csscomplete#CompleteCSS(findstart, base)$/;"	f
cstack	src/ex_cmds.h	/^    struct condstack *cstack;	\/* condition stack for ":if" etc. *\/$/;"	m	struct:exarg	typeref:struct:exarg::condstack	access:public
cstrchr	src/regexp.c	/^cstrchr(s, c)$/;"	f	file:
cstrchr	src/regexp.c	/^static char_u *cstrchr __ARGS((char_u *, int));$/;"	p	file:	signature:(char_u *, int)
cstrncmp	src/regexp.c	/^cstrncmp(s1, s2, n)$/;"	f	file:
cstrncmp	src/regexp.c	/^static int cstrncmp __ARGS((char_u *s1, char_u *s2, int *n));$/;"	p	file:	signature:(char_u *s1, char_u *s2, int *n)
cterm	src/structs.h	/^	} cterm;$/;"	m	union:attr_entry::__anon45	typeref:struct:attr_entry::__anon45::__anon47	access:public
cterm_attr_table	src/syntax.c	/^static garray_T	cterm_attr_table = {0, 0, 0, 0, NULL};$/;"	v	file:
cterm_color_16	src/hardcopy.c	/^static const long_u  cterm_color_16[16] =$/;"	v	file:
cterm_color_8	src/hardcopy.c	/^static const long_u  cterm_color_8[8] =$/;"	v	file:
cterm_normal_bg_color	src/globals.h	/^EXTERN int	cterm_normal_bg_color INIT(= 0);$/;"	v
cterm_normal_fg_bold	src/globals.h	/^EXTERN int	cterm_normal_fg_bold INIT(= 0);$/;"	v
cterm_normal_fg_color	src/globals.h	/^EXTERN int	cterm_normal_fg_color INIT(= 0);$/;"	v
ctrl_c_interrupts	src/globals.h	/^EXTERN int	ctrl_c_interrupts INIT(= TRUE);	\/* CTRL-C sets got_int *\/$/;"	v
ctrl_x_mode	src/globals.h	/^EXTERN int	ctrl_x_mode INIT(= 0);	\/* Which Ctrl-X mode are we in? *\/$/;"	v
ctrl_x_msgs	src/edit.c	/^static char *ctrl_x_msgs[] =$/;"	v	file:
ctrlc_pressed	src/os_msdos.c	/^static int ctrlc_pressed = FALSE;   \/* set when ctrl-C or ctrl-break detected *\/$/;"	v	file:
curMenuName	src/workshop.c	/^char		 curMenuName[BUFSIZ];$/;"	v
curMenuPriority	src/workshop.c	/^char		 curMenuPriority[BUFSIZ];$/;"	v
curPCtype	src/netbeans.c	/^static int curPCtype = -1;$/;"	v	file:
cur_beval	src/gui_w32.c	/^static BalloonEval  *cur_beval = NULL;$/;"	v	file:
cur_fnum	src/structs.h	/^    int		cur_fnum;	\/* buffer number used for cur_match *\/$/;"	m	struct:taggy	access:public
cur_match	src/structs.h	/^    int		cur_match;	\/* match number *\/$/;"	m	struct:taggy	access:public
cur_tmode	src/globals.h	/^EXTERN int	cur_tmode INIT(= TMODE_COOK);	\/* input terminal mode *\/$/;"	v
curbuf	src/globals.h	/^EXTERN buf_T	*curbuf INIT(= NULL);	\/* currently active buffer *\/$/;"	v
curbuf	src/if_tcl.c	/^    char *curbuf, *curwin;$/;"	m	struct:__anon123	file:	access:public
curbufIsChanged	src/undo.c	/^curbufIsChanged()$/;"	f
curbuf_lock	src/globals.h	/^EXTERN int	curbuf_lock INIT(= 0);$/;"	v
curbuf_locked	src/ex_getln.c	/^curbuf_locked()$/;"	f
curchr	src/regexp.c	/^static int	curchr;$/;"	v	file:
curerr	src/if_mzsch.c	/^static Scheme_Object *curerr = NULL;$/;"	v	file:
curout	src/if_mzsch.c	/^static Scheme_Object *curout = NULL;$/;"	v	file:
curpat	src/fileio.c	/^    AutoPat	*curpat;	\/* next AutoPat to examine *\/$/;"	m	struct:AutoPatCmd	file:	access:public
currBgColor	src/gui.h	/^    guicolor_T	currBgColor;	    \/* Current background text color *\/$/;"	m	struct:Gui	access:public
currFgColor	src/gui.h	/^    guicolor_T	currFgColor;	    \/* Current foreground text color *\/$/;"	m	struct:Gui	access:public
currFont	src/gui.h	/^    GuiFont	currFont;	    \/* Current font *\/$/;"	m	struct:Gui	access:public
currSpColor	src/gui.h	/^    guicolor_T	currSpColor;	    \/* Current special text color *\/$/;"	m	struct:Gui	access:public
curr_bg	src/hardcopy.c	/^static long_u	curr_bg;$/;"	v	file:
curr_bold	src/hardcopy.c	/^static int	curr_bold;$/;"	v	file:
curr_fg	src/hardcopy.c	/^static long_u	curr_fg;$/;"	v	file:
curr_italic	src/hardcopy.c	/^static int	curr_italic;$/;"	v	file:
curr_tmode	src/os_unix.c	/^static int curr_tmode = TMODE_COOK;	\/* contains current terminal mode *\/$/;"	v	file:
curr_underline	src/hardcopy.c	/^static int	curr_underline;$/;"	v	file:
current_SID	src/globals.h	/^EXTERN scid_T	current_SID INIT(= 0);$/;"	v
current_ScreenLine	src/screen.c	/^static schar_T	*current_ScreenLine;$/;"	v	file:
current_attr	src/syntax.c	/^static int current_attr = 0;	    \/* attr of current syntax word *\/$/;"	v	file:
current_augroup	src/fileio.c	/^static int current_augroup = AUGROUP_DEFAULT;$/;"	v	file:
current_beval	src/gui_beval.c	/^static BalloonEval *current_beval = NULL;$/;"	v	file:
current_block	src/search.c	/^current_block(oap, count, include, what, other)$/;"	f
current_col	src/syntax.c	/^static colnr_T	current_col = 0;	\/* column of current state *\/$/;"	v	file:
current_compiler	runtime/compiler/ant.vim	/^let current_compiler = "ant"$/;"	v
current_compiler	runtime/compiler/bcc.vim	/^let current_compiler = "bcc"$/;"	v
current_compiler	runtime/compiler/bdf.vim	/^let current_compiler = "bdf"$/;"	v
current_compiler	runtime/compiler/checkstyle.vim	/^let current_compiler = "checkstyle"$/;"	v
current_compiler	runtime/compiler/cs.vim	/^let current_compiler = "cs"$/;"	v
current_compiler	runtime/compiler/cucumber.vim	/^let current_compiler = "cucumber"$/;"	v
current_compiler	runtime/compiler/decada.vim	/^let current_compiler = "decada"$/;"	v
current_compiler	runtime/compiler/dot.vim	/^let current_compiler = "dot"$/;"	v
current_compiler	runtime/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	runtime/compiler/fortran_F.vim	/^let current_compiler = "fortran_F"$/;"	v
current_compiler	runtime/compiler/fortran_cv.vim	/^let current_compiler = "fortran_cv"$/;"	v
current_compiler	runtime/compiler/fortran_elf90.vim	/^let current_compiler = "fortran_elf90"$/;"	v
current_compiler	runtime/compiler/fortran_g77.vim	/^let current_compiler = "fortran_g77"$/;"	v
current_compiler	runtime/compiler/fortran_lf95.vim	/^let current_compiler = "fortran_lf95"$/;"	v
current_compiler	runtime/compiler/fpc.vim	/^let current_compiler = "fpc"$/;"	v
current_compiler	runtime/compiler/gcc.vim	/^let current_compiler = "gcc"$/;"	v
current_compiler	runtime/compiler/gnat.vim	/^let current_compiler = "gnat"$/;"	v
current_compiler	runtime/compiler/hp_acc.vim	/^let current_compiler = "hp_acc"$/;"	v
current_compiler	runtime/compiler/icc.vim	/^let current_compiler = "icc"$/;"	v
current_compiler	runtime/compiler/intel.vim	/^let current_compiler = "intel"$/;"	v
current_compiler	runtime/compiler/irix5_c.vim	/^let current_compiler = "irix5_c"$/;"	v
current_compiler	runtime/compiler/irix5_cpp.vim	/^let current_compiler = "irix5_cpp"$/;"	v
current_compiler	runtime/compiler/javac.vim	/^let current_compiler = "javac"$/;"	v
current_compiler	runtime/compiler/jikes.vim	/^let current_compiler = "jikes"$/;"	v
current_compiler	runtime/compiler/mcs.vim	/^let current_compiler = "mcs"$/;"	v
current_compiler	runtime/compiler/mips_c.vim	/^let current_compiler = "mips_c"$/;"	v
current_compiler	runtime/compiler/mipspro_c89.vim	/^let current_compiler = "mipspro_c89"$/;"	v
current_compiler	runtime/compiler/mipspro_cpp.vim	/^let current_compiler = "mipspro_cpp"$/;"	v
current_compiler	runtime/compiler/modelsim_vcom.vim	/^let current_compiler = "modelsim_vcom"$/;"	v
current_compiler	runtime/compiler/msvc.vim	/^let current_compiler = "msvc"$/;"	v
current_compiler	runtime/compiler/neato.vim	/^let current_compiler = "neato"$/;"	v
current_compiler	runtime/compiler/onsgmls.vim	/^let current_compiler = "onsgmls"$/;"	v
current_compiler	runtime/compiler/pbx.vim	/^let current_compiler = "pbx"$/;"	v
current_compiler	runtime/compiler/perl.vim	/^let current_compiler = "perl"$/;"	v
current_compiler	runtime/compiler/php.vim	/^let current_compiler = "php"$/;"	v
current_compiler	runtime/compiler/pyunit.vim	/^let current_compiler = "pyunit"$/;"	v
current_compiler	runtime/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	runtime/compiler/rst.vim	/^let current_compiler = "rst"$/;"	v
current_compiler	runtime/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	runtime/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_compiler	runtime/compiler/se.vim	/^let current_compiler = "se"$/;"	v
current_compiler	runtime/compiler/splint.vim	/^let current_compiler = "splint"$/;"	v
current_compiler	runtime/compiler/tcl.vim	/^let current_compiler = "tcl"$/;"	v
current_compiler	runtime/compiler/tex.vim	/^		let current_compiler = "latex"$/;"	v
current_compiler	runtime/compiler/tex.vim	/^		let current_compiler = b:tex_flavor$/;"	v
current_compiler	runtime/compiler/tex.vim	/^		let current_compiler = g:tex_flavor$/;"	v
current_compiler	runtime/compiler/tex.vim	/^	let current_compiler = 'make'$/;"	v
current_compiler	runtime/compiler/tidy.vim	/^let current_compiler = "tidy"$/;"	v
current_compiler	runtime/compiler/xmllint.vim	/^let current_compiler = "xmllint"$/;"	v
current_compiler	runtime/compiler/xmlwf.vim	/^let current_compiler = "xmlwf"$/;"	v
current_copyID	src/eval.c	/^static int current_copyID = 0;$/;"	v	file:
current_exception	src/ex_docmd.c	/^    except_T	*current_exception;$/;"	m	struct:dbg_stuff	file:	access:public
current_exception	src/globals.h	/^EXTERN except_T *current_exception;$/;"	v
current_finished	src/syntax.c	/^static int	current_finished = 0;	\/* current line has been finished *\/$/;"	v	file:
current_flags	src/syntax.c	/^static int current_flags = 0;$/;"	v	file:
current_font_height	src/os_mswin.c	/^int current_font_height = -12;		\/* also used in gui_w48.c *\/$/;"	v
current_fontset	src/gui_x11.c	/^static XFontSet current_fontset = NULL;$/;"	v	file:
current_func_returned	src/eval.c	/^current_func_returned()$/;"	f
current_funccal	src/eval.c	/^funccall_T *current_funccal = NULL;$/;"	v
current_id	src/syntax.c	/^static int current_id = 0;	    \/* ID of current char for syn_get_id() *\/$/;"	v	file:
current_line	src/ex_docmd.c	/^    int		current_line;		\/* last read line from growarray *\/$/;"	m	struct:loop_cookie	file:	access:public
current_line_id	src/syntax.c	/^static int	current_line_id = 0;	\/* unique number for current line *\/$/;"	v	file:
current_line_number	src/if_ruby.c	/^static VALUE current_line_number()$/;"	f	file:
current_lnum	src/syntax.c	/^static linenr_T current_lnum = 0;	\/* lnum of current state *\/$/;"	v	file:
current_menu	src/globals.h	/^EXTERN vimmenu_T	*current_menu;$/;"	v
current_next_flags	src/syntax.c	/^static int	current_next_flags = 0; \/* flags for current_next_list *\/$/;"	v	file:
current_next_list	src/syntax.c	/^static short	*current_next_list = NULL; \/* when non-zero, nextgroup list *\/$/;"	v	file:
current_par	src/search.c	/^current_par(oap, count, include, type)$/;"	f
current_quote	src/search.c	/^current_quote(oap, count, include, quotechar)$/;"	f
current_scrollbar	src/globals.h	/^EXTERN int	current_scrollbar;$/;"	v
current_sent	src/search.c	/^current_sent(oap, count, include)$/;"	f
current_seqnr	src/syntax.c	/^static int current_seqnr = 0;$/;"	v	file:
current_state	src/syntax.c	/^static garray_T current_state		\/* current stack of state_items *\/$/;"	v	file:
current_state_stored	src/syntax.c	/^static int	current_state_stored = 0; \/* TRUE if stored current state$/;"	v	file:
current_sub_char	src/syntax.c	/^static int current_sub_char = 0;$/;"	v	file:
current_syn_id	src/hardcopy.c	/^static int		current_syn_id;$/;"	v	file:
current_syn_inc_tag	src/syntax.c	/^static int current_syn_inc_tag = 0;$/;"	v	file:
current_tab	src/globals.h	/^EXTERN int	    current_tab;$/;"	v
current_tabmenu	src/globals.h	/^EXTERN int	    current_tabmenu;$/;"	v
current_tagblock	src/search.c	/^current_tagblock(oap, count_arg, include)$/;"	f
current_trans_id	src/syntax.c	/^static int current_trans_id = 0;    \/* idem, transparency removed *\/$/;"	v	file:
current_word	src/search.c	/^current_word(oap, count, include, bigword)$/;"	f
curs_columns	src/move.c	/^curs_columns(scroll)$/;"	f
curs_rows	src/move.c	/^curs_rows(wp, do_botline)$/;"	f	file:
curs_rows	src/move.c	/^static void curs_rows __ARGS((win_T *wp, int do_botline));$/;"	p	file:	signature:(win_T *wp, int do_botline)
curscript	src/globals.h	/^EXTERN int	curscript INIT(= 0);	    \/* index in scriptin[] *\/$/;"	v
cursorRgn	src/gui_mac.c	/^static RgnHandle cursorRgn;$/;"	v	file:
cursor_col	src/gui.h	/^    int		cursor_col;	    \/* Physical cursor column in GUI display *\/$/;"	m	struct:Gui	access:public
cursor_correct	src/move.c	/^cursor_correct()$/;"	f
cursor_down	src/edit.c	/^cursor_down(n, upd_topline)$/;"	f
cursor_entry	src/structs.h	/^typedef struct cursor_entry$/;"	s
cursor_entry::blinkoff	src/structs.h	/^    long	blinkoff;	\/* blinking, off time *\/$/;"	m	struct:cursor_entry	access:public
cursor_entry::blinkon	src/structs.h	/^    long	blinkon;	\/* blinking, on time *\/$/;"	m	struct:cursor_entry	access:public
cursor_entry::blinkwait	src/structs.h	/^    long	blinkwait;	\/* blinking, wait time before blinking starts *\/$/;"	m	struct:cursor_entry	access:public
cursor_entry::id	src/structs.h	/^    int		id;		\/* highlight group ID *\/$/;"	m	struct:cursor_entry	access:public
cursor_entry::id_lm	src/structs.h	/^    int		id_lm;		\/* highlight group ID for :lmap mode *\/$/;"	m	struct:cursor_entry	access:public
cursor_entry::mshape	src/structs.h	/^    int		mshape;		\/* one of the MSHAPE defines *\/$/;"	m	struct:cursor_entry	access:public
cursor_entry::name	src/structs.h	/^    char	*name;		\/* mode name (fixed) *\/$/;"	m	struct:cursor_entry	access:public
cursor_entry::percentage	src/structs.h	/^    int		percentage;	\/* percentage of cell for bar *\/$/;"	m	struct:cursor_entry	access:public
cursor_entry::shape	src/structs.h	/^    int		shape;		\/* one of the SHAPE_ defines *\/$/;"	m	struct:cursor_entry	access:public
cursor_entry::used_for	src/structs.h	/^    char	used_for;	\/* SHAPE_MOUSE and\/or SHAPE_CURSOR *\/$/;"	m	struct:cursor_entry	access:public
cursor_is_off	src/term.c	/^static int cursor_is_off = FALSE;$/;"	v	file:
cursor_is_valid	src/gui.h	/^    char	cursor_is_valid;    \/* There is a cursor at cursor_row\/col *\/$/;"	m	struct:Gui	access:public
cursor_off	src/term.c	/^cursor_off()$/;"	f
cursor_on	src/term.c	/^cursor_on()$/;"	f
cursor_pos_info	src/ops.c	/^cursor_pos_info()$/;"	f
cursor_row	src/gui.h	/^    int		cursor_row;	    \/* Physical cursor row in GUI display *\/$/;"	m	struct:Gui	access:public
cursor_start	src/structs.h	/^    pos_T	cursor_start;	\/* cursor position before motion for "gw" *\/$/;"	m	struct:oparg_S	access:public
cursor_up	src/edit.c	/^cursor_up(n, upd_topline)$/;"	f
cursor_valid	src/move.c	/^cursor_valid()$/;"	f
cursor_visible	src/os_win32.c	/^cursor_visible(BOOL fVisible)$/;"	f	file:	signature:(BOOL fVisible)
cursor_visible	src/os_win32.c	/^static void cursor_visible(BOOL fVisible);$/;"	p	file:	signature:(BOOL fVisible)
cursorcmd	src/ex_getln.c	/^cursorcmd()$/;"	f	file:
cursorcmd	src/ex_getln.c	/^static void	cursorcmd __ARGS((void));$/;"	p	file:	signature:(void)
cursorentry_T	src/structs.h	/^} cursorentry_T;$/;"	t	typeref:struct:cursor_entry
curtab	src/globals.h	/^EXTERN tabpage_T    *curtab;$/;"	v
curwin	src/globals.h	/^EXTERN win_T	*curwin;	\/* currently active window *\/$/;"	v
curwin	src/if_tcl.c	/^    char *curbuf, *curwin;$/;"	m	struct:__anon123	file:	access:public
curwin_col_off	src/move.c	/^curwin_col_off()$/;"	f
curwin_col_off2	src/move.c	/^curwin_col_off2()$/;"	f
curwin_init	src/window.c	/^curwin_init()$/;"	f
cvs	src/Makefile	/^	cvs=`find $(DEST_MACRO) \\( -name CVS -o -name AAPDIR -o -name "*.info" \\) -print`; \\$/;"	m
cvs	src/Makefile	/^	cvs=`find $(DEST_TOOLS) \\( -name CVS -o -name AAPDIR \\) -print`; \\$/;"	m
cycle	runtime/ftplugin/gitrebase.vim	/^function! s:cycle()$/;"	f
d	runtime/macros/less.vim	/^noremap <script> d <C-D><SID>L$/;"	m
d	src/dehqx.py	/^        d = conv.read_rsrc(128000)$/;"	v
d	src/dehqx.py	/^    d = conv.read(128000)$/;"	v
d	src/dehqx.py	/^d = conv.read_rsrc(128000)$/;"	v
darken_rgb	src/hardcopy.c	/^darken_rgb(rgb)$/;"	f	file:
darken_rgb	src/hardcopy.c	/^static long_u darken_rgb __ARGS((long_u rgb));$/;"	p	file:	signature:(long_u rgb)
dataBrowser	src/gui_mac.c	/^static ControlRef dataBrowser = NULL;$/;"	v	file:
data_block	src/memline.c	/^struct data_block$/;"	s	file:
data_block::db_free	src/memline.c	/^    unsigned	db_free;	\/* free space available *\/$/;"	m	struct:data_block	file:	access:public
data_block::db_id	src/memline.c	/^    short_u	db_id;		\/* ID for data block: DATA_ID *\/$/;"	m	struct:data_block	file:	access:public
data_block::db_index	src/memline.c	/^    unsigned	db_index[1];	\/* index for start of line (actually bigger)$/;"	m	struct:data_block	file:	access:public
data_block::db_line_count	src/memline.c	/^    linenr_T	db_line_count;	\/* number of lines in this block *\/$/;"	m	struct:data_block	file:	access:public
data_block::db_txt_end	src/memline.c	/^    unsigned	db_txt_end;	\/* byte just after data block *\/$/;"	m	struct:data_block	file:	access:public
data_block::db_txt_start	src/memline.c	/^    unsigned	db_txt_start;	\/* byte where text starts *\/$/;"	m	struct:data_block	file:	access:public
datarootdir	src/auto/config.mk	/^datarootdir	= ${prefix}\/share$/;"	m
dbFocusCallback	src/gui_mac.c	/^dbFocusCallback(EventHandlerCallRef handler, EventRef event, void *data)$/;"	f	file:	signature:(EventHandlerCallRef handler, EventRef event, void *data)
dbGetContextualMenuCallback	src/gui_mac.c	/^dbGetContextualMenuCallback(ControlRef browser,$/;"	f	file:	signature:(ControlRef browser, MenuRef *menu, UInt32 *helpType, CFStringRef *helpItemString, AEDesc *selection)
dbItemDataCallback	src/gui_mac.c	/^dbItemDataCallback(ControlRef browser,$/;"	f	file:	signature:(ControlRef browser, DataBrowserItemID itemID, DataBrowserPropertyID property , DataBrowserItemDataRef itemData, Boolean changeValue)
dbItemNotificationCallback	src/gui_mac.c	/^dbItemNotificationCallback(ControlRef browser,$/;"	f	file:	signature:(ControlRef browser, DataBrowserItemID item, DataBrowserItemNotification message)
dbSelectContextualMenuCallback	src/gui_mac.c	/^dbSelectContextualMenuCallback(ControlRef browser,$/;"	f	file:	signature:(ControlRef browser, MenuRef menu, UInt32 selectionType, SInt16 menuID, MenuItemIndex menuItem)
db_free	src/memline.c	/^    unsigned	db_free;	\/* free space available *\/$/;"	m	struct:data_block	file:	access:public
db_id	src/memline.c	/^    short_u	db_id;		\/* ID for data block: DATA_ID *\/$/;"	m	struct:data_block	file:	access:public
db_index	src/memline.c	/^    unsigned	db_index[1];	\/* index for start of line (actually bigger)$/;"	m	struct:data_block	file:	access:public
db_line_count	src/memline.c	/^    linenr_T	db_line_count;	\/* number of lines in this block *\/$/;"	m	struct:data_block	file:	access:public
db_txt_end	src/memline.c	/^    unsigned	db_txt_end;	\/* byte just after data block *\/$/;"	m	struct:data_block	file:	access:public
db_txt_start	src/memline.c	/^    unsigned	db_txt_start;	\/* byte where text starts *\/$/;"	m	struct:data_block	file:	access:public
dbcs_char2bytes	src/mbyte.c	/^dbcs_char2bytes(c, buf)$/;"	f	file:
dbcs_char2bytes	src/mbyte.c	/^static int dbcs_char2bytes __ARGS((int c, char_u *buf));$/;"	p	file:	signature:(int c, char_u *buf)
dbcs_char2cells	src/mbyte.c	/^dbcs_char2cells(c)$/;"	f	file:
dbcs_char2cells	src/mbyte.c	/^static int dbcs_char2cells __ARGS((int c));$/;"	p	file:	signature:(int c)
dbcs_char2len	src/mbyte.c	/^dbcs_char2len(c)$/;"	f	file:
dbcs_char2len	src/mbyte.c	/^static int dbcs_char2len __ARGS((int c));$/;"	p	file:	signature:(int c)
dbcs_class	src/mbyte.c	/^dbcs_class(lead, trail)$/;"	f
dbcs_head_off	src/mbyte.c	/^dbcs_head_off(base, p)$/;"	f
dbcs_off2cells	src/mbyte.c	/^dbcs_off2cells(off, max_off)$/;"	f
dbcs_ptr2cells	src/mbyte.c	/^dbcs_ptr2cells(p)$/;"	f
dbcs_ptr2cells_len	src/mbyte.c	/^dbcs_ptr2cells_len(p, size)$/;"	f	file:
dbcs_ptr2cells_len	src/mbyte.c	/^static int dbcs_ptr2cells_len __ARGS((char_u *p, int size));$/;"	p	file:	signature:(char_u *p, int size)
dbcs_ptr2char	src/mbyte.c	/^dbcs_ptr2char(p)$/;"	f	file:
dbcs_ptr2char	src/mbyte.c	/^static int dbcs_ptr2char __ARGS((char_u *p));$/;"	p	file:	signature:(char_u *p)
dbcs_ptr2len	src/mbyte.c	/^dbcs_ptr2len(p)$/;"	f	file:
dbcs_ptr2len	src/mbyte.c	/^static int dbcs_ptr2len __ARGS((char_u *p));$/;"	p	file:	signature:(char_u *p)
dbcs_ptr2len_len	src/mbyte.c	/^dbcs_ptr2len_len(p, size)$/;"	f	file:
dbcs_ptr2len_len	src/mbyte.c	/^static int dbcs_ptr2len_len __ARGS((char_u *p, int size));$/;"	p	file:	signature:(char_u *p, int size)
dbcs_screen_head_off	src/mbyte.c	/^dbcs_screen_head_off(base, p)$/;"	f
dbcs_screen_tail_off	src/mbyte.c	/^dbcs_screen_tail_off(base, p)$/;"	f
dbg_breakp	src/ex_cmds2.c	/^static garray_T dbg_breakp = {0, 0, sizeof(struct debuggy), 4, NULL};$/;"	v	file:
dbg_breakpoint	src/ex_cmds2.c	/^dbg_breakpoint(name, lnum)$/;"	f
dbg_check_breakpoint	src/ex_cmds2.c	/^dbg_check_breakpoint(eap)$/;"	f
dbg_check_skipped	src/ex_cmds2.c	/^dbg_check_skipped(eap)$/;"	f
dbg_find_breakpoint	src/ex_cmds2.c	/^dbg_find_breakpoint(file, fname, after)$/;"	f
dbg_forceit	src/ex_cmds2.c	/^    int		dbg_forceit;	\/* ! used *\/$/;"	m	struct:debuggy	file:	access:public
dbg_lnum	src/ex_cmds2.c	/^    linenr_T	dbg_lnum;	\/* line number in function or file *\/$/;"	m	struct:debuggy	file:	access:public
dbg_name	src/ex_cmds2.c	/^    char_u	*dbg_name;	\/* function or file name *\/$/;"	m	struct:debuggy	file:	access:public
dbg_nr	src/ex_cmds2.c	/^    int		dbg_nr;		\/* breakpoint number *\/$/;"	m	struct:debuggy	file:	access:public
dbg_parsearg	src/ex_cmds2.c	/^dbg_parsearg(arg, gap)$/;"	f	file:
dbg_parsearg	src/ex_cmds2.c	/^static int dbg_parsearg __ARGS((char_u *arg, garray_T *gap));$/;"	p	file:	signature:(char_u *arg, garray_T *gap)
dbg_prog	src/ex_cmds2.c	/^    regprog_T	*dbg_prog;	\/* regexp program *\/$/;"	m	struct:debuggy	file:	access:public
dbg_stuff	src/ex_docmd.c	/^struct dbg_stuff$/;"	s	file:
dbg_stuff::caught_stack	src/ex_docmd.c	/^    except_T	*caught_stack;$/;"	m	struct:dbg_stuff	file:	access:public
dbg_stuff::check_cstack	src/ex_docmd.c	/^    int		check_cstack;$/;"	m	struct:dbg_stuff	file:	access:public
dbg_stuff::current_exception	src/ex_docmd.c	/^    except_T	*current_exception;$/;"	m	struct:dbg_stuff	file:	access:public
dbg_stuff::did_emsg	src/ex_docmd.c	/^    int		did_emsg;$/;"	m	struct:dbg_stuff	file:	access:public
dbg_stuff::did_throw	src/ex_docmd.c	/^    int		did_throw;$/;"	m	struct:dbg_stuff	file:	access:public
dbg_stuff::force_abort	src/ex_docmd.c	/^    int		force_abort;$/;"	m	struct:dbg_stuff	file:	access:public
dbg_stuff::got_int	src/ex_docmd.c	/^    int		got_int;$/;"	m	struct:dbg_stuff	file:	access:public
dbg_stuff::need_rethrow	src/ex_docmd.c	/^    int		need_rethrow;$/;"	m	struct:dbg_stuff	file:	access:public
dbg_stuff::trylevel	src/ex_docmd.c	/^    int		trylevel;$/;"	m	struct:dbg_stuff	file:	access:public
dbg_stuff::vv_exception	src/ex_docmd.c	/^    char_u	*vv_exception;$/;"	m	struct:dbg_stuff	file:	access:public
dbg_stuff::vv_throwpoint	src/ex_docmd.c	/^    char_u	*vv_throwpoint;$/;"	m	struct:dbg_stuff	file:	access:public
dbg_tick	src/eval.c	/^    int		dbg_tick;	\/* debug_tick when breakpoint was set *\/$/;"	m	struct:funccall_S	file:	access:public
dbg_tick	src/ex_cmds2.c	/^    int		dbg_tick;	\/* debug_tick when breakpoint was set *\/$/;"	m	struct:source_cookie	file:	access:public
dbg_type	src/ex_cmds2.c	/^    int		dbg_type;	\/* DBG_FUNC or DBG_FILE *\/$/;"	m	struct:debuggy	file:	access:public
dcbarg_T	src/gui_motif.c	/^} dcbarg_T;$/;"	t	typeref:struct:dialog_callback_arg	file:
dead_key	src/gui_w48.c	/^static int		dead_key = 0;	\/* 0 - no dead key, 1 - dead key pressed *\/$/;"	v	file:
deadly	src/os_unix.c	/^    char    deadly;	\/* Catch as a deadly signal? *\/$/;"	m	struct:signalinfo	file:	access:public
deadly_signal	src/os_unix.c	/^static volatile int deadly_signal = 0;	    \/* The signal we caught *\/$/;"	v	file:
debug_break_level	src/globals.h	/^EXTERN int	debug_break_level INIT(= -1);	\/* break below this level *\/$/;"	v
debug_breakpoint_lnum	src/ex_cmds2.c	/^static linenr_T	debug_breakpoint_lnum;$/;"	v	file:
debug_breakpoint_name	src/ex_cmds2.c	/^static char_u	*debug_breakpoint_name = NULL;$/;"	v	file:
debug_did_msg	src/globals.h	/^EXTERN int	debug_did_msg INIT(= FALSE);	\/* did "debug mode" message *\/$/;"	v
debug_greedy	src/ex_cmds2.c	/^static int debug_greedy = FALSE;	\/* batch mode debugging: don't save$/;"	v	file:
debug_skipped	src/ex_cmds2.c	/^static int	debug_skipped;$/;"	v	file:
debug_skipped_name	src/ex_cmds2.c	/^static char_u	*debug_skipped_name;$/;"	v	file:
debug_tick	src/globals.h	/^EXTERN int	debug_tick INIT(= 0);		\/* breakpoint change count *\/$/;"	v
debuggy	src/ex_cmds2.c	/^struct debuggy$/;"	s	file:
debuggy::dbg_forceit	src/ex_cmds2.c	/^    int		dbg_forceit;	\/* ! used *\/$/;"	m	struct:debuggy	file:	access:public
debuggy::dbg_lnum	src/ex_cmds2.c	/^    linenr_T	dbg_lnum;	\/* line number in function or file *\/$/;"	m	struct:debuggy	file:	access:public
debuggy::dbg_name	src/ex_cmds2.c	/^    char_u	*dbg_name;	\/* function or file name *\/$/;"	m	struct:debuggy	file:	access:public
debuggy::dbg_nr	src/ex_cmds2.c	/^    int		dbg_nr;		\/* breakpoint number *\/$/;"	m	struct:debuggy	file:	access:public
debuggy::dbg_prog	src/ex_cmds2.c	/^    regprog_T	*dbg_prog;	\/* regexp program *\/$/;"	m	struct:debuggy	file:	access:public
debuggy::dbg_type	src/ex_cmds2.c	/^    int		dbg_type;	\/* DBG_FUNC or DBG_FILE *\/$/;"	m	struct:debuggy	file:	access:public
debuggy_find	src/ex_cmds2.c	/^debuggy_find(file, fname, after, gap, fp)$/;"	f	file:
debuggy_find	src/ex_cmds2.c	/^static linenr_T debuggy_find __ARGS((int file,char_u *fname, linenr_T after, garray_T *gap, int *fp));$/;"	p	file:	signature:(int file,char_u *fname, linenr_T after, garray_T *gap, int *fp)
dec	src/misc2.c	/^dec(lp)$/;"	f
dec_cRefThisDLL	src/GvimExt/gvimext.cpp	/^dec_cRefThisDLL()$/;"	f	file:	signature:()
dec_cursor	src/misc2.c	/^dec_cursor()$/;"	f
decada#Make	runtime/autoload/decada.vim	/^function decada#Make () dict					     " {{{1$/;"	f
decada#New	runtime/autoload/decada.vim	/^function decada#New ()						     " }}}1$/;"	f
decada#Set_Session	runtime/autoload/decada.vim	/^function decada#Set_Session (...) dict				     " {{{1$/;"	f
decada#Unit_Name	runtime/autoload/decada.vim	/^function decada#Unit_Name () dict				     " {{{1$/;"	f
decl	src/misc2.c	/^decl(lp)$/;"	f
decode_key_event	src/os_win32.c	/^decode_key_event($/;"	f	file:	signature:( KEY_EVENT_RECORD *pker, char_u *pch, char_u *pch2, int *pmodifiers, BOOL fDoPost)
decode_mouse_event	src/os_win32.c	/^decode_mouse_event($/;"	f	file:	signature:( MOUSE_EVENT_RECORD *pmer)
decomp_T	src/regexp.c	/^} decomp_T;$/;"	t	typeref:struct:__anon104	file:
decomp_table	src/regexp.c	/^static decomp_T decomp_table[0xfb4f-0xfb20+1] =$/;"	v	file:
decrease	runtime/ftplugin/cobol.vim	/^function! s:decrease(...)$/;"	f
def_back_pixel	src/gui.h	/^    guicolor_T	def_back_pixel;	    \/* default Color of background *\/$/;"	m	struct:Gui	access:public
def_comment	runtime/syntax/cdrtoc.vim	/^function s:def_comment(name, nextgroup)$/;"	f
def_keyword	runtime/syntax/cdrtoc.vim	/^function s:def_keyword(name, nextgroup, keyword)$/;"	f
def_keywords	runtime/syntax/cdrtoc.vim	/^function s:def_keywords(name, nextgroup, keywords)$/;"	f
def_match	runtime/syntax/cdrtoc.vim	/^function s:def_match(name, nextgroup, pattern)$/;"	f
def_norm_pixel	src/gui.h	/^    guicolor_T	def_norm_pixel;	    \/* default Color of normal text *\/$/;"	m	struct:Gui	access:public
def_region	runtime/syntax/cdrtoc.vim	/^function s:def_region(name, nextgroup, start, skip, end, matchgroup, contains)$/;"	f
def_val	src/option.c	/^    char_u	*def_val[2];	\/* default values for variable (vi and vim) *\/$/;"	m	struct:vimoption	file:	access:public
defaultTranslations	src/gui_at_sb.c	/^static char defaultTranslations[] =$/;"	v	file:
default_bat_dir	src/dosinst.c	/^char	*default_bat_dir = NULL;  \/* when not NULL, use this as the default$/;"	v
default_columns	src/gui_riscos.c	/^int default_columns = 120;	\/* These values are used if the --rows and --columns *\/$/;"	v
default_fileformat	src/misc2.c	/^default_fileformat()$/;"	f
default_rows	src/gui_riscos.c	/^int default_rows = 32;		\/* options aren't used on startup. *\/$/;"	v
default_shape_engine	src/gui_gtk_x11.c	/^static PangoEngineShape *default_shape_engine = NULL;$/;"	v	file:
default_shell	src/os_win16.c	/^default_shell()$/;"	f
default_shell	src/os_win32.c	/^default_shell(void)$/;"	f	signature:(void)
default_vim_dir	src/Make_bc5.mak	/^char_u *default_vim_dir = (char_u *)"$(VIMRCLOC:\\=\\\\)";$/;"	m
default_vim_dir	src/Makefile	/^	-@echo 'char_u *default_vim_dir = (char_u *)"$(VIMRCLOC)";' | $(QUOTESED) >> $@$/;"	m
default_vim_dir	src/auto/pathdef.c	/^char_u *default_vim_dir = (char_u *)"\/usr\/local\/share\/vim";$/;"	v
default_vim_dir	src/dosinst.c	/^char	*default_vim_dir = NULL;  \/* when not NULL, use this as the default$/;"	v
default_vimruntime_dir	src/Make_bc5.mak	/^char_u *default_vimruntime_dir = (char_u *)"$(VIMRUNTIMEDIR:\\=\\\\)";$/;"	m
default_vimruntime_dir	src/Makefile	/^	-@echo 'char_u *default_vimruntime_dir = (char_u *)"$(VIMRUNTIMEDIR)";' | $(QUOTESED) >> $@$/;"	m
default_vimruntime_dir	src/auto/pathdef.c	/^char_u *default_vimruntime_dir = (char_u *)"";$/;"	v
defcs	src/hardcopy.c	/^    char			*defcs;$/;"	m	struct:prt_ps_mbfont_S	file:	access:public
del_bytes	src/misc1.c	/^del_bytes(count, fixpos_arg, use_delcombine)$/;"	f
del_char	src/misc1.c	/^del_char(fixpos)$/;"	f
del_char_after_col	src/edit.c	/^del_char_after_col(limit_col)$/;"	f	file:
del_char_after_col	src/edit.c	/^static int del_char_after_col __ARGS((int limit_col));$/;"	p	file:	signature:(int limit_col)
del_chars	src/misc1.c	/^del_chars(count, fixpos)$/;"	f
del_from_showcmd	src/normal.c	/^del_from_showcmd(len)$/;"	f	file:
del_from_showcmd	src/normal.c	/^static void	del_from_showcmd __ARGS((int));$/;"	p	file:	signature:(int)
del_history_entry	src/ex_getln.c	/^del_history_entry(histype, str)$/;"	f
del_history_idx	src/ex_getln.c	/^del_history_idx(histype, idx)$/;"	f
del_lines	src/misc1.c	/^del_lines(nlines, undo)$/;"	f
del_menutrans_vars	src/eval.c	/^del_menutrans_vars()$/;"	f
del_mouse_termcode	src/term.c	/^del_mouse_termcode(n)$/;"	f
del_termcode	src/term.c	/^del_termcode(name)$/;"	f
del_termcode_idx	src/term.c	/^del_termcode_idx(idx)$/;"	f	file:
del_termcode_idx	src/term.c	/^static void del_termcode_idx __ARGS((int idx));$/;"	p	file:	signature:(int idx)
del_trailing_spaces	src/misc2.c	/^del_trailing_spaces(ptr)$/;"	f
del_typebuf	src/getchar.c	/^del_typebuf(len, offset)$/;"	f
delayed_redraw	src/os_msdos.c	/^static int delayed_redraw = FALSE;  \/* set when ctrl-C detected *\/$/;"	v	file:
delbuf_msg	src/ex_cmds.c	/^delbuf_msg(name)$/;"	f	file:
delbuf_msg	src/ex_cmds.c	/^static void delbuf_msg __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
delcmd	src/if_tcl.c	/^    Tcl_Obj	*delcmd;    \/* Tcl command to call when object is being del. *\/$/;"	m	struct:ref	file:	access:public
deleteFold	src/fold.c	/^deleteFold(start, end, recursive, had_visual)$/;"	f
deleteFoldEntry	src/fold.c	/^deleteFoldEntry(gap, idx, recursive)$/;"	f	file:
deleteFoldEntry	src/fold.c	/^static void deleteFoldEntry __ARGS((garray_T *gap, int idx, int recursive));$/;"	p	file:	signature:(garray_T *gap, int idx, int recursive)
deleteFoldMarkers	src/fold.c	/^deleteFoldMarkers(fp, recursive, lnum_off)$/;"	f	file:
deleteFoldMarkers	src/fold.c	/^static void deleteFoldMarkers __ARGS((fold_T *fp, int recursive, linenr_T lnum_off));$/;"	p	file:	signature:(fold_T *fp, int recursive, linenr_T lnum_off)
deleteFoldRecurse	src/fold.c	/^deleteFoldRecurse(gap)$/;"	f
delete_event_cb	src/gui_gtk_x11.c	/^delete_event_cb(GtkWidget *widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GdkEventAny *event UNUSED, gpointer data UNUSED)
delete_first_msg	src/message.c	/^delete_first_msg()$/;"	f
delete_lines	src/os_win32.c	/^delete_lines(unsigned cLines)$/;"	f	file:	signature:(unsigned cLines)
delete_lines	src/os_win32.c	/^static void delete_lines(unsigned cLines);$/;"	p	file:	signature:(unsigned cLines)
delete_tooltip	src/gui_w32.c	/^delete_tooltip(beval)$/;"	f	file:
delete_tooltip	src/gui_w32.c	/^static void delete_tooltip __ARGS((BalloonEval *beval));$/;"	p	file:	signature:(BalloonEval *beval)
delete_uninstall_key	src/uninstal.c	/^delete_uninstall_key(void)$/;"	f	file:	signature:(void)
delete_var	src/eval.c	/^delete_var(ht, hi)$/;"	f	file:
delete_var	src/eval.c	/^static void delete_var __ARGS((hashtab_T *ht, hashitem_T *hi));$/;"	p	file:	signature:(hashtab_T *ht, hashitem_T *hi)
deleted	runtime/spell/fixdup.vim	/^      let deleted += 1$/;"	v
deleted	runtime/spell/fixdup.vim	/^let deleted = 0$/;"	v
deleted_lines	src/misc1.c	/^deleted_lines(lnum, count)$/;"	f
deleted_lines_mark	src/misc1.c	/^deleted_lines_mark(lnum, count)$/;"	f
delref	src/if_tcl.c	/^delref(cref)$/;"	f	file:
deref_func_name	src/eval.c	/^deref_func_name(name, lenp)$/;"	f	file:
deref_func_name	src/eval.c	/^static char_u *deref_func_name __ARGS((char_u *name, int *lenp));$/;"	p	file:	signature:(char_u *name, int *lenp)
deref_wordnode	src/spell.c	/^deref_wordnode(spin, node)$/;"	f	file:
deref_wordnode	src/spell.c	/^static int deref_wordnode __ARGS((spellinfo_T *spin, wordnode_T *node));$/;"	p	file:	signature:(spellinfo_T *spin, wordnode_T *node)
destroying	src/gui_w48.c	/^static int		destroying = FALSE;	\/* call DestroyWindow() ourselves *\/$/;"	v	file:
detected_8bit	src/term.c	/^static int  detected_8bit = FALSE;	\/* detected 8-bit terminal *\/$/;"	v	file:
dev_T	src/buffer.c	53;"	d	file:
dev_T	src/buffer.c	55;"	d	file:
df_count	src/structs.h	/^    linenr_T	df_count[DB_COUNT];	\/* nr of inserted\/changed lines *\/$/;"	m	struct:diffblock_S	access:public
df_lnum	src/structs.h	/^    linenr_T	df_lnum[DB_COUNT];	\/* line number in buffer *\/$/;"	m	struct:diffblock_S	access:public
df_next	src/structs.h	/^    diff_T	*df_next;$/;"	m	struct:diffblock_S	access:public
dfd	src/integration.c	/^static FILE *dfd;$/;"	v	file:
di_flags	src/structs.h	/^    char_u	di_flags;	\/* flags (only used for variable) *\/$/;"	m	struct:dictitem_S	access:public
di_key	src/structs.h	/^    char_u	di_key[1];	\/* key (actually longer!) *\/$/;"	m	struct:dictitem_S	access:public
di_tv	src/structs.h	/^    typval_T	di_tv;		\/* type and value of the variable *\/$/;"	m	struct:dictitem_S	access:public
dialog	src/gui_gtk.c	/^    GtkDialog	*dialog;	    \/* Widget of the dialog *\/$/;"	m	struct:_DialogInfo	file:	access:public
dialog	src/gui_gtk.c	/^    GtkWidget *dialog;	\/* the main dialog widget *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
dialog	src/gui_motif.c	/^    Widget dialog;	\/* the main dialog widget *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
dialog	src/gui_xmdlg.c	/^    Widget	dialog;$/;"	m	struct:_SharedFontSelData	file:	access:public
dialogStatus	src/gui_athena.c	/^static int	dialogStatus;$/;"	v	file:
dialogStatus	src/gui_motif.c	/^static int	dialogStatus;$/;"	v	file:
dialog_add_buttons	src/gui_gtk.c	/^dialog_add_buttons(GtkDialog *dialog, char_u *button_string)$/;"	f	file:	signature:(GtkDialog *dialog, char_u *button_string)
dialog_busy	src/gui_mac.c	/^static int dialog_busy = FALSE;	    \/* TRUE when gui_mch_dialog() wants the$/;"	v	file:
dialog_callback	src/gui_w16.c	/^dialog_callback($/;"	f	file:	signature:( HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)
dialog_callback	src/gui_w16.c	/^static BOOL CALLBACK dialog_callback(HWND, UINT, WPARAM, LPARAM);$/;"	p	file:
dialog_callback	src/gui_w32.c	/^dialog_callback($/;"	f	file:	signature:( HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)
dialog_callback	src/gui_w32.c	/^static LRESULT APIENTRY dialog_callback(HWND, UINT, WPARAM, LPARAM);$/;"	p	file:
dialog_callback_arg	src/gui_motif.c	/^typedef struct dialog_callback_arg$/;"	s	file:
dialog_callback_arg::args	src/gui_motif.c	/^    char *  args;   \/* not used right now *\/$/;"	m	struct:dialog_callback_arg	file:	access:public
dialog_callback_arg::id	src/gui_motif.c	/^    int	    id;$/;"	m	struct:dialog_callback_arg	file:	access:public
dialog_changed	src/ex_cmds2.c	/^dialog_changed(buf, checkall)$/;"	f
dialog_default_button	src/gui_w16.c	/^static int dialog_default_button = -1;$/;"	v	file:
dialog_default_button	src/gui_w32.c	/^static int dialog_default_button = -1;$/;"	v	file:
dialog_key_press_event_cb	src/gui_gtk.c	/^dialog_key_press_event_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventKey *event, gpointer data)
dialog_msg	src/ex_docmd.c	/^dialog_msg(buff, format, fname)$/;"	f
dialog_wgt	src/gui_motif.c	/^static Widget dialog_wgt;$/;"	v	file:
dialog_wm_handler	src/gui_athena.c	/^dialog_wm_handler(w, client_data, event, dum)$/;"	f	file:
dialog_wm_handler	src/gui_athena.c	/^static void dialog_wm_handler __ARGS((Widget w, XtPointer client_data, XEvent *event, Boolean *dum));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XEvent *event, Boolean *dum)
dialogatom	src/gui_athena.c	/^static Atom	dialogatom;$/;"	v	file:
dict2string	src/eval.c	/^dict2string(tv, copyID)$/;"	f	file:
dict2string	src/eval.c	/^static char_u *dict2string __ARGS((typval_T *tv, int copyID));$/;"	p	file:	signature:(typval_T *tv, int copyID)
dict_T	src/structs.h	/^typedef struct dictvar_S dict_T;$/;"	t	typeref:struct:dictvar_S
dict_add	src/eval.c	/^dict_add(d, item)$/;"	f
dict_add_list	src/eval.c	/^dict_add_list(d, key, list)$/;"	f
dict_add_nr_str	src/eval.c	/^dict_add_nr_str(d, key, nr, str)$/;"	f
dict_alloc	src/eval.c	/^dict_alloc()$/;"	f
dict_copy	src/eval.c	/^dict_copy(orig, deep, copyID)$/;"	f	file:
dict_copy	src/eval.c	/^static dict_T *dict_copy __ARGS((dict_T *orig, int deep, int copyID));$/;"	p	file:	signature:(dict_T *orig, int deep, int copyID)
dict_equal	src/eval.c	/^dict_equal(d1, d2, ic)$/;"	f	file:
dict_equal	src/eval.c	/^static int dict_equal __ARGS((dict_T *d1, dict_T *d2, int ic));$/;"	p	file:	signature:(dict_T *d1, dict_T *d2, int ic)
dict_find	src/eval.c	/^dict_find(d, key, len)$/;"	f
dict_free	src/eval.c	/^dict_free(d, recurse)$/;"	f	file:
dict_free	src/eval.c	/^static void dict_free __ARGS((dict_T *d, int recurse));$/;"	p	file:	signature:(dict_T *d, int recurse)
dict_len	src/eval.c	/^dict_len(d)$/;"	f	file:
dict_len	src/eval.c	/^static long dict_len __ARGS((dict_T *d));$/;"	p	file:	signature:(dict_T *d)
dict_list	src/eval.c	/^dict_list(argvars, rettv, what)$/;"	f	file:
dict_list	src/eval.c	/^static void dict_list __ARGS((typval_T *argvars, typval_T *rettv, int what));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv, int what)
dict_lookup	src/eval.c	/^dict_lookup(hi)$/;"	f
dict_unref	src/eval.c	/^dict_unref(d)$/;"	f	file:
dict_unref	src/eval.c	/^static void dict_unref __ARGS((dict_T *d));$/;"	p	file:	signature:(dict_T *d)
dictitem_S	src/structs.h	/^struct dictitem_S$/;"	s
dictitem_S::di_flags	src/structs.h	/^    char_u	di_flags;	\/* flags (only used for variable) *\/$/;"	m	struct:dictitem_S	access:public
dictitem_S::di_key	src/structs.h	/^    char_u	di_key[1];	\/* key (actually longer!) *\/$/;"	m	struct:dictitem_S	access:public
dictitem_S::di_tv	src/structs.h	/^    typval_T	di_tv;		\/* type and value of the variable *\/$/;"	m	struct:dictitem_S	access:public
dictitem_T	src/structs.h	/^typedef struct dictitem_S dictitem_T;$/;"	t	typeref:struct:dictitem_S
dictitem_alloc	src/eval.c	/^dictitem_alloc(key)$/;"	f
dictitem_copy	src/eval.c	/^dictitem_copy(org)$/;"	f	file:
dictitem_copy	src/eval.c	/^static dictitem_T *dictitem_copy __ARGS((dictitem_T *org));$/;"	p	file:	signature:(dictitem_T *org)
dictitem_free	src/eval.c	/^dictitem_free(item)$/;"	f
dictitem_remove	src/eval.c	/^dictitem_remove(dict, item)$/;"	f	file:
dictitem_remove	src/eval.c	/^static void dictitem_remove __ARGS((dict_T *dict, dictitem_T *item));$/;"	p	file:	signature:(dict_T *dict, dictitem_T *item)
dictvar_S	src/structs.h	/^struct dictvar_S$/;"	s
dictvar_S::dv_copyID	src/structs.h	/^    int		dv_copyID;	\/* ID used by deepcopy() *\/$/;"	m	struct:dictvar_S	access:public
dictvar_S::dv_copydict	src/structs.h	/^    dict_T	*dv_copydict;	\/* copied dict used by deepcopy() *\/$/;"	m	struct:dictvar_S	access:public
dictvar_S::dv_hashtab	src/structs.h	/^    hashtab_T	dv_hashtab;	\/* hashtab that refers to the items *\/$/;"	m	struct:dictvar_S	access:public
dictvar_S::dv_lock	src/structs.h	/^    char	dv_lock;	\/* zero, VAR_LOCKED, VAR_FIXED *\/$/;"	m	struct:dictvar_S	access:public
dictvar_S::dv_refcount	src/structs.h	/^    int		dv_refcount;	\/* reference count *\/$/;"	m	struct:dictvar_S	access:public
dictvar_S::dv_used_next	src/structs.h	/^    dict_T	*dv_used_next;	\/* next dict in used dicts list *\/$/;"	m	struct:dictvar_S	access:public
dictvar_S::dv_used_prev	src/structs.h	/^    dict_T	*dv_used_prev;	\/* previous dict in used dicts list *\/$/;"	m	struct:dictvar_S	access:public
did_OPL_syntax_inits	runtime/syntax/opl.vim	/^    let did_OPL_syntax_inits = 1$/;"	v
did_VRML_syntax_inits	runtime/syntax/vrml.vim	/^    let did_VRML_syntax_inits = 1$/;"	v
did_a65_syntax_inits	runtime/syntax/a65.vim	/^    let did_a65_syntax_inits = 1$/;"	v
did_abap_syntax_inits	runtime/syntax/abap.vim	/^    let did_abap_syntax_inits = 1$/;"	v
did_abaqus_syn_inits	runtime/syntax/abaqus.vim	/^		let did_abaqus_syn_inits = 1$/;"	v
did_abc_syn_inits	runtime/syntax/abc.vim	/^    let did_abc_syn_inits = 1$/;"	v
did_abel_syn_inits	runtime/syntax/abel.vim	/^    let did_abel_syn_inits = 1$/;"	v
did_acedb_syn_inits	runtime/syntax/acedb.vim	/^    let did_acedb_syn_inits = 1$/;"	v
did_add_space	src/edit.c	/^static int	did_add_space = FALSE;	\/* auto_format() added an extra space$/;"	v	file:
did_aflex_syntax_inits	runtime/syntax/aflex.vim	/^      let did_aflex_syntax_inits = 1$/;"	v
did_ahdl_syn_inits	runtime/syntax/ahdl.vim	/^    let did_ahdl_syn_inits = 1$/;"	v
did_ahdl_syn_inits	runtime/syntax/ppd.vim	/^    let did_ahdl_syn_inits = 1$/;"	v
did_ai	src/globals.h	/^EXTERN int     did_ai INIT(= FALSE);$/;"	v
did_amiga_syn_inits	runtime/syntax/amiga.vim	/^    let did_amiga_syn_inits = 1$/;"	v
did_aml_syntax_inits	runtime/syntax/aml.vim	/^    let did_aml_syntax_inits = 1$/;"	v
did_ampl_syntax_inits	runtime/syntax/ampl.vim	/^    let did_ampl_syntax_inits = 1$/;"	v
did_antlr_syntax_inits	runtime/syntax/antlr.vim	/^      let did_antlr_syntax_inits = 1$/;"	v
did_apache_syntax_inits	runtime/syntax/apache.vim	/^		let did_apache_syntax_inits = 1$/;"	v
did_apachestyle_syn_inits	runtime/syntax/apachestyle.vim	/^    let did_apachestyle_syn_inits = 1$/;"	v
did_asm68k_syntax_inits	runtime/syntax/asm68k.vim	/^    let did_asm68k_syntax_inits = 1$/;"	v
did_asm_syntax_inits	runtime/syntax/asm.vim	/^    let did_asm_syntax_inits = 1$/;"	v
did_asn_syn_inits	runtime/syntax/asn.vim	/^    let did_asn_syn_inits = 1$/;"	v
did_aspvbs_syn_inits	runtime/syntax/aspvbs.vim	/^    let did_aspvbs_syn_inits = 1$/;"	v
did_atlas_syntax_inits	runtime/syntax/atlas.vim	/^    let did_atlas_syntax_inits = 1$/;"	v
did_automake_syntax_inits	runtime/syntax/automake.vim	/^    let did_automake_syntax_inits = 1$/;"	v
did_ave_syn_inits	runtime/syntax/ave.vim	/^	let did_ave_syn_inits = 1$/;"	v
did_awk_syn_inits	runtime/syntax/awk.vim	/^    let did_awk_syn_inits = 1$/;"	v
did_ayacc_syntax_inits	runtime/syntax/ayacc.vim	/^      let did_ayacc_syntax_inits = 1$/;"	v
did_b_syntax_inits	runtime/syntax/b.vim	/^      let did_b_syntax_inits = 1$/;"	v
did_baan_syn_inits	runtime/syntax/baan.vim	/^    let did_baan_syn_inits = 1$/;"	v
did_basic_syntax_inits	runtime/syntax/basic.vim	/^    let did_basic_syntax_inits = 1$/;"	v
did_bc_syntax_inits	runtime/syntax/bc.vim	/^    let did_bc_syntax_inits = 1$/;"	v
did_bib_syn_inits	runtime/syntax/bib.vim	/^    let did_bib_syn_inits = 1$/;"	v
did_bind_zone_syn_inits	runtime/syntax/bindzone.vim	/^    let did_bind_zone_syn_inits = 1$/;"	v
did_blank_syntax_inits	runtime/syntax/blank.vim	/^    let did_blank_syntax_inits = 1$/;"	v
did_bst_syn_inits	runtime/syntax/bst.vim	/^        let did_bst_syn_inits = 1$/;"	v
did_btm_syntax_inits	runtime/syntax/btm.vim	/^    let did_btm_syntax_inits = 1$/;"	v
did_bzr_syn_inits	runtime/syntax/bzr.vim	/^    let did_bzr_syn_inits = 1$/;"	v
did_c_syn_inits	runtime/syntax/pf.vim	/^    let did_c_syn_inits = 1$/;"	v
did_cabal_syn_inits	runtime/syntax/cabal.vim	/^    let did_cabal_syn_inits = 1$/;"	v
did_cabal_syn_inits	runtime/syntax/obj.vim	/^    let did_cabal_syn_inits = 1$/;"	v
did_cfg_syn_inits	runtime/syntax/cfg.vim	/^	let did_cfg_syn_inits = 1$/;"	v
did_ch_syntax_inits	runtime/syntax/ch.vim	/^    let did_ch_syntax_inits = 1$/;"	v
did_ch_syntax_inits	runtime/syntax/chill.vim	/^    let did_ch_syntax_inits = 1$/;"	v
did_change_syntax_inits	runtime/syntax/change.vim	/^    let did_change_syntax_inits = 1$/;"	v
did_changelog_syntax_inits	runtime/syntax/changelog.vim	/^    let did_changelog_syntax_inits = 1$/;"	v
did_check_timestamps	src/globals.h	/^EXTERN int	did_check_timestamps INIT(= FALSE); \/* did check timestamps$/;"	v
did_cheetah_syn_inits	runtime/syntax/cheetah.vim	/^		let did_cheetah_syn_inits = 1$/;"	v
did_cl_syntax_inits	runtime/syntax/cl.vim	/^		let did_cl_syntax_inits = 1$/;"	v
did_clean_syntax_init	runtime/syntax/clean.vim	/^    let did_clean_syntax_init = 1$/;"	v
did_clipper_syntax_inits	runtime/syntax/clipper.vim	/^    let did_clipper_syntax_inits = 1$/;"	v
did_cmake_syntax_inits	runtime/syntax/cmake.vim	/^    let did_cmake_syntax_inits = 1$/;"	v
did_cobol_syntax_inits	runtime/syntax/cobol.vim	/^    let did_cobol_syntax_inits = 1$/;"	v
did_conf_syntax_inits	runtime/syntax/asterisk.vim	/^    let did_conf_syntax_inits = 1$/;"	v
did_conf_syntax_inits	runtime/syntax/asteriskvm.vim	/^    let did_conf_syntax_inits = 1$/;"	v
did_config_syntax_inits	runtime/syntax/config.vim	/^    let did_config_syntax_inits = 1$/;"	v
did_config_syntax_inits	runtime/syntax/fstab.vim	/^		let did_config_syntax_inits = 1$/;"	v
did_config_syntax_inits	runtime/syntax/resolv.vim	/^		let did_config_syntax_inits = 1$/;"	v
did_config_syntax_inits	runtime/syntax/sd.vim	/^                let did_config_syntax_inits = 1$/;"	v
did_cpp_syntax_inits	runtime/syntax/cpp.vim	/^    let did_cpp_syntax_inits = 1$/;"	v
did_create_conin	src/os_win32.c	/^static int did_create_conin = FALSE;$/;"	v	file:
did_crontab_syn_inits	runtime/syntax/crontab.vim	/^    let did_crontab_syn_inits = 1$/;"	v
did_csc_syntax_inits	runtime/syntax/cdl.vim	/^		let did_csc_syntax_inits = 1$/;"	v
did_csc_syntax_inits	runtime/syntax/csc.vim	/^		let did_csc_syntax_inits = 1$/;"	v
did_csh_syntax_inits	runtime/syntax/csh.vim	/^    let did_csh_syntax_inits = 1$/;"	v
did_csp_syn_inits	runtime/syntax/csp.vim	/^    let did_csp_syn_inits = 1$/;"	v
did_css_syn_inits	runtime/syntax/css.vim	/^    let did_css_syn_inits = 1$/;"	v
did_css_syn_inits	runtime/syntax/javacc.vim	/^    let did_css_syn_inits = 1$/;"	v
did_cterm_syntax_inits	runtime/syntax/cterm.vim	/^    let did_cterm_syntax_inits = 1$/;"	v
did_cupl_syn_inits	runtime/syntax/cupl.vim	/^    let did_cupl_syn_inits = 1$/;"	v
did_cuplsim_syn_inits	runtime/syntax/cuplsim.vim	/^    let did_cuplsim_syn_inits = 1$/;"	v
did_cursorhold	src/globals.h	/^EXTERN int	did_cursorhold INIT(= FALSE); \/* set when CursorHold t'gerd *\/$/;"	v
did_cvs_syn_inits	runtime/syntax/cvs.vim	/^		let did_cvs_syn_inits = 1$/;"	v
did_cweb_syntax_inits	runtime/syntax/cweb.vim	/^    let did_cweb_syntax_inits = 1$/;"	v
did_cynlib_syntax_inits	runtime/syntax/cynlib.vim	/^    let did_cynlib_syntax_inits = 1$/;"	v
did_cynpp_syntax_inits	runtime/syntax/cynpp.vim	/^    let did_cynpp_syntax_inits = 1$/;"	v
did_dcd_syntax_inits	runtime/syntax/dcd.vim	/^    let did_dcd_syntax_inits = 1$/;"	v
did_dcl_syntax_inits	runtime/syntax/dcl.vim	/^    let did_dcl_syntax_inits = 1$/;"	v
did_debchangelog_syn_inits	runtime/syntax/debchangelog.vim	/^    let did_debchangelog_syn_inits = 1$/;"	v
did_debcontrol_syn_inits	runtime/syntax/debcontrol.vim	/^    let did_debcontrol_syn_inits = 1$/;"	v
did_def_syntax_inits	runtime/syntax/def.vim	/^    let did_def_syntax_inits = 1$/;"	v
did_desc_syntax_inits	runtime/syntax/desc.vim	/^    let did_desc_syntax_inits = 1$/;"	v
did_diva_syntax_inits	runtime/syntax/diva.vim	/^		let did_diva_syntax_inits = 1$/;"	v
did_django_syn_inits	runtime/syntax/django.vim	/^    let did_django_syn_inits = 1$/;"	v
did_docbk_syn_inits	runtime/syntax/docbk.vim	/^    let did_docbk_syn_inits = 1$/;"	v
did_dosbatch_syntax_inits	runtime/syntax/dosbatch.vim	/^    let did_dosbatch_syntax_inits = 1$/;"	v
did_dosini_syntax_inits	runtime/syntax/desktop.vim	/^		let did_dosini_syntax_inits = 1$/;"	v
did_dosini_syntax_inits	runtime/syntax/dosini.vim	/^    let did_dosini_syntax_inits = 1$/;"	v
did_dot_syntax_inits	runtime/syntax/dot.vim	/^    let did_dot_syntax_inits = 1$/;"	v
did_dracula_syn_inits	runtime/syntax/dracula.vim	/^    let did_dracula_syn_inits = 1$/;"	v
did_drchip_netrwlist_syntax	runtime/syntax/netrw.vim	/^ let did_drchip_netrwlist_syntax= 1$/;"	v
did_drchip_tags_inits	runtime/syntax/tags.vim	/^    let did_drchip_tags_inits = 1$/;"	v
did_dtd_syn_inits	runtime/syntax/dtd.vim	/^	let did_dtd_syn_inits = 1$/;"	v
did_dtml_syntax_inits	runtime/syntax/dtml.vim	/^    let did_dtml_syntax_inits = 1$/;"	v
did_dummy_syn_inits	runtime/syntax/ist.vim	/^    let did_dummy_syn_inits = 1$/;"	v
did_dylan_intr_syntax_inits	runtime/syntax/dylanintr.vim	/^    let did_dylan_intr_syntax_inits = 1$/;"	v
did_dylan_lid_syntax_inits	runtime/syntax/dylanlid.vim	/^    let did_dylan_lid_syntax_inits = 1$/;"	v
did_dylan_syntax_inits	runtime/syntax/dylan.vim	/^    let did_dylan_syntax_inits = 1$/;"	v
did_ecd_syn_inits	runtime/syntax/ecd.vim	/^    let did_ecd_syn_inits = 1$/;"	v
did_edif_syntax_inits	runtime/syntax/edif.vim	/^    let did_edif_syntax_inits = 1$/;"	v
did_eiffel_syntax_inits	runtime/syntax/eiffel.vim	/^    let did_eiffel_syntax_inits = 1$/;"	v
did_elf_syn_inits	runtime/syntax/elf.vim	/^		let did_elf_syn_inits = 1$/;"	v
did_elmfilt_syntax_inits	runtime/syntax/elmfilt.vim	/^    let did_elmfilt_syntax_inits = 1$/;"	v
did_emsg	src/ex_docmd.c	/^    int		did_emsg;$/;"	m	struct:dbg_stuff	file:	access:public
did_emsg	src/globals.h	/^EXTERN int	did_emsg;		    \/* set by emsg() when the message$/;"	v
did_endif	src/globals.h	/^EXTERN int	did_endif INIT(= FALSE);    \/* just had ":endif" *\/$/;"	v
did_erlang_inits	runtime/syntax/erlang.vim	/^        let did_erlang_inits = 1$/;"	v
did_esqlc_syntax_inits	runtime/syntax/esqlc.vim	/^    let did_esqlc_syntax_inits = 1$/;"	v
did_esterel_syntax_inits	runtime/syntax/esterel.vim	/^    let did_esterel_syntax_inits = 1$/;"	v
did_exim_syntax_inits	runtime/syntax/exim.vim	/^		let did_exim_syntax_inits = 1$/;"	v
did_expect_syntax_inits	runtime/syntax/expect.vim	/^    let did_expect_syntax_inits = 1$/;"	v
did_exports_syntax_inits	runtime/syntax/exports.vim	/^    let did_exports_syntax_inits = 1$/;"	v
did_fdcc_syn_inits	runtime/syntax/fdcc.vim	/^    let did_fdcc_syn_inits = 1$/;"	v
did_fgl_syntax_inits	runtime/syntax/fgl.vim	/^    let did_fgl_syntax_inits = 1$/;"	v
did_filetype	src/globals.h	/^EXTERN int	did_filetype INIT(= FALSE);	\/* FileType event found *\/$/;"	v
did_focexec_syntax_inits	runtime/syntax/focexec.vim	/^    let did_focexec_syntax_inits = 1$/;"	v
did_form_syn_inits	runtime/syntax/form.vim	/^    let did_form_syn_inits = 1$/;"	v
did_forth_syn_inits	runtime/syntax/forth.vim	/^	let did_forth_syn_inits = 1$/;"	v
did_fortran_syn_inits	runtime/syntax/fortran.vim	/^    let did_fortran_syn_inits = 1$/;"	v
did_foxpro_syn_inits	runtime/syntax/foxpro.vim	/^	let did_foxpro_syn_inits = 1$/;"	v
did_gdb_syn_inits	runtime/syntax/gdb.vim	/^    let did_gdb_syn_inits = 1$/;"	v
did_gdmo_syntax_inits	runtime/syntax/gdmo.vim	/^    let did_gdmo_syntax_inits = 1$/;"	v
did_gedcom_syntax_inits	runtime/syntax/gedcom.vim	/^    let did_gedcom_syntax_inits = 1$/;"	v
did_gnuplot_syntax_inits	runtime/syntax/gnuplot.vim	/^    let did_gnuplot_syntax_inits = 1$/;"	v
did_gp_syn_inits	runtime/syntax/gp.vim	/^    let did_gp_syn_inits = 1$/;"	v
did_groovy_syn_inits	runtime/syntax/groovy.vim	/^    let did_groovy_syn_inits = 1$/;"	v
did_gs_syn_inits	runtime/syntax/grads.vim	/^	let did_gs_syn_inits = 1$/;"	v
did_gtkrc_syntax_inits	runtime/syntax/gkrellmrc.vim	/^		let did_gtkrc_syntax_inits = 1$/;"	v
did_gtkrc_syntax_inits	runtime/syntax/gtkrc.vim	/^		let did_gtkrc_syntax_inits = 1$/;"	v
did_hamster_syn_inits	runtime/syntax/hamster.vim	/^        let did_hamster_syn_inits = 1$/;"	v
did_hb_syntax_inits	runtime/syntax/hb.vim	/^    let did_hb_syntax_inits = 1$/;"	v
did_hercules_syntax_inits	runtime/syntax/hercules.vim	/^    let did_hercules_syntax_inits = 1$/;"	v
did_hex_syntax_inits	runtime/syntax/hex.vim	/^    let did_hex_syntax_inits = 1$/;"	v
did_hitachi_syntax_inits	runtime/syntax/asmh8300.vim	/^    let did_hitachi_syntax_inits = 1$/;"	v
did_hog_syn_inits	runtime/syntax/hog.vim	/^    let did_hog_syn_inits = 1$/;"	v
did_hs_syntax_inits	runtime/syntax/haskell.vim	/^    let did_hs_syntax_inits = 1$/;"	v
did_html_syn_inits	runtime/syntax/html.vim	/^    let did_html_syn_inits = 1$/;"	v
did_htmlos_syn_inits	runtime/syntax/htmlos.vim	/^    let did_htmlos_syn_inits = 1$/;"	v
did_ia64_syn_inits	runtime/syntax/ia64.vim	/^		let did_ia64_syn_inits = 1$/;"	v
did_icon_syn_inits	runtime/syntax/icon.vim	/^    let did_icon_syn_inits = 1$/;"	v
did_idl_syntax_inits	runtime/syntax/idl.vim	/^  let did_idl_syntax_inits = 1$/;"	v
did_idlang_syn_inits	runtime/syntax/idlang.vim	/^    let did_idlang_syn_inits = 1$/;"	v
did_indent_on	runtime/indent.vim	/^let did_indent_on = 1$/;"	v
did_inform_syn_inits	runtime/syntax/inform.vim	/^    let did_inform_syn_inits = 1$/;"	v
did_inittab_syntax_inits	runtime/syntax/inittab.vim	/^    let did_inittab_syntax_inits = 1$/;"	v
did_install_default_menus	runtime/menu.vim	/^let did_install_default_menus = 1$/;"	v
did_install_syntax_menu	runtime/menu.vim	/^  let did_install_syntax_menu = 1$/;"	v
did_is_syntax_inits	runtime/syntax/ishd.vim	/^    let did_is_syntax_inits = 1$/;"	v
did_iss_syntax_inits	runtime/syntax/iss.vim	/^    let did_iss_syntax_inits = 1$/;"	v
did_jal_syn_inits	runtime/syntax/jal.vim	/^  let did_jal_syn_inits = 1$/;"	v
did_jam_syn_inits	runtime/syntax/jam.vim	/^    let did_jam_syn_inits = 1$/;"	v
did_jargon_syntax_inits	runtime/syntax/jargon.vim	/^		let did_jargon_syntax_inits = 1$/;"	v
did_java_syn_inits	runtime/syntax/java.vim	/^    let did_java_syn_inits = 1$/;"	v
did_javascript_syn_inits	runtime/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_jess_syntax_inits	runtime/syntax/jess.vim	/^    let did_jess_syntax_inits = 1$/;"	v
did_jgraph_syn_inits	runtime/syntax/jgraph.vim	/^    let did_jgraph_syn_inits = 1$/;"	v
did_jproperties_syntax_inits	runtime/syntax/jproperties.vim	/^    let did_jproperties_syntax_inits = 1$/;"	v
did_jsp_syn_inits	runtime/syntax/jsp.vim	/^    let did_jsp_syn_inits = 1$/;"	v
did_kix_syn_inits	runtime/syntax/kix.vim	/^		let did_kix_syn_inits=1$/;"	v
did_kscript_syntax_inits	runtime/syntax/kscript.vim	/^    let did_kscript_syntax_inits = 1$/;"	v
did_kwt_syn_inits	runtime/syntax/kwt.vim	/^	let did_kwt_syn_inits = 1$/;"	v
did_lace_syntax_inits	runtime/syntax/lace.vim	/^    let did_lace_syntax_inits = 1$/;"	v
did_latte_syntax_inits	runtime/syntax/latte.vim	/^    let did_latte_syntax_inits = 1$/;"	v
did_lcd	src/ex_docmd.c	/^static int	did_lcd;	\/* whether ":lcd" was produced for a session *\/$/;"	v	file:
did_ldif_syn_inits	runtime/syntax/ldif.vim	/^    let did_ldif_syn_inits = 1$/;"	v
did_lifelines_syn_inits	runtime/syntax/lifelines.vim	/^    let did_lifelines_syn_inits = 1$/;"	v
did_lilo_syntax_inits	runtime/syntax/lilo.vim	/^    let did_lilo_syntax_inits = 1$/;"	v
did_lite_syn_inits	runtime/syntax/lite.vim	/^    let did_lite_syn_inits = 1$/;"	v
did_load_filetypes	runtime/filetype.vim	/^let did_load_filetypes = 1$/;"	v
did_load_ftplugin	runtime/ftplugin.vim	/^let did_load_ftplugin = 1$/;"	v
did_logtalk_syn_inits	runtime/syntax/logtalk.vim	/^		let did_logtalk_syn_inits = 1$/;"	v
did_lotos_syntax_inits	runtime/syntax/lotos.vim	/^    let did_lotos_syntax_inits = 1$/;"	v
did_lout_syn_inits	runtime/syntax/lout.vim	/^		let did_lout_syn_inits = 1$/;"	v
did_lpc_syn_inits	runtime/syntax/lpc.vim	/^    let did_lpc_syn_inits = 1$/;"	v
did_lprolog_syntax_inits	runtime/syntax/lprolog.vim	/^    let did_lprolog_syntax_inits = 1$/;"	v
did_lscript_syntax_inits	runtime/syntax/lscript.vim	/^    let did_lscript_syntax_inits = 1$/;"	v
did_lss_syntax_inits	runtime/syntax/lss.vim	/^    let did_lss_syntax_inits = 1$/;"	v
did_lua_syntax_inits	runtime/syntax/lua.vim	/^    let did_lua_syntax_inits = 1$/;"	v
did_m4_syn_inits	runtime/syntax/m4.vim	/^    let did_m4_syn_inits = 1$/;"	v
did_macro_syntax_inits	runtime/syntax/vmasm.vim	/^    let did_macro_syntax_inits = 1$/;"	v
did_mailcap_syntax_inits	runtime/syntax/mailcap.vim	/^    let did_mailcap_syntax_inits = 1$/;"	v
did_make_syn_inits	runtime/syntax/make.vim	/^    let did_make_syn_inits = 1$/;"	v
did_man_syn_inits	runtime/syntax/man.vim	/^    let did_man_syn_inits = 1$/;"	v
did_maplev_syntax_inits	runtime/syntax/maple.vim	/^    let did_maplev_syntax_inits = 1$/;"	v
did_masm_syntax_inits	runtime/syntax/masm.vim	/^    let did_masm_syntax_inits = 1$/;"	v
did_mason_syn_inits	runtime/syntax/mason.vim	/^		let did_mason_syn_inits = 1$/;"	v
did_master_syntax_inits	runtime/syntax/master.vim	/^    let did_master_syntax_inits = 1$/;"	v
did_match_already	src/syntax.c	/^did_match_already(idx, gap)$/;"	f	file:
did_match_already	src/syntax.c	/^static int did_match_already __ARGS((int idx, garray_T *gap));$/;"	p	file:	signature:(int idx, garray_T *gap)
did_matlab_syntax_inits	runtime/syntax/matlab.vim	/^    let did_matlab_syntax_inits = 1$/;"	v
did_maxima_syntax_inits	runtime/syntax/maxima.vim	/^    let did_maxima_syntax_inits = 1$/;"	v
did_mel_syntax_inits	runtime/syntax/mel.vim	/^    let did_mel_syntax_inits = 1$/;"	v
did_menu_trans	runtime/lang/menu_af_af.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_ca_es.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_chinese_gb.936.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_chinese_taiwan.950.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_cs_cz.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_czech_czech_republic.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_czech_czech_republic.ascii.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_de_de.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_en_gb.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_eo.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_es_es.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_fi_fi.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_fr_fr.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_hu_hu.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_hu_hu.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_it_it.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_ja_jp.euc-jp.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_ja_jp.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_japanese_japan.932.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_ko_kr.euckr.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_ko_kr.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_nl_nl.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_no_no.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_pl_pl.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_pl_pl.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_polish_poland.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_pt_br.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_pt_pt.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_ru_ru.koi8-r.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_ru_ru.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_sk_sk.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_sl_si.cp1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_sl_si.latin2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_sl_si.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_slovak_slovak_republic.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_sr_rs.ascii.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_sr_rs.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_sr_rs.iso_8859-5.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_sr_rs.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_sv_se.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_uk_ua.cp1251.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_uk_ua.koi8-u.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_vi_vn.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_zh_cn.gb2312.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_zh_cn.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	runtime/lang/menu_zh_tw.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_mf_syntax_inits	runtime/syntax/mf.vim	/^    let did_mf_syntax_inits = 1$/;"	v
did_mgl_syn_inits	runtime/syntax/mgl.vim	/^    let did_mgl_syn_inits = 1$/;"	v
did_mgp_syn_inits	runtime/syntax/mgp.vim	/^    let did_mgp_syn_inits = 1$/;"	v
did_mgp_syn_inits	runtime/syntax/mgp.vim	/^  let did_mgp_syn_inits = 1$/;"	v
did_mma_syn_inits	runtime/syntax/mma.vim	/^		let did_mma_syn_inits = 1$/;"	v
did_mmix_syntax_inits	runtime/syntax/mmix.vim	/^    let did_mmix_syntax_inits = 1$/;"	v
did_mmp_syntax_inits	runtime/syntax/mmp.vim	/^  let did_mmp_syntax_inits=1$/;"	v
did_modsim3_syntax_inits	runtime/syntax/modsim3.vim	/^    let did_modsim3_syntax_inits = 1$/;"	v
did_modula2_syntax_inits	runtime/syntax/modula2.vim	/^    let did_modula2_syntax_inits = 1$/;"	v
did_modula3_syntax_inits	runtime/syntax/modula3.vim	/^    let did_modula3_syntax_inits = 1$/;"	v
did_monk_syntax_inits	runtime/syntax/monk.vim	/^    let did_monk_syntax_inits = 1$/;"	v
did_mp_syntax_inits	runtime/syntax/mp.vim	/^    let did_mp_syntax_inits = 1$/;"	v
did_msidl_syntax_inits	runtime/syntax/msidl.vim	/^    let did_msidl_syntax_inits = 1$/;"	v
did_msql_syn_inits	runtime/syntax/msql.vim	/^    let did_msql_syn_inits = 1$/;"	v
did_mupad_syntax_inits	runtime/syntax/mupad.vim	/^    let did_mupad_syntax_inits = 1$/;"	v
did_mush_syntax_inits	runtime/syntax/mush.vim	/^    let did_mush_syntax_inits = 1$/;"	v
did_muttrc_syntax_inits	runtime/syntax/muttrc.vim	/^    let did_muttrc_syntax_inits = 1$/;"	v
did_mysql_syn_inits	runtime/syntax/mysql.vim	/^    let did_mysql_syn_inits = 1$/;"	v
did_named_syn_inits	runtime/syntax/named.vim	/^    let did_named_syn_inits = 1$/;"	v
did_nasm_syntax_inits	runtime/syntax/nasm.vim	/^    let did_nasm_syntax_inits = 1$/;"	v
did_nastran_syntax_inits	runtime/syntax/nastran.vim	/^     let did_nastran_syntax_inits = 1$/;"	v
did_natural_syntax_inits	runtime/syntax/natural.vim	/^    let did_natural_syntax_inits = 1$/;"	v
did_ncf_syntax_inits	runtime/syntax/ncf.vim	/^	let did_ncf_syntax_inits = 1$/;"	v
did_nqc_syn_inits	runtime/syntax/nqc.vim	/^    let did_nqc_syn_inits = 1$/;"	v
did_nroff_syn_inits	runtime/syntax/nroff.vim	/^		let did_nroff_syn_inits = 1$/;"	v
did_nsys_syn_inits	runtime/syntax/nsis.vim	/^    let did_nsys_syn_inits = 1$/;"	v
did_objc_syntax_inits	runtime/syntax/objc.vim	/^    let did_objc_syntax_inits = 1$/;"	v
did_ocaml_syntax_inits	runtime/syntax/ocaml.vim	/^    let did_ocaml_syntax_inits = 1$/;"	v
did_occam_syntax_inits	runtime/syntax/occam.vim	/^    let did_occam_syntax_inits = 1$/;"	v
did_omnimark_syntax_inits	runtime/syntax/omnimark.vim	/^    let did_omnimark_syntax_inits = 1$/;"	v
did_openroad_syntax_inits	runtime/syntax/openroad.vim	/^		let did_openroad_syntax_inits = 1$/;"	v
did_optwin_syntax_inits	runtime/optwin.vim	/^    let did_optwin_syntax_inits = 1$/;"	v
did_ora_syn_inits	runtime/syntax/ora.vim	/^    let did_ora_syn_inits = 1$/;"	v
did_outofmem_msg	src/globals.h	/^EXTERN int	did_outofmem_msg INIT(= FALSE);$/;"	v
did_pascal_syn_inits	runtime/syntax/pascal.vim	/^    let did_pascal_syn_inits = 1$/;"	v
did_pcap_syntax_inits	runtime/syntax/pcap.vim	/^    let did_pcap_syntax_inits = 1$/;"	v
did_pccts_syntax_inits	runtime/syntax/pccts.vim	/^    let did_pccts_syntax_inits = 1$/;"	v
did_perl6_syntax_inits	runtime/syntax/perl6.vim	/^        let did_perl6_syntax_inits = 1$/;"	v
did_php_syn_inits	runtime/syntax/php.vim	/^    let did_php_syn_inits = 1$/;"	v
did_pic16f84_syntax_inits	runtime/syntax/pic.vim	/^    let did_pic16f84_syntax_inits = 1$/;"	v
did_pike_syntax_inits	runtime/syntax/pike.vim	/^    let did_pike_syntax_inits = 1$/;"	v
did_pilrc_syntax_inits	runtime/syntax/pilrc.vim	/^	let did_pilrc_syntax_inits = 1$/;"	v
did_pine_syn_inits	runtime/syntax/pine.vim	/^    let did_pine_syn_inits = 1$/;"	v
did_plm_syntax_inits	runtime/syntax/plm.vim	/^    let did_plm_syntax_inits = 1$/;"	v
did_plsql_syn_inits	runtime/syntax/plsql.vim	/^    let did_plsql_syn_inits = 1$/;"	v
did_po_syn_inits	runtime/syntax/po.vim	/^    let did_po_syn_inits = 1$/;"	v
did_pod_syntax_inits	runtime/syntax/pod.vim	/^    let did_pod_syntax_inits = 1$/;"	v
did_postscr_syntax_inits	runtime/syntax/postscr.vim	/^    let did_postscr_syntax_inits = 1$/;"	v
did_ppwiz_syn_inits	runtime/syntax/ppwiz.vim	/^		let did_ppwiz_syn_inits = 1$/;"	v
did_prescribe_syn_inits	runtime/syntax/prescribe.vim	/^    let did_prescribe_syn_inits = 1$/;"	v
did_procmail_syntax_inits	runtime/syntax/procmail.vim	/^    let did_procmail_syntax_inits = 1$/;"	v
did_progress_syntax_inits	runtime/syntax/progress.vim	/^	let did_progress_syntax_inits = 1$/;"	v
did_prolog_syn_inits	runtime/syntax/prolog.vim	/^    let did_prolog_syn_inits = 1$/;"	v
did_psf_syntax_inits	runtime/syntax/psf.vim	/^    let did_psf_syntax_inits = 1$/;"	v
did_ptcap_syntax_inits	runtime/syntax/ptcap.vim	/^	let did_ptcap_syntax_inits = 1$/;"	v
did_purifyLog_syntax_inits	runtime/syntax/purifylog.vim	/^    let did_purifyLog_syntax_inits = 1$/;"	v
did_pyrex_syntax_inits	runtime/syntax/pyrex.vim	/^    let did_pyrex_syntax_inits = 1$/;"	v
did_python_syn_inits	runtime/syntax/python.vim	/^    let did_python_syn_inits = 1$/;"	v
did_r_syn_inits	runtime/syntax/eviews.vim	/^    let did_r_syn_inits = 1$/;"	v
did_r_syn_inits	runtime/syntax/gretl.vim	/^    let did_r_syn_inits = 1$/;"	v
did_r_syn_inits	runtime/syntax/r.vim	/^    let did_r_syn_inits = 1$/;"	v
did_radiance_syn_inits	runtime/syntax/radiance.vim	/^    let did_radiance_syn_inits = 1$/;"	v
did_ratpoison_syn_inits	runtime/syntax/ratpoison.vim	/^    let did_ratpoison_syn_inits = 1$/;"	v
did_rc_syntax_inits	runtime/syntax/rc.vim	/^    let did_rc_syntax_inits = 1$/;"	v
did_rcs_syn_inits	runtime/syntax/rcs.vim	/^    let did_rcs_syn_inits = 1$/;"	v
did_rcslog_syntax_inits	runtime/syntax/rcslog.vim	/^    let did_rcslog_syntax_inits = 1$/;"	v
did_rebol_syntax_inits	runtime/syntax/rebol.vim	/^    let did_rebol_syntax_inits = 1$/;"	v
did_registry_syntax_inits	runtime/syntax/registry.vim	/^    let did_registry_syntax_inits = 1$/;"	v
did_remind_syn_inits	runtime/syntax/remind.vim	/^    let did_remind_syn_inits = 1$/;"	v
did_restart_edit	src/edit.c	/^static int	did_restart_edit;	\/* "restart_edit" when calling edit() *\/$/;"	v	file:
did_reva_syntax_inits	runtime/syntax/reva.vim	/^    let did_reva_syntax_inits=1$/;"	v
did_rexx_syn_inits	runtime/syntax/rexx.vim	/^    let did_rexx_syn_inits = 1$/;"	v
did_rhelp_syntax_inits	runtime/syntax/rhelp.vim	/^    let did_rhelp_syntax_inits = 1$/;"	v
did_rib_syntax_inits	runtime/syntax/rib.vim	/^    let did_rib_syntax_inits = 1$/;"	v
did_robots_syntax_inits	runtime/syntax/robots.vim	/^    let did_robots_syntax_inits = 1$/;"	v
did_rpcgen_syntax_inits	runtime/syntax/rpcgen.vim	/^    let did_rpcgen_syntax_inits = 1$/;"	v
did_rpl_syntax_inits	runtime/syntax/rpl.vim	/^    let did_rpl_syntax_inits = 1$/;"	v
did_rtf_syntax_inits	runtime/syntax/rtf.vim	/^    let did_rtf_syntax_inits = 1$/;"	v
did_samba_syn_inits	runtime/syntax/samba.vim	/^    let did_samba_syn_inits = 1$/;"	v
did_sas_syntax_inits	runtime/syntax/sas.vim	/^      let did_sas_syntax_inits = 1$/;"	v
did_sather_syn_inits	runtime/syntax/sather.vim	/^    let did_sather_syn_inits = 1$/;"	v
did_scheme_syntax_inits	runtime/syntax/scheme.vim	/^    let did_scheme_syntax_inits = 1$/;"	v
did_scilab_syntax_inits	runtime/syntax/scilab.vim	/^		let did_scilab_syntax_inits = 1$/;"	v
did_sdl_syn_inits	runtime/syntax/sdl.vim	/^	let did_sdl_syn_inits = 1$/;"	v
did_sed_syntax_inits	runtime/syntax/sed.vim	/^	let did_sed_syntax_inits = 1$/;"	v
did_set_icon	src/os_unix.c	/^static int	did_set_icon = FALSE;$/;"	v	file:
did_set_option	src/option.c	/^did_set_option(opt_idx, opt_flags, new_value)$/;"	f	file:
did_set_option	src/option.c	/^static void did_set_option __ARGS((int opt_idx, int opt_flags, int new_value));$/;"	p	file:	signature:(int opt_idx, int opt_flags, int new_value)
did_set_spelllang	src/spell.c	/^did_set_spelllang(wp)$/;"	f
did_set_spelltab	src/spell.c	/^static int	    did_set_spelltab;$/;"	v	file:
did_set_string_option	src/option.c	/^did_set_string_option(opt_idx, varp, new_value_alloced, oldval, errbuf,$/;"	f	file:
did_set_string_option	src/option.c	/^static char_u *did_set_string_option __ARGS((int opt_idx, char_u **varp, int new_value_alloced, char_u *oldval, char_u *errbuf, int opt_flags));$/;"	p	file:	signature:(int opt_idx, char_u **varp, int new_value_alloced, char_u *oldval, char_u *errbuf, int opt_flags)
did_set_title	src/option.c	/^did_set_title(icon)$/;"	f	file:
did_set_title	src/option.c	/^static void did_set_title __ARGS((int icon));$/;"	p	file:	signature:(int icon)
did_set_title	src/os_unix.c	/^static int	did_set_title = FALSE;$/;"	v	file:
did_sgmldecl_syntax_init	runtime/syntax/sgmldecl.vim	/^    let did_sgmldecl_syntax_init = 1$/;"	v
did_sgmllnx_syn_inits	runtime/syntax/sgmllnx.vim	/^    let did_sgmllnx_syn_inits = 1$/;"	v
did_si	src/globals.h	/^EXTERN int	did_si INIT(= FALSE);$/;"	v
did_sicad_syntax_inits	runtime/syntax/sicad.vim	/^    let did_sicad_syntax_inits = 1$/;"	v
did_simula_syntax_inits	runtime/syntax/simula.vim	/^	let did_simula_syntax_inits = 1$/;"	v
did_sinda_syntax_inits	runtime/syntax/sinda.vim	/^    let did_sinda_syntax_inits = 1$/;"	v
did_sindacmp_syntax_inits	runtime/syntax/sindacmp.vim	/^    let did_sindacmp_syntax_inits = 1$/;"	v
did_sindaout_syntax_inits	runtime/syntax/sindaout.vim	/^    let did_sindaout_syntax_inits = 1$/;"	v
did_skill_syntax_inits	runtime/syntax/skill.vim	/^    let did_skill_syntax_inits = 1$/;"	v
did_sl_syntax_inits	runtime/syntax/sl.vim	/^    let did_sl_syntax_inits = 1$/;"	v
did_slang_syntax_inits	runtime/syntax/slang.vim	/^    let did_slang_syntax_inits = 1$/;"	v
did_slice_syn_inits	runtime/syntax/slice.vim	/^    let did_slice_syn_inits = 1$/;"	v
did_slrnrc_syntax_inits	runtime/syntax/slrnrc.vim	/^    let did_slrnrc_syntax_inits = 1$/;"	v
did_slrnsc_syntax_inits	runtime/syntax/slrnsc.vim	/^    let did_slrnsc_syntax_inits = 1$/;"	v
did_smarty_syn_inits	runtime/syntax/smarty.vim	/^    let did_smarty_syn_inits = 1$/;"	v
did_smil_syntax_inits	runtime/syntax/sm.vim	/^    let did_smil_syntax_inits = 1$/;"	v
did_smil_syntax_inits	runtime/syntax/smil.vim	/^    let did_smil_syntax_inits = 1$/;"	v
did_smith_syntax_inits	runtime/syntax/smith.vim	/^    let did_smith_syntax_inits = 1$/;"	v
did_sml_syntax_inits	runtime/syntax/sml.vim	/^    let did_sml_syntax_inits = 1$/;"	v
did_snnsnet_syn_inits	runtime/syntax/snnsnet.vim	/^    let did_snnsnet_syn_inits = 1$/;"	v
did_snnspat_syn_inits	runtime/syntax/snnspat.vim	/^    let did_snnspat_syn_inits = 1$/;"	v
did_snnsres_syn_inits	runtime/syntax/snnsres.vim	/^    let did_snnsres_syn_inits = 1$/;"	v
did_snobol4_syntax_inits	runtime/syntax/snobol4.vim	/^    let did_snobol4_syntax_inits = 1$/;"	v
did_spec_syntax_inits	runtime/syntax/spec.vim	/^    let did_spec_syntax_inits = 1$/;"	v
did_specman_syn_inits	runtime/syntax/specman.vim	/^    let did_specman_syn_inits = 1$/;"	v
did_spice_syntax_inits	runtime/syntax/spice.vim	/^    let did_spice_syntax_inits = 1$/;"	v
did_splint_syntax_inits	runtime/syntax/splint.vim	/^    let did_splint_syntax_inits = 1$/;"	v
did_spup_syn_inits	runtime/syntax/spup.vim	/^		let did_spup_syn_inits = 1$/;"	v
did_sql_syn_inits	runtime/syntax/sqlanywhere.vim	/^        let did_sql_syn_inits = 1$/;"	v
did_sql_syn_inits	runtime/syntax/sqlinformix.vim	/^    let did_sql_syn_inits = 1$/;"	v
did_sql_syn_inits	runtime/syntax/sqloracle.vim	/^    let did_sql_syn_inits = 1$/;"	v
did_sqlforms_syn_inits	runtime/syntax/sqlforms.vim	/^	let did_sqlforms_syn_inits = 1$/;"	v
did_sqlj_syn_inits	runtime/syntax/sqlj.vim	/^    let did_sqlj_syn_inits = 1$/;"	v
did_sqr_syn_inits	runtime/syntax/sqr.vim	/^    let did_sqr_syn_inits = 1$/;"	v
did_squid_syntax_inits	runtime/syntax/squid.vim	/^    let did_squid_syntax_inits = 1$/;"	v
did_sshconfig_syntax_inits	runtime/syntax/sshconfig.vim	/^    let did_sshconfig_syntax_inits = 1$/;"	v
did_sshdconfig_syntax_inits	runtime/syntax/sshdconfig.vim	/^    let did_sshdconfig_syntax_inits = 1$/;"	v
did_st_syntax_inits	runtime/syntax/st.vim	/^    let did_st_syntax_inits = 1$/;"	v
did_stp_syn_inits	runtime/syntax/stp.vim	/^    let did_stp_syn_inits = 1$/;"	v
did_strace_syntax_inits	runtime/syntax/strace.vim	/^		let did_strace_syntax_inits = 1$/;"	v
did_svn_syn_inits	runtime/syntax/svn.vim	/^    let did_svn_syn_inits = 1$/;"	v
did_swapwrite_msg	src/globals.h	/^EXTERN int	did_swapwrite_msg INIT(= FALSE);$/;"	v
did_syncbind	src/globals.h	/^EXTERN int     did_syncbind INIT(= FALSE);$/;"	v
did_tads_syn_inits	runtime/syntax/tads.vim	/^    let did_tads_syn_inits = 1$/;"	v
did_tak_syntax_inits	runtime/syntax/tak.vim	/^    let did_tak_syntax_inits = 1$/;"	v
did_takcmp_syntax_inits	runtime/syntax/takcmp.vim	/^    let did_takcmp_syntax_inits = 1$/;"	v
did_takout_syntax_inits	runtime/syntax/takout.vim	/^    let did_takout_syntax_inits = 1$/;"	v
did_tasm_syntax_inits	runtime/syntax/tasm.vim	/^    let did_tasm_syntax_inits = 1$/;"	v
did_tcl_syntax_inits	runtime/syntax/tcl.vim	/^    let did_tcl_syntax_inits = 1$/;"	v
did_tex_syntax_inits	runtime/syntax/lhaskell.vim	/^    let did_tex_syntax_inits = 1$/;"	v
did_tex_syntax_inits	runtime/syntax/tex.vim	/^ let did_tex_syntax_inits = 1$/;"	v
did_tex_syntax_inits	runtime/syntax/tex.vim	/^ let did_tex_syntax_inits= 2$/;"	v
did_texinfo_syn_inits	runtime/syntax/texinfo.vim	/^    let did_texinfo_syn_inits = 1$/;"	v
did_texmf_syntax_inits	runtime/syntax/texmf.vim	/^    let did_texmf_syntax_inits = 1$/;"	v
did_tf_syn_inits	runtime/syntax/tf.vim	/^    let did_tf_syn_inits = 1$/;"	v
did_throw	src/ex_docmd.c	/^    int		did_throw;$/;"	m	struct:dbg_stuff	file:	access:public
did_throw	src/globals.h	/^EXTERN int did_throw INIT(= FALSE);$/;"	v
did_tidy_syn_inits	runtime/syntax/tidy.vim	/^    let did_tidy_syn_inits = 1$/;"	v
did_tli_syntax_inits	runtime/syntax/tli.vim	/^    let did_tli_syntax_inits = 1$/;"	v
did_toolbar_tmenu	runtime/menu.vim	/^  let did_toolbar_tmenu = 1$/;"	v
did_tpp_syn_inits	runtime/syntax/tpp.vim	/^    let did_tpp_syn_inits = 1$/;"	v
did_trasys_syntax_inits	runtime/syntax/trasys.vim	/^    let did_trasys_syntax_inits = 1$/;"	v
did_tsalt_syntax_inits	runtime/syntax/tsalt.vim	/^    let did_tsalt_syntax_inits = 1$/;"	v
did_tsscl_syntax_inits	runtime/syntax/tsscl.vim	/^    let did_tsscl_syntax_inits = 1$/;"	v
did_tssgm_syntax_inits	runtime/syntax/tssgm.vim	/^    let did_tssgm_syntax_inits = 1$/;"	v
did_tssop_syntax_inits	runtime/syntax/tssop.vim	/^    let did_tssop_syntax_inits = 1$/;"	v
did_uc_syntax_inits	runtime/syntax/uc.vim	/^    let did_uc_syntax_inits = 1$/;"	v
did_uil_syn_inits	runtime/syntax/uil.vim	/^    let did_uil_syn_inits = 1$/;"	v
did_vb_syntax_inits	runtime/syntax/vb.vim	/^		let did_vb_syntax_inits = 1$/;"	v
did_vera_syn_inits	runtime/syntax/vera.vim	/^    let did_vera_syn_inits = 1$/;"	v
did_verilog_syn_inits	runtime/syntax/verilog.vim	/^      let did_verilog_syn_inits = 1$/;"	v
did_verilogams_syn_inits	runtime/syntax/verilogams.vim	/^      let did_verilogams_syn_inits = 1$/;"	v
did_vhdl_syntax_inits	runtime/syntax/vhdl.vim	/^    let did_vhdl_syntax_inits = 1$/;"	v
did_virata_syntax_inits	runtime/syntax/virata.vim	/^    let did_virata_syntax_inits = 1$/;"	v
did_vsejcl_syntax	runtime/syntax/vsejcl.vim	/^    let did_vsejcl_syntax = 1$/;"	v
did_wait_return	src/globals.h	/^EXTERN int	did_wait_return INIT(= FALSE);	\/* wait_return() was used and$/;"	v
did_wdiff_syn_inits	runtime/syntax/wdiff.vim	/^    let did_wdiff_syn_inits = 1$/;"	v
did_wdiff_syn_inits	runtime/syntax/wdiff.vim	/^  let did_wdiff_syn_inits = 1$/;"	v
did_webmacro_syn_inits	runtime/syntax/webmacro.vim	/^    let did_webmacro_syn_inits = 1$/;"	v
did_wget_syn_inits	runtime/syntax/wget.vim	/^    let did_wget_syn_inits = 1$/;"	v
did_winbatch_syntax_inits	runtime/syntax/winbatch.vim	/^    let did_winbatch_syntax_inits = 1$/;"	v
did_wml_syn_inits	runtime/syntax/wml.vim	/^    let did_wml_syn_inits = 1$/;"	v
did_wml_syn_inits	runtime/syntax/wml.vim	/^  let did_wml_syn_inits = 1$/;"	v
did_wsml_syn_inits	runtime/syntax/wsml.vim	/^       let did_wsml_syn_inits = 1$/;"	v
did_xdefaults_syntax_inits	runtime/syntax/xdefaults.vim	/^    let did_xdefaults_syntax_inits = 1$/;"	v
did_xkb_syntax_inits	runtime/syntax/xkb.vim	/^		let did_xkb_syntax_inits = 1$/;"	v
did_xmath_syntax_inits	runtime/syntax/xmath.vim	/^    let did_xmath_syntax_inits = 1$/;"	v
did_xpm2_syntax_inits	runtime/syntax/xpm2.vim	/^    let did_xpm2_syntax_inits = 1$/;"	v
did_xpm_syntax_inits	runtime/syntax/xpm.vim	/^    let did_xpm_syntax_inits = 1$/;"	v
did_xxd_syntax_inits	runtime/syntax/xxd.vim	/^    let did_xxd_syntax_inits = 1$/;"	v
did_z8a_syntax_inits	runtime/syntax/z8a.vim	/^    let did_z8a_syntax_inits = 1$/;"	v
didset_options	src/option.c	/^didset_options()$/;"	f	file:
didset_options	src/option.c	/^static void didset_options __ARGS((void));$/;"	p	file:	signature:(void)
didset_vim	src/globals.h	/^EXTERN int	didset_vim INIT(= FALSE);   \/* did set $VIM ourselves *\/$/;"	v
didset_vimruntime	src/globals.h	/^EXTERN int	didset_vimruntime INIT(= FALSE);   \/* idem for $VIMRUNTIME *\/$/;"	v
diff_T	src/structs.h	/^typedef struct diffblock_S diff_T;$/;"	t	typeref:struct:diffblock_S
diff_a_works	src/diff.c	/^static int diff_a_works = MAYBE; \/* TRUE when "diff -a" works, FALSE when it$/;"	v	file:
diff_alloc_new	src/diff.c	/^diff_alloc_new(tp, dprev, dp)$/;"	f	file:
diff_alloc_new	src/diff.c	/^static diff_T *diff_alloc_new __ARGS((tabpage_T *tp, diff_T *dprev, diff_T *dp));$/;"	p	file:	signature:(tabpage_T *tp, diff_T *dprev, diff_T *dp)
diff_bin_works	src/diff.c	/^static int diff_bin_works = MAYBE; \/* TRUE when "diff --binary" works, FALSE$/;"	v	file:
diff_buf_add	src/diff.c	/^diff_buf_add(buf)$/;"	f
diff_buf_adjust	src/diff.c	/^diff_buf_adjust(win)$/;"	f
diff_buf_delete	src/diff.c	/^diff_buf_delete(buf)$/;"	f
diff_buf_idx	src/diff.c	/^diff_buf_idx(buf)$/;"	f	file:
diff_buf_idx	src/diff.c	/^static int diff_buf_idx __ARGS((buf_T *buf));$/;"	p	file:	signature:(buf_T *buf)
diff_buf_idx_tp	src/diff.c	/^diff_buf_idx_tp(buf, tp)$/;"	f	file:
diff_buf_idx_tp	src/diff.c	/^static int diff_buf_idx_tp __ARGS((buf_T *buf, tabpage_T *tp));$/;"	p	file:	signature:(buf_T *buf, tabpage_T *tp)
diff_busy	src/diff.c	/^static int	diff_busy = FALSE;	\/* ex_diffgetput() is busy *\/$/;"	v	file:
diff_check	src/diff.c	/^diff_check(wp, lnum)$/;"	f
diff_check_fill	src/diff.c	/^diff_check_fill(wp, lnum)$/;"	f
diff_check_sanity	src/diff.c	/^diff_check_sanity(tp, dp)$/;"	f	file:
diff_check_sanity	src/diff.c	/^static int diff_check_sanity __ARGS((tabpage_T *tp, diff_T *dp));$/;"	p	file:	signature:(tabpage_T *tp, diff_T *dp)
diff_check_unchanged	src/diff.c	/^diff_check_unchanged(tp, dp)$/;"	f	file:
diff_check_unchanged	src/diff.c	/^static void diff_check_unchanged __ARGS((tabpage_T *tp, diff_T *dp));$/;"	p	file:	signature:(tabpage_T *tp, diff_T *dp)
diff_clear	src/diff.c	/^diff_clear(tp)$/;"	f
diff_cmp	src/diff.c	/^diff_cmp(s1, s2)$/;"	f	file:
diff_cmp	src/diff.c	/^static int diff_cmp __ARGS((char_u *s1, char_u *s2));$/;"	p	file:	signature:(char_u *s1, char_u *s2)
diff_context	src/globals.h	/^EXTERN int	diff_context INIT(= 6);		\/* context for folds *\/$/;"	v
diff_copy_entry	src/diff.c	/^diff_copy_entry(dprev, dp, idx_orig, idx_new)$/;"	f	file:
diff_copy_entry	src/diff.c	/^static void diff_copy_entry __ARGS((diff_T *dprev, diff_T *dp, int idx_orig, int idx_new));$/;"	p	file:	signature:(diff_T *dprev, diff_T *dp, int idx_orig, int idx_new)
diff_equal_entry	src/diff.c	/^diff_equal_entry(dp, idx1, idx2)$/;"	f	file:
diff_equal_entry	src/diff.c	/^static int diff_equal_entry __ARGS((diff_T *dp, int idx1, int idx2));$/;"	p	file:	signature:(diff_T *dp, int idx1, int idx2)
diff_file	src/diff.c	/^diff_file(tmp_orig, tmp_new, tmp_diff)$/;"	f	file:
diff_file	src/diff.c	/^static void diff_file __ARGS((char_u *tmp_orig, char_u *tmp_new, char_u *tmp_diff));$/;"	p	file:	signature:(char_u *tmp_orig, char_u *tmp_new, char_u *tmp_diff)
diff_find_change	src/diff.c	/^diff_find_change(wp, lnum, startp, endp)$/;"	f
diff_flags	src/diff.c	/^static int	diff_flags = DIFF_FILLER;$/;"	v	file:
diff_fold_update	src/diff.c	/^diff_fold_update(dp, skip_idx)$/;"	f	file:
diff_fold_update	src/diff.c	/^static void diff_fold_update __ARGS((diff_T *dp, int skip_idx));$/;"	p	file:	signature:(diff_T *dp, int skip_idx)
diff_foldcolumn	src/globals.h	/^EXTERN int	diff_foldcolumn INIT(= 2);	\/* 'foldcolumn' for diff mode *\/$/;"	v
diff_get_corresponding_line	src/diff.c	/^diff_get_corresponding_line(buf1, lnum1, buf2, lnum3)$/;"	f
diff_infold	src/diff.c	/^diff_infold(wp, lnum)$/;"	f
diff_invalidate	src/diff.c	/^diff_invalidate(buf)$/;"	f
diff_lnum_win	src/diff.c	/^diff_lnum_win(lnum, wp)$/;"	f
diff_mark_adjust	src/diff.c	/^diff_mark_adjust(line1, line2, amount, amount_after)$/;"	f
diff_mark_adjust_tp	src/diff.c	/^diff_mark_adjust_tp(tp, idx, line1, line2, amount, amount_after)$/;"	f	file:
diff_mark_adjust_tp	src/diff.c	/^static void diff_mark_adjust_tp __ARGS((tabpage_T *tp, int idx, linenr_T line1, linenr_T line2, long amount, long amount_after));$/;"	p	file:	signature:(tabpage_T *tp, int idx, linenr_T line1, linenr_T line2, long amount, long amount_after)
diff_mode	src/main.c	/^    int		diff_mode;		\/* start with 'diff' set *\/$/;"	m	struct:__anon9	file:	access:public
diff_mode_buf	src/diff.c	/^diff_mode_buf(buf)$/;"	f
diff_move_to	src/diff.c	/^diff_move_to(dir, count)$/;"	f
diff_need_scrollbind	src/globals.h	/^EXTERN int	diff_need_scrollbind INIT(= FALSE);$/;"	v
diff_read	src/diff.c	/^diff_read(idx_orig, idx_new, fname)$/;"	f	file:
diff_read	src/diff.c	/^static void diff_read __ARGS((int idx_orig, int idx_new, char_u *fname));$/;"	p	file:	signature:(int idx_orig, int idx_new, char_u *fname)
diff_redraw	src/diff.c	/^diff_redraw(dofold)$/;"	f	file:
diff_redraw	src/diff.c	/^static void diff_redraw __ARGS((int dofold));$/;"	p	file:	signature:(int dofold)
diff_set_topline	src/diff.c	/^diff_set_topline(fromwin, towin)$/;"	f
diff_win_options	src/diff.c	/^diff_win_options(wp, addbuf)$/;"	f
diff_write	src/diff.c	/^diff_write(buf, fname)$/;"	f	file:
diff_write	src/diff.c	/^static int diff_write __ARGS((buf_T *buf, char_u *fname));$/;"	p	file:	signature:(buf_T *buf, char_u *fname)
diffblock_S	src/structs.h	/^struct diffblock_S$/;"	s
diffblock_S::df_count	src/structs.h	/^    linenr_T	df_count[DB_COUNT];	\/* nr of inserted\/changed lines *\/$/;"	m	struct:diffblock_S	access:public
diffblock_S::df_lnum	src/structs.h	/^    linenr_T	df_lnum[DB_COUNT];	\/* line number in buffer *\/$/;"	m	struct:diffblock_S	access:public
diffblock_S::df_next	src/structs.h	/^    diff_T	*df_next;$/;"	m	struct:diffblock_S	access:public
diffcomplete	runtime/ftplugin/gitcommit.vim	/^function! s:diffcomplete(A,L,P)$/;"	f
diffopt_changed	src/diff.c	/^diffopt_changed()$/;"	f
diffopt_horizontal	src/diff.c	/^diffopt_horizontal()$/;"	f
digr_T	src/digraph.c	/^} digr_T;$/;"	t	typeref:struct:digraph	file:
digraph	src/digraph.c	/^typedef struct digraph$/;"	s	file:
digraph::char1	src/digraph.c	/^    char_u	char1;$/;"	m	struct:digraph	file:	access:public
digraph::char2	src/digraph.c	/^    char_u	char2;$/;"	m	struct:digraph	file:	access:public
digraph::result	src/digraph.c	/^    result_T	result;$/;"	m	struct:digraph	file:	access:public
digraphdefault	src/digraph.c	/^static digr_T digraphdefault[] =$/;"	v	file:
dir	src/gui_at_fs.c	/^    char	*dir;$/;"	m	struct:__anon114	file:	access:public
dir	src/gui_at_fs.c	/^    char	*dir;$/;"	m	struct:__anon115	file:	access:public
dir	src/search.c	/^    int		dir;		\/* search direction, '\/' or '?' *\/$/;"	m	struct:soffset	file:	access:public
dir_of_file_exists	src/misc1.c	/^dir_of_file_exists(fname)$/;"	f
dir_remove_last	src/dosinst.c	/^dir_remove_last(const char *path, char to[BUFSIZE])$/;"	f	file:	signature:(const char *path, char to[BUFSIZE])
dir_stack	src/quickfix.c	/^static struct dir_stack_T   *dir_stack = NULL;$/;"	v	typeref:struct:dir_stack_T	file:
dir_stack_T	src/quickfix.c	/^struct dir_stack_T$/;"	s	file:
dir_stack_T::dirname	src/quickfix.c	/^    char_u		*dirname;$/;"	m	struct:dir_stack_T	file:	access:public
dir_stack_T::next	src/quickfix.c	/^    struct dir_stack_T	*next;$/;"	m	struct:dir_stack_T	typeref:struct:dir_stack_T::dir_stack_T	file:	access:public
dirent	src/os_unix.h	142;"	d
dirname	src/quickfix.c	/^    char_u		*dirname;$/;"	m	struct:dir_stack_T	file:	access:public
dis_msg	src/ops.c	/^dis_msg(p, skip_esc)$/;"	f	file:
dis_msg	src/ops.c	/^static void	dis_msg __ARGS((char_u *p, int skip_esc));$/;"	p	file:	signature:(char_u *p, int skip_esc)
disallow_gui	src/globals.h	/^EXTERN short disallow_gui	INIT(= FALSE);$/;"	v
discard_current_exception	src/ex_eval.c	/^discard_current_exception()$/;"	f
discard_exception	src/ex_eval.c	/^discard_exception(excp, was_finished)$/;"	f	file:
discard_exception	src/ex_eval.c	/^static void	discard_exception __ARGS((except_T *excp, int was_finished));$/;"	p	file:	signature:(except_T *excp, int was_finished)
discard_pending_return	src/eval.c	/^discard_pending_return(rettv)$/;"	f
disp_sb_line	src/message.c	/^disp_sb_line(row, smp)$/;"	f	file:
disp_sb_line	src/message.c	/^static msgchunk_T *disp_sb_line __ARGS((int row, msgchunk_T *smp));$/;"	p	file:	signature:(int row, msgchunk_T *smp)
display_confirm_msg	src/message.c	/^display_confirm_msg()$/;"	f
display_dollar	src/edit.c	/^display_dollar(col)$/;"	f
display_errors	src/gui.c	/^display_errors()$/;"	f
display_errors	src/gui_mac.c	/^display_errors(void)$/;"	f	signature:(void)
display_errors	src/os_mswin.c	/^display_errors()$/;"	f
display_errors	src/os_mswin.c	572;"	d	file:
display_errors	src/vim.h	1928;"	d
display_sample	src/gui_xmdlg.c	/^display_sample(SharedFontSelData *data)$/;"	f	file:	signature:(SharedFontSelData *data)
display_showcmd	src/normal.c	/^display_showcmd()$/;"	f	file:
display_showcmd	src/normal.c	/^static void display_showcmd __ARGS((void));$/;"	p	file:	signature:(void)
display_tick	src/globals.h	/^EXTERN disptick_T	display_tick INIT(= 0);$/;"	v
displayname	src/netbeans.c	/^    char		*displayname;$/;"	m	struct:nbbuf_struct	file:	access:public
disptick_T	src/vim.h	/^typedef unsigned short disptick_T;	\/* display tick type *\/$/;"	t
djgpp_setlocale	src/os_msdos.c	/^djgpp_setlocale(void)$/;"	f	signature:(void)
dlg_icons	src/gui_w16.c	/^static const char_u dlg_icons[] = \/* must match names in resource file *\/$/;"	v	file:
dlg_icons	src/gui_w32.c	/^static const char_u *dlg_icons[] = \/* must match names in resource file *\/$/;"	v	file:
dll_GC_malloc	src/if_mzsch.c	/^static void *(*dll_GC_malloc)(size_t size_in_bytes);$/;"	v	file:
dll_GC_malloc_atomic	src/if_mzsch.c	/^static void *(*dll_GC_malloc_atomic)(size_t size_in_bytes);$/;"	v	file:
dll_NtInitialize	src/if_ruby.c	/^static void (*dll_NtInitialize) (int*, char***);$/;"	v	file:
dll_PyArg_Parse	src/if_python.c	/^static int(*dll_PyArg_Parse)(PyObject *, char *, ...);$/;"	v	file:
dll_PyArg_ParseTuple	src/if_python.c	/^static int(*dll_PyArg_ParseTuple)(PyObject *, char *, ...);$/;"	v	file:
dll_PyDict_GetItemString	src/if_python.c	/^static PyObject*(*dll_PyDict_GetItemString)(PyObject *, const char *);$/;"	v	file:
dll_PyDict_New	src/if_python.c	/^static PyObject*(*dll_PyDict_New)(void);$/;"	v	file:
dll_PyDict_SetItemString	src/if_python.c	/^static int(*dll_PyDict_SetItemString)(PyObject *dp, char *key, PyObject *item);$/;"	v	file:
dll_PyErr_BadArgument	src/if_python.c	/^static int(*dll_PyErr_BadArgument)(void);$/;"	v	file:
dll_PyErr_Clear	src/if_python.c	/^static void(*dll_PyErr_Clear)(void);$/;"	v	file:
dll_PyErr_NoMemory	src/if_python.c	/^static PyObject*(*dll_PyErr_NoMemory)(void);$/;"	v	file:
dll_PyErr_Occurred	src/if_python.c	/^static PyObject*(*dll_PyErr_Occurred)(void);$/;"	v	file:
dll_PyErr_SetNone	src/if_python.c	/^static void(*dll_PyErr_SetNone)(PyObject *);$/;"	v	file:
dll_PyErr_SetString	src/if_python.c	/^static void(*dll_PyErr_SetString)(PyObject *, const char *);$/;"	v	file:
dll_PyEval_InitThreads	src/if_python.c	/^static void(*dll_PyEval_InitThreads)(void);$/;"	v	file:
dll_PyEval_RestoreThread	src/if_python.c	/^static void(*dll_PyEval_RestoreThread)(PyThreadState *);$/;"	v	file:
dll_PyEval_SaveThread	src/if_python.c	/^static PyThreadState*(*dll_PyEval_SaveThread)(void);$/;"	v	file:
dll_PyGILState_Ensure	src/if_python.c	/^static PyGILState_STATE	(*dll_PyGILState_Ensure)(void);$/;"	v	file:
dll_PyGILState_Release	src/if_python.c	/^static void (*dll_PyGILState_Release)(PyGILState_STATE);$/;"	v	file:
dll_PyImport_ImportModule	src/if_python.c	/^static PyObject*(*dll_PyImport_ImportModule)(const char *);$/;"	v	file:
dll_PyInt_AsLong	src/if_python.c	/^static long(*dll_PyInt_AsLong)(PyObject *);$/;"	v	file:
dll_PyInt_FromLong	src/if_python.c	/^static PyObject*(*dll_PyInt_FromLong)(long);$/;"	v	file:
dll_PyInt_Type	src/if_python.c	/^static PyTypeObject* dll_PyInt_Type;$/;"	v	file:
dll_PyList_Append	src/if_python.c	/^static PyObject*(*dll_PyList_Append)(PyObject *, PyObject *);$/;"	v	file:
dll_PyList_GetItem	src/if_python.c	/^static PyObject*(*dll_PyList_GetItem)(PyObject *, PyInt);$/;"	v	file:
dll_PyList_New	src/if_python.c	/^static PyObject*(*dll_PyList_New)(PyInt size);$/;"	v	file:
dll_PyList_SetItem	src/if_python.c	/^static int(*dll_PyList_SetItem)(PyObject *, PyInt, PyObject *);$/;"	v	file:
dll_PyList_Size	src/if_python.c	/^static PyInt(*dll_PyList_Size)(PyObject *);$/;"	v	file:
dll_PyList_Type	src/if_python.c	/^static PyTypeObject* dll_PyList_Type;$/;"	v	file:
dll_PyModule_GetDict	src/if_python.c	/^static PyObject*(*dll_PyModule_GetDict)(PyObject *);$/;"	v	file:
dll_PyObject_Free	src/if_python.c	/^static void (*dll_PyObject_Free)(void*);$/;"	v	file:
dll_PyObject_Malloc	src/if_python.c	/^static void* (*dll_PyObject_Malloc)(size_t);$/;"	v	file:
dll_PyRun_SimpleString	src/if_python.c	/^static int(*dll_PyRun_SimpleString)(char *);$/;"	v	file:
dll_PyString_AsString	src/if_python.c	/^static char*(*dll_PyString_AsString)(PyObject *);$/;"	v	file:
dll_PyString_FromString	src/if_python.c	/^static PyObject*(*dll_PyString_FromString)(const char *);$/;"	v	file:
dll_PyString_FromStringAndSize	src/if_python.c	/^static PyObject*(*dll_PyString_FromStringAndSize)(const char *, PyInt);$/;"	v	file:
dll_PyString_Size	src/if_python.c	/^static PyInt(*dll_PyString_Size)(PyObject *);$/;"	v	file:
dll_PyString_Type	src/if_python.c	/^static PyTypeObject* dll_PyString_Type;$/;"	v	file:
dll_PySys_SetArgv	src/if_python.c	/^static int(*dll_PySys_SetArgv)(int, char **);$/;"	v	file:
dll_PySys_SetObject	src/if_python.c	/^static int(*dll_PySys_SetObject)(char *, PyObject *);$/;"	v	file:
dll_PyType_IsSubtype	src/if_python.c	/^static int (*dll_PyType_IsSubtype)(PyTypeObject *, PyTypeObject *);$/;"	v	file:
dll_PyType_Type	src/if_python.c	/^static PyTypeObject* dll_PyType_Type;$/;"	v	file:
dll_Py_BuildValue	src/if_python.c	/^static PyObject*(*dll_Py_BuildValue)(char *, ...);$/;"	v	file:
dll_Py_Finalize	src/if_python.c	/^static void(*dll_Py_Finalize)(void);$/;"	v	file:
dll_Py_FindMethod	src/if_python.c	/^static PyObject*(*dll_Py_FindMethod)(struct PyMethodDef[], PyObject *, char *);$/;"	v	file:
dll_Py_InitModule4	src/if_python.c	/^static PyObject*(*dll_Py_InitModule4)(char *, struct PyMethodDef *, char *, PyObject *, int);$/;"	v	file:
dll_Py_Initialize	src/if_python.c	/^static void(*dll_Py_Initialize)(void);$/;"	v	file:
dll_Py_IsInitialized	src/if_python.c	/^static int(*dll_Py_IsInitialized)(void);$/;"	v	file:
dll_Tcl_CreateInterp	src/if_tcl.c	/^Tcl_Interp* (*dll_Tcl_CreateInterp)();$/;"	v
dll__PyObject_Init	src/if_python.c	/^static PyObject*(*dll__PyObject_Init)(PyObject *, PyTypeObject *);$/;"	v	file:
dll__PyObject_New	src/if_python.c	/^static PyObject*(*dll__PyObject_New)(PyTypeObject *, PyObject *);$/;"	v	file:
dll__Py_NoneStruct	src/if_python.c	/^static PyObject* dll__Py_NoneStruct;$/;"	v	file:
dll_luaL_addlstring	src/if_lua.c	/^void (*dll_luaL_addlstring) (luaL_Buffer *B, const char *s, size_t l);$/;"	v
dll_luaL_buffinit	src/if_lua.c	/^void (*dll_luaL_buffinit) (lua_State *L, luaL_Buffer *B);$/;"	v
dll_luaL_checkinteger	src/if_lua.c	/^lua_Integer (*dll_luaL_checkinteger) (lua_State *L, int numArg);$/;"	v
dll_luaL_checklstring	src/if_lua.c	/^const char *(*dll_luaL_checklstring) (lua_State *L, int numArg, size_t *l);$/;"	v
dll_luaL_checktype	src/if_lua.c	/^void (*dll_luaL_checktype) (lua_State *L, int narg, int t);$/;"	v
dll_luaL_error	src/if_lua.c	/^int (*dll_luaL_error) (lua_State *L, const char *fmt, ...);$/;"	v
dll_luaL_loadbuffer	src/if_lua.c	/^int (*dll_luaL_loadbuffer) (lua_State *L, const char *buff, size_t sz, const char *name);$/;"	v
dll_luaL_loadfile	src/if_lua.c	/^int (*dll_luaL_loadfile) (lua_State *L, const char *filename);$/;"	v
dll_luaL_newstate	src/if_lua.c	/^lua_State *(*dll_luaL_newstate) (void);$/;"	v
dll_luaL_openlibs	src/if_lua.c	/^void (*dll_luaL_openlibs) (lua_State *L);$/;"	v
dll_luaL_optinteger	src/if_lua.c	/^lua_Integer (*dll_luaL_optinteger) (lua_State *L, int nArg, lua_Integer def);$/;"	v
dll_luaL_prepbuffer	src/if_lua.c	/^char *(*dll_luaL_prepbuffer) (luaL_Buffer *B);$/;"	v
dll_luaL_pushresult	src/if_lua.c	/^void (*dll_luaL_pushresult) (luaL_Buffer *B);$/;"	v
dll_luaL_register	src/if_lua.c	/^void (*dll_luaL_register) (lua_State *L, const char *libname, const luaL_Reg *l);$/;"	v
dll_luaL_typerror	src/if_lua.c	/^int (*dll_luaL_typerror) (lua_State *L, int narg, const char *tname);$/;"	v
dll_lua_call	src/if_lua.c	/^void (*dll_lua_call) (lua_State *L, int nargs, int nresults);$/;"	v
dll_lua_close	src/if_lua.c	/^void       (*dll_lua_close) (lua_State *L);$/;"	v
dll_lua_createtable	src/if_lua.c	/^void (*dll_lua_createtable) (lua_State *L, int narr, int nrec);$/;"	v
dll_lua_getfield	src/if_lua.c	/^void (*dll_lua_getfield) (lua_State *L, int idx, const char *k);$/;"	v
dll_lua_getmetatable	src/if_lua.c	/^int (*dll_lua_getmetatable) (lua_State *L, int objindex);$/;"	v
dll_lua_gettop	src/if_lua.c	/^int (*dll_lua_gettop) (lua_State *L);$/;"	v
dll_lua_isnumber	src/if_lua.c	/^int (*dll_lua_isnumber) (lua_State *L, int idx);$/;"	v
dll_lua_isstring	src/if_lua.c	/^int (*dll_lua_isstring) (lua_State *L, int idx);$/;"	v
dll_lua_newuserdata	src/if_lua.c	/^void *(*dll_lua_newuserdata) (lua_State *L, size_t sz);$/;"	v
dll_lua_pcall	src/if_lua.c	/^int (*dll_lua_pcall) (lua_State *L, int nargs, int nresults, int errfunc);$/;"	v
dll_lua_pushboolean	src/if_lua.c	/^void (*dll_lua_pushboolean) (lua_State *L, int b);$/;"	v
dll_lua_pushcclosure	src/if_lua.c	/^void (*dll_lua_pushcclosure) (lua_State *L, lua_CFunction fn, int n);$/;"	v
dll_lua_pushfstring	src/if_lua.c	/^const char *(*dll_lua_pushfstring) (lua_State *L, const char *fmt, ...);$/;"	v
dll_lua_pushinteger	src/if_lua.c	/^void (*dll_lua_pushinteger) (lua_State *L, lua_Integer n);$/;"	v
dll_lua_pushlightuserdata	src/if_lua.c	/^void (*dll_lua_pushlightuserdata) (lua_State *L, void *p);$/;"	v
dll_lua_pushlstring	src/if_lua.c	/^void (*dll_lua_pushlstring) (lua_State *L, const char *s, size_t l);$/;"	v
dll_lua_pushnil	src/if_lua.c	/^void (*dll_lua_pushnil) (lua_State *L);$/;"	v
dll_lua_pushnumber	src/if_lua.c	/^void (*dll_lua_pushnumber) (lua_State *L, lua_Number n);$/;"	v
dll_lua_pushstring	src/if_lua.c	/^void (*dll_lua_pushstring) (lua_State *L, const char *s);$/;"	v
dll_lua_pushvalue	src/if_lua.c	/^void (*dll_lua_pushvalue) (lua_State *L, int idx);$/;"	v
dll_lua_rawequal	src/if_lua.c	/^int (*dll_lua_rawequal) (lua_State *L, int idx1, int idx2);$/;"	v
dll_lua_rawget	src/if_lua.c	/^void (*dll_lua_rawget) (lua_State *L, int idx);$/;"	v
dll_lua_rawset	src/if_lua.c	/^void (*dll_lua_rawset) (lua_State *L, int idx);$/;"	v
dll_lua_rawseti	src/if_lua.c	/^void (*dll_lua_rawseti) (lua_State *L, int idx, int n);$/;"	v
dll_lua_replace	src/if_lua.c	/^void (*dll_lua_replace) (lua_State *L, int idx);$/;"	v
dll_lua_setfield	src/if_lua.c	/^void (*dll_lua_setfield) (lua_State *L, int idx, const char *k);$/;"	v
dll_lua_setmetatable	src/if_lua.c	/^int (*dll_lua_setmetatable) (lua_State *L, int objindex);$/;"	v
dll_lua_settop	src/if_lua.c	/^void (*dll_lua_settop) (lua_State *L, int idx);$/;"	v
dll_lua_toboolean	src/if_lua.c	/^int (*dll_lua_toboolean) (lua_State *L, int idx);$/;"	v
dll_lua_tointeger	src/if_lua.c	/^lua_Integer (*dll_lua_tointeger) (lua_State *L, int idx);$/;"	v
dll_lua_tolstring	src/if_lua.c	/^const char *(*dll_lua_tolstring) (lua_State *L, int idx, size_t *len);$/;"	v
dll_lua_tonumber	src/if_lua.c	/^lua_Number (*dll_lua_tonumber) (lua_State *L, int idx);$/;"	v
dll_lua_touserdata	src/if_lua.c	/^void *(*dll_lua_touserdata) (lua_State *L, int idx);$/;"	v
dll_lua_type	src/if_lua.c	/^int (*dll_lua_type) (lua_State *L, int idx);$/;"	v
dll_luaopen_base	src/if_lua.c	/^int (*dll_luaopen_base) (lua_State *L);$/;"	v
dll_luaopen_debug	src/if_lua.c	/^int (*dll_luaopen_debug) (lua_State *L);$/;"	v
dll_luaopen_io	src/if_lua.c	/^int (*dll_luaopen_io) (lua_State *L);$/;"	v
dll_luaopen_math	src/if_lua.c	/^int (*dll_luaopen_math) (lua_State *L);$/;"	v
dll_luaopen_os	src/if_lua.c	/^int (*dll_luaopen_os) (lua_State *L);$/;"	v
dll_luaopen_package	src/if_lua.c	/^int (*dll_luaopen_package) (lua_State *L);$/;"	v
dll_luaopen_string	src/if_lua.c	/^int (*dll_luaopen_string) (lua_State *L);$/;"	v
dll_luaopen_table	src/if_lua.c	/^int (*dll_luaopen_table) (lua_State *L);$/;"	v
dll_rb_ary_new	src/if_ruby.c	/^static VALUE (*dll_rb_ary_new) (void);$/;"	v	file:
dll_rb_ary_push	src/if_ruby.c	/^static VALUE (*dll_rb_ary_push) (VALUE, VALUE);$/;"	v	file:
dll_rb_assoc_new	src/if_ruby.c	/^static VALUE (*dll_rb_assoc_new) (VALUE, VALUE);$/;"	v	file:
dll_rb_cFalseClass	src/if_ruby.c	/^VALUE *dll_rb_cFalseClass;$/;"	v
dll_rb_cFixnum	src/if_ruby.c	/^VALUE *dll_rb_cFixnum;$/;"	v
dll_rb_cNilClass	src/if_ruby.c	/^VALUE *dll_rb_cNilClass;$/;"	v
dll_rb_cObject	src/if_ruby.c	/^static VALUE *dll_rb_cObject;$/;"	v	file:
dll_rb_cSymbol	src/if_ruby.c	/^VALUE *dll_rb_cSymbol;$/;"	v
dll_rb_cTrueClass	src/if_ruby.c	/^VALUE *dll_rb_cTrueClass;$/;"	v
dll_rb_check_type	src/if_ruby.c	/^static void (*dll_rb_check_type) (VALUE,int);$/;"	v	file:
dll_rb_class_path	src/if_ruby.c	/^static VALUE (*dll_rb_class_path) (VALUE);$/;"	v	file:
dll_rb_data_object_alloc	src/if_ruby.c	/^static VALUE (*dll_rb_data_object_alloc) (VALUE, void*, RUBY_DATA_FUNC, RUBY_DATA_FUNC);$/;"	v	file:
dll_rb_define_class_under	src/if_ruby.c	/^static VALUE (*dll_rb_define_class_under) (VALUE, const char*, VALUE);$/;"	v	file:
dll_rb_define_const	src/if_ruby.c	/^static void (*dll_rb_define_const) (VALUE,const char*,VALUE);$/;"	v	file:
dll_rb_define_global_function	src/if_ruby.c	/^static void (*dll_rb_define_global_function) (const char*,VALUE(*)(),int);$/;"	v	file:
dll_rb_define_method	src/if_ruby.c	/^static void (*dll_rb_define_method) (VALUE,const char*,VALUE(*)(),int);$/;"	v	file:
dll_rb_define_module	src/if_ruby.c	/^static VALUE (*dll_rb_define_module) (const char*);$/;"	v	file:
dll_rb_define_module_function	src/if_ruby.c	/^static void (*dll_rb_define_module_function) (VALUE,const char*,VALUE(*)(),int);$/;"	v	file:
dll_rb_define_singleton_method	src/if_ruby.c	/^static void (*dll_rb_define_singleton_method) (VALUE,const char*,VALUE(*)(),int);$/;"	v	file:
dll_rb_define_virtual_variable	src/if_ruby.c	/^static void (*dll_rb_define_virtual_variable) (const char*,VALUE(*)(),void(*)());$/;"	v	file:
dll_rb_eArgError	src/if_ruby.c	/^static VALUE *dll_rb_eArgError;$/;"	v	file:
dll_rb_eIndexError	src/if_ruby.c	/^static VALUE *dll_rb_eIndexError;$/;"	v	file:
dll_rb_eRuntimeError	src/if_ruby.c	/^static VALUE *dll_rb_eRuntimeError;$/;"	v	file:
dll_rb_eStandardError	src/if_ruby.c	/^static VALUE *dll_rb_eStandardError;$/;"	v	file:
dll_rb_enc_find	src/if_ruby.c	/^static rb_encoding* (*dll_rb_enc_find) (const char*);$/;"	v	file:
dll_rb_enc_find_index	src/if_ruby.c	/^static int (*dll_rb_enc_find_index) (const char*);$/;"	v	file:
dll_rb_enc_str_new	src/if_ruby.c	/^static VALUE (*dll_rb_enc_str_new) (const char*, long, rb_encoding*);$/;"	v	file:
dll_rb_errinfo	src/if_ruby.c	/^static VALUE (*dll_rb_errinfo) (void);$/;"	v	file:
dll_rb_eval_string_protect	src/if_ruby.c	/^static VALUE (*dll_rb_eval_string_protect) (const char*, int*);$/;"	v	file:
dll_rb_float_new	src/if_ruby.c	/^static VALUE (*dll_rb_float_new) (double);$/;"	v	file:
dll_rb_global_variable	src/if_ruby.c	/^static void (*dll_rb_global_variable) (VALUE*);$/;"	v	file:
dll_rb_hash_aset	src/if_ruby.c	/^static VALUE (*dll_rb_hash_aset) (VALUE, VALUE, VALUE);$/;"	v	file:
dll_rb_hash_new	src/if_ruby.c	/^static VALUE (*dll_rb_hash_new) (void);$/;"	v	file:
dll_rb_inspect	src/if_ruby.c	/^static VALUE (*dll_rb_inspect) (VALUE);$/;"	v	file:
dll_rb_int2big	src/if_ruby.c	/^static VALUE (*dll_rb_int2big)(SIGNED_VALUE);$/;"	v	file:
dll_rb_int2inum	src/if_ruby.c	/^static VALUE (*dll_rb_int2inum) (long);$/;"	v	file:
dll_rb_lastline_get	src/if_ruby.c	/^static VALUE (*dll_rb_lastline_get) (void);$/;"	v	file:
dll_rb_lastline_set	src/if_ruby.c	/^static void (*dll_rb_lastline_set) (VALUE);$/;"	v	file:
dll_rb_load_protect	src/if_ruby.c	/^static void (*dll_rb_load_protect) (VALUE, int, int*);$/;"	v	file:
dll_rb_num2long	src/if_ruby.c	/^static long (*dll_rb_num2long) (VALUE);$/;"	v	file:
dll_rb_num2ulong	src/if_ruby.c	/^static unsigned long (*dll_rb_num2ulong) (VALUE);$/;"	v	file:
dll_rb_obj_alloc	src/if_ruby.c	/^static VALUE (*dll_rb_obj_alloc) (VALUE);$/;"	v	file:
dll_rb_obj_as_string	src/if_ruby.c	/^static VALUE (*dll_rb_obj_as_string) (VALUE);$/;"	v	file:
dll_rb_obj_id	src/if_ruby.c	/^static VALUE (*dll_rb_obj_id) (VALUE);$/;"	v	file:
dll_rb_raise	src/if_ruby.c	/^static void (*dll_rb_raise) (VALUE, const char*, ...);$/;"	v	file:
dll_rb_sprintf	src/if_ruby.c	/^static VALUE (*dll_rb_sprintf) (const char*, ...);$/;"	v	file:
dll_rb_stdout	src/if_ruby.c	/^static VALUE *dll_rb_stdout;$/;"	v	file:
dll_rb_str2cstr	src/if_ruby.c	/^static char *(*dll_rb_str2cstr) (VALUE,int*);$/;"	v	file:
dll_rb_str_cat	src/if_ruby.c	/^static VALUE (*dll_rb_str_cat) (VALUE, const char*, long);$/;"	v	file:
dll_rb_str_concat	src/if_ruby.c	/^static VALUE (*dll_rb_str_concat) (VALUE, VALUE);$/;"	v	file:
dll_rb_str_new	src/if_ruby.c	/^static VALUE (*dll_rb_str_new) (const char*, long);$/;"	v	file:
dll_rb_str_new2	src/if_ruby.c	/^static VALUE (*dll_rb_str_new2) (const char*);$/;"	v	file:
dll_rb_str_new_cstr	src/if_ruby.c	/^static VALUE (*dll_rb_str_new_cstr) (const char*);$/;"	v	file:
dll_rb_string_value_ptr	src/if_ruby.c	/^static char * (*dll_rb_string_value_ptr) (volatile VALUE*);$/;"	v	file:
dll_rb_w32_snprintf	src/if_ruby.c	/^static int (*dll_rb_w32_snprintf)(char*, size_t, const char*, ...);$/;"	v	file:
dll_ruby_errinfo	src/if_ruby.c	/^static VALUE *dll_ruby_errinfo;$/;"	v	file:
dll_ruby_init	src/if_ruby.c	/^static void (*dll_ruby_init) (void);$/;"	v	file:
dll_ruby_init_loadpath	src/if_ruby.c	/^static void (*dll_ruby_init_loadpath) (void);$/;"	v	file:
dll_ruby_script	src/if_ruby.c	/^static void (*dll_ruby_script) (const char*);$/;"	v	file:
dll_scheme_add_global	src/if_mzsch.c	/^static void (*dll_scheme_add_global)(const char *name, Scheme_Object *val,$/;"	v	file:
dll_scheme_add_global_symbol	src/if_mzsch.c	/^static void (*dll_scheme_add_global_symbol)(Scheme_Object *name,$/;"	v	file:
dll_scheme_apply	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_apply)(Scheme_Object *rator, int num_rands,$/;"	v	file:
dll_scheme_basic_env	src/if_mzsch.c	/^static Scheme_Env *(*dll_scheme_basic_env)(void);$/;"	v	file:
dll_scheme_builtin_value	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_builtin_value)(const char *name);$/;"	v	file:
dll_scheme_byte_string_to_char_string	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_byte_string_to_char_string)(Scheme_Object *s);$/;"	v	file:
dll_scheme_char_string_to_byte_string	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_char_string_to_byte_string)$/;"	v	file:
dll_scheme_char_string_to_path	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_char_string_to_path)$/;"	v	file:
dll_scheme_check_threads	src/if_mzsch.c	/^static void (*dll_scheme_check_threads)(void);$/;"	v	file:
dll_scheme_close_input_port	src/if_mzsch.c	/^static void (*dll_scheme_close_input_port)(Scheme_Object *port);$/;"	v	file:
dll_scheme_console_output_ptr	src/if_mzsch.c	/^static void (**dll_scheme_console_output_ptr)(char *str, long len);$/;"	v	file:
dll_scheme_console_printf_ptr	src/if_mzsch.c	/^static void (**dll_scheme_console_printf_ptr)(char *str, ...);$/;"	v	file:
dll_scheme_count_lines	src/if_mzsch.c	/^static void (*dll_scheme_count_lines)(Scheme_Object *port);$/;"	v	file:
dll_scheme_current_config	src/if_mzsch.c	/^static Scheme_Config *(*dll_scheme_current_config)(void);$/;"	v	file:
dll_scheme_current_continuation_marks	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_current_continuation_marks)(Scheme_Object *prompt_tag);$/;"	v	file:
dll_scheme_current_continuation_marks	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_current_continuation_marks)(void);$/;"	v	file:
dll_scheme_current_thread_ptr	src/if_mzsch.c	/^static Scheme_Thread **dll_scheme_current_thread_ptr;$/;"	v	file:
dll_scheme_display	src/if_mzsch.c	/^static void (*dll_scheme_display)(Scheme_Object *obj, Scheme_Object *port);$/;"	v	file:
dll_scheme_display_to_string	src/if_mzsch.c	/^static char *(*dll_scheme_display_to_string)(Scheme_Object *obj, long *len);$/;"	v	file:
dll_scheme_do_eval	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_do_eval)(Scheme_Object *obj,$/;"	v	file:
dll_scheme_dont_gc_ptr	src/if_mzsch.c	/^static void (*dll_scheme_dont_gc_ptr)(void *p);$/;"	v	file:
dll_scheme_eof	src/if_mzsch.c	/^static Scheme_Object *dll_scheme_eof;$/;"	v	file:
dll_scheme_eq	src/if_mzsch.c	/^static int (*dll_scheme_eq)(Scheme_Object *obj1, Scheme_Object *obj2);$/;"	v	file:
dll_scheme_eval	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_eval)(Scheme_Object *obj, Scheme_Env *env);$/;"	v	file:
dll_scheme_eval_string	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_eval_string)(const char *str,$/;"	v	file:
dll_scheme_eval_string_all	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_eval_string_all)(const char *str,$/;"	v	file:
dll_scheme_false	src/if_mzsch.c	/^static Scheme_Object *dll_scheme_false;$/;"	v	file:
dll_scheme_finish_primitive_module	src/if_mzsch.c	/^static void (*dll_scheme_finish_primitive_module)(Scheme_Env *env);$/;"	v	file:
dll_scheme_format	src/if_mzsch.c	/^static char *(*dll_scheme_format)(char *format, int flen, int argc,$/;"	v	file:
dll_scheme_format_utf8	src/if_mzsch.c	/^static char *(*dll_scheme_format_utf8)(char *format, int flen, int argc,$/;"	v	file:
dll_scheme_gc_ptr_ok	src/if_mzsch.c	/^static void (*dll_scheme_gc_ptr_ok)(void *p);$/;"	v	file:
dll_scheme_get_param	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_get_param)(Scheme_Config *c, int pos);$/;"	v	file:
dll_scheme_get_sized_byte_string_output	src/if_mzsch.c	/^static char *(*dll_scheme_get_sized_byte_string_output)(Scheme_Object *,$/;"	v	file:
dll_scheme_get_sized_string_output	src/if_mzsch.c	/^static char *(*dll_scheme_get_sized_string_output)(Scheme_Object *,$/;"	v	file:
dll_scheme_hash_get	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_hash_get)(Scheme_Hash_Table *table,$/;"	v	file:
dll_scheme_hash_set	src/if_mzsch.c	/^static void (*dll_scheme_hash_set)(Scheme_Hash_Table *table,$/;"	v	file:
dll_scheme_intern_symbol	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_intern_symbol)(const char *name);$/;"	v	file:
dll_scheme_lookup_global	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_lookup_global)(Scheme_Object *symbol,$/;"	v	file:
dll_scheme_make_byte_string	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_byte_string)(const char *chars);$/;"	v	file:
dll_scheme_make_byte_string_output_port	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_byte_string_output_port)();$/;"	v	file:
dll_scheme_make_closed_prim_w_arity	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_closed_prim_w_arity)$/;"	v	file:
dll_scheme_make_double	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_double)(double d);$/;"	v	file:
dll_scheme_make_hash_table	src/if_mzsch.c	/^static Scheme_Hash_Table *(*dll_scheme_make_hash_table)(int type);$/;"	v	file:
dll_scheme_make_integer_value	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_integer_value)(long i);$/;"	v	file:
dll_scheme_make_pair	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_pair)(Scheme_Object *car,$/;"	v	file:
dll_scheme_make_prim_w_arity	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_prim_w_arity)(Scheme_Prim *prim,$/;"	v	file:
dll_scheme_make_sized_byte_string	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_sized_byte_string)(char *chars,$/;"	v	file:
dll_scheme_make_string	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_string)(const char *chars);$/;"	v	file:
dll_scheme_make_string_output_port	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_string_output_port)();$/;"	v	file:
dll_scheme_make_struct_instance	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_struct_instance)(Scheme_Object *stype,$/;"	v	file:
dll_scheme_make_struct_names	src/if_mzsch.c	/^static Scheme_Object **(*dll_scheme_make_struct_names)(Scheme_Object *base,$/;"	v	file:
dll_scheme_make_struct_type	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_struct_type)(Scheme_Object *base,$/;"	v	file:
dll_scheme_make_struct_values	src/if_mzsch.c	/^static Scheme_Object **(*dll_scheme_make_struct_values)($/;"	v	file:
dll_scheme_make_type	src/if_mzsch.c	/^static Scheme_Type (*dll_scheme_make_type)(const char *name);$/;"	v	file:
dll_scheme_make_vector	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_vector)(int size,$/;"	v	file:
dll_scheme_malloc_fail_ok	src/if_mzsch.c	/^static void *(*dll_scheme_malloc_fail_ok)(void *(*f)(size_t), size_t);$/;"	v	file:
dll_scheme_namespace_require	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_namespace_require)(Scheme_Object *req);$/;"	v	file:
dll_scheme_notify_multithread_ptr	src/if_mzsch.c	/^static void (**dll_scheme_notify_multithread_ptr)(int on);$/;"	v	file:
dll_scheme_null	src/if_mzsch.c	/^static Scheme_Object *dll_scheme_null;$/;"	v	file:
dll_scheme_open_input_file	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_open_input_file)(const char *name,$/;"	v	file:
dll_scheme_primitive_module	src/if_mzsch.c	/^static Scheme_Env *(*dll_scheme_primitive_module)(Scheme_Object *name,$/;"	v	file:
dll_scheme_proper_list_length	src/if_mzsch.c	/^static int (*dll_scheme_proper_list_length)(Scheme_Object *list);$/;"	v	file:
dll_scheme_raise	src/if_mzsch.c	/^static void (*dll_scheme_raise)(Scheme_Object *exn);$/;"	v	file:
dll_scheme_read	src/if_mzsch.c	/^static Scheme_Object *(*dll_scheme_read)(Scheme_Object *port);$/;"	v	file:
dll_scheme_register_static	src/if_mzsch.c	/^static void (*dll_scheme_register_static)(void *ptr, long size);$/;"	v	file:
dll_scheme_set_param	src/if_mzsch.c	/^static void (*dll_scheme_set_param)(Scheme_Config *c, int pos,$/;"	v	file:
dll_scheme_set_stack_base	src/if_mzsch.c	/^static void (*dll_scheme_set_stack_base)(void *base, int no_auto_statics);$/;"	v	file:
dll_scheme_signal_error	src/if_mzsch.c	/^static void (*dll_scheme_signal_error)(const char *msg, ...);$/;"	v	file:
dll_scheme_true	src/if_mzsch.c	/^static Scheme_Object *dll_scheme_true;$/;"	v	file:
dll_scheme_void	src/if_mzsch.c	/^static Scheme_Object *dll_scheme_void;$/;"	v	file:
dll_scheme_wrong_type	src/if_mzsch.c	/^static void (*dll_scheme_wrong_type)(const char *name, const char *expected,$/;"	v	file:
dlopen	src/auto/configure	/^				dlopen();$/;"	f
dlopen	src/auto/configure	/^		dlopen();$/;"	f
dlsym	src/auto/configure	/^				dlsym();$/;"	f
dlsym	src/auto/configure	/^		dlsym();$/;"	f
dname	src/structs.h	/^    char_u	*dname;		    \/* Displayed Name ("name" without '&') *\/$/;"	m	struct:VimMenu	access:public
dnd_targets	src/gui_gtk_x11.c	/^static const GtkTargetEntry dnd_targets[] =$/;"	v	file:
dnd_yank_drag_data	src/ops.c	/^dnd_yank_drag_data(str, len)$/;"	f
do_Lower	src/regexp.c	/^do_Lower(d, c)$/;"	f	file:
do_Lower	src/regexp.c	/^static fptr_T do_Lower __ARGS((int *, int));$/;"	p	file:	signature:(int *, int)
do_Upper	src/regexp.c	/^do_Upper(d, c)$/;"	f	file:
do_Upper	src/regexp.c	/^static fptr_T do_Upper __ARGS((int *, int));$/;"	p	file:	signature:(int *, int)
do_addsub	src/ops.c	/^do_addsub(command, Prenum1)$/;"	f
do_arg_all	src/buffer.c	/^do_arg_all(count, forceit, keep_tabs)$/;"	f
do_argfile	src/ex_cmds2.c	/^do_argfile(eap, argn)$/;"	f
do_arglist	src/ex_cmds2.c	/^do_arglist(str, what, after)$/;"	f	file:
do_arglist	src/ex_cmds2.c	/^static int	do_arglist __ARGS((char_u *str, int what, int after));$/;"	p	file:	signature:(char_u *str, int what, int after)
do_ascii	src/ex_cmds.c	/^do_ascii(eap)$/;"	f
do_augroup	src/fileio.c	/^do_augroup(arg, del_group)$/;"	f
do_autochdir	src/buffer.c	/^do_autochdir()$/;"	f
do_autocmd	src/fileio.c	/^do_autocmd(arg, forceit)$/;"	f
do_autocmd_event	src/fileio.c	/^do_autocmd_event(event, pat, nested, cmd, forceit, group)$/;"	f	file:
do_autocmd_event	src/fileio.c	/^static int do_autocmd_event __ARGS((event_T event, char_u *pat, int nested, char_u *cmd, int forceit, int group));$/;"	p	file:	signature:(event_T event, char_u *pat, int nested, char_u *cmd, int forceit, int group)
do_bang	src/ex_cmds.c	/^do_bang(addr_count, eap, forceit, do_in, do_out)$/;"	f
do_browse	src/message.c	/^do_browse(flags, title, dflt, ext, initdir, filter, buf)$/;"	f
do_bufdel	src/buffer.c	/^do_bufdel(command, arg, addr_count, start_bnr, end_bnr, forceit)$/;"	f
do_buffer	src/buffer.c	/^do_buffer(action, start, dir, count, forceit)$/;"	f
do_c_expr_indent	src/misc1.c	/^do_c_expr_indent()$/;"	f
do_check_cursorbind	src/move.c	/^do_check_cursorbind()$/;"	f
do_check_scrollbind	src/normal.c	/^do_check_scrollbind(check)$/;"	f
do_choice	src/gui_xmdlg.c	/^do_choice(Widget w,$/;"	f	file:	signature:(Widget w, SharedFontSelData *data, XmListCallbackStruct *call_data, enum ListSpecifier which)
do_clear_sb_text	src/message.c	/^static int do_clear_sb_text = FALSE;	\/* clear text on next msg *\/$/;"	v	file:
do_cmdline	src/ex_docmd.c	/^do_cmdline(cmdline, getline, cookie, flags)$/;"	f
do_cmdline_cmd	src/ex_docmd.c	/^do_cmdline_cmd(cmd)$/;"	f
do_cscope	src/ex_docmd.c	236;"	d	file:
do_cscope	src/if_cscope.c	/^do_cscope(eap)$/;"	f
do_cscope_general	src/if_cscope.c	/^do_cscope_general(eap, make_split)$/;"	f	file:
do_cscope_general	src/if_cscope.c	/^static void	    do_cscope_general __ARGS((exarg_T *eap, int make_split));$/;"	p	file:	signature:(exarg_T *eap, int make_split)
do_cstag	src/ex_docmd.c	238;"	d	file:
do_cstag	src/if_cscope.c	/^do_cstag(eap)$/;"	f
do_debug	src/ex_cmds2.c	/^do_debug(cmd)$/;"	f
do_dialog	src/message.c	/^do_dialog(type, title, message, buttons, dfltbutton, textfield)$/;"	f
do_dialog	src/vim.h	1961;"	d
do_digraph	src/digraph.c	/^do_digraph(c)$/;"	f
do_doautocmd	src/fileio.c	/^do_doautocmd(arg, do_msg)$/;"	f
do_ecmd	src/ex_cmds.c	/^do_ecmd(fnum, ffname, sfname, eap, newlnum, flags, oldwin)$/;"	f
do_ecmd_cmd	src/ex_cmds.h	/^    char_u	*do_ecmd_cmd;	\/* +command arg to be used in edited file *\/$/;"	m	struct:exarg	access:public
do_ecmd_lnum	src/ex_cmds.h	/^    linenr_T	do_ecmd_lnum;	\/* the line number in an edited file *\/$/;"	m	struct:exarg	access:public
do_err_output	src/if_mzsch.c	/^do_err_output(char *mesg)$/;"	f	file:	signature:(char *mesg)
do_errthrow	src/ex_eval.c	/^do_errthrow(cstack, cmdname)$/;"	f
do_eval	src/if_mzsch.c	/^do_eval(void *s, int noargc UNUSED, Scheme_Object **noargv UNUSED)$/;"	f	file:	signature:(void *s, int noargc UNUSED, Scheme_Object **noargv UNUSED)
do_eval	src/if_mzsch.c	/^static Scheme_Object *do_eval(void *, int noargc, Scheme_Object **noargv);$/;"	p	file:	signature:(void *, int noargc, Scheme_Object **noargv)
do_execreg	src/ops.c	/^do_execreg(regname, colon, addcr, silent)$/;"	f
do_exedit	src/ex_docmd.c	/^do_exedit(eap, old_curwin)$/;"	f
do_exmap	src/ex_docmd.c	/^do_exmap(eap, isabbrev)$/;"	f	file:
do_exmap	src/ex_docmd.c	/^static void	do_exmap __ARGS((exarg_T *eap, int isabbrev));$/;"	p	file:	signature:(exarg_T *eap, int isabbrev)
do_exmode	src/ex_docmd.c	/^do_exmode(improved)$/;"	f
do_filter	src/ex_cmds.c	/^do_filter(line1, line2, eap, cmd, do_in, do_out)$/;"	f	file:
do_filter	src/ex_cmds.c	/^static void do_filter __ARGS((linenr_T line1, linenr_T line2, exarg_T *eap, char_u *cmd, int do_in, int do_out));$/;"	p	file:	signature:(linenr_T line1, linenr_T line2, exarg_T *eap, char_u *cmd, int do_in, int do_out)
do_finish	src/ex_cmds2.c	/^do_finish(eap, reanimate)$/;"	f
do_fixdel	src/ex_cmds.c	/^do_fixdel(eap)$/;"	f
do_flush	src/if_mzsch.c	/^do_flush(void)$/;"	f	file:	signature:(void)
do_flush	src/if_mzsch.c	/^static void do_flush(void);$/;"	p	file:	signature:(void)
do_highlight	src/syntax.c	/^do_highlight(line, forceit, init)$/;"	f
do_in_runtimepath	src/ex_cmds2.c	/^do_in_runtimepath(name, all, callback, cookie)$/;"	f
do_inits	src/dosinst.h	/^do_inits(char **argv)$/;"	f	signature:(char **argv)
do_intrnl_output	src/if_mzsch.c	/^do_intrnl_output(char *mesg, int error)$/;"	f	file:	signature:(char *mesg, int error)
do_intro_line	src/version.c	/^do_intro_line(row, mesg, add_version, attr)$/;"	f	file:
do_intro_line	src/version.c	/^static void do_intro_line __ARGS((int row, char_u *mesg, int add_version, int attr));$/;"	p	file:	signature:(int row, char_u *mesg, int add_version, int attr)
do_intthrow	src/ex_eval.c	/^do_intthrow(cstack)$/;"	f
do_join	src/ops.c	/^do_join(count, insert_space, save_undo)$/;"	f
do_load	src/if_mzsch.c	/^do_load(void *data, int noargc UNUSED, Scheme_Object **noargv UNUSED)$/;"	f	file:	signature:(void *data, int noargc UNUSED, Scheme_Object **noargv UNUSED)
do_load	src/if_mzsch.c	/^static Scheme_Object *do_load(void *, int noargc, Scheme_Object **noargv);$/;"	p	file:	signature:(void *, int noargc, Scheme_Object **noargv)
do_lock_var	src/eval.c	/^do_lock_var(lp, name_end, deep, lock)$/;"	f	file:
do_lock_var	src/eval.c	/^static int do_lock_var __ARGS((lval_T *lp, char_u *name_end, int deep, int lock));$/;"	p	file:	signature:(lval_T *lp, char_u *name_end, int deep, int lock)
do_lower	src/regexp.c	/^do_lower(d, c)$/;"	f	file:
do_lower	src/regexp.c	/^static fptr_T do_lower __ARGS((int *, int));$/;"	p	file:	signature:(int *, int)
do_map	src/getchar.c	/^do_map(maptype, arg, mode, abbrev)$/;"	f
do_marks	src/mark.c	/^do_marks(eap)$/;"	f
do_mnemonic	src/gui_motif.c	/^do_mnemonic(Widget w, unsigned int keycode)$/;"	f	file:	signature:(Widget w, unsigned int keycode)
do_modelines	src/buffer.c	/^do_modelines(flags)$/;"	f
do_more_prompt	src/message.c	/^do_more_prompt(typed_char)$/;"	f	file:
do_more_prompt	src/message.c	/^static int do_more_prompt __ARGS((int typed_char));$/;"	p	file:	signature:(int typed_char)
do_mouse	src/normal.c	/^do_mouse(oap, c, dir, count, fixindent)$/;"	f
do_move	src/ex_cmds.c	/^do_move(line1, line2, dest)$/;"	f
do_mzeval	src/if_mzsch.c	/^do_mzeval(char_u *str, typval_T *rettv)$/;"	f	signature:(char_u *str, typval_T *rettv)
do_mzscheme_command	src/if_mzsch.c	/^do_mzscheme_command(exarg_T *eap, void *data, Scheme_Closed_Prim *what)$/;"	f	file:	signature:(exarg_T *eap, void *data, Scheme_Closed_Prim *what)
do_mzscheme_command	src/if_mzsch.c	/^static int do_mzscheme_command(exarg_T *, void *, Scheme_Closed_Prim *what);$/;"	p	file:	signature:(exarg_T *, void *, Scheme_Closed_Prim *what)
do_nv_ident	src/normal.c	/^do_nv_ident(c1, c2)$/;"	f
do_one_arg	src/ex_cmds2.c	/^do_one_arg(str)$/;"	f	file:
do_one_arg	src/ex_cmds2.c	/^static char_u	*do_one_arg __ARGS((char_u *str));$/;"	p	file:	signature:(char_u *str)
do_one_cmd	src/ex_docmd.c	/^do_one_cmd(cmdlinep, sourcing,$/;"	f	file:
do_one_cmd	src/ex_docmd.c	/^static char_u	*do_one_cmd __ARGS((char_u **, int, char_u *(*fgetline)(int, void *, int), void *cookie));$/;"	p	file:	signature:(char_u **, int, char_u *(*fgetline)(int, void *, int), void *cookie)
do_one_cmd	src/ex_docmd.c	/^static char_u	*do_one_cmd __ARGS((char_u **, int, struct condstack *, char_u *(*fgetline)(int, void *, int), void *cookie));$/;"	p	file:	signature:(char_u **, int, struct condstack *, char_u *(*fgetline)(int, void *, int), void *cookie)
do_outofmem_msg	src/misc2.c	/^do_outofmem_msg(size)$/;"	f
do_output	src/if_mzsch.c	/^do_output(char *mesg, long len UNUSED)$/;"	f	file:	signature:(char *mesg, long len UNUSED)
do_output	src/if_mzsch.c	/^static void do_output(char *mesg, long len);$/;"	p	file:	signature:(char *mesg, long len)
do_pending_operator	src/normal.c	/^do_pending_operator(cap, old_col, gui_yank)$/;"	f
do_printf	src/if_mzsch.c	/^do_printf(char *format, ...)$/;"	f	file:	signature:(char *format, ...)
do_printf	src/if_mzsch.c	/^static void do_printf(char *format, ...);$/;"	p	file:	signature:(char *format, ...)
do_profiling	src/globals.h	/^EXTERN int	do_profiling INIT(= PROF_NONE);	\/* PROF_ values *\/$/;"	v
do_put	src/ops.c	/^do_put(regname, dir, count, flags)$/;"	f
do_record	src/ops.c	/^do_record(c)$/;"	f
do_redraw	src/globals.h	/^EXTERN int	do_redraw INIT(= FALSE);    \/* extra redraw once *\/$/;"	v
do_resize	src/os_unix.c	/^static volatile int do_resize = FALSE;$/;"	v	file:
do_return	src/eval.c	/^do_return(eap, reanimate, is_cmd, rettv)$/;"	f
do_scscope	src/ex_docmd.c	237;"	d	file:
do_scscope	src/if_cscope.c	/^do_scscope(eap)$/;"	f
do_search	src/search.c	/^do_search(oap, dirc, pat, count, options, tm)$/;"	f
do_searchpair	src/eval.c	/^do_searchpair(spat, mpat, epat, dir, skip, flags, match_pos,$/;"	f
do_set	src/option.c	/^do_set(arg, opt_flags)$/;"	f
do_set_mnemonics	src/gui_motif.c	/^do_set_mnemonics(enable)$/;"	f	file:
do_set_mnemonics	src/gui_motif.c	/^static void do_set_mnemonics __ARGS((int enable));$/;"	p	file:	signature:(int enable)
do_shell	src/ex_cmds.c	/^do_shell(cmd, flags)$/;"	f
do_sleep	src/ex_docmd.c	/^do_sleep(msec)$/;"	f
do_source	src/ex_cmds2.c	/^do_source(fname, check_other, is_vimrc)$/;"	f
do_string_sub	src/eval.c	/^do_string_sub(str, pat, sub, flags)$/;"	f
do_sub	src/ex_cmds.c	/^do_sub(eap)$/;"	f
do_sub_msg	src/ex_cmds.c	/^do_sub_msg(count_only)$/;"	f
do_swapexists	src/memline.c	/^do_swapexists(buf, fname)$/;"	f	file:
do_swapexists	src/memline.c	/^static int do_swapexists __ARGS((buf_T *buf, char_u *fname));$/;"	p	file:	signature:(buf_T *buf, char_u *fname)
do_syntax	src/structs.h	/^    int		do_syntax;$/;"	m	struct:__anon60	access:public
do_tag	src/tag.c	/^do_tag(tag, type, count, forceit, verbose)$/;"	f
do_tags	src/tag.c	/^do_tags(eap)$/;"	f
do_throw	src/ex_eval.c	/^do_throw(cstack)$/;"	f
do_ucmd	src/ex_docmd.c	/^do_ucmd(eap)$/;"	f	file:
do_ucmd	src/ex_docmd.c	/^static void do_ucmd __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
do_unlet	src/eval.c	/^do_unlet(name, forceit)$/;"	f
do_unlet_var	src/eval.c	/^do_unlet_var(lp, name_end, forceit)$/;"	f	file:
do_unlet_var	src/eval.c	/^static int do_unlet_var __ARGS((lval_T *lp, char_u *name_end, int forceit));$/;"	p	file:	signature:(lval_T *lp, char_u *name_end, int forceit)
do_upper	src/regexp.c	/^do_upper(d, c)$/;"	f	file:
do_upper	src/regexp.c	/^static fptr_T do_upper __ARGS((int *, int));$/;"	p	file:	signature:(int *, int)
do_viminfo	src/ex_cmds.c	/^do_viminfo(fp_in, fp_out, flags)$/;"	f	file:
do_viminfo	src/ex_cmds.c	/^static void do_viminfo __ARGS((FILE *fp_in, FILE *fp_out, int flags));$/;"	p	file:	signature:(FILE *fp_in, FILE *fp_out, int flags)
do_window	src/window.c	/^do_window(nchar, Prenum, xchar)$/;"	f
do_wqall	src/ex_cmds.c	/^do_wqall(eap)$/;"	f
do_write	src/ex_cmds.c	/^do_write(eap)$/;"	f
do_xterm_trace	src/os_unix.c	/^do_xterm_trace()$/;"	f	file:
do_xterm_trace	src/os_unix.c	/^static int do_xterm_trace __ARGS((void));$/;"	p	file:	signature:(void)
dodigits	runtime/ftplugin/pdf.vim	/^function! s:dodigits(digits)$/;"	f
dofork	src/gui.h	/^    int		dofork;		    \/* Use fork() when GUI is starting *\/$/;"	m	struct:Gui	access:public
doing_destroy	src/gui_xmebwp.h	/^    int doing_destroy;$/;"	m	struct:_XmEnhancedButtonPart	access:public
doing_setvalues	src/gui_xmebwp.h	/^    int doing_setvalues;$/;"	m	struct:_XmEnhancedButtonPart	access:public
dollar_command	src/ex_docmd.c	/^static char_u dollar_command[2] = {'$', 0};$/;"	v	file:
dollar_vcol	src/globals.h	/^EXTERN colnr_T	dollar_vcol INIT(= 0);$/;"	v
dolu	runtime/tutor/tutor.cs	/^  2. Dr¾ klávesu pro pohyb dolu (j), dokud se její funkce nezopakuje.$/;"	m	signature:(j)
dont_scroll	src/globals.h	/^EXTERN int	dont_scroll INIT(= FALSE);\/* don't use scrollbars when TRUE *\/$/;"	v
doobject	runtime/ftplugin/pdf.vim	/^function! s:doobject(string)$/;"	f
dos2	src/os_amiga.c	/^int			dos2 = FALSE;	    \/* Amiga DOS 2.0x or higher *\/$/;"	v
dos_expandpath	src/misc1.c	/^dos_expandpath($/;"	f	file:	signature:( garray_T *gap, char_u *path, int wildoff, int flags, int didstar)
dos_packet	src/os_amiga.c	/^dos_packet(pid, action, arg)$/;"	f	file:
dos_packet	src/os_amiga.c	/^static long dos_packet __ARGS((struct MsgPort *, long, long));$/;"	p	file:	signature:(struct MsgPort *, long, long)
dos_packet	src/os_amiga.c	67;"	d	file:
dosbatch_cmdextversion	runtime/syntax/dosbatch.vim	/^  let dosbatch_cmdextversion = 2$/;"	v
dosetvisible	src/netbeans.c	/^static int dosetvisible = FALSE;$/;"	v	file:
double_height	src/gui_riscos.c	/^int double_height   = FALSE;	\/* Plot each line twice? *\/$/;"	v
down	src/gui_gtk.c	/^    GtkWidget *down;	\/* search direction 'Down' radio button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
down	src/gui_motif.c	/^    Widget down;	\/* search direction 'Down' radio button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
doxygengroup	runtime/syntax/doxygen.vim	/^    aug doxygengroup$/;"	a
dprint	runtime/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
dpy	src/gui.h	/^    Display	*dpy;		    \/* X display *\/$/;"	m	struct:Gui	access:public
dragRect	src/gui_mac.c	/^static Rect dragRect;$/;"	v	file:
dragRectControl	src/gui_mac.c	/^static short dragRectControl;$/;"	v	file:
dragRectEnbl	src/gui_mac.c	/^static short dragRectEnbl;$/;"	v	file:
dragRgn	src/gui_mac.c	/^static RgnHandle dragRgn;$/;"	v	file:
drag_button	src/gui_riscos.c	/^int drag_button;$/;"	v
drag_data_received_cb	src/gui_gtk_x11.c	/^drag_data_received_cb(GtkWidget		*widget,$/;"	f	file:	signature:(GtkWidget *widget, GdkDragContext *context, gint x, gint y, GtkSelectionData *data, guint info, guint time_, gpointer user_data UNUSED)
drag_handle_text	src/gui_gtk_x11.c	/^drag_handle_text(GdkDragContext	    *context,$/;"	f	file:	signature:(GdkDragContext *context, GtkSelectionData *data, guint time_, GdkModifierType state)
drag_handle_uri_list	src/gui_gtk_x11.c	/^drag_handle_uri_list(GdkDragContext	*context,$/;"	f	file:	signature:(GdkDragContext *context, GtkSelectionData *data, guint time_, GdkModifierType state, gint x, gint y)
drag_modifiers	src/gui_riscos.c	/^int drag_modifiers;$/;"	v
drag_sep_line	src/globals.h	/^EXTERN int	drag_sep_line INIT(= FALSE);	\/* dragging vert separator *\/$/;"	v
drag_status_line	src/globals.h	/^EXTERN int	drag_status_line INIT(= FALSE);	\/* dragging the status line *\/$/;"	v
drag_x_offset	src/gui_riscos.c	/^int drag_x_offset;$/;"	v
drag_y_offset	src/gui_riscos.c	/^int drag_y_offset;$/;"	v
dragged_sb	src/gui.h	/^    int		dragged_sb;	    \/* Which scrollbar being dragged, if any? *\/$/;"	m	struct:Gui	access:public
dragged_sb	src/gui_mac.c	/^static ControlHandle dragged_sb = NULL;$/;"	v	file:
dragged_wp	src/gui.h	/^    win_T	*dragged_wp;	    \/* Which WIN's sb being dragged, if any? *\/$/;"	m	struct:Gui	access:public
drawBalloon	src/gui_beval.c	/^drawBalloon(BalloonEval *beval)$/;"	f	file:	signature:(BalloonEval *beval)
drawBalloon	src/gui_beval.c	/^drawBalloon(beval)$/;"	f	file:
drawBalloon	src/gui_beval.c	/^static void drawBalloon __ARGS((BalloonEval *));$/;"	p	file:	signature:(BalloonEval *)
draw_cmdline	src/ex_getln.c	/^draw_cmdline(start, len)$/;"	f	file:
draw_cmdline	src/ex_getln.c	/^static void	draw_cmdline __ARGS((int start, int len));$/;"	p	file:	signature:(int start, int len)
draw_curl	src/gui_x11.c	/^draw_curl(row, col, cells)$/;"	f	file:
draw_curl	src/gui_x11.c	/^static void draw_curl __ARGS((int row, int col, int cells));$/;"	p	file:	signature:(int row, int col, int cells)
draw_glyph_string	src/gui_gtk_x11.c	/^draw_glyph_string(int row, int col, int num_cells, int flags,$/;"	f	file:	signature:(int row, int col, int num_cells, int flags, PangoFont *font, PangoGlyphString *glyphs)
draw_highlight	src/gui_xmebw.c	/^draw_highlight(XmEnhancedButtonWidget eb)$/;"	f	file:	signature:(XmEnhancedButtonWidget eb)
draw_hollow	src/gui_riscos.c	/^draw_hollow(w, h)$/;"	f
draw_label	src/gui_xmebw.c	/^draw_label(XmEnhancedButtonWidget eb, XEvent *event, Region region)$/;"	f	file:	signature:(XmEnhancedButtonWidget eb, XEvent *event, Region region)
draw_pixmap	src/gui_xmebw.c	/^draw_pixmap(XmEnhancedButtonWidget eb,$/;"	f	file:	signature:(XmEnhancedButtonWidget eb, XEvent *event UNUSED, Region region UNUSED)
draw_shadows	src/gui_xmebw.c	/^draw_shadows(XmEnhancedButtonWidget eb)$/;"	f	file:	signature:(XmEnhancedButtonWidget eb)
draw_signcolumn	src/screen.c	/^draw_signcolumn(wp)$/;"	f	file:
draw_signcolumn	src/screen.c	/^static int draw_signcolumn __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
draw_string_ATSUI	src/gui_mac.c	/^draw_string_ATSUI(int row, int col, char_u *s, int len, int flags)$/;"	f	file:	signature:(int row, int col, char_u *s, int len, int flags)
draw_string_QD	src/gui_mac.c	/^draw_string_QD(int row, int col, char_u *s, int len, int flags)$/;"	f	file:	signature:(int row, int col, char_u *s, int len, int flags)
draw_tabline	src/screen.c	/^draw_tabline()$/;"	f	file:
draw_tabline	src/screen.c	/^static void draw_tabline __ARGS((void));$/;"	p	file:	signature:(void)
draw_under	src/gui_gtk_x11.c	/^draw_under(int flags, int row, int col, int cells)$/;"	f	file:	signature:(int flags, int row, int col, int cells)
draw_undercurl	src/gui_mac.c	/^draw_undercurl(int flags, int row, int col, int cells)$/;"	f	file:	signature:(int flags, int row, int col, int cells)
draw_unhighlight	src/gui_xmebw.c	/^draw_unhighlight(XmEnhancedButtonWidget eb)$/;"	f	file:	signature:(XmEnhancedButtonWidget eb)
draw_vsep_win	src/screen.c	/^draw_vsep_win(wp, row)$/;"	f	file:
draw_vsep_win	src/screen.c	/^static void draw_vsep_win __ARGS((win_T *wp, int row));$/;"	p	file:	signature:(win_T *wp, int row)
drawarea	src/gui.h	/^    GtkWidget	*drawarea;	    \/* the "text" area *\/$/;"	m	struct:Gui	access:public
drawarea_realize_cb	src/gui_gtk_x11.c	/^drawarea_realize_cb(GtkWidget *widget, gpointer data UNUSED)$/;"	f	file:	signature:(GtkWidget *widget, gpointer data UNUSED)
drawarea_style_set_cb	src/gui_gtk_x11.c	/^drawarea_style_set_cb(GtkWidget	*widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GtkStyle *previous_style UNUSED, gpointer data UNUSED)
drawarea_unrealize_cb	src/gui_gtk_x11.c	/^drawarea_unrealize_cb(GtkWidget *widget UNUSED, gpointer data UNUSED)$/;"	f	file:	signature:(GtkWidget *widget UNUSED, gpointer data UNUSED)
drawer	src/gui_mac.c	/^static WindowRef drawer = NULL; \/\/ TODO: put into gui.h$/;"	v	file:
drawerCallback	src/gui_mac.c	/^drawerCallback(EventHandlerCallRef handler, EventRef event, void *data)$/;"	f	file:	signature:(EventHandlerCallRef handler, EventRef event, void *data)
dtd_cpo_save__	runtime/syntax/dtd.vim	/^    let __dtd_cpo_save__ = &cpo$/;"	v
dumdi	src/eval.c	/^static dictitem_T dumdi;$/;"	v	file:
dumkey	src/syntax.c	/^static keyentry_T dumkey;$/;"	v	file:
dummy	src/integration.c	/^static size_t dummy;  \/* to ignore return value of write() *\/$/;"	v	file:
dummy	src/os_unix.c	/^static int dummy;$/;"	v	file:
dummy	src/structs.h	/^    int		dummy;$/;"	m	struct:__anon55	access:public
dummy	src/testdir/test49.vim	/^		    let dummy = 0$/;"	v
dump_prefixes	src/spell.c	/^dump_prefixes(slang, word, pat, dir, dumpflags, flags, startlnum)$/;"	f	file:
dump_prefixes	src/spell.c	/^static linenr_T dump_prefixes __ARGS((slang_T *slang, char_u *word, char_u *pat, int *dir, int round, int flags, linenr_T startlnum));$/;"	p	file:	signature:(slang_T *slang, char_u *word, char_u *pat, int *dir, int round, int flags, linenr_T startlnum)
dump_word	src/spell.c	/^dump_word(slang, word, pat, dir, dumpflags, wordflags, lnum)$/;"	f	file:
dump_word	src/spell.c	/^static void dump_word __ARGS((slang_T *slang, char_u *word, char_u *pat, int *dir, int round, int flags, linenr_T lnum));$/;"	p	file:	signature:(slang_T *slang, char_u *word, char_u *pat, int *dir, int round, int flags, linenr_T lnum)
dumsft	src/spell.c	/^static sftword_T dumsft;$/;"	v	file:
dumuf	src/eval.c	/^static ufunc_T dumuf;$/;"	v	file:
dumwc	src/spell.c	/^static wordcount_T dumwc;$/;"	v	file:
duplex	src/structs.h	/^    int		duplex;$/;"	m	struct:__anon60	access:public
dv_copyID	src/structs.h	/^    int		dv_copyID;	\/* ID used by deepcopy() *\/$/;"	m	struct:dictvar_S	access:public
dv_copydict	src/structs.h	/^    dict_T	*dv_copydict;	\/* copied dict used by deepcopy() *\/$/;"	m	struct:dictvar_S	access:public
dv_hashtab	src/structs.h	/^    hashtab_T	dv_hashtab;	\/* hashtab that refers to the items *\/$/;"	m	struct:dictvar_S	access:public
dv_lock	src/structs.h	/^    char	dv_lock;	\/* zero, VAR_LOCKED, VAR_FIXED *\/$/;"	m	struct:dictvar_S	access:public
dv_refcount	src/structs.h	/^    int		dv_refcount;	\/* reference count *\/$/;"	m	struct:dictvar_S	access:public
dv_used_next	src/structs.h	/^    dict_T	*dv_used_next;	\/* next dict in used dicts list *\/$/;"	m	struct:dictvar_S	access:public
dv_used_prev	src/structs.h	/^    dict_T	*dv_used_prev;	\/* previous dict in used dicts list *\/$/;"	m	struct:dictvar_S	access:public
dwBuildNumber	src/gui_w32.c	/^    DWORD dwBuildNumber;$/;"	m	struct:_DllVersionInfo	file:	access:public
dwFlags	src/gui_w32.c	/^    DWORD dwFlags;$/;"	m	struct:_MONITORINFOstruct	file:	access:public
dwMajorVersion	src/gui_w32.c	/^    DWORD dwMajorVersion;$/;"	m	struct:_DllVersionInfo	file:	access:public
dwMinorVersion	src/gui_w32.c	/^    DWORD dwMinorVersion;$/;"	m	struct:_DllVersionInfo	file:	access:public
dwPlatformID	src/gui_w32.c	/^    DWORD dwPlatformID;$/;"	m	struct:_DllVersionInfo	file:	access:public
dwStyle	src/gui_w32.c	/^    DWORD dwStyle;$/;"	m	struct:tagCOMPOSITIONFORM	file:	access:public
dy_flags	src/option.h	/^EXTERN unsigned	dy_flags;$/;"	v
dying	src/gui.h	/^    int		dying;		    \/* Is vim dying? Then output to terminal *\/$/;"	m	struct:Gui	access:public
dyn_gettext_free	src/GvimExt/gvimext.cpp	/^dyn_gettext_free(void)$/;"	f	file:	signature:(void)
dyn_gettext_load	src/GvimExt/gvimext.cpp	/^dyn_gettext_load(void)$/;"	f	file:	signature:(void)
dyn_imm_load	src/gui_w32.c	/^dyn_imm_load(void)$/;"	f	file:	signature:(void)
dyn_imm_load	src/gui_w32.c	/^static void dyn_imm_load(void);$/;"	p	file:	signature:(void)
dyn_libintl_bind_textdomain_codeset	src/os_win32.c	/^char *(*dyn_libintl_bind_textdomain_codeset)(const char *, const char *)$/;"	v
dyn_libintl_bindtextdomain	src/GvimExt/gvimext.cpp	/^static char *(*dyn_libintl_bindtextdomain)(const char *, const char *)$/;"	v	file:
dyn_libintl_bindtextdomain	src/os_win32.c	/^char *(*dyn_libintl_bindtextdomain)(const char *, const char *)$/;"	v
dyn_libintl_end	src/GvimExt/gvimext.cpp	/^dyn_libintl_end(void)$/;"	f	file:	signature:(void)
dyn_libintl_end	src/GvimExt/gvimext.cpp	/^static void dyn_libintl_end(void);$/;"	p	file:	signature:(void)
dyn_libintl_end	src/os_win32.c	/^dyn_libintl_end()$/;"	f
dyn_libintl_gettext	src/GvimExt/gvimext.cpp	/^static char *(*dyn_libintl_gettext)(const char *) = null_libintl_gettext;$/;"	v	file:
dyn_libintl_gettext	src/os_win32.c	/^char *(*dyn_libintl_gettext)(const char *) = null_libintl_gettext;$/;"	v
dyn_libintl_init	src/GvimExt/gvimext.cpp	/^dyn_libintl_init(char *dir)$/;"	f	file:	signature:(char *dir)
dyn_libintl_init	src/GvimExt/gvimext.cpp	/^static int dyn_libintl_init(char *dir);$/;"	p	file:	signature:(char *dir)
dyn_libintl_init	src/os_win32.c	/^dyn_libintl_init(char *libname)$/;"	f	signature:(char *libname)
dyn_libintl_textdomain	src/GvimExt/gvimext.cpp	/^static char *(*dyn_libintl_textdomain)(const char *) = null_libintl_textdomain;$/;"	v	file:
dyn_libintl_textdomain	src/os_win32.c	/^char *(*dyn_libintl_textdomain)(const char *) = null_libintl_textdomain;$/;"	v
dynamic_mzscheme_end	src/if_mzsch.c	/^dynamic_mzscheme_end(void)$/;"	f	file:	signature:(void)
dynamic_mzscheme_end	src/if_mzsch.c	/^static void dynamic_mzscheme_end(void);$/;"	p	file:	signature:(void)
e	runtime/macros/hanoi/hanoi.vim	/^map e "fy2l$/;"	m
e	runtime/macros/less.vim	/^map e <CR>$/;"	m
eDeletedBufferError	src/if_ruby.c	/^static VALUE eDeletedBufferError;$/;"	v	file:
eDeletedWindowError	src/if_ruby.c	/^static VALUE eDeletedWindowError;$/;"	v	file:
e_abort	src/globals.h	/^EXTERN char_u e_abort[]		INIT(= N_("E470: Command aborted"));$/;"	v
e_affform	src/spell.c	/^static char *e_affform = N_("E761: Format error in affix file FOL, LOW or UPP");$/;"	v	file:
e_affname	src/spell.c	/^static char *e_affname = N_("Affix name too long in %s line %d: %s");$/;"	v	file:
e_affrange	src/spell.c	/^static char *e_affrange = N_("E762: Character in FOL, LOW or UPP is out of range");$/;"	v	file:
e_afftrailing	src/spell.c	/^static char *e_afftrailing = N_("Trailing text in %s line %d: %s");$/;"	v	file:
e_argreq	src/globals.h	/^EXTERN char_u e_argreq[]	INIT(= N_("E471: Argument required"));$/;"	v
e_auchangedbuf	src/fileio.c	/^static char *e_auchangedbuf = N_("E812: Autocommands changed buffer or buffer name");$/;"	v	file:
e_backslash	src/globals.h	/^EXTERN char_u e_backslash[]	INIT(= N_("E10: \\\\ should be followed by \/, ? or &"));$/;"	v
e_bufloaded	src/globals.h	/^EXTERN char_u e_bufloaded[]	INIT(= N_("E139: File is loaded in another buffer"));$/;"	v
e_cmdwin	src/globals.h	/^EXTERN char_u e_cmdwin[]	INIT(= N_("E11: Invalid in command-line window; <CR> executes, CTRL-C quits"));$/;"	v
e_curdir	src/globals.h	/^EXTERN char_u e_curdir[]	INIT(= N_("E12: Command not allowed from exrc\/vimrc in current dir or tag search"));$/;"	v
e_dictkey	src/eval.c	/^static char *e_dictkey = N_("E716: Key not present in Dictionary: %s");$/;"	v	file:
e_dictrange	src/eval.c	/^static char *e_dictrange = N_("E719: Cannot use [:] with a Dictionary");$/;"	v	file:
e_dictreq	src/eval.c	/^static char *e_dictreq = N_("E715: Dictionary required");$/;"	v	file:
e_emptybuf	src/globals.h	/^EXTERN char_u e_emptybuf[]	INIT(= N_("E749: empty buffer"));$/;"	v
e_emptykey	src/eval.c	/^static char *e_emptykey = N_("E713: Cannot use empty key for Dictionary");$/;"	v	file:
e_endfor	src/globals.h	/^EXTERN char_u e_endfor[]	INIT(= N_("E170: Missing :endfor"));$/;"	v
e_endif	src/globals.h	/^EXTERN char_u e_endif[]		INIT(= N_("E171: Missing :endif"));$/;"	v
e_endtry	src/globals.h	/^EXTERN char_u e_endtry[]	INIT(= N_("E600: Missing :endtry"));$/;"	v
e_endwhile	src/globals.h	/^EXTERN char_u e_endwhile[]	INIT(= N_("E170: Missing :endwhile"));$/;"	v
e_exists	src/globals.h	/^EXTERN char_u e_exists[]	INIT(= N_("E13: File exists (add ! to override)"));$/;"	v
e_failed	src/globals.h	/^EXTERN char_u e_failed[]	INIT(= N_("E472: Command failed"));$/;"	v
e_font	src/globals.h	/^EXTERN char_u e_font[]		INIT(= N_("E235: Unknown font: %s"));$/;"	v
e_fontset	src/globals.h	/^EXTERN char_u e_fontset[]	INIT(= N_("E234: Unknown fontset: %s"));$/;"	v
e_fontwidth	src/globals.h	/^EXTERN char_u e_fontwidth[]	INIT(= N_("E236: Font \\"%s\\" is not fixed-width"));$/;"	v
e_for	src/globals.h	/^EXTERN char_u e_for[]		INIT(= N_("E588: :endfor without :for"));$/;"	v
e_format	src/spell.c	/^static char *e_format = N_("E759: Format error in spell file");$/;"	v	file:
e_funcdict	src/eval.c	/^static char *e_funcdict = N_("E717: Dictionary entry already exists");$/;"	v	file:
e_funcexts	src/eval.c	/^static char *e_funcexts = N_("E122: Function %s already exists, add ! to replace it");$/;"	v	file:
e_funcref	src/eval.c	/^static char *e_funcref = N_("E718: Funcref required");$/;"	v	file:
e_guarded	src/globals.h	/^EXTERN char_u e_guarded[]	INIT(= N_("E463: Region is guarded, cannot modify"));$/;"	v
e_hitend	src/edit.c	/^static char e_hitend[] = N_("Hit end of paragraph");$/;"	v	file:
e_illvar	src/eval.c	/^static char *e_illvar = N_("E461: Illegal variable name: %s");$/;"	v	file:
e_intern2	src/globals.h	/^EXTERN char_u e_intern2[]	INIT(= N_("E685: Internal error: %s"));$/;"	v
e_internal	src/globals.h	/^EXTERN char_u e_internal[]	INIT(= N_("E473: Internal error"));$/;"	v
e_interr	src/globals.h	/^EXTERN char_u e_interr[]	INIT(= N_("Interrupted"));$/;"	v
e_invaddr	src/globals.h	/^EXTERN char_u e_invaddr[]	INIT(= N_("E14: Invalid address"));$/;"	v
e_invalpat	src/globals.h	/^EXTERN char_u e_invalpat[]	INIT(= N_("E682: Invalid search pattern or delimiter"));$/;"	v
e_invarg	src/globals.h	/^EXTERN char_u e_invarg[]	INIT(= N_("E474: Invalid argument"));$/;"	v
e_invarg2	src/globals.h	/^EXTERN char_u e_invarg2[]	INIT(= N_("E475: Invalid argument: %s"));$/;"	v
e_invcmd	src/globals.h	/^EXTERN char_u e_invcmd[]	INIT(= N_("E476: Invalid command"));$/;"	v
e_invexpr2	src/globals.h	/^EXTERN char_u e_invexpr2[]	INIT(= N_("E15: Invalid expression: %s"));$/;"	v
e_invexprmsg	src/globals.h	/^EXTERN char_u e_invexprmsg[]	INIT(= N_("E449: Invalid expression received"));$/;"	v
e_invrange	src/globals.h	/^EXTERN char_u e_invrange[]	INIT(= N_("E16: Invalid range"));$/;"	v
e_isadir2	src/globals.h	/^EXTERN char_u e_isadir2[]	INIT(= N_("E17: \\"%s\\" is a directory"));$/;"	v
e_letunexp	src/eval.c	/^static char *e_letunexp	= N_("E18: Unexpected characters in :let");$/;"	v	file:
e_letwrong	src/eval.c	/^static char *e_letwrong = N_("E734: Wrong variable type for %s=");$/;"	v	file:
e_libcall	src/globals.h	/^EXTERN char_u e_libcall[]	INIT(= N_("E364: Library call failed for \\"%s()\\""));$/;"	v
e_listarg	src/eval.c	/^static char *e_listarg = N_("E686: Argument of %s must be a List");$/;"	v	file:
e_listdictarg	src/eval.c	/^static char *e_listdictarg = N_("E712: Argument of %s must be a List or Dictionary");$/;"	v	file:
e_listidx	src/eval.c	/^static char *e_listidx = N_("E684: list index out of range: %ld");$/;"	v	file:
e_listreq	src/eval.c	/^static char *e_listreq = N_("E714: List required");$/;"	v	file:
e_loadfunc	src/globals.h	/^EXTERN char_u e_loadfunc[]	INIT(= N_("E448: Could not load library function %s"));$/;"	v
e_loadlib	src/globals.h	/^EXTERN char_u e_loadlib[]	INIT(= N_("E370: Could not load library %s"));$/;"	v
e_loclist	src/globals.h	/^EXTERN char_u e_loclist[]	INIT(= N_("E776: No location list"));$/;"	v
e_longname	src/globals.h	/^EXTERN char_u e_longname[]	INIT(= N_("E75: Name too long"));$/;"	v
e_markinval	src/globals.h	/^EXTERN char_u e_markinval[]	INIT(= N_("E19: Mark has invalid line number"));$/;"	v
e_marknotset	src/globals.h	/^EXTERN char_u e_marknotset[]	INIT(= N_("E20: Mark not set"));$/;"	v
e_maxmempat	src/globals.h	/^EXTERN char_u e_maxmempat[]	INIT(= N_("E363: pattern uses more memory than 'maxmempattern'"));$/;"	v
e_missbrac	src/eval.c	/^static char *e_missbrac = N_("E111: Missing ']'");$/;"	v	file:
e_modifiable	src/globals.h	/^EXTERN char_u e_modifiable[]	INIT(= N_("E21: Cannot make changes, 'modifiable' is off"));$/;"	v
e_nbreadonly	src/globals.h	/^EXTERN char_u e_nbreadonly[]	INIT(= N_("E744: NetBeans does not allow changes in read-only files"));$/;"	v
e_nesting	src/globals.h	/^EXTERN char_u e_nesting[]	INIT(= N_("E22: Scripts nested too deep"));$/;"	v
e_noabbr	src/globals.h	/^EXTERN char_u e_noabbr[]	INIT(= N_("E24: No such abbreviation"));$/;"	v
e_noalt	src/globals.h	/^EXTERN char_u e_noalt[]		INIT(= N_("E23: No alternate file"));$/;"	v
e_noarabic	src/globals.h	/^EXTERN char_u e_noarabic[]	INIT(= N_("E800: Arabic cannot be used: Not enabled at compile time\\n"));$/;"	v
e_nobang	src/globals.h	/^EXTERN char_u e_nobang[]	INIT(= N_("E477: No ! allowed"));$/;"	v
e_nofarsi	src/globals.h	/^EXTERN char_u e_nofarsi[]	INIT(= N_("E27: Farsi cannot be used: Not enabled at compile time\\n"));$/;"	v
e_nofold	src/fold.c	/^static char *e_nofold = N_("E490: No fold found");$/;"	v	file:
e_nofunc	src/eval.c	/^static char *e_nofunc = N_("E130: Unknown function: %s");$/;"	v	file:
e_nogroup	src/globals.h	/^EXTERN char_u e_nogroup[]	INIT(= N_("E28: No such highlight group name: %s"));$/;"	v
e_nogvim	src/globals.h	/^EXTERN char_u e_nogvim[]	INIT(= N_("E25: GUI cannot be used: Not enabled at compile time"));$/;"	v
e_nohebrew	src/globals.h	/^EXTERN char_u e_nohebrew[]	INIT(= N_("E26: Hebrew cannot be used: Not enabled at compile time\\n"));$/;"	v
e_noident	src/normal.c	/^static char *e_noident = N_("E349: No identifier under cursor");$/;"	v	file:
e_noinstext	src/globals.h	/^EXTERN char_u e_noinstext[]	INIT(= N_("E29: No inserted text yet"));$/;"	v
e_nolastcmd	src/globals.h	/^EXTERN char_u e_nolastcmd[]	INIT(= N_("E30: No previous command line"));$/;"	v
e_nomap	src/globals.h	/^EXTERN char_u e_nomap[]		INIT(= N_("E31: No such mapping"));$/;"	v
e_nomatch	src/globals.h	/^EXTERN char_u e_nomatch[]	INIT(= N_("E479: No match"));$/;"	v
e_nomatch2	src/globals.h	/^EXTERN char_u e_nomatch2[]	INIT(= N_("E480: No match: %s"));$/;"	v
e_nomenu	src/menu.c	/^static char_u e_nomenu[] = N_("E329: No menu \\"%s\\"");$/;"	v	file:
e_noname	src/globals.h	/^EXTERN char_u e_noname[]	INIT(= N_("E32: No file name"));$/;"	v
e_nopresub	src/globals.h	/^EXTERN char_u e_nopresub[]	INIT(= N_("E33: No previous substitute regular expression"));$/;"	v
e_noprev	src/globals.h	/^EXTERN char_u e_noprev[]	INIT(= N_("E34: No previous command"));$/;"	v
e_noprevre	src/globals.h	/^EXTERN char_u e_noprevre[]	INIT(= N_("E35: No previous regular expression"));$/;"	v
e_norange	src/globals.h	/^EXTERN char_u e_norange[]	INIT(= N_("E481: No range allowed"));$/;"	v
e_noroom	src/globals.h	/^EXTERN char_u e_noroom[]	INIT(= N_("E36: Not enough room"));$/;"	v
e_noserver	src/globals.h	/^EXTERN char_u e_noserver[]	INIT(= N_("E247: no registered server named \\"%s\\""));$/;"	v
e_not_open	src/undo.c	/^static char_u e_not_open[] = N_("E828: Cannot open undo file for writing: %s");$/;"	v	file:
e_notcreate	src/globals.h	/^EXTERN char_u e_notcreate[]	INIT(= N_("E482: Can't create file %s"));$/;"	v
e_notmp	src/globals.h	/^EXTERN char_u e_notmp[]		INIT(= N_("E483: Can't get temp file name"));$/;"	v
e_notopen	src/globals.h	/^EXTERN char_u e_notopen[]	INIT(= N_("E484: Can't open file %s"));$/;"	v
e_notread	src/globals.h	/^EXTERN char_u e_notread[]	INIT(= N_("E485: Can't read file %s"));$/;"	v
e_notset	src/globals.h	/^EXTERN char_u e_notset[]	INIT(= N_("E764: Option '%s' is not set"));$/;"	v
e_notsubmenu	src/menu.c	/^static char_u e_notsubmenu[] = N_("E327: Part of menu-item path is not sub-menu");$/;"	v	file:
e_nowrtmsg	src/globals.h	/^EXTERN char_u e_nowrtmsg[]	INIT(= N_("E37: No write since last change (add ! to override)"));$/;"	v
e_null	src/globals.h	/^EXTERN char_u e_null[]		INIT(= N_("E38: Null argument"));$/;"	v
e_number_exp	src/globals.h	/^EXTERN char_u e_number_exp[]	INIT(= N_("E39: Number expected"));$/;"	v
e_opendisp	src/globals.h	/^EXTERN char_u e_opendisp[]	INIT(= N_("E233: cannot open display"));$/;"	v
e_openerrf	src/globals.h	/^EXTERN char_u e_openerrf[]	INIT(= N_("E40: Can't open errorfile %s"));$/;"	v
e_othermode	src/menu.c	/^static char_u e_othermode[] = N_("E328: Menu only exists in another mode");$/;"	v	file:
e_outofmem	src/globals.h	/^EXTERN char_u e_outofmem[]	INIT(= N_("E41: Out of memory!"));$/;"	v
e_patnotf	src/globals.h	/^EXTERN char_u e_patnotf[]	INIT(= N_("Pattern not found"));$/;"	v
e_patnotf2	src/globals.h	/^EXTERN char_u e_patnotf2[]	INIT(= N_("E486: Pattern not found: %s"));$/;"	v
e_positive	src/globals.h	/^EXTERN char_u e_positive[]	INIT(= N_("E487: Argument must be positive"));$/;"	v
e_prev_dir	src/globals.h	/^EXTERN char_u e_prev_dir[]	INIT(= N_("E459: Cannot go back to previous directory"));$/;"	v
e_printf	src/message.c	/^static char *e_printf = N_("E766: Insufficient arguments for printf()");$/;"	v	file:
e_quickfix	src/globals.h	/^EXTERN char_u e_quickfix[]	INIT(= N_("E42: No Errors"));$/;"	v
e_re_corr	src/globals.h	/^EXTERN char_u e_re_corr[]	INIT(= N_("E44: Corrupted regexp program"));$/;"	v
e_re_damg	src/globals.h	/^EXTERN char_u e_re_damg[]	INIT(= N_("E43: Damaged match string"));$/;"	v
e_readerrf	src/globals.h	/^EXTERN char_u e_readerrf[]	INIT(= N_("E47: Error while reading errorfile"));$/;"	v
e_readonly	src/globals.h	/^EXTERN char_u e_readonly[]	INIT(= N_("E45: 'readonly' option is set (add ! to override)"));$/;"	v
e_readonlysbx	src/globals.h	/^EXTERN char_u e_readonlysbx[]	INIT(= N_("E794: Cannot set variable in the sandbox: \\"%s\\""));$/;"	v
e_readonlyvar	src/globals.h	/^EXTERN char_u e_readonlyvar[]	INIT(= N_("E46: Cannot change read-only variable \\"%s\\""));$/;"	v
e_sandbox	src/globals.h	/^EXTERN char_u e_sandbox[]	INIT(= N_("E48: Not allowed in sandbox"));$/;"	v
e_screenmode	src/globals.h	/^EXTERN char_u e_screenmode[]	INIT(= N_("E359: Screen mode setting not supported"));$/;"	v
e_scroll	src/globals.h	/^EXTERN char_u e_scroll[]	INIT(= N_("E49: Invalid scroll size"));$/;"	v
e_secure	src/globals.h	/^EXTERN char_u e_secure[]	INIT(= N_("E523: Not allowed here"));$/;"	v
e_shellempty	src/globals.h	/^EXTERN char_u e_shellempty[]	INIT(= N_("E91: 'shell' option is empty"));$/;"	v
e_signdata	src/globals.h	/^EXTERN char_u e_signdata[]	INIT(= N_("E255: Couldn't read in sign data!"));$/;"	v
e_spell_trunc	src/spell.c	/^static char *e_spell_trunc = N_("E758: Truncated spell file");$/;"	v	file:
e_swapclose	src/globals.h	/^EXTERN char_u e_swapclose[]	INIT(= N_("E72: Close error on swap file"));$/;"	v
e_tagstack	src/globals.h	/^EXTERN char_u e_tagstack[]	INIT(= N_("E73: tag stack empty"));$/;"	v
e_toocompl	src/globals.h	/^EXTERN char_u e_toocompl[]	INIT(= N_("E74: Command too complex"));$/;"	v
e_toomany	src/globals.h	/^EXTERN char_u e_toomany[]	INIT(= N_("E77: Too many file names"));$/;"	v
e_toomanyarg	src/eval.c	/^static char *e_toomanyarg = N_("E118: Too many arguments for function: %s");$/;"	v	file:
e_toomsbra	src/globals.h	/^EXTERN char_u e_toomsbra[]	INIT(= N_("E76: Too many ["));$/;"	v
e_trailing	src/globals.h	/^EXTERN char_u e_trailing[]	INIT(= N_("E488: Trailing characters"));$/;"	v
e_umark	src/globals.h	/^EXTERN char_u e_umark[]		INIT(= N_("E78: Unknown mark"));$/;"	v
e_undefvar	src/eval.c	/^static char *e_undefvar = N_("E121: Undefined variable: %s");$/;"	v	file:
e_usingsid	src/globals.h	/^EXTERN char_u e_usingsid[]	INIT(= N_("E81: Using <SID> not in a script context"));$/;"	v
e_while	src/globals.h	/^EXTERN char_u e_while[]		INIT(= N_("E588: :endwhile without :while"));$/;"	v
e_wildexpand	src/globals.h	/^EXTERN char_u e_wildexpand[]	INIT(= N_("E79: Cannot expand wildcards"));$/;"	v
e_winheight	src/globals.h	/^EXTERN char_u e_winheight[]	INIT(= N_("E591: 'winheight' cannot be smaller than 'winminheight'"));$/;"	v
e_winwidth	src/globals.h	/^EXTERN char_u e_winwidth[]	INIT(= N_("E592: 'winwidth' cannot be smaller than 'winminwidth'"));$/;"	v
e_write	src/globals.h	/^EXTERN char_u e_write[]		INIT(= N_("E80: Error while writing"));$/;"	v
e_xim	src/mbyte.c	/^static char e_xim[] = N_("E285: Failed to create input context");$/;"	v	file:
e_zerocount	src/globals.h	/^EXTERN char_u e_zerocount[]	INIT(= N_("Zero count"));$/;"	v
eap_arg_len	src/if_cscope.c	/^static int	    eap_arg_len;    \/* length of eap->arg, set in$/;"	v	file:
early_arg_scan	src/main.c	/^early_arg_scan(parmp)$/;"	f	file:
early_arg_scan	src/main.c	/^static void early_arg_scan __ARGS((mparm_T *parmp));$/;"	p	file:	signature:(mparm_T *parmp)
ebcdic2ascii	src/charset.c	/^ebcdic2ascii(buffer, len)$/;"	f
ebcdic2ascii_tab	src/charset.c	/^static char_u ebcdic2ascii_tab[256] =$/;"	v	file:
echeck_abbr	src/edit.c	/^echeck_abbr(c)$/;"	f	file:
echeck_abbr	src/edit.c	/^static int  echeck_abbr __ARGS((int));$/;"	p	file:	signature:(int)
echo_attr	src/eval.c	/^static int echo_attr = 0;   \/* attributes used for ":echo" *\/$/;"	v	file:
echo_string	src/eval.c	/^echo_string(tv, tofree, numbuf, copyID)$/;"	f	file:
echo_string	src/eval.c	/^static char_u *echo_string __ARGS((typval_T *tv, char_u **tofree, char_u *numbuf, int copyID));$/;"	p	file:	signature:(typval_T *tv, char_u **tofree, char_u *numbuf, int copyID)
echo_wid_arg	src/globals.h	/^EXTERN int	echo_wid_arg INIT(= FALSE);	\/* --echo-wid argument *\/$/;"	v
echogets	runtime/tools/ccfilter.c	/^char *echogets(char *s, int echo) {$/;"	f	signature:(char *s, int echo)
edit	src/edit.c	/^edit(cmdchar, startln, count)$/;"	f
edit_buffers	src/main.c	/^edit_buffers(parmp)$/;"	f	file:
edit_buffers	src/main.c	/^static void edit_buffers __ARGS((mparm_T *parmp));$/;"	p	file:	signature:(mparm_T *parmp)
edit_putchar	src/edit.c	/^edit_putchar(c, highlight)$/;"	f
edit_submode	src/globals.h	/^EXTERN char_u	*edit_submode INIT(= NULL); \/* msg for CTRL-X submode *\/$/;"	v
edit_submode_extra	src/globals.h	/^EXTERN char_u	*edit_submode_extra INIT(= NULL);\/* appended to edit_submode *\/$/;"	v
edit_submode_highl	src/globals.h	/^EXTERN hlf_T	edit_submode_highl;	\/* highl. method for extra info *\/$/;"	v
edit_submode_pre	src/globals.h	/^EXTERN char_u	*edit_submode_pre INIT(= NULL); \/* prepended to edit_submode *\/$/;"	v
edit_type	src/main.c	/^    int		edit_type;		\/* type of editing to do *\/$/;"	m	struct:__anon9	file:	access:public
edit_unputchar	src/edit.c	/^edit_unputchar()$/;"	f
editing_arg_idx	src/ex_cmds2.c	/^editing_arg_idx(win)$/;"	f	file:
editing_arg_idx	src/ex_cmds2.c	/^static int	editing_arg_idx __ARGS((win_T *win));$/;"	p	file:	signature:(win_T *win)
efm_S	src/quickfix.c	/^struct efm_S$/;"	s	file:
efm_S::addr	src/quickfix.c	/^    char_u	    addr[FMT_PATTERNS]; \/* indices of used % patterns *\/$/;"	m	struct:efm_S	file:	access:public
efm_S::conthere	src/quickfix.c	/^    int		    conthere;	\/* %> used *\/$/;"	m	struct:efm_S	file:	access:public
efm_S::flags	src/quickfix.c	/^    char_u	    flags;	\/* additional flags given in prefix *\/$/;"	m	struct:efm_S	file:	access:public
efm_S::next	src/quickfix.c	/^    efm_T	    *next;	\/* pointer to next (NULL if last) *\/$/;"	m	struct:efm_S	file:	access:public
efm_S::prefix	src/quickfix.c	/^    char_u	    prefix;	\/* prefix of this format line: *\/$/;"	m	struct:efm_S	file:	access:public
efm_S::prog	src/quickfix.c	/^    regprog_T	    *prog;	\/* pre-formatted part of 'errorformat' *\/$/;"	m	struct:efm_S	file:	access:public
efm_T	src/quickfix.c	/^typedef struct efm_S efm_T;$/;"	t	typeref:struct:efm_S	file:
empty	src/gui_at_sb.h	/^typedef struct {int empty;} ScrollbarClassPart;$/;"	m	struct:__anon32	access:public
empty	src/structs.h	/^    int		empty;		\/* op_start and op_end the same (only used by$/;"	m	struct:oparg_S	access:public
empty_option	src/globals.h	/^EXTERN char_u	*empty_option INIT(= (char_u *)"");$/;"	v
empty_prop	src/if_xcmdsrv.c	/^static char_u	*empty_prop = (char_u *)"";	\/* empty GetRegProp() result *\/$/;"	v	file:
empty_title	src/gui_photon.c	/^static char	*empty_title = "    ";$/;"	v	file:
emsg	src/message.c	/^emsg(s)$/;"	f
emsg2	src/message.c	/^emsg2(s, a1)$/;"	f
emsg3	src/misc2.c	/^emsg3(s, a1, a2)$/;"	f
emsg_funcname	src/eval.c	/^emsg_funcname(ermsg, name)$/;"	f	file:
emsg_funcname	src/eval.c	/^static void emsg_funcname __ARGS((char *ermsg, char_u *name));$/;"	p	file:	signature:(char *ermsg, char_u *name)
emsg_invreg	src/message.c	/^emsg_invreg(name)$/;"	f
emsg_not_now	src/message.c	/^emsg_not_now()$/;"	f
emsg_off	src/globals.h	/^EXTERN int	emsg_off INIT(= 0);	    \/* don't display errors for now,$/;"	v
emsg_on_display	src/globals.h	/^EXTERN int	emsg_on_display INIT(= FALSE);	\/* there is an error message *\/$/;"	v
emsg_severe	src/globals.h	/^EXTERN int	emsg_severe INIT(= FALSE);   \/* use message of next of several$/;"	v
emsg_silent	src/globals.h	/^EXTERN int	emsg_silent INIT(= 0);	\/* don't print error messages *\/$/;"	v
emsg_skip	src/globals.h	/^EXTERN int	emsg_skip INIT(= 0);	    \/* don't display errors for$/;"	v
emsgn	src/misc2.c	/^emsgn(s, n)$/;"	f
en_dname	src/structs.h	/^    char_u	*en_dname;	    \/* "dname" untranslated, NULL when "dname"$/;"	m	struct:VimMenu	access:public
en_name	src/structs.h	/^    char_u	*en_name;	    \/* "name" untranslated, NULL when "name"$/;"	m	struct:VimMenu	access:public
enabled	src/structs.h	/^    int		enabled;	    \/* for which modes the menu is enabled *\/$/;"	m	struct:VimMenu	access:public
enc2macroman	src/os_mac_conv.c	/^enc2macroman(from, fromlen, to, tolenp, maxtolen, rest, restlenp)$/;"	f
enc_alias_search	src/mbyte.c	/^enc_alias_search(name)$/;"	f	file:
enc_alias_search	src/mbyte.c	/^static int enc_alias_search __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
enc_alias_table	src/mbyte.c	/^enc_alias_table[] =$/;"	v	typeref:struct:__anon135	file:
enc_canon_props	src/mbyte.c	/^enc_canon_props(name)$/;"	f
enc_canon_search	src/mbyte.c	/^enc_canon_search(name)$/;"	f	file:
enc_canon_search	src/mbyte.c	/^static int enc_canon_search __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
enc_canon_table	src/mbyte.c	/^enc_canon_table[] =$/;"	v	typeref:struct:__anon134	file:
enc_canonize	src/mbyte.c	/^enc_canonize(enc)$/;"	f
enc_codepage	src/globals.h	/^EXTERN int	enc_codepage INIT(= -1);$/;"	v
enc_dbcs	src/globals.h	/^EXTERN int	enc_dbcs INIT(= 0);		\/* One of DBCS_xxx values if$/;"	v
enc_latin1like	src/globals.h	/^EXTERN int	enc_latin1like INIT(= TRUE);	\/* 'encoding' is latin1 comp. *\/$/;"	v
enc_latin9	src/globals.h	/^EXTERN int	enc_latin9 INIT(= FALSE);	\/* 'encoding' is latin9 *\/$/;"	v
enc_locale	src/mbyte.c	/^enc_locale()$/;"	f
enc_skip	src/mbyte.c	/^enc_skip(p)$/;"	f
enc_to_utf16	src/os_mswin.c	/^enc_to_utf16(char_u *str, int *lenp)$/;"	f	signature:(char_u *str, int *lenp)
enc_unicode	src/globals.h	/^EXTERN int	enc_unicode INIT(= 0);	\/* 2: UCS-2 or UTF-16, 4: UCS-4 *\/$/;"	v
enc_utf8	src/globals.h	/^EXTERN int	enc_utf8 INIT(= FALSE);		\/* UTF-8 encoded Unicode *\/$/;"	v
encname2codepage	src/mbyte.c	/^encname2codepage(name)$/;"	f
encoding	runtime/keymap/hebrew.vim	/^	let encoding = 'cp1255'$/;"	v
encoding	runtime/keymap/hebrew.vim	/^	let encoding = 'iso-8859-8'$/;"	v
encoding	runtime/keymap/hebrew.vim	/^let encoding = &enc$/;"	v
encoding	runtime/keymap/hebrewp.vim	/^	let encoding = 'cp1255'$/;"	v
encoding	runtime/keymap/hebrewp.vim	/^	let encoding = 'iso-8859-8'$/;"	v
encoding	runtime/keymap/hebrewp.vim	/^let encoding = &enc$/;"	v
encoding	runtime/keymap/persian.vim	/^	let encoding = 'utf-8'$/;"	v
encoding	runtime/keymap/persian.vim	/^let encoding = &enc$/;"	v
encoding	runtime/keymap/polish-slash.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	runtime/keymap/polish-slash.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	runtime/keymap/polish-slash.vim	/^let encoding = &enc$/;"	v
encoding	runtime/keymap/serbian.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	runtime/keymap/serbian.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	runtime/keymap/serbian.vim	/^let encoding = &enc$/;"	v
encoding	runtime/keymap/slovak.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	runtime/keymap/slovak.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	runtime/keymap/slovak.vim	/^let encoding = &enc$/;"	v
encoding	src/hardcopy.c	/^    char	*encoding;$/;"	m	struct:prt_ps_encoding_S	file:	access:public
encoding_callback	src/gui_xmdlg.c	/^encoding_callback(Widget w,$/;"	f	file:	signature:(Widget w, SharedFontSelData *data, XtPointer dummy UNUSED)
encoding_callback	src/gui_xmdlg.c	/^static void encoding_callback(Widget w, SharedFontSelData *data,$/;"	p	file:	signature:(Widget w, SharedFontSelData *data, XtPointer dummy)
encoding_menu	src/gui_xmdlg.c	/^    Widget	encoding_menu;$/;"	m	struct:_SharedFontSelData	file:	access:public
encoding_part	src/gui_xmdlg.c	/^encoding_part(char *font, char *buf)$/;"	f	file:	signature:(char *font, char *buf)
encoding_pulldown	src/gui_xmdlg.c	/^    Widget	encoding_pulldown;$/;"	m	struct:_SharedFontSelData	file:	access:public
encodings	src/hardcopy.c	/^    struct prt_ps_encoding_S	*encodings;$/;"	m	struct:prt_ps_mbfont_S	typeref:struct:prt_ps_mbfont_S::prt_ps_encoding_S	file:	access:public
end	src/fold.c	/^    int		end;		\/* level of fold that is forced to end below$/;"	m	struct:__anon98	file:	access:public
end	src/if_py_both.h	/^    PyInt end;$/;"	m	struct:__anon13	access:public
end	src/search.c	/^    int		end;		\/* search set cursor at end *\/$/;"	m	struct:soffset	file:	access:public
end	src/structs.h	/^    pos_T	end;		\/* end of the operator *\/$/;"	m	struct:oparg_S	access:public
end	src/vim.h	/^    pos_T	end;		\/* End of selected area *\/$/;"	m	struct:VimClipboard	access:public
end	vimtutor.bat	/^:end$/;"	l
endRange	src/gui_mac.c	/^    long endRange; \/\/ end of selection range (if line < 0)$/;"	m	struct:SelectionRange	file:	access:public
endSelection	src/gui_at_fs.c	/^    int		endSelection;$/;"	m	struct:__anon114	file:	access:public
end_adjusted	src/structs.h	/^    int		end_adjusted;	\/* backuped b_op_end one char (only used by$/;"	m	struct:oparg_S	access:public
end_char_vcols	src/ops.c	/^    colnr_T	end_char_vcols;	\/* number of vcols of post-block char *\/$/;"	m	struct:block_def	file:	access:public
end_col_nr	src/ex_cmds.c	/^    long	end_col_nr;		\/* ending column number *\/$/;"	m	struct:__anon66	file:	access:public
end_comment_pending	src/globals.h	/^EXTERN int     end_comment_pending INIT(= NUL);$/;"	v
end_dynamic_lua	src/if_lua.c	/^end_dynamic_lua(void)$/;"	f	file:	signature:(void)
end_dynamic_python	src/if_python.c	/^end_dynamic_python(void)$/;"	f	file:	signature:(void)
end_dynamic_python3	src/if_python3.c	/^end_dynamic_python3(void)$/;"	f	file:	signature:(void)
end_dynamic_ruby	src/if_ruby.c	/^end_dynamic_ruby()$/;"	f	file:
end_search_hl	src/screen.c	/^end_search_hl()$/;"	f	file:
end_search_hl	src/screen.c	/^static void end_search_hl __ARGS((void));$/;"	p	file:	signature:(void)
end_vcol	src/ops.c	/^    colnr_T	end_vcol;	\/* start col of 1st char wholly after block *\/$/;"	m	struct:block_def	file:	access:public
end_vcol	src/structs.h	/^    colnr_T	end_vcol;	\/* end col for block mode operator *\/$/;"	m	struct:oparg_S	access:public
end_visual_mode	src/normal.c	/^end_visual_mode()$/;"	f
end_word	src/search.c	/^end_word(count, bigword, stop, empty)$/;"	f
endcol	src/structs.h	/^    colnr_T	endcol;	 \/* in win_line() points to char where HL ends *\/$/;"	m	struct:__anon56	access:public
endp	src/regexp.h	/^    char_u		*endp[NSUBEXP];$/;"	m	struct:__anon72	access:public
endpos	src/regexp.h	/^    lpos_T		endpos[NSUBEXP];$/;"	m	struct:__anon73	access:public
ends_excmd	src/ex_docmd.c	/^ends_excmd(c)$/;"	f
ends_in_white	src/ops.c	/^ends_in_white(lnum)$/;"	f	file:
ends_in_white	src/ops.c	/^static int	ends_in_white __ARGS((linenr_T lnum));$/;"	p	file:	signature:(linenr_T lnum)
endspaces	src/ops.c	/^    int		endspaces;	\/* 'extra' cols after last char *\/$/;"	m	struct:block_def	file:	access:public
enhancedbutton	src/gui_xmebwp.h	/^    XmEnhancedButtonPart enhancedbutton;$/;"	m	struct:_XmEnhancedButtonRec	access:public
enhancedbutton_class	src/gui_xmebwp.h	/^    XmEnhancedButtonClassPart enhancedbutton_class;$/;"	m	struct:__anon92	access:public
ensure_ruby_initialized	src/if_ruby.c	/^static int ensure_ruby_initialized(void)$/;"	f	file:	signature:(void)
ensure_ruby_initialized	src/if_ruby.c	/^static int ensure_ruby_initialized(void);$/;"	p	file:	signature:(void)
enter_buffer	src/buffer.c	/^enter_buffer(buf)$/;"	f
enter_cleanup	src/ex_eval.c	/^enter_cleanup(csp)$/;"	f
enter_notify_event	src/gui_gtk_x11.c	/^enter_notify_event(GtkWidget *widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GdkEventCrossing *event UNUSED, gpointer data UNUSED)
enter_tabpage	src/window.c	/^enter_tabpage(tp, old_curbuf)$/;"	f	file:
enter_tabpage	src/window.c	/^static void enter_tabpage __ARGS((tabpage_T *tp, buf_T *old_curbuf));$/;"	p	file:	signature:(tabpage_T *tp, buf_T *old_curbuf)
entries	src/gui_at_fs.c	/^    SFEntry	*entries;$/;"	m	struct:__anon114	file:	access:public
entry_activate_callback	src/gui_motif.c	/^entry_activate_callback(w, client_data, call_data)$/;"	f	file:
entry_activate_callback	src/gui_motif.c	/^static void entry_activate_callback __ARGS((Widget w, XtPointer client_data, XtPointer call_data));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XtPointer call_data)
entry_activate_cb	src/gui_gtk.c	/^entry_activate_cb(GtkWidget *widget UNUSED, gpointer data)$/;"	f	file:	signature:(GtkWidget *widget UNUSED, gpointer data)
entry_activate_cb	src/gui_gtk.c	/^static void entry_activate_cb(GtkWidget *widget, gpointer data);$/;"	p	file:	signature:(GtkWidget *widget, gpointer data)
entry_changed_cb	src/gui_gtk.c	/^entry_changed_cb(GtkWidget * entry, GtkWidget * dialog)$/;"	f	file:	signature:(GtkWidget * entry, GtkWidget * dialog)
entry_changed_cb	src/gui_gtk.c	/^static void entry_changed_cb(GtkWidget *entry, GtkWidget *dialog);$/;"	p	file:	signature:(GtkWidget *entry, GtkWidget *dialog)
enumWindowsGetNames	src/os_mswin.c	/^enumWindowsGetNames(HWND hwnd, LPARAM lparam)$/;"	f	file:	signature:(HWND hwnd, LPARAM lparam)
enumWindowsGetServer	src/os_mswin.c	/^enumWindowsGetServer(HWND hwnd, LPARAM lparam)$/;"	f	file:	signature:(HWND hwnd, LPARAM lparam)
environment	src/if_mzsch.c	/^static Scheme_Env    *environment = NULL;$/;"	v	file:
envsize	src/misc2.c	/^static int  envsize = -1;	\/* current size of environment *\/$/;"	v	file:
equ	src/os_vms.c	/^    ITEM	equ;$/;"	m	struct:__anon79	file:	access:public
equalpos	src/macros.h	32;"	d
equalpos	src/macros.h	39;"	d
errcaught	src/testdir/test49.vim	/^		let errcaught = 1$/;"	v
errcaught	src/testdir/test49.vim	/^	    let errcaught = 0$/;"	v
errcaught	src/testdir/test49.vim	/^	let errcaught = 0$/;"	v
errcaught	src/testdir/test49.vim	/^	let errcaught = 1$/;"	v
errmsg	src/ex_cmds.h	/^    char_u	*errmsg;	\/* returned error message *\/$/;"	m	struct:exarg	access:public
error	src/ex_cmds2.c	/^    int		error;		\/* TRUE if LF found after CR-LF *\/$/;"	m	struct:source_cookie	file:	access:public
error	src/if_py_both.h	/^    long error;$/;"	m	struct:__anon10	access:public
error	src/po/check.vim	/^      let error = 1$/;"	v
error	src/po/check.vim	/^  let error = 1$/;"	v
error	src/po/check.vim	/^let error = 0$/;"	v
error	src/testdir/test49.vim	/^		    let error = 1$/;"	v
error	src/testdir/test49.vim	/^		let error = 0$/;"	v
error	src/testdir/test49.vim	/^		let error = 1$/;"	v
error	src/testdir/test49.vim	/^	    let error = 1$/;"	v
error	src/testdir/test49.vim	/^	let error = 0$/;"	v
error	src/testdir/test49.vim	/^	let error = 1$/;"	v
errorHandler	src/nbdebug.c	/^errorHandler($/;"	f	file:	signature:( Display *dpy, XErrorEvent *err)
errorHandler	src/nbdebug.c	/^static int	 errorHandler(Display *, XErrorEvent *);$/;"	p	file:	signature:(Display *, XErrorEvent *)
errorHandler	src/wsdebug.c	/^errorHandler($/;"	f	file:	signature:( Display *dpy, XErrorEvent *err)
errorHandler	src/wsdebug.c	/^static int	 errorHandler(Display *, XErrorEvent *);$/;"	p	file:	signature:(Display *, XErrorEvent *)
error_ga	src/globals.h	/^EXTERN garray_T error_ga$/;"	v
error_print	src/if_ruby.c	/^static void error_print(int state)$/;"	f	file:	signature:(int state)
error_print	src/if_ruby.c	/^static void error_print(int);$/;"	p	file:	signature:(int)
escape	runtime/autoload/gzip.vim	/^fun s:escape(name)$/;"	f
escape_chars	src/globals.h	/^EXTERN char_u	*escape_chars INIT(= (char_u *)" \\t\\\\\\"|");$/;"	v
escape_fname	src/ex_getln.c	/^escape_fname(pp)$/;"	f	file:
escape_fname	src/ex_getln.c	/^static void	escape_fname __ARGS((char_u **pp));$/;"	p	file:	signature:(char_u **pp)
esctext	runtime/doc/vim2html.pl	/^sub esctext$/;"	s
escurl	runtime/doc/vim2html.pl	/^sub escurl$/;"	s
eslist_T	src/structs.h	/^typedef struct eslist_elem eslist_T;$/;"	t	typeref:struct:eslist_elem
eslist_elem	src/structs.h	/^struct eslist_elem$/;"	s
eslist_elem::next	src/structs.h	/^    eslist_T	*next;			\/* next element on the list *\/$/;"	m	struct:eslist_elem	access:public
eslist_elem::saved_emsg_silent	src/structs.h	/^    int		saved_emsg_silent;	\/* saved value of "emsg_silent" *\/$/;"	m	struct:eslist_elem	access:public
etoa64	src/xxd/xxd.c	/^static unsigned char etoa64[] =$/;"	v	file:
eval0	src/eval.c	/^eval0(arg, rettv, nextcmd, evaluate)$/;"	f	file:
eval0	src/eval.c	/^static int eval0 __ARGS((char_u *arg,  typval_T *rettv, char_u **nextcmd, int evaluate));$/;"	p	file:	signature:(char_u *arg, typval_T *rettv, char_u **nextcmd, int evaluate)
eval1	src/eval.c	/^eval1(arg, rettv, evaluate)$/;"	f	file:
eval1	src/eval.c	/^static int eval1 __ARGS((char_u **arg, typval_T *rettv, int evaluate));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate)
eval2	src/eval.c	/^eval2(arg, rettv, evaluate)$/;"	f	file:
eval2	src/eval.c	/^static int eval2 __ARGS((char_u **arg, typval_T *rettv, int evaluate));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate)
eval3	src/eval.c	/^eval3(arg, rettv, evaluate)$/;"	f	file:
eval3	src/eval.c	/^static int eval3 __ARGS((char_u **arg, typval_T *rettv, int evaluate));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate)
eval4	src/eval.c	/^eval4(arg, rettv, evaluate)$/;"	f	file:
eval4	src/eval.c	/^static int eval4 __ARGS((char_u **arg, typval_T *rettv, int evaluate));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate)
eval5	src/eval.c	/^eval5(arg, rettv, evaluate)$/;"	f	file:
eval5	src/eval.c	/^static int eval5 __ARGS((char_u **arg, typval_T *rettv, int evaluate));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate)
eval6	src/eval.c	/^eval6(arg, rettv, evaluate, want_string)$/;"	f	file:
eval6	src/eval.c	/^static int eval6 __ARGS((char_u **arg, typval_T *rettv, int evaluate, int want_string));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate, int want_string)
eval7	src/eval.c	/^eval7(arg, rettv, evaluate, want_string)$/;"	f	file:
eval7	src/eval.c	/^static int eval7 __ARGS((char_u **arg, typval_T *rettv, int evaluate, int want_string));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate, int want_string)
eval_charconvert	src/eval.c	/^eval_charconvert(enc_from, enc_to, fname_from, fname_to)$/;"	f
eval_clear	src/eval.c	/^eval_clear()$/;"	f
eval_client_expr_to_string	src/main.c	/^eval_client_expr_to_string(expr)$/;"	f
eval_diff	src/eval.c	/^eval_diff(origfile, newfile, outfile)$/;"	f
eval_enc_string_protect	src/if_ruby.c	/^eval_enc_string_protect(const char *str, int *state)$/;"	f	file:	signature:(const char *str, int *state)
eval_expr	src/eval.c	/^eval_expr(arg, nextcmd)$/;"	f
eval_fname_script	src/eval.c	/^eval_fname_script(p)$/;"	f	file:
eval_fname_script	src/eval.c	/^static int eval_fname_script __ARGS((char_u *p));$/;"	p	file:	signature:(char_u *p)
eval_fname_sid	src/eval.c	/^eval_fname_sid(p)$/;"	f	file:
eval_fname_sid	src/eval.c	/^static int eval_fname_sid __ARGS((char_u *p));$/;"	p	file:	signature:(char_u *p)
eval_foldexpr	src/eval.c	/^eval_foldexpr(arg, cp)$/;"	f
eval_for_line	src/eval.c	/^eval_for_line(arg, errp, nextcmdp, skip)$/;"	f
eval_includeexpr	src/window.c	/^eval_includeexpr(ptr, len)$/;"	f	file:
eval_includeexpr	src/window.c	/^static char_u *eval_includeexpr __ARGS((char_u *ptr, int len));$/;"	p	file:	signature:(char_u *ptr, int len)
eval_index	src/eval.c	/^eval_index(arg, rettv, evaluate, verbose)$/;"	f	file:
eval_index	src/eval.c	/^static int eval_index __ARGS((char_u **arg, typval_T *rettv, int evaluate, int verbose));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate, int verbose)
eval_init	src/eval.c	/^eval_init()$/;"	f
eval_input	src/if_python.c	89;"	d	file:
eval_isnamec	src/eval.c	/^eval_isnamec(c)$/;"	f	file:
eval_isnamec	src/eval.c	/^static int eval_isnamec __ARGS((int c));$/;"	p	file:	signature:(int c)
eval_isnamec1	src/eval.c	/^eval_isnamec1(c)$/;"	f	file:
eval_isnamec1	src/eval.c	/^static int eval_isnamec1 __ARGS((int c));$/;"	p	file:	signature:(int c)
eval_map_expr	src/getchar.c	/^eval_map_expr(str, c)$/;"	f	file:
eval_map_expr	src/getchar.c	/^static char_u	*eval_map_expr __ARGS((char_u *str, int c));$/;"	p	file:	signature:(char_u *str, int c)
eval_patch	src/eval.c	/^eval_patch(origfile, difffile, outfile)$/;"	f
eval_printexpr	src/eval.c	/^eval_printexpr(fname, args)$/;"	f
eval_soundfold	src/spell.c	/^eval_soundfold(word)$/;"	f
eval_spell_expr	src/eval.c	/^eval_spell_expr(badword, expr)$/;"	f
eval_to_bool	src/eval.c	/^eval_to_bool(arg, error, nextcmd, skip)$/;"	f
eval_to_number	src/eval.c	/^eval_to_number(expr)$/;"	f
eval_to_string	src/eval.c	/^eval_to_string(arg, nextcmd, convert)$/;"	f
eval_to_string_safe	src/eval.c	/^eval_to_string_safe(arg, nextcmd, use_sandbox)$/;"	f
eval_to_string_skip	src/eval.c	/^eval_to_string_skip(arg, nextcmd, skip)$/;"	f
eval_vars	src/ex_docmd.c	/^eval_vars(src, srcstart, usedlen, lnump, errormsg, escaped)$/;"	f
eval_with_exn_handling	src/if_mzsch.c	/^eval_with_exn_handling(void *data, Scheme_Closed_Prim *what, Scheme_Object **ret)$/;"	f	file:	signature:(void *data, Scheme_Closed_Prim *what, Scheme_Object **ret)
eval_with_exn_handling	src/if_mzsch.c	/^static int eval_with_exn_handling(void *, Scheme_Closed_Prim *,$/;"	p	file:	signature:(void *, Scheme_Closed_Prim *, Scheme_Object **ret)
event	src/fileio.c	/^    event_T	event;		\/* current event *\/$/;"	m	struct:AutoPatCmd	file:	access:public
event	src/fileio.c	/^    event_T	event;	\/* event number *\/$/;"	m	struct:event_name	file:	access:public
event_T	src/vim.h	/^typedef enum auto_event event_T;$/;"	t	typeref:enum:auto_event
event_buffer	src/gui.h	/^    PhEvent_t	*event_buffer;$/;"	m	struct:Gui	access:public
event_ignored	src/fileio.c	/^event_ignored(event)$/;"	f	file:
event_ignored	src/fileio.c	/^static int event_ignored __ARGS((event_T event));$/;"	p	file:	signature:(event_T event)
event_name	src/fileio.c	/^static struct event_name$/;"	s	file:
event_name2nr	src/fileio.c	/^event_name2nr(start, end)$/;"	f	file:
event_name2nr	src/fileio.c	/^static event_T event_name2nr __ARGS((char_u *start, char_u **end));$/;"	p	file:	signature:(char_u *start, char_u **end)
event_name::event	src/fileio.c	/^    event_T	event;	\/* event number *\/$/;"	m	struct:event_name	file:	access:public
event_name::name	src/fileio.c	/^    char	*name;	\/* event name *\/$/;"	m	struct:event_name	file:	access:public
event_names	src/fileio.c	/^} event_names[] =$/;"	v	typeref:struct:event_name	file:
event_nr2name	src/fileio.c	/^event_nr2name(event)$/;"	f	file:
event_nr2name	src/fileio.c	/^static char_u *event_nr2name __ARGS((event_T event));$/;"	p	file:	signature:(event_T event)
evim_mode	src/main.c	/^    int		evim_mode;		\/* started as "evim" *\/$/;"	m	struct:__anon9	file:	access:public
ex_X	src/ex_docmd.c	/^ex_X(eap)$/;"	f	file:
ex_X	src/ex_docmd.c	/^static void	ex_X __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_X	src/ex_docmd.c	442;"	d	file:
ex_abbreviate	src/ex_docmd.c	/^ex_abbreviate(eap)$/;"	f	file:
ex_abbreviate	src/ex_docmd.c	/^static void	ex_abbreviate __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_abclear	src/ex_docmd.c	/^ex_abclear(eap)$/;"	f	file:
ex_abclear	src/ex_docmd.c	/^static void	ex_abclear __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_align	src/ex_cmds.c	/^ex_align(eap)$/;"	f
ex_align	src/ex_docmd.c	341;"	d	file:
ex_all	src/ex_docmd.c	/^ex_all(eap)$/;"	f
ex_all	src/ex_docmd.c	166;"	d	file:
ex_append	src/ex_cmds.c	/^ex_append(eap)$/;"	f
ex_argadd	src/ex_cmds2.c	/^ex_argadd(eap)$/;"	f
ex_argadd	src/ex_docmd.c	199;"	d	file:
ex_argdelete	src/ex_cmds2.c	/^ex_argdelete(eap)$/;"	f
ex_argdelete	src/ex_docmd.c	200;"	d	file:
ex_argedit	src/ex_cmds2.c	/^ex_argedit(eap)$/;"	f
ex_argedit	src/ex_docmd.c	198;"	d	file:
ex_args	src/ex_cmds2.c	/^ex_args(eap)$/;"	f
ex_argument	src/ex_cmds2.c	/^ex_argument(eap)$/;"	f
ex_at	src/ex_docmd.c	/^ex_at(eap)$/;"	f	file:
ex_at	src/ex_docmd.c	/^static void	ex_at __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_autocmd	src/ex_docmd.c	/^ex_autocmd(eap)$/;"	f	file:
ex_autocmd	src/ex_docmd.c	/^static void	ex_autocmd __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_autocmd	src/ex_docmd.c	80;"	d	file:
ex_bang	src/ex_docmd.c	/^ex_bang(eap)$/;"	f	file:
ex_bang	src/ex_docmd.c	/^static void	ex_bang __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_behave	src/ex_docmd.c	/^ex_behave(eap)$/;"	f	file:
ex_behave	src/ex_docmd.c	/^static void	ex_behave __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_blast	src/ex_docmd.c	/^ex_blast(eap)$/;"	f	file:
ex_blast	src/ex_docmd.c	/^static void	ex_blast __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_blast	src/ex_docmd.c	99;"	d	file:
ex_bmodified	src/ex_docmd.c	/^ex_bmodified(eap)$/;"	f	file:
ex_bmodified	src/ex_docmd.c	/^static void	ex_bmodified __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_bmodified	src/ex_docmd.c	95;"	d	file:
ex_bnext	src/ex_docmd.c	/^ex_bnext(eap)$/;"	f	file:
ex_bnext	src/ex_docmd.c	/^static void	ex_bnext __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_bnext	src/ex_docmd.c	96;"	d	file:
ex_bprevious	src/ex_docmd.c	/^ex_bprevious(eap)$/;"	f	file:
ex_bprevious	src/ex_docmd.c	/^static void	ex_bprevious __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_bprevious	src/ex_docmd.c	97;"	d	file:
ex_break	src/ex_docmd.c	375;"	d	file:
ex_break	src/ex_eval.c	/^ex_break(eap)$/;"	f
ex_breakadd	src/ex_cmds2.c	/^ex_breakadd(eap)$/;"	f
ex_breakadd	src/ex_docmd.c	471;"	d	file:
ex_breakdel	src/ex_cmds2.c	/^ex_breakdel(eap)$/;"	f
ex_breakdel	src/ex_docmd.c	473;"	d	file:
ex_breaklist	src/ex_cmds2.c	/^ex_breaklist(eap)$/;"	f
ex_breaklist	src/ex_docmd.c	474;"	d	file:
ex_brewind	src/ex_docmd.c	/^ex_brewind(eap)$/;"	f	file:
ex_brewind	src/ex_docmd.c	/^static void	ex_brewind __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_brewind	src/ex_docmd.c	98;"	d	file:
ex_buffer	src/ex_docmd.c	/^ex_buffer(eap)$/;"	f	file:
ex_buffer	src/ex_docmd.c	/^static void	ex_buffer __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_buffer	src/ex_docmd.c	94;"	d	file:
ex_buffer_all	src/buffer.c	/^ex_buffer_all(eap)$/;"	f
ex_buffer_all	src/ex_docmd.c	104;"	d	file:
ex_bunload	src/ex_docmd.c	/^ex_bunload(eap)$/;"	f	file:
ex_bunload	src/ex_docmd.c	/^static void	ex_bunload __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_bunload	src/ex_docmd.c	93;"	d	file:
ex_call	src/eval.c	/^ex_call(eap)$/;"	f
ex_call	src/ex_docmd.c	368;"	d	file:
ex_catch	src/ex_docmd.c	380;"	d	file:
ex_catch	src/ex_eval.c	/^ex_catch(eap)$/;"	f
ex_cbuffer	src/ex_docmd.c	111;"	d	file:
ex_cbuffer	src/quickfix.c	/^ex_cbuffer(eap)$/;"	f
ex_cc	src/ex_docmd.c	112;"	d	file:
ex_cc	src/quickfix.c	/^ex_cc(eap)$/;"	f
ex_cclose	src/ex_docmd.c	121;"	d	file:
ex_cclose	src/quickfix.c	/^ex_cclose(eap)$/;"	f
ex_cd	src/ex_docmd.c	/^ex_cd(eap)$/;"	f
ex_cexpr	src/ex_docmd.c	126;"	d	file:
ex_cexpr	src/quickfix.c	/^ex_cexpr(eap)$/;"	f
ex_cfile	src/ex_docmd.c	114;"	d	file:
ex_cfile	src/quickfix.c	/^ex_cfile(eap)$/;"	f
ex_change	src/ex_cmds.c	/^ex_change(eap)$/;"	f
ex_changes	src/ex_docmd.c	482;"	d	file:
ex_changes	src/mark.c	/^ex_changes(eap)$/;"	f
ex_checkpath	src/ex_docmd.c	/^ex_checkpath(eap)$/;"	f	file:
ex_checkpath	src/ex_docmd.c	/^static void	ex_checkpath __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_checkpath	src/ex_docmd.c	353;"	d	file:
ex_checktime	src/ex_cmds2.c	/^ex_checktime(eap)$/;"	f
ex_checktime	src/ex_docmd.c	101;"	d	file:
ex_close	src/ex_docmd.c	/^ex_close(eap)$/;"	f	file:
ex_close	src/ex_docmd.c	/^static void	ex_close __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_close	src/ex_docmd.c	164;"	d	file:
ex_cnext	src/ex_docmd.c	113;"	d	file:
ex_cnext	src/quickfix.c	/^ex_cnext(eap)$/;"	f
ex_colorscheme	src/ex_docmd.c	/^ex_colorscheme(eap)$/;"	f	file:
ex_colorscheme	src/ex_docmd.c	/^static void	ex_colorscheme __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_comclear	src/ex_docmd.c	/^ex_comclear(eap)$/;"	f
ex_comclear	src/ex_docmd.c	54;"	d	file:
ex_command	src/ex_docmd.c	/^ex_command(eap)$/;"	f	file:
ex_command	src/ex_docmd.c	/^static void ex_command __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_command	src/ex_docmd.c	53;"	d	file:
ex_compiler	src/ex_cmds2.c	/^ex_compiler(eap)$/;"	f
ex_compiler	src/ex_docmd.c	404;"	d	file:
ex_continue	src/ex_docmd.c	374;"	d	file:
ex_continue	src/ex_eval.c	/^ex_continue(eap)$/;"	f
ex_copen	src/ex_docmd.c	122;"	d	file:
ex_copen	src/quickfix.c	/^ex_copen(eap)$/;"	f
ex_copy	src/ex_cmds.c	/^ex_copy(line1, line2, n)$/;"	f
ex_copymove	src/ex_docmd.c	/^ex_copymove(eap)$/;"	f	file:
ex_copymove	src/ex_docmd.c	/^static void	ex_copymove __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_cquit	src/ex_docmd.c	/^ex_cquit(eap)$/;"	f	file:
ex_cquit	src/ex_docmd.c	/^static void	ex_cquit __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_cwindow	src/ex_docmd.c	123;"	d	file:
ex_cwindow	src/quickfix.c	/^ex_cwindow(eap)$/;"	f
ex_debug	src/ex_cmds2.c	/^ex_debug(eap)$/;"	f
ex_debug	src/ex_docmd.c	470;"	d	file:
ex_debuggreedy	src/ex_cmds2.c	/^ex_debuggreedy(eap)$/;"	f
ex_debuggreedy	src/ex_docmd.c	472;"	d	file:
ex_delcommand	src/ex_docmd.c	/^ex_delcommand(eap)$/;"	f	file:
ex_delcommand	src/ex_docmd.c	/^static void ex_delcommand __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_delcommand	src/ex_docmd.c	55;"	d	file:
ex_delfunction	src/eval.c	/^ex_delfunction(eap)$/;"	f
ex_delfunction	src/ex_docmd.c	389;"	d	file:
ex_delmarks	src/mark.c	/^ex_delmarks(eap)$/;"	f
ex_diffgetput	src/diff.c	/^ex_diffgetput(eap)$/;"	f
ex_diffgetput	src/ex_docmd.c	422;"	d	file:
ex_diffoff	src/diff.c	/^ex_diffoff(eap)$/;"	f
ex_diffoff	src/ex_docmd.c	420;"	d	file:
ex_diffpatch	src/diff.c	/^ex_diffpatch(eap)$/;"	f
ex_diffpatch	src/ex_docmd.c	421;"	d	file:
ex_diffsplit	src/diff.c	/^ex_diffsplit(eap)$/;"	f
ex_diffsplit	src/ex_docmd.c	423;"	d	file:
ex_diffthis	src/diff.c	/^ex_diffthis(eap)$/;"	f
ex_diffthis	src/ex_docmd.c	424;"	d	file:
ex_diffupdate	src/diff.c	/^ex_diffupdate(eap)$/;"	f
ex_diffupdate	src/ex_docmd.c	425;"	d	file:
ex_digraphs	src/ex_docmd.c	/^ex_digraphs(eap)$/;"	f	file:
ex_digraphs	src/ex_docmd.c	/^static void	ex_digraphs __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_display	src/ops.c	/^ex_display(eap)$/;"	f
ex_doautoall	src/ex_docmd.c	82;"	d	file:
ex_doautoall	src/fileio.c	/^ex_doautoall(eap)$/;"	f
ex_doautocmd	src/ex_docmd.c	/^ex_doautocmd(eap)$/;"	f	file:
ex_doautocmd	src/ex_docmd.c	/^static void	ex_doautocmd __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_doautocmd	src/ex_docmd.c	81;"	d	file:
ex_drop	src/ex_cmds.c	/^ex_drop(eap)$/;"	f
ex_drop	src/ex_docmd.c	209;"	d	file:
ex_echo	src/eval.c	/^ex_echo(eap)$/;"	f
ex_echo	src/ex_docmd.c	365;"	d	file:
ex_echohl	src/eval.c	/^ex_echohl(eap)$/;"	f
ex_echohl	src/ex_docmd.c	366;"	d	file:
ex_edit	src/ex_docmd.c	/^ex_edit(eap)$/;"	f	file:
ex_edit	src/ex_docmd.c	/^static void	ex_edit __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_else	src/ex_docmd.c	371;"	d	file:
ex_else	src/ex_eval.c	/^ex_else(eap)$/;"	f
ex_emenu	src/ex_docmd.c	72;"	d	file:
ex_emenu	src/menu.c	/^ex_emenu(eap)$/;"	f
ex_endfor	src/ex_docmd.c	377;"	d	file:
ex_endfunction	src/ex_docmd.c	383;"	d	file:
ex_endfunction	src/ex_eval.c	/^ex_endfunction(eap)$/;"	f
ex_endif	src/ex_docmd.c	370;"	d	file:
ex_endif	src/ex_eval.c	/^ex_endif(eap)$/;"	f
ex_endtry	src/ex_docmd.c	382;"	d	file:
ex_endtry	src/ex_eval.c	/^ex_endtry(eap)$/;"	f
ex_endwhile	src/ex_docmd.c	376;"	d	file:
ex_endwhile	src/ex_eval.c	/^ex_endwhile(eap)$/;"	f
ex_equal	src/ex_docmd.c	/^ex_equal(eap)$/;"	f	file:
ex_equal	src/ex_docmd.c	/^static void	ex_equal __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_execute	src/eval.c	/^ex_execute(eap)$/;"	f
ex_execute	src/ex_docmd.c	367;"	d	file:
ex_exit	src/ex_docmd.c	/^ex_exit(eap)$/;"	f	file:
ex_exit	src/ex_docmd.c	/^static void	ex_exit __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_exitval	src/globals.h	/^EXTERN int	ex_exitval INIT(= 0);	    \/* exit value for ex mode *\/$/;"	v
ex_exusage	src/ex_cmds.c	/^ex_exusage(eap)$/;"	f
ex_file	src/ex_cmds.c	/^ex_file(eap)$/;"	f
ex_filetype	src/ex_docmd.c	/^ex_filetype(eap)$/;"	f	file:
ex_filetype	src/ex_docmd.c	/^static void	ex_filetype __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_filetype	src/ex_docmd.c	416;"	d	file:
ex_finally	src/ex_docmd.c	381;"	d	file:
ex_finally	src/ex_eval.c	/^ex_finally(eap)$/;"	f
ex_find	src/ex_docmd.c	/^ex_find(eap)$/;"	f	file:
ex_find	src/ex_docmd.c	/^static void	ex_find __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_findpat	src/ex_docmd.c	/^ex_findpat(eap)$/;"	f	file:
ex_findpat	src/ex_docmd.c	/^static void	ex_findpat __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_findpat	src/ex_docmd.c	352;"	d	file:
ex_finish	src/ex_cmds2.c	/^ex_finish(eap)$/;"	f
ex_finish	src/ex_docmd.c	364;"	d	file:
ex_fold	src/ex_docmd.c	/^ex_fold(eap)$/;"	f	file:
ex_fold	src/ex_docmd.c	/^static void	ex_fold __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_fold	src/ex_docmd.c	449;"	d	file:
ex_folddo	src/ex_docmd.c	/^ex_folddo(eap)$/;"	f	file:
ex_folddo	src/ex_docmd.c	/^static void	ex_folddo __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_folddo	src/ex_docmd.c	451;"	d	file:
ex_foldopen	src/ex_docmd.c	/^ex_foldopen(eap)$/;"	f	file:
ex_foldopen	src/ex_docmd.c	/^static void	ex_foldopen __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_foldopen	src/ex_docmd.c	450;"	d	file:
ex_for	src/ex_docmd.c	373;"	d	file:
ex_func_T	src/ex_cmds.h	/^typedef void (*ex_func_T) __ARGS((exarg_T *eap));$/;"	t
ex_function	src/eval.c	/^ex_function(eap)$/;"	f
ex_function	src/ex_docmd.c	388;"	d	file:
ex_global	src/ex_cmds.c	/^ex_global(eap)$/;"	f
ex_goto	src/ex_docmd.c	/^ex_goto(eap)$/;"	f	file:
ex_goto	src/ex_docmd.c	/^static void	ex_goto __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_goto	src/ex_docmd.c	192;"	d	file:
ex_gui	src/ex_docmd.c	212;"	d	file:
ex_gui	src/gui.c	/^ex_gui(eap)$/;"	f
ex_hardcopy	src/ex_docmd.c	19;"	d	file:
ex_hardcopy	src/hardcopy.c	/^ex_hardcopy(eap)$/;"	f
ex_help	src/ex_cmds.c	/^ex_help(eap)$/;"	f
ex_helpfind	src/ex_docmd.c	233;"	d	file:
ex_helpfind	src/gui_gtk.c	/^ex_helpfind(eap)$/;"	f
ex_helpgrep	src/ex_docmd.c	117;"	d	file:
ex_helpgrep	src/quickfix.c	/^ex_helpgrep(eap)$/;"	f
ex_helptags	src/ex_cmds.c	/^ex_helptags(eap)$/;"	f
ex_helptags	src/ex_docmd.c	345;"	d	file:
ex_hide	src/ex_docmd.c	/^ex_hide(eap)$/;"	f	file:
ex_hide	src/ex_docmd.c	/^static void	ex_hide __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_highlight	src/ex_docmd.c	/^ex_highlight(eap)$/;"	f	file:
ex_highlight	src/ex_docmd.c	/^static void	ex_highlight __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_history	src/ex_docmd.c	478;"	d	file:
ex_history	src/ex_getln.c	/^ex_history(eap)$/;"	f
ex_if	src/ex_docmd.c	369;"	d	file:
ex_if	src/ex_eval.c	/^ex_if(eap)$/;"	f
ex_intro	src/version.c	/^ex_intro(eap)$/;"	f
ex_join	src/ex_docmd.c	/^ex_join(eap)$/;"	f	file:
ex_join	src/ex_docmd.c	/^static void	ex_join __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_jumps	src/ex_docmd.c	481;"	d	file:
ex_jumps	src/mark.c	/^ex_jumps(eap)$/;"	f
ex_keep_indent	src/globals.h	/^EXTERN int	ex_keep_indent INIT(= FALSE); \/* getexmodeline(): keep indent *\/$/;"	v
ex_language	src/ex_cmds2.c	/^ex_language(eap)$/;"	f
ex_language	src/ex_docmd.c	455;"	d	file:
ex_last	src/ex_cmds2.c	/^ex_last(eap)$/;"	f
ex_later	src/ex_docmd.c	/^ex_later(eap)$/;"	f	file:
ex_later	src/ex_docmd.c	/^static void	ex_later __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_let	src/eval.c	/^ex_let(eap)$/;"	f
ex_let	src/ex_docmd.c	384;"	d	file:
ex_let_one	src/eval.c	/^ex_let_one(arg, tv, copy, endchars, op)$/;"	f	file:
ex_let_one	src/eval.c	/^static char_u *ex_let_one __ARGS((char_u *arg, typval_T *tv, int copy, char_u *endchars, char_u *op));$/;"	p	file:	signature:(char_u *arg, typval_T *tv, int copy, char_u *endchars, char_u *op)
ex_let_vars	src/eval.c	/^ex_let_vars(arg_start, tv, copy, semicolon, var_count, nextchars)$/;"	f	file:
ex_let_vars	src/eval.c	/^static int ex_let_vars __ARGS((char_u *arg, typval_T *tv, int copy, int semicolon, int var_count, char_u *nextchars));$/;"	p	file:	signature:(char_u *arg, typval_T *tv, int copy, int semicolon, int var_count, char_u *nextchars)
ex_listdo	src/ex_cmds2.c	/^ex_listdo(eap)$/;"	f
ex_listdo	src/ex_docmd.c	201;"	d	file:
ex_loadkeymap	src/digraph.c	/^ex_loadkeymap(eap)$/;"	f
ex_loadkeymap	src/ex_docmd.c	290;"	d	file:
ex_loadview	src/ex_docmd.c	/^ex_loadview(eap)$/;"	f	file:
ex_loadview	src/ex_docmd.c	/^static void	ex_loadview __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_loadview	src/ex_docmd.c	401;"	d	file:
ex_lockvar	src/eval.c	/^ex_lockvar(eap)$/;"	f
ex_lockvar	src/ex_docmd.c	386;"	d	file:
ex_lua	src/ex_docmd.c	256;"	d	file:
ex_lua	src/if_lua.c	/^ex_lua(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
ex_luado	src/ex_docmd.c	257;"	d	file:
ex_luado	src/if_lua.c	/^ex_luado(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
ex_luafile	src/ex_docmd.c	258;"	d	file:
ex_luafile	src/if_lua.c	/^ex_luafile(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
ex_make	src/ex_docmd.c	110;"	d	file:
ex_make	src/quickfix.c	/^ex_make(eap)$/;"	f
ex_map	src/ex_docmd.c	/^ex_map(eap)$/;"	f	file:
ex_map	src/ex_docmd.c	/^static void	ex_map __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_mapclear	src/ex_docmd.c	/^ex_mapclear(eap)$/;"	f	file:
ex_mapclear	src/ex_docmd.c	/^static void	ex_mapclear __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_mark	src/ex_docmd.c	/^ex_mark(eap)$/;"	f	file:
ex_mark	src/ex_docmd.c	/^static void	ex_mark __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_match	src/ex_docmd.c	/^ex_match(eap)$/;"	f	file:
ex_match	src/ex_docmd.c	/^static void	ex_match __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_match	src/ex_docmd.c	437;"	d	file:
ex_may_print	src/ex_docmd.c	/^ex_may_print(eap)$/;"	f	file:
ex_may_print	src/ex_docmd.c	/^static void	ex_may_print __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_menu	src/ex_docmd.c	73;"	d	file:
ex_menu	src/menu.c	/^ex_menu(eap)$/;"	f
ex_menutranslate	src/ex_docmd.c	74;"	d	file:
ex_menutranslate	src/menu.c	/^ex_menutranslate(eap)$/;"	f
ex_messages	src/message.c	/^ex_messages(eap)$/;"	f
ex_mkrc	src/ex_docmd.c	/^ex_mkrc(eap)$/;"	f	file:
ex_mkrc	src/ex_docmd.c	/^static void	ex_mkrc __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_mkspell	src/ex_docmd.c	246;"	d	file:
ex_mkspell	src/spell.c	/^ex_mkspell(eap)$/;"	f
ex_mode	src/ex_docmd.c	/^ex_mode(eap)$/;"	f	file:
ex_mode	src/ex_docmd.c	/^static void	ex_mode __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_mzfile	src/ex_docmd.c	262;"	d	file:
ex_mzfile	src/if_mzsch.c	/^ex_mzfile(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
ex_mzscheme	src/ex_docmd.c	261;"	d	file:
ex_mzscheme	src/if_mzsch.c	/^ex_mzscheme(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
ex_nbclose	src/ex_docmd.c	464;"	d	file:
ex_nbclose	src/netbeans.c	/^ex_nbclose(eap)$/;"	f
ex_nbkey	src/ex_docmd.c	465;"	d	file:
ex_nbkey	src/netbeans.c	/^ex_nbkey(eap)$/;"	f
ex_nbstart	src/ex_docmd.c	466;"	d	file:
ex_nbstart	src/netbeans.c	/^ex_nbstart(eap)$/;"	f
ex_nesting_level	src/globals.h	/^EXTERN int	ex_nesting_level INIT(= 0);	\/* nesting level *\/$/;"	v
ex_next	src/ex_cmds2.c	/^ex_next(eap)$/;"	f
ex_ni	src/ex_docmd.c	/^ex_ni(eap)$/;"	f
ex_no_reprint	src/globals.h	/^EXTERN int ex_no_reprint INIT(= FALSE); \/* no need to print after z or p *\/$/;"	v
ex_nogui	src/ex_docmd.c	/^ex_nogui(eap)$/;"	f	file:
ex_nogui	src/ex_docmd.c	/^static void	ex_nogui __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_nohlsearch	src/ex_docmd.c	/^ex_nohlsearch(eap)$/;"	f	file:
ex_nohlsearch	src/ex_docmd.c	/^static void	ex_nohlsearch __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_nohlsearch	src/ex_docmd.c	436;"	d	file:
ex_normal	src/ex_docmd.c	/^ex_normal(eap)$/;"	f	file:
ex_normal	src/ex_docmd.c	/^static void	ex_normal __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_normal	src/ex_docmd.c	340;"	d	file:
ex_normal_busy	src/globals.h	/^EXTERN int	ex_normal_busy INIT(= 0); \/* recursiveness of ex_normal() *\/$/;"	v
ex_normal_lock	src/globals.h	/^EXTERN int	ex_normal_lock INIT(= 0); \/* forbid use of ex_normal() *\/$/;"	v
ex_oldfiles	src/eval.c	/^ex_oldfiles(eap)$/;"	f
ex_oldfiles	src/ex_docmd.c	391;"	d	file:
ex_only	src/ex_docmd.c	/^ex_only(eap)$/;"	f	file:
ex_only	src/ex_docmd.c	/^static void	ex_only __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_only	src/ex_docmd.c	165;"	d	file:
ex_open	src/ex_docmd.c	/^ex_open(eap)$/;"	f	file:
ex_open	src/ex_docmd.c	/^static void	ex_open __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_operators	src/ex_docmd.c	/^ex_operators(eap)$/;"	f	file:
ex_operators	src/ex_docmd.c	/^static void	ex_operators __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_options	src/ex_cmds2.c	/^ex_options(eap)$/;"	f
ex_options	src/ex_docmd.c	430;"	d	file:
ex_ownsyntax	src/ex_docmd.c	242;"	d	file:
ex_ownsyntax	src/syntax.c	/^ex_ownsyntax(eap)$/;"	f
ex_pclose	src/ex_docmd.c	/^ex_pclose(eap)$/;"	f	file:
ex_pclose	src/ex_docmd.c	/^static void	ex_pclose __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_pclose	src/ex_docmd.c	181;"	d	file:
ex_pedit	src/ex_docmd.c	/^ex_pedit(eap)$/;"	f	file:
ex_pedit	src/ex_docmd.c	/^static void	ex_pedit __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_pedit	src/ex_docmd.c	183;"	d	file:
ex_perl	src/ex_docmd.c	265;"	d	file:
ex_perldo	src/ex_docmd.c	266;"	d	file:
ex_popup	src/ex_docmd.c	/^ex_popup(eap)$/;"	f	file:
ex_popup	src/ex_docmd.c	/^static void	ex_popup __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_popup	src/ex_docmd.c	223;"	d	file:
ex_preserve	src/ex_docmd.c	/^ex_preserve(eap)$/;"	f	file:
ex_preserve	src/ex_docmd.c	/^static void	ex_preserve __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_pressedreturn	src/ex_docmd.c	/^static int	ex_pressedreturn = FALSE;$/;"	v	file:
ex_previous	src/ex_cmds2.c	/^ex_previous(eap)$/;"	f
ex_print	src/ex_docmd.c	/^ex_print(eap)$/;"	f	file:
ex_print	src/ex_docmd.c	/^static void	ex_print __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_profile	src/ex_cmds2.c	/^ex_profile(eap)$/;"	f
ex_profile	src/ex_docmd.c	486;"	d	file:
ex_psearch	src/ex_docmd.c	/^ex_psearch(eap)$/;"	f	file:
ex_psearch	src/ex_docmd.c	/^static void	ex_psearch __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_psearch	src/ex_docmd.c	358;"	d	file:
ex_ptag	src/ex_docmd.c	/^ex_ptag(eap)$/;"	f	file:
ex_ptag	src/ex_docmd.c	/^static void	ex_ptag __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_ptag	src/ex_docmd.c	182;"	d	file:
ex_put	src/ex_docmd.c	/^ex_put(eap)$/;"	f	file:
ex_put	src/ex_docmd.c	/^static void	ex_put __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_pwd	src/ex_docmd.c	/^ex_pwd(eap)$/;"	f	file:
ex_pwd	src/ex_docmd.c	/^static void	ex_pwd __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_py3	src/ex_docmd.c	273;"	d	file:
ex_py3	src/if_python3.c	/^ex_py3(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
ex_py3file	src/ex_docmd.c	274;"	d	file:
ex_py3file	src/if_python3.c	/^ex_py3file(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
ex_pyfile	src/ex_docmd.c	270;"	d	file:
ex_pyfile	src/if_python.c	/^ex_pyfile(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
ex_python	src/ex_docmd.c	269;"	d	file:
ex_python	src/if_python.c	/^ex_python(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
ex_quit	src/ex_docmd.c	/^ex_quit(eap)$/;"	f	file:
ex_quit	src/ex_docmd.c	/^static void	ex_quit __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_quit_all	src/ex_docmd.c	/^ex_quit_all(eap)$/;"	f	file:
ex_quit_all	src/ex_docmd.c	/^static void	ex_quit_all __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_read	src/ex_docmd.c	/^ex_read(eap)$/;"	f	file:
ex_read	src/ex_docmd.c	/^static void	ex_read __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_recover	src/ex_docmd.c	/^ex_recover(eap)$/;"	f	file:
ex_recover	src/ex_docmd.c	/^static void	ex_recover __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_redir	src/ex_docmd.c	/^ex_redir(eap)$/;"	f	file:
ex_redir	src/ex_docmd.c	/^static void	ex_redir __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_redo	src/ex_docmd.c	/^ex_redo(eap)$/;"	f	file:
ex_redo	src/ex_docmd.c	/^static void	ex_redo __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_redraw	src/ex_docmd.c	/^ex_redraw(eap)$/;"	f	file:
ex_redraw	src/ex_docmd.c	/^static void	ex_redraw __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_redrawstatus	src/ex_docmd.c	/^ex_redrawstatus(eap)$/;"	f	file:
ex_redrawstatus	src/ex_docmd.c	/^static void	ex_redrawstatus __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_resize	src/ex_docmd.c	/^ex_resize(eap)$/;"	f	file:
ex_resize	src/ex_docmd.c	/^static void	ex_resize __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_resize	src/ex_docmd.c	167;"	d	file:
ex_retab	src/ex_cmds.c	/^ex_retab(eap)$/;"	f
ex_retab	src/ex_docmd.c	342;"	d	file:
ex_return	src/eval.c	/^ex_return(eap)$/;"	f
ex_return	src/ex_docmd.c	390;"	d	file:
ex_rewind	src/ex_cmds2.c	/^ex_rewind(eap)$/;"	f
ex_ruby	src/ex_docmd.c	282;"	d	file:
ex_ruby	src/if_ruby.c	/^void ex_ruby(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
ex_rubydo	src/ex_docmd.c	283;"	d	file:
ex_rubydo	src/if_ruby.c	/^void ex_rubydo(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
ex_rubyfile	src/ex_docmd.c	284;"	d	file:
ex_rubyfile	src/if_ruby.c	/^void ex_rubyfile(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
ex_rundo	src/ex_docmd.c	/^ex_rundo(eap)$/;"	f	file:
ex_rundo	src/ex_docmd.c	/^static void	ex_rundo __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_rundo	src/ex_docmd.c	252;"	d	file:
ex_runtime	src/ex_cmds2.c	/^ex_runtime(eap)$/;"	f
ex_script_ni	src/ex_docmd.c	/^ex_script_ni(eap)$/;"	f	file:
ex_script_ni	src/ex_docmd.c	/^static void	ex_script_ni __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_scriptencoding	src/ex_cmds2.c	/^ex_scriptencoding(eap)$/;"	f
ex_scriptnames	src/ex_cmds2.c	/^ex_scriptnames(eap)$/;"	f
ex_scriptnames	src/ex_docmd.c	363;"	d	file:
ex_set	src/ex_docmd.c	/^ex_set(eap)$/;"	f	file:
ex_set	src/ex_docmd.c	/^static void	ex_set __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_setfiletype	src/ex_docmd.c	/^ex_setfiletype(eap)$/;"	f	file:
ex_setfiletype	src/ex_docmd.c	/^static void	ex_setfiletype  __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_setfiletype	src/ex_docmd.c	417;"	d	file:
ex_shell	src/ex_docmd.c	/^ex_shell(eap)$/;"	f	file:
ex_shell	src/ex_docmd.c	/^static void	ex_shell __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_sign	src/ex_cmds.c	/^ex_sign(eap)$/;"	f
ex_sign	src/ex_docmd.c	458;"	d	file:
ex_simalt	src/ex_docmd.c	226;"	d	file:
ex_simalt	src/gui_w48.c	/^ex_simalt(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
ex_sleep	src/ex_docmd.c	/^ex_sleep(eap)$/;"	f	file:
ex_sleep	src/ex_docmd.c	/^static void	ex_sleep __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_sniff	src/ex_docmd.c	287;"	d	file:
ex_sniff	src/if_sniff.c	/^ex_sniff(eap)$/;"	f
ex_sniff	src/if_sniff.h	/^extern void ex_sniff __ARGS((exarg_T *eap));$/;"	p	signature:(exarg_T *eap)
ex_sort	src/ex_cmds.c	/^ex_sort(eap)$/;"	f
ex_sort	src/ex_docmd.c	346;"	d	file:
ex_source	src/ex_cmds2.c	/^ex_source(eap)$/;"	f
ex_spell	src/ex_docmd.c	245;"	d	file:
ex_spell	src/spell.c	/^ex_spell(eap)$/;"	f
ex_spelldump	src/ex_docmd.c	247;"	d	file:
ex_spelldump	src/spell.c	/^ex_spelldump(eap)$/;"	f
ex_spellinfo	src/ex_docmd.c	248;"	d	file:
ex_spellinfo	src/spell.c	/^ex_spellinfo(eap)$/;"	f
ex_spellrepall	src/ex_docmd.c	249;"	d	file:
ex_spellrepall	src/spell.c	/^ex_spellrepall(eap)$/;"	f
ex_splitview	src/ex_docmd.c	/^ex_splitview(eap)$/;"	f
ex_splitview	src/ex_docmd.c	168;"	d	file:
ex_stag	src/ex_docmd.c	/^ex_stag(eap)$/;"	f	file:
ex_stag	src/ex_docmd.c	/^static void	ex_stag __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_stag	src/ex_docmd.c	169;"	d	file:
ex_startinsert	src/ex_docmd.c	/^ex_startinsert(eap)$/;"	f	file:
ex_startinsert	src/ex_docmd.c	/^static void	ex_startinsert __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_startinsert	src/ex_docmd.c	343;"	d	file:
ex_stop	src/ex_docmd.c	/^ex_stop(eap)$/;"	f	file:
ex_stop	src/ex_docmd.c	/^static void	ex_stop __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_stopinsert	src/ex_docmd.c	/^ex_stopinsert(eap)$/;"	f	file:
ex_stopinsert	src/ex_docmd.c	/^static void	ex_stopinsert __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_stopinsert	src/ex_docmd.c	344;"	d	file:
ex_submagic	src/ex_docmd.c	/^ex_submagic(eap)$/;"	f	file:
ex_submagic	src/ex_docmd.c	/^static void	ex_submagic __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_swapname	src/ex_docmd.c	/^ex_swapname(eap)$/;"	f	file:
ex_swapname	src/ex_docmd.c	/^static void	ex_swapname __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_syncbind	src/ex_docmd.c	/^ex_syncbind(eap)$/;"	f	file:
ex_syncbind	src/ex_docmd.c	/^static void	ex_syncbind __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_syntax	src/ex_docmd.c	241;"	d	file:
ex_syntax	src/syntax.c	/^ex_syntax(eap)$/;"	f
ex_tabclose	src/ex_docmd.c	/^ex_tabclose(eap)$/;"	f	file:
ex_tabclose	src/ex_docmd.c	/^static void	ex_tabclose __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_tabclose	src/ex_docmd.c	173;"	d	file:
ex_tabmove	src/ex_docmd.c	/^ex_tabmove(eap)$/;"	f	file:
ex_tabmove	src/ex_docmd.c	/^static void	ex_tabmove __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_tabmove	src/ex_docmd.c	171;"	d	file:
ex_tabnext	src/ex_docmd.c	/^ex_tabnext(eap)$/;"	f	file:
ex_tabnext	src/ex_docmd.c	/^static void	ex_tabnext __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_tabnext	src/ex_docmd.c	170;"	d	file:
ex_tabonly	src/ex_docmd.c	/^ex_tabonly(eap)$/;"	f	file:
ex_tabonly	src/ex_docmd.c	/^static void	ex_tabonly __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_tabonly	src/ex_docmd.c	174;"	d	file:
ex_tabs	src/ex_docmd.c	/^ex_tabs(eap)$/;"	f	file:
ex_tabs	src/ex_docmd.c	/^static void	ex_tabs __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_tabs	src/ex_docmd.c	172;"	d	file:
ex_tag	src/ex_docmd.c	/^ex_tag(eap)$/;"	f	file:
ex_tag	src/ex_docmd.c	/^static void	ex_tag __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_tag_cmd	src/ex_docmd.c	/^ex_tag_cmd(eap, name)$/;"	f	file:
ex_tag_cmd	src/ex_docmd.c	/^static void	ex_tag_cmd __ARGS((exarg_T *eap, char_u *name));$/;"	p	file:	signature:(exarg_T *eap, char_u *name)
ex_tcl	src/ex_docmd.c	277;"	d	file:
ex_tcl	src/if_tcl.c	/^ex_tcl(eap)$/;"	f
ex_tcldo	src/ex_docmd.c	278;"	d	file:
ex_tcldo	src/if_tcl.c	/^ex_tcldo(eap)$/;"	f
ex_tclfile	src/ex_docmd.c	279;"	d	file:
ex_tclfile	src/if_tcl.c	/^ex_tclfile(eap)$/;"	f
ex_tearoff	src/ex_docmd.c	/^ex_tearoff(eap)$/;"	f	file:
ex_tearoff	src/ex_docmd.c	/^static void	ex_tearoff __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_tearoff	src/ex_docmd.c	218;"	d	file:
ex_throw	src/ex_docmd.c	378;"	d	file:
ex_throw	src/ex_eval.c	/^ex_throw(eap)$/;"	f
ex_try	src/ex_docmd.c	379;"	d	file:
ex_try	src/ex_eval.c	/^ex_try(eap)$/;"	f
ex_undo	src/ex_docmd.c	/^ex_undo(eap)$/;"	f	file:
ex_undo	src/ex_docmd.c	/^static void	ex_undo __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_undojoin	src/undo.c	/^ex_undojoin(eap)$/;"	f
ex_undolist	src/undo.c	/^ex_undolist(eap)$/;"	f
ex_unlet	src/eval.c	/^ex_unlet(eap)$/;"	f
ex_unlet	src/ex_docmd.c	385;"	d	file:
ex_unletlock	src/eval.c	/^ex_unletlock(eap, argstart, deep)$/;"	f	file:
ex_unletlock	src/eval.c	/^static void ex_unletlock __ARGS((exarg_T *eap, char_u *argstart, int deep));$/;"	p	file:	signature:(exarg_T *eap, char_u *argstart, int deep)
ex_unlockvar	src/ex_docmd.c	387;"	d	file:
ex_unmap	src/ex_docmd.c	/^ex_unmap(eap)$/;"	f	file:
ex_unmap	src/ex_docmd.c	/^static void	ex_unmap __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_update	src/ex_cmds.c	/^ex_update(eap)$/;"	f
ex_version	src/version.c	/^ex_version(eap)$/;"	f
ex_vimgrep	src/ex_docmd.c	118;"	d	file:
ex_vimgrep	src/quickfix.c	/^ex_vimgrep(eap)$/;"	f
ex_viminfo	src/ex_docmd.c	/^ex_viminfo(eap)$/;"	f	file:
ex_viminfo	src/ex_docmd.c	/^static void	ex_viminfo __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_viminfo	src/ex_docmd.c	409;"	d	file:
ex_viusage	src/ex_cmds.c	/^ex_viusage(eap)$/;"	f
ex_while	src/ex_docmd.c	372;"	d	file:
ex_while	src/ex_eval.c	/^ex_while(eap)$/;"	f
ex_win_close	src/ex_docmd.c	/^ex_win_close(forceit, win, tp)$/;"	f	file:
ex_win_close	src/ex_docmd.c	/^static void	ex_win_close __ARGS((int forceit, win_T *win, tabpage_T *tp));$/;"	p	file:	signature:(int forceit, win_T *win, tabpage_T *tp)
ex_wincmd	src/ex_docmd.c	/^ex_wincmd(eap)$/;"	f	file:
ex_wincmd	src/ex_docmd.c	/^static void	ex_wincmd __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_wincmd	src/ex_docmd.c	303;"	d	file:
ex_window	src/ex_getln.c	/^ex_window()$/;"	f	file:
ex_window	src/ex_getln.c	/^static int	ex_window __ARGS((void));$/;"	p	file:	signature:(void)
ex_winpos	src/ex_docmd.c	/^ex_winpos(eap)$/;"	f	file:
ex_winpos	src/ex_docmd.c	/^static void	ex_winpos __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_winpos	src/ex_docmd.c	308;"	d	file:
ex_winsize	src/ex_docmd.c	/^ex_winsize(eap)$/;"	f	file:
ex_winsize	src/ex_docmd.c	/^static void	ex_winsize __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_wnext	src/ex_cmds.c	/^ex_wnext(eap)$/;"	f
ex_write	src/ex_cmds.c	/^ex_write(eap)$/;"	f
ex_wrongmodifier	src/ex_docmd.c	/^ex_wrongmodifier(eap)$/;"	f	file:
ex_wrongmodifier	src/ex_docmd.c	/^static void	ex_wrongmodifier __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_wsverb	src/ex_docmd.c	461;"	d	file:
ex_wsverb	src/workshop.c	/^ex_wsverb(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
ex_wundo	src/ex_docmd.c	/^ex_wundo(eap)$/;"	f	file:
ex_wundo	src/ex_docmd.c	/^static void	ex_wundo __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
ex_wundo	src/ex_docmd.c	253;"	d	file:
ex_z	src/ex_cmds.c	/^ex_z(eap)$/;"	f
exarg	src/ex_cmds.h	/^struct exarg$/;"	s
exarg::addr_count	src/ex_cmds.h	/^    int		addr_count;	\/* the number of addresses given *\/$/;"	m	struct:exarg	access:public
exarg::amount	src/ex_cmds.h	/^    int		amount;		\/* number of '>' or '<' for shift command *\/$/;"	m	struct:exarg	access:public
exarg::append	src/ex_cmds.h	/^    int		append;		\/* TRUE with ":w >>file" command *\/$/;"	m	struct:exarg	access:public
exarg::arg	src/ex_cmds.h	/^    char_u	*arg;		\/* argument of the command *\/$/;"	m	struct:exarg	access:public
exarg::argt	src/ex_cmds.h	/^    long	argt;		\/* flags for the command *\/$/;"	m	struct:exarg	access:public
exarg::bad_char	src/ex_cmds.h	/^    int		bad_char;	\/* BAD_KEEP, BAD_DROP or replacement byte *\/$/;"	m	struct:exarg	access:public
exarg::cmd	src/ex_cmds.h	/^    char_u	*cmd;		\/* the name of the command (except for :make) *\/$/;"	m	struct:exarg	access:public
exarg::cmdidx	src/ex_cmds.h	/^    cmdidx_T	cmdidx;		\/* the index for the command *\/$/;"	m	struct:exarg	access:public
exarg::cmdlinep	src/ex_cmds.h	/^    char_u	**cmdlinep;	\/* pointer to pointer of allocated cmdline *\/$/;"	m	struct:exarg	access:public
exarg::cookie	src/ex_cmds.h	/^    void	*cookie;	\/* argument for getline() *\/$/;"	m	struct:exarg	access:public
exarg::cstack	src/ex_cmds.h	/^    struct condstack *cstack;	\/* condition stack for ":if" etc. *\/$/;"	m	struct:exarg	typeref:struct:exarg::condstack	access:public
exarg::do_ecmd_cmd	src/ex_cmds.h	/^    char_u	*do_ecmd_cmd;	\/* +command arg to be used in edited file *\/$/;"	m	struct:exarg	access:public
exarg::do_ecmd_lnum	src/ex_cmds.h	/^    linenr_T	do_ecmd_lnum;	\/* the line number in an edited file *\/$/;"	m	struct:exarg	access:public
exarg::errmsg	src/ex_cmds.h	/^    char_u	*errmsg;	\/* returned error message *\/$/;"	m	struct:exarg	access:public
exarg::flags	src/ex_cmds.h	/^    int		flags;		\/* extra flags after count: EXFLAG_ *\/$/;"	m	struct:exarg	access:public
exarg::force_bin	src/ex_cmds.h	/^    int		force_bin;	\/* 0, FORCE_BIN or FORCE_NOBIN *\/$/;"	m	struct:exarg	access:public
exarg::force_enc	src/ex_cmds.h	/^    int		force_enc;	\/* ++enc= argument (index in cmd[]) *\/$/;"	m	struct:exarg	access:public
exarg::force_ff	src/ex_cmds.h	/^    int		force_ff;	\/* ++ff= argument (index in cmd[]) *\/$/;"	m	struct:exarg	access:public
exarg::forceit	src/ex_cmds.h	/^    int		forceit;	\/* TRUE if ! present *\/$/;"	m	struct:exarg	access:public
exarg::getline	src/ex_cmds.h	/^    char_u	*(*getline) __ARGS((int, void *, int));$/;"	m	struct:exarg	access:public
exarg::line1	src/ex_cmds.h	/^    linenr_T	line1;		\/* the first line number *\/$/;"	m	struct:exarg	access:public
exarg::line2	src/ex_cmds.h	/^    linenr_T	line2;		\/* the second line number or count *\/$/;"	m	struct:exarg	access:public
exarg::nextcmd	src/ex_cmds.h	/^    char_u	*nextcmd;	\/* next command (NULL if none) *\/$/;"	m	struct:exarg	access:public
exarg::read_edit	src/ex_cmds.h	/^    int		read_edit;	\/* ++edit argument *\/$/;"	m	struct:exarg	access:public
exarg::regname	src/ex_cmds.h	/^    int		regname;	\/* register name (NUL if none) *\/$/;"	m	struct:exarg	access:public
exarg::skip	src/ex_cmds.h	/^    int		skip;		\/* don't execute the command, only parse it *\/$/;"	m	struct:exarg	access:public
exarg::usefilter	src/ex_cmds.h	/^    int		usefilter;	\/* TRUE with ":w !command" and ":r!command" *\/$/;"	m	struct:exarg	access:public
exarg::useridx	src/ex_cmds.h	/^    int		useridx;	\/* user command index *\/$/;"	m	struct:exarg	access:public
exarg_T	src/ex_cmds.h	/^typedef struct exarg exarg_T;$/;"	t	typeref:struct:exarg
except_T	src/structs.h	/^typedef struct vim_exception except_T;$/;"	t	typeref:struct:vim_exception
exception	src/structs.h	/^    except_T *exception;	\/* exception value *\/$/;"	m	struct:cleanup_stuff	access:public
exception	src/testdir/test49.vim	/^		let exception  = v:exception$/;"	v
exception	src/testdir/test49.vim	/^	    let exception  = v:exception$/;"	v
exception	src/testdir/test49.vim	/^	let exception  = v:exception$/;"	v
exception	src/testdir/test49.vim	/^    let exception  = v:exception$/;"	v
exe_commands	src/main.c	/^exe_commands(parmp)$/;"	f	file:
exe_commands	src/main.c	/^static void exe_commands __ARGS((mparm_T *parmp));$/;"	p	file:	signature:(mparm_T *parmp)
exe_name	src/globals.h	/^EXTERN char_u	*exe_name;		\/* the name of the executable *\/$/;"	v
exe_pre_commands	src/main.c	/^exe_pre_commands(parmp)$/;"	f	file:
exe_pre_commands	src/main.c	/^static void exe_pre_commands __ARGS((mparm_T *parmp));$/;"	p	file:	signature:(mparm_T *parmp)
exearg	src/dosinst.h	/^    char	*exearg;	\/* argument for vim.exe or gvim.exe *\/$/;"	m	struct:__anon138	access:public
exec_from_reg	src/globals.h	/^EXTERN int	exec_from_reg INIT(= FALSE);	\/* executing register *\/$/;"	v
exec_normal_cmd	src/ex_docmd.c	/^exec_normal_cmd(cmd, remap, silent)$/;"	f
exec_on_server	src/main.c	/^exec_on_server(parmp)$/;"	f	file:
exec_on_server	src/main.c	/^static void exec_on_server __ARGS((mparm_T *parmp));$/;"	p	file:	signature:(mparm_T *parmp)
exec_prefix	src/auto/config.mk	/^exec_prefix	= ${prefix}$/;"	m
execreg_lastc	src/ops.c	/^static int execreg_lastc = NUL;$/;"	v	file:
executable_exists	src/os_win32.c	/^executable_exists(char *name)$/;"	f	file:	signature:(char *name)
executable_file	src/os_unix.c	/^executable_file(name)$/;"	f	file:
executable_file	src/os_unix.c	/^static int executable_file __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
exename	src/dosinst.h	/^    char	*exename;	\/* exe file name *\/$/;"	m	struct:__anon138	access:public
exenamearg	src/dosinst.h	/^    char	*exenamearg;	\/* exe file name when using exearg *\/$/;"	m	struct:__anon138	access:public
exit	src/gui_xmdlg.c	/^    Boolean	exit;		\/* used for program exit control *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
exit_gui_mch_update	src/gui_photon.c	/^exit_gui_mch_update( void *data )$/;"	f	file:	signature:( void *data )
exit_scroll	src/os_unix.c	/^exit_scroll()$/;"	f	file:
exit_scroll	src/os_unix.c	/^static void exit_scroll __ARGS((void));$/;"	p	file:	signature:(void)
exit_with_usage	src/xxd/xxd.c	/^exit_with_usage(pname)$/;"	f	file:
exit_with_usage	src/xxd/xxd.c	/^static void exit_with_usage __P((char *));$/;"	p	file:	signature:(char *)
exitcmd	src/if_tcl.c	/^exitcmd(dummy, interp, objc, objv)$/;"	f	file:
exiting	src/globals.h	/^EXTERN int	exiting INIT(= FALSE);$/;"	v
exmode_active	src/globals.h	/^EXTERN int exmode_active INIT(= 0);	\/* zero, EXMODE_NORMAL or EXMODE_VIM *\/$/;"	v
exn_catching_apply	src/if_mzsch.c	/^static Scheme_Object *exn_catching_apply = NULL;$/;"	v	file:
exn_message	src/if_mzsch.c	/^static Scheme_Object *exn_message = NULL;$/;"	v	file:
exn_p	src/if_mzsch.c	/^static Scheme_Object *exn_p = NULL;$/;"	v	file:
expand	src/ex_docmd.c	/^    int	    expand;$/;"	m	struct:__anon5	file:	access:public
expand	src/structs.h	/^typedef struct expand$/;"	s
expand::xp_arg	src/structs.h	/^    char_u	*xp_arg;		\/* completion function *\/$/;"	m	struct:expand	access:public
expand::xp_backslash	src/structs.h	/^    int		xp_backslash;		\/* one of the XP_BS_ values *\/$/;"	m	struct:expand	access:public
expand::xp_context	src/structs.h	/^    int		xp_context;		\/* type of expansion *\/$/;"	m	struct:expand	access:public
expand::xp_files	src/structs.h	/^    char_u	**xp_files;		\/* list of files *\/$/;"	m	struct:expand	access:public
expand::xp_numfiles	src/structs.h	/^    int		xp_numfiles;		\/* number of files found by$/;"	m	struct:expand	access:public
expand::xp_pattern	src/structs.h	/^    char_u	*xp_pattern;		\/* start of item to expand *\/$/;"	m	struct:expand	access:public
expand::xp_pattern_len	src/structs.h	/^    int		xp_pattern_len;		\/* bytes in xp_pattern before cursor *\/$/;"	m	struct:expand	access:public
expand::xp_scriptID	src/structs.h	/^    int		xp_scriptID;		\/* SID for completion function *\/$/;"	m	struct:expand	access:public
expand::xp_shell	src/structs.h	/^    int		xp_shell;		\/* TRUE for a shell command, more$/;"	m	struct:expand	access:public
expand_T	src/structs.h	/^} expand_T;$/;"	t	typeref:struct:expand
expand_backtick	src/misc1.c	/^expand_backtick(gap, pat, flags)$/;"	f	file:
expand_backtick	src/misc1.c	/^static int expand_backtick __ARGS((garray_T *gap, char_u *pat, int flags));$/;"	p	file:	signature:(garray_T *gap, char_u *pat, int flags)
expand_buffer	src/getchar.c	/^static int	expand_buffer = FALSE;$/;"	v	file:
expand_by_function	src/edit.c	/^expand_by_function(type, base)$/;"	f	file:
expand_by_function	src/edit.c	/^static void expand_by_function __ARGS((int type, char_u *base));$/;"	p	file:	signature:(int type, char_u *base)
expand_cmdline	src/ex_getln.c	/^expand_cmdline(xp, str, col, matchcount, matches)$/;"	f
expand_emenu	src/menu.c	/^static int		expand_emenu;	\/* TRUE for ":emenu" command *\/$/;"	v	file:
expand_env	src/misc1.c	/^expand_env(src, dst, dstlen)$/;"	f
expand_env_esc	src/misc1.c	/^expand_env_esc(srcp, dst, dstlen, esc, one, startstr)$/;"	f
expand_env_save	src/misc1.c	/^expand_env_save(src)$/;"	f
expand_env_save_opt	src/misc1.c	/^expand_env_save_opt(src, one)$/;"	f
expand_filename	src/ex_docmd.c	/^expand_filename(eap, cmdlinep, errormsgp)$/;"	f
expand_in_path	src/misc1.c	/^expand_in_path(gap, pattern, flags)$/;"	f	file:
expand_in_path	src/misc1.c	/^static int expand_in_path __ARGS((garray_T *gap, char_u	*pattern, int flags));$/;"	p	file:	signature:(garray_T *gap, char_u *pattern, int flags)
expand_isabbrev	src/getchar.c	/^static int	expand_isabbrev = 0;$/;"	v	file:
expand_mapmodes	src/getchar.c	/^static int	expand_mapmodes = 0;$/;"	v	file:
expand_menu	src/menu.c	/^static vimmenu_T	*expand_menu = NULL;$/;"	v	file:
expand_modes	src/menu.c	/^static int		expand_modes = 0x0;$/;"	v	file:
expand_option_flags	src/option.c	/^static int expand_option_flags = 0;$/;"	v	file:
expand_option_idx	src/option.c	/^static int expand_option_idx = -1;$/;"	v	file:
expand_option_name	src/option.c	/^static char_u expand_option_name[5] = {'t', '_', NUL, NUL, NUL};$/;"	v	file:
expand_path_option	src/misc1.c	/^expand_path_option(curdir, gap)$/;"	f	file:
expand_path_option	src/misc1.c	/^static void expand_path_option __ARGS((char_u *curdir, garray_T	*gap));$/;"	p	file:	signature:(char_u *curdir, garray_T *gap)
expand_section	src/os_riscos.c	/^expand_section(gap, root, rest, flags)$/;"	f
expand_sfile	src/ex_docmd.c	/^expand_sfile(arg)$/;"	f
expand_shellcmd	src/ex_getln.c	/^expand_shellcmd(filepat, num_file, file, flagsarg)$/;"	f	file:
expand_shellcmd	src/ex_getln.c	/^static int	expand_shellcmd __ARGS((char_u *filepat, int *num_file, char_u ***file, int flagsarg));$/;"	p	file:	signature:(char_u *filepat, int *num_file, char_u ***file, int flagsarg)
expand_showtail	src/ex_getln.c	/^expand_showtail(xp)$/;"	f	file:
expand_showtail	src/ex_getln.c	/^static int	expand_showtail __ARGS((expand_T *xp));$/;"	p	file:	signature:(expand_T *xp)
expand_spelling	src/spell.c	/^expand_spelling(lnum, pat, matchp)$/;"	f
expand_tag_fname	src/tag.c	/^expand_tag_fname(fname, tag_fname, expand)$/;"	f	file:
expand_tag_fname	src/tag.c	/^static char_u *expand_tag_fname __ARGS((char_u *fname, char_u *tag_fname, int expand));$/;"	p	file:	signature:(char_u *fname, char_u *tag_fname, int expand)
expand_tags	src/tag.c	/^expand_tags(tagnames, pat, num_file, file)$/;"	f
expand_what	src/ex_cmds.c	/^} expand_what;$/;"	v	typeref:enum:__anon67	file:
expand_what	src/if_cscope.c	/^} expand_what;$/;"	v	typeref:enum:__anon111	file:
expand_what	src/syntax.c	/^} expand_what;$/;"	v	typeref:enum:__anon83	file:
expand_wildcards	src/misc1.c	/^expand_wildcards(num_pat, pat, num_file, file, flags)$/;"	f
expand_wildcards_eval	src/misc1.c	/^expand_wildcards_eval(pat, num_file, file, flags)$/;"	f
expected	src/testdir/test49.vim	/^    let expected = ""$/;"	v
expected	src/testdir/test49.vim	/^    let expected = "E1T1E2T2S3(3)S4(5s)S4(7t)T4U6(1)U6(2)U9(4)U9(5t)T9T10"$/;"	v
expected	src/testdir/test49.vim	/^    let expected = "F1T1F2T2T3G4T4G5T5"$/;"	v
expected	src/testdir/test49.vim	/^    let expected = "G1EF1E(1)F1E(2)F1E(3)G2EF2E(1)G3IF3I(1)G4TF4T(1)G5AF5A(1)"$/;"	v
expected	src/testdir/test49.vim	/^    let expected = "T1T2T3T4T5"$/;"	v
expected	src/testdir/test49.vim	/^    let expected = 8 + 16 + 32 + 64 + 128 + 256$/;"	v
expected	src/testdir/test49.vim	/^let expected = "E1E2E3E4E5E6E7E8E9E10"$/;"	v
expected	src/testdir/test49.vim	/^let expected = 16  + 256 + 1024 + 16384 + 0   + 0   + 2097152 + 8388608$/;"	v
expected	src/testdir/test49.vim	/^let expected = expected + 33554432 + 134217728$/;"	v
expose_event	src/gui_gtk_x11.c	/^expose_event(GtkWidget *widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GdkEventExpose *event, gpointer data UNUSED)
expr_line	src/ops.c	/^static char_u	*expr_line = NULL;$/;"	v	file:
expr_result	src/os_mswin.c	/^    int		expr_result;	\/* 0 for REPLY, 1 for RESULT 2 for error *\/$/;"	m	struct:__anon20	file:	access:public
exprcmd	src/if_tcl.c	/^exprcmd(dummy, interp, objc, objv)$/;"	f	file:
exptype_T	src/eval.c	/^} exptype_T;$/;"	t	typeref:enum:__anon143	file:
extended	src/os_vms.c	/^    int		extended;$/;"	m	struct:__anon75	file:	access:public
extra_char	src/structs.h	/^    int		extra_char;	\/* yet another character (optional) *\/$/;"	m	struct:cmdarg_S	access:public
extra_patches	src/version.c	/^static char *(extra_patches[]) =$/;"	v	file:
extra_shell_arg	src/os_unix.c	/^static char_u	*extra_shell_arg = NULL;$/;"	v	file:
extract_exn_message	src/if_mzsch.c	/^extract_exn_message(Scheme_Object *v)$/;"	f	file:	signature:(Scheme_Object *v)
extract_exn_message	src/if_mzsch.c	/^static Scheme_Object *extract_exn_message(Scheme_Object *v);$/;"	p	file:	signature:(Scheme_Object *v)
extract_modifiers	src/misc2.c	/^extract_modifiers(key, modp)$/;"	f
f	runtime/macros/less.vim	/^map f <Space>$/;"	m
f	src/hangulin.c	/^static int f=F_NULL, m=M_NULL, l=L_NULL;$/;"	v	file:
fAnsiKey	src/os_win32.c	/^    BOOL    fAnsiKey;$/;"	m	struct:__anon89	file:	access:public
f_abs	src/eval.c	/^f_abs(argvars, rettv)$/;"	f	file:
f_abs	src/eval.c	/^static void f_abs __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_acos	src/eval.c	/^f_acos(argvars, rettv)$/;"	f	file:
f_acos	src/eval.c	/^static void f_acos __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_add	src/eval.c	/^f_add(argvars, rettv)$/;"	f	file:
f_add	src/eval.c	/^static void f_add __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_append	src/eval.c	/^f_append(argvars, rettv)$/;"	f	file:
f_append	src/eval.c	/^static void f_append __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_argc	src/eval.c	/^f_argc(argvars, rettv)$/;"	f	file:
f_argc	src/eval.c	/^static void f_argc __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_argidx	src/eval.c	/^f_argidx(argvars, rettv)$/;"	f	file:
f_argidx	src/eval.c	/^static void f_argidx __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_argv	src/eval.c	/^f_argv(argvars, rettv)$/;"	f	file:
f_argv	src/eval.c	/^static void f_argv __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_asin	src/eval.c	/^f_asin(argvars, rettv)$/;"	f	file:
f_asin	src/eval.c	/^static void f_asin __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_atan	src/eval.c	/^f_atan(argvars, rettv)$/;"	f	file:
f_atan	src/eval.c	/^static void f_atan __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_atan2	src/eval.c	/^f_atan2(argvars, rettv)$/;"	f	file:
f_atan2	src/eval.c	/^static void f_atan2 __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_browse	src/eval.c	/^f_browse(argvars, rettv)$/;"	f	file:
f_browse	src/eval.c	/^static void f_browse __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_browsedir	src/eval.c	/^f_browsedir(argvars, rettv)$/;"	f	file:
f_browsedir	src/eval.c	/^static void f_browsedir __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_bufexists	src/eval.c	/^f_bufexists(argvars, rettv)$/;"	f	file:
f_bufexists	src/eval.c	/^static void f_bufexists __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_buflisted	src/eval.c	/^f_buflisted(argvars, rettv)$/;"	f	file:
f_buflisted	src/eval.c	/^static void f_buflisted __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_bufloaded	src/eval.c	/^f_bufloaded(argvars, rettv)$/;"	f	file:
f_bufloaded	src/eval.c	/^static void f_bufloaded __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_bufname	src/eval.c	/^f_bufname(argvars, rettv)$/;"	f	file:
f_bufname	src/eval.c	/^static void f_bufname __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_bufnr	src/eval.c	/^f_bufnr(argvars, rettv)$/;"	f	file:
f_bufnr	src/eval.c	/^static void f_bufnr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_bufwinnr	src/eval.c	/^f_bufwinnr(argvars, rettv)$/;"	f	file:
f_bufwinnr	src/eval.c	/^static void f_bufwinnr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_byte2line	src/eval.c	/^f_byte2line(argvars, rettv)$/;"	f	file:
f_byte2line	src/eval.c	/^static void f_byte2line __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_byteidx	src/eval.c	/^f_byteidx(argvars, rettv)$/;"	f	file:
f_byteidx	src/eval.c	/^static void f_byteidx __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_call	src/eval.c	/^f_call(argvars, rettv)$/;"	f	file:
f_call	src/eval.c	/^static void f_call __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_ceil	src/eval.c	/^f_ceil(argvars, rettv)$/;"	f	file:
f_ceil	src/eval.c	/^static void f_ceil __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_changenr	src/eval.c	/^f_changenr(argvars, rettv)$/;"	f	file:
f_changenr	src/eval.c	/^static void f_changenr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_char2nr	src/eval.c	/^f_char2nr(argvars, rettv)$/;"	f	file:
f_char2nr	src/eval.c	/^static void f_char2nr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_cindent	src/eval.c	/^f_cindent(argvars, rettv)$/;"	f	file:
f_cindent	src/eval.c	/^static void f_cindent __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_clearmatches	src/eval.c	/^f_clearmatches(argvars, rettv)$/;"	f	file:
f_clearmatches	src/eval.c	/^static void f_clearmatches __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_col	src/eval.c	/^f_col(argvars, rettv)$/;"	f	file:
f_col	src/eval.c	/^static void f_col __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_complete	src/eval.c	/^f_complete(argvars, rettv)$/;"	f	file:
f_complete	src/eval.c	/^static void f_complete __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_complete_add	src/eval.c	/^f_complete_add(argvars, rettv)$/;"	f	file:
f_complete_add	src/eval.c	/^static void f_complete_add __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_complete_check	src/eval.c	/^f_complete_check(argvars, rettv)$/;"	f	file:
f_complete_check	src/eval.c	/^static void f_complete_check __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_confirm	src/eval.c	/^f_confirm(argvars, rettv)$/;"	f	file:
f_confirm	src/eval.c	/^static void f_confirm __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_copy	src/eval.c	/^f_copy(argvars, rettv)$/;"	f	file:
f_copy	src/eval.c	/^static void f_copy __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_cos	src/eval.c	/^f_cos(argvars, rettv)$/;"	f	file:
f_cos	src/eval.c	/^static void f_cos __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_cosh	src/eval.c	/^f_cosh(argvars, rettv)$/;"	f	file:
f_cosh	src/eval.c	/^static void f_cosh __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_count	src/eval.c	/^f_count(argvars, rettv)$/;"	f	file:
f_count	src/eval.c	/^static void f_count __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_cscope_connection	src/eval.c	/^f_cscope_connection(argvars, rettv)$/;"	f	file:
f_cscope_connection	src/eval.c	/^static void f_cscope_connection __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_cursor	src/eval.c	/^f_cursor(argvars, rettv)$/;"	f	file:
f_cursor	src/eval.c	/^static void f_cursor __ARGS((typval_T *argsvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argsvars, typval_T *rettv)
f_deepcopy	src/eval.c	/^f_deepcopy(argvars, rettv)$/;"	f	file:
f_deepcopy	src/eval.c	/^static void f_deepcopy __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_delete	src/eval.c	/^f_delete(argvars, rettv)$/;"	f	file:
f_delete	src/eval.c	/^static void f_delete __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_did_filetype	src/eval.c	/^f_did_filetype(argvars, rettv)$/;"	f	file:
f_did_filetype	src/eval.c	/^static void f_did_filetype __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_diff_filler	src/eval.c	/^f_diff_filler(argvars, rettv)$/;"	f	file:
f_diff_filler	src/eval.c	/^static void f_diff_filler __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_diff_hlID	src/eval.c	/^f_diff_hlID(argvars, rettv)$/;"	f	file:
f_diff_hlID	src/eval.c	/^static void f_diff_hlID __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_empty	src/eval.c	/^f_empty(argvars, rettv)$/;"	f	file:
f_empty	src/eval.c	/^static void f_empty __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_escape	src/eval.c	/^f_escape(argvars, rettv)$/;"	f	file:
f_escape	src/eval.c	/^static void f_escape __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_eval	src/eval.c	/^f_eval(argvars, rettv)$/;"	f	file:
f_eval	src/eval.c	/^static void f_eval __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_eventhandler	src/eval.c	/^f_eventhandler(argvars, rettv)$/;"	f	file:
f_eventhandler	src/eval.c	/^static void f_eventhandler __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_executable	src/eval.c	/^f_executable(argvars, rettv)$/;"	f	file:
f_executable	src/eval.c	/^static void f_executable __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_exists	src/eval.c	/^f_exists(argvars, rettv)$/;"	f	file:
f_exists	src/eval.c	/^static void f_exists __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_exp	src/eval.c	/^f_exp(argvars, rettv)$/;"	f	file:
f_exp	src/eval.c	/^static void f_exp __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_expand	src/eval.c	/^f_expand(argvars, rettv)$/;"	f	file:
f_expand	src/eval.c	/^static void f_expand __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_extend	src/eval.c	/^f_extend(argvars, rettv)$/;"	f	file:
f_extend	src/eval.c	/^static void f_extend __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_feedkeys	src/eval.c	/^f_feedkeys(argvars, rettv)$/;"	f	file:
f_feedkeys	src/eval.c	/^static void f_feedkeys __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_filereadable	src/eval.c	/^f_filereadable(argvars, rettv)$/;"	f	file:
f_filereadable	src/eval.c	/^static void f_filereadable __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_filewritable	src/eval.c	/^f_filewritable(argvars, rettv)$/;"	f	file:
f_filewritable	src/eval.c	/^static void f_filewritable __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_filter	src/eval.c	/^f_filter(argvars, rettv)$/;"	f	file:
f_filter	src/eval.c	/^static void f_filter __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_finddir	src/eval.c	/^f_finddir(argvars, rettv)$/;"	f	file:
f_finddir	src/eval.c	/^static void f_finddir __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_findfile	src/eval.c	/^f_findfile(argvars, rettv)$/;"	f	file:
f_findfile	src/eval.c	/^static void f_findfile __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_float2nr	src/eval.c	/^f_float2nr(argvars, rettv)$/;"	f	file:
f_float2nr	src/eval.c	/^static void f_float2nr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_floor	src/eval.c	/^f_floor(argvars, rettv)$/;"	f	file:
f_floor	src/eval.c	/^static void f_floor __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_fmod	src/eval.c	/^f_fmod(argvars, rettv)$/;"	f	file:
f_fmod	src/eval.c	/^static void f_fmod __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_fnameescape	src/eval.c	/^f_fnameescape(argvars, rettv)$/;"	f	file:
f_fnameescape	src/eval.c	/^static void f_fnameescape __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_fnamemodify	src/eval.c	/^f_fnamemodify(argvars, rettv)$/;"	f	file:
f_fnamemodify	src/eval.c	/^static void f_fnamemodify __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_foldclosed	src/eval.c	/^f_foldclosed(argvars, rettv)$/;"	f	file:
f_foldclosed	src/eval.c	/^static void f_foldclosed __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_foldclosedend	src/eval.c	/^f_foldclosedend(argvars, rettv)$/;"	f	file:
f_foldclosedend	src/eval.c	/^static void f_foldclosedend __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_foldlevel	src/eval.c	/^f_foldlevel(argvars, rettv)$/;"	f	file:
f_foldlevel	src/eval.c	/^static void f_foldlevel __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_foldtext	src/eval.c	/^f_foldtext(argvars, rettv)$/;"	f	file:
f_foldtext	src/eval.c	/^static void f_foldtext __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_foldtextresult	src/eval.c	/^f_foldtextresult(argvars, rettv)$/;"	f	file:
f_foldtextresult	src/eval.c	/^static void f_foldtextresult __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_foreground	src/eval.c	/^f_foreground(argvars, rettv)$/;"	f	file:
f_foreground	src/eval.c	/^static void f_foreground __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_func	src/eval.c	/^    void	(*f_func) __ARGS((typval_T *args, typval_T *rvar));$/;"	m	struct:fst	file:	access:public
f_function	src/eval.c	/^f_function(argvars, rettv)$/;"	f	file:
f_function	src/eval.c	/^static void f_function __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_garbagecollect	src/eval.c	/^f_garbagecollect(argvars, rettv)$/;"	f	file:
f_garbagecollect	src/eval.c	/^static void f_garbagecollect __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_get	src/eval.c	/^f_get(argvars, rettv)$/;"	f	file:
f_get	src/eval.c	/^static void f_get __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getbufline	src/eval.c	/^f_getbufline(argvars, rettv)$/;"	f	file:
f_getbufline	src/eval.c	/^static void f_getbufline __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getbufvar	src/eval.c	/^f_getbufvar(argvars, rettv)$/;"	f	file:
f_getbufvar	src/eval.c	/^static void f_getbufvar __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getchar	src/eval.c	/^f_getchar(argvars, rettv)$/;"	f	file:
f_getchar	src/eval.c	/^static void f_getchar __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getcharmod	src/eval.c	/^f_getcharmod(argvars, rettv)$/;"	f	file:
f_getcharmod	src/eval.c	/^static void f_getcharmod __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getcmdline	src/eval.c	/^f_getcmdline(argvars, rettv)$/;"	f	file:
f_getcmdline	src/eval.c	/^static void f_getcmdline __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getcmdpos	src/eval.c	/^f_getcmdpos(argvars, rettv)$/;"	f	file:
f_getcmdpos	src/eval.c	/^static void f_getcmdpos __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getcmdtype	src/eval.c	/^f_getcmdtype(argvars, rettv)$/;"	f	file:
f_getcmdtype	src/eval.c	/^static void f_getcmdtype __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getcwd	src/eval.c	/^f_getcwd(argvars, rettv)$/;"	f	file:
f_getcwd	src/eval.c	/^static void f_getcwd __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getfontname	src/eval.c	/^f_getfontname(argvars, rettv)$/;"	f	file:
f_getfontname	src/eval.c	/^static void f_getfontname __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getfperm	src/eval.c	/^f_getfperm(argvars, rettv)$/;"	f	file:
f_getfperm	src/eval.c	/^static void f_getfperm __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getfsize	src/eval.c	/^f_getfsize(argvars, rettv)$/;"	f	file:
f_getfsize	src/eval.c	/^static void f_getfsize __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getftime	src/eval.c	/^f_getftime(argvars, rettv)$/;"	f	file:
f_getftime	src/eval.c	/^static void f_getftime __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getftype	src/eval.c	/^f_getftype(argvars, rettv)$/;"	f	file:
f_getftype	src/eval.c	/^static void f_getftype __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getline	src/eval.c	/^f_getline(argvars, rettv)$/;"	f	file:
f_getline	src/eval.c	/^static void f_getline __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getmatches	src/eval.c	/^f_getmatches(argvars, rettv)$/;"	f	file:
f_getmatches	src/eval.c	/^static void f_getmatches __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getpid	src/eval.c	/^f_getpid(argvars, rettv)$/;"	f	file:
f_getpid	src/eval.c	/^static void f_getpid __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getpos	src/eval.c	/^f_getpos(argvars, rettv)$/;"	f	file:
f_getpos	src/eval.c	/^static void f_getpos __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getqflist	src/eval.c	/^f_getqflist(argvars, rettv)$/;"	f	file:
f_getqflist	src/eval.c	/^static void f_getqflist __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getreg	src/eval.c	/^f_getreg(argvars, rettv)$/;"	f	file:
f_getreg	src/eval.c	/^static void f_getreg __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getregtype	src/eval.c	/^f_getregtype(argvars, rettv)$/;"	f	file:
f_getregtype	src/eval.c	/^static void f_getregtype __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_gettabvar	src/eval.c	/^f_gettabvar(argvars, rettv)$/;"	f	file:
f_gettabvar	src/eval.c	/^static void f_gettabvar __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_gettabwinvar	src/eval.c	/^f_gettabwinvar(argvars, rettv)$/;"	f	file:
f_gettabwinvar	src/eval.c	/^static void f_gettabwinvar __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getwinposx	src/eval.c	/^f_getwinposx(argvars, rettv)$/;"	f	file:
f_getwinposx	src/eval.c	/^static void f_getwinposx __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getwinposy	src/eval.c	/^f_getwinposy(argvars, rettv)$/;"	f	file:
f_getwinposy	src/eval.c	/^static void f_getwinposy __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_getwinvar	src/eval.c	/^f_getwinvar(argvars, rettv)$/;"	f	file:
f_getwinvar	src/eval.c	/^static void f_getwinvar __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_glob	src/eval.c	/^f_glob(argvars, rettv)$/;"	f	file:
f_glob	src/eval.c	/^static void f_glob __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_globpath	src/eval.c	/^f_globpath(argvars, rettv)$/;"	f	file:
f_globpath	src/eval.c	/^static void f_globpath __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_has	src/eval.c	/^f_has(argvars, rettv)$/;"	f	file:
f_has	src/eval.c	/^static void f_has __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_has_key	src/eval.c	/^f_has_key(argvars, rettv)$/;"	f	file:
f_has_key	src/eval.c	/^static void f_has_key __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_haslocaldir	src/eval.c	/^f_haslocaldir(argvars, rettv)$/;"	f	file:
f_haslocaldir	src/eval.c	/^static void f_haslocaldir __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_hasmapto	src/eval.c	/^f_hasmapto(argvars, rettv)$/;"	f	file:
f_hasmapto	src/eval.c	/^static void f_hasmapto __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_histadd	src/eval.c	/^f_histadd(argvars, rettv)$/;"	f	file:
f_histadd	src/eval.c	/^static void f_histadd __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_histdel	src/eval.c	/^f_histdel(argvars, rettv)$/;"	f	file:
f_histdel	src/eval.c	/^static void f_histdel __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_histget	src/eval.c	/^f_histget(argvars, rettv)$/;"	f	file:
f_histget	src/eval.c	/^static void f_histget __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_histnr	src/eval.c	/^f_histnr(argvars, rettv)$/;"	f	file:
f_histnr	src/eval.c	/^static void f_histnr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_hlID	src/eval.c	/^f_hlID(argvars, rettv)$/;"	f	file:
f_hlID	src/eval.c	/^static void f_hlID __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_hlexists	src/eval.c	/^f_hlexists(argvars, rettv)$/;"	f	file:
f_hlexists	src/eval.c	/^static void f_hlexists __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_hostname	src/eval.c	/^f_hostname(argvars, rettv)$/;"	f	file:
f_hostname	src/eval.c	/^static void f_hostname __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_iconv	src/eval.c	/^f_iconv(argvars, rettv)$/;"	f	file:
f_iconv	src/eval.c	/^static void f_iconv __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_indent	src/eval.c	/^f_indent(argvars, rettv)$/;"	f	file:
f_indent	src/eval.c	/^static void f_indent __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_index	src/eval.c	/^f_index(argvars, rettv)$/;"	f	file:
f_index	src/eval.c	/^static void f_index __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_input	src/eval.c	/^f_input(argvars, rettv)$/;"	f	file:
f_input	src/eval.c	/^static void f_input __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_inputdialog	src/eval.c	/^f_inputdialog(argvars, rettv)$/;"	f	file:
f_inputdialog	src/eval.c	/^static void f_inputdialog __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_inputlist	src/eval.c	/^f_inputlist(argvars, rettv)$/;"	f	file:
f_inputlist	src/eval.c	/^static void f_inputlist __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_inputrestore	src/eval.c	/^f_inputrestore(argvars, rettv)$/;"	f	file:
f_inputrestore	src/eval.c	/^static void f_inputrestore __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_inputsave	src/eval.c	/^f_inputsave(argvars, rettv)$/;"	f	file:
f_inputsave	src/eval.c	/^static void f_inputsave __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_inputsecret	src/eval.c	/^f_inputsecret(argvars, rettv)$/;"	f	file:
f_inputsecret	src/eval.c	/^static void f_inputsecret __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_insert	src/eval.c	/^f_insert(argvars, rettv)$/;"	f	file:
f_insert	src/eval.c	/^static void f_insert __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_isdirectory	src/eval.c	/^f_isdirectory(argvars, rettv)$/;"	f	file:
f_isdirectory	src/eval.c	/^static void f_isdirectory __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_islocked	src/eval.c	/^f_islocked(argvars, rettv)$/;"	f	file:
f_islocked	src/eval.c	/^static void f_islocked __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_items	src/eval.c	/^f_items(argvars, rettv)$/;"	f	file:
f_items	src/eval.c	/^static void f_items __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_join	src/eval.c	/^f_join(argvars, rettv)$/;"	f	file:
f_join	src/eval.c	/^static void f_join __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_keys	src/eval.c	/^f_keys(argvars, rettv)$/;"	f	file:
f_keys	src/eval.c	/^static void f_keys __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_last_buffer_nr	src/eval.c	/^f_last_buffer_nr(argvars, rettv)$/;"	f	file:
f_last_buffer_nr	src/eval.c	/^static void f_last_buffer_nr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_len	src/eval.c	/^f_len(argvars, rettv)$/;"	f	file:
f_len	src/eval.c	/^static void f_len __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_libcall	src/eval.c	/^f_libcall(argvars, rettv)$/;"	f	file:
f_libcall	src/eval.c	/^static void f_libcall __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_libcallnr	src/eval.c	/^f_libcallnr(argvars, rettv)$/;"	f	file:
f_libcallnr	src/eval.c	/^static void f_libcallnr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_line	src/eval.c	/^f_line(argvars, rettv)$/;"	f	file:
f_line	src/eval.c	/^static void f_line __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_line2byte	src/eval.c	/^f_line2byte(argvars, rettv)$/;"	f	file:
f_line2byte	src/eval.c	/^static void f_line2byte __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_lispindent	src/eval.c	/^f_lispindent(argvars, rettv)$/;"	f	file:
f_lispindent	src/eval.c	/^static void f_lispindent __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_localtime	src/eval.c	/^f_localtime(argvars, rettv)$/;"	f	file:
f_localtime	src/eval.c	/^static void f_localtime __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_log	src/eval.c	/^f_log(argvars, rettv)$/;"	f	file:
f_log	src/eval.c	/^static void f_log __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_log10	src/eval.c	/^f_log10(argvars, rettv)$/;"	f	file:
f_log10	src/eval.c	/^static void f_log10 __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_map	src/eval.c	/^f_map(argvars, rettv)$/;"	f	file:
f_map	src/eval.c	/^static void f_map __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_maparg	src/eval.c	/^f_maparg(argvars, rettv)$/;"	f	file:
f_maparg	src/eval.c	/^static void f_maparg __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_mapcheck	src/eval.c	/^f_mapcheck(argvars, rettv)$/;"	f	file:
f_mapcheck	src/eval.c	/^static void f_mapcheck __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_match	src/eval.c	/^f_match(argvars, rettv)$/;"	f	file:
f_match	src/eval.c	/^static void f_match __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_matchadd	src/eval.c	/^f_matchadd(argvars, rettv)$/;"	f	file:
f_matchadd	src/eval.c	/^static void f_matchadd __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_matcharg	src/eval.c	/^f_matcharg(argvars, rettv)$/;"	f	file:
f_matcharg	src/eval.c	/^static void f_matcharg __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_matchdelete	src/eval.c	/^f_matchdelete(argvars, rettv)$/;"	f	file:
f_matchdelete	src/eval.c	/^static void f_matchdelete __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_matchend	src/eval.c	/^f_matchend(argvars, rettv)$/;"	f	file:
f_matchend	src/eval.c	/^static void f_matchend __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_matchlist	src/eval.c	/^f_matchlist(argvars, rettv)$/;"	f	file:
f_matchlist	src/eval.c	/^static void f_matchlist __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_matchstr	src/eval.c	/^f_matchstr(argvars, rettv)$/;"	f	file:
f_matchstr	src/eval.c	/^static void f_matchstr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_max	src/eval.c	/^f_max(argvars, rettv)$/;"	f	file:
f_max	src/eval.c	/^static void f_max __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_max_argc	src/eval.c	/^    char	f_max_argc;	\/* maximal number of arguments *\/$/;"	m	struct:fst	file:	access:public
f_min	src/eval.c	/^f_min(argvars, rettv)$/;"	f	file:
f_min	src/eval.c	/^static void f_min __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_min_argc	src/eval.c	/^    char	f_min_argc;	\/* minimal number of arguments *\/$/;"	m	struct:fst	file:	access:public
f_mkdir	src/eval.c	/^f_mkdir(argvars, rettv)$/;"	f	file:
f_mkdir	src/eval.c	/^static void f_mkdir __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_mode	src/eval.c	/^f_mode(argvars, rettv)$/;"	f	file:
f_mode	src/eval.c	/^static void f_mode __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_mzeval	src/eval.c	/^f_mzeval(argvars, rettv)$/;"	f	file:
f_mzeval	src/eval.c	/^static void f_mzeval __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_name	src/eval.c	/^    char	*f_name;	\/* function name *\/$/;"	m	struct:fst	file:	access:public
f_nextnonblank	src/eval.c	/^f_nextnonblank(argvars, rettv)$/;"	f	file:
f_nextnonblank	src/eval.c	/^static void f_nextnonblank __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_nr2char	src/eval.c	/^f_nr2char(argvars, rettv)$/;"	f	file:
f_nr2char	src/eval.c	/^static void f_nr2char __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_p	src/if_ruby.c	/^static VALUE f_p(int argc, VALUE *argv, VALUE self UNUSED)$/;"	f	file:	signature:(int argc, VALUE *argv, VALUE self UNUSED)
f_pathshorten	src/eval.c	/^f_pathshorten(argvars, rettv)$/;"	f	file:
f_pathshorten	src/eval.c	/^static void f_pathshorten __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_pow	src/eval.c	/^f_pow(argvars, rettv)$/;"	f	file:
f_pow	src/eval.c	/^static void f_pow __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_prevnonblank	src/eval.c	/^f_prevnonblank(argvars, rettv)$/;"	f	file:
f_prevnonblank	src/eval.c	/^static void f_prevnonblank __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_printf	src/eval.c	/^f_printf(argvars, rettv)$/;"	f	file:
f_printf	src/eval.c	/^static void f_printf __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_pumvisible	src/eval.c	/^f_pumvisible(argvars, rettv)$/;"	f	file:
f_pumvisible	src/eval.c	/^static void f_pumvisible __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_range	src/eval.c	/^f_range(argvars, rettv)$/;"	f	file:
f_range	src/eval.c	/^static void f_range __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_readfile	src/eval.c	/^f_readfile(argvars, rettv)$/;"	f	file:
f_readfile	src/eval.c	/^static void f_readfile __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_reltime	src/eval.c	/^f_reltime(argvars, rettv)$/;"	f	file:
f_reltime	src/eval.c	/^static void f_reltime __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_reltimestr	src/eval.c	/^f_reltimestr(argvars, rettv)$/;"	f	file:
f_reltimestr	src/eval.c	/^static void f_reltimestr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_remote_expr	src/eval.c	/^f_remote_expr(argvars, rettv)$/;"	f	file:
f_remote_expr	src/eval.c	/^static void f_remote_expr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_remote_foreground	src/eval.c	/^f_remote_foreground(argvars, rettv)$/;"	f	file:
f_remote_foreground	src/eval.c	/^static void f_remote_foreground __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_remote_peek	src/eval.c	/^f_remote_peek(argvars, rettv)$/;"	f	file:
f_remote_peek	src/eval.c	/^static void f_remote_peek __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_remote_read	src/eval.c	/^f_remote_read(argvars, rettv)$/;"	f	file:
f_remote_read	src/eval.c	/^static void f_remote_read __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_remote_send	src/eval.c	/^f_remote_send(argvars, rettv)$/;"	f	file:
f_remote_send	src/eval.c	/^static void f_remote_send __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_remove	src/eval.c	/^f_remove(argvars, rettv)$/;"	f	file:
f_remove	src/eval.c	/^static void f_remove __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_rename	src/eval.c	/^f_rename(argvars, rettv)$/;"	f	file:
f_rename	src/eval.c	/^static void f_rename __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_repeat	src/eval.c	/^f_repeat(argvars, rettv)$/;"	f	file:
f_repeat	src/eval.c	/^static void f_repeat __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_resolve	src/eval.c	/^f_resolve(argvars, rettv)$/;"	f	file:
f_resolve	src/eval.c	/^static void f_resolve __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_reverse	src/eval.c	/^f_reverse(argvars, rettv)$/;"	f	file:
f_reverse	src/eval.c	/^static void f_reverse __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_round	src/eval.c	/^f_round(argvars, rettv)$/;"	f	file:
f_round	src/eval.c	/^static void f_round __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_search	src/eval.c	/^f_search(argvars, rettv)$/;"	f	file:
f_search	src/eval.c	/^static void f_search __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_searchdecl	src/eval.c	/^f_searchdecl(argvars, rettv)$/;"	f	file:
f_searchdecl	src/eval.c	/^static void f_searchdecl __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_searchpair	src/eval.c	/^f_searchpair(argvars, rettv)$/;"	f	file:
f_searchpair	src/eval.c	/^static void f_searchpair __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_searchpairpos	src/eval.c	/^f_searchpairpos(argvars, rettv)$/;"	f	file:
f_searchpairpos	src/eval.c	/^static void f_searchpairpos __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_searchpos	src/eval.c	/^f_searchpos(argvars, rettv)$/;"	f	file:
f_searchpos	src/eval.c	/^static void f_searchpos __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_server2client	src/eval.c	/^f_server2client(argvars, rettv)$/;"	f	file:
f_server2client	src/eval.c	/^static void f_server2client __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_serverlist	src/eval.c	/^f_serverlist(argvars, rettv)$/;"	f	file:
f_serverlist	src/eval.c	/^static void f_serverlist __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_setbufvar	src/eval.c	/^f_setbufvar(argvars, rettv)$/;"	f	file:
f_setbufvar	src/eval.c	/^static void f_setbufvar __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_setcmdpos	src/eval.c	/^f_setcmdpos(argvars, rettv)$/;"	f	file:
f_setcmdpos	src/eval.c	/^static void f_setcmdpos __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_setline	src/eval.c	/^f_setline(argvars, rettv)$/;"	f	file:
f_setline	src/eval.c	/^static void f_setline __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_setloclist	src/eval.c	/^f_setloclist(argvars, rettv)$/;"	f	file:
f_setloclist	src/eval.c	/^static void f_setloclist __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_setmatches	src/eval.c	/^f_setmatches(argvars, rettv)$/;"	f	file:
f_setmatches	src/eval.c	/^static void f_setmatches __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_setpos	src/eval.c	/^f_setpos(argvars, rettv)$/;"	f	file:
f_setpos	src/eval.c	/^static void f_setpos __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_setqflist	src/eval.c	/^f_setqflist(argvars, rettv)$/;"	f	file:
f_setqflist	src/eval.c	/^static void f_setqflist __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_setreg	src/eval.c	/^f_setreg(argvars, rettv)$/;"	f	file:
f_setreg	src/eval.c	/^static void f_setreg __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_settabvar	src/eval.c	/^f_settabvar(argvars, rettv)$/;"	f	file:
f_settabvar	src/eval.c	/^static void f_settabvar __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_settabwinvar	src/eval.c	/^f_settabwinvar(argvars, rettv)$/;"	f	file:
f_settabwinvar	src/eval.c	/^static void f_settabwinvar __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_setwinvar	src/eval.c	/^f_setwinvar(argvars, rettv)$/;"	f	file:
f_setwinvar	src/eval.c	/^static void f_setwinvar __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_shellescape	src/eval.c	/^f_shellescape(argvars, rettv)$/;"	f	file:
f_shellescape	src/eval.c	/^static void f_shellescape __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_simplify	src/eval.c	/^f_simplify(argvars, rettv)$/;"	f	file:
f_simplify	src/eval.c	/^static void f_simplify __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_sin	src/eval.c	/^f_sin(argvars, rettv)$/;"	f	file:
f_sin	src/eval.c	/^static void f_sin __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_sinh	src/eval.c	/^f_sinh(argvars, rettv)$/;"	f	file:
f_sinh	src/eval.c	/^static void f_sinh __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_sort	src/eval.c	/^f_sort(argvars, rettv)$/;"	f	file:
f_sort	src/eval.c	/^static void f_sort __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_soundfold	src/eval.c	/^f_soundfold(argvars, rettv)$/;"	f	file:
f_soundfold	src/eval.c	/^static void f_soundfold __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_spellbadword	src/eval.c	/^f_spellbadword(argvars, rettv)$/;"	f	file:
f_spellbadword	src/eval.c	/^static void f_spellbadword __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_spellsuggest	src/eval.c	/^f_spellsuggest(argvars, rettv)$/;"	f	file:
f_spellsuggest	src/eval.c	/^static void f_spellsuggest __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_split	src/eval.c	/^f_split(argvars, rettv)$/;"	f	file:
f_split	src/eval.c	/^static void f_split __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_sqrt	src/eval.c	/^f_sqrt(argvars, rettv)$/;"	f	file:
f_sqrt	src/eval.c	/^static void f_sqrt __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_str2float	src/eval.c	/^f_str2float(argvars, rettv)$/;"	f	file:
f_str2float	src/eval.c	/^static void f_str2float __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_str2nr	src/eval.c	/^f_str2nr(argvars, rettv)$/;"	f	file:
f_str2nr	src/eval.c	/^static void f_str2nr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_strchars	src/eval.c	/^f_strchars(argvars, rettv)$/;"	f	file:
f_strchars	src/eval.c	/^static void f_strchars __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_strdisplaywidth	src/eval.c	/^f_strdisplaywidth(argvars, rettv)$/;"	f	file:
f_strdisplaywidth	src/eval.c	/^static void f_strdisplaywidth __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_strftime	src/eval.c	/^f_strftime(argvars, rettv)$/;"	f	file:
f_strftime	src/eval.c	/^static void f_strftime __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_stridx	src/eval.c	/^f_stridx(argvars, rettv)$/;"	f	file:
f_stridx	src/eval.c	/^static void f_stridx __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_string	src/eval.c	/^f_string(argvars, rettv)$/;"	f	file:
f_string	src/eval.c	/^static void f_string __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_strlen	src/eval.c	/^f_strlen(argvars, rettv)$/;"	f	file:
f_strlen	src/eval.c	/^static void f_strlen __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_strpart	src/eval.c	/^f_strpart(argvars, rettv)$/;"	f	file:
f_strpart	src/eval.c	/^static void f_strpart __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_strridx	src/eval.c	/^f_strridx(argvars, rettv)$/;"	f	file:
f_strridx	src/eval.c	/^static void f_strridx __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_strtrans	src/eval.c	/^f_strtrans(argvars, rettv)$/;"	f	file:
f_strtrans	src/eval.c	/^static void f_strtrans __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_strwidth	src/eval.c	/^f_strwidth(argvars, rettv)$/;"	f	file:
f_strwidth	src/eval.c	/^static void f_strwidth __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_submatch	src/eval.c	/^f_submatch(argvars, rettv)$/;"	f	file:
f_submatch	src/eval.c	/^static void f_submatch __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_substitute	src/eval.c	/^f_substitute(argvars, rettv)$/;"	f	file:
f_substitute	src/eval.c	/^static void f_substitute __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_synID	src/eval.c	/^f_synID(argvars, rettv)$/;"	f	file:
f_synID	src/eval.c	/^static void f_synID __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_synIDattr	src/eval.c	/^f_synIDattr(argvars, rettv)$/;"	f	file:
f_synIDattr	src/eval.c	/^static void f_synIDattr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_synIDtrans	src/eval.c	/^f_synIDtrans(argvars, rettv)$/;"	f	file:
f_synIDtrans	src/eval.c	/^static void f_synIDtrans __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_synconcealed	src/eval.c	/^f_synconcealed(argvars, rettv)$/;"	f	file:
f_synconcealed	src/eval.c	/^static void f_synconcealed __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_synstack	src/eval.c	/^f_synstack(argvars, rettv)$/;"	f	file:
f_synstack	src/eval.c	/^static void f_synstack __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_system	src/eval.c	/^f_system(argvars, rettv)$/;"	f	file:
f_system	src/eval.c	/^static void f_system __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_tabpagebuflist	src/eval.c	/^f_tabpagebuflist(argvars, rettv)$/;"	f	file:
f_tabpagebuflist	src/eval.c	/^static void f_tabpagebuflist __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_tabpagenr	src/eval.c	/^f_tabpagenr(argvars, rettv)$/;"	f	file:
f_tabpagenr	src/eval.c	/^static void f_tabpagenr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_tabpagewinnr	src/eval.c	/^f_tabpagewinnr(argvars, rettv)$/;"	f	file:
f_tabpagewinnr	src/eval.c	/^static void f_tabpagewinnr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_tagfiles	src/eval.c	/^f_tagfiles(argvars, rettv)$/;"	f	file:
f_tagfiles	src/eval.c	/^static void f_tagfiles __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_taglist	src/eval.c	/^f_taglist(argvars, rettv)$/;"	f	file:
f_taglist	src/eval.c	/^static void f_taglist __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_tan	src/eval.c	/^f_tan(argvars, rettv)$/;"	f	file:
f_tan	src/eval.c	/^static void f_tan __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_tanh	src/eval.c	/^f_tanh(argvars, rettv)$/;"	f	file:
f_tanh	src/eval.c	/^static void f_tanh __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_tempname	src/eval.c	/^f_tempname(argvars, rettv)$/;"	f	file:
f_tempname	src/eval.c	/^static void f_tempname __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_test	src/eval.c	/^f_test(argvars, rettv)$/;"	f	file:
f_test	src/eval.c	/^static void f_test __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_tolower	src/eval.c	/^f_tolower(argvars, rettv)$/;"	f	file:
f_tolower	src/eval.c	/^static void f_tolower __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_toupper	src/eval.c	/^f_toupper(argvars, rettv)$/;"	f	file:
f_toupper	src/eval.c	/^static void f_toupper __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_tr	src/eval.c	/^f_tr(argvars, rettv)$/;"	f	file:
f_tr	src/eval.c	/^static void f_tr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_trunc	src/eval.c	/^f_trunc(argvars, rettv)$/;"	f	file:
f_trunc	src/eval.c	/^static void f_trunc __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_type	src/eval.c	/^f_type(argvars, rettv)$/;"	f	file:
f_type	src/eval.c	/^static void f_type __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_undofile	src/eval.c	/^f_undofile(argvars, rettv)$/;"	f	file:
f_undofile	src/eval.c	/^static void f_undofile __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_undotree	src/eval.c	/^f_undotree(argvars, rettv)$/;"	f	file:
f_undotree	src/eval.c	/^static void f_undotree __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_values	src/eval.c	/^f_values(argvars, rettv)$/;"	f	file:
f_values	src/eval.c	/^static void f_values __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_virtcol	src/eval.c	/^f_virtcol(argvars, rettv)$/;"	f	file:
f_virtcol	src/eval.c	/^static void f_virtcol __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_visualmode	src/eval.c	/^f_visualmode(argvars, rettv)$/;"	f	file:
f_visualmode	src/eval.c	/^static void f_visualmode __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_winbufnr	src/eval.c	/^f_winbufnr(argvars, rettv)$/;"	f	file:
f_winbufnr	src/eval.c	/^static void f_winbufnr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_wincol	src/eval.c	/^f_wincol(argvars, rettv)$/;"	f	file:
f_wincol	src/eval.c	/^static void f_wincol __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_winheight	src/eval.c	/^f_winheight(argvars, rettv)$/;"	f	file:
f_winheight	src/eval.c	/^static void f_winheight __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_winline	src/eval.c	/^f_winline(argvars, rettv)$/;"	f	file:
f_winline	src/eval.c	/^static void f_winline __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_winnr	src/eval.c	/^f_winnr(argvars, rettv)$/;"	f	file:
f_winnr	src/eval.c	/^static void f_winnr __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_winrestcmd	src/eval.c	/^f_winrestcmd(argvars, rettv)$/;"	f	file:
f_winrestcmd	src/eval.c	/^static void f_winrestcmd __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_winrestview	src/eval.c	/^f_winrestview(argvars, rettv)$/;"	f	file:
f_winrestview	src/eval.c	/^static void f_winrestview __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_winsaveview	src/eval.c	/^f_winsaveview(argvars, rettv)$/;"	f	file:
f_winsaveview	src/eval.c	/^static void f_winsaveview __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_winwidth	src/eval.c	/^f_winwidth(argvars, rettv)$/;"	f	file:
f_winwidth	src/eval.c	/^static void f_winwidth __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
f_writefile	src/eval.c	/^f_writefile(argvars, rettv)$/;"	f	file:
f_writefile	src/eval.c	/^static void f_writefile __ARGS((typval_T *argvars, typval_T *rettv));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv)
family	src/gui_mac.c	/^    FMFontFamily family;$/;"	m	struct:__anon128	file:	access:public
farsi_fkey	src/farsi.c	/^farsi_fkey(cap)$/;"	f
farsi_text_1	src/farsi.h	/^EXTERN char_u farsi_text_1[]$/;"	v
farsi_text_2	src/farsi.h	/^EXTERN char_u farsi_text_2[]$/;"	v
farsi_text_3	src/farsi.h	/^EXTERN char_u farsi_text_3[]$/;"	v
farsi_text_5	src/farsi.h	/^EXTERN char_u farsi_text_5[]$/;"	v
fast_breakcheck	src/misc1.c	/^fast_breakcheck()$/;"	f
fclose	src/xxd/xxd.c	/^extern int fclose  __P((FILE *));$/;"	p	file:	signature:(FILE *)
fcon	src/hangulin.c	/^fcon(c)$/;"	f	file:
fdDump	src/os_mswin.c	/^FILE* fdDump = NULL;$/;"	v
fdDump	src/os_win16.c	/^FILE* fdDump = NULL;$/;"	v
fdDump	src/os_win32.c	/^FILE* fdDump = NULL;$/;"	v
fd_di	src/eval.c	/^    dictitem_T	*fd_di;		\/* Dictionary item used *\/$/;"	m	struct:__anon142	file:	access:public
fd_dict	src/eval.c	/^    dict_T	*fd_dict;	\/* Dictionary used *\/$/;"	m	struct:__anon142	file:	access:public
fd_flags	src/fold.c	/^    char	fd_flags;	\/* see below *\/$/;"	m	struct:__anon97	file:	access:public
fd_from_sniff	src/if_sniff.c	/^int fd_from_sniff;$/;"	v
fd_len	src/fold.c	/^    linenr_T	fd_len;		\/* number of lines in the fold *\/$/;"	m	struct:__anon97	file:	access:public
fd_nested	src/fold.c	/^    garray_T	fd_nested;	\/* array of nested folds *\/$/;"	m	struct:__anon97	file:	access:public
fd_newkey	src/eval.c	/^    char_u	*fd_newkey;	\/* new key in "dict" in allocated memory *\/$/;"	m	struct:__anon142	file:	access:public
fd_small	src/fold.c	/^    char	fd_small;	\/* TRUE, FALSE or MAYBE: fold smaller than$/;"	m	struct:__anon97	file:	access:public
fd_to_sniff	src/if_sniff.c	/^static int fd_to_sniff;$/;"	v	file:
fd_top	src/fold.c	/^    linenr_T	fd_top;		\/* first line of fold; for nested fold$/;"	m	struct:__anon97	file:	access:public
fdip_search_ctx	src/misc2.c	/^static void	*fdip_search_ctx = NULL;$/;"	v	file:
fdo_flags	src/option.h	/^EXTERN unsigned	fdo_flags;$/;"	v
fdopen	src/xxd/xxd.c	/^FILE   _FAR *_Cdecl _FARFUNC fdopen(int __handle, char _FAR *__type);$/;"	p	file:	signature:(int __handle, char _FAR *__type)
fdtofh	src/memfile.c	/^fdtofh(int filedescriptor)$/;"	f	file:	signature:(int filedescriptor)
features	src/version.c	/^static char *(features[]) =$/;"	v	file:
fex_format	src/ops.c	/^fex_format(lnum, count, c)$/;"	f
ff	src/hardcopy.c	/^    int		ff;		    \/* seen form feed character *\/$/;"	m	struct:__anon126	file:	access:public
ff_check_visited	src/misc2.c	/^ff_check_visited(visited_list, fname$/;"	f	file:
ff_check_visited	src/misc2.c	/^static int ff_check_visited __ARGS((ff_visited_T **, char_u *));$/;"	p	file:	signature:(ff_visited_T **, char_u *)
ff_check_visited	src/misc2.c	/^static int ff_check_visited __ARGS((ff_visited_T **, char_u *, char_u *));$/;"	p	file:	signature:(ff_visited_T **, char_u *, char_u *)
ff_clear	src/misc2.c	/^ff_clear(search_ctx)$/;"	f	file:
ff_clear	src/misc2.c	/^static void ff_clear __ARGS((ff_search_ctx_T *search_ctx));$/;"	p	file:	signature:(ff_search_ctx_T *search_ctx)
ff_create_stack_element	src/misc2.c	/^ff_create_stack_element(fix_part,$/;"	f	file:
ff_create_stack_element	src/misc2.c	/^static ff_stack_T *ff_create_stack_element __ARGS((char_u *, char_u *, int, int));$/;"	p	file:	signature:(char_u *, char_u *, int, int)
ff_create_stack_element	src/misc2.c	/^static ff_stack_T *ff_create_stack_element __ARGS((char_u *, int, int));$/;"	p	file:	signature:(char_u *, int, int)
ff_expand_buffer	src/misc2.c	/^static char_u	*ff_expand_buffer = NULL; \/* used for expanding filenames *\/$/;"	v	file:
ff_file_to_find	src/misc2.c	/^static char_u	*ff_file_to_find = NULL;$/;"	v	file:
ff_free_stack_element	src/misc2.c	/^ff_free_stack_element(stack_ptr)$/;"	f	file:
ff_free_stack_element	src/misc2.c	/^static void ff_free_stack_element __ARGS((ff_stack_T *stack_ptr));$/;"	p	file:	signature:(ff_stack_T *stack_ptr)
ff_free_visited_list	src/misc2.c	/^ff_free_visited_list(vl)$/;"	f	file:
ff_free_visited_list	src/misc2.c	/^static void ff_free_visited_list __ARGS((ff_visited_T *vl));$/;"	p	file:	signature:(ff_visited_T *vl)
ff_get_visited_list	src/misc2.c	/^ff_get_visited_list(filename, list_headp)$/;"	f	file:
ff_get_visited_list	src/misc2.c	/^static ff_visited_list_hdr_T* ff_get_visited_list __ARGS((char_u *, ff_visited_list_hdr_T **list_headp));$/;"	p	file:	signature:(char_u *, ff_visited_list_hdr_T **list_headp)
ff_path_in_stoplist	src/misc2.c	/^ff_path_in_stoplist(path, path_len, stopdirs_v)$/;"	f	file:
ff_path_in_stoplist	src/misc2.c	/^static int ff_path_in_stoplist __ARGS((char_u *, int, char_u **));$/;"	p	file:	signature:(char_u *, int, char_u **)
ff_pop	src/misc2.c	/^ff_pop(search_ctx)$/;"	f	file:
ff_pop	src/misc2.c	/^static ff_stack_T *ff_pop __ARGS((ff_search_ctx_T *search_ctx));$/;"	p	file:	signature:(ff_search_ctx_T *search_ctx)
ff_push	src/misc2.c	/^ff_push(search_ctx, stack_ptr)$/;"	f	file:
ff_push	src/misc2.c	/^static void ff_push __ARGS((ff_search_ctx_T *search_ctx, ff_stack_T *stack_ptr));$/;"	p	file:	signature:(ff_search_ctx_T *search_ctx, ff_stack_T *stack_ptr)
ff_search_ctx_T	src/misc2.c	/^typedef struct ff_search_ctx_T$/;"	s	file:
ff_search_ctx_T	src/misc2.c	/^} ff_search_ctx_T;$/;"	t	typeref:struct:ff_search_ctx_T	file:
ff_search_ctx_T::ffsc_dir_visited_list	src/misc2.c	/^     ff_visited_list_hdr_T	*ffsc_dir_visited_list;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ff_search_ctx_T::ffsc_dir_visited_lists_list	src/misc2.c	/^     ff_visited_list_hdr_T	*ffsc_dir_visited_lists_list;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ff_search_ctx_T::ffsc_file_to_search	src/misc2.c	/^     char_u			*ffsc_file_to_search;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ff_search_ctx_T::ffsc_find_what	src/misc2.c	/^     int			ffsc_find_what;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ff_search_ctx_T::ffsc_fix_path	src/misc2.c	/^     char_u			*ffsc_fix_path;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ff_search_ctx_T::ffsc_level	src/misc2.c	/^     int			ffsc_level;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ff_search_ctx_T::ffsc_stack_ptr	src/misc2.c	/^     ff_stack_T			*ffsc_stack_ptr;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ff_search_ctx_T::ffsc_start_dir	src/misc2.c	/^     char_u			*ffsc_start_dir;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ff_search_ctx_T::ffsc_stopdirs_v	src/misc2.c	/^     char_u			**ffsc_stopdirs_v;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ff_search_ctx_T::ffsc_tagfile	src/misc2.c	/^     int			ffsc_tagfile;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ff_search_ctx_T::ffsc_visited_list	src/misc2.c	/^     ff_visited_list_hdr_T	*ffsc_visited_list;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ff_search_ctx_T::ffsc_visited_lists_list	src/misc2.c	/^     ff_visited_list_hdr_T	*ffsc_visited_lists_list;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ff_search_ctx_T::ffsc_wc_path	src/misc2.c	/^     char_u			*ffsc_wc_path;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ff_stack	src/misc2.c	/^typedef struct ff_stack$/;"	s	file:
ff_stack::ffs_filearray	src/misc2.c	/^    char_u		**ffs_filearray;$/;"	m	struct:ff_stack	file:	access:public
ff_stack::ffs_filearray_cur	src/misc2.c	/^    char_u		ffs_filearray_cur;   \/* needed for partly handled dirs *\/$/;"	m	struct:ff_stack	file:	access:public
ff_stack::ffs_filearray_size	src/misc2.c	/^    int			ffs_filearray_size;$/;"	m	struct:ff_stack	file:	access:public
ff_stack::ffs_fix_path	src/misc2.c	/^    char_u		*ffs_fix_path;$/;"	m	struct:ff_stack	file:	access:public
ff_stack::ffs_level	src/misc2.c	/^    int			ffs_level;$/;"	m	struct:ff_stack	file:	access:public
ff_stack::ffs_prev	src/misc2.c	/^    struct ff_stack	*ffs_prev;$/;"	m	struct:ff_stack	typeref:struct:ff_stack::ff_stack	file:	access:public
ff_stack::ffs_stage	src/misc2.c	/^    int			ffs_stage;$/;"	m	struct:ff_stack	file:	access:public
ff_stack::ffs_star_star_empty	src/misc2.c	/^    int			ffs_star_star_empty;$/;"	m	struct:ff_stack	file:	access:public
ff_stack::ffs_wc_path	src/misc2.c	/^    char_u		*ffs_wc_path;$/;"	m	struct:ff_stack	file:	access:public
ff_stack_T	src/misc2.c	/^} ff_stack_T;$/;"	t	typeref:struct:ff_stack	file:
ff_visited	src/misc2.c	/^typedef struct ff_visited$/;"	s	file:
ff_visited::ffv_dev	src/misc2.c	/^    dev_t		ffv_dev;	\/* device number *\/$/;"	m	struct:ff_visited	file:	access:public
ff_visited::ffv_dev_valid	src/misc2.c	/^    int			ffv_dev_valid;	\/* ffv_dev and ffv_ino were set *\/$/;"	m	struct:ff_visited	file:	access:public
ff_visited::ffv_fname	src/misc2.c	/^    char_u		ffv_fname[1];	\/* actually longer *\/$/;"	m	struct:ff_visited	file:	access:public
ff_visited::ffv_ino	src/misc2.c	/^    ino_t		ffv_ino;	\/* inode number *\/$/;"	m	struct:ff_visited	file:	access:public
ff_visited::ffv_next	src/misc2.c	/^    struct ff_visited	*ffv_next;$/;"	m	struct:ff_visited	typeref:struct:ff_visited::ff_visited	file:	access:public
ff_visited::ffv_wc_path	src/misc2.c	/^    char_u		*ffv_wc_path;$/;"	m	struct:ff_visited	file:	access:public
ff_visited_T	src/misc2.c	/^} ff_visited_T;$/;"	t	typeref:struct:ff_visited	file:
ff_visited_list_hdr	src/misc2.c	/^typedef struct ff_visited_list_hdr$/;"	s	file:
ff_visited_list_hdr::ffvl_filename	src/misc2.c	/^    char_u			*ffvl_filename;$/;"	m	struct:ff_visited_list_hdr	file:	access:public
ff_visited_list_hdr::ffvl_next	src/misc2.c	/^    struct ff_visited_list_hdr	*ffvl_next;$/;"	m	struct:ff_visited_list_hdr	typeref:struct:ff_visited_list_hdr::ff_visited_list_hdr	file:	access:public
ff_visited_list_hdr::ffvl_visited_list	src/misc2.c	/^    ff_visited_T		*ffvl_visited_list;$/;"	m	struct:ff_visited_list_hdr	file:	access:public
ff_visited_list_hdr_T	src/misc2.c	/^} ff_visited_list_hdr_T;$/;"	t	typeref:struct:ff_visited_list_hdr	file:
ff_wc_equal	src/misc2.c	/^ff_wc_equal(s1, s2)$/;"	f	file:
ff_wc_equal	src/misc2.c	/^static int ff_wc_equal __ARGS((char_u *s1, char_u *s2));$/;"	p	file:	signature:(char_u *s1, char_u *s2)
fflush	src/xxd/xxd.c	/^extern int fflush  __P((FILE *));$/;"	p	file:	signature:(FILE *)
ffs_filearray	src/misc2.c	/^    char_u		**ffs_filearray;$/;"	m	struct:ff_stack	file:	access:public
ffs_filearray_cur	src/misc2.c	/^    char_u		ffs_filearray_cur;   \/* needed for partly handled dirs *\/$/;"	m	struct:ff_stack	file:	access:public
ffs_filearray_size	src/misc2.c	/^    int			ffs_filearray_size;$/;"	m	struct:ff_stack	file:	access:public
ffs_fix_path	src/misc2.c	/^    char_u		*ffs_fix_path;$/;"	m	struct:ff_stack	file:	access:public
ffs_level	src/misc2.c	/^    int			ffs_level;$/;"	m	struct:ff_stack	file:	access:public
ffs_prev	src/misc2.c	/^    struct ff_stack	*ffs_prev;$/;"	m	struct:ff_stack	typeref:struct:ff_stack::ff_stack	file:	access:public
ffs_stage	src/misc2.c	/^    int			ffs_stage;$/;"	m	struct:ff_stack	file:	access:public
ffs_star_star_empty	src/misc2.c	/^    int			ffs_star_star_empty;$/;"	m	struct:ff_stack	file:	access:public
ffs_wc_path	src/misc2.c	/^    char_u		*ffs_wc_path;$/;"	m	struct:ff_stack	file:	access:public
ffsc_dir_visited_list	src/misc2.c	/^     ff_visited_list_hdr_T	*ffsc_dir_visited_list;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ffsc_dir_visited_lists_list	src/misc2.c	/^     ff_visited_list_hdr_T	*ffsc_dir_visited_lists_list;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ffsc_file_to_search	src/misc2.c	/^     char_u			*ffsc_file_to_search;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ffsc_find_what	src/misc2.c	/^     int			ffsc_find_what;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ffsc_fix_path	src/misc2.c	/^     char_u			*ffsc_fix_path;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ffsc_level	src/misc2.c	/^     int			ffsc_level;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ffsc_stack_ptr	src/misc2.c	/^     ff_stack_T			*ffsc_stack_ptr;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ffsc_start_dir	src/misc2.c	/^     char_u			*ffsc_start_dir;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ffsc_stopdirs_v	src/misc2.c	/^     char_u			**ffsc_stopdirs_v;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ffsc_tagfile	src/misc2.c	/^     int			ffsc_tagfile;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ffsc_visited_list	src/misc2.c	/^     ff_visited_list_hdr_T	*ffsc_visited_list;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ffsc_visited_lists_list	src/misc2.c	/^     ff_visited_list_hdr_T	*ffsc_visited_lists_list;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ffsc_wc_path	src/misc2.c	/^     char_u			*ffsc_wc_path;$/;"	m	struct:ff_search_ctx_T	file:	access:public
ffv_dev	src/misc2.c	/^    dev_t		ffv_dev;	\/* device number *\/$/;"	m	struct:ff_visited	file:	access:public
ffv_dev_valid	src/misc2.c	/^    int			ffv_dev_valid;	\/* ffv_dev and ffv_ino were set *\/$/;"	m	struct:ff_visited	file:	access:public
ffv_fname	src/misc2.c	/^    char_u		ffv_fname[1];	\/* actually longer *\/$/;"	m	struct:ff_visited	file:	access:public
ffv_ino	src/misc2.c	/^    ino_t		ffv_ino;	\/* inode number *\/$/;"	m	struct:ff_visited	file:	access:public
ffv_next	src/misc2.c	/^    struct ff_visited	*ffv_next;$/;"	m	struct:ff_visited	typeref:struct:ff_visited::ff_visited	file:	access:public
ffv_wc_path	src/misc2.c	/^    char_u		*ffv_wc_path;$/;"	m	struct:ff_visited	file:	access:public
ffvl_filename	src/misc2.c	/^    char_u			*ffvl_filename;$/;"	m	struct:ff_visited_list_hdr	file:	access:public
ffvl_next	src/misc2.c	/^    struct ff_visited_list_hdr	*ffvl_next;$/;"	m	struct:ff_visited_list_hdr	typeref:struct:ff_visited_list_hdr::ff_visited_list_hdr	file:	access:public
ffvl_visited_list	src/misc2.c	/^    ff_visited_T		*ffvl_visited_list;$/;"	m	struct:ff_visited_list_hdr	file:	access:public
fg_color	src/structs.h	/^	    guicolor_T	    fg_color;	\/* foreground color handle *\/$/;"	m	struct:attr_entry::__anon45::__anon48	access:public
fg_color	src/structs.h	/^	    short_u	    fg_color;	\/* foreground color number *\/$/;"	m	struct:attr_entry::__anon45::__anon47	access:public
fg_color	src/structs.h	/^    long_u	fg_color;$/;"	m	struct:__anon59	access:public
fg_colour	src/gui.h	/^    int		fg_colour;		\/* in 0xBBGGRR format *\/$/;"	m	struct:Gui	access:public
fgcolor	src/gui.h	/^    GdkColor	*fgcolor;	    \/* GDK-styled foreground color *\/$/;"	m	struct:Gui	access:public
fgets_cr	src/ex_cmds2.c	/^fgets_cr(s, n, stream)$/;"	f
fi_level	src/structs.h	/^    int		fi_level;	\/* level of the fold; when this is zero the$/;"	m	struct:foldinfo	access:public
fi_list	src/eval.c	/^    list_T	*fi_list;	\/* list being used *\/$/;"	m	struct:__anon141	file:	access:public
fi_lnum	src/structs.h	/^    int		fi_lnum;	\/* line number where fold starts *\/$/;"	m	struct:foldinfo	access:public
fi_low_level	src/structs.h	/^    int		fi_low_level;	\/* lowest fold level that starts in the same$/;"	m	struct:foldinfo	access:public
fi_lw	src/eval.c	/^    listwatch_T	fi_lw;		\/* keep an eye on the item used. *\/$/;"	m	struct:__anon141	file:	access:public
fi_semicolon	src/eval.c	/^    int		fi_semicolon;	\/* TRUE if ending in '; var]' *\/$/;"	m	struct:__anon141	file:	access:public
fi_varcount	src/eval.c	/^    int		fi_varcount;	\/* nr of variables in the list *\/$/;"	m	struct:__anon141	file:	access:public
file	src/testdir/test49.vim	/^	let file = tempname()$/;"	v
file	src/testdir/test49.vim	/^    let file = tempname()$/;"	v
file_buffer	src/structs.h	/^struct file_buffer$/;"	s
file_buffer::b_FSSpec	src/structs.h	/^    FSSpec	b_FSSpec;	\/* MacOS File Identification *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_bad_char	src/structs.h	/^    int		b_bad_char;	\/* "++bad=" argument when edit started or 0 *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_bufvar	src/structs.h	/^    dictitem_T	b_bufvar;	\/* variable for "b:" Dictionary *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_changed	src/structs.h	/^    int		b_changed;	\/* 'modified': Set to TRUE if something in the$/;"	m	struct:file_buffer	access:public
file_buffer::b_changedtick	src/structs.h	/^    int		b_changedtick;	\/* incremented for each change, also for undo *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_changelist	src/structs.h	/^    pos_T	b_changelist[JUMPLISTSIZE];$/;"	m	struct:file_buffer	access:public
file_buffer::b_changelistlen	src/structs.h	/^    int		b_changelistlen;	\/* number of active entries *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_chartab	src/structs.h	/^    char_u	b_chartab[32];$/;"	m	struct:file_buffer	access:public
file_buffer::b_dev	src/structs.h	/^    dev_t	b_dev;		\/* device number *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_dev_valid	src/structs.h	/^    int		b_dev_valid;	\/* TRUE when b_dev has a valid number *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_did_warn	src/structs.h	/^    int		b_did_warn;	\/* Set to 1 if user has been warned on first$/;"	m	struct:file_buffer	access:public
file_buffer::b_fab_mrs	src/structs.h	/^    unsigned int b_fab_mrs;	\/* Max record size  *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_fab_rat	src/structs.h	/^    char	 b_fab_rat;	\/* Record attribute *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_fab_rfm	src/structs.h	/^    char	 b_fab_rfm;	\/* Record format    *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_ffname	src/structs.h	/^    char_u	*b_ffname;	\/* full path file name *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_first_abbr	src/structs.h	/^    mapblock_T	*b_first_abbr;$/;"	m	struct:file_buffer	access:public
file_buffer::b_flags	src/structs.h	/^    int		b_flags;	\/* various BF_ flags *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_fname	src/structs.h	/^    char_u	*b_fname;	\/* current file name *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_fnum	src/structs.h	/^    int		b_fnum;		\/* buffer number for this file. *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_help	src/structs.h	/^    int		b_help;		\/* TRUE for help file buffer (when set b_p_bt$/;"	m	struct:file_buffer	access:public
file_buffer::b_ino	src/structs.h	/^    ino_t	b_ino;		\/* inode number *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_kmap_ga	src/structs.h	/^    garray_T	b_kmap_ga;	\/* the keymap table *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_kmap_state	src/structs.h	/^    short	b_kmap_state;	\/* using "lmap" mappings *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_last_change	src/structs.h	/^    pos_T	b_last_change;	\/* position of last change: '. mark *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_last_cursor	src/structs.h	/^    pos_T	b_last_cursor;	\/* cursor position when last unloading this$/;"	m	struct:file_buffer	access:public
file_buffer::b_last_insert	src/structs.h	/^    pos_T	b_last_insert;	\/* where Insert mode was left *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_maphash	src/structs.h	/^    mapblock_T	*(b_maphash[256]);$/;"	m	struct:file_buffer	access:public
file_buffer::b_marks_read	src/structs.h	/^    int		b_marks_read;	\/* Have we read viminfo marks yet? *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_may_swap	src/structs.h	/^    int		b_may_swap;$/;"	m	struct:file_buffer	access:public
file_buffer::b_ml	src/structs.h	/^    memline_T	b_ml;		\/* associated memline (also contains line$/;"	m	struct:file_buffer	access:public
file_buffer::b_mod_bot	src/structs.h	/^    linenr_T	b_mod_bot;	\/* lnum below last changed line, AFTER the$/;"	m	struct:file_buffer	access:public
file_buffer::b_mod_set	src/structs.h	/^    int		b_mod_set;	\/* TRUE when there are changes since the last$/;"	m	struct:file_buffer	access:public
file_buffer::b_mod_top	src/structs.h	/^    linenr_T	b_mod_top;	\/* topmost lnum that was changed *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_mod_xlines	src/structs.h	/^    long	b_mod_xlines;	\/* number of extra buffer lines inserted;$/;"	m	struct:file_buffer	access:public
file_buffer::b_mtime	src/structs.h	/^    long	b_mtime;	\/* last change time of original file *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_mtime_read	src/structs.h	/^    long	b_mtime_read;	\/* last change time when reading *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_mzscheme_ref	src/structs.h	/^    void	*b_mzscheme_ref; \/* The MzScheme reference to this buffer *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_namedm	src/structs.h	/^    pos_T	b_namedm[NMARKS]; \/* current named marks (mark.c) *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_netbeans_file	src/structs.h	/^    int		b_netbeans_file;    \/* TRUE when buffer is owned by NetBeans *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_new_change	src/structs.h	/^    int		b_new_change;		\/* set by u_savecommon() *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_next	src/structs.h	/^    buf_T	*b_next;	\/* links in list of buffers *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_nwindows	src/structs.h	/^    int		b_nwindows;	\/* nr of windows open on this buffer *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_op_end	src/structs.h	/^    pos_T	b_op_end;$/;"	m	struct:file_buffer	access:public
file_buffer::b_op_start	src/structs.h	/^    pos_T	b_op_start;$/;"	m	struct:file_buffer	access:public
file_buffer::b_orig_mode	src/structs.h	/^    int		b_orig_mode;	\/* mode of original file *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_orig_size	src/structs.h	/^    off_t	b_orig_size;	\/* size of original file in bytes *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_ai	src/structs.h	/^    int		b_p_ai;		\/* 'autoindent' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_ai_nopaste	src/structs.h	/^    int		b_p_ai_nopaste;	\/* b_p_ai saved for paste mode *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_ar	src/structs.h	/^    int		b_p_ar;		\/* 'autoread' local value *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_bexpr	src/structs.h	/^    char_u	*b_p_bexpr;	\/* 'balloonexpr' local value *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_bexpr_flags	src/structs.h	/^    long_u	b_p_bexpr_flags;\/* flags for 'balloonexpr' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_bh	src/structs.h	/^    char_u	*b_p_bh;	\/* 'bufhidden' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_bin	src/structs.h	/^    int		b_p_bin;	\/* 'binary' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_bl	src/structs.h	/^    int		b_p_bl;		\/* 'buflisted' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_bomb	src/structs.h	/^    int		b_p_bomb;	\/* 'bomb' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_bt	src/structs.h	/^    char_u	*b_p_bt;	\/* 'buftype' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_cfu	src/structs.h	/^    char_u	*b_p_cfu;	\/* 'completefunc' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_ci	src/structs.h	/^    int		b_p_ci;		\/* 'copyindent' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_cin	src/structs.h	/^    int		b_p_cin;	\/* 'cindent' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_cink	src/structs.h	/^    char_u	*b_p_cink;	\/* 'cinkeys' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_cino	src/structs.h	/^    char_u	*b_p_cino;	\/* 'cinoptions' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_cinw	src/structs.h	/^    char_u	*b_p_cinw;	\/* 'cinwords' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_cm	src/structs.h	/^    char_u	*b_p_cm;	\/* 'cryptmethod' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_cms	src/structs.h	/^    char_u	*b_p_cms;	\/* 'commentstring' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_com	src/structs.h	/^    char_u	*b_p_com;	\/* 'comments' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_cpt	src/structs.h	/^    char_u	*b_p_cpt;	\/* 'complete' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_def	src/structs.h	/^    char_u	*b_p_def;	\/* 'define' local value *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_dict	src/structs.h	/^    char_u	*b_p_dict;	\/* 'dictionary' local value *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_efm	src/structs.h	/^    char_u	*b_p_efm;	\/* 'errorformat' local value *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_eol	src/structs.h	/^    int		b_p_eol;	\/* 'endofline' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_ep	src/structs.h	/^    char_u	*b_p_ep;	\/* 'equalprg' local value *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_et	src/structs.h	/^    int		b_p_et;		\/* 'expandtab' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_et_nobin	src/structs.h	/^    int		b_p_et_nobin;	\/* b_p_et saved for binary mode *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_fenc	src/structs.h	/^    char_u	*b_p_fenc;	\/* 'fileencoding' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_fex	src/structs.h	/^    char_u	*b_p_fex;	\/* 'formatexpr' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_fex_flags	src/structs.h	/^    long_u	b_p_fex_flags;	\/* flags for 'formatexpr' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_ff	src/structs.h	/^    char_u	*b_p_ff;	\/* 'fileformat' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_flp	src/structs.h	/^    char_u	*b_p_flp;	\/* 'formatlistpat' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_fo	src/structs.h	/^    char_u	*b_p_fo;	\/* 'formatoptions' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_ft	src/structs.h	/^    char_u	*b_p_ft;	\/* 'filetype' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_gp	src/structs.h	/^    char_u	*b_p_gp;	\/* 'grepprg' local value *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_iminsert	src/structs.h	/^    long	b_p_iminsert;	\/* input mode for insert *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_imsearch	src/structs.h	/^    long	b_p_imsearch;	\/* input mode for search *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_inc	src/structs.h	/^    char_u	*b_p_inc;	\/* 'include' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_inde	src/structs.h	/^    char_u	*b_p_inde;	\/* 'indentexpr' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_inde_flags	src/structs.h	/^    long_u	b_p_inde_flags;	\/* flags for 'indentexpr' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_indk	src/structs.h	/^    char_u	*b_p_indk;	\/* 'indentkeys' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_inex	src/structs.h	/^    char_u	*b_p_inex;	\/* 'includeexpr' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_inex_flags	src/structs.h	/^    long_u	b_p_inex_flags;	\/* flags for 'includeexpr' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_inf	src/structs.h	/^    int		b_p_inf;	\/* 'infercase' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_initialized	src/structs.h	/^    int		b_p_initialized;	\/* set when options initialized *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_isk	src/structs.h	/^    char_u	*b_p_isk;	\/* 'iskeyword' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_key	src/structs.h	/^    char_u	*b_p_key;	\/* 'key' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_keymap	src/structs.h	/^    char_u	*b_p_keymap;	\/* 'keymap' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_kp	src/structs.h	/^    char_u	*b_p_kp;	\/* 'keywordprg' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_lisp	src/structs.h	/^    int		b_p_lisp;	\/* 'lisp' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_ma	src/structs.h	/^    int		b_p_ma;		\/* 'modifiable' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_ml	src/structs.h	/^    int		b_p_ml;		\/* 'modeline' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_ml_nobin	src/structs.h	/^    int		b_p_ml_nobin;	\/* b_p_ml saved for binary mode *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_mp	src/structs.h	/^    char_u	*b_p_mp;	\/* 'makeprg' local value *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_mps	src/structs.h	/^    char_u	*b_p_mps;	\/* 'matchpairs' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_nf	src/structs.h	/^    char_u	*b_p_nf;	\/* 'nrformats' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_oft	src/structs.h	/^    char_u	*b_p_oft;	\/* 'osfiletype' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_ofu	src/structs.h	/^    char_u	*b_p_ofu;	\/* 'omnifunc' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_path	src/structs.h	/^    char_u	*b_p_path;	\/* 'path' local value *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_pi	src/structs.h	/^    int		b_p_pi;		\/* 'preserveindent' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_qe	src/structs.h	/^    char_u	*b_p_qe;	\/* 'quoteescape' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_ro	src/structs.h	/^    int		b_p_ro;		\/* 'readonly' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_scriptID	src/structs.h	/^    int		b_p_scriptID[BV_COUNT];	\/* SIDs for buffer-local options *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_si	src/structs.h	/^    int		b_p_si;		\/* 'smartindent' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_smc	src/structs.h	/^    long	b_p_smc;	\/* 'synmaxcol' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_sn	src/structs.h	/^    int		b_p_sn;		\/* 'shortname' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_sts	src/structs.h	/^    long	b_p_sts;	\/* 'softtabstop' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_sts_nopaste	src/structs.h	/^    long	b_p_sts_nopaste; \/* b_p_sts saved for paste mode *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_sua	src/structs.h	/^    char_u	*b_p_sua;	\/* 'suffixesadd' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_sw	src/structs.h	/^    long	b_p_sw;		\/* 'shiftwidth' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_swf	src/structs.h	/^    int		b_p_swf;	\/* 'swapfile' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_syn	src/structs.h	/^    char_u	*b_p_syn;	\/* 'syntax' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_tags	src/structs.h	/^    char_u	*b_p_tags;	\/* 'tags' local value *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_ts	src/structs.h	/^    long	b_p_ts;		\/* 'tabstop' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_tsr	src/structs.h	/^    char_u	*b_p_tsr;	\/* 'thesaurus' local value *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_tw	src/structs.h	/^    long	b_p_tw;		\/* 'textwidth' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_tw_nobin	src/structs.h	/^    long	b_p_tw_nobin;	\/* b_p_tw saved for binary mode *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_tw_nopaste	src/structs.h	/^    long	b_p_tw_nopaste;	\/* b_p_tw saved for paste mode *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_tx	src/structs.h	/^    int		b_p_tx;		\/* 'textmode' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_udf	src/structs.h	/^    int		b_p_udf;	\/* 'undofile' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_wm	src/structs.h	/^    long	b_p_wm;		\/* 'wrapmargin' *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_wm_nobin	src/structs.h	/^    long	b_p_wm_nobin;	\/* b_p_wm saved for binary mode *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_p_wm_nopaste	src/structs.h	/^    long	b_p_wm_nopaste;	\/* b_p_wm saved for paste mode *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_perl_private	src/structs.h	/^    void	*b_perl_private;$/;"	m	struct:file_buffer	access:public
file_buffer::b_prev	src/structs.h	/^    buf_T	*b_prev;$/;"	m	struct:file_buffer	access:public
file_buffer::b_python3_ref	src/structs.h	/^    void	*b_python3_ref;	\/* The Python3 reference to this buffer *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_python_ref	src/structs.h	/^    void	*b_python_ref;	\/* The Python reference to this buffer *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_ruby_ref	src/structs.h	/^    void	*b_ruby_ref;$/;"	m	struct:file_buffer	access:public
file_buffer::b_s	src/structs.h	/^    synblock_T	b_s;		\/* Info related to syntax highlighting.  w_s$/;"	m	struct:file_buffer	access:public
file_buffer::b_saving	src/structs.h	/^    int		b_saving;	\/* Set to TRUE if we are in the middle of$/;"	m	struct:file_buffer	access:public
file_buffer::b_scanned	src/structs.h	/^    int		b_scanned;	\/* ^N\/^P have scanned this buffer *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_sfname	src/structs.h	/^    char_u	*b_sfname;	\/* short file name *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_shortname	src/structs.h	/^    int		b_shortname;	\/* this file has an 8.3 file name *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_signlist	src/structs.h	/^    signlist_T	*b_signlist;	\/* list of signs to draw *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_sniff	src/structs.h	/^    int		b_sniff;	\/* file was loaded through Sniff *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_spell	src/structs.h	/^    int		b_spell;	\/* TRUE for a spell file buffer, most fields$/;"	m	struct:file_buffer	access:public
file_buffer::b_start_bomb	src/structs.h	/^    int		b_start_bomb;	\/* 'bomb' when it was read *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_start_eol	src/structs.h	/^    int		b_start_eol;	\/* last line had eol when it was read *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_start_fenc	src/structs.h	/^    char_u	*b_start_fenc;	\/* 'fileencoding' when edit started or NULL *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_start_ffc	src/structs.h	/^    int		b_start_ffc;	\/* first char of 'ff' when edit started *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_tcl_ref	src/structs.h	/^    void	*b_tcl_ref;$/;"	m	struct:file_buffer	access:public
file_buffer::b_u_curhead	src/structs.h	/^    u_header_T	*b_u_curhead;	\/* pointer to current header *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_u_line_colnr	src/structs.h	/^    colnr_T	b_u_line_colnr;	\/* optional column number *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_u_line_lnum	src/structs.h	/^    linenr_T	b_u_line_lnum;	\/* line number of line in u_line *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_u_line_ptr	src/structs.h	/^    char_u	*b_u_line_ptr;	\/* saved line for "U" command *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_u_newhead	src/structs.h	/^    u_header_T	*b_u_newhead;	\/* pointer to newest header; may not be valid$/;"	m	struct:file_buffer	access:public
file_buffer::b_u_numhead	src/structs.h	/^    int		b_u_numhead;	\/* current number of headers *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_u_oldhead	src/structs.h	/^    u_header_T	*b_u_oldhead;	\/* pointer to oldest header *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_u_save_nr_cur	src/structs.h	/^    long	b_u_save_nr_cur; \/* file write nr after which we are now *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_u_save_nr_last	src/structs.h	/^    long	b_u_save_nr_last; \/* counter for last file write *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_u_seq_cur	src/structs.h	/^    long	b_u_seq_cur;	\/* hu_seq of header below which we are now *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_u_seq_last	src/structs.h	/^    long	b_u_seq_last;	\/* last used undo sequence number *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_u_synced	src/structs.h	/^    int		b_u_synced;	\/* entry lists are synced *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_u_time_cur	src/structs.h	/^    time_t	b_u_time_cur;	\/* uh_time of header below which we are now *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_ucmds	src/structs.h	/^    garray_T	b_ucmds;$/;"	m	struct:file_buffer	access:public
file_buffer::b_vars	src/structs.h	/^    dict_T	b_vars;		\/* internal variables, local to buffer *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_visual	src/structs.h	/^    visualinfo_T b_visual;$/;"	m	struct:file_buffer	access:public
file_buffer::b_visual_mode_eval	src/structs.h	/^    int		b_visual_mode_eval;  \/* b_visual.vi_mode for visualmode() *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_was_netbeans_file	src/structs.h	/^    int		b_was_netbeans_file;\/* TRUE if b_netbeans_file was once set *\/$/;"	m	struct:file_buffer	access:public
file_buffer::b_wininfo	src/structs.h	/^    wininfo_T	*b_wininfo;	\/* list of last used info for each window *\/$/;"	m	struct:file_buffer	access:public
file_ff_differs	src/option.c	/^file_ff_differs(buf)$/;"	f
file_input	src/if_python.c	88;"	d	file:
file_line	src/hardcopy.c	/^    linenr_T	file_line;	    \/* line nr in the buffer *\/$/;"	m	struct:__anon126	file:	access:public
file_name_at_cursor	src/window.c	/^file_name_at_cursor(options, count, file_lnum)$/;"	f
file_name_in_line	src/window.c	/^file_name_in_line(line, col, options, count, rel_fname, file_lnum)$/;"	f
file_owned	src/main.c	/^file_owned(fname)$/;"	f	file:
file_owned	src/main.c	/^static int file_owned __ARGS((char *fname));$/;"	p	file:	signature:(char *fname)
file_pat_to_reg_pat	src/fileio.c	/^file_pat_to_reg_pat(pat, pat_end, allow_dirs, no_bslash)$/;"	f
filedlg	src/gui.h	/^    GtkWidget	*filedlg;	    \/* file selection dialog *\/$/;"	m	struct:Gui	access:public
fileformat	src/ex_cmds2.c	/^    int		fileformat;	\/* EOL_UNKNOWN, EOL_UNIX or EOL_DOS *\/$/;"	m	struct:source_cookie	file:	access:public
fileinfo	src/buffer.c	/^fileinfo(fullname, shorthelp, dont_truncate)$/;"	f
filemark	src/structs.h	/^typedef struct filemark$/;"	s
filemark::fnum	src/structs.h	/^    int		fnum;		\/* file number *\/$/;"	m	struct:filemark	access:public
filemark::mark	src/structs.h	/^    pos_T	mark;		\/* cursor position *\/$/;"	m	struct:filemark	access:public
filemess	src/fileio.c	/^filemess(buf, name, s, attr)$/;"	f
filename	runtime/indent/sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	runtime/indent/sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	runtime/indent/sql.vim	/^let filename = 'sqlanywhere'$/;"	v
filename	runtime/syntax/sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	runtime/syntax/sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	runtime/syntax/sql.vim	/^let filename = 'sqloracle'$/;"	v
filename	src/hardcopy.c	/^    char_u  filename[MAXPATHL + 1];$/;"	m	struct:prt_ps_resource_S	file:	access:public
fileno	src/xxd/xxd.c	100;"	d	file:
filetype_detect	src/ex_docmd.c	/^static int filetype_detect = FALSE;$/;"	v	file:
filetype_indent	src/ex_docmd.c	/^static int filetype_indent = FALSE;$/;"	v	file:
filetype_plugin	src/ex_docmd.c	/^static int filetype_plugin = FALSE;$/;"	v	file:
filetypedetect	runtime/filetype.vim	/^augroup filetypedetect$/;"	a
filetypeindent	runtime/indent.vim	/^augroup filetypeindent$/;"	a
filetypeplugin	runtime/ftplugin.vim	/^augroup filetypeplugin$/;"	a
filewritable	src/misc2.c	/^filewritable(fname)$/;"	f
fill	src/move.c	/^    int		    fill;	\/* filler lines *\/$/;"	m	struct:__anon84	file:	access:public
fill_breakat_flags	src/option.c	/^fill_breakat_flags()$/;"	f	file:
fill_breakat_flags	src/option.c	/^static void fill_breakat_flags __ARGS((void));$/;"	p	file:	signature:(void)
fill_diff	src/globals.h	/^EXTERN int	fill_diff INIT(= '-');$/;"	v
fill_fold	src/globals.h	/^EXTERN int	fill_fold INIT(= '-');$/;"	v
fill_foldcolumn	src/screen.c	/^fill_foldcolumn(p, wp, closed, lnum)$/;"	f	file:
fill_foldcolumn	src/screen.c	/^static void fill_foldcolumn __ARGS((char_u *p, win_T *wp, int closed, linenr_T lnum));$/;"	p	file:	signature:(char_u *p, win_T *wp, int closed, linenr_T lnum)
fill_input_buf	src/ui.c	/^fill_input_buf(exit_on_error)$/;"	f
fill_lists	src/gui_xmdlg.c	/^fill_lists(enum ListSpecifier fix, SharedFontSelData *data)$/;"	f	file:	signature:(enum ListSpecifier fix, SharedFontSelData *data)
fill_mouse_coord	src/gui.c	/^fill_mouse_coord(p, col, row)$/;"	f	file:
fill_mouse_coord	src/gui.c	/^static void fill_mouse_coord __ARGS((char_u *p, int col, int row));$/;"	p	file:	signature:(char_u *p, int col, int row)
fill_stl	src/globals.h	/^EXTERN int	fill_stl INIT(= ' ');$/;"	v
fill_stlnc	src/globals.h	/^EXTERN int	fill_stlnc INIT(= ' ');$/;"	v
fill_vert	src/globals.h	/^EXTERN int	fill_vert INIT(= ' ');$/;"	v
fillchar_status	src/screen.c	/^fillchar_status(attr, is_curwin)$/;"	f	file:
fillchar_status	src/screen.c	/^static int fillchar_status __ARGS((int *attr, int is_curwin));$/;"	p	file:	signature:(int *attr, int is_curwin)
fillchar_vsep	src/screen.c	/^fillchar_vsep(attr)$/;"	f	file:
fillchar_vsep	src/screen.c	/^static int fillchar_vsep __ARGS((int *attr));$/;"	p	file:	signature:(int *attr)
filter_map	src/eval.c	/^filter_map(argvars, rettv, map)$/;"	f	file:
filter_map	src/eval.c	/^static void filter_map __ARGS((typval_T *argvars, typval_T *rettv, int map));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv, int map)
filter_map_one	src/eval.c	/^filter_map_one(tv, expr, map, remp)$/;"	f	file:
filter_map_one	src/eval.c	/^static int filter_map_one __ARGS((typval_T *tv, char_u *expr, int map, int *remp));$/;"	p	file:	signature:(typval_T *tv, char_u *expr, int map, int *remp)
filter_uri_list	src/gui_gtk_x11.c	/^filter_uri_list(char_u **outlist, int max, char_u *src)$/;"	f	file:	signature:(char_u **outlist, int max, char_u *src)
find	src/gui_gtk.c	/^    GtkWidget *find;	\/* 'Find Next' action button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
find	src/gui_motif.c	/^    Widget find;	\/* 'Find Next' action button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
findServer	src/os_mswin.c	/^findServer(char_u *name)$/;"	f	file:	signature:(char_u *name)
findYourself	src/workshop.c	/^findYourself($/;"	f	signature:( char *argv0)
find_bat_exe	src/dosinst.c	/^find_bat_exe(int check_bat_only)$/;"	f	file:	signature:(int check_bat_only)
find_buffer	src/eval.c	/^find_buffer(avar)$/;"	f	file:
find_buffer	src/eval.c	/^static buf_T *find_buffer __ARGS((typval_T *avar));$/;"	p	file:	signature:(typval_T *avar)
find_builtin_term	src/term.c	/^find_builtin_term(term)$/;"	f	file:
find_builtin_term	src/term.c	/^static struct builtin_term *find_builtin_term __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
find_closest_color	src/gui_x11.c	/^find_closest_color(colormap, colorPtr)$/;"	f	file:
find_closest_color	src/gui_x11.c	/^static int find_closest_color __ARGS((Colormap colormap, XColor *colorPtr));$/;"	p	file:	signature:(Colormap colormap, XColor *colorPtr)
find_cmdline_var	src/ex_docmd.c	/^find_cmdline_var(src, usedlen)$/;"	f
find_command	src/ex_docmd.c	/^find_command(eap, full)$/;"	f	file:
find_command	src/ex_docmd.c	/^static char_u	*find_command __ARGS((exarg_T *eap, int *full));$/;"	p	file:	signature:(exarg_T *eap, int *full)
find_command	src/normal.c	/^find_command(cmdchar)$/;"	f	file:
find_command	src/normal.c	/^static int	find_command __ARGS((int cmdchar));$/;"	p	file:	signature:(int cmdchar)
find_continued_lnum	runtime/indent/sh.vim	/^function! s:find_continued_lnum(lnum)$/;"	f
find_decl	src/normal.c	/^find_decl(ptr, len, locally, thisblock, searchflags)$/;"	f
find_directory_in_path	src/misc2.c	/^find_directory_in_path(ptr, len, options, rel_fname)$/;"	f
find_end_event	src/fileio.c	/^find_end_event(arg, have_group)$/;"	f	file:
find_end_event	src/fileio.c	/^static char_u *find_end_event __ARGS((char_u *arg, int have_group));$/;"	p	file:	signature:(char_u *arg, int have_group)
find_end_of_word	src/normal.c	/^find_end_of_word(pos)$/;"	f	file:
find_end_of_word	src/normal.c	/^static void	find_end_of_word __ARGS((pos_T *));$/;"	p	file:	signature:(pos_T *)
find_endpos	src/syntax.c	/^find_endpos(idx, startpos, m_endpos, hl_endpos, flagsp, end_endpos,$/;"	f	file:
find_endpos	src/syntax.c	/^static void find_endpos __ARGS((int idx, lpos_T *startpos, lpos_T *m_endpos, lpos_T *hl_endpos, long *flagsp, lpos_T *end_endpos, int *end_idx, reg_extmatch_T *start_ext));$/;"	p	file:	signature:(int idx, lpos_T *startpos, lpos_T *m_endpos, lpos_T *hl_endpos, long *flagsp, lpos_T *end_endpos, int *end_idx, reg_extmatch_T *start_ext)
find_executable_arg	src/if_tcl.c	/^static char *find_executable_arg = NULL;$/;"	v	file:
find_extra	src/tag.c	/^find_extra(pp)$/;"	f	file:
find_extra	src/tag.c	/^static int find_extra __ARGS((char_u **pp));$/;"	p	file:	signature:(char_u **pp)
find_file_in_path	src/misc2.c	/^find_file_in_path(ptr, len, options, first, rel_fname)$/;"	f
find_file_in_path_option	src/misc2.c	/^find_file_in_path_option(ptr, len, options, first, path_option, find_what, rel_fname, suffixes)$/;"	f
find_file_name_in_path	src/window.c	/^find_file_name_in_path(ptr, len, options, count, rel_fname)$/;"	f
find_first_blank	src/search.c	/^find_first_blank(posp)$/;"	f	file:
find_first_blank	src/search.c	/^static void find_first_blank __ARGS((pos_T *));$/;"	p	file:	signature:(pos_T *)
find_func	src/eval.c	/^find_func(name)$/;"	f	file:
find_func	src/eval.c	/^static ufunc_T *find_func __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
find_help_tags	src/ex_cmds.c	/^find_help_tags(arg, num_matches, matches, keep_lang)$/;"	f
find_ident_at_pos	src/normal.c	/^find_ident_at_pos(wp, lnum, startcol, string, find_type)$/;"	f
find_ident_under_cursor	src/normal.c	/^find_ident_under_cursor(string, find_type)$/;"	f
find_internal_func	src/eval.c	/^find_internal_func(name)$/;"	f	file:
find_internal_func	src/eval.c	/^static int find_internal_func __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
find_is_eval_item	src/normal.c	/^find_is_eval_item(ptr, colp, bnp, dir)$/;"	f	file:
find_is_eval_item	src/normal.c	/^static int find_is_eval_item __ARGS((char_u *ptr, int *colp, int *nbp, int dir));$/;"	p	file:	signature:(char_u *ptr, int *colp, int *nbp, int dir)
find_keepcap_word	src/spell.c	/^find_keepcap_word(slang, fword, kword)$/;"	f	file:
find_keepcap_word	src/spell.c	/^static void find_keepcap_word __ARGS((slang_T *slang, char_u *fword, char_u *kword));$/;"	p	file:	signature:(slang_T *slang, char_u *fword, char_u *kword)
find_key_option	src/option.c	/^find_key_option(arg)$/;"	f	file:
find_key_option	src/option.c	/^static int find_key_option __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
find_key_press_event	src/gui_gtk.c	/^find_key_press_event($/;"	f	file:	signature:( GtkWidget *widget UNUSED, GdkEventKey *event, SharedFindReplace *frdp)
find_last_paren	src/misc1.c	/^find_last_paren(l, start, end)$/;"	f	file:
find_last_paren	src/misc1.c	/^static int	find_last_paren __ARGS((char_u *l, int start, int end));$/;"	p	file:	signature:(char_u *l, int start, int end)
find_line_comment	src/misc1.c	/^find_line_comment() \/* XXX *\/$/;"	f	file:
find_line_comment	src/misc1.c	/^static pos_T	*find_line_comment __ARGS((void));$/;"	p	file:	signature:(void)
find_line_end	src/edit.c	/^find_line_end(ptr)$/;"	f	file:
find_line_end	src/edit.c	/^static char_u *find_line_end __ARGS((char_u *ptr));$/;"	p	file:	signature:(char_u *ptr)
find_match	src/misc1.c	/^find_match(lookfor, ourscope, ind_maxparen, ind_maxcomment)$/;"	f	file:
find_match	src/misc1.c	/^static int	find_match __ARGS((int lookfor, linenr_T ourscope, int ind_maxparen, int ind_maxcomment));$/;"	p	file:	signature:(int lookfor, linenr_T ourscope, int ind_maxparen, int ind_maxcomment)
find_match_paren	src/misc1.c	/^find_match_paren(ind_maxparen, ind_maxcomment)	    \/* XXX *\/$/;"	f	file:
find_match_paren	src/misc1.c	/^static pos_T	*find_match_paren __ARGS((int, int));$/;"	p	file:	signature:(int, int)
find_name_end	src/eval.c	/^find_name_end(arg, expr_start, expr_end, flags)$/;"	f	file:
find_name_end	src/eval.c	/^static char_u *find_name_end __ARGS((char_u *arg, char_u **expr_start, char_u **expr_end, int flags));$/;"	p	file:	signature:(char_u *arg, char_u **expr_start, char_u **expr_end, int flags)
find_next_quote	src/search.c	/^find_next_quote(line, col, quotechar, escape)$/;"	f	file:
find_next_quote	src/search.c	/^static int find_next_quote __ARGS((char_u *top_ptr, int col, int quotechar, char_u *escape));$/;"	p	file:	signature:(char_u *top_ptr, int col, int quotechar, char_u *escape)
find_nextcmd	src/ex_docmd.c	/^find_nextcmd(p)$/;"	f
find_option_end	src/eval.c	/^find_option_end(arg, opt_flags)$/;"	f	file:
find_option_end	src/eval.c	/^static char_u *find_option_end __ARGS((char_u **arg, int *opt_flags));$/;"	p	file:	signature:(char_u **arg, int *opt_flags)
find_pattern_in_path	src/search.c	/^find_pattern_in_path(ptr, dir, len, whole, skip_comments,$/;"	f
find_prefix	src/spell.c	/^find_prefix(mip, mode)$/;"	f	file:
find_prefix	src/spell.c	/^static void find_prefix __ARGS((matchinf_T *mip, int mode));$/;"	p	file:	signature:(matchinf_T *mip, int mode)
find_prev_quote	src/search.c	/^find_prev_quote(line, col_start, quotechar, escape)$/;"	f	file:
find_prev_quote	src/search.c	/^static int find_prev_quote __ARGS((char_u *line, int col_start, int quotechar, char_u *escape));$/;"	p	file:	signature:(char_u *line, int col_start, int quotechar, char_u *escape)
find_previous_pathsep	src/misc1.c	/^find_previous_pathsep(path, psep)$/;"	f	file:
find_previous_pathsep	src/misc1.c	/^static int find_previous_pathsep __ARGS((char_u *path, char_u **psep));$/;"	p	file:	signature:(char_u *path, char_u **psep)
find_region	src/spell.c	/^find_region(rp, region)$/;"	f	file:
find_region	src/spell.c	/^static int find_region __ARGS((char_u *rp, char_u *region));$/;"	p	file:	signature:(char_u *rp, char_u *region)
find_replace_callback	src/gui_motif.c	/^find_replace_callback(w, client_data, call_data)$/;"	f	file:
find_replace_callback	src/gui_motif.c	/^static void find_replace_callback __ARGS((Widget w, XtPointer client_data, XtPointer call_data));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XtPointer call_data)
find_replace_cb	src/gui_gtk.c	/^find_replace_cb(GtkWidget *widget UNUSED, gpointer data)$/;"	f	file:	signature:(GtkWidget *widget UNUSED, gpointer data)
find_replace_cb	src/gui_gtk.c	/^static void find_replace_cb(GtkWidget *widget, gpointer data);$/;"	p	file:	signature:(GtkWidget *widget, gpointer data)
find_replace_destroy_callback	src/gui_motif.c	/^find_replace_destroy_callback(w, client_data, call_data)$/;"	f	file:
find_replace_destroy_callback	src/gui_motif.c	/^static void find_replace_destroy_callback __ARGS((Widget w, XtPointer client_data, XtPointer call_data));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XtPointer call_data)
find_replace_dialog_create	src/gui_gtk.c	/^find_replace_dialog_create(char_u *arg, int do_replace)$/;"	f	file:	signature:(char_u *arg, int do_replace)
find_replace_dialog_create	src/gui_motif.c	/^find_replace_dialog_create(arg, do_replace)$/;"	f	file:
find_replace_dialog_create	src/gui_motif.c	/^static void find_replace_dialog_create __ARGS((char_u *entry_text, int do_replace));$/;"	p	file:	signature:(char_u *entry_text, int do_replace)
find_replace_dismiss_callback	src/gui_motif.c	/^find_replace_dismiss_callback(w, client_data, call_data)$/;"	f	file:
find_replace_dismiss_callback	src/gui_motif.c	/^static void find_replace_dismiss_callback __ARGS((Widget w, XtPointer client_data, XtPointer call_data));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XtPointer call_data)
find_replace_keypress	src/gui_motif.c	/^find_replace_keypress(w, frdp, event)$/;"	f	file:
find_replace_keypress	src/gui_motif.c	/^static void find_replace_keypress __ARGS((Widget w, SharedFindReplace * frdp, XKeyEvent * event));$/;"	p	file:	signature:(Widget w, SharedFindReplace * frdp, XKeyEvent * event)
find_sniff_cmd	src/if_sniff.c	/^find_sniff_cmd(cmd)$/;"	f	file:
find_some_match	src/eval.c	/^find_some_match(argvars, rettv, type)$/;"	f	file:
find_some_match	src/eval.c	/^static void find_some_match __ARGS((typval_T *argvars, typval_T *rettv, int start));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv, int start)
find_special_key	src/misc2.c	/^find_special_key(srcp, modp, keycode, keep_x_key)$/;"	f
find_special_key_in_table	src/misc2.c	/^find_special_key_in_table(c)$/;"	f
find_start_brace	src/misc1.c	/^find_start_brace(ind_maxcomment)	    \/* XXX *\/$/;"	f	file:
find_start_brace	src/misc1.c	/^static pos_T	*find_start_brace __ARGS((int));$/;"	p	file:	signature:(int)
find_start_comment	src/misc1.c	/^find_start_comment(ind_maxcomment)	    \/* XXX *\/$/;"	f
find_start_of_word	src/normal.c	/^find_start_of_word(pos)$/;"	f	file:
find_start_of_word	src/normal.c	/^static void	find_start_of_word __ARGS((pos_T *));$/;"	p	file:	signature:(pos_T *)
find_tabpage	src/window.c	/^find_tabpage(n)$/;"	f
find_tag1	runtime/doc/makehtml.awk	/^function find_tag1() {$/;"	f
find_tag2	runtime/doc/makehtml.awk	/^function find_tag2() {$/;"	f
find_tag3	runtime/doc/makehtml.awk	/^function find_tag3() {$/;"	f
find_tags	src/tag.c	/^find_tags(pat, num_matches, matchesp, flags, mincount, buf_ffname)$/;"	f
find_term_bykeys	src/term.c	/^find_term_bykeys(src)$/;"	f
find_termcode	src/term.c	/^find_termcode(name)$/;"	f
find_ucmd	src/ex_docmd.c	/^find_ucmd(eap, p, full, xp, compl)$/;"	f	file:
find_ucmd	src/ex_docmd.c	/^static char_u	*find_ucmd __ARGS((exarg_T *eap, char_u *p, int *full, expand_T *xp, int *compl));$/;"	p	file:	signature:(exarg_T *eap, char_u *p, int *full, expand_T *xp, int *compl)
find_var	src/eval.c	/^find_var(name, htp)$/;"	f	file:
find_var	src/eval.c	/^static dictitem_T *find_var __ARGS((char_u *name, hashtab_T **htp));$/;"	p	file:	signature:(char_u *name, hashtab_T **htp)
find_var_ht	src/eval.c	/^find_var_ht(name, varname)$/;"	f	file:
find_var_ht	src/eval.c	/^static hashtab_T *find_var_ht __ARGS((char_u *name, char_u **varname));$/;"	p	file:	signature:(char_u *name, char_u **varname)
find_var_in_ht	src/eval.c	/^find_var_in_ht(ht, varname, writing)$/;"	f	file:
find_var_in_ht	src/eval.c	/^static dictitem_T *find_var_in_ht __ARGS((hashtab_T *ht, char_u *varname, int writing));$/;"	p	file:	signature:(hashtab_T *ht, char_u *varname, int writing)
find_viminfo_parameter	src/option.c	/^find_viminfo_parameter(type)$/;"	f
find_widgets	src/gui_gtk.c	/^static SharedFindReplace find_widgets = {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL};$/;"	v	file:
find_widgets	src/gui_motif.c	/^static SharedFindReplace find_widgets = {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL};$/;"	v	file:
find_win_by_nr	src/eval.c	/^find_win_by_nr(vp, tp)$/;"	f	file:
find_win_by_nr	src/eval.c	/^static win_T *find_win_by_nr __ARGS((typval_T *vp, tabpage_T *tp));$/;"	p	file:	signature:(typval_T *vp, tabpage_T *tp)
find_wininfo	src/buffer.c	/^find_wininfo(buf, skip_diff_buffer)$/;"	f	file:
find_wininfo	src/buffer.c	/^static wininfo_T *find_wininfo __ARGS((buf_T *buf, int skip_diff_buffer));$/;"	p	file:	signature:(buf_T *buf, int skip_diff_buffer)
find_wl_entry	src/fold.c	/^find_wl_entry(win, lnum)$/;"	f
find_word	src/spell.c	/^find_word(mip, mode)$/;"	f	file:
find_word	src/spell.c	/^static void find_word __ARGS((matchinf_T *mip, int mode));$/;"	p	file:	signature:(matchinf_T *mip, int mode)
find_word_end	src/edit.c	/^find_word_end(ptr)$/;"	f
find_word_start	src/edit.c	/^find_word_start(ptr)$/;"	f
findenv	src/misc2.c	/^findenv(name)$/;"	f	file:
findenv	src/misc2.c	/^static int  findenv __ARGS((char *name)); \/* look for a name in the env. *\/$/;"	p	file:	signature:(char *name)
findfilendir	src/eval.c	/^findfilendir(argvars, rettv, find_what)$/;"	f	file:
findfilendir	src/eval.c	/^static void findfilendir __ARGS((typval_T *argvars, typval_T *rettv, int find_what));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv, int find_what)
findmatch	src/search.c	/^findmatch(oap, initc)$/;"	f
findmatchlimit	src/search.c	/^findmatchlimit(oap, initc, flags, maxtravel)$/;"	f
findoldfile	src/dosinst.c	/^findoldfile(char **destination)$/;"	f	file:	signature:(char **destination)
findoption	src/option.c	/^findoption(arg)$/;"	f	file:
findoption	src/option.c	/^static int findoption __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
findpar	src/search.c	/^findpar(pincl, dir, count, what, both)$/;"	f
findrep_atow	src/gui_w48.c	/^findrep_atow(LPFINDREPLACEW lpfrw, LPFINDREPLACE lpfr)$/;"	f	file:	signature:(LPFINDREPLACEW lpfrw, LPFINDREPLACE lpfr)
findrep_wtoa	src/gui_w48.c	/^findrep_wtoa(LPFINDREPLACE lpfr, LPFINDREPLACEW lpfrw)$/;"	f	file:	signature:(LPFINDREPLACE lpfr, LPFINDREPLACEW lpfrw)
findsent	src/search.c	/^findsent(dir, count)$/;"	f
findsent_forward	src/search.c	/^findsent_forward(count, at_start_sent)$/;"	f	file:
findsent_forward	src/search.c	/^static void findsent_forward __ARGS((long count, int at_start_sent));$/;"	p	file:	signature:(long count, int at_start_sent)
findswapname	src/memline.c	/^findswapname(buf, dirp, old_fname)$/;"	f	file:
findswapname	src/memline.c	/^static char_u *findswapname __ARGS((buf_T *, char_u **, char_u *));$/;"	p	file:	signature:(buf_T *, char_u **, char_u *)
finish_exception	src/ex_eval.c	/^finish_exception(excp)$/;"	f	file:
finish_exception	src/ex_eval.c	/^static void	finish_exception __ARGS((except_T *excp));$/;"	p	file:	signature:(except_T *excp)
finish_op	src/globals.h	/^EXTERN int	finish_op INIT(= FALSE);\/* TRUE while an operator is pending *\/$/;"	v
finish_viminfo_history	src/ex_getln.c	/^finish_viminfo_history()$/;"	f
finished	src/ex_cmds2.c	/^    int		finished;	\/* ":finish" used *\/$/;"	m	struct:source_cookie	file:	access:public
fireChanges	src/netbeans.c	/^    unsigned int	 fireChanges:1;$/;"	m	struct:nbbuf_struct	file:	access:public
first	src/mbyte.c	/^    long first;$/;"	m	struct:interval	file:	access:public
first_abbr	src/getchar.c	/^static mapblock_T	*first_abbr = NULL; \/* first entry in abbrlist *\/$/;"	v	file:
first_autopat	src/fileio.c	/^static AutoPat *first_autopat[NUM_EVENTS] =$/;"	v	file:
first_dict	src/eval.c	/^static dict_T		*first_dict = NULL;	\/* list of all dicts *\/$/;"	v	file:
first_lang	src/spell.c	/^static slang_T *first_lang = NULL;$/;"	v	file:
first_line	runtime/ftplugin/changelog.vim	/^  function! s:first_line(string)$/;"	f
first_list	src/eval.c	/^static list_T		*first_list = NULL;	\/* list of all lists *\/$/;"	v	file:
first_lnum	src/structs.h	/^    linenr_T	first_lnum;	\/* first lnum to search for multi-line pat *\/$/;"	m	struct:__anon56	access:public
first_msg_hist	src/message.c	/^static struct msg_hist *first_msg_hist = NULL;$/;"	v	typeref:struct:msg_hist	file:
first_sign	src/ex_cmds.c	/^static sign_T	*first_sign = NULL;$/;"	v	file:
first_submatch	src/search.c	/^first_submatch(rp)$/;"	f	file:
first_submatch	src/search.c	/^static int first_submatch __ARGS((regmmatch_T *rp));$/;"	p	file:	signature:(regmmatch_T *rp)
first_tabpage	src/globals.h	/^EXTERN tabpage_T    *first_tabpage;$/;"	v
firstbuf	src/globals.h	/^EXTERN buf_T	*firstbuf INIT(= NULL);	\/* first buffer *\/$/;"	v
firstwin	src/globals.h	/^EXTERN win_T	*firstwin;		\/* first window *\/$/;"	v
firstwin	src/globals.h	538;"	d
fixAccelText	src/workshop.c	/^fixAccelText($/;"	f	file:	signature:( char *ap)
fixAccelText	src/workshop.c	/^static char	*fixAccelText(char *);$/;"	p	file:	signature:(char *)
fix_arg_enc	src/os_win32.c	/^fix_arg_enc(void)$/;"	f	signature:(void)
fix_beginfigs	runtime/ftplugin/mp.vim	/^  function! s:fix_beginfigs()$/;"	f
fix_fname	src/buffer.c	/^fix_fname(fname)$/;"	f
fix_help_buffer	src/ex_cmds.c	/^fix_help_buffer()$/;"	f
fix_indent	src/edit.c	/^fix_indent()$/;"	f
fix_input_buffer	src/getchar.c	/^fix_input_buffer(buf, len, script)$/;"	f
fixthisline	src/edit.c	/^fixthisline(get_the_indent)$/;"	f
fixup	src/workshop.c	/^fixup($/;"	f	file:	signature:( char *label)
fixup	src/workshop.c	/^static char	*fixup(char *);$/;"	p	file:	signature:(char *)
fixvar	src/eval.c	/^    } fixvar[FIXVAR_CNT];$/;"	m	struct:funccall_S	typeref:struct:funccall_S::__anon140	file:	access:public
fkmap	src/farsi.c	/^fkmap(c)$/;"	f
flag	src/syntax.c	/^    int		flag;$/;"	m	struct:name_list	file:	access:public
flag_in_afflist	src/spell.c	/^flag_in_afflist(flagtype, afflist, flag)$/;"	f	file:
flag_in_afflist	src/spell.c	/^static int flag_in_afflist __ARGS((int flagtype, char_u *afflist, unsigned flag));$/;"	p	file:	signature:(int flagtype, char_u *afflist, unsigned flag)
flags	src/ex_cmds.h	/^    int		flags;		\/* extra flags after count: EXFLAG_ *\/$/;"	m	struct:exarg	access:public
flags	src/gui_gtk_x11.c	/^    unsigned int    flags;$/;"	m	struct:__anon91	file:	access:public
flags	src/if_cscope.h	/^    char *	    flags;	\/* additional cscope flags\/options (e.g, -p2) *\/$/;"	m	struct:csi	access:public
flags	src/option.c	/^    long_u	flags;		\/* see below *\/$/;"	m	struct:vimoption	file:	access:public
flags	src/quickfix.c	/^    char_u	    flags;	\/* additional flags given in prefix *\/$/;"	m	struct:efm_S	file:	access:public
flags	src/structs.h	/^    int		flags;$/;"	m	struct:keyentry	access:public
flags	src/syntax.c	/^    int		flags;		\/* flags for contained and transparent *\/$/;"	m	struct:__anon82	file:	access:public
fline_T	src/fold.c	/^} fline_T;$/;"	t	typeref:struct:__anon98	file:
floatZero	src/gui_at_sb.c	/^static float floatZero = 0.0;$/;"	v	file:
float_T	src/structs.h	/^typedef double	float_T;$/;"	t
flush_buffers	src/getchar.c	/^flush_buffers(typeahead)$/;"	f
fm_getname	src/mark.c	/^fm_getname(fmark, lead_len)$/;"	f
fmark	src/structs.h	/^    fmark_T	fmark;		\/* cursor position BEFORE ":tag" *\/$/;"	m	struct:taggy	access:public
fmark	src/structs.h	/^    fmark_T	fmark;$/;"	m	struct:xfilemark	access:public
fmark_T	src/structs.h	/^} fmark_T;$/;"	t	typeref:struct:filemark
fmarks_check_names	src/mark.c	/^fmarks_check_names(buf)$/;"	f
fmarks_check_one	src/mark.c	/^fmarks_check_one(fm, name, buf)$/;"	f	file:
fmarks_check_one	src/mark.c	/^static void fmarks_check_one __ARGS((xfmark_T *fm, char_u *name, buf_T *buf));$/;"	p	file:	signature:(xfmark_T *fm, char_u *name, buf_T *buf)
fmt_check_par	src/ops.c	/^fmt_check_par(lnum)$/;"	f	file:
fmt_check_par	src/ops.c	/^fmt_check_par(lnum, leader_len, leader_flags, do_comments)$/;"	f	file:
fmt_check_par	src/ops.c	/^static int	fmt_check_par __ARGS((linenr_T));$/;"	p	file:	signature:(linenr_T)
fmt_check_par	src/ops.c	/^static int	fmt_check_par __ARGS((linenr_T, int *, char_u **, int do_comments));$/;"	p	file:	signature:(linenr_T, int *, char_u **, int do_comments)
fmte	src/GvimExt/gvimext.cpp	/^FORMATETC fmte = {CF_HDROP,$/;"	v
fn	src/gui_xmdlg.c	/^fn(SharedFontSelData *data, int i)$/;"	f	file:	signature:(SharedFontSelData *data, int i)
fname	src/ex_cmds2.c	/^    char_u	*fname;		\/* name of sourced file *\/$/;"	m	struct:source_cookie	file:	access:public
fname	src/fileio.c	/^    char_u	*fname;		\/* fname to match with *\/$/;"	m	struct:AutoPatCmd	file:	access:public
fname	src/if_cscope.h	/^    char *	    fname;	\/* cscope db name *\/$/;"	m	struct:csi	access:public
fname	src/structs.h	/^    char_u	*fname;		\/* file name, used when fnum == 0 *\/$/;"	m	struct:xfilemark	access:public
fname	src/tag.c	/^    char_u	*fname;		\/* first char of file name *\/$/;"	m	struct:tag_pointers	file:	access:public
fname2fnum	src/mark.c	/^fname2fnum(fm)$/;"	f	file:
fname2fnum	src/mark.c	/^static void fname2fnum __ARGS((xfmark_T *fm));$/;"	p	file:	signature:(xfmark_T *fm)
fname_case	src/os_amiga.c	/^fname_case(name, len)$/;"	f
fname_case	src/os_msdos.c	/^fname_case(char_u *name, int len)$/;"	f	signature:(char_u *name, int len)
fname_case	src/os_unix.c	/^fname_case(name, len)$/;"	f
fname_case	src/os_win32.c	/^fname_case($/;"	f	signature:( char_u *name, int len)
fname_end	src/tag.c	/^    char_u	*fname_end;	\/* char after file name *\/$/;"	m	struct:tag_pointers	file:	access:public
fname_expand	src/buffer.c	/^fname_expand(buf, ffname, sfname)$/;"	f
fname_match	src/buffer.c	/^fname_match(prog, name)$/;"	f	file:
fname_match	src/buffer.c	/^static char_u	*fname_match __ARGS((regprog_T *prog, char_u *name));$/;"	p	file:	signature:(regprog_T *prog, char_u *name)
fnamecmp	src/vim.h	1610;"	d
fnamecmp	src/vim.h	1613;"	d
fnamecmp	src/vim.h	1617;"	d
fnamecmp_ino	src/memline.c	/^fnamecmp_ino(fname_c, fname_s, ino_block0)$/;"	f	file:
fnamecmp_ino	src/memline.c	/^static int fnamecmp_ino __ARGS((char_u *, char_u *, long));$/;"	p	file:	signature:(char_u *, char_u *, long)
fnamencmp	src/vim.h	1611;"	d
fnamencmp	src/vim.h	1614;"	d
fnamencmp	src/vim.h	1618;"	d
fnum	src/structs.h	/^    int		fnum;		\/* file number *\/$/;"	m	struct:filemark	access:public
focus_in_event	src/gui_gtk_x11.c	/^focus_in_event(GtkWidget *widget,$/;"	f	file:	signature:(GtkWidget *widget, GdkEventFocus *event UNUSED, gpointer data UNUSED)
focus_out_event	src/gui_gtk_x11.c	/^focus_out_event(GtkWidget *widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GdkEventFocus *event UNUSED, gpointer data UNUSED)
foldAddMarker	src/fold.c	/^foldAddMarker(lnum, marker, markerlen)$/;"	f	file:
foldAddMarker	src/fold.c	/^static void foldAddMarker __ARGS((linenr_T lnum, char_u *marker, int markerlen));$/;"	p	file:	signature:(linenr_T lnum, char_u *marker, int markerlen)
foldAdjustCursor	src/fold.c	/^foldAdjustCursor()$/;"	f
foldAdjustVisual	src/fold.c	/^foldAdjustVisual()$/;"	f
foldCase	src/mbyte.c	/^static convertStruct foldCase[] =$/;"	v	file:
foldCheckClose	src/fold.c	/^foldCheckClose()$/;"	f
foldCreate	src/fold.c	/^foldCreate(start, end)$/;"	f
foldCreateMarkers	src/fold.c	/^foldCreateMarkers(start, end)$/;"	f	file:
foldCreateMarkers	src/fold.c	/^static void foldCreateMarkers __ARGS((linenr_T start, linenr_T end));$/;"	p	file:	signature:(linenr_T start, linenr_T end)
foldDelMarker	src/fold.c	/^foldDelMarker(lnum, marker, markerlen)$/;"	f	file:
foldDelMarker	src/fold.c	/^static void foldDelMarker __ARGS((linenr_T lnum, char_u *marker, int markerlen));$/;"	p	file:	signature:(linenr_T lnum, char_u *marker, int markerlen)
foldFind	src/fold.c	/^foldFind(gap, lnum, fpp)$/;"	f	file:
foldFind	src/fold.c	/^static int foldFind __ARGS((garray_T *gap, linenr_T lnum, fold_T **fpp));$/;"	p	file:	signature:(garray_T *gap, linenr_T lnum, fold_T **fpp)
foldInitWin	src/fold.c	/^foldInitWin(newwin)$/;"	f
foldInsert	src/fold.c	/^foldInsert(gap, i)$/;"	f	file:
foldInsert	src/fold.c	/^static int foldInsert __ARGS((garray_T *gap, int i));$/;"	p	file:	signature:(garray_T *gap, int i)
foldLevel	src/fold.c	/^foldLevel(lnum)$/;"	f
foldLevelWin	src/fold.c	/^foldLevelWin(wp, lnum)$/;"	f	file:
foldLevelWin	src/fold.c	/^static int foldLevelWin __ARGS((win_T *wp, linenr_T lnum));$/;"	p	file:	signature:(win_T *wp, linenr_T lnum)
foldManualAllowed	src/fold.c	/^foldManualAllowed(create)$/;"	f
foldMarkAdjust	src/fold.c	/^foldMarkAdjust(wp, line1, line2, amount, amount_after)$/;"	f
foldMarkAdjustRecurse	src/fold.c	/^foldMarkAdjustRecurse(gap, line1, line2, amount, amount_after)$/;"	f	file:
foldMarkAdjustRecurse	src/fold.c	/^static void foldMarkAdjustRecurse __ARGS((garray_T *gap, linenr_T line1, linenr_T line2, long amount, long amount_after));$/;"	p	file:	signature:(garray_T *gap, linenr_T line1, linenr_T line2, long amount, long amount_after)
foldMerge	src/fold.c	/^foldMerge(fp1, gap, fp2)$/;"	f	file:
foldMerge	src/fold.c	/^static void foldMerge __ARGS((fold_T *fp1, garray_T *gap, fold_T *fp2));$/;"	p	file:	signature:(fold_T *fp1, garray_T *gap, fold_T *fp2)
foldMoveTo	src/fold.c	/^foldMoveTo(updown, dir, count)$/;"	f
foldOpenCursor	src/fold.c	/^foldOpenCursor()$/;"	f
foldOpenNested	src/fold.c	/^foldOpenNested(fpr)$/;"	f	file:
foldOpenNested	src/fold.c	/^static void foldOpenNested __ARGS((fold_T *fpr));$/;"	p	file:	signature:(fold_T *fpr)
foldRemove	src/fold.c	/^foldRemove(gap, top, bot)$/;"	f	file:
foldRemove	src/fold.c	/^static void foldRemove __ARGS((garray_T *gap, linenr_T top, linenr_T bot));$/;"	p	file:	signature:(garray_T *gap, linenr_T top, linenr_T bot)
foldSplit	src/fold.c	/^foldSplit(gap, i, top, bot)$/;"	f	file:
foldSplit	src/fold.c	/^static void foldSplit __ARGS((garray_T *gap, int i, linenr_T top, linenr_T bot));$/;"	p	file:	signature:(garray_T *gap, int i, linenr_T top, linenr_T bot)
foldUpdate	src/fold.c	/^foldUpdate(wp, top, bot)$/;"	f
foldUpdateAll	src/fold.c	/^foldUpdateAll(win)$/;"	f
foldUpdateIEMS	src/fold.c	/^foldUpdateIEMS(wp, top, bot)$/;"	f	file:
foldUpdateIEMS	src/fold.c	/^static void foldUpdateIEMS __ARGS((win_T *wp, linenr_T top, linenr_T bot));$/;"	p	file:	signature:(win_T *wp, linenr_T top, linenr_T bot)
foldUpdateIEMSRecurse	src/fold.c	/^foldUpdateIEMSRecurse(gap, level, startlnum, flp, getlevel, bot, topflags)$/;"	f	file:
foldUpdateIEMSRecurse	src/fold.c	/^static linenr_T foldUpdateIEMSRecurse __ARGS((garray_T *gap, int level, linenr_T startlnum, fline_T *flp, void (*getlevel)__ARGS((fline_T *)), linenr_T bot, int topflags));$/;"	p	file:	signature:(garray_T *gap, int level, linenr_T startlnum, fline_T *flp, void (*getlevel)__ARGS((fline_T *)), linenr_T bot, int topflags)
fold_T	src/fold.c	/^} fold_T;$/;"	t	typeref:struct:__anon97	file:
fold_changed	src/fold.c	/^static int fold_changed;$/;"	v	file:
fold_line	src/screen.c	/^fold_line(wp, fold_count, foldinfo, lnum, row)$/;"	f	file:
fold_line	src/screen.c	/^static void fold_line __ARGS((win_T *wp, long fold_count, foldinfo_T *foldinfo, linenr_T lnum, int row));$/;"	p	file:	signature:(win_T *wp, long fold_count, foldinfo_T *foldinfo, linenr_T lnum, int row)
fold_more	src/spell.c	/^fold_more(mip)$/;"	f	file:
fold_more	src/spell.c	/^static int fold_more __ARGS((matchinf_T *mip));$/;"	p	file:	signature:(matchinf_T *mip)
foldclosed_both	src/eval.c	/^foldclosed_both(argvars, rettv, end)$/;"	f	file:
foldclosed_both	src/eval.c	/^static void foldclosed_both __ARGS((typval_T *argvars, typval_T *rettv, int end));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv, int end)
foldedCount	src/fold.c	/^foldedCount(win, lnum, infop)$/;"	f
foldendmarker	src/fold.c	/^static char_u *foldendmarker;$/;"	v	file:
foldendmarkerlen	src/fold.c	/^static int foldendmarkerlen;$/;"	v	file:
foldinfo	src/structs.h	/^typedef struct foldinfo$/;"	s
foldinfo::fi_level	src/structs.h	/^    int		fi_level;	\/* level of the fold; when this is zero the$/;"	m	struct:foldinfo	access:public
foldinfo::fi_lnum	src/structs.h	/^    int		fi_lnum;	\/* line number where fold starts *\/$/;"	m	struct:foldinfo	access:public
foldinfo::fi_low_level	src/structs.h	/^    int		fi_low_level;	\/* lowest fold level that starts in the same$/;"	m	struct:foldinfo	access:public
foldinfo_T	src/structs.h	/^} foldinfo_T;$/;"	t	typeref:struct:foldinfo
foldlevelDiff	src/fold.c	/^foldlevelDiff(flp)$/;"	f	file:
foldlevelDiff	src/fold.c	/^static void foldlevelDiff __ARGS((fline_T *flp));$/;"	p	file:	signature:(fline_T *flp)
foldlevelExpr	src/fold.c	/^foldlevelExpr(flp)$/;"	f	file:
foldlevelExpr	src/fold.c	/^static void foldlevelExpr __ARGS((fline_T *flp));$/;"	p	file:	signature:(fline_T *flp)
foldlevelIndent	src/fold.c	/^foldlevelIndent(flp)$/;"	f	file:
foldlevelIndent	src/fold.c	/^static void foldlevelIndent __ARGS((fline_T *flp));$/;"	p	file:	signature:(fline_T *flp)
foldlevelMarker	src/fold.c	/^foldlevelMarker(flp)$/;"	f	file:
foldlevelMarker	src/fold.c	/^static void foldlevelMarker __ARGS((fline_T *flp));$/;"	p	file:	signature:(fline_T *flp)
foldlevelSyntax	src/fold.c	/^foldlevelSyntax(flp)$/;"	f	file:
foldlevelSyntax	src/fold.c	/^static void foldlevelSyntax __ARGS((fline_T *flp));$/;"	p	file:	signature:(fline_T *flp)
foldmethodIsDiff	src/fold.c	/^foldmethodIsDiff(wp)$/;"	f
foldmethodIsExpr	src/fold.c	/^foldmethodIsExpr(wp)$/;"	f
foldmethodIsIndent	src/fold.c	/^foldmethodIsIndent(wp)$/;"	f
foldmethodIsManual	src/fold.c	/^foldmethodIsManual(wp)$/;"	f
foldmethodIsMarker	src/fold.c	/^foldmethodIsMarker(wp)$/;"	f
foldmethodIsSyntax	src/fold.c	/^foldmethodIsSyntax(wp)$/;"	f
foldstartmarkerlen	src/fold.c	/^static int foldstartmarkerlen;$/;"	v	file:
foldtext_cleanup	src/fold.c	/^foldtext_cleanup(str)$/;"	f
font	src/structs.h	/^	    GuiFont	    font;	\/* font handle *\/$/;"	m	struct:attr_entry::__anon45::__anon48	access:public
font_argument	src/globals.h	/^EXTERN char	*font_argument INIT(= NULL);$/;"	v
font_can_bold	src/gui.h	/^    int		font_can_bold;	    \/* Whether norm_font supports bold weight.$/;"	m	struct:Gui	access:public
font_enumproc	src/os_mswin.c	/^font_enumproc($/;"	f	file:	signature:( ENUMLOGFONT *elf, NEWTEXTMETRIC *ntm, int type, LPARAM lparam)
font_name	src/gui_xmdlg.c	/^    char	*font_name;	\/* current font name *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
font_name2handle	src/syntax.c	/^font_name2handle(name)$/;"	f	file:
font_name2handle	src/syntax.c	/^static GuiFont font_name2handle __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
font_x_offset	src/gui_riscos.c	/^int font_x_offset   = 0;	\/* Where to position each char in its box *\/$/;"	v
font_y_offset	src/gui_riscos.c	/^int font_y_offset   = 0;$/;"	v
fontname	src/gui_at_fs.c	/^    char *fontname;$/;"	m	struct:__anon116	file:	access:public
fontset	src/gui.h	/^    GuiFontset	fontset;	    \/* set of fonts for multi-byte chars *\/$/;"	m	struct:Gui	access:public
fontset	src/structs.h	/^	    GuiFontset	    fontset;	\/* fontset handle *\/$/;"	m	struct:attr_entry::__anon45::__anon48	access:public
fontset_ascent	src/gui_x11.c	/^fontset_ascent(fs)$/;"	f	file:
fontset_ascent	src/gui_x11.c	/^static int fontset_ascent __ARGS((XFontSet fs));$/;"	p	file:	signature:(XFontSet fs)
fontset_height	src/gui_x11.c	/^fontset_height(fs)$/;"	f
fontset_height2	src/gui_x11.c	/^fontset_height2(fs)$/;"	f
fontset_name2handle	src/syntax.c	/^fontset_name2handle(name, fixed_width)$/;"	f	file:
fontset_name2handle	src/syntax.c	/^static GuiFontset fontset_name2handle __ARGS((char_u *name, int fixed_width));$/;"	p	file:	signature:(char_u *name, int fixed_width)
fontset_width	src/gui_x11.c	/^fontset_width(fs)$/;"	f	file:
fontset_width	src/gui_x11.c	/^static int fontset_width __ARGS((XFontSet fs));$/;"	p	file:	signature:(XFontSet fs)
footer	src/gui_motif.c	/^static Widget footer;$/;"	v	file:
footer_height	src/gui.h	/^    int		footer_height;	    \/* height of the message footer *\/$/;"	m	struct:Gui	access:public
fopen_noinh_readbin	src/ex_cmds2.c	/^fopen_noinh_readbin(filename)$/;"	f	file:
fopen_noinh_readbin	src/ex_cmds2.c	/^static FILE *fopen_noinh_readbin __ARGS((char *filename));$/;"	p	file:	signature:(char *filename)
force_abort	src/ex_docmd.c	/^    int		force_abort;$/;"	m	struct:dbg_stuff	file:	access:public
force_abort	src/globals.h	/^EXTERN int force_abort INIT(= FALSE);$/;"	v
force_bin	src/ex_cmds.h	/^    int		force_bin;	\/* 0, FORCE_BIN or FORCE_NOBIN *\/$/;"	m	struct:exarg	access:public
force_enc	src/ex_cmds.h	/^    int		force_enc;	\/* ++enc= argument (index in cmd[]) *\/$/;"	m	struct:exarg	access:public
force_ff	src/ex_cmds.h	/^    int		force_ff;	\/* ++ff= argument (index in cmd[]) *\/$/;"	m	struct:exarg	access:public
force_menu_update	src/globals.h	/^EXTERN int force_menu_update INIT(= FALSE);$/;"	v
forceit	src/ex_cmds.h	/^    int		forceit;	\/* TRUE if ! present *\/$/;"	m	struct:exarg	access:public
foreground	src/gui_at_sb.h	/^    Pixel	  foreground;	\/* thumb foreground color *\/$/;"	m	struct:__anon31	access:public
foreground_argument	src/globals.h	/^EXTERN char	*foreground_argument INIT(= NULL);$/;"	v
forinfo_T	src/eval.c	/^} forinfo_T;$/;"	t	typeref:struct:__anon141	file:
form_configure_event	src/gui_gtk_x11.c	/^form_configure_event(GtkWidget *widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GdkEventConfigure *event, gpointer data UNUSED)
format	src/vim.h	/^    int_u	format;		\/* Vim's own special clipboard format *\/$/;"	m	struct:VimClipboard	access:public
format_lines	src/ops.c	/^format_lines(line_count, avoid_fex)$/;"	f
format_raw	src/vim.h	/^    int_u	format_raw;	\/* Vim's raw text clipboard format *\/$/;"	m	struct:VimClipboard	access:public
formwin	src/gui.h	/^    GtkWidget	*formwin;	    \/* manages all the windows below *\/$/;"	m	struct:Gui	access:public
fortran_free_source	runtime/syntax/sinda.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	runtime/syntax/tak.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	runtime/syntax/trasys.vim	/^let fortran_free_source=1$/;"	v
forward_slash	src/fileio.c	/^forward_slash(fname)$/;"	f
found_iconic_arg	src/gui_gtk_x11.c	/^static int found_iconic_arg = FALSE;$/;"	v	file:
found_reverse_arg	src/globals.h	/^EXTERN int	found_reverse_arg INIT(= FALSE);$/;"	v
found_tagfile_cb	src/tag.c	/^found_tagfile_cb(fname, cookie)$/;"	f	file:
found_tagfile_cb	src/tag.c	/^static void found_tagfile_cb __ARGS((char_u *fname, void *cookie));$/;"	p	file:	signature:(char_u *fname, void *cookie)
fp	src/ex_cmds2.c	/^    FILE	*fp;		\/* opened file for sourcing *\/$/;"	m	struct:source_cookie	file:	access:public
fp	src/search.c	/^    FILE	*fp;		\/* File pointer *\/$/;"	m	struct:SearchedFile	file:	access:public
fprintf	src/xxd/xxd.c	/^extern int fprintf __P((FILE *, char *, ...));$/;"	p	file:	signature:(FILE *, char *, ...)
fputs	src/xxd/xxd.c	/^extern int fputs   __P((char *, FILE *));$/;"	p	file:	signature:(char *, FILE *)
fr_child	src/structs.h	/^    frame_T	*fr_child;	\/* first contained frame *\/$/;"	m	struct:frame_S	access:public
fr_fp	src/if_cscope.h	/^    FILE *	    fr_fp;	\/* from cscope: FILE. *\/$/;"	m	struct:csi	access:public
fr_height	src/structs.h	/^    int		fr_height;$/;"	m	struct:frame_S	access:public
fr_layout	src/structs.h	/^    char	fr_layout;	\/* FR_LEAF, FR_COL or FR_ROW *\/$/;"	m	struct:frame_S	access:public
fr_newheight	src/structs.h	/^    int		fr_newheight;	\/* new height used in win_equal_rec() *\/$/;"	m	struct:frame_S	access:public
fr_newwidth	src/structs.h	/^    int		fr_newwidth;	\/* new width used in win_equal_rec() *\/$/;"	m	struct:frame_S	access:public
fr_next	src/structs.h	/^    frame_T	*fr_next;	\/* frame right or below in same parent, NULL$/;"	m	struct:frame_S	access:public
fr_parent	src/structs.h	/^    frame_T	*fr_parent;	\/* containing frame or NULL *\/$/;"	m	struct:frame_S	access:public
fr_prev	src/structs.h	/^    frame_T	*fr_prev;	\/* frame left or above in same parent, NULL$/;"	m	struct:frame_S	access:public
fr_width	src/structs.h	/^    int		fr_width;$/;"	m	struct:frame_S	access:public
fr_win	src/structs.h	/^    win_T	*fr_win;	\/* window that fills this frame *\/$/;"	m	struct:frame_S	access:public
frame2win	src/window.c	/^frame2win(frp)$/;"	f	file:
frame2win	src/window.c	/^static win_T *frame2win __ARGS((frame_T *frp));$/;"	p	file:	signature:(frame_T *frp)
frame_S	src/structs.h	/^struct frame_S$/;"	s
frame_S::fr_child	src/structs.h	/^    frame_T	*fr_child;	\/* first contained frame *\/$/;"	m	struct:frame_S	access:public
frame_S::fr_height	src/structs.h	/^    int		fr_height;$/;"	m	struct:frame_S	access:public
frame_S::fr_layout	src/structs.h	/^    char	fr_layout;	\/* FR_LEAF, FR_COL or FR_ROW *\/$/;"	m	struct:frame_S	access:public
frame_S::fr_newheight	src/structs.h	/^    int		fr_newheight;	\/* new height used in win_equal_rec() *\/$/;"	m	struct:frame_S	access:public
frame_S::fr_newwidth	src/structs.h	/^    int		fr_newwidth;	\/* new width used in win_equal_rec() *\/$/;"	m	struct:frame_S	access:public
frame_S::fr_next	src/structs.h	/^    frame_T	*fr_next;	\/* frame right or below in same parent, NULL$/;"	m	struct:frame_S	access:public
frame_S::fr_parent	src/structs.h	/^    frame_T	*fr_parent;	\/* containing frame or NULL *\/$/;"	m	struct:frame_S	access:public
frame_S::fr_prev	src/structs.h	/^    frame_T	*fr_prev;	\/* frame left or above in same parent, NULL$/;"	m	struct:frame_S	access:public
frame_S::fr_width	src/structs.h	/^    int		fr_width;$/;"	m	struct:frame_S	access:public
frame_S::fr_win	src/structs.h	/^    win_T	*fr_win;	\/* window that fills this frame *\/$/;"	m	struct:frame_S	access:public
frame_T	src/structs.h	/^typedef struct frame_S		frame_T;$/;"	t	typeref:struct:frame_S
frame_add_height	src/window.c	/^frame_add_height(frp, n)$/;"	f	file:
frame_add_height	src/window.c	/^static void frame_add_height __ARGS((frame_T *frp, int n));$/;"	p	file:	signature:(frame_T *frp, int n)
frame_add_statusline	src/window.c	/^frame_add_statusline(frp)$/;"	f	file:
frame_add_statusline	src/window.c	/^static void frame_add_statusline __ARGS((frame_T *frp));$/;"	p	file:	signature:(frame_T *frp)
frame_add_vsep	src/window.c	/^frame_add_vsep(frp)$/;"	f	file:
frame_add_vsep	src/window.c	/^static void frame_add_vsep __ARGS((frame_T *frp));$/;"	p	file:	signature:(frame_T *frp)
frame_append	src/window.c	/^frame_append(after, frp)$/;"	f	file:
frame_append	src/window.c	/^static void frame_append __ARGS((frame_T *after, frame_T *frp));$/;"	p	file:	signature:(frame_T *after, frame_T *frp)
frame_comp_pos	src/window.c	/^frame_comp_pos(topfrp, row, col)$/;"	f	file:
frame_comp_pos	src/window.c	/^static void frame_comp_pos __ARGS((frame_T *topfrp, int *row, int *col));$/;"	p	file:	signature:(frame_T *topfrp, int *row, int *col)
frame_fix_height	src/window.c	/^frame_fix_height(wp)$/;"	f	file:
frame_fix_height	src/window.c	/^static void frame_fix_height __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
frame_fix_width	src/window.c	/^frame_fix_width(wp)$/;"	f	file:
frame_fix_width	src/window.c	/^static void frame_fix_width __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
frame_fixed_height	src/window.c	/^frame_fixed_height(frp)$/;"	f	file:
frame_fixed_height	src/window.c	/^static int frame_fixed_height __ARGS((frame_T *frp));$/;"	p	file:	signature:(frame_T *frp)
frame_fixed_width	src/window.c	/^frame_fixed_width(frp)$/;"	f	file:
frame_fixed_width	src/window.c	/^static int frame_fixed_width __ARGS((frame_T *frp));$/;"	p	file:	signature:(frame_T *frp)
frame_has_win	src/window.c	/^frame_has_win(frp, wp)$/;"	f	file:
frame_has_win	src/window.c	/^static int frame_has_win __ARGS((frame_T *frp, win_T *wp));$/;"	p	file:	signature:(frame_T *frp, win_T *wp)
frame_insert	src/window.c	/^frame_insert(before, frp)$/;"	f	file:
frame_insert	src/window.c	/^static void frame_insert __ARGS((frame_T *before, frame_T *frp));$/;"	p	file:	signature:(frame_T *before, frame_T *frp)
frame_minheight	src/window.c	/^frame_minheight(topfrp, next_curwin)$/;"	f	file:
frame_minheight	src/window.c	/^static int frame_minheight __ARGS((frame_T *topfrp, win_T *next_curwin));$/;"	p	file:	signature:(frame_T *topfrp, win_T *next_curwin)
frame_minwidth	src/window.c	/^frame_minwidth(topfrp, next_curwin)$/;"	f	file:
frame_minwidth	src/window.c	/^static int frame_minwidth __ARGS((frame_T *topfrp, win_T *next_curwin));$/;"	p	file:	signature:(frame_T *topfrp, win_T *next_curwin)
frame_new_height	src/window.c	/^frame_new_height(topfrp, height, topfirst, wfh)$/;"	f	file:
frame_new_height	src/window.c	/^static void frame_new_height __ARGS((frame_T *topfrp, int height, int topfirst, int wfh));$/;"	p	file:	signature:(frame_T *topfrp, int height, int topfirst, int wfh)
frame_new_width	src/window.c	/^frame_new_width(topfrp, width, leftfirst, wfw)$/;"	f	file:
frame_new_width	src/window.c	/^static void frame_new_width __ARGS((frame_T *topfrp, int width, int leftfirst, int wfw));$/;"	p	file:	signature:(frame_T *topfrp, int width, int leftfirst, int wfw)
frame_remove	src/window.c	/^frame_remove(frp)$/;"	f	file:
frame_remove	src/window.c	/^static void frame_remove __ARGS((frame_T *frp));$/;"	p	file:	signature:(frame_T *frp)
frame_setheight	src/window.c	/^frame_setheight(curfrp, height)$/;"	f	file:
frame_setheight	src/window.c	/^static void frame_setheight __ARGS((frame_T *curfrp, int height));$/;"	p	file:	signature:(frame_T *curfrp, int height)
frame_setwidth	src/window.c	/^frame_setwidth(curfrp, width)$/;"	f	file:
frame_setwidth	src/window.c	/^static void frame_setwidth __ARGS((frame_T *curfrp, int width));$/;"	p	file:	signature:(frame_T *curfrp, int width)
free_all_autocmds	src/fileio.c	/^free_all_autocmds()$/;"	f
free_all_functions	src/eval.c	/^free_all_functions()$/;"	f
free_all_marks	src/mark.c	/^free_all_marks()$/;"	f
free_all_mem	src/misc2.c	/^free_all_mem()$/;"	f
free_all_options	src/option.c	/^free_all_options()$/;"	f
free_array	src/if_mzsch.c	/^free_array(char **array)$/;"	f	file:	signature:(char **array)
free_blocks	src/spell.c	/^free_blocks(bl)$/;"	f	file:
free_blocks	src/spell.c	/^static void free_blocks __ARGS((sblock_T *bl));$/;"	p	file:	signature:(sblock_T *bl)
free_buf_options	src/buffer.c	/^free_buf_options(buf, free_p_ff)$/;"	f
free_buff	src/getchar.c	/^free_buff(buf)$/;"	f
free_buffer	src/buffer.c	/^free_buffer(buf)$/;"	f	file:
free_buffer	src/buffer.c	/^static void	free_buffer __ARGS((buf_T *));$/;"	p	file:	signature:(buf_T *)
free_buffer_stuff	src/buffer.c	/^free_buffer_stuff(buf, free_options)$/;"	f	file:
free_buffer_stuff	src/buffer.c	/^static void	free_buffer_stuff __ARGS((buf_T *buf, int free_options));$/;"	p	file:	signature:(buf_T *buf, int free_options)
free_cd_dir	src/ex_docmd.c	/^free_cd_dir()$/;"	f
free_cmd_argsW	src/os_win32.c	/^free_cmd_argsW(void)$/;"	f	signature:(void)
free_cmdline_buf	src/ex_getln.c	/^free_cmdline_buf()$/;"	f
free_cmdlines	src/ex_docmd.c	/^free_cmdlines(gap)$/;"	f	file:
free_cmdlines	src/ex_docmd.c	/^static void	free_cmdlines __ARGS((garray_T *gap));$/;"	p	file:	signature:(garray_T *gap)
free_crypt_key	src/misc2.c	/^free_crypt_key(key)$/;"	f
free_fib	src/os_amiga.c	49;"	d	file:
free_fib	src/os_amiga.c	51;"	d	file:
free_findfile	src/misc2.c	/^free_findfile()$/;"	f	file:
free_findfile	src/misc2.c	/^static void free_findfile __ARGS((void));$/;"	p	file:	signature:(void)
free_for_info	src/eval.c	/^free_for_info(fi_void)$/;"	f
free_funccal	src/eval.c	/^free_funccal(fc, free_val)$/;"	f	file:
free_funccal	src/eval.c	/^static void free_funccal __ARGS((funccall_T *fc, int free_val));$/;"	p	file:	signature:(funccall_T *fc, int free_val)
free_highlight	src/syntax.c	/^free_highlight()$/;"	f
free_highlight_fonts	src/syntax.c	/^free_highlight_fonts()$/;"	f
free_homedir	src/misc1.c	/^free_homedir()$/;"	f
free_jumplist	src/mark.c	/^free_jumplist(wp)$/;"	f
free_last_insert	src/edit.c	/^free_last_insert()$/;"	f
free_menu	src/menu.c	/^free_menu(menup)$/;"	f	file:
free_menu	src/menu.c	/^static void free_menu __ARGS((vimmenu_T **menup));$/;"	p	file:	signature:(vimmenu_T **menup)
free_menu_string	src/menu.c	/^free_menu_string(menu, idx)$/;"	f	file:
free_menu_string	src/menu.c	/^static void free_menu_string __ARGS((vimmenu_T *, int));$/;"	p	file:	signature:(vimmenu_T *, int)
free_msglist	src/ex_eval.c	/^free_msglist(l)$/;"	f	file:
free_msglist	src/ex_eval.c	/^static void	free_msglist __ARGS((struct msglist *l));$/;"	p	file:	signature:(struct msglist *l)
free_old_sub	src/ex_cmds.c	/^free_old_sub()$/;"	f
free_one_termoption	src/option.c	/^free_one_termoption(var)$/;"	f
free_pixmaps	src/gui_xmebw.c	/^free_pixmaps(XmEnhancedButtonWidget eb)$/;"	f	file:	signature:(XmEnhancedButtonWidget eb)
free_prev_shellcmd	src/ex_cmds.c	/^free_prev_shellcmd()$/;"	f
free_regexp_stuff	src/regexp.c	/^free_regexp_stuff()$/;"	f
free_screenlines	src/screen.c	/^free_screenlines()$/;"	f
free_scriptnames	src/ex_cmds2.c	/^free_scriptnames()$/;"	f
free_search_patterns	src/search.c	/^free_search_patterns()$/;"	f
free_signs	src/ex_cmds.c	/^free_signs()$/;"	f
free_string_option	src/option.c	/^free_string_option(p)$/;"	f
free_tabpage	src/window.c	/^free_tabpage(tp)$/;"	f
free_tag_stuff	src/tag.c	/^free_tag_stuff()$/;"	f
free_termoptions	src/option.c	/^free_termoptions()$/;"	f
free_titles	src/buffer.c	/^free_titles()$/;"	f
free_tv	src/eval.c	/^free_tv(varp)$/;"	f
free_typebuf	src/getchar.c	/^free_typebuf()$/;"	f
free_unref_items	src/eval.c	/^free_unref_items(copyID)$/;"	f	file:
free_unref_items	src/eval.c	/^static int free_unref_items __ARGS((int copyID));$/;"	p	file:	signature:(int copyID)
free_wordnode	src/spell.c	/^free_wordnode(spin, n)$/;"	f	file:
free_wordnode	src/spell.c	/^static void free_wordnode __ARGS((spellinfo_T *spin, wordnode_T *n));$/;"	p	file:	signature:(spellinfo_T *spin, wordnode_T *n)
free_yank	src/ops.c	/^free_yank(n)$/;"	f	file:
free_yank	src/ops.c	/^static void	free_yank __ARGS((long));$/;"	p	file:	signature:(long)
free_yank_all	src/ops.c	/^free_yank_all()$/;"	f	file:
free_yank_all	src/ops.c	/^static void	free_yank_all __ARGS((void));$/;"	p	file:	signature:(void)
freeze_count	src/gui_gtk_f.h	/^    gint freeze_count;$/;"	m	struct:_GtkForm	access:public
from	src/digraph.c	/^    char_u	*from;$/;"	m	struct:__anon125	file:	access:public
from	src/menu.c	/^    char_u	*from;		\/* English name *\/$/;"	m	struct:__anon68	file:	access:public
from	src/option.c	/^    int	    from;$/;"	m	struct:__anon2	file:	access:public
from_noamp	src/menu.c	/^    char_u	*from_noamp;	\/* same, without '&' *\/$/;"	m	struct:__anon68	file:	access:public
fromline	src/po/check.vim	/^    let fromline = GetMline()$/;"	v
fromto_S	src/spell.c	/^typedef struct fromto_S$/;"	s	file:
fromto_S::ft_from	src/spell.c	/^    char_u	*ft_from;$/;"	m	struct:fromto_S	file:	access:public
fromto_S::ft_to	src/spell.c	/^    char_u	*ft_to;$/;"	m	struct:fromto_S	file:	access:public
fromto_T	src/spell.c	/^} fromto_T;$/;"	t	typeref:struct:fromto_S	file:
fsState	src/vimtbar.h	/^    BYTE fsState;	 \/\/ button's state$/;"	m	struct:tagTBBUTTON	access:public
fsStyle	src/vimtbar.h	/^    BYTE fsStyle;	 \/\/ button's style$/;"	m	struct:tagTBBUTTON	access:public
fseek	src/xxd/xxd.c	/^extern int fseek   __P((FILE *, long, int));$/;"	p	file:	signature:(FILE *, long, int)
fst	src/eval.c	/^static struct fst$/;"	s	file:
fst::f_func	src/eval.c	/^    void	(*f_func) __ARGS((typval_T *args, typval_T *rvar));$/;"	m	struct:fst	file:	access:public
fst::f_max_argc	src/eval.c	/^    char	f_max_argc;	\/* maximal number of arguments *\/$/;"	m	struct:fst	file:	access:public
fst::f_min_argc	src/eval.c	/^    char	f_min_argc;	\/* minimal number of arguments *\/$/;"	m	struct:fst	file:	access:public
fst::f_name	src/eval.c	/^    char	*f_name;	\/* function name *\/$/;"	m	struct:fst	file:	access:public
fstatfs	src/memfile.c	47;"	d	file:
fstatfs	src/memfile.c	54;"	d	file:
ft_from	src/spell.c	/^    char_u	*ft_from;$/;"	m	struct:fromto_S	file:	access:public
ft_to	src/spell.c	/^    char_u	*ft_to;$/;"	m	struct:fromto_S	file:	access:public
ftell	src/tag.c	96;"	d	file:
ftell	src/xxd/xxd.c	/^extern long int ftell();$/;"	p	file:
full_path	src/main.c	/^    int		full_path;		\/* file name argument was full path *\/$/;"	m	struct:__anon9	file:	access:public
full_screen	src/globals.h	/^EXTERN volatile int full_screen INIT(= FALSE);$/;"	v
fullname	src/option.c	/^    char	*fullname;	\/* full option name *\/$/;"	m	struct:vimoption	file:	access:public
fullpathcmp	src/misc1.c	/^fullpathcmp(s1, s2, checkname)$/;"	f
func	src/eval.c	/^    ufunc_T	*func;		\/* function being called *\/$/;"	m	struct:funccall_S	file:	access:public
func	src/if_cscope.h	/^    int     (*func) __ARGS((exarg_T *eap));$/;"	m	struct:__anon86	access:public
func	src/if_lua.c	/^    luaV_function func;$/;"	m	struct:__anon127	file:	access:public
func	src/syntax.c	/^    void    (*func)__ARGS((exarg_T *, int));	\/* function to call *\/$/;"	m	struct:subcommand	file:	access:public
func_breakpoint	src/eval.c	/^func_breakpoint(cookie)$/;"	f
func_dbg_tick	src/eval.c	/^func_dbg_tick(cookie)$/;"	f
func_do_profile	src/eval.c	/^func_do_profile(fp)$/;"	f	file:
func_do_profile	src/eval.c	/^static void func_do_profile __ARGS((ufunc_T *fp));$/;"	p	file:	signature:(ufunc_T *fp)
func_dump_profile	src/eval.c	/^func_dump_profile(fd)$/;"	f
func_free	src/eval.c	/^func_free(fp)$/;"	f	file:
func_free	src/eval.c	/^static void func_free __ARGS((ufunc_T *fp));$/;"	p	file:	signature:(ufunc_T *fp)
func_has_abort	src/eval.c	/^func_has_abort(cookie)$/;"	f
func_has_ended	src/eval.c	/^func_has_ended(cookie)$/;"	f
func_hashtab	src/eval.c	/^static hashtab_T	func_hashtab;$/;"	v	file:
func_level	src/eval.c	/^func_level(cookie)$/;"	f
func_line_end	src/eval.c	/^func_line_end(cookie)$/;"	f
func_line_exec	src/eval.c	/^func_line_exec(cookie)$/;"	f
func_line_start	src/eval.c	/^func_line_start(cookie)$/;"	f
func_name	src/eval.c	/^func_name(cookie)$/;"	f
func_ref	src/eval.c	/^func_ref(name)$/;"	f	file:
func_ref	src/eval.c	/^static void func_ref __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
func_unref	src/eval.c	/^func_unref(name)$/;"	f	file:
func_unref	src/eval.c	/^static void func_unref __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
funccall_S	src/eval.c	/^struct funccall_S$/;"	s	file:
funccall_S::__anon140::room	src/eval.c	/^	char_u	room[VAR_SHORT_LEN];	\/* room for the name *\/$/;"	m	struct:funccall_S::__anon140	file:	access:public
funccall_S::__anon140::var	src/eval.c	/^	dictitem_T	var;		\/* variable (without room for name) *\/$/;"	m	struct:funccall_S::__anon140	file:	access:public
funccall_S::breakpoint	src/eval.c	/^    linenr_T	breakpoint;	\/* next line with breakpoint or zero *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_S::caller	src/eval.c	/^    funccall_T	*caller;	\/* calling function or NULL *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_S::dbg_tick	src/eval.c	/^    int		dbg_tick;	\/* debug_tick when breakpoint was set *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_S::fixvar	src/eval.c	/^    } fixvar[FIXVAR_CNT];$/;"	m	struct:funccall_S	typeref:struct:funccall_S::__anon140	file:	access:public
funccall_S::func	src/eval.c	/^    ufunc_T	*func;		\/* function being called *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_S::l_avars	src/eval.c	/^    dict_T	l_avars;	\/* a: argument variables *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_S::l_avars_var	src/eval.c	/^    dictitem_T	l_avars_var;	\/* variable for a: scope *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_S::l_listitems	src/eval.c	/^    listitem_T	l_listitems[MAX_FUNC_ARGS];	\/* listitems for a:000 *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_S::l_varlist	src/eval.c	/^    list_T	l_varlist;	\/* list for a:000 *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_S::l_vars	src/eval.c	/^    dict_T	l_vars;		\/* l: local function variables *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_S::l_vars_var	src/eval.c	/^    dictitem_T	l_vars_var;	\/* variable for l: scope *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_S::level	src/eval.c	/^    int		level;		\/* top nesting level of executed function *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_S::linenr	src/eval.c	/^    int		linenr;		\/* next line to be executed *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_S::prof_child	src/eval.c	/^    proftime_T	prof_child;	\/* time spent in a child *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_S::rettv	src/eval.c	/^    typval_T	*rettv;		\/* return value *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_S::returned	src/eval.c	/^    int		returned;	\/* ":return" used *\/$/;"	m	struct:funccall_S	file:	access:public
funccall_T	src/eval.c	/^typedef struct funccall_S funccall_T;$/;"	t	typeref:struct:funccall_S	file:
funcdict_T	src/eval.c	/^} funcdict_T;$/;"	t	typeref:struct:__anon142	file:
function_exists	src/eval.c	/^function_exists(name)$/;"	f	file:
function_exists	src/eval.c	/^static int function_exists __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
functions	src/eval.c	/^} functions[] =$/;"	v	typeref:struct:fst	file:
fwd_word	src/search.c	/^fwd_word(count, bigword, eol)$/;"	f
fwrite_crypt	src/undo.c	/^fwrite_crypt(buf, ptr, len, fp)$/;"	f	file:
fwrite_crypt	src/undo.c	/^static size_t fwrite_crypt __ARGS((buf_T *buf UNUSED, char_u *ptr, size_t len, FILE *fp));$/;"	p	file:	signature:(buf_T *buf UNUSED, char_u *ptr, size_t len, FILE *fp)
g	runtime/macros/hanoi/hanoi.vim	/^map g IL$/;"	m
g	runtime/macros/less.vim	/^noremap <script> g gg<SID>L$/;"	m
g	runtime/macros/life/life.vim	/^map g IR$/;"	m
g	runtime/macros/urm/urm.vim	/^map g 1G\/^[(as;.]$/;"	m
g%	runtime/macros/matchit.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	m
g%	runtime/macros/matchit.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	m
g%	runtime/macros/matchit.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	m
g:GetLatestVimScripts_allowautoinstall	runtime/autoload/getscript.vim	/^ let g:GetLatestVimScripts_allowautoinstall= 1$/;"	v
g:GetLatestVimScripts_mv	runtime/autoload/getscript.vim	/^   let g:GetLatestVimScripts_mv= "mv"$/;"	v
g:GetLatestVimScripts_mv	runtime/autoload/getscript.vim	/^   let g:GetLatestVimScripts_mv= "ren"$/;"	v
g:GetLatestVimScripts_options	runtime/autoload/getscript.vim	/^  let g:GetLatestVimScripts_options = ""$/;"	v
g:GetLatestVimScripts_options	runtime/autoload/getscript.vim	/^  let g:GetLatestVimScripts_options= ""$/;"	v
g:GetLatestVimScripts_options	runtime/autoload/getscript.vim	/^  let g:GetLatestVimScripts_options= "-q -O"$/;"	v
g:GetLatestVimScripts_options	runtime/autoload/getscript.vim	/^  let g:GetLatestVimScripts_options= "-s -O"$/;"	v
g:GetLatestVimScripts_wget	runtime/autoload/getscript.vim	/^  let g:GetLatestVimScripts_wget    = 'echo "GetLatestVimScripts needs wget or curl"'$/;"	v
g:GetLatestVimScripts_wget	runtime/autoload/getscript.vim	/^  let g:GetLatestVimScripts_wget= "curl"$/;"	v
g:GetLatestVimScripts_wget	runtime/autoload/getscript.vim	/^  let g:GetLatestVimScripts_wget= "wget"$/;"	v
g:ada#Comment	runtime/autoload/ada.vim	/^let g:ada#Comment	   = "\\\\v^(\\"[^\\"]*\\"|'.'|[^\\"']){-}\\\\zs\\\\s*--.*"$/;"	v
g:ada#Ctags_Kinds	runtime/autoload/ada.vim	/^let g:ada#Ctags_Kinds = {$/;"	v
g:ada#DotWordRegex	runtime/autoload/ada.vim	/^let g:ada#DotWordRegex	   = '\\a\\w*\\(\\_s*\\.\\_s*\\a\\w*\\)*'$/;"	v
g:ada#Keywords	runtime/autoload/ada.vim	/^	let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	runtime/autoload/ada.vim	/^       let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	runtime/autoload/ada.vim	/^    let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	runtime/autoload/ada.vim	/^let g:ada#Keywords	   = []$/;"	v
g:ada#WordRegex	runtime/autoload/ada.vim	/^let g:ada#WordRegex	   = '\\a\\w*'$/;"	v
g:ada_default_compiler	runtime/ftplugin/ada.vim	/^      let g:ada_default_compiler = 'decada'$/;"	v
g:ada_default_compiler	runtime/ftplugin/ada.vim	/^      let g:ada_default_compiler = 'gnat'$/;"	v
g:arg	src/testdir/test49.vim	/^		let g:arg = "brrrr"$/;"	v
g:arg	src/testdir/test49.vim	/^	    let g:arg = "autsch"$/;"	v
g:bmenu_max_pathlen	runtime/menu.vim	/^  let g:bmenu_max_pathlen = 35$/;"	v
g:changelog_date_end_entry_search	runtime/ftplugin/changelog.vim	/^    let g:changelog_date_end_entry_search = '^\\s*$'$/;"	v
g:changelog_date_entry_search	runtime/ftplugin/changelog.vim	/^    let g:changelog_date_entry_search = '^\\s*%d\\_s*%u'$/;"	v
g:changelog_dateformat	runtime/ftplugin/changelog.vim	/^      let g:changelog_dateformat = "%Y-%m-%d"$/;"	v
g:changelog_dateformat	runtime/ftplugin/changelog.vim	/^      let g:changelog_dateformat = g:changelog_timeformat$/;"	v
g:changelog_new_date_format	runtime/ftplugin/changelog.vim	/^    let g:changelog_new_date_format = "%d  %u\\n\\n\\t* %c\\n\\n"$/;"	v
g:changelog_new_entry_format	runtime/ftplugin/changelog.vim	/^    let g:changelog_new_entry_format = "\\t* %c"$/;"	v
g:colors_name	runtime/colors/blue.vim	/^let g:colors_name = "blue"$/;"	v
g:colors_name	runtime/colors/desert.vim	/^let g:colors_name="desert"$/;"	v
g:colors_name	runtime/colors/elflord.vim	/^let g:colors_name = "elflord"$/;"	v
g:colors_name	runtime/colors/koehler.vim	/^let g:colors_name = "koehler"$/;"	v
g:colors_name	runtime/colors/murphy.vim	/^let g:colors_name = "murphy"$/;"	v
g:colors_name	runtime/colors/pablo.vim	/^let g:colors_name = "pablo"$/;"	v
g:colors_name	runtime/colors/ron.vim	/^let g:colors_name = "ron"$/;"	v
g:colors_name	runtime/colors/torte.vim	/^let g:colors_name = "torte"$/;"	v
g:colors_name	runtime/colors/zellner.vim	/^let g:colors_name = "zellner"$/;"	v
g:context_include	runtime/syntax/context.vim	/^  let g:context_include = ['mp', 'javascript', 'xml']$/;"	v
g:ctags_command	runtime/menu.vim	/^    let g:ctags_command = "ctags -R ."$/;"	v
g:ctags_command	runtime/menu.vim	/^    let g:ctags_command = "mc vim:ctags *.*"$/;"	v
g:cucumber_languages	runtime/syntax/cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:debchangelog_listbugs_severities	runtime/ftplugin/debchangelog.vim	/^  let g:debchangelog_listbugs_severities = 'critical,grave,serious,important,normal,minor,wishlist'$/;"	v
g:decada	runtime/compiler/decada.vim	/^   let g:decada = decada#New ()$/;"	v
g:did_changelog_ftplugin	runtime/ftplugin/debchangelog.vim	/^let g:did_changelog_ftplugin = 1$/;"	v
g:did_cobol_ftplugin_functions	runtime/ftplugin/cobol.vim	/^let g:did_cobol_ftplugin_functions = 1$/;"	v
g:did_ocaml_switch	runtime/ftplugin/ocaml.vim	/^  let g:did_ocaml_switch = 1$/;"	v
g:did_ruby_ftplugin_functions	runtime/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:doxygen_end_punctuation	runtime/syntax/doxygen.vim	/^      let g:doxygen_end_punctuation='[.]'$/;"	v
g:eruby_default_subtype	runtime/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	runtime/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:ft_ignore_pat	runtime/filetype.vim	/^  let g:ft_ignore_pat = '\\.\\(Z\\|gz\\|bz2\\|zip\\|tgz\\)$'$/;"	v
g:ftplugin_sql_objects	runtime/ftplugin/sql.vim	/^    let g:ftplugin_sql_objects = 'function,procedure,event,' .$/;"	v
g:ftplugin_sql_omni_key	runtime/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key = '<C-C>'$/;"	v
g:ftplugin_sql_omni_key_left	runtime/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key_left = '<Left>'$/;"	v
g:ftplugin_sql_omni_key_right	runtime/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key_right = '<Right>'$/;"	v
g:ftplugin_sql_statements	runtime/ftplugin/sql.vim	/^    let g:ftplugin_sql_statements = 'create'$/;"	v
g:getscript_cygwin	runtime/autoload/getscript.vim	/^   let g:getscript_cygwin= 0$/;"	v
g:getscript_cygwin	runtime/autoload/getscript.vim	/^   let g:getscript_cygwin= 1$/;"	v
g:getscript_cygwin	runtime/autoload/getscript.vim	/^  let g:getscript_cygwin= 0$/;"	v
g:gnat	runtime/compiler/gnat.vim	/^   let g:gnat = gnat#New ()$/;"	v
g:haml_self_closing_tags	runtime/indent/haml.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:is_kornshell	runtime/syntax/sh.vim	/^   let g:is_kornshell= g:is_posix$/;"	v
g:jump	src/testdir/test49.vim	/^		    let g:jump = "finish"$/;"	v
g:jump	src/testdir/test49.vim	/^		let g:jump = "throw"$/;"	v
g:jump	src/testdir/test49.vim	/^	    let g:jump = "interrupt"$/;"	v
g:jump	src/testdir/test49.vim	/^	let g:jump = "error"$/;"	v
g:jump	src/testdir/test49.vim	/^    let g:jump = "break"$/;"	v
g:jump	src/testdir/test49.vim	/^    let g:jump = "continue"$/;"	v
g:jump	src/testdir/test49.vim	/^    let g:jump = "finish"$/;"	v
g:line	src/testdir/test49.vim	/^		let g:line = 8$/;"	v
g:line	src/testdir/test49.vim	/^	    let g:line = 6$/;"	v
g:liquid_default_subtype	runtime/ftplugin/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_default_subtype	runtime/syntax/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_highlight_types	runtime/syntax/liquid.vim	/^  let g:liquid_highlight_types = []$/;"	v
g:loaded_2html_plugin	runtime/plugin/tohtml.vim	/^let g:loaded_2html_plugin = 'vim7.3_v6'$/;"	v
g:loaded_getscript	runtime/autoload/getscript.vim	/^let g:loaded_getscript= "v32"$/;"	v
g:loaded_getscriptPlugin	runtime/plugin/getscriptPlugin.vim	/^let g:loaded_getscriptPlugin = "v32"$/;"	v
g:loaded_matchparen	runtime/plugin/matchparen.vim	/^let g:loaded_matchparen = 1$/;"	v
g:loaded_netrw	runtime/autoload/netrw.vim	/^let g:loaded_netrw = "v140"$/;"	v
g:loaded_netrwFileHandlers	runtime/autoload/netrwFileHandlers.vim	/^let g:loaded_netrwFileHandlers= "v10"$/;"	v
g:loaded_netrwPlugin	runtime/plugin/netrwPlugin.vim	/^let g:loaded_netrwPlugin = "v140"$/;"	v
g:loaded_netrwSettings	runtime/autoload/netrwSettings.vim	/^let g:loaded_netrwSettings = "v13"$/;"	v
g:loaded_sql_completion	runtime/autoload/sqlcomplete.vim	/^let g:loaded_sql_completion = 100$/;"	v
g:loaded_syntax_completion	runtime/autoload/syntaxcomplete.vim	/^let g:loaded_syntax_completion = 70$/;"	v
g:loaded_tar	runtime/autoload/tar.vim	/^let g:loaded_tar= "v26"$/;"	v
g:loaded_tarPlugin	runtime/plugin/tarPlugin.vim	/^let g:loaded_tarPlugin = "v26"$/;"	v
g:loaded_vimball	runtime/autoload/vimball.vim	/^let g:loaded_vimball = "v31"$/;"	v
g:loaded_vimballPlugin	runtime/plugin/vimballPlugin.vim	/^let g:loaded_vimballPlugin = "v31"$/;"	v
g:loaded_zip	runtime/autoload/zip.vim	/^let g:loaded_zip= "v23"$/;"	v
g:loaded_zipPlugin	runtime/plugin/zipPlugin.vim	/^let g:loaded_zipPlugin = "v23"$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_eo.utf-8.vim	/^let g:menutrans_fileformat_choices = " &Unikso \\n &Dos \\n &Mak \\n &Rezigni "$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_fi_fi.latin1.vim	/^let g:menutrans_fileformat_choices = " &Unix \\n &Dos \\n &Mac \\n &Peru "$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_fr_fr.latin1.vim	/^let g:menutrans_fileformat_choices = " &Unix \\n &Dos \\n &Mac \\n &Annuler "$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n¥­¥ã¥ó¥»¥ë(&C)"$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nã­ã£ã³ã»ã«(&C)"$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_japanese_japan.932.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nLZ(&C)"$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_pl_pl.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_polish_poland.1250.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_ru_ru.koi8-r.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nï&ÔÍÅÎÁ"$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_ru_ru.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nÐ&ÑÐ¼ÐµÐ½Ð°"$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_sl_si.cp1250.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Preklièi"$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_sl_si.latin2.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Preklièi"$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_sl_si.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&PrekliÄi"$/;"	v
g:menutrans_fileformat_choices	runtime/lang/menu_vi_vn.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Há»§y bá»"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_ca_es.latin1.vim	/^let g:menutrans_fileformat_dialog = "Seleccioneu el format per escriure el fitxer."$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_de_de.latin1.vim	/^let g:menutrans_fileformat_dialog = "Wählen Sie ein Datei-Format aus"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_eo.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Elektu la formaton de la skribonta dosiero."$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_es_es.latin1.vim	/^let g:menutrans_fileformat_dialog = "Seleccione el formato para escribir el archivo"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_fi_fi.latin1.vim	/^let g:menutrans_fileformat_dialog = "Anaa tiedoston kirjoitusmuoto."$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_fr_fr.latin1.vim	/^let g:menutrans_fileformat_dialog = "Choisissez le format dans lequel écrire le fichier."$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Válaszd ki a fájl formátumát"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_hu_hu.utf-8.vim	/^let g:menutrans_fileformat_dialog = "VÃ¡laszd ki a fÃ¡jl formÃ¡tumÃ¡t"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_it_it.latin1.vim	/^let g:menutrans_fileformat_dialog = "Scegli formato con cui scrivere il file"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_fileformat_dialog = "¥Õ¥¡¥¤¥ë½ÐÎÏ¤ÎºÝ¤Î²þ¹Ôµ­¹æ¤Î·Á¼°¤òÁª¤ó¤Ç¤¯¤À¤µ¤¤."$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_fileformat_dialog = "ãã¡ã¤ã«åºåã®éã®æ¹è¡è¨å·ã®å½¢å¼ãé¸ãã§ãã ãã."$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_japanese_japan.932.vim	/^let g:menutrans_fileformat_dialog = "t@CoÍÌÛÌüsLÌ`®ðIñÅ­¾³¢."$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_nl_nl.latin1.vim	/^let g:menutrans_fileformat_dialog = "Selecteer formaat voor het schrijven van het bestand"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_no_no.latin1.vim	/^	let g:menutrans_fileformat_dialog = "Velg filformat som filen skal lagres med"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w którym ten plik ma byæ zapisany"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_pl_pl.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w ktÃ³rym ten plik ma byÄ zapisany"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_polish_poland.1250.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w którym ten plik ma byæ zapisany"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_pt_br.vim	/^let g:menutrans_fileformat_dialog = "Selecione o formato para gravar o arquivo"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_pt_pt.vim	/^let g:menutrans_fileformat_dialog = "Selecione o formato para gravar o arquivo"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_ru_ru.koi8-r.vim	/^let g:menutrans_fileformat_dialog = "÷ÙÂÅÒÉÔÅ ÆÏÒÍÁÔ ÆÁÊÌÁ."$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_ru_ru.vim	/^let g:menutrans_fileformat_dialog = "ÐÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ¾ÑÐ¼Ð°Ñ ÑÐ°Ð¹Ð»Ð°."$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_sl_si.cp1250.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_sl_si.latin2.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_sl_si.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_sr_rs.ascii.vim	/^let g:menutrans_fileformat_dialog = "Izaberite vrstu datoteke"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Izaberite vrstu datoteke"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_fileformat_dialog = "¸×ÐÑÕàØâÕ Òàáâã ÔÐâÞâÕÚÕ"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_sr_rs.utf-8.vim	/^let g:menutrans_fileformat_dialog = "ÐÐ·Ð°Ð±ÐµÑÐ¸ÑÐµ Ð²ÑÑÑÑ Ð´Ð°ÑÐ¾ÑÐµÐºÐµ"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_sv_se.latin1.vim	/^let g:menutrans_fileformat_dialog = "Välj filformat som filen ska sparas med"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_uk_ua.cp1251.vim	/^let g:menutrans_fileformat_dialog = "Âèáåð³òü ôîðìàò ôàéëó"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_uk_ua.koi8-u.vim	/^let g:menutrans_fileformat_dialog = "÷ÉÂÅÒ¦ÔØ ÆÏÒÍÁÔ ÆÁÊÌÕ"$/;"	v
g:menutrans_fileformat_dialog	runtime/lang/menu_vi_vn.vim	/^let g:menutrans_fileformat_dialog = "HÃ£y chá»n Äá»nh dáº¡ng táº­p tin."$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_ca_es.latin1.vim	/^let g:menutrans_help_dialog = "Introduïu el terme sobre el qual necessiteu ajuda.\\n\\nUseu el prefix i_ per ordres d'entrada (p.ex.: i_CTRL-X)\\nUseu el prefix c_ per ordres de la línia d'ordres (p.ex.: c_<Del>)\\nUseu el prefix ' per noms d'opcions (p.ex.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_de_de.latin1.vim	/^let g:menutrans_help_dialog = "Geben Sie einen Befehl oder ein Wort ein, für das Sie Hilfe benötigen:\\n\\nVerwenden Sie i_ für Eingabe ('input') Befehle (z.B.: i_CTRL-X)\\nVerwenden Sie c_ für Befehls-Zeilen ('command-line') Befehle (z.B.: c_<Del>)\\nVerwenden Sie ' für Options-Namen (z.B.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_eo.utf-8.vim	/^let g:menutrans_help_dialog = "Tajpu komandon aÅ­ serÄendan vorton en la helparo.\\n\\nAldonu i_ por la komandoj de la enmeta reÄimo (ekz: i_CTRL-X)\\nAldonu c_ por redakto de la komanda linio (ekz: c_<Del>)\\nÄirkaÅ­i la opciojn per apostrofoj (ekz: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_es_es.latin1.vim	/^let g:menutrans_help_dialog = "Introduzca un nombre de comando o palabra para obtener ayuda;\\n\\nAnteponga i_ para comandos de entrada (e.g.: i_CTRL-X)\\nAnteponga c_ para comandos de la línea de comandos (e.g.: c_<Del>)\\nAnteponga ` para un nombre de opción (e.g.: `shiftwidth`)"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_fi_fi.latin1.vim	/^let g:menutrans_help_dialog = "Anna komento tai sana, jota haetaan ohjeesta.\\n\\nAloita i_:llä syöttötilan komentoja varten (esim. i_CTRL-X)\\nAloita c_:llä komentoriviä varten (esim. c_<Del>)\\nKirjoita asetukset puolilainausmerkkeijin (esim. 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_fr_fr.latin1.vim	/^let g:menutrans_help_dialog = "Entrez une commande ou un mot à rechercher dans l'aide.\\n\\nAjoutez i_ pour les commandes du mode Insertion (ex: i_CTRL-X)\\nAjoutez c_ pour l'édition de la ligne de commande (ex: c_<Del>)\\nEntourez les options avec des apostrophes (ex: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_it_it.latin1.vim	/^let g:menutrans_help_dialog = "Batti un comando o una parola per cercare aiuto:\\n\\nPremetti i_ per comandi in modo Input (ad.es.: i_CTRL-X)\\nPremetti c_ per comandi che editano la linea-comandi (ad.es.: c_<Del>)\\nPremetti ' per un nome di opzione (ad.es.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_help_dialog = "¥Ø¥ë¥×¤ò¸¡º÷¤·¤¿¤¤¥³¥Þ¥ó¥É¤â¤·¤¯¤ÏÃ±¸ì¤òÆþÎÏ¤·¤Æ¤¯¤À¤µ¤¤:\\n\\nÁÞÆþ¥â¡¼¥É¤Î¥³¥Þ¥ó¥É¤Ë¤Ï i_ ¤òÀèÆ¬¤ËÉÕ²Ã¤·¤Þ¤¹. (Îã: i_CTRL-X)\\n¥³¥Þ¥ó¥É¥é¥¤¥óÊÔ½¸¥³¥Þ¥ó¥É¤Ë¤Ï c_ ¤òÀèÆ¬¤ËÉÕ²Ã¤·¤Þ¤¹. (Îã: c_<Del>)\\n¥ª¥×¥·¥ç¥ó¤ÎÌ¾Á°¤Ë¤Ï ' ¤òÉÕ²Ã¤·¤Þ¤¹. (Îã: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_help_dialog = "ãã«ããæ¤ç´¢ãããã³ãã³ããããã¯åèªãå¥åãã¦ãã ãã:\\n\\næ¿å¥ã¢ã¼ãã®ã³ãã³ãã«ã¯ i_ ãåé ­ã«ä»å ãã¾ã. (ä¾: i_CTRL-X)\\nã³ãã³ãã©ã¤ã³ç·¨éã³ãã³ãã«ã¯ c_ ãåé ­ã«ä»å ãã¾ã. (ä¾: c_<Del>)\\nãªãã·ã§ã³ã®ååã«ã¯ ' ãä»å ãã¾ã. (ä¾: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_japanese_japan.932.vim	/^let g:menutrans_help_dialog = "wvðõµ½¢R}hàµ­ÍPêðüÍµÄ­¾³¢:\\n\\n}ü[hÌR}hÉÍ i_ ðæªÉtÁµÜ·. (á: i_CTRL-X)\\nR}hCÒWR}hÉÍ c_ ðæªÉtÁµÜ·. (á: c_<Del>)\\nIvVÌ¼OÉÍ ' ðtÁµÜ·. (á: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_no_no.latin1.vim	/^	let g:menutrans_help_dialog = "Skriv en kommando eller ord du vil ha hjelp om:\\n\\nLegg til i_ i begynnelsen for inndatametoder (f.eks.: i_CTRL-X)\\nLegg til c_ i begynnelsen for kommandoer som redigerer kommandolinjen (f.eks.: c_<Del>)\\nLegg til ' i begynnelsen for et valgnavn (f.eks.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_pt_br.vim	/^let g:menutrans_help_dialog = "Digite um comando ou palavra para obter ajuda;\\n\\nAnteponha i_ para comandos de entrada (ex.: i_CTRL-X)\\nAnteponha c_ para comandos da linha de comandos (ex.: c_<Del>)\\nAnteponha ` para um nome de opção (ex.: `shiftwidth`)"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_pt_pt.vim	/^let g:menutrans_help_dialog = "Digite um comando ou palavra para obter ajuda;\\n\\nAnteponha i_ para comandos de entrada (ex.: i_CTRL-X)\\nAnteponha c_ para comandos da linha de comandos (ex.: c_<Del>)\\nAnteponha ` para um nome de opção (ex.: `shiftwidth`)"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_ru_ru.koi8-r.vim	/^let g:menutrans_help_dialog = "÷×ÅÄÉÔÅ ËÏÍÁÎÄÕ ÉÌÉ ÓÌÏ×Ï ÄÌÑ ÐÏÉÓËÁ:\\n\\näÏÂÁ×ØÔÅ i_ ÄÌÑ ÐÏÉÓËÁ ËÏÍÁÎÄ ÒÅÖÉÍÁ ÷ÓÔÁ×ËÉ (ÎÁÐÒÉÍÅÒ, i_CTRL-X)\\näÏÂÁ×ØÔÅ c_ ÄÌÑ ÐÏÉÓËÁ ËÏÍÁÎÄ ïÂÙÞÎÏÇÏ ÒÅÖÉÍÁ (ÎÁÐÒÉÍÅÒ, Ó_<Del>)\\näÏÂÁ×ØÔÅ ' ÄÌÑ ÐÏÉÓËÁ ÓÐÒÁ×ËÉ ÐÏ ÏÐÃÉÉ (ÎÁÐÒÉÍÅÒ, 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_ru_ru.vim	/^let g:menutrans_help_dialog = "ÐÐ²ÐµÐ´Ð¸ÑÐµ ÐºÐ¾Ð¼Ð°Ð½Ð´Ñ Ð¸Ð»Ð¸ ÑÐ»Ð¾Ð²Ð¾ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ°:\\n\\nÐÐ¾Ð±Ð°Ð²ÑÑÐµ i_ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÐºÐ¾Ð¼Ð°Ð½Ð´ ÑÐµÐ¶Ð¸Ð¼Ð° ÐÑÑÐ°Ð²ÐºÐ¸ (Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ, i_CTRL-X)\\nÐÐ¾Ð±Ð°Ð²ÑÑÐµ c_ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÐºÐ¾Ð¼Ð°Ð½Ð´ ÐÐ±ÑÑÐ½Ð¾Ð³Ð¾ ÑÐµÐ¶Ð¸Ð¼Ð° (Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ, Ñ_<Del>)\\nÐÐ¾Ð±Ð°Ð²ÑÑÐµ ' Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÑÐ¿ÑÐ°Ð²ÐºÐ¸ Ð¿Ð¾ Ð¾Ð¿ÑÐ¸Ð¸ (Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ, 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_sl_si.cp1250.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero elite pomoè:\\n\\nUporabite predpono i_ za ukaze v naèinu za pisanje (npr.: i_CTRL-X)\\nUporabite predpono c_ za ukaze v ukazni vrstici (command-line) (npr.: c_<Del>)\\nUporabite predpono ' za imena opcij (npr.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_sl_si.latin2.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero ¾elite pomoè:\\n\\nUporabite predpono i_ za ukaze v naèinu za pisanje (npr.: i_CTRL-X)\\nUporabite predpono c_ za ukaze v ukazni vrstici (command-line) (npr.: c_<Del>)\\nUporabite predpono ' za imena opcij (npr.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_sl_si.utf-8.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero Å¾elite pomoÄ:\\n\\nUporabite predpono i_ za ukaze v naÄinu za pisanje (npr.: i_CTRL-X)\\nUporabite predpono c_ za ukaze v ukazni vrstici (command-line) (npr.: c_<Del>)\\nUporabite predpono ' za imena opcij (npr.: 'shiftwidth')"$/;"	v
g:menutrans_help_dialog	runtime/lang/menu_vi_vn.vim	/^let g:menutrans_help_dialog = "HÃ£y nháº­p cÃ¢u lá»nh hoáº·c tá»« khÃ³a tÃ¬m kiáº¿m:\\n\\nThÃªm i_ Äá» tÃ¬m kiáº¿m cÃ¢u lá»nh cá»§a cháº¿ Äá» Nháº­p Input (VÃ­ dá»¥, i_CTRL-X)\\nThÃªm c_ Äá» tÃ¬m kiáº¿m cÃ¢u lá»nh cá»§a cháº¿ Äá» soáº¡n tháº£o dÃ²ng lá»nh (VÃ­ dá»¥, Ñ_<Del>)\\nThÃªm ' Äá» tÃ¬m kiáº¿m trá»£ giÃºp cho má»t tÃ¹y chá»n (vÃ­ dá»¥, 'shiftwidth')"$/;"	v
g:menutrans_no_file	runtime/lang/menu_ca_es.latin1.vim	/^let g:menutrans_no_file = "[Cap fitxer]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_de_de.latin1.vim	/^let g:menutrans_no_file = "[Keine Datei]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_eo.utf-8.vim	/^let g:menutrans_no_file = "[Neniu dosiero]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_es_es.latin1.vim	/^let g:menutrans_no_file = "[Sin archivo]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_fi_fi.latin1.vim	/^let g:menutrans_no_file = "[Ei tiedostoja]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_fr_fr.latin1.vim	/^let g:menutrans_no_file = "[Aucun fichier]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_it_it.latin1.vim	/^let g:menutrans_no_file = "[Senza nome]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_no_file = "[ÌµÂê]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_no_file = "[ç¡é¡]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_japanese_japan.932.vim	/^let g:menutrans_no_file = "[³è]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_no_no.latin1.vim	/^	let g:menutrans_no_file = "[Uten navn]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_pt_br.vim	/^let g:menutrans_no_file = "[Sem arquivos]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_pt_pt.vim	/^let g:menutrans_no_file = "[Sem arquivos]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_sl_si.cp1250.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_sl_si.latin2.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_no_file	runtime/lang/menu_sl_si.utf-8.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_ca_es.latin1.vim	/^let g:menutrans_path_dialog = "Introduïu les ubicacions on cercar fitxers.\\nSepareu els noms dels directoris amb una coma."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_de_de.latin1.vim	/^let g:menutrans_path_dialog = "Geben Sie Such-Pfade für Dateien ein.\\nTrennen Sie die Verzeichnis-Namen durch Kommata."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_eo.utf-8.vim	/^let g:menutrans_path_dialog = "Tajpu la vojon de serÄo de dosieroj.\\nDisigu la dosierujojn per komoj."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_es_es.latin1.vim	/^let g:menutrans_path_dialog = "Introduzca la ruta de búsqueda para los archivos.\\nSepare los nombres de los directorios con una coma."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_fi_fi.latin1.vim	/^let g:menutrans_path_dialog = "Anna tiedostojen hakupolku.\\nErota hakemistot pilkuin."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_fr_fr.latin1.vim	/^let g:menutrans_path_dialog = "Entrez le chemin de recherche des fichiers.\\nSéparez les répertoires par des virgules."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Írd be a keresett fájl lehetséges elérési útjait, vesszõvel elválasztva"$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_hu_hu.utf-8.vim	/^let g:menutrans_path_dialog = "Ãrd be a keresett fÃ¡jl lehetsÃ©ges elÃ©rÃ©si Ãºtjait, vesszÅvel elvÃ¡lasztva"$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_it_it.latin1.vim	/^let g:menutrans_path_dialog = "Batti percorso di ricerca per i file.\\nSepara fra loro i nomi di directory con una virgola."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_path_dialog = "¥Õ¥¡¥¤¥ë¤Î¸¡º÷¥Ñ¥¹¤òÆþÎÏ¤·¤Æ¤¯¤À¤µ¤¤:\\n¥Ç¥£¥ì¥¯¥È¥êÌ¾¤Ï¥«¥ó¥Þ ( , ) ¤Ç¶èÀÚ¤Ã¤Æ¤¯¤À¤µ¤¤."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_path_dialog = "ãã¡ã¤ã«ã®æ¤ç´¢ãã¹ãå¥åãã¦ãã ãã:\\nãã£ã¬ã¯ããªåã¯ã«ã³ã ( , ) ã§åºåã£ã¦ãã ãã."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_japanese_japan.932.vim	/^let g:menutrans_path_dialog = "t@CÌõpXðüÍµÄ­¾³¢:\\nfBNg¼ÍJ} ( , ) ÅæØÁÄ­¾³¢."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_nl_nl.latin1.vim	/^let g:menutrans_path_dialog = "Typ het zoekpad voor bestanden.\\nGebruik commas tussen de padnamen."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_no_no.latin1.vim	/^	let g:menutrans_path_dialog = "Skriv søkesti for filer.\\nSkill katalognavn med komma."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Wprowad¼ ¶cie¿kê poszukiwania plików.\\nProszê rozdzielaæ nazwy katalogów przecinkiem."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_pl_pl.utf-8.vim	/^let g:menutrans_path_dialog = "WprowadÅº ÅcieÅ¼kÄ poszukiwania plikÃ³w.\\nProszÄ rozdzielaÄ nazwy katalogÃ³w przecinkiem."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_polish_poland.1250.vim	/^let g:menutrans_path_dialog = "Wprowad cie¿kê poszukiwania plików.\\nProszê rozdzielaæ nazwy katalogów przecinkiem."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_pt_br.vim	/^let g:menutrans_path_dialog = "Indique um caminho de procura para os arquivos.\\nSepare os nomes dos diretórios com uma vírgula."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_pt_pt.vim	/^let g:menutrans_path_dialog = "Indique um caminho de procura para os arquivos.\\nSepare os nomes dos diretórios com uma vírgula."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_ru_ru.koi8-r.vim	/^let g:menutrans_path_dialog = "õËÁÖÉÔÅ ÐÕÔØ ÄÌÑ ÐÏÉÓËÁ ÆÁÊÌÏ×.\\néÍÅÎÁ ËÁÔÁÌÏÇÏ× ÒÁÚÄÅÌÑÀÔÓÑ ÚÁÐÑÔÙÍÉ."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_ru_ru.vim	/^let g:menutrans_path_dialog = "Ð£ÐºÐ°Ð¶Ð¸ÑÐµ Ð¿ÑÑÑ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÑÐ°Ð¹Ð»Ð¾Ð².\\nÐÐ¼ÐµÐ½Ð° ÐºÐ°ÑÐ°Ð»Ð¾Ð³Ð¾Ð² ÑÐ°Ð·Ð´ÐµÐ»ÑÑÑÑÑ Ð·Ð°Ð¿ÑÑÑÐ¼Ð¸."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_sl_si.cp1250.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev loèite z vejico."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_sl_si.latin2.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev loèite z vejico."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_sl_si.utf-8.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev loÄite z vejico."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_sr_rs.ascii.vim	/^let g:menutrans_path_dialog = "Unesite put pretrage za datoteke\\nRazdvojite zarezima imena direktorijuma."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Unesite put pretrage za datoteke\\nRazdvojite zarezima imena direktorijuma."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_path_dialog = "ÃÝÕáØâÕ ßãâ ßàÕâàÐÓÕ ×Ð ÔÐâÞâÕÚÕ\\nÀÐ×ÔÒÞøØâÕ ×ÐàÕ×ØÜÐ ØÜÕÝÐ ÔØàÕÚâÞàØøãÜÐ."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_sr_rs.utf-8.vim	/^let g:menutrans_path_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð¿ÑÑ Ð¿ÑÐµÑÑÐ°Ð³Ðµ Ð·Ð° Ð´Ð°ÑÐ¾ÑÐµÐºÐµ\\nÐ Ð°Ð·Ð´Ð²Ð¾ÑÐ¸ÑÐµ Ð·Ð°ÑÐµÐ·Ð¸Ð¼Ð° Ð¸Ð¼ÐµÐ½Ð° Ð´Ð¸ÑÐµÐºÑÐ¾ÑÐ¸ÑÑÐ¼Ð°."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_sv_se.latin1.vim	/^let g:menutrans_path_dialog = "Skriv in sökväg för filer.\\nSeparera katalognamn med komma"$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_uk_ua.cp1251.vim	/^let g:menutrans_path_dialog = "Âêàæ³òü øëÿõ ïîøóêó ôàéë³â\\nÐîçä³ëÿéòå íàçâè äèðåêòîð³é êîìàìè."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_uk_ua.koi8-u.vim	/^let g:menutrans_path_dialog = "÷ËÁÖ¦ÔØ ÛÌÑÈ ÐÏÛÕËÕ ÆÁÊÌ¦×\\nòÏÚÄ¦ÌÑÊÔÅ ÎÁÚ×É ÄÉÒÅËÔÏÒ¦Ê ËÏÍÁÍÉ."$/;"	v
g:menutrans_path_dialog	runtime/lang/menu_vi_vn.vim	/^let g:menutrans_path_dialog = "HÃ£y chá» ra ÄÆ°á»ng dáº«n Äá» tÃ¬m kiáº¿m táº­p tin.\\nTÃªn cá»§a thÆ° má»¥c phÃ¢n cÃ¡ch nhau bá»i dáº¥u pháº©y."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_ca_es.latin1.vim	/^let g:menutrans_tags_dialog = "Introduïu els noms dels fitxers d'etiquetes.\\nSepareu els noms amb una coma."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_de_de.latin1.vim	/^let g:menutrans_tags_dialog = "Geben Sie die Namen der 'tag'-Dateien ein.\\nTrennen Sie die Namen durch Kommata."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_eo.utf-8.vim	/^let g:menutrans_tags_dialog = "Tajpu la nomojn de dosieroj de etikedoj.\\nDisigu la nomojn per komoj."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_es_es.latin1.vim	/^let g:menutrans_tags_dialog = "Introduzca los nombres de los archivos de tags.\\nSepare los nombres con una coma."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_fi_fi.latin1.vim	/^let g:menutrans_tags_dialog = "Anna tägitiedostojen nimet.\\nErota tidostot pilkuin."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_fr_fr.latin1.vim	/^let g:menutrans_tags_dialog = "Entrez les noms des fichiers d'étiquettes.\\nSéparez les noms par des virgules."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Írd be a tag fájl lehetséges elérési útjait, vesszõvel elválasztva"$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_hu_hu.utf-8.vim	/^let g:menutrans_tags_dialog = "Ãrd be a tag fÃ¡jl lehetsÃ©ges elÃ©rÃ©si Ãºtjait, vesszÅvel elvÃ¡lasztva"$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_it_it.latin1.vim	/^let g:menutrans_tags_dialog = "Batti nome dei file di tag.\\nSepara fra loro i nomi di directory con una virgola."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_tags_dialog = "¥¿¥°¥Õ¥¡¥¤¥ë¤ÎÌ¾Á°¤òÆþÎÏ¤·¤Æ¤¯¤À¤µ¤¤:\\nÌ¾Á°¤Ï¥«¥ó¥Þ ( , ) ¤Ç¶èÀÚ¤Ã¤Æ¤¯¤À¤µ¤¤."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_tags_dialog = "ã¿ã°ãã¡ã¤ã«ã®ååãå¥åãã¦ãã ãã:\\nååã¯ã«ã³ã ( , ) ã§åºåã£ã¦ãã ãã."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_japanese_japan.932.vim	/^let g:menutrans_tags_dialog = "^Ot@CÌ¼OðüÍµÄ­¾³¢:\\n¼OÍJ} ( , ) ÅæØÁÄ­¾³¢."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_nl_nl.latin1.vim	/^let g:menutrans_tags_dialog = "Typ namen van tag bestanden.\\nGebruik commas tussen de namen."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_no_no.latin1.vim	/^	let g:menutrans_tags_dialog = "Skriv navn på tagfiler.\\nSkill navnene med komma."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plików tagów.\\nProszê rozdzielaæ nazwy przecinkiem."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_pl_pl.utf-8.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plikÃ³w tagÃ³w.\\nProszÄ rozdzielaÄ nazwy przecinkiem."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_polish_poland.1250.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plików tagów.\\nProszê rozdzielaæ nazwy przecinkiem."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_pt_br.vim	/^let g:menutrans_tags_dialog = "Indique os nomes dos arquivos de tags.\\nSepare os nomes com uma vírgula."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_pt_pt.vim	/^let g:menutrans_tags_dialog = "Indique os nomes dos arquivos de tags.\\nSepare os nomes com uma vírgula."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_ru_ru.koi8-r.vim	/^let g:menutrans_tags_dialog = "÷×ÅÄÉÔÅ ÉÍÅÎÁ ÆÁÊÌÏ× ÍÅÔÏË (ÞÅÒÅÚ ÚÁÐÑÔÕÀ).\\n"$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_ru_ru.vim	/^let g:menutrans_tags_dialog = "ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð¸Ð¼ÐµÐ½Ð° ÑÐ°Ð¹Ð»Ð¾Ð² Ð¼ÐµÑÐ¾Ðº (ÑÐµÑÐµÐ· Ð·Ð°Ð¿ÑÑÑÑ).\\n"$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_sl_si.cp1250.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z znaèkami ('tag').\\nImana loèite z vejicami."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_sl_si.latin2.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z znaèkami ('tag').\\nImana loèite z vejicami."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_sl_si.utf-8.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z znaÄkami ('tag').\\nImana loÄite z vejicami."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_sr_rs.ascii.vim	/^let g:menutrans_tags_dialog = "Unesite imena datoteka sa oznakama\\nRazdvojite zarezima imena."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Unesite imena datoteka sa oznakama\\nRazdvojite zarezima imena."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_tags_dialog = "ÃÝÕáØâÕ ØÜÕÝÐ ÔÐâÞâÕÚÐ áÐ Þ×ÝÐÚÐÜÐ\\nÀÐ×ÔÒÞøØâÕ ×ÐàÕ×ØÜÐ ØÜÕÝÐ."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_sr_rs.utf-8.vim	/^let g:menutrans_tags_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð¸Ð¼ÐµÐ½Ð° Ð´Ð°ÑÐ¾ÑÐµÐºÐ° ÑÐ° Ð¾Ð·Ð½Ð°ÐºÐ°Ð¼Ð°\\nÐ Ð°Ð·Ð´Ð²Ð¾ÑÐ¸ÑÐµ Ð·Ð°ÑÐµÐ·Ð¸Ð¼Ð° Ð¸Ð¼ÐµÐ½Ð°."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_sv_se.latin1.vim	/^let g:menutrans_tags_dialog = "Skriv in namn på taggfiler.\\nSeparera namn med komma."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_uk_ua.cp1251.vim	/^let g:menutrans_tags_dialog = "Âêàæ³òü íàçâè ôàéë³â ïîì³òîê\\nÐîçä³ëÿéòå íàçâè êîìàìè."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_uk_ua.koi8-u.vim	/^let g:menutrans_tags_dialog = "÷ËÁÖ¦ÔØ ÎÁÚ×É ÆÁÊÌ¦× ÐÏÍ¦ÔÏË\\nòÏÚÄ¦ÌÑÊÔÅ ÎÁÚ×É ËÏÍÁÍÉ."$/;"	v
g:menutrans_tags_dialog	runtime/lang/menu_vi_vn.vim	/^let g:menutrans_tags_dialog = "Nháº­p tÃªn táº­p tin tháº» ghi (phÃ¢n cÃ¡ch bá»i dáº¥u pháº©y).\\n"$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_ca_es.latin1.vim	/^let g:menutrans_textwidth_dialog = "Introduïu la nova amplada del text (0 per infinit): "$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_de_de.latin1.vim	/^let g:menutrans_textwidth_dialog = "Geben Sie eine neue Text-Breite ein (oder 0, um die Formatierung abzuschalten)"$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_eo.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Tajpu la novan larÄon de teksto\\n(0 por malÅalti formatigon)."$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_es_es.latin1.vim	/^let g:menutrans_textwidth_dialog = "Introduzca el nuevo ancho del texto (0 para desactivar el quiebre de línea): "$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_fi_fi.latin1.vim	/^let g:menutrans_textwidth_dialog = "Anna uusi tekstin leveys\\n(0 poistaa käytöstä)"$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_fr_fr.latin1.vim	/^let g:menutrans_textwidth_dialog = "Entrez la nouvelle largeur du texte\\n(0 pour désactiver le formattage)."$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Írd be a szöveg szélességét (0 = formázás kikapcsolva)"$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_hu_hu.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Ãrd be a szÃ¶veg szÃ©lessÃ©gÃ©t (0 = formÃ¡zÃ¡s kikapcsolva)"$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_it_it.latin1.vim	/^let g:menutrans_textwidth_dialog = "Batti nuova lunghezza linea (0 per inibire la formattazione): "$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_textwidth_dialog = "¥Æ¥­¥¹¥È¤ÎÉý('textwidth')¤òÀßÄê¤·¤Æ¤¯¤À¤µ¤¤ (0¤ÇÀ°·Á¤òÌµ¸ú²½):"$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_textwidth_dialog = "ãã­ã¹ãã®å¹('textwidth')ãè¨­å®ãã¦ãã ãã (0ã§æ´å½¢ãç¡å¹å):"$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_japanese_japan.932.vim	/^let g:menutrans_textwidth_dialog = "eLXgÌ('textwidth')ðÝèµÄ­¾³¢ (0Å®`ð³ø»):"$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_nl_nl.latin1.vim	/^let g:menutrans_textwidth_dialog = "Typ de nieuwe tekst breedte (0 om formatteren uit the schakelen): "$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_no_no.latin1.vim	/^	let g:menutrans_textwidth_dialog = "Velg ny tekstbredde (0 for å forhindre formatering): "$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Wprowad¼ now± szeroko¶æ tekstu (0 wy³±cza przewijanie): "$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_pl_pl.utf-8.vim	/^let g:menutrans_textwidth_dialog = "WprowadÅº nowÄ szerokoÅÄ tekstu (0 wyÅÄcza przewijanie): "$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_polish_poland.1250.vim	/^let g:menutrans_textwidth_dialog = "Wprowad now¹ szerokoæ tekstu (0 wy³¹cza przewijanie): "$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_pt_br.vim	/^let g:menutrans_textwidth_dialog = "Digite a nova largura do texto (0 para desativar a formatação): "$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_pt_pt.vim	/^let g:menutrans_textwidth_dialog = "Digite a nova largura do texto (0 para desativar a formatação): "$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_ru_ru.koi8-r.vim	/^let g:menutrans_textwidth_dialog = "÷×ÅÄÉÔÅ ÛÉÒÉÎÕ ÔÅËÓÔÁ ÄÌÑ ÆÏÒÍÁÔÉÒÏ×ÁÎÉÑ.\\näÌÑ ÏÔÍÅÎÙ ÆÏÒÍÁÔÉÒÏ×ÁÎÉÑ ××ÅÄÉÔÅ 0."$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_ru_ru.vim	/^let g:menutrans_textwidth_dialog = "ÐÐ²ÐµÐ´Ð¸ÑÐµ ÑÐ¸ÑÐ¸Ð½Ñ ÑÐµÐºÑÑÐ° Ð´Ð»Ñ ÑÐ¾ÑÐ¼Ð°ÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ.\\nÐÐ»Ñ Ð¾ÑÐ¼ÐµÐ½Ñ ÑÐ¾ÑÐ¼Ð°ÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ Ð²Ð²ÐµÐ´Ð¸ÑÐµ 0."$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_sl_si.cp1250.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo irino besedila (ali 0 za izklop formatiranja): "$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_sl_si.latin2.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo ¹irino besedila (ali 0 za izklop formatiranja): "$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_sl_si.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo Å¡irino besedila (ali 0 za izklop formatiranja): "$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_sr_rs.ascii.vim	/^let g:menutrans_textwidth_dialog = "Unesite novu sirinu teksta (0 sprecava prelom)"$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Unesite novu ¹irinu teksta (0 spreèava prelom)"$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_textwidth_dialog = "ÃÝÕáØâÕ ÝÞÒã èØàØÝã âÕÚáâÐ (0 áßàÕçÐÒÐ ßàÕÛÞÜ)"$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_sr_rs.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð½Ð¾Ð²Ñ ÑÐ¸ÑÐ¸Ð½Ñ ÑÐµÐºÑÑÐ° (0 ÑÐ¿ÑÐµÑÐ°Ð²Ð° Ð¿ÑÐµÐ»Ð¾Ð¼)"$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_sv_se.latin1.vim	/^let g:menutrans_textwidth_dialog = "Välj ny textbredd (0 för att förhindra formatering): "$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_uk_ua.cp1251.vim	/^let g:menutrans_textwidth_dialog = "Âêàæ³òü íîâó øèðèíó òåêñòó (0 äëÿ â³äì³íè ôîìàòóâàííÿ)"$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_uk_ua.koi8-u.vim	/^let g:menutrans_textwidth_dialog = "÷ËÁÖ¦ÔØ ÎÏ×Õ ÛÉÒÉÎÕ ÔÅËÓÔÕ (0 ÄÌÑ ×¦ÄÍ¦ÎÉ ÆÏÍÁÔÕ×ÁÎÎÑ)"$/;"	v
g:menutrans_textwidth_dialog	runtime/lang/menu_vi_vn.vim	/^let g:menutrans_textwidth_dialog = "HÃ£y nháº­p chiá»u rá»ng vÄn báº£n má»i.\\nNháº­p 0 Äá» há»§y bá»."$/;"	v
g:netrw_cursorline	runtime/autoload/netrw.vim	/^ let g:netrw_cursorline= 1$/;"	v
g:netrw_cygwin	runtime/autoload/netrw.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	runtime/autoload/netrw.vim	/^   let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	runtime/autoload/netrw.vim	/^  let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	runtime/autoload/tar.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	runtime/autoload/tar.vim	/^   let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	runtime/autoload/tar.vim	/^  let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	runtime/autoload/vimball.vim	/^    let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	runtime/autoload/vimball.vim	/^    let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	runtime/autoload/vimball.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_dav_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_dav_cmd	= "cadaver"$/;"	v
g:netrw_dav_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_dav_cmd	= "curl"$/;"	v
g:netrw_dav_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_dav_cmd   = ""$/;"	v
g:netrw_fetch_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_fetch_cmd	= ""$/;"	v
g:netrw_fetch_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_fetch_cmd	= "fetch -o"$/;"	v
g:netrw_ftp_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_ftp_cmd	= "ftp"$/;"	v
g:netrw_ftp_list_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_ftp_list_cmd     = "dir"$/;"	v
g:netrw_ftp_list_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_ftp_list_cmd     = "ls -lF"$/;"	v
g:netrw_ftp_sizelist_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_ftp_sizelist_cmd = "dir"$/;"	v
g:netrw_ftp_sizelist_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_ftp_sizelist_cmd = "ls -slF"$/;"	v
g:netrw_ftp_timelist_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_ftp_timelist_cmd = "dir"$/;"	v
g:netrw_ftp_timelist_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_ftp_timelist_cmd = "ls -tlF"$/;"	v
g:netrw_http_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_http_cmd	= ""$/;"	v
g:netrw_http_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_http_cmd	= "curl"$/;"	v
g:netrw_http_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_http_cmd	= "fetch"$/;"	v
g:netrw_http_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_http_cmd	= "wget"$/;"	v
g:netrw_http_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_http_cmd = "elinks"$/;"	v
g:netrw_http_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_http_cmd = "links"$/;"	v
g:netrw_ignorenetrc	runtime/autoload/netrw.vim	/^  let g:netrw_ignorenetrc= 0$/;"	v
g:netrw_ignorenetrc	runtime/autoload/netrw.vim	/^  let g:netrw_ignorenetrc= 1$/;"	v
g:netrw_list_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_list_cmd= ""$/;"	v
g:netrw_list_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_list_cmd= g:netrw_scp_cmd." -ls USEPORT HOSTNAME:"$/;"	v
g:netrw_list_cmd	runtime/autoload/netrw.vim	/^  let g:netrw_list_cmd= g:netrw_ssh_cmd." USEPORT HOSTNAME ls -FLa"$/;"	v
g:netrw_list_cmd	runtime/autoload/netrw.vim	/^ let g:netrw_list_cmd= g:netrw_list_cmd." -l"$/;"	v
g:netrw_liststyle	runtime/autoload/netrw.vim	/^ let g:netrw_liststyle= s:THINLIST$/;"	v
g:netrw_localcopycmd	runtime/autoload/netrw.vim	/^   let g:netrw_localcopycmd= "copy"$/;"	v
g:netrw_localcopycmd	runtime/autoload/netrw.vim	/^   let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	runtime/autoload/netrw.vim	/^  let g:netrw_localcopycmd= ""$/;"	v
g:netrw_localcopycmd	runtime/autoload/netrw.vim	/^  let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	runtime/autoload/tar.vim	/^    let g:netrw_localcopycmd= "copy"$/;"	v
g:netrw_localcopycmd	runtime/autoload/tar.vim	/^    let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	runtime/autoload/tar.vim	/^   let g:netrw_localcopycmd= ""$/;"	v
g:netrw_localcopycmd	runtime/autoload/tar.vim	/^   let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localmovecmd	runtime/autoload/netrw.vim	/^   let g:netrw_localmovecmd= "move"$/;"	v
g:netrw_localmovecmd	runtime/autoload/netrw.vim	/^   let g:netrw_localmovecmd= "mv"$/;"	v
g:netrw_localmovecmd	runtime/autoload/netrw.vim	/^  let g:netrw_localmovecmd= ""$/;"	v
g:netrw_localmovecmd	runtime/autoload/netrw.vim	/^  let g:netrw_localmovecmd= "mv"$/;"	v
g:netrw_scp_cmd	runtime/autoload/netrw.vim	/^   let g:netrw_scp_cmd ="pscp -i C:\\\\private.ppk"$/;"	v
g:netrw_sort_sequence	runtime/autoload/netrw.vim	/^  let g:netrw_sort_sequence= '[\\\/]$,\\.h$,\\.c$,\\.cpp$,*,\\.o$,\\.obj$,\\.info$,\\.swp$,\\.bak$,\\~$'$/;"	v
g:netrw_sort_sequence	runtime/autoload/netrw.vim	/^  let g:netrw_sort_sequence= '[\\\/]$,\\<core\\%(\\.\\d\\+\\)\\=\\>,\\.h$,\\.c$,\\.cpp$,*,\\.o$,\\.obj$,\\.info$,\\.swp$,\\.bak$,\\~$'$/;"	v
g:omni_sql_ignorecase	runtime/autoload/sqlcomplete.vim	/^    let g:omni_sql_ignorecase = &ignorecase$/;"	v
g:omni_sql_include_owner	runtime/autoload/sqlcomplete.vim	/^            let g:omni_sql_include_owner = 1$/;"	v
g:omni_sql_include_owner	runtime/autoload/sqlcomplete.vim	/^    let g:omni_sql_include_owner = 0$/;"	v
g:omni_sql_precache_syntax_groups	runtime/autoload/sqlcomplete.vim	/^    let g:omni_sql_precache_syntax_groups = [$/;"	v
g:omni_sql_use_tbl_alias	runtime/autoload/sqlcomplete.vim	/^    let g:omni_sql_use_tbl_alias = 'a'$/;"	v
g:omni_syntax_group_exclude_lifelines	runtime/syntax/lifelines.vim	/^		let g:omni_syntax_group_exclude_lifelines = 'lifelinesError'$/;"	v
g:omni_syntax_ignorecase	runtime/autoload/syntaxcomplete.vim	/^    let g:omni_syntax_ignorecase = &ignorecase$/;"	v
g:omni_syntax_minimum_length	runtime/autoload/syntaxcomplete.vim	/^    let g:omni_syntax_minimum_length = 0$/;"	v
g:omni_syntax_use_iskeyword	runtime/autoload/syntaxcomplete.vim	/^    let g:omni_syntax_use_iskeyword = 1$/;"	v
g:rubycomplete_buffer_loading	runtime/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	runtime/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_include_object	runtime/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	runtime/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	runtime/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:sh_fold_enabled	runtime/syntax/sh.vim	/^ let g:sh_fold_enabled= 0$/;"	v
g:spell_clean_limit	runtime/spell/cleanadd.vim	/^  let g:spell_clean_limit = 1$/;"	v
g:spellfile_URL	runtime/autoload/spellfile.vim	/^    let g:spellfile_URL = 'ftp:\/\/ftp.vim.org\/pub\/vim\/runtime\/spell'$/;"	v
g:spellfile_URL	runtime/autoload/spellfile.vim	/^    let g:spellfile_URL = 'http:\/\/ftp.vim.org\/pub\/vim\/runtime\/spell'$/;"	v
g:taken	src/testdir/test49.vim	/^	    let g:taken = g:taken . "T" . t$/;"	v
g:tar_browseoptions	runtime/autoload/tar.vim	/^ let g:tar_browseoptions= "Ptf"$/;"	v
g:tar_cmd	runtime/autoload/tar.vim	/^ let g:tar_cmd= "tar"$/;"	v
g:tar_copycmd	runtime/autoload/tar.vim	/^ let g:tar_copycmd= g:netrw_localcopycmd$/;"	v
g:tar_extractcmd	runtime/autoload/tar.vim	/^ let g:tar_extractcmd= "tar -xf"$/;"	v
g:tar_readoptions	runtime/autoload/tar.vim	/^ let g:tar_readoptions= "OPxf"$/;"	v
g:tar_shq	runtime/autoload/tar.vim	/^   let g:tar_shq= "'"$/;"	v
g:tar_shq	runtime/autoload/tar.vim	/^   let g:tar_shq= '"'$/;"	v
g:tar_shq	runtime/autoload/tar.vim	/^  let g:tar_shq= "'"$/;"	v
g:tar_shq	runtime/autoload/tar.vim	/^  let g:tar_shq= &shq$/;"	v
g:tar_writeoptions	runtime/autoload/tar.vim	/^ let g:tar_writeoptions= "uf"$/;"	v
g:tex_fold_enabled	runtime/syntax/tex.vim	/^ let g:tex_fold_enabled= 0$/;"	v
g:tex_no_error	runtime/syntax/tex.vim	/^ let g:tex_no_error= 1$/;"	v
g:vhdl_indent_genportmap	runtime/indent/vhdl.vim	/^  let g:vhdl_indent_genportmap = 1$/;"	v
g:vhdl_indent_rhsassign	runtime/indent/vhdl.vim	/^  let g:vhdl_indent_rhsassign = 1$/;"	v
g:vimball_mkdir	runtime/autoload/vimball.vim	/^   let g:vimball_mkdir= "makedir"$/;"	v
g:vimball_mkdir	runtime/autoload/vimball.vim	/^   let g:vimball_mkdir= "mkdir"$/;"	v
g:vimball_mkdir	runtime/autoload/vimball.vim	/^   let g:vimball_mkdir= g:netrw_local_mkdir$/;"	v
g:vimsyn_embed	runtime/syntax/vim.vim	/^ let g:vimsyn_embed= "lmpPr"$/;"	v
g:vimsyn_maxlines	runtime/syntax/vim.vim	/^ let g:vimsyn_maxlines= g:vim_maxlines$/;"	v
g:vimsyn_minlines	runtime/syntax/vim.vim	/^ let g:vimsyn_minlines= g:vim_minlines$/;"	v
g:vimsyn_noerror	runtime/syntax/vim.vim	/^ let g:vimsyn_noerror= g:vimsyntax_noerror$/;"	v
g:xmldata_html32	runtime/autoload/xml/html32.vim	/^let g:xmldata_html32 = {$/;"	v
g:xmldata_html401s	runtime/autoload/xml/html401s.vim	/^let g:xmldata_html401s = {$/;"	v
g:xmldata_html401t	runtime/autoload/xml/html401f.vim	/^let g:xmldata_html401t = {$/;"	v
g:xmldata_html401t	runtime/autoload/xml/html401t.vim	/^let g:xmldata_html401t = {$/;"	v
g:xmldata_html40s	runtime/autoload/xml/html40s.vim	/^let g:xmldata_html40s = {$/;"	v
g:xmldata_html40t	runtime/autoload/xml/html40f.vim	/^let g:xmldata_html40t = {$/;"	v
g:xmldata_html40t	runtime/autoload/xml/html40t.vim	/^let g:xmldata_html40t = {$/;"	v
g:xmldata_xhtml10f	runtime/autoload/xml/xhtml10f.vim	/^let g:xmldata_xhtml10f = {$/;"	v
g:xmldata_xhtml10s	runtime/autoload/xml/xhtml10s.vim	/^let g:xmldata_xhtml10s = {$/;"	v
g:xmldata_xhtml10t	runtime/autoload/xml/xhtml10t.vim	/^let g:xmldata_xhtml10t = {$/;"	v
g:xmldata_xhtml11	runtime/autoload/xml/xhtml11.vim	/^let g:xmldata_xhtml11 = {$/;"	v
g:xmldata_xsd	runtime/autoload/xml/xsd.vim	/^let g:xmldata_xsd = {$/;"	v
g:xmldata_xsl	runtime/autoload/xml/xsl.vim	/^let g:xmldata_xsl = {$/;"	v
g:zip_shq	runtime/autoload/zip.vim	/^  let g:zip_shq= "'"$/;"	v
g:zip_shq	runtime/autoload/zip.vim	/^  let g:zip_shq= &shq$/;"	v
g:zip_shq	runtime/autoload/zip.vim	/^  let g:zip_shq= '"'$/;"	v
g:zip_unzipcmd	runtime/autoload/zip.vim	/^ let g:zip_unzipcmd= "unzip"$/;"	v
g:zip_zipcmd	runtime/autoload/zip.vim	/^ let g:zip_zipcmd= "zip"$/;"	v
g<C-]>	runtime/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#Jump_Tag ('','stjump')<cr>$/;"	m
g<C-]>	runtime/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#List_Tag ()<cr>$/;"	m
g<C-]>	runtime/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> g<C-]>      :<C-U>exe         "tjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
g<LeftMouse>	<C-RightMouse>	runtime/macros/swapmous.vim	/^noremap	 g<LeftMouse>	<C-RightMouse>$/;"	m
g<RightMouse>	<C-LeftMouse>	runtime/macros/swapmous.vim	/^noremap	 g<RightMouse>	<C-LeftMouse>$/;"	m
gDialogHotKeys	src/gui_mac.c	/^static short *gDialogHotKeys;$/;"	v	file:
gFontPanelInfo	src/gui_mac.c	/^} gFontPanelInfo = { 0, 0, 0, false };$/;"	v	typeref:struct:__anon128	file:
gFontStyle	src/gui_mac.c	/^ATSUStyle   gFontStyle;$/;"	v
gIsFontFallbackSet	src/gui_mac.c	/^Boolean	    gIsFontFallbackSet;$/;"	v
gMacSystemVersion	src/gui_mac.c	/^SInt32 gMacSystemVersion;$/;"	v
gPathConverter	src/os_mac_conv.c	/^static TECObjectRef gPathConverter;$/;"	v	file:
gScrollAction	src/gui_mac.c	/^ControlActionUPP gScrollAction;$/;"	v
gScrollDrag	src/gui_mac.c	/^ControlActionUPP gScrollDrag;$/;"	v
gTSCDefault	src/gui_mac.c	/^static Component	     gTSCDefault;$/;"	v	file:
gTSCInsert	src/gui_mac.c	/^static Component	     gTSCInsert;$/;"	v	file:
gTSCWindow	src/gui_mac.c	/^static Component	     gTSCWindow;$/;"	v	file:
gTSLDefault	src/gui_mac.c	/^static ScriptLanguageRecord gTSLDefault = { 0, 0 };$/;"	v	file:
gTSLInsert	src/gui_mac.c	/^static ScriptLanguageRecord gTSLInsert;$/;"	v	file:
gTSLWindow	src/gui_mac.c	/^static ScriptLanguageRecord gTSLWindow;$/;"	v	file:
gTSMDocument	src/gui_mac.c	/^static TSMDocumentID gTSMDocument;$/;"	v	file:
gUTF16ToUTF8Converter	src/os_mac_conv.c	/^static TECObjectRef gUTF16ToUTF8Converter;$/;"	v	file:
gWideFontStyle	src/gui_mac.c	/^ATSUStyle   gWideFontStyle;$/;"	v
g]	runtime/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> g]          :<C-U>exe       "tselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
g_ChangeDir	src/VisVim/Commands.cpp	/^static int g_ChangeDir = CD_NONE;	\/\/ CD after file open?$/;"	v	file:
g_PlatformId	src/GvimExt/gvimext.cpp	/^static DWORD g_PlatformId;$/;"	v	file:
g_PlatformId	src/dosinst.h	/^static DWORD g_PlatformId;$/;"	v
g_PlatformId	src/os_win32.c	/^DWORD g_PlatformId;$/;"	v
g_attrCurrent	src/os_win32.c	/^static WORD  g_attrCurrent;$/;"	v	file:
g_attrDefault	src/os_win32.c	/^static WORD  g_attrDefault = 7;  \/* lightgray text on black background *\/$/;"	v	file:
g_attrPreStandout	src/os_win32.c	/^static WORD g_attrPreStandout = 0;$/;"	v	file:
g_bDevStudioEditor	src/VisVim/Commands.cpp	/^static BOOL g_bDevStudioEditor = FALSE;	\/\/ Open file in Dev Studio editor simultaneously$/;"	v	file:
g_bEnableVim	src/VisVim/Commands.cpp	/^static BOOL g_bEnableVim = TRUE;	\/\/ Vim enabled$/;"	v	file:
g_bNewTabs	src/VisVim/Commands.cpp	/^static BOOL g_bNewTabs = FALSE;$/;"	v	file:
g_cRefThisDll	src/GvimExt/gvimext.cpp	/^UINT      g_cRefThisDll = 0;    \/\/ Reference count of this DLL.$/;"	v
g_cbNonTermcap	src/os_win32.c	/^static ConsoleBuffer g_cbNonTermcap = { 0 };$/;"	v	file:
g_cbOrig	src/os_win32.c	/^static ConsoleBuffer g_cbOrig = { 0 };$/;"	v	file:
g_cbTermcap	src/os_win32.c	/^static ConsoleBuffer g_cbTermcap = { 0 };$/;"	v	file:
g_cci	src/os_win32.c	/^static CONSOLE_CURSOR_INFO g_cci;$/;"	v	file:
g_cmodein	src/os_win32.c	/^static DWORD g_cmodein = 0;$/;"	v	file:
g_cmodeout	src/os_win32.c	/^static DWORD g_cmodeout = 0;$/;"	v	file:
g_coord	src/os_win32.c	/^static COORD	  g_coord;  \/* 0-based, but external coords are 1-based *\/$/;"	v	file:
g_do_tagpreview	src/globals.h	/^EXTERN int	g_do_tagpreview INIT(= 0);  \/* for tag preview commands:$/;"	v
g_fCBrkPressed	src/os_win32.c	/^static int g_fCBrkPressed = FALSE;  \/* set by ctrl-break interrupt *\/$/;"	v	file:
g_fCanChangeIcon	src/os_win32.c	/^static BOOL g_fCanChangeIcon = FALSE;$/;"	v	file:
g_fCtrlCPressed	src/os_win32.c	/^static int g_fCtrlCPressed = FALSE; \/* set when ctrl-C or ctrl-break detected *\/$/;"	v	file:
g_fForceExit	src/os_win32.c	/^static int g_fForceExit = FALSE;    \/* set when forcefully exiting *\/$/;"	v	file:
g_fJustGotFocus	src/os_win32.c	/^static BOOL g_fJustGotFocus = FALSE;$/;"	v	file:
g_fMouseActive	src/os_win32.c	/^static int g_fMouseActive = FALSE;  \/* mouse enabled *\/$/;"	v	file:
g_fMouseAvail	src/os_win32.c	/^static int g_fMouseAvail = FALSE;   \/* mouse present *\/$/;"	v	file:
g_fTermcapMode	src/os_win32.c	/^static int g_fTermcapMode = FALSE;$/;"	v	file:
g_fWindInitCalled	src/os_win32.c	/^static int g_fWindInitCalled = FALSE;$/;"	v	file:
g_hConIn	src/os_win32.c	/^static HANDLE g_hConIn  = INVALID_HANDLE_VALUE;$/;"	v	file:
g_hConOut	src/os_win32.c	/^static HANDLE g_hConOut = INVALID_HANDLE_VALUE;$/;"	v	file:
g_hOrigIcon	src/os_win32.c	/^static HICON g_hOrigIcon = NULL;$/;"	v	file:
g_hOrigIconSmall	src/os_win32.c	/^static HICON g_hOrigIconSmall = NULL;$/;"	v	file:
g_hVimIcon	src/os_win32.c	/^static HICON g_hVimIcon = NULL;$/;"	v	file:
g_hWnd	src/os_win32.c	/^HWND g_hWnd = NULL;	\/* also used in os_mswin.c *\/$/;"	v
g_hmodThisDll	src/GvimExt/gvimext.cpp	/^HINSTANCE g_hmodThisDll = NULL;	\/\/ Handle to this DLL itself.$/;"	v
g_nMouseClick	src/os_win32.c	/^static int g_nMouseClick = -1;	    \/* mouse status *\/$/;"	v	file:
g_srScrollRegion	src/os_win32.c	/^static SMALL_RECT g_srScrollRegion;$/;"	v	file:
g_szOrigTitle	src/os_win32.c	/^char g_szOrigTitle[256] = { 0 };$/;"	v
g_xMouse	src/os_win32.c	/^static int g_xMouse;		    \/* mouse x coordinate *\/$/;"	v	file:
g_yMouse	src/os_win32.c	/^static int g_yMouse;		    \/* mouse y coordinate *\/$/;"	v	file:
ga_append	src/misc2.c	/^ga_append(gap, c)$/;"	f
ga_clear	src/misc2.c	/^ga_clear(gap)$/;"	f
ga_clear_strings	src/misc2.c	/^ga_clear_strings(gap)$/;"	f
ga_concat	src/misc2.c	/^ga_concat(gap, s)$/;"	f
ga_concat_strings	src/misc2.c	/^ga_concat_strings(gap)$/;"	f
ga_data	src/structs.h	/^    void    *ga_data;		    \/* pointer to the first item *\/$/;"	m	struct:growarray	access:public
ga_grow	src/misc2.c	/^ga_grow(gap, n)$/;"	f
ga_growsize	src/structs.h	/^    int	    ga_growsize;	    \/* number of items to grow each time *\/$/;"	m	struct:growarray	access:public
ga_init	src/misc2.c	/^ga_init(gap)$/;"	f
ga_init2	src/misc2.c	/^ga_init2(gap, itemsize, growsize)$/;"	f
ga_itemsize	src/structs.h	/^    int	    ga_itemsize;	    \/* sizeof(item) *\/$/;"	m	struct:growarray	access:public
ga_len	src/structs.h	/^    int	    ga_len;		    \/* current number of items used *\/$/;"	m	struct:growarray	access:public
ga_loaded	src/eval.c	/^static garray_T		ga_loaded = {0, 0, sizeof(char_u *), 4, NULL};$/;"	v	file:
ga_maxlen	src/structs.h	/^    int	    ga_maxlen;		    \/* maximum number of items possible *\/$/;"	m	struct:growarray	access:public
ga_scripts	src/eval.c	/^static garray_T	    ga_scripts = {0, 0, sizeof(scriptvar_T *), 4, NULL};$/;"	v	file:
ga_userinput	src/eval.c	/^static garray_T	    ga_userinput = {0, 0, sizeof(tasave_T), 4, NULL};$/;"	v	file:
garbage_collect	src/eval.c	/^garbage_collect()$/;"	f
garbage_collect_at_exit	src/globals.h	/^EXTERN int	garbage_collect_at_exit INIT(= FALSE);$/;"	v
garray_T	src/structs.h	/^} garray_T;$/;"	t	typeref:struct:growarray
gather_termleader	src/term.c	/^gather_termleader()$/;"	f	file:
gather_termleader	src/term.c	/^static void gather_termleader __ARGS((void));$/;"	p	file:	signature:(void)
gboolean	src/gui_gtk.c	85;"	d	file:
gc	src/gui_at_sb.h	/^    GC		  gc;		\/* a (shared) gc *\/$/;"	m	struct:__anon31	access:public
gchar_cursor	src/misc1.c	/^gchar_cursor()$/;"	f
gchar_pos	src/misc1.c	/^gchar_pos(pos)$/;"	f
gdb_minlines	runtime/syntax/gdb.vim	/^  let gdb_minlines = 10$/;"	v
gdzie	runtime/tutor/tutor.pl	/^  gdzie:$/;"	l
gecos_name	runtime/ftplugin/changelog.vim	/^  function! s:gecos_name(login)$/;"	f
gen_expand_wildcards	src/misc1.c	/^gen_expand_wildcards(num_pat, pat, num_file, file, flags)$/;"	f
gen_expand_wildcards	src/vim.h	839;"	d
general_beval_cb	src/gui_beval.c	/^general_beval_cb(beval, state)$/;"	f
generate_suffix_groups	runtime/syntax/hostconf.vim	/^function s:generate_suffix_groups(list_of_order_of_orders, context, trailing_context)$/;"	f
geom	src/gui.h	/^    char_u	*geom;		    \/* Geometry, eg "80x24" *\/$/;"	m	struct:Gui	access:public
get2c	src/misc2.c	/^get2c(fd)$/;"	f
get3c	src/misc2.c	/^get3c(fd)$/;"	f
get4c	src/misc2.c	/^get4c(fd)$/;"	f
get8ctime	src/misc2.c	/^get8ctime(fd)$/;"	f
getAuthor	runtime/ftplugin/debchangelog.vim	/^function! s:getAuthor(zonestart, zoneend)$/;"	f
getCommand	src/integration.c	/^getCommand(void)$/;"	f	file:	signature:(void)
getConnInfo	src/netbeans.c	/^getConnInfo(char *file, char **host, char **port, char **auth)$/;"	f	file:	signature:(char *file, char **host, char **port, char **auth)
getConnInfo	src/netbeans.c	/^static int getConnInfo __ARGS((char *file, char **host, char **port, char **password));$/;"	p	file:	signature:(char *file, char **host, char **port, char **password)
getDeepestNesting	src/fold.c	/^getDeepestNesting()$/;"	f
getDeepestNestingRecurse	src/fold.c	/^getDeepestNestingRecurse(gap)$/;"	f	file:
getDeepestNestingRecurse	src/fold.c	/^static int getDeepestNestingRecurse __ARGS((garray_T *gap));$/;"	p	file:	signature:(garray_T *gap)
getField	runtime/ftplugin/debcontrol.vim	/^function! s:getField(f, lnum)$/;"	f
getGvimName	src/GvimExt/gvimext.cpp	/^getGvimName(char *name, int runtime)$/;"	f	file:	signature:(char *name, int runtime)
getGvimNameW	src/GvimExt/gvimext.cpp	/^getGvimNameW(wchar_t *nameW)$/;"	f	file:	signature:(wchar_t *nameW)
getRuntimeDir	src/GvimExt/gvimext.cpp	/^getRuntimeDir(char *buf)$/;"	f	file:	signature:(char *buf)
getTabCount	src/gui_mac.c	/^getTabCount(void)$/;"	f	file:	signature:(void)
getTabLabel	src/gui_mac.c	/^getTabLabel(tabpage_T *page)$/;"	f	file:	signature:(tabpage_T *page)
getVimServerName	src/os_mswin.c	/^getVimServerName(HWND hwnd, char *name, int namelen)$/;"	f	file:	signature:(HWND hwnd, char *name, int namelen)
get_address	src/ex_docmd.c	/^get_address(ptr, skip, to_other_file)$/;"	f	file:
get_address	src/ex_docmd.c	/^static linenr_T get_address __ARGS((char_u **, int skip, int to_other_file));$/;"	p	file:	signature:(char_u **, int skip, int to_other_file)
get_affitem	src/spell.c	/^get_affitem(flagtype, pp)$/;"	f	file:
get_affitem	src/spell.c	/^static unsigned get_affitem __ARGS((int flagtype, char_u **pp));$/;"	p	file:	signature:(int flagtype, char_u **pp)
get_affix_flags	src/spell.c	/^get_affix_flags(affile, afflist)$/;"	f	file:
get_affix_flags	src/spell.c	/^static int get_affix_flags __ARGS((afffile_T *affile, char_u *afflist));$/;"	p	file:	signature:(afffile_T *affile, char_u *afflist)
get_arglist	src/ex_cmds2.c	/^get_arglist(gap, str)$/;"	f
get_arglist_exp	src/ex_cmds2.c	/^get_arglist_exp(str, fcountp, fnamesp)$/;"	f
get_attr_entry	src/syntax.c	/^get_attr_entry(table, aep)$/;"	f	file:
get_attr_entry	src/syntax.c	/^static int get_attr_entry  __ARGS((garray_T *table, attrentry_T *aep));$/;"	p	file:	signature:(garray_T *table, attrentry_T *aep)
get_augroup_name	src/fileio.c	/^get_augroup_name(xp, idx)$/;"	f
get_baseclass_amount	src/misc1.c	/^get_baseclass_amount(col, ind_maxparen, ind_maxcomment, ind_cpp_baseclass)$/;"	f	file:
get_baseclass_amount	src/misc1.c	/^static int	get_baseclass_amount __ARGS((int col, int ind_maxparen, int ind_maxcomment, int ind_cpp_baseclass));$/;"	p	file:	signature:(int col, int ind_maxparen, int ind_maxcomment, int ind_cpp_baseclass)
get_behave_arg	src/ex_docmd.c	/^get_behave_arg(xp, idx)$/;"	f
get_beval_info	src/gui_beval.c	/^get_beval_info(beval, getword, winp, lnump, textp, colp)$/;"	f
get_buf	src/if_ruby.c	/^static buf_T *get_buf(VALUE obj)$/;"	f	file:	signature:(VALUE obj)
get_buf_size	src/netbeans.c	/^get_buf_size(buf_T *bufp)$/;"	f	file:	signature:(buf_T *bufp)
get_buf_size	src/netbeans.c	/^static long get_buf_size __ARGS((buf_T *));$/;"	p	file:	signature:(buf_T *)
get_buf_tv	src/eval.c	/^get_buf_tv(tv)$/;"	f	file:
get_buf_tv	src/eval.c	/^static buf_T *get_buf_tv __ARGS((typval_T *tv));$/;"	p	file:	signature:(typval_T *tv)
get_buffcont	src/getchar.c	/^get_buffcont(buffer, dozero)$/;"	f	file:
get_buffcont	src/getchar.c	/^static char_u	*get_buffcont __ARGS((struct buffheader *, int));$/;"	p	file:	signature:(struct buffheader *, int)
get_buffer_arg	src/if_mzsch.c	/^get_buffer_arg(const char *fname, int argnum, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(const char *fname, int argnum, int argc, Scheme_Object **argv)
get_buffer_arg	src/if_mzsch.c	/^static vim_mz_buffer *get_buffer_arg(const char *fname, int argnum,$/;"	p	file:	signature:(const char *fname, int argnum, int argc, Scheme_Object **argv)
get_buffer_by_name	src/if_mzsch.c	/^get_buffer_by_name(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_buffer_by_name	src/if_mzsch.c	/^static Scheme_Object *get_buffer_by_name(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_buffer_by_num	src/if_mzsch.c	/^get_buffer_by_num(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_buffer_by_num	src/if_mzsch.c	/^static Scheme_Object *get_buffer_by_num(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_buffer_count	src/if_mzsch.c	/^get_buffer_count(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:	signature:(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)
get_buffer_count	src/if_mzsch.c	/^static Scheme_Object *get_buffer_count(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_buffer_line	src/if_mzsch.c	/^get_buffer_line(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_buffer_line	src/if_mzsch.c	/^static Scheme_Object *get_buffer_line(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_buffer_line	src/if_ruby.c	/^static VALUE get_buffer_line(buf_T *buf, linenr_T n)$/;"	f	file:	signature:(buf_T *buf, linenr_T n)
get_buffer_line_list	src/if_mzsch.c	/^get_buffer_line_list(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_buffer_line_list	src/if_mzsch.c	/^static Scheme_Object *get_buffer_line_list(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_buffer_lines	src/eval.c	/^get_buffer_lines(buf, start, end, retlist, rettv)$/;"	f	file:
get_buffer_lines	src/eval.c	/^static void get_buffer_lines __ARGS((buf_T *buf, linenr_T start, linenr_T end, int retlist, typval_T *rettv));$/;"	p	file:	signature:(buf_T *buf, linenr_T start, linenr_T end, int retlist, typval_T *rettv)
get_buffer_name	src/if_mzsch.c	/^get_buffer_name(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_buffer_name	src/if_mzsch.c	/^static Scheme_Object *get_buffer_name(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_buffer_num	src/if_mzsch.c	/^get_buffer_num(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_buffer_num	src/if_mzsch.c	/^static Scheme_Object *get_buffer_num(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_buffer_size	src/if_mzsch.c	/^get_buffer_size(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_buffer_size	src/if_mzsch.c	/^static Scheme_Object *get_buffer_size(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_bytes_from_buf	src/term.c	/^get_bytes_from_buf(buf, bytes, num_bytes)$/;"	f	file:
get_bytes_from_buf	src/term.c	/^static int get_bytes_from_buf __ARGS((char_u *, char_u *, int));$/;"	p	file:	signature:(char_u *, char_u *, int)
get_c_indent	src/misc1.c	/^get_c_indent()$/;"	f
get_ccline_ptr	src/ex_getln.c	/^get_ccline_ptr()$/;"	f	file:
get_ccline_ptr	src/ex_getln.c	/^static struct cmdline_info *get_ccline_ptr __ARGS((void));$/;"	p	file:	signature:(void)
get_char_class	src/regexp.c	/^get_char_class(pp)$/;"	f	file:
get_char_class	src/regexp.c	/^static int	get_char_class __ARGS((char_u **pp));$/;"	p	file:	signature:(char_u **pp)
get_choice	src/dosinst.c	/^get_choice(char **table, int entries)$/;"	f	file:	signature:(char **table, int entries)
get_cmd_args	src/gui_w48.c	/^get_cmd_args(char *prog, char *cmdline, char ***argvp, char **tofree)$/;"	f	signature:(char *prog, char *cmdline, char ***argvp, char **tofree)
get_cmd_argsW	src/os_win32.c	/^get_cmd_argsW(char ***argvp)$/;"	f	signature:(char ***argvp)
get_cmd_output	src/misc1.c	/^get_cmd_output(cmd, infile, flags)$/;"	f
get_cmdline_pos	src/ex_getln.c	/^get_cmdline_pos()$/;"	f
get_cmdline_str	src/ex_getln.c	/^get_cmdline_str()$/;"	f
get_cmdline_type	src/ex_getln.c	/^get_cmdline_type()$/;"	f
get_coll_element	src/regexp.c	/^get_coll_element(pp)$/;"	f	file:
get_coll_element	src/regexp.c	/^static int	get_coll_element __ARGS((char_u **pp));$/;"	p	file:	signature:(char_u **pp)
get_command_name	src/ex_docmd.c	/^get_command_name(xp, idx)$/;"	f
get_compflags	src/spell.c	/^get_compflags(affile, afflist, store_afflist)$/;"	f	file:
get_compflags	src/spell.c	/^static void get_compflags __ARGS((afffile_T *affile, char_u *afflist, char_u *store_afflist));$/;"	p	file:	signature:(afffile_T *affile, char_u *afflist, char_u *store_afflist)
get_crypt_key	src/misc2.c	/^get_crypt_key(store, twice)$/;"	f
get_crypt_method	src/misc2.c	/^get_crypt_method(buf)$/;"	f
get_cscope_name	src/if_cscope.c	/^get_cscope_name(xp, idx)$/;"	f
get_curr_buffer	src/if_mzsch.c	/^get_curr_buffer(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:	signature:(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)
get_curr_buffer	src/if_mzsch.c	/^static Scheme_Object *get_curr_buffer(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_curr_win	src/if_mzsch.c	/^get_curr_win(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:	signature:(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)
get_curr_win	src/if_mzsch.c	/^static Scheme_Object *get_curr_win(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_cursor	src/if_mzsch.c	/^get_cursor(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_cursor	src/if_mzsch.c	/^static Scheme_Object *get_cursor(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_cursor_rel_lnum	src/misc2.c	/^get_cursor_rel_lnum(wp, lnum)$/;"	f
get_dialog_font_metrics	src/gui_w16.c	/^get_dialog_font_metrics(void)$/;"	f	file:	signature:(void)
get_dialog_font_metrics	src/gui_w16.c	/^static void get_dialog_font_metrics(void);$/;"	p	file:	signature:(void)
get_dialog_font_metrics	src/gui_w32.c	/^get_dialog_font_metrics(void)$/;"	f	file:	signature:(void)
get_dialog_font_metrics	src/gui_w32.c	/^static void get_dialog_font_metrics(void);$/;"	p	file:	signature:(void)
get_dict_number	src/eval.c	/^get_dict_number(d, key)$/;"	f
get_dict_string	src/eval.c	/^get_dict_string(d, key, save)$/;"	f
get_dict_tv	src/eval.c	/^get_dict_tv(arg, rettv, evaluate)$/;"	f	file:
get_dict_tv	src/eval.c	/^static int get_dict_tv __ARGS((char_u **arg, typval_T *rettv, int evaluate));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate)
get_digraph	src/digraph.c	/^get_digraph(cmdline)$/;"	f
get_emsg_lnum	src/message.c	/^get_emsg_lnum()$/;"	f	file:
get_emsg_lnum	src/message.c	/^static char_u *get_emsg_lnum __ARGS((void));$/;"	p	file:	signature:(void)
get_emsg_source	src/message.c	/^get_emsg_source()$/;"	f	file:
get_emsg_source	src/message.c	/^static char_u *get_emsg_source __ARGS((void));$/;"	p	file:	signature:(void)
get_encoding_default	src/option.c	/^get_encoding_default()$/;"	f
get_end_emsg	src/ex_eval.c	/^get_end_emsg(cstack)$/;"	f	file:
get_end_emsg	src/ex_eval.c	/^static char_u	*get_end_emsg __ARGS((struct condstack *cstack));$/;"	p	file:	signature:(struct condstack *cstack)
get_env_len	src/eval.c	/^get_env_len(arg)$/;"	f	file:
get_env_len	src/eval.c	/^static int get_env_len __ARGS((char_u **arg));$/;"	p	file:	signature:(char_u **arg)
get_env_name	src/misc1.c	/^get_env_name(xp, idx)$/;"	f
get_env_tv	src/eval.c	/^get_env_tv(arg, rettv, evaluate)$/;"	f	file:
get_env_tv	src/eval.c	/^static int get_env_tv __ARGS((char_u **arg, typval_T *rettv, int evaluate));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate)
get_equalprg	src/option.c	/^get_equalprg()$/;"	f
get_equi_class	src/regexp.c	/^get_equi_class(pp)$/;"	f	file:
get_equi_class	src/regexp.c	/^static int	get_equi_class __ARGS((char_u **pp));$/;"	p	file:	signature:(char_u **pp)
get_errorlist	src/quickfix.c	/^get_errorlist(wp, list)$/;"	f
get_event_name	src/fileio.c	/^get_event_name(xp, idx)$/;"	f
get_exceptions	src/if_python.c	/^get_exceptions(void)$/;"	f	file:	signature:(void)
get_exe_name	src/os_win32.c	/^get_exe_name(void)$/;"	f	file:	signature:(void)
get_expr_indent	src/misc1.c	/^get_expr_indent()$/;"	f
get_expr_line	src/ops.c	/^get_expr_line()$/;"	f
get_expr_line_src	src/ops.c	/^get_expr_line_src()$/;"	f
get_expr_name	src/eval.c	/^get_expr_name(xp, idx)$/;"	f
get_expr_register	src/ops.c	/^get_expr_register()$/;"	f
get_extra_op_char	src/ops.c	/^get_extra_op_char(optype)$/;"	f
get_fib	src/os_amiga.c	/^get_fib(fname)$/;"	f	file:
get_fib	src/os_amiga.c	/^static struct FileInfoBlock *get_fib __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
get_file_in_dir	src/memline.c	/^get_file_in_dir(fname, dname)$/;"	f
get_fileformat	src/misc2.c	/^get_fileformat(buf)$/;"	f
get_fileformat_force	src/misc2.c	/^get_fileformat_force(buf, eap)$/;"	f
get_find_dialog_text	src/gui.c	/^get_find_dialog_text(arg, wwordp, mcasep)$/;"	f
get_fio_flags	src/fileio.c	/^get_fio_flags(ptr)$/;"	f	file:
get_fio_flags	src/fileio.c	/^static int get_fio_flags __ARGS((char_u *ptr));$/;"	p	file:	signature:(char_u *ptr)
get_flags	src/ex_docmd.c	/^get_flags(eap)$/;"	f	file:
get_flags	src/ex_docmd.c	/^static void	get_flags __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
get_float_arg	src/eval.c	/^get_float_arg(argvars, f)$/;"	f	file:
get_float_arg	src/eval.c	/^static int get_float_arg __ARGS((typval_T *argvars, float_T *f));$/;"	p	file:	signature:(typval_T *argvars, float_T *f)
get_foldtext	src/fold.c	/^get_foldtext(wp, lnum, lnume, foldinfo, buf)$/;"	f
get_font_handle	src/gui_w48.c	/^get_font_handle(LOGFONT *lf)$/;"	f	file:	signature:(LOGFONT *lf)
get_fpos_of_mouse	src/ui.c	/^get_fpos_of_mouse(mpos)$/;"	f
get_func_line	src/eval.c	/^get_func_line(c, cookie, indent)$/;"	f
get_func_tv	src/eval.c	/^get_func_tv(name, len, rettv, arg, firstline, lastline, doesrange,$/;"	f	file:
get_func_tv	src/eval.c	/^static int get_func_tv __ARGS((char_u *name, int len, typval_T *rettv, char_u **arg, linenr_T firstline, linenr_T lastline, int *doesrange, int evaluate, dict_T *selfdict));$/;"	p	file:	signature:(char_u *name, int len, typval_T *rettv, char_u **arg, linenr_T firstline, linenr_T lastline, int *doesrange, int evaluate, dict_T *selfdict)
get_function_name	src/eval.c	/^get_function_name(xp, idx)$/;"	f
get_group_name	src/syntax.c	/^get_group_name(arg, name_end)$/;"	f	file:
get_group_name	src/syntax.c	/^static char_u *get_group_name __ARGS((char_u *arg, char_u **name_end));$/;"	p	file:	signature:(char_u *arg, char_u **name_end)
get_highlight_default	src/option.c	/^get_highlight_default()$/;"	f
get_highlight_name	src/syntax.c	/^get_highlight_name(xp, idx)$/;"	f
get_history_entry	src/ex_getln.c	/^get_history_entry(histype, idx)$/;"	f
get_history_idx	src/ex_getln.c	/^get_history_idx(histype)$/;"	f
get_histtype	src/ex_getln.c	/^get_histtype(name)$/;"	f
get_id_len	src/eval.c	/^get_id_len(arg)$/;"	f	file:
get_id_len	src/eval.c	/^static int get_id_len __ARGS((char_u **arg));$/;"	p	file:	signature:(char_u **arg)
get_id_list	src/syntax.c	/^get_id_list(arg, keylen, list)$/;"	f	file:
get_id_list	src/syntax.c	/^static int get_id_list __ARGS((char_u **arg, int keylen, short **list));$/;"	p	file:	signature:(char_u **arg, int keylen, short **list)
get_indent	src/misc1.c	/^get_indent()$/;"	f
get_indent_buf	src/misc1.c	/^get_indent_buf(buf, lnum)$/;"	f
get_indent_lnum	src/misc1.c	/^get_indent_lnum(lnum)$/;"	f
get_indent_nolabel	src/misc1.c	/^get_indent_nolabel(lnum)		\/* XXX *\/$/;"	f	file:
get_indent_nolabel	src/misc1.c	/^static int	get_indent_nolabel __ARGS((linenr_T lnum));$/;"	p	file:	signature:(linenr_T lnum)
get_indent_str	src/misc1.c	/^get_indent_str(ptr, ts)$/;"	f
get_input_buf	src/ui.c	/^get_input_buf()$/;"	f
get_inserted	src/getchar.c	/^get_inserted()$/;"	f
get_item_dimensions	src/gui_gtk_x11.c	/^get_item_dimensions(GtkWidget *widget, GtkOrientation orientation)$/;"	f	file:	signature:(GtkWidget *widget, GtkOrientation orientation)
get_key_name	src/misc2.c	/^get_key_name(i)$/;"	f
get_keymap_str	src/screen.c	/^get_keymap_str(wp, buf, len)$/;"	f
get_keystroke	src/misc1.c	/^get_keystroke()$/;"	f
get_lang_arg	src/ex_cmds2.c	/^get_lang_arg(xp, idx)$/;"	f
get_last_insert	src/edit.c	/^get_last_insert()$/;"	f
get_last_insert_save	src/edit.c	/^get_last_insert_save()$/;"	f
get_leader_len	src/misc1.c	/^get_leader_len(line, flags, backward)$/;"	f
get_lisp_indent	src/misc1.c	/^get_lisp_indent()$/;"	f
get_list_range	src/ex_getln.c	/^get_list_range(str, num1, num2)$/;"	f
get_list_tv	src/eval.c	/^get_list_tv(arg, rettv, evaluate)$/;"	f	file:
get_list_tv	src/eval.c	/^static int get_list_tv __ARGS((char_u **arg, typval_T *rettv, int evaluate));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate)
get_lit_string_tv	src/eval.c	/^get_lit_string_tv(arg, rettv, evaluate)$/;"	f	file:
get_lit_string_tv	src/eval.c	/^static int get_lit_string_tv __ARGS((char_u **arg, typval_T *rettv, int evaluate));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate)
get_literal	src/edit.c	/^get_literal()$/;"	f
get_locale_val	src/ex_cmds2.c	/^get_locale_val(what)$/;"	f	file:
get_locale_val	src/ex_cmds2.c	/^static char *get_locale_val __ARGS((int what));$/;"	p	file:	signature:(int what)
get_logfont	src/os_mswin.c	/^get_logfont($/;"	f	signature:( LOGFONT *lf, char_u *name, HDC printer_dc, int verbose)
get_long_from_buf	src/term.c	/^get_long_from_buf(buf, val)$/;"	f	file:
get_long_from_buf	src/term.c	/^static int get_long_from_buf __ARGS((char_u *buf, long_u *val));$/;"	p	file:	signature:(char_u *buf, long_u *val)
get_loop_line	src/ex_docmd.c	/^get_loop_line(c, cookie, indent)$/;"	f	file:
get_loop_line	src/ex_docmd.c	/^static char_u	*get_loop_line __ARGS((int c, void *cookie, int indent));$/;"	p	file:	signature:(int c, void *cookie, int indent)
get_lval	src/eval.c	/^get_lval(name, rettv, lp, unlet, skip, quiet, fne_flags)$/;"	f	file:
get_lval	src/eval.c	/^static char_u *get_lval __ARGS((char_u *name, typval_T *rettv, lval_T *lp, int unlet, int skip, int quiet, int fne_flags));$/;"	p	file:	signature:(char_u *name, typval_T *rettv, lval_T *lp, int unlet, int skip, int quiet, int fne_flags)
get_mac_fio_flags	src/fileio.c	/^get_mac_fio_flags(ptr)$/;"	f	file:
get_mac_fio_flags	src/fileio.c	/^static int get_mac_fio_flags __ARGS((char_u *ptr));$/;"	p	file:	signature:(char_u *ptr)
get_map_mode	src/getchar.c	/^get_map_mode(cmdp, forceit)$/;"	f
get_maparg	src/eval.c	/^get_maparg(argvars, rettv, exact)$/;"	f	file:
get_maparg	src/eval.c	/^static void get_maparg __ARGS((typval_T *argvars, typval_T *rettv, int exact));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv, int exact)
get_match	src/window.c	/^get_match(wp, id)$/;"	f
get_mef_name	src/quickfix.c	/^get_mef_name()$/;"	f	file:
get_mef_name	src/quickfix.c	/^static char_u	*get_mef_name __ARGS((void));$/;"	p	file:	signature:(void)
get_menu_cmd_modes	src/menu.c	/^get_menu_cmd_modes(cmd, forceit, noremap, unmenu)$/;"	f	file:
get_menu_cmd_modes	src/menu.c	/^static int get_menu_cmd_modes __ARGS((char_u *, int, int *, int *));$/;"	p	file:	signature:(char_u *, int, int *, int *)
get_menu_index	src/menu.c	/^get_menu_index(menu, state)$/;"	f
get_menu_mode	src/menu.c	/^get_menu_mode()$/;"	f	file:
get_menu_mode	src/menu.c	/^static int get_menu_mode __ARGS((void));$/;"	p	file:	signature:(void)
get_menu_name	src/menu.c	/^get_menu_name(xp, idx)$/;"	f
get_menu_names	src/menu.c	/^get_menu_names(xp, idx)$/;"	f
get_menu_position	src/gui_gtk.c	/^get_menu_position(vimmenu_T *menu)$/;"	f	file:	signature:(vimmenu_T *menu)
get_menu_tool_height	src/gui_gtk_x11.c	/^get_menu_tool_height(void)$/;"	f	file:	signature:(void)
get_menu_tool_width	src/gui_gtk_x11.c	/^get_menu_tool_width(void)$/;"	f	file:	signature:(void)
get_mess_env	src/ex_cmds2.c	/^get_mess_env()$/;"	f	file:
get_mess_env	src/ex_cmds2.c	/^static char_u *get_mess_env __ARGS((void));$/;"	p	file:	signature:(void)
get_mess_lang	src/ex_cmds2.c	/^get_mess_lang()$/;"	f
get_mouse_button	src/misc2.c	/^get_mouse_button(code, is_click, is_drag)$/;"	f
get_mouse_class	src/normal.c	/^get_mouse_class(p)$/;"	f	file:
get_mouse_class	src/normal.c	/^static int	get_mouse_class __ARGS((char_u *p));$/;"	p	file:	signature:(char_u *p)
get_name_len	src/eval.c	/^get_name_len(arg, alias, evaluate, verbose)$/;"	f	file:
get_name_len	src/eval.c	/^static int get_name_len __ARGS((char_u **arg, char_u **alias, int evaluate, int verbose));$/;"	p	file:	signature:(char_u **arg, char_u **alias, int evaluate, int verbose)
get_next_buffer	src/if_mzsch.c	/^get_next_buffer(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_next_buffer	src/if_mzsch.c	/^static Scheme_Object *get_next_buffer(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_nolist_virtcol	src/edit.c	/^get_nolist_virtcol()$/;"	f	file:
get_nolist_virtcol	src/edit.c	/^static colnr_T get_nolist_virtcol __ARGS((void));$/;"	p	file:	signature:(void)
get_number	src/misc1.c	/^get_number(colon, mouse_used)$/;"	f
get_number_arg	src/main.c	/^get_number_arg(p, idx, def)$/;"	f	file:
get_number_arg	src/main.c	/^static int get_number_arg __ARGS((char_u *p, int *idx, int def));$/;"	p	file:	signature:(char_u *p, int *idx, int def)
get_number_indent	src/misc1.c	/^get_number_indent(lnum)$/;"	f
get_off_or_lnum	src/netbeans.c	/^get_off_or_lnum(buf_T *buf, char_u **argp)$/;"	f	file:	signature:(buf_T *buf, char_u **argp)
get_off_or_lnum	src/netbeans.c	/^static pos_T *get_off_or_lnum __ARGS((buf_T *buf, char_u **argp));$/;"	p	file:	signature:(buf_T *buf, char_u **argp)
get_one_sourceline	src/ex_cmds2.c	/^get_one_sourceline(sp)$/;"	f	file:
get_one_sourceline	src/ex_cmds2.c	/^static char_u *get_one_sourceline __ARGS((struct source_cookie *sp));$/;"	p	file:	signature:(struct source_cookie *sp)
get_op_char	src/ops.c	/^get_op_char(optype)$/;"	f
get_op_type	src/ops.c	/^get_op_type(char1, char2)$/;"	f
get_option	src/if_mzsch.c	/^get_option(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_option	src/if_mzsch.c	/^static Scheme_Object *get_option(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_option_tv	src/eval.c	/^get_option_tv(arg, rettv, evaluate)$/;"	f	file:
get_option_tv	src/eval.c	/^static int get_option_tv __ARGS((char_u **arg, typval_T *rettv, int evaluate));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate)
get_option_value	src/option.c	/^get_option_value(name, numval, stringval, opt_flags)$/;"	f
get_part	src/gui_xmdlg.c	/^get_part(char *in, int pos, char *out)$/;"	f	file:	signature:(char *in, int pos, char *out)
get_past_head	src/misc1.c	/^get_past_head(path)$/;"	f
get_path_cutoff	src/misc1.c	/^get_path_cutoff(fname, gap)$/;"	f	file:
get_path_cutoff	src/misc1.c	/^static char_u *get_path_cutoff __ARGS((char_u *fname, garray_T *gap));$/;"	p	file:	signature:(char_u *fname, garray_T *gap)
get_pfxlist	src/spell.c	/^get_pfxlist(affile, afflist, store_afflist)$/;"	f	file:
get_pfxlist	src/spell.c	/^static int get_pfxlist __ARGS((afffile_T *affile, char_u *afflist, char_u *store_afflist));$/;"	p	file:	signature:(afffile_T *affile, char_u *afflist, char_u *store_afflist)
get_popup_entry	src/gui_athena.c	/^get_popup_entry(w)$/;"	f	file:
get_popup_entry	src/gui_athena.c	/^static Widget	get_popup_entry __ARGS((Widget w));$/;"	p	file:	signature:(Widget w)
get_prev_buffer	src/if_mzsch.c	/^get_prev_buffer(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_prev_buffer	src/if_mzsch.c	/^static Scheme_Object *get_prev_buffer(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_profile_name	src/ex_cmds2.c	/^get_profile_name(xp, idx)$/;"	f
get_pseudo_mouse_code	src/misc2.c	/^get_pseudo_mouse_code(button, is_click, is_drag)$/;"	f
get_py3_exceptions	src/if_python3.c	/^get_py3_exceptions()$/;"	f	file:
get_py3_exceptions	src/if_python3.c	/^static void get_py3_exceptions __ARGS((void));$/;"	p	file:	signature:(void)
get_range_end	src/if_mzsch.c	/^get_range_end(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:	signature:(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)
get_range_end	src/if_mzsch.c	/^static Scheme_Object *get_range_end(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_range_start	src/if_mzsch.c	/^get_range_start(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:	signature:(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)
get_range_start	src/if_mzsch.c	/^static Scheme_Object *get_range_start(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_real_state	src/misc2.c	/^get_real_state()$/;"	f
get_recorded	src/getchar.c	/^get_recorded()$/;"	f
get_reg_contents	src/ops.c	/^get_reg_contents(regname, allowexpr, expr_src)$/;"	f
get_reg_type	src/ops.c	/^get_reg_type(regname, reglen)$/;"	f
get_register	src/ops.c	/^get_register(name, copy)$/;"	f
get_register_name	src/ops.c	/^get_register_name(num)$/;"	f
get_rel_pos	src/buffer.c	/^get_rel_pos(wp, buf, buflen)$/;"	f
get_request	src/if_sniff.c	/^get_request(fd, buf, maxlen)$/;"	f	file:
get_request	src/if_sniff.c	/^static int get_request __ARGS((int fd, char *buf, int maxlen));$/;"	p	file:	signature:(int fd, char *buf, int maxlen)
get_return_cmd	src/eval.c	/^get_return_cmd(rettv)$/;"	f
get_screenbase	src/os_msdos.c	/^get_screenbase(void)$/;"	f	file:	signature:(void)
get_scriptname	src/ex_cmds2.c	/^get_scriptname(id)$/;"	f
get_scroll_flags	src/gui_w48.c	/^get_scroll_flags(void)$/;"	f	file:	signature:(void)
get_scroll_overlap	src/move.c	/^get_scroll_overlap(lp, dir)$/;"	f	file:
get_scroll_overlap	src/move.c	/^static void get_scroll_overlap __ARGS((lineoff_T *lp, int dir));$/;"	p	file:	signature:(lineoff_T *lp, int dir)
get_search_arg	src/eval.c	/^get_search_arg(varp, flagsp)$/;"	f	file:
get_search_arg	src/eval.c	/^static int get_search_arg __ARGS((typval_T *varp, int *flagsp));$/;"	p	file:	signature:(typval_T *varp, int *flagsp)
get_search_pat	src/search.c	/^get_search_pat()$/;"	f
get_selection	src/workshop.c	/^get_selection($/;"	f	file:	signature:( buf_T *buf)
get_selection	src/workshop.c	/^static char	*get_selection(buf_T *);$/;"	p	file:	signature:(buf_T *)
get_shape_idx	src/misc2.c	/^get_shape_idx(mouse)$/;"	f
get_shell_folder_path	src/dosinst.h	/^get_shell_folder_path($/;"	f	signature:( char *shell_folder_path, const char *shell_folder_name)
get_short_pathname	src/eval.c	/^get_short_pathname(fnamep, bufp, fnamelen)$/;"	f	file:
get_short_pathname	src/eval.c	/^static int get_short_pathname __ARGS((char_u **fnamep, char_u **bufp, int *fnamelen));$/;"	p	file:	signature:(char_u **fnamep, char_u **bufp, int *fnamelen)
get_sign_name	src/ex_cmds.c	/^get_sign_name(xp, idx)$/;"	f
get_some_time	src/sha256.c	/^get_some_time()$/;"	f	file:
get_some_time	src/sha256.c	/^static unsigned int get_some_time __ARGS((void));$/;"	p	file:	signature:(void)
get_spec_reg	src/ops.c	/^get_spec_reg(regname, argp, allocated, errmsg)$/;"	f
get_special_key_code	src/misc2.c	/^get_special_key_code(name)$/;"	f
get_special_key_name	src/misc2.c	/^get_special_key_name(c, modifiers)$/;"	f
get_spellword	src/eval.c	/^get_spellword(list, pp)$/;"	f
get_stack_limit	src/os_unix.c	/^get_stack_limit()$/;"	f	file:
get_string_tv	src/eval.c	/^get_string_tv(arg, rettv, evaluate)$/;"	f	file:
get_string_tv	src/eval.c	/^static int get_string_tv __ARGS((char_u **arg, typval_T *rettv, int evaluate));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate)
get_stty	src/os_unix.c	/^get_stty()$/;"	f
get_styled_font_variants	src/gui_gtk_x11.c	/^get_styled_font_variants(void)$/;"	f	file:	signature:(void)
get_syn_options	src/syntax.c	/^get_syn_options(arg, opt, conceal_char)$/;"	f	file:
get_syn_options	src/syntax.c	/^static char_u *get_syn_options __ARGS((char_u *arg, syn_opt_arg_T *opt, int *conceal_char));$/;"	p	file:	signature:(char_u *arg, syn_opt_arg_T *opt, int *conceal_char)
get_syn_pattern	src/syntax.c	/^get_syn_pattern(arg, ci)$/;"	f	file:
get_syn_pattern	src/syntax.c	/^static char_u *get_syn_pattern __ARGS((char_u *arg, synpat_T *ci));$/;"	p	file:	signature:(char_u *arg, synpat_T *ci)
get_syntax_attr	src/syntax.c	/^get_syntax_attr(col, can_spell, keep_state)$/;"	f
get_syntax_info	src/syntax.c	/^get_syntax_info(seqnrp)$/;"	f
get_syntax_name	src/syntax.c	/^get_syntax_name(xp, idx)$/;"	f
get_tabline_label	src/gui.c	/^get_tabline_label(tp, tooltip)$/;"	f
get_tagfname	src/tag.c	/^get_tagfname(tnp, first, buf)$/;"	f
get_tags	src/tag.c	/^get_tags(list, pat)$/;"	f
get_term_code	src/option.c	/^get_term_code(tname)$/;"	f
get_termcode	src/term.c	/^get_termcode(i)$/;"	f
get_toolbar_bitmap	src/gui_w32.c	/^get_toolbar_bitmap(vimmenu_T *menu)$/;"	f	file:	signature:(vimmenu_T *menu)
get_toolbar_bitmap	src/gui_w32.c	/^static int get_toolbar_bitmap(vimmenu_T *menu);$/;"	p	file:	signature:(vimmenu_T *menu)
get_toolbar_pixmap	src/gui_athena.c	/^get_toolbar_pixmap(menu, sen)$/;"	f	file:
get_toolbar_pixmap	src/gui_athena.c	/^static void get_toolbar_pixmap __ARGS((vimmenu_T *menu, Pixmap *sen));$/;"	p	file:	signature:(vimmenu_T *menu, Pixmap *sen)
get_toolbar_pixmap	src/gui_motif.c	/^get_toolbar_pixmap(menu, fname)$/;"	f	file:
get_toolbar_pixmap	src/gui_motif.c	/^static char **get_toolbar_pixmap __ARGS((vimmenu_T *menu, char **fname));$/;"	p	file:	signature:(vimmenu_T *menu, char **fname)
get_trans_bufname	src/screen.c	/^get_trans_bufname(buf)$/;"	f
get_tty	src/os_vms.c	/^get_tty(void)$/;"	f	file:	signature:(void)
get_tty	src/os_vms.c	/^static TT_MODE	get_tty __ARGS((void));$/;"	p	file:	signature:(void)
get_tv_lnum	src/eval.c	/^get_tv_lnum(argvars)$/;"	f	file:
get_tv_lnum	src/eval.c	/^static linenr_T get_tv_lnum __ARGS((typval_T *argvars));$/;"	p	file:	signature:(typval_T *argvars)
get_tv_lnum_buf	src/eval.c	/^get_tv_lnum_buf(argvars, buf)$/;"	f	file:
get_tv_lnum_buf	src/eval.c	/^static linenr_T get_tv_lnum_buf __ARGS((typval_T *argvars, buf_T *buf));$/;"	p	file:	signature:(typval_T *argvars, buf_T *buf)
get_tv_number	src/eval.c	/^get_tv_number(varp)$/;"	f	file:
get_tv_number	src/eval.c	/^static long get_tv_number __ARGS((typval_T *varp));$/;"	p	file:	signature:(typval_T *varp)
get_tv_number_chk	src/eval.c	/^get_tv_number_chk(varp, denote)$/;"	f
get_tv_string	src/eval.c	/^get_tv_string(varp)$/;"	f	file:
get_tv_string	src/eval.c	/^static char_u *get_tv_string __ARGS((typval_T *varp));$/;"	p	file:	signature:(typval_T *varp)
get_tv_string_buf	src/eval.c	/^get_tv_string_buf(varp, buf)$/;"	f	file:
get_tv_string_buf	src/eval.c	/^static char_u *get_tv_string_buf __ARGS((typval_T *varp, char_u *buf));$/;"	p	file:	signature:(typval_T *varp, char_u *buf)
get_tv_string_buf_chk	src/eval.c	/^get_tv_string_buf_chk(varp, buf)$/;"	f	file:
get_tv_string_buf_chk	src/eval.c	/^static char_u *get_tv_string_buf_chk __ARGS((typval_T *varp, char_u *buf));$/;"	p	file:	signature:(typval_T *varp, char_u *buf)
get_tv_string_chk	src/eval.c	/^get_tv_string_chk(varp)$/;"	f
get_user_cmd_complete	src/ex_docmd.c	/^get_user_cmd_complete(xp, idx)$/;"	f
get_user_cmd_flags	src/ex_docmd.c	/^get_user_cmd_flags(xp, idx)$/;"	f
get_user_cmd_nargs	src/ex_docmd.c	/^get_user_cmd_nargs(xp, idx)$/;"	f
get_user_command_name	src/ex_docmd.c	/^get_user_command_name(idx)$/;"	f	file:
get_user_command_name	src/ex_docmd.c	/^static char_u *get_user_command_name __ARGS((int idx));$/;"	p	file:	signature:(int idx)
get_user_commands	src/ex_docmd.c	/^get_user_commands(xp, idx)$/;"	f
get_user_func_name	src/eval.c	/^get_user_func_name(xp, idx)$/;"	f
get_user_input	src/eval.c	/^get_user_input(argvars, rettv, inputdialog)$/;"	f	file:
get_user_input	src/eval.c	/^static void get_user_input __ARGS((typval_T *argvars, typval_T *rettv, int inputdialog));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv, int inputdialog)
get_user_name	src/misc2.c	/^get_user_name(buf, len)$/;"	f
get_user_var_name	src/eval.c	/^get_user_var_name(xp, idx)$/;"	f
get_valid_buffer	src/if_mzsch.c	/^buf_T *get_valid_buffer(void *obj)$/;"	f	signature:(void *obj)
get_valid_window	src/if_mzsch.c	/^win_T *get_valid_window(void *obj)$/;"	f	signature:(void *obj)
get_var_tv	src/eval.c	/^get_var_tv(name, len, rettv, verbose)$/;"	f	file:
get_var_tv	src/eval.c	/^static int get_var_tv __ARGS((char_u *name, int len, typval_T *rettv, int verbose));$/;"	p	file:	signature:(char_u *name, int len, typval_T *rettv, int verbose)
get_var_value	src/eval.c	/^get_var_value(name)$/;"	f
get_varp	src/option.c	/^get_varp(p)$/;"	f	file:
get_varp	src/option.c	/^static char_u *get_varp __ARGS((struct vimoption *));$/;"	p	file:	signature:(struct vimoption *)
get_varp_scope	src/option.c	/^get_varp_scope(p, opt_flags)$/;"	f	file:
get_varp_scope	src/option.c	/^static char_u *get_varp_scope __ARGS((struct vimoption *p, int opt_flags));$/;"	p	file:	signature:(struct vimoption *p, int opt_flags)
get_view_file	src/ex_docmd.c	/^get_view_file(c)$/;"	f	file:
get_view_file	src/ex_docmd.c	/^static char_u	*get_view_file __ARGS((int c));$/;"	p	file:	signature:(int c)
get_vim_curr_buffer	src/if_mzsch.c	/^get_vim_curr_buffer(void)$/;"	f	file:	signature:(void)
get_vim_curr_buffer	src/if_mzsch.c	/^static vim_mz_buffer *get_vim_curr_buffer(void);$/;"	p	file:	signature:(void)
get_vim_curr_window	src/if_mzsch.c	/^get_vim_curr_window(void)$/;"	f	file:	signature:(void)
get_vim_curr_window	src/if_mzsch.c	/^static vim_mz_window *get_vim_curr_window(void);$/;"	p	file:	signature:(void)
get_vim_env	src/dosinst.c	/^get_vim_env(void)$/;"	f	file:	signature:(void)
get_vim_var_list	src/eval.c	/^get_vim_var_list(idx)$/;"	f
get_vim_var_nr	src/eval.c	/^get_vim_var_nr(idx)$/;"	f
get_vim_var_str	src/eval.c	/^get_vim_var_str(idx)$/;"	f
get_viminfo_parameter	src/option.c	/^get_viminfo_parameter(type)$/;"	f
get_visual_text	src/normal.c	/^get_visual_text(cap, pp, lenp)$/;"	f
get_win	src/if_ruby.c	/^static win_T *get_win(VALUE obj)$/;"	f	file:	signature:(VALUE obj)
get_win_fio_flags	src/fileio.c	/^get_win_fio_flags(ptr)$/;"	f	file:
get_win_fio_flags	src/fileio.c	/^static int get_win_fio_flags __ARGS((char_u *ptr));$/;"	p	file:	signature:(char_u *ptr)
get_window	src/workshop.c	/^get_window($/;"	f	file:	signature:( buf_T *buf)
get_window	src/workshop.c	/^static win_T	*get_window(buf_T *);$/;"	p	file:	signature:(buf_T *)
get_window_arg	src/if_mzsch.c	/^get_window_arg(const char *fname, int argnum, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(const char *fname, int argnum, int argc, Scheme_Object **argv)
get_window_arg	src/if_mzsch.c	/^static vim_mz_window *get_window_arg(const char *fname, int argnum,$/;"	p	file:	signature:(const char *fname, int argnum, int argc, Scheme_Object **argv)
get_window_buffer	src/if_mzsch.c	/^get_window_buffer(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_window_buffer	src/if_mzsch.c	/^static Scheme_Object *get_window_buffer(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_window_by_num	src/if_mzsch.c	/^get_window_by_num(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_window_by_num	src/if_mzsch.c	/^static Scheme_Object *get_window_by_num(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_window_count	src/if_mzsch.c	/^get_window_count(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:	signature:(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)
get_window_count	src/if_mzsch.c	/^static Scheme_Object *get_window_count(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_window_height	src/if_mzsch.c	/^get_window_height(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_window_height	src/if_mzsch.c	/^static Scheme_Object *get_window_height(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_window_list	src/if_mzsch.c	/^get_window_list(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_window_list	src/if_mzsch.c	/^static Scheme_Object *get_window_list(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_window_num	src/if_mzsch.c	/^get_window_num(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_window_num	src/if_mzsch.c	/^static Scheme_Object *get_window_num(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_window_width	src/if_mzsch.c	/^get_window_width(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
get_window_width	src/if_mzsch.c	/^static Scheme_Object *get_window_width(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
get_winnr	src/eval.c	/^get_winnr(tp, argvar)$/;"	f	file:
get_winnr	src/eval.c	/^static int get_winnr __ARGS((tabpage_T *tp, typval_T *argvar));$/;"	p	file:	signature:(tabpage_T *tp, typval_T *argvar)
get_winopts	src/buffer.c	/^get_winopts(buf)$/;"	f
get_wordnode	src/spell.c	/^get_wordnode(spin)$/;"	f	file:
get_wordnode	src/spell.c	/^static wordnode_T *get_wordnode __ARGS((spellinfo_T *spin));$/;"	p	file:	signature:(spellinfo_T *spin)
get_work_area	src/gui_w32.c	/^get_work_area(RECT *spi_rect)$/;"	f	file:	signature:(RECT *spi_rect)
get_x11_icon	src/os_unix.c	/^get_x11_icon(test_only)$/;"	f	file:
get_x11_icon	src/os_unix.c	/^static int get_x11_icon __ARGS((int));$/;"	p	file:	signature:(int)
get_x11_thing	src/os_unix.c	/^get_x11_thing(get_title, test_only)$/;"	f	file:
get_x11_thing	src/os_unix.c	/^static int get_x11_thing __ARGS((int get_title, int test_only));$/;"	p	file:	signature:(int get_title, int test_only)
get_x11_title	src/os_unix.c	/^get_x11_title(test_only)$/;"	f	file:
get_x11_title	src/os_unix.c	/^static int get_x11_title __ARGS((int));$/;"	p	file:	signature:(int)
get_x11_windis	src/os_unix.c	/^get_x11_windis()$/;"	f	file:
get_x11_windis	src/os_unix.c	/^static int  get_x11_windis __ARGS((void));$/;"	p	file:	signature:(void)
get_yank_register	src/ops.c	/^get_yank_register(regname, writing)$/;"	f
getaltfname	src/buffer.c	/^getaltfname(errmsg)$/;"	f
getargcmd	src/ex_docmd.c	/^getargcmd(argp)$/;"	f	file:
getargcmd	src/ex_docmd.c	/^static char_u	*getargcmd __ARGS((char_u **));$/;"	p	file:	signature:(char_u **)
getargopt	src/ex_docmd.c	/^getargopt(eap)$/;"	f	file:
getargopt	src/ex_docmd.c	/^static int	getargopt __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
getchr	src/regexp.c	/^getchr()$/;"	f	file:
getchr	src/regexp.c	/^static int	getchr __ARGS((void));$/;"	p	file:	signature:(void)
getcmdline	src/ex_getln.c	/^getcmdline(firstc, count, indent)$/;"	f
getcmdline_prompt	src/ex_getln.c	/^getcmdline_prompt(firstc, prompt, attr, xp_context, xp_arg)$/;"	f
getcwd	src/vim.h	306;"	d
getdecchrs	src/regexp.c	/^getdecchrs()$/;"	f	file:
getdecchrs	src/regexp.c	/^static int	getdecchrs __ARGS((void));$/;"	p	file:	signature:(void)
getdigits	src/charset.c	/^getdigits(pp)$/;"	f
getdigraph	src/digraph.c	/^getdigraph(char1, char2, meta)$/;"	f
getent	src/termlib.c	/^getent(tbuf, term, termcap, buflen)$/;"	f	file:
getent	src/termlib.c	/^static int  getent __ARGS((char *, char *, FILE *, int));$/;"	p	file:	signature:(char *, char *, FILE *, int)
getexactdigraph	src/digraph.c	/^getexactdigraph(char1, char2, meta)$/;"	f	file:
getexactdigraph	src/digraph.c	/^static int getexactdigraph __ARGS((int, int, int));$/;"	p	file:	signature:(int, int, int)
getexline	src/ex_getln.c	/^getexline(c, cookie, indent)$/;"	f
getexmodeline	src/ex_getln.c	/^getexmodeline(promptc, cookie, indent)$/;"	f
getfile	src/ex_cmds.c	/^getfile(fnum, ffname, sfname, setpm, lnum, forceit)$/;"	f
gethexchrs	src/regexp.c	/^gethexchrs(maxinputlen)$/;"	f	file:
gethexchrs	src/regexp.c	/^static int	gethexchrs __ARGS((int maxinputlen));$/;"	p	file:	signature:(int maxinputlen)
gethostname	src/os_unix.c	2250;"	d	file:
getline	src/ex_cmds.h	/^    char_u	*(*getline) __ARGS((int, void *, int));$/;"	m	struct:exarg	access:public
getline	src/ex_docmd.c	/^    char_u	*(*getline) __ARGS((int, void *, int));$/;"	m	struct:loop_cookie	file:	access:public
getline_cookie	src/ex_docmd.c	/^getline_cookie(fgetline, cookie)$/;"	f
getline_equal	src/ex_docmd.c	/^getline_equal(fgetline, cookie, func)$/;"	f
getlinecol	src/term.c	/^getlinecol(cp, rp)$/;"	f
getmark	src/mark.c	/^getmark(c, changefile)$/;"	f
getmark_fnum	src/mark.c	/^getmark_fnum(c, changefile, fnum)$/;"	f
getnextac	src/fileio.c	/^getnextac(c, cookie, indent)$/;"	f	file:
getnextac	src/fileio.c	/^static char_u *getnextac __ARGS((int c, void *cookie, int indent));$/;"	p	file:	signature:(int c, void *cookie, int indent)
getnextcomp	src/misc1.c	/^getnextcomp(fname)$/;"	f
getnextmark	src/mark.c	/^getnextmark(startpos, dir, begin_line)$/;"	f
getoctchrs	src/regexp.c	/^getoctchrs()$/;"	f	file:
getoctchrs	src/regexp.c	/^static int	getoctchrs __ARGS((void));$/;"	p	file:	signature:(void)
getout	src/main.c	/^getout(exitval)$/;"	f
getout_preserve_modified	src/main.c	/^getout_preserve_modified(exitval)$/;"	f
getroom	src/spell.c	/^getroom(spin, len, align)$/;"	f	file:
getroom	src/spell.c	/^static void *getroom __ARGS((spellinfo_T *spin, size_t len, int align));$/;"	p	file:	signature:(spellinfo_T *spin, size_t len, int align)
getroom_save	src/spell.c	/^getroom_save(spin, s)$/;"	f	file:
getroom_save	src/spell.c	/^static char_u *getroom_save __ARGS((spellinfo_T *spin, char_u *s));$/;"	p	file:	signature:(spellinfo_T *spin, char_u *s)
getscript#GetLatestVimScripts	runtime/autoload/getscript.vim	/^fun! getscript#GetLatestVimScripts()$/;"	f
getsourceline	src/ex_cmds2.c	/^getsourceline(c, cookie, indent)$/;"	f
gettail	src/misc1.c	/^gettail(fname)$/;"	f
gettail_dir	src/misc1.c	/^gettail_dir(fname)$/;"	f	file:
gettail_dir	src/misc1.c	/^static char_u *gettail_dir __ARGS((char_u *fname));$/;"	p	file:	signature:(char_u *fname)
gettail_sep	src/misc1.c	/^gettail_sep(fname)$/;"	f
gettext_lang	src/ex_cmds2.c	/^gettext_lang(char_u *name)$/;"	f	file:	signature:(char_u *name)
gettimeofday	src/main.c	/^gettimeofday(struct timeval *tv, char *dummy)$/;"	f	file:	signature:(struct timeval *tv, char *dummy)
getvcol	src/charset.c	/^getvcol(wp, pos, start, cursor, end)$/;"	f
getvcol_nolist	src/charset.c	/^getvcol_nolist(posp)$/;"	f
getvcols	src/charset.c	/^getvcols(wp, pos1, pos2, left, right)$/;"	f
getviscol	src/misc2.c	/^getviscol()$/;"	f
getviscol2	src/misc2.c	/^getviscol2(col, coladd)$/;"	f
getvpos	src/misc2.c	/^getvpos(pos, wcol)$/;"	f
getvvcol	src/charset.c	/^getvvcol(wp, pos, start, cursor, end)$/;"	f
getvvcol	src/vim.h	1952;"	d
getwinvar	src/eval.c	/^getwinvar(argvars, rettv, off)$/;"	f	file:
getwinvar	src/eval.c	/^static void getwinvar __ARGS((typval_T *argvars, typval_T *rettv, int off));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv, int off)
gfp_setname	src/gui.c	/^gfp_setname(fname, cookie)$/;"	f	file:
gfp_setname	src/gui.c	/^static void gfp_setname __ARGS((char_u *fname, void *cookie));$/;"	p	file:	signature:(char_u *fname, void *cookie)
gg	src/testdir/test49.vim	/^	normal! gg$/;"	m
gid_t	src/os_os2_cfg.h	79;"	d
gint	src/gui_gtk_x11.c	63;"	d	file:
gitdiffcached	runtime/ftplugin/gitcommit.vim	/^function! s:gitdiffcached(bang,gitdir,...)$/;"	f
give_warning	src/message.c	/^give_warning(message, hl)$/;"	f
global_alist	src/globals.h	/^EXTERN alist_T	global_alist;	\/* global argument list *\/$/;"	v
global_argc	src/os_win32.c	/^static int	global_argc = 0;$/;"	v	file:
global_argv	src/os_win32.c	/^static char	**global_argv;$/;"	v	file:
global_busy	src/globals.h	/^EXTERN int	global_busy INIT(= 0);	    \/* set when :global is executing *\/$/;"	v
global_event_filter	src/gui_gtk_x11.c	/^global_event_filter(GdkXEvent *xev,$/;"	f	file:	signature:(GdkXEvent *xev, GdkEvent *event UNUSED, gpointer data UNUSED)
global_exe	src/ex_cmds.c	/^global_exe(cmd)$/;"	f
global_ime_DefWindowProc	src/glbl_ime.cpp	/^global_ime_DefWindowProc(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)$/;"	f	signature:(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)
global_ime_DefWindowProc	src/glbl_ime.h	/^    LRESULT WINAPI global_ime_DefWindowProc(HWND, UINT, WPARAM, LPARAM);$/;"	p	signature:(HWND, UINT, WPARAM, LPARAM)
global_ime_TranslateMessage	src/glbl_ime.cpp	/^global_ime_TranslateMessage(CONST MSG *lpMsg)$/;"	f	signature:(CONST MSG *lpMsg)
global_ime_TranslateMessage	src/glbl_ime.h	/^    BOOL WINAPI global_ime_TranslateMessage(CONST MSG *);$/;"	p	signature:(CONST MSG *)
global_ime_end	src/glbl_ime.cpp	/^global_ime_end()$/;"	f	signature:()
global_ime_end	src/glbl_ime.h	/^    void global_ime_end(void);$/;"	p	signature:(void)
global_ime_get_status	src/glbl_ime.cpp	/^global_ime_get_status()$/;"	f	signature:()
global_ime_get_status	src/glbl_ime.h	/^    int WINAPI global_ime_get_status(void);$/;"	p	signature:(void)
global_ime_init	src/glbl_ime.cpp	/^global_ime_init(ATOM atom, HWND hWnd)$/;"	f	signature:(ATOM atom, HWND hWnd)
global_ime_init	src/glbl_ime.h	/^    void global_ime_init(ATOM, HWND);$/;"	p	signature:(ATOM, HWND)
global_ime_set_font	src/glbl_ime.cpp	/^global_ime_set_font(LOGFONT *pFont)$/;"	f	signature:(LOGFONT *pFont)
global_ime_set_font	src/glbl_ime.h	/^    void WINAPI global_ime_set_font(LOGFONT*);$/;"	p	signature:(LOGFONT*)
global_ime_set_position	src/glbl_ime.cpp	/^global_ime_set_position(POINT *pPoint)$/;"	f	signature:(POINT *pPoint)
global_ime_set_position	src/glbl_ime.h	/^    void WINAPI global_ime_set_position(POINT*);$/;"	p	signature:(POINT*)
global_ime_set_status	src/glbl_ime.cpp	/^global_ime_set_status(int status)$/;"	f	signature:(int status)
global_ime_set_status	src/glbl_ime.h	/^    void WINAPI global_ime_set_status(int status);$/;"	p	signature:(int status)
global_need_beginline	src/ex_cmds.c	/^static int	global_need_beginline;	\/* call beginline() after ":g" *\/$/;"	v	file:
globaldir	src/globals.h	/^EXTERN char_u	*globaldir INIT(= NULL);$/;"	v
globaldir	src/structs.h	/^    char_u	*globaldir;	\/* saved value of globaldir *\/$/;"	m	struct:__anon57	access:public
globalsignmap	src/netbeans.c	/^static char **globalsignmap = NULL;$/;"	v	file:
globalsignmaplen	src/netbeans.c	/^static int globalsignmaplen = 0;$/;"	v	file:
globalsignmapused	src/netbeans.c	/^static int globalsignmapused = 0;$/;"	v	file:
globpath	src/ex_getln.c	/^globpath(path, file, expand_options)$/;"	f
globvardict	src/eval.c	/^static dict_T		globvardict;$/;"	v	file:
globvarht	src/eval.c	125;"	d	file:
globvars_var	src/eval.c	/^static dictitem_T	globvars_var;$/;"	v	file:
gnat#Find	runtime/autoload/gnat.vim	/^function gnat#Find () dict					     " {{{1$/;"	f
gnat#Get_Command	runtime/autoload/gnat.vim	/^function gnat#Get_Command (Command) dict			     " {{{1$/;"	f
gnat#Insert_Tags_Header	runtime/autoload/gnat.vim	/^function gnat#Insert_Tags_Header ()				  " {{{1$/;"	f
gnat#Make	runtime/autoload/gnat.vim	/^function gnat#Make () dict					     " {{{1$/;"	f
gnat#New	runtime/autoload/gnat.vim	/^function gnat#New ()						     " {{{1$/;"	f
gnat#Pretty	runtime/autoload/gnat.vim	/^function gnat#Pretty () dict					     " {{{1$/;"	f
gnat#Set_Project_File	runtime/autoload/gnat.vim	/^function gnat#Set_Project_File (...) dict			     " {{{1$/;"	f
gnat#Set_Session	runtime/autoload/gnat.vim	/^function gnat#Set_Session (...) dict				     " {{{1$/;"	f
gnat#Tags	runtime/autoload/gnat.vim	/^function gnat#Tags () dict					     " {{{1$/;"	f
go_deeper	src/spell.c	/^go_deeper(stack, depth, score_add)$/;"	f	file:
go_deeper	src/spell.c	/^static void go_deeper __ARGS((trystate_T *stack, int depth, int score_add));$/;"	p	file:	signature:(trystate_T *stack, int depth, int score_add)
goodi	src/spell.c	/^    int		goodi;$/;"	m	struct:__anon18	file:	access:public
got_code_from_term	src/term.c	/^got_code_from_term(code, len)$/;"	f	file:
got_code_from_term	src/term.c	/^static void got_code_from_term __ARGS((char_u *code, int len));$/;"	p	file:	signature:(char_u *code, int len)
got_int	src/ex_docmd.c	/^    int		got_int;$/;"	m	struct:dbg_stuff	file:	access:public
got_int	src/globals.h	/^EXTERN volatile int got_int INIT(= FALSE);    \/* set to TRUE when interrupt$/;"	v
got_x_error	runtime/tools/xcmdsrv_client.c	/^static int	got_x_error = FALSE;$/;"	v	file:
got_x_error	src/if_xcmdsrv.c	/^static int	got_x_error = FALSE;$/;"	v	file:
got_x_error	src/os_unix.c	/^static int	got_x_error = FALSE;$/;"	v	file:
gotchars	src/getchar.c	/^gotchars(chars, len)$/;"	f	file:
gotchars	src/getchar.c	/^static void	gotchars __ARGS((char_u *, int));$/;"	p	file:	signature:(char_u *, int)
goto_buffer	src/buffer.c	/^goto_buffer(eap, start, dir, count)$/;"	f
goto_byte	src/memline.c	/^goto_byte(cnt)$/;"	f
goto_im	src/misc1.c	/^goto_im()$/;"	f
goto_tabpage	src/window.c	/^goto_tabpage(n)$/;"	f
goto_tabpage_tp	src/window.c	/^goto_tabpage_tp(tp)$/;"	f
goto_tabpage_win	src/window.c	/^goto_tabpage_win(tp, wp)$/;"	f
gotocmdline	src/ex_getln.c	/^gotocmdline(clr)$/;"	f
gotoxy	src/os_win32.c	/^gotoxy($/;"	f	file:	signature:( unsigned x, unsigned y)
gotoxy	src/os_win32.c	/^static void gotoxy(unsigned x, unsigned y);$/;"	p	file:	signature:(unsigned x, unsigned y)
gpm_close	src/os_unix.c	/^gpm_close()$/;"	f	file:
gpm_close	src/os_unix.c	/^static void gpm_close __ARGS((void));$/;"	p	file:	signature:(void)
gpm_open	src/os_unix.c	/^gpm_open()$/;"	f	file:
gpm_open	src/os_unix.c	/^static int gpm_open __ARGS((void));$/;"	p	file:	signature:(void)
gpointer	src/gui_gtk.c	78;"	d	file:
gpointer	src/gui_gtk_x11.c	64;"	d	file:
grab_file_name	src/window.c	/^grab_file_name(count, file_lnum)$/;"	f
grep_internal	src/quickfix.c	/^grep_internal(cmdidx)$/;"	f
greyed_out	src/structs.h	/^    int		greyed_out;	    \/* Flag *\/$/;"	m	struct:VimMenu	access:public
grgb	src/gui_riscos.c	65;"	d	file:
groovy_minlines	runtime/syntax/groovy.vim	/^  let groovy_minlines = 10$/;"	v
group	src/fileio.c	/^    int		    group;		\/* group ID *\/$/;"	m	struct:AutoPat	file:	access:public
group	src/fileio.c	/^    int		group;		\/* group being used *\/$/;"	m	struct:AutoPatCmd	file:	access:public
growarray	src/structs.h	/^typedef struct growarray$/;"	s
growarray::ga_data	src/structs.h	/^    void    *ga_data;		    \/* pointer to the first item *\/$/;"	m	struct:growarray	access:public
growarray::ga_growsize	src/structs.h	/^    int	    ga_growsize;	    \/* number of items to grow each time *\/$/;"	m	struct:growarray	access:public
growarray::ga_itemsize	src/structs.h	/^    int	    ga_itemsize;	    \/* sizeof(item) *\/$/;"	m	struct:growarray	access:public
growarray::ga_len	src/structs.h	/^    int	    ga_len;		    \/* current number of items used *\/$/;"	m	struct:growarray	access:public
growarray::ga_maxlen	src/structs.h	/^    int	    ga_maxlen;		    \/* maximum number of items possible *\/$/;"	m	struct:growarray	access:public
gtk_form_attach_child_window	src/gui_gtk_f.c	/^gtk_form_attach_child_window(GtkForm *form, GtkFormChild *child)$/;"	f	file:	signature:(GtkForm *form, GtkFormChild *child)
gtk_form_attach_child_window	src/gui_gtk_f.c	/^static void gtk_form_attach_child_window(GtkForm *form,$/;"	p	file:	signature:(GtkForm *form, GtkFormChild *child)
gtk_form_child_map	src/gui_gtk_f.c	/^gtk_form_child_map(GtkWidget *widget UNUSED, gpointer user_data)$/;"	f	file:	signature:(GtkWidget *widget UNUSED, gpointer user_data)
gtk_form_child_map	src/gui_gtk_f.c	/^static void gtk_form_child_map(GtkWidget *widget, gpointer user_data);$/;"	p	file:	signature:(GtkWidget *widget, gpointer user_data)
gtk_form_child_unmap	src/gui_gtk_f.c	/^gtk_form_child_unmap(GtkWidget *widget UNUSED, gpointer user_data)$/;"	f	file:	signature:(GtkWidget *widget UNUSED, gpointer user_data)
gtk_form_child_unmap	src/gui_gtk_f.c	/^static void gtk_form_child_unmap(GtkWidget *widget, gpointer user_data);$/;"	p	file:	signature:(GtkWidget *widget, gpointer user_data)
gtk_form_class_init	src/gui_gtk_f.c	/^gtk_form_class_init(GtkFormClass *klass)$/;"	f	file:	signature:(GtkFormClass *klass)
gtk_form_class_init	src/gui_gtk_f.c	/^static void gtk_form_class_init(GtkFormClass *klass);$/;"	p	file:	signature:(GtkFormClass *klass)
gtk_form_expose	src/gui_gtk_f.c	/^gtk_form_expose(GtkWidget *widget, GdkEventExpose *event)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventExpose *event)
gtk_form_expose	src/gui_gtk_f.c	/^static gint gtk_form_expose(GtkWidget *widget,$/;"	p	file:	signature:(GtkWidget *widget, GdkEventExpose *event)
gtk_form_filter	src/gui_gtk_f.c	/^gtk_form_filter(GdkXEvent *gdk_xevent, GdkEvent *event UNUSED, gpointer data)$/;"	f	file:	signature:(GdkXEvent *gdk_xevent, GdkEvent *event UNUSED, gpointer data)
gtk_form_filter	src/gui_gtk_f.c	/^static GdkFilterReturn gtk_form_filter(GdkXEvent *gdk_xevent,$/;"	p	file:	signature:(GdkXEvent *gdk_xevent, GdkEvent *event, gpointer data)
gtk_form_forall	src/gui_gtk_f.c	/^gtk_form_forall(GtkContainer	*container,$/;"	f	file:	signature:(GtkContainer *container, gboolean include_internals UNUSED, GtkCallback callback, gpointer callback_data)
gtk_form_forall	src/gui_gtk_f.c	/^static void gtk_form_forall(GtkContainer *container,$/;"	p	file:	signature:(GtkContainer *container, gboolean include_internals, GtkCallback callback, gpointer callback_data)
gtk_form_freeze	src/gui_gtk_f.c	/^gtk_form_freeze(GtkForm *form)$/;"	f	signature:(GtkForm *form)
gtk_form_freeze	src/gui_gtk_f.h	/^void gtk_form_freeze(GtkForm *form);$/;"	p	signature:(GtkForm *form)
gtk_form_get_type	src/gui_gtk_f.c	/^gtk_form_get_type(void)$/;"	f	signature:(void)
gtk_form_get_type	src/gui_gtk_f.h	/^GtkType gtk_form_get_type(void);$/;"	p	signature:(void)
gtk_form_init	src/gui_gtk_f.c	/^gtk_form_init(GtkForm *form)$/;"	f	file:	signature:(GtkForm *form)
gtk_form_init	src/gui_gtk_f.c	/^static void gtk_form_init(GtkForm *form);$/;"	p	file:	signature:(GtkForm *form)
gtk_form_main_filter	src/gui_gtk_f.c	/^gtk_form_main_filter(GdkXEvent *gdk_xevent,$/;"	f	file:	signature:(GdkXEvent *gdk_xevent, GdkEvent *event UNUSED, gpointer data)
gtk_form_main_filter	src/gui_gtk_f.c	/^static GdkFilterReturn gtk_form_main_filter(GdkXEvent *gdk_xevent,$/;"	p	file:	signature:(GdkXEvent *gdk_xevent, GdkEvent *event, gpointer data)
gtk_form_map	src/gui_gtk_f.c	/^gtk_form_map(GtkWidget *widget)$/;"	f	file:	signature:(GtkWidget *widget)
gtk_form_map	src/gui_gtk_f.c	/^static void gtk_form_map(GtkWidget *widget);$/;"	p	file:	signature:(GtkWidget *widget)
gtk_form_move	src/gui_gtk_f.c	/^gtk_form_move(GtkForm	*form,$/;"	f	signature:(GtkForm *form, GtkWidget *child_widget, gint x, gint y)
gtk_form_move	src/gui_gtk_f.h	/^void gtk_form_move(GtkForm *form, GtkWidget * widget,$/;"	p	signature:(GtkForm *form, GtkWidget * widget, gint x, gint y)
gtk_form_move_resize	src/gui_gtk_f.c	/^gtk_form_move_resize(GtkForm *form, GtkWidget *widget,$/;"	f	signature:(GtkForm *form, GtkWidget *widget, gint x, gint y, gint w, gint h)
gtk_form_move_resize	src/gui_gtk_f.h	/^void gtk_form_move_resize(GtkForm * form, GtkWidget * widget,$/;"	p	signature:(GtkForm * form, GtkWidget * widget, gint x, gint y, gint w, gint h)
gtk_form_new	src/gui_gtk_f.c	/^gtk_form_new(void)$/;"	f	signature:(void)
gtk_form_new	src/gui_gtk_f.h	/^GtkWidget *gtk_form_new(void);$/;"	p	signature:(void)
gtk_form_position_child	src/gui_gtk_f.c	/^gtk_form_position_child(GtkForm *form, GtkFormChild *child,$/;"	f	file:	signature:(GtkForm *form, GtkFormChild *child, gboolean force_allocate)
gtk_form_position_child	src/gui_gtk_f.c	/^static void gtk_form_position_child(GtkForm *form,$/;"	p	file:	signature:(GtkForm *form, GtkFormChild *child, gboolean force_allocate)
gtk_form_position_children	src/gui_gtk_f.c	/^gtk_form_position_children(GtkForm *form)$/;"	f	file:	signature:(GtkForm *form)
gtk_form_position_children	src/gui_gtk_f.c	/^static void gtk_form_position_children(GtkForm *form);$/;"	p	file:	signature:(GtkForm *form)
gtk_form_put	src/gui_gtk_f.c	/^gtk_form_put(GtkForm	*form,$/;"	f	signature:(GtkForm *form, GtkWidget *child_widget, gint x, gint y)
gtk_form_put	src/gui_gtk_f.h	/^void gtk_form_put(GtkForm * form, GtkWidget * widget,$/;"	p	signature:(GtkForm * form, GtkWidget * widget, gint x, gint y)
gtk_form_realize	src/gui_gtk_f.c	/^gtk_form_realize(GtkWidget *widget)$/;"	f	file:	signature:(GtkWidget *widget)
gtk_form_realize	src/gui_gtk_f.c	/^static void gtk_form_realize(GtkWidget *widget);$/;"	p	file:	signature:(GtkWidget *widget)
gtk_form_realize_child	src/gui_gtk_f.c	/^gtk_form_realize_child(GtkForm *form, GtkFormChild *child)$/;"	f	file:	signature:(GtkForm *form, GtkFormChild *child)
gtk_form_realize_child	src/gui_gtk_f.c	/^static void gtk_form_realize_child(GtkForm *form,$/;"	p	file:	signature:(GtkForm *form, GtkFormChild *child)
gtk_form_remove	src/gui_gtk_f.c	/^gtk_form_remove(GtkContainer *container, GtkWidget *widget)$/;"	f	file:	signature:(GtkContainer *container, GtkWidget *widget)
gtk_form_remove	src/gui_gtk_f.c	/^static void gtk_form_remove(GtkContainer *container,$/;"	p	file:	signature:(GtkContainer *container, GtkWidget *widget)
gtk_form_send_configure	src/gui_gtk_f.c	/^gtk_form_send_configure(GtkForm *form)$/;"	f	file:	signature:(GtkForm *form)
gtk_form_send_configure	src/gui_gtk_f.c	/^static void gtk_form_send_configure(GtkForm *form);$/;"	p	file:	signature:(GtkForm *form)
gtk_form_set_static_gravity	src/gui_gtk_f.c	/^gtk_form_set_static_gravity(GdkWindow *window, gboolean use_static)$/;"	f	file:	signature:(GdkWindow *window, gboolean use_static)
gtk_form_set_static_gravity	src/gui_gtk_f.c	/^static void gtk_form_set_static_gravity(GdkWindow *window,$/;"	p	file:	signature:(GdkWindow *window, gboolean use_static)
gtk_form_size_allocate	src/gui_gtk_f.c	/^gtk_form_size_allocate(GtkWidget *widget, GtkAllocation *allocation)$/;"	f	file:	signature:(GtkWidget *widget, GtkAllocation *allocation)
gtk_form_size_allocate	src/gui_gtk_f.c	/^static void gtk_form_size_allocate(GtkWidget *widget,$/;"	p	file:	signature:(GtkWidget *widget, GtkAllocation *allocation)
gtk_form_size_request	src/gui_gtk_f.c	/^gtk_form_size_request(GtkWidget *widget, GtkRequisition *requisition)$/;"	f	file:	signature:(GtkWidget *widget, GtkRequisition *requisition)
gtk_form_size_request	src/gui_gtk_f.c	/^static void gtk_form_size_request(GtkWidget *widget,$/;"	p	file:	signature:(GtkWidget *widget, GtkRequisition *requisition)
gtk_form_thaw	src/gui_gtk_f.c	/^gtk_form_thaw(GtkForm *form)$/;"	f	signature:(GtkForm *form)
gtk_form_thaw	src/gui_gtk_f.h	/^void gtk_form_thaw(GtkForm *form);$/;"	p	signature:(GtkForm *form)
gtk_form_unrealize	src/gui_gtk_f.c	/^gtk_form_unrealize(GtkWidget *widget)$/;"	f	file:	signature:(GtkWidget *widget)
gtk_form_unrealize	src/gui_gtk_f.c	/^static void gtk_form_unrealize(GtkWidget *widget);$/;"	p	file:	signature:(GtkWidget *widget)
gtk_sel_atom	src/vim.h	/^    GdkAtom     gtk_sel_atom;	\/* PRIMARY\/CLIPBOARD selection ID *\/$/;"	m	struct:VimClipboard	access:public
gtk_socket_id	src/globals.h	/^EXTERN guint32	gtk_socket_id INIT(= 0);$/;"	v
gui	src/gui.c	/^gui_T gui;$/;"	v
gui	src/structs.h	/^	} gui;$/;"	m	union:attr_entry::__anon45	typeref:struct:attr_entry::__anon45::__anon48	access:public
gui_T	src/gui.h	/^} gui_T;$/;"	t	typeref:struct:Gui
gui_add_tearoff	src/menu.c	/^gui_add_tearoff(tearpath, pri_tab, pri_idx)$/;"	f	file:
gui_add_tearoff	src/menu.c	/^static void gui_add_tearoff __ARGS((char_u *tearpath, int *pri_tab, int pri_idx));$/;"	p	file:	signature:(char_u *tearpath, int *pri_tab, int pri_idx)
gui_argc	src/gui_gtk_x11.c	/^static int    gui_argc = 0;$/;"	v	file:
gui_argc	src/gui_x11.c	/^static int gui_argc = 0;$/;"	v	file:
gui_argv	src/gui_gtk_x11.c	/^static char **gui_argv = NULL;$/;"	v	file:
gui_argv	src/gui_x11.c	/^static char **gui_argv = NULL;$/;"	v	file:
gui_athena_create_pullright_pixmap	src/gui_athena.c	/^gui_athena_create_pullright_pixmap(w)$/;"	f	file:
gui_athena_create_pullright_pixmap	src/gui_athena.c	/^static Pixmap gui_athena_create_pullright_pixmap __ARGS((Widget));$/;"	p	file:	signature:(Widget)
gui_athena_delayed_arm_action	src/gui_athena.c	/^gui_athena_delayed_arm_action(w, event, args, nargs)$/;"	f	file:
gui_athena_delayed_arm_action	src/gui_athena.c	/^static void gui_athena_delayed_arm_action __ARGS((Widget, XEvent *, String *,$/;"	p	file:	signature:(Widget, XEvent *, String *, Cardinal *)
gui_athena_menu_colors	src/gui_athena.c	/^gui_athena_menu_colors(id)$/;"	f	file:
gui_athena_menu_colors	src/gui_athena.c	/^static void gui_athena_menu_colors __ARGS((Widget id));$/;"	p	file:	signature:(Widget id)
gui_athena_menu_font	src/gui_athena.c	/^gui_athena_menu_font(id)$/;"	f	file:
gui_athena_menu_font	src/gui_athena.c	/^static void gui_athena_menu_font __ARGS((Widget id));$/;"	p	file:	signature:(Widget id)
gui_athena_menu_has_submenus	src/gui_athena.c	/^gui_athena_menu_has_submenus(id, ignore)$/;"	f	file:
gui_athena_menu_has_submenus	src/gui_athena.c	/^static Boolean	gui_athena_menu_has_submenus __ARGS((Widget, Widget));$/;"	p	file:	signature:(Widget, Widget)
gui_athena_menu_timeout	src/gui_athena.c	/^gui_athena_menu_timeout(client_data, id)$/;"	f	file:
gui_athena_menu_timeout	src/gui_athena.c	/^static void gui_athena_menu_timeout __ARGS((XtPointer, XtIntervalId *));$/;"	p	file:	signature:(XtPointer, XtIntervalId *)
gui_athena_popdown_submenus_action	src/gui_athena.c	/^gui_athena_popdown_submenus_action(w, event, args, nargs)$/;"	f	file:
gui_athena_popdown_submenus_action	src/gui_athena.c	/^static void gui_athena_popdown_submenus_action __ARGS((Widget, XEvent *,$/;"	p	file:	signature:(Widget, XEvent *, String *, Cardinal *)
gui_athena_popup_callback	src/gui_athena.c	/^gui_athena_popup_callback(w, client_data, call_data)$/;"	f	file:
gui_athena_popup_callback	src/gui_athena.c	/^static void gui_athena_popup_callback __ARGS((Widget, XtPointer, XtPointer));$/;"	p	file:	signature:(Widget, XtPointer, XtPointer)
gui_athena_scroll_cb_jump	src/gui_athena.c	/^gui_athena_scroll_cb_jump(w, client_data, call_data)$/;"	f	file:
gui_athena_scroll_cb_jump	src/gui_athena.c	/^static void gui_athena_scroll_cb_jump	__ARGS((Widget, XtPointer, XtPointer));$/;"	p	file:	signature:(Widget, XtPointer, XtPointer)
gui_athena_scroll_cb_scroll	src/gui_athena.c	/^gui_athena_scroll_cb_scroll(w, client_data, call_data)$/;"	f	file:
gui_athena_scroll_cb_scroll	src/gui_athena.c	/^static void gui_athena_scroll_cb_scroll __ARGS((Widget, XtPointer, XtPointer));$/;"	p	file:	signature:(Widget, XtPointer, XtPointer)
gui_athena_scroll_colors	src/gui_athena.c	/^gui_athena_scroll_colors(id)$/;"	f	file:
gui_athena_scroll_colors	src/gui_athena.c	/^static void gui_athena_scroll_colors __ARGS((Widget id));$/;"	p	file:	signature:(Widget id)
gui_attr_table	src/syntax.c	/^static garray_T	gui_attr_table = {0, 0, 0, 0, NULL};$/;"	v	file:
gui_bg_default	src/option.c	/^gui_bg_default()$/;"	f	file:
gui_bg_default	src/option.c	/^static char_u *gui_bg_default __ARGS((void));$/;"	p	file:	signature:(void)
gui_can_update_cursor	src/gui.c	/^gui_can_update_cursor()$/;"	f
gui_check_colors	src/gui.c	/^gui_check_colors()$/;"	f
gui_check_pos	src/gui.c	/^gui_check_pos()$/;"	f	file:
gui_check_pos	src/gui.c	/^static void gui_check_pos __ARGS((void));$/;"	p	file:	signature:(void)
gui_clear_block	src/gui.c	/^gui_clear_block(row1, col1, row2, col2)$/;"	f
gui_create_initial_menus	src/menu.c	/^gui_create_initial_menus(menu)$/;"	f
gui_create_scrollbar	src/gui.c	/^gui_create_scrollbar(sb, type, wp)$/;"	f
gui_create_tearoffs_recurse	src/menu.c	/^gui_create_tearoffs_recurse(menu, pname, pri_tab, pri_idx)$/;"	f	file:
gui_create_tearoffs_recurse	src/menu.c	/^static void gui_create_tearoffs_recurse __ARGS((vimmenu_T *menu, const char_u *pname, int *pri_tab, int pri_idx));$/;"	p	file:	signature:(vimmenu_T *menu, const char_u *pname, int *pri_tab, int pri_idx)
gui_delete_lines	src/gui.c	/^gui_delete_lines(row, count)$/;"	f	file:
gui_delete_lines	src/gui.c	/^static void gui_delete_lines __ARGS((int row, int count));$/;"	p	file:	signature:(int row, int count)
gui_destroy_tearoffs_recurse	src/menu.c	/^gui_destroy_tearoffs_recurse(menu)$/;"	f	file:
gui_destroy_tearoffs_recurse	src/menu.c	/^static void gui_destroy_tearoffs_recurse __ARGS((vimmenu_T *menu));$/;"	p	file:	signature:(vimmenu_T *menu)
gui_do_findrepl	src/gui.c	/^gui_do_findrepl(flags, find_text, repl_text, down)$/;"	f
gui_do_horiz_scroll	src/gui.c	/^gui_do_horiz_scroll(leftcol, compute_longest_lnum)$/;"	f
gui_do_one_color	src/syntax.c	/^gui_do_one_color(idx, do_menu, do_tooltip)$/;"	f	file:
gui_do_one_color	src/syntax.c	/^static void gui_do_one_color __ARGS((int idx, int do_menu, int do_tooltip));$/;"	p	file:	signature:(int idx, int do_menu, int do_tooltip)
gui_do_scroll	src/gui.c	/^gui_do_scroll()$/;"	f
gui_do_scrollbar	src/gui.c	/^gui_do_scrollbar(wp, which, enable)$/;"	f	file:
gui_do_scrollbar	src/gui.c	/^static void gui_do_scrollbar __ARGS((win_T *wp, int which, int enable));$/;"	p	file:	signature:(win_T *wp, int which, int enable)
gui_dont_update_cursor	src/gui.c	/^gui_dont_update_cursor()$/;"	f
gui_drag_scrollbar	src/gui.c	/^gui_drag_scrollbar(sb, value, still_dragging)$/;"	f
gui_exit	src/gui.c	/^gui_exit(rc)$/;"	f
gui_find_bitmap	src/gui.c	/^gui_find_bitmap(name, buffer, ext)$/;"	f
gui_find_iconfile	src/gui.c	/^gui_find_iconfile(name, buffer, ext)$/;"	f
gui_find_longest_lnum	src/gui.c	/^gui_find_longest_lnum()$/;"	f	file:
gui_find_longest_lnum	src/gui.c	/^static linenr_T gui_find_longest_lnum __ARGS((void));$/;"	p	file:	signature:(void)
gui_find_menu	src/menu.c	/^gui_find_menu(path_name)$/;"	f
gui_find_scrollbar	src/gui.c	/^gui_find_scrollbar(ident)$/;"	f
gui_focus_change	src/gui.c	/^gui_focus_change(in_focus)$/;"	f
gui_get_base_height	src/gui.c	/^gui_get_base_height()$/;"	f
gui_get_base_width	src/gui.c	/^gui_get_base_width()$/;"	f
gui_get_color	src/gui.c	/^gui_get_color(name)$/;"	f
gui_get_lightness	src/gui.c	/^gui_get_lightness(pixel)$/;"	f
gui_get_shellsize	src/gui.c	/^gui_get_shellsize()$/;"	f
gui_get_wide_font	src/gui.c	/^gui_get_wide_font()$/;"	f
gui_get_x11_windis	src/gui_gtk_x11.c	/^gui_get_x11_windis(Window *win, Display **dis)$/;"	f	signature:(Window *win, Display **dis)
gui_get_x11_windis	src/gui_x11.c	/^gui_get_x11_windis(win, dis)$/;"	f
gui_gtk2_draw_string	src/gui_gtk_x11.c	/^gui_gtk2_draw_string(int row, int col, char_u *s, int len, int flags)$/;"	f	signature:(int row, int col, char_u *s, int len, int flags)
gui_gtk_register_stock_icons	src/gui_gtk.c	/^gui_gtk_register_stock_icons(void)$/;"	f	signature:(void)
gui_gtk_set_dnd_targets	src/gui_gtk_x11.c	/^gui_gtk_set_dnd_targets(void)$/;"	f	signature:(void)
gui_gtk_set_mnemonics	src/gui_gtk.c	/^gui_gtk_set_mnemonics(int enable)$/;"	f	signature:(int enable)
gui_gtk_set_selection_targets	src/gui_gtk_x11.c	/^gui_gtk_set_selection_targets(void)$/;"	f	signature:(void)
gui_handle_drop	src/gui.c	/^gui_handle_drop(x, y, modifiers, fnames, count)$/;"	f
gui_has_tabline	src/gui.c	/^gui_has_tabline()$/;"	f	file:
gui_has_tabline	src/gui.c	/^static int gui_has_tabline __ARGS((void));$/;"	p	file:	signature:(void)
gui_init	src/gui.c	/^gui_init()$/;"	f
gui_init_check	src/gui.c	/^gui_init_check()$/;"	f
gui_init_font	src/gui.c	/^gui_init_font(font_list, fontset)$/;"	f
gui_init_menu_font	src/gui_x11.c	/^gui_init_menu_font()$/;"	f
gui_init_tooltip_font	src/gui_x11.c	/^gui_init_tooltip_font()$/;"	f
gui_init_which_components	src/gui.c	/^gui_init_which_components(oldval)$/;"	f
gui_insert_lines	src/gui.c	/^gui_insert_lines(row, count)$/;"	f	file:
gui_insert_lines	src/gui.c	/^static void gui_insert_lines __ARGS((int row, int count));$/;"	p	file:	signature:(int row, int count)
gui_is_menu_shortcut	src/menu.c	/^gui_is_menu_shortcut(key)$/;"	f
gui_is_win32s	src/gui_w32.c	/^gui_is_win32s(void)$/;"	f	signature:(void)
gui_mac_create_atsui_style	src/gui_mac.c	/^gui_mac_create_atsui_style(void)$/;"	f	file:	signature:(void)
gui_mac_dispose_atsui_style	src/gui_mac.c	/^gui_mac_dispose_atsui_style(void)$/;"	f	file:	signature:(void)
gui_mac_dispose_atsui_style	src/gui_mac.c	/^static void gui_mac_dispose_atsui_style(void);$/;"	p	file:	signature:(void)
gui_mac_doActivateEvent	src/gui_mac.c	/^gui_mac_doActivateEvent(EventRecord *event)$/;"	f	signature:(EventRecord *event)
gui_mac_doInContentClick	src/gui_mac.c	/^gui_mac_doInContentClick(EventRecord *theEvent, WindowPtr whichWindow)$/;"	f	signature:(EventRecord *theEvent, WindowPtr whichWindow)
gui_mac_doInDragClick	src/gui_mac.c	/^gui_mac_doInDragClick(Point where, WindowPtr whichWindow)$/;"	f	signature:(Point where, WindowPtr whichWindow)
gui_mac_doInGrowClick	src/gui_mac.c	/^gui_mac_doInGrowClick(Point where, WindowPtr whichWindow)$/;"	f	signature:(Point where, WindowPtr whichWindow)
gui_mac_doInZoomClick	src/gui_mac.c	/^gui_mac_doInZoomClick(EventRecord *theEvent, WindowPtr whichWindow)$/;"	f	file:	signature:(EventRecord *theEvent, WindowPtr whichWindow)
gui_mac_doKeyEvent	src/gui_mac.c	/^gui_mac_doKeyEvent(EventRecord *theEvent)$/;"	f	signature:(EventRecord *theEvent)
gui_mac_doMouseDownEvent	src/gui_mac.c	/^gui_mac_doMouseDownEvent(EventRecord *theEvent)$/;"	f	signature:(EventRecord *theEvent)
gui_mac_doMouseMovedEvent	src/gui_mac.c	/^gui_mac_doMouseMovedEvent(EventRecord *event)$/;"	f	signature:(EventRecord *event)
gui_mac_doMouseUpEvent	src/gui_mac.c	/^gui_mac_doMouseUpEvent(EventRecord *theEvent)$/;"	f	signature:(EventRecord *theEvent)
gui_mac_doSuspendEvent	src/gui_mac.c	/^gui_mac_doSuspendEvent(EventRecord *event)$/;"	f	signature:(EventRecord *event)
gui_mac_doUpdateEvent	src/gui_mac.c	/^gui_mac_doUpdateEvent(EventRecord *event)$/;"	f	signature:(EventRecord *event)
gui_mac_drag_thumb	src/gui_mac.c	/^gui_mac_drag_thumb(ControlHandle theControl, short partCode)$/;"	f	signature:(ControlHandle theControl, short partCode)
gui_mac_find_font	src/gui_mac.c	/^gui_mac_find_font(char_u *font_name)$/;"	f	signature:(char_u *font_name)
gui_mac_get_menu_item_index	src/gui_mac.c	/^gui_mac_get_menu_item_index(vimmenu_T *pMenu)$/;"	f	signature:(vimmenu_T *pMenu)
gui_mac_get_vim_menu	src/gui_mac.c	/^gui_mac_get_vim_menu(short menuID, short itemIndex, vimmenu_T *pMenu)$/;"	f	file:	signature:(short menuID, short itemIndex, vimmenu_T *pMenu)
gui_mac_handle_event	src/gui_mac.c	/^gui_mac_handle_event(EventRecord *event)$/;"	f	signature:(EventRecord *event)
gui_mac_handle_menu	src/gui_mac.c	/^gui_mac_handle_menu(long menuChoice)$/;"	f	signature:(long menuChoice)
gui_mac_handle_text_input	src/gui_mac.c	/^gui_mac_handle_text_input($/;"	f	file:	signature:( EventHandlerCallRef nextHandler, EventRef theEvent, void *data)
gui_mac_handle_text_input	src/gui_mac.c	/^static pascal OSStatus gui_mac_handle_text_input($/;"	p	file:	signature:( EventHandlerCallRef nextHandler, EventRef theEvent, void *data)
gui_mac_handle_window_activate	src/gui_mac.c	/^gui_mac_handle_window_activate($/;"	f	file:	signature:( EventHandlerCallRef nextHandler, EventRef theEvent, void *data)
gui_mac_handle_window_activate	src/gui_mac.c	/^static pascal OSStatus gui_mac_handle_window_activate($/;"	p	file:	signature:( EventHandlerCallRef nextHandler, EventRef theEvent, void *data)
gui_mac_mouse_wheel	src/gui_mac.c	/^gui_mac_mouse_wheel(EventHandlerCallRef nextHandler, EventRef theEvent,$/;"	f	file:	signature:(EventHandlerCallRef nextHandler, EventRef theEvent, void *data)
gui_mac_scroll_action	src/gui_mac.c	/^gui_mac_scroll_action(ControlHandle theControl, short partCode)$/;"	f	signature:(ControlHandle theControl, short partCode)
gui_mac_select_font	src/gui_mac.c	/^gui_mac_select_font(char_u *font_name)$/;"	f	file:	signature:(char_u *font_name)
gui_mac_set_font_attributes	src/gui_mac.c	/^gui_mac_set_font_attributes(GuiFont font)$/;"	f	file:	signature:(GuiFont font)
gui_mac_set_font_attributes	src/gui_mac.c	/^static void gui_mac_set_font_attributes(GuiFont font);$/;"	p	file:	signature:(GuiFont font)
gui_mac_unicode_key_event	src/gui_mac.c	/^gui_mac_unicode_key_event($/;"	f	file:	signature:( EventHandlerCallRef nextHandler, EventRef theEvent)
gui_mac_unicode_key_event	src/gui_mac.c	/^static pascal OSStatus gui_mac_unicode_key_event($/;"	p	file:	signature:( EventHandlerCallRef nextHandler, EventRef theEvent)
gui_mac_update_input_area	src/gui_mac.c	/^OSStatus gui_mac_update_input_area($/;"	f	file:	signature:( EventHandlerCallRef nextHandler, EventRef theEvent)
gui_mac_update_input_area	src/gui_mac.c	/^static pascal OSStatus gui_mac_update_input_area($/;"	p	file:	signature:( EventHandlerCallRef nextHandler, EventRef theEvent)
gui_make_popup	src/gui_gtk.c	/^gui_make_popup(char_u *path_name, int mouse_pos)$/;"	f	signature:(char_u *path_name, int mouse_pos)
gui_make_popup	src/gui_w16.c	/^gui_make_popup(char_u *path_name, int mouse_pos)$/;"	f	signature:(char_u *path_name, int mouse_pos)
gui_make_popup	src/gui_w32.c	/^gui_make_popup(char_u *path_name, int mouse_pos)$/;"	f	signature:(char_u *path_name, int mouse_pos)
gui_make_tearoff	src/gui_w32.c	/^gui_make_tearoff(char_u *path_name)$/;"	f	signature:(char_u *path_name)
gui_may_resize_shell	src/gui.c	/^gui_may_resize_shell()$/;"	f
gui_may_update_scrollbars	src/gui.c	/^gui_may_update_scrollbars()$/;"	f
gui_mch_activate_window	src/gui_w48.c	/^gui_mch_activate_window(void)$/;"	f	signature:(void)
gui_mch_add_menu	src/gui_athena.c	/^gui_mch_add_menu(menu, idx)$/;"	f
gui_mch_add_menu	src/gui_gtk.c	/^gui_mch_add_menu(vimmenu_T *menu, int idx)$/;"	f	signature:(vimmenu_T *menu, int idx)
gui_mch_add_menu	src/gui_mac.c	/^gui_mch_add_menu(vimmenu_T *menu, int idx)$/;"	f	signature:(vimmenu_T *menu, int idx)
gui_mch_add_menu	src/gui_motif.c	/^gui_mch_add_menu(menu, idx)$/;"	f
gui_mch_add_menu	src/gui_photon.c	/^gui_mch_add_menu(vimmenu_T *menu, int index)$/;"	f	signature:(vimmenu_T *menu, int index)
gui_mch_add_menu	src/gui_riscos.c	/^gui_mch_add_menu(vimmenu_T *menu, int idx)$/;"	f	signature:(vimmenu_T *menu, int idx)
gui_mch_add_menu	src/gui_w16.c	/^gui_mch_add_menu($/;"	f	signature:( vimmenu_T *menu, int pos)
gui_mch_add_menu	src/gui_w32.c	/^gui_mch_add_menu($/;"	f	signature:( vimmenu_T *menu, int pos)
gui_mch_add_menu_item	src/gui_athena.c	/^gui_mch_add_menu_item(menu, idx)$/;"	f
gui_mch_add_menu_item	src/gui_gtk.c	/^gui_mch_add_menu_item(vimmenu_T *menu, int idx)$/;"	f	signature:(vimmenu_T *menu, int idx)
gui_mch_add_menu_item	src/gui_mac.c	/^gui_mch_add_menu_item(vimmenu_T *menu, int idx)$/;"	f	signature:(vimmenu_T *menu, int idx)
gui_mch_add_menu_item	src/gui_motif.c	/^gui_mch_add_menu_item(menu, idx)$/;"	f
gui_mch_add_menu_item	src/gui_photon.c	/^gui_mch_add_menu_item(vimmenu_T *menu, int index)$/;"	f	signature:(vimmenu_T *menu, int index)
gui_mch_add_menu_item	src/gui_riscos.c	/^gui_mch_add_menu_item(vimmenu_T *menu, int idx)$/;"	f	signature:(vimmenu_T *menu, int idx)
gui_mch_add_menu_item	src/gui_w16.c	/^gui_mch_add_menu_item($/;"	f	signature:( vimmenu_T *menu, int idx)
gui_mch_add_menu_item	src/gui_w32.c	/^gui_mch_add_menu_item($/;"	f	signature:( vimmenu_T *menu, int idx)
gui_mch_adjust_charheight	src/gui_gtk_x11.c	/^gui_mch_adjust_charheight(void)$/;"	f	signature:(void)
gui_mch_adjust_charheight	src/gui_mac.c	/^gui_mch_adjust_charheight(void)$/;"	f	signature:(void)
gui_mch_adjust_charheight	src/gui_photon.c	/^gui_mch_adjust_charheight(void)$/;"	f	signature:(void)
gui_mch_adjust_charheight	src/gui_riscos.c	/^gui_mch_adjust_charheight()$/;"	f
gui_mch_adjust_charheight	src/gui_w48.c	/^gui_mch_adjust_charheight(void)$/;"	f	signature:(void)
gui_mch_adjust_charheight	src/gui_x11.c	/^gui_mch_adjust_charheight()$/;"	f
gui_mch_beep	src/gui_gtk_x11.c	/^gui_mch_beep(void)$/;"	f	signature:(void)
gui_mch_beep	src/gui_mac.c	/^gui_mch_beep(void)$/;"	f	signature:(void)
gui_mch_beep	src/gui_photon.c	/^gui_mch_beep(void)$/;"	f	signature:(void)
gui_mch_beep	src/gui_riscos.c	/^gui_mch_beep(void)$/;"	f	signature:(void)
gui_mch_beep	src/gui_w48.c	/^gui_mch_beep(void)$/;"	f	signature:(void)
gui_mch_beep	src/gui_x11.c	/^gui_mch_beep()$/;"	f
gui_mch_browse	src/gui_athena.c	/^gui_mch_browse(saving, title, dflt, ext, initdir, filter)$/;"	f
gui_mch_browse	src/gui_gtk.c	/^gui_mch_browse(int saving UNUSED,$/;"	f	signature:(int saving UNUSED, char_u *title, char_u *dflt, char_u *ext UNUSED, char_u *initdir, char_u *filter UNUSED)
gui_mch_browse	src/gui_mac.c	/^gui_mch_browse($/;"	f	signature:( int saving, char_u *title, char_u *dflt, char_u *ext, char_u *initdir, char_u *filter)
gui_mch_browse	src/gui_motif.c	/^gui_mch_browse(saving, title, dflt, ext, initdir, filter)$/;"	f
gui_mch_browse	src/gui_photon.c	/^gui_mch_browse($/;"	f	signature:( int saving, char_u *title, char_u *default_name, char_u *ext, char_u *initdir, char_u *filter)
gui_mch_browse	src/gui_riscos.c	/^gui_mch_browse(saving, title, dflt, ext, initdir, filter)$/;"	f
gui_mch_browse	src/gui_w48.c	/^gui_mch_browse($/;"	f	signature:( int saving, char_u *title, char_u *dflt, char_u *ext, char_u *initdir, char_u *filter)
gui_mch_browseW	src/gui_w48.c	/^gui_mch_browseW($/;"	f	file:	signature:( int saving, char_u *title, char_u *dflt, char_u *ext, char_u *initdir, char_u *filter)
gui_mch_browsedir	src/gui_gtk.c	/^gui_mch_browsedir($/;"	f	signature:( char_u *title, char_u *initdir)
gui_mch_browsedir	src/gui_w48.c	/^gui_mch_browsedir(char_u *title, char_u *initdir)$/;"	f	signature:(char_u *title, char_u *initdir)
gui_mch_call_shell	src/gui_riscos.c	/^gui_mch_call_shell(cmd, options)$/;"	f
gui_mch_clear_all	src/gui_gtk_x11.c	/^gui_mch_clear_all(void)$/;"	f	signature:(void)
gui_mch_clear_all	src/gui_mac.c	/^gui_mch_clear_all(void)$/;"	f	signature:(void)
gui_mch_clear_all	src/gui_photon.c	/^gui_mch_clear_all()$/;"	f
gui_mch_clear_all	src/gui_riscos.c	/^gui_mch_clear_all(void)$/;"	f	signature:(void)
gui_mch_clear_all	src/gui_w48.c	/^gui_mch_clear_all(void)$/;"	f	signature:(void)
gui_mch_clear_all	src/gui_x11.c	/^gui_mch_clear_all()$/;"	f
gui_mch_clear_block	src/gui_gtk_x11.c	/^gui_mch_clear_block(int row1, int col1, int row2, int col2)$/;"	f	signature:(int row1, int col1, int row2, int col2)
gui_mch_clear_block	src/gui_mac.c	/^gui_mch_clear_block(int row1, int col1, int row2, int col2)$/;"	f	signature:(int row1, int col1, int row2, int col2)
gui_mch_clear_block	src/gui_photon.c	/^gui_mch_clear_block(int row1, int col1, int row2, int col2)$/;"	f	signature:(int row1, int col1, int row2, int col2)
gui_mch_clear_block	src/gui_riscos.c	/^gui_mch_clear_block(int row1, int col1, int row2, int col2)$/;"	f	signature:(int row1, int col1, int row2, int col2)
gui_mch_clear_block	src/gui_w48.c	/^gui_mch_clear_block($/;"	f	signature:( int row1, int col1, int row2, int col2)
gui_mch_clear_block	src/gui_x11.c	/^gui_mch_clear_block(row1, col1, row2, col2)$/;"	f
gui_mch_compute_footer_height	src/gui_motif.c	/^gui_mch_compute_footer_height()$/;"	f	file:
gui_mch_compute_footer_height	src/gui_motif.c	/^static int gui_mch_compute_footer_height __ARGS((void));$/;"	p	file:	signature:(void)
gui_mch_compute_menu_height	src/gui_motif.c	/^gui_mch_compute_menu_height(id)$/;"	f
gui_mch_compute_toolbar_height	src/gui_athena.c	/^gui_mch_compute_toolbar_height()$/;"	f
gui_mch_compute_toolbar_height	src/gui_motif.c	/^gui_mch_compute_toolbar_height()$/;"	f
gui_mch_create_beval_area	src/gui_beval.c	/^gui_mch_create_beval_area(target, mesg, mesgCB, clientData)$/;"	f
gui_mch_create_beval_area	src/gui_w32.c	/^gui_mch_create_beval_area(target, mesg, mesgCB, clientData)$/;"	f
gui_mch_create_scrollbar	src/gui_athena.c	/^gui_mch_create_scrollbar(sb, orient)$/;"	f
gui_mch_create_scrollbar	src/gui_gtk.c	/^gui_mch_create_scrollbar(scrollbar_T *sb, int orient)$/;"	f	signature:(scrollbar_T *sb, int orient)
gui_mch_create_scrollbar	src/gui_mac.c	/^gui_mch_create_scrollbar($/;"	f	signature:( scrollbar_T *sb, int orient)
gui_mch_create_scrollbar	src/gui_motif.c	/^gui_mch_create_scrollbar(sb, orient)$/;"	f
gui_mch_create_scrollbar	src/gui_photon.c	/^gui_mch_create_scrollbar(scrollbar_T *sb, int orient)$/;"	f	signature:(scrollbar_T *sb, int orient)
gui_mch_create_scrollbar	src/gui_riscos.c	/^gui_mch_create_scrollbar(sb, orient)$/;"	f
gui_mch_create_scrollbar	src/gui_w48.c	/^gui_mch_create_scrollbar($/;"	f	signature:( scrollbar_T *sb, int orient)
gui_mch_currently_showing_beval	src/gui_beval.c	/^gui_mch_currently_showing_beval()$/;"	f
gui_mch_def_colors	src/gui_athena.c	/^gui_mch_def_colors()$/;"	f
gui_mch_def_colors	src/gui_motif.c	/^gui_mch_def_colors()$/;"	f
gui_mch_def_colors	src/gui_w48.c	/^gui_mch_def_colors()$/;"	f
gui_mch_delete_lines	src/gui_gtk_x11.c	/^gui_mch_delete_lines(int row, int num_lines)$/;"	f	signature:(int row, int num_lines)
gui_mch_delete_lines	src/gui_mac.c	/^gui_mch_delete_lines(int row, int num_lines)$/;"	f	signature:(int row, int num_lines)
gui_mch_delete_lines	src/gui_photon.c	/^gui_mch_delete_lines(int row, int num_lines)$/;"	f	signature:(int row, int num_lines)
gui_mch_delete_lines	src/gui_riscos.c	/^gui_mch_delete_lines(int row, int num_lines)$/;"	f	signature:(int row, int num_lines)
gui_mch_delete_lines	src/gui_w48.c	/^gui_mch_delete_lines($/;"	f	signature:( int row, int num_lines)
gui_mch_delete_lines	src/gui_x11.c	/^gui_mch_delete_lines(row, num_lines)$/;"	f
gui_mch_destroy_beval_area	src/gui_beval.c	/^gui_mch_destroy_beval_area(beval)$/;"	f
gui_mch_destroy_beval_area	src/gui_w32.c	/^gui_mch_destroy_beval_area(beval)$/;"	f
gui_mch_destroy_menu	src/gui_athena.c	/^gui_mch_destroy_menu(menu)$/;"	f
gui_mch_destroy_menu	src/gui_gtk.c	/^gui_mch_destroy_menu(vimmenu_T *menu)$/;"	f	signature:(vimmenu_T *menu)
gui_mch_destroy_menu	src/gui_mac.c	/^gui_mch_destroy_menu(vimmenu_T *menu)$/;"	f	signature:(vimmenu_T *menu)
gui_mch_destroy_menu	src/gui_motif.c	/^gui_mch_destroy_menu(menu)$/;"	f
gui_mch_destroy_menu	src/gui_photon.c	/^gui_mch_destroy_menu(vimmenu_T *menu)$/;"	f	signature:(vimmenu_T *menu)
gui_mch_destroy_menu	src/gui_riscos.c	/^gui_mch_destroy_menu(vimmenu_T *menu)$/;"	f	signature:(vimmenu_T *menu)
gui_mch_destroy_menu	src/gui_w16.c	/^gui_mch_destroy_menu(vimmenu_T *menu)$/;"	f	signature:(vimmenu_T *menu)
gui_mch_destroy_menu	src/gui_w32.c	/^gui_mch_destroy_menu(vimmenu_T *menu)$/;"	f	signature:(vimmenu_T *menu)
gui_mch_destroy_scrollbar	src/gui_athena.c	/^gui_mch_destroy_scrollbar(sb)$/;"	f
gui_mch_destroy_scrollbar	src/gui_gtk.c	/^gui_mch_destroy_scrollbar(scrollbar_T *sb)$/;"	f	signature:(scrollbar_T *sb)
gui_mch_destroy_scrollbar	src/gui_mac.c	/^gui_mch_destroy_scrollbar(scrollbar_T *sb)$/;"	f	signature:(scrollbar_T *sb)
gui_mch_destroy_scrollbar	src/gui_motif.c	/^gui_mch_destroy_scrollbar(sb)$/;"	f
gui_mch_destroy_scrollbar	src/gui_photon.c	/^gui_mch_destroy_scrollbar(scrollbar_T *sb)$/;"	f	signature:(scrollbar_T *sb)
gui_mch_destroy_scrollbar	src/gui_riscos.c	/^gui_mch_destroy_scrollbar(scrollbar_T *sb)$/;"	f	signature:(scrollbar_T *sb)
gui_mch_destroy_scrollbar	src/gui_w48.c	/^gui_mch_destroy_scrollbar(scrollbar_T *sb)$/;"	f	signature:(scrollbar_T *sb)
gui_mch_destroy_sign	src/gui_gtk_x11.c	/^gui_mch_destroy_sign(void *sign)$/;"	f	signature:(void *sign)
gui_mch_destroy_sign	src/gui_w32.c	/^gui_mch_destroy_sign(sign)$/;"	f
gui_mch_destroy_sign	src/gui_x11.c	/^gui_mch_destroy_sign(sign)$/;"	f
gui_mch_dialog	src/gui_athena.c	/^gui_mch_dialog(type, title, message, buttons, dfltbutton, textfield)$/;"	f
gui_mch_dialog	src/gui_gtk.c	/^gui_mch_dialog(int	type,	    \/* type of dialog *\/$/;"	f	signature:(int type, char_u *title, char_u *message, char_u *buttons, int def_but, char_u *textfield)
gui_mch_dialog	src/gui_mac.c	/^gui_mch_dialog($/;"	f	signature:( int type, char_u *title, char_u *message, char_u *buttons, int dfltbutton, char_u *textfield)
gui_mch_dialog	src/gui_motif.c	/^gui_mch_dialog(type, title, message, button_names, dfltbutton, textfield)$/;"	f
gui_mch_dialog	src/gui_photon.c	/^gui_mch_dialog($/;"	f	signature:( int type, char_u *title, char_u *message, char_u *buttons, int default_button, char_u *textfield)
gui_mch_dialog	src/gui_w16.c	/^gui_mch_dialog($/;"	f	signature:( int type, char_u *title, char_u *message, char_u *buttons, int dfltbutton, char_u *textfield)
gui_mch_dialog	src/gui_w32.c	/^gui_mch_dialog($/;"	f	signature:( int type, char_u *title, char_u *message, char_u *buttons, int dfltbutton, char_u *textfield)
gui_mch_disable_beval_area	src/gui_beval.c	/^gui_mch_disable_beval_area(beval)$/;"	f
gui_mch_disable_beval_area	src/gui_w32.c	/^gui_mch_disable_beval_area(beval)$/;"	f
gui_mch_draw_hollow_cursor	src/gui_gtk_x11.c	/^gui_mch_draw_hollow_cursor(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_draw_hollow_cursor	src/gui_mac.c	/^gui_mch_draw_hollow_cursor(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_draw_hollow_cursor	src/gui_photon.c	/^gui_mch_draw_hollow_cursor(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_draw_hollow_cursor	src/gui_riscos.c	/^gui_mch_draw_hollow_cursor(guicolor_T colour)$/;"	f	signature:(guicolor_T colour)
gui_mch_draw_hollow_cursor	src/gui_w48.c	/^gui_mch_draw_hollow_cursor(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_draw_hollow_cursor	src/gui_x11.c	/^gui_mch_draw_hollow_cursor(color)$/;"	f
gui_mch_draw_menubar	src/gui_gtk_x11.c	/^gui_mch_draw_menubar(void)$/;"	f	signature:(void)
gui_mch_draw_menubar	src/gui_mac.c	/^gui_mch_draw_menubar(void)$/;"	f	signature:(void)
gui_mch_draw_menubar	src/gui_photon.c	/^gui_mch_draw_menubar(void)$/;"	f	signature:(void)
gui_mch_draw_menubar	src/gui_riscos.c	/^gui_mch_draw_menubar(void)$/;"	f	signature:(void)
gui_mch_draw_menubar	src/gui_w48.c	/^gui_mch_draw_menubar(void)$/;"	f	signature:(void)
gui_mch_draw_menubar	src/gui_x11.c	/^gui_mch_draw_menubar()$/;"	f
gui_mch_draw_part_cursor	src/gui_gtk_x11.c	/^gui_mch_draw_part_cursor(int w, int h, guicolor_T color)$/;"	f	signature:(int w, int h, guicolor_T color)
gui_mch_draw_part_cursor	src/gui_mac.c	/^gui_mch_draw_part_cursor(int w, int h, guicolor_T color)$/;"	f	signature:(int w, int h, guicolor_T color)
gui_mch_draw_part_cursor	src/gui_photon.c	/^gui_mch_draw_part_cursor(int w, int h, guicolor_T color)$/;"	f	signature:(int w, int h, guicolor_T color)
gui_mch_draw_part_cursor	src/gui_riscos.c	/^gui_mch_draw_part_cursor(w, h, colour)$/;"	f
gui_mch_draw_part_cursor	src/gui_w48.c	/^gui_mch_draw_part_cursor($/;"	f	signature:( int w, int h, guicolor_T color)
gui_mch_draw_part_cursor	src/gui_x11.c	/^gui_mch_draw_part_cursor(w, h, color)$/;"	f
gui_mch_draw_string	src/gui_mac.c	/^gui_mch_draw_string(int row, int col, char_u *s, int len, int flags)$/;"	f	signature:(int row, int col, char_u *s, int len, int flags)
gui_mch_draw_string	src/gui_photon.c	/^gui_mch_draw_string(int row, int col, char_u *s, int len, int flags)$/;"	f	signature:(int row, int col, char_u *s, int len, int flags)
gui_mch_draw_string	src/gui_riscos.c	/^gui_mch_draw_string(int row, int col, char_u *s, int len, int flags)$/;"	f	signature:(int row, int col, char_u *s, int len, int flags)
gui_mch_draw_string	src/gui_w16.c	/^gui_mch_draw_string($/;"	f	signature:( int row, int col, char_u *text, int len, int flags)
gui_mch_draw_string	src/gui_w32.c	/^gui_mch_draw_string($/;"	f	signature:( int row, int col, char_u *text, int len, int flags)
gui_mch_draw_string	src/gui_x11.c	/^gui_mch_draw_string(row, col, s, len, flags)$/;"	f
gui_mch_drawsign	src/gui_gtk_x11.c	/^gui_mch_drawsign(int row, int col, int typenr)$/;"	f	signature:(int row, int col, int typenr)
gui_mch_drawsign	src/gui_w32.c	/^gui_mch_drawsign(row, col, typenr)$/;"	f
gui_mch_drawsign	src/gui_x11.c	/^gui_mch_drawsign(row, col, typenr)$/;"	f
gui_mch_enable_beval_area	src/gui_beval.c	/^gui_mch_enable_beval_area(beval)$/;"	f
gui_mch_enable_beval_area	src/gui_w32.c	/^gui_mch_enable_beval_area(beval)$/;"	f
gui_mch_enable_footer	src/gui_motif.c	/^gui_mch_enable_footer(showit)$/;"	f
gui_mch_enable_menu	src/gui_athena.c	/^gui_mch_enable_menu(flag)$/;"	f
gui_mch_enable_menu	src/gui_gtk_x11.c	/^gui_mch_enable_menu(int showit)$/;"	f	signature:(int showit)
gui_mch_enable_menu	src/gui_mac.c	/^gui_mch_enable_menu(int flag)$/;"	f	signature:(int flag)
gui_mch_enable_menu	src/gui_motif.c	/^gui_mch_enable_menu(flag)$/;"	f
gui_mch_enable_menu	src/gui_photon.c	/^gui_mch_enable_menu(int flag)$/;"	f	signature:(int flag)
gui_mch_enable_menu	src/gui_riscos.c	/^gui_mch_enable_menu(int flag)$/;"	f	signature:(int flag)
gui_mch_enable_menu	src/gui_w48.c	/^gui_mch_enable_menu(int flag)$/;"	f	signature:(int flag)
gui_mch_enable_scrollbar	src/gui_athena.c	/^gui_mch_enable_scrollbar(sb, flag)$/;"	f
gui_mch_enable_scrollbar	src/gui_gtk_x11.c	/^gui_mch_enable_scrollbar(scrollbar_T *sb, int flag)$/;"	f	signature:(scrollbar_T *sb, int flag)
gui_mch_enable_scrollbar	src/gui_mac.c	/^gui_mch_enable_scrollbar($/;"	f	signature:( scrollbar_T *sb, int flag)
gui_mch_enable_scrollbar	src/gui_motif.c	/^gui_mch_enable_scrollbar(sb, flag)$/;"	f
gui_mch_enable_scrollbar	src/gui_photon.c	/^gui_mch_enable_scrollbar(scrollbar_T *sb, int flag)$/;"	f	signature:(scrollbar_T *sb, int flag)
gui_mch_enable_scrollbar	src/gui_riscos.c	/^gui_mch_enable_scrollbar(sb, flag)$/;"	f
gui_mch_enable_scrollbar	src/gui_w48.c	/^gui_mch_enable_scrollbar($/;"	f	signature:( scrollbar_T *sb, int flag)
gui_mch_exit	src/gui_gtk_x11.c	/^gui_mch_exit(int rc UNUSED)$/;"	f	signature:(int rc UNUSED)
gui_mch_exit	src/gui_mac.c	/^gui_mch_exit(int rc)$/;"	f	signature:(int rc)
gui_mch_exit	src/gui_photon.c	/^gui_mch_exit(int rc)$/;"	f	signature:(int rc)
gui_mch_exit	src/gui_riscos.c	/^gui_mch_exit(int rc)$/;"	f	signature:(int rc)
gui_mch_exit	src/gui_w48.c	/^gui_mch_exit(int rc)$/;"	f	signature:(int rc)
gui_mch_exit	src/gui_x11.c	/^gui_mch_exit(rc)$/;"	f
gui_mch_find_dialog	src/ex_docmd.c	229;"	d	file:
gui_mch_find_dialog	src/gui_gtk.c	/^gui_mch_find_dialog(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
gui_mch_find_dialog	src/gui_motif.c	/^gui_mch_find_dialog(eap)$/;"	f
gui_mch_find_dialog	src/gui_w48.c	/^gui_mch_find_dialog(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
gui_mch_flash	src/gui_gtk_x11.c	/^gui_mch_flash(int msec)$/;"	f	signature:(int msec)
gui_mch_flash	src/gui_mac.c	/^gui_mch_flash(int msec)$/;"	f	signature:(int msec)
gui_mch_flash	src/gui_photon.c	/^gui_mch_flash(int msec)$/;"	f	signature:(int msec)
gui_mch_flash	src/gui_riscos.c	/^gui_mch_flash(int msec)$/;"	f	signature:(int msec)
gui_mch_flash	src/gui_w48.c	/^gui_mch_flash(int msec)$/;"	f	signature:(int msec)
gui_mch_flash	src/gui_x11.c	/^gui_mch_flash(msec)$/;"	f
gui_mch_flush	src/gui_gtk_x11.c	/^gui_mch_flush(void)$/;"	f	signature:(void)
gui_mch_flush	src/gui_mac.c	/^gui_mch_flush(void)$/;"	f	signature:(void)
gui_mch_flush	src/gui_photon.c	/^gui_mch_flush(void)$/;"	f	signature:(void)
gui_mch_flush	src/gui_riscos.c	/^gui_mch_flush(void)$/;"	f	signature:(void)
gui_mch_flush	src/gui_w16.c	/^gui_mch_flush(void)$/;"	f	signature:(void)
gui_mch_flush	src/gui_w32.c	/^gui_mch_flush(void)$/;"	f	signature:(void)
gui_mch_flush	src/gui_x11.c	/^gui_mch_flush()$/;"	f
gui_mch_font_dialog	src/gui_gtk_x11.c	/^gui_mch_font_dialog(char_u *oldval)$/;"	f	signature:(char_u *oldval)
gui_mch_forked	src/gui_gtk_x11.c	/^gui_mch_forked(void)$/;"	f	signature:(void)
gui_mch_free_all	src/gui_gtk_x11.c	/^gui_mch_free_all()$/;"	f
gui_mch_free_font	src/gui_gtk_x11.c	/^gui_mch_free_font(GuiFont font)$/;"	f	signature:(GuiFont font)
gui_mch_free_font	src/gui_mac.c	/^gui_mch_free_font(font)$/;"	f
gui_mch_free_font	src/gui_photon.c	/^gui_mch_free_font(GuiFont font)$/;"	f	signature:(GuiFont font)
gui_mch_free_font	src/gui_riscos.c	/^gui_mch_free_font(GuiFont font)$/;"	f	signature:(GuiFont font)
gui_mch_free_font	src/gui_w48.c	/^gui_mch_free_font(GuiFont font)$/;"	f	signature:(GuiFont font)
gui_mch_free_font	src/gui_x11.c	/^gui_mch_free_font(font)$/;"	f
gui_mch_free_fontset	src/gui_x11.c	/^gui_mch_free_fontset(fontset)$/;"	f
gui_mch_get_color	src/gui_gtk_x11.c	/^gui_mch_get_color(char_u *name)$/;"	f	signature:(char_u *name)
gui_mch_get_color	src/gui_mac.c	/^gui_mch_get_color(char_u *name)$/;"	f	signature:(char_u *name)
gui_mch_get_color	src/gui_photon.c	/^gui_mch_get_color(char_u *name)$/;"	f	signature:(char_u *name)
gui_mch_get_color	src/gui_riscos.c	/^gui_mch_get_color(char_u *name)$/;"	f	signature:(char_u *name)
gui_mch_get_color	src/gui_w48.c	/^gui_mch_get_color(char_u *name)$/;"	f	signature:(char_u *name)
gui_mch_get_color	src/gui_x11.c	/^gui_mch_get_color(reqname)$/;"	f
gui_mch_get_display	src/gui_gtk_x11.c	/^gui_mch_get_display(void)$/;"	f	signature:(void)
gui_mch_get_font	src/gui_gtk_x11.c	/^gui_mch_get_font(char_u *name, int report_error)$/;"	f	signature:(char_u *name, int report_error)
gui_mch_get_font	src/gui_mac.c	/^gui_mch_get_font(char_u *name, int giveErrorIfMissing)$/;"	f	signature:(char_u *name, int giveErrorIfMissing)
gui_mch_get_font	src/gui_photon.c	/^gui_mch_get_font(char_u *vim_font_name, int report_error)$/;"	f	signature:(char_u *vim_font_name, int report_error)
gui_mch_get_font	src/gui_riscos.c	/^gui_mch_get_font(name, giveErrorIfMissing)$/;"	f
gui_mch_get_font	src/gui_w48.c	/^gui_mch_get_font($/;"	f	signature:( char_u *name, int giveErrorIfMissing)
gui_mch_get_font	src/gui_x11.c	/^gui_mch_get_font(name, giveErrorIfMissing)$/;"	f
gui_mch_get_fontname	src/gui_gtk_x11.c	/^gui_mch_get_fontname(GuiFont font, char_u *name UNUSED)$/;"	f	signature:(GuiFont font, char_u *name UNUSED)
gui_mch_get_fontname	src/gui_mac.c	/^gui_mch_get_fontname(GuiFont font, char_u *name)$/;"	f	signature:(GuiFont font, char_u *name)
gui_mch_get_fontname	src/gui_photon.c	/^gui_mch_get_fontname(font, name)$/;"	f
gui_mch_get_fontname	src/gui_riscos.c	/^gui_mch_get_fontname(font, name)$/;"	f
gui_mch_get_fontname	src/gui_w48.c	/^gui_mch_get_fontname(font, name)$/;"	f
gui_mch_get_fontname	src/gui_x11.c	/^gui_mch_get_fontname(font, name)$/;"	f
gui_mch_get_fontset	src/gui_x11.c	/^gui_mch_get_fontset(name, giveErrorIfMissing, fixed_width)$/;"	f
gui_mch_get_rgb	src/gui_gtk_x11.c	/^gui_mch_get_rgb(guicolor_T pixel)$/;"	f	signature:(guicolor_T pixel)
gui_mch_get_rgb	src/gui_mac.c	/^gui_mch_get_rgb(guicolor_T pixel)$/;"	f	signature:(guicolor_T pixel)
gui_mch_get_rgb	src/gui_photon.c	/^gui_mch_get_rgb(guicolor_T pixel)$/;"	f	signature:(guicolor_T pixel)
gui_mch_get_rgb	src/gui_riscos.c	/^gui_mch_get_rgb(guicolor_T pixel)$/;"	f	signature:(guicolor_T pixel)
gui_mch_get_rgb	src/gui_w48.c	/^gui_mch_get_rgb(guicolor_T pixel)$/;"	f	signature:(guicolor_T pixel)
gui_mch_get_rgb	src/gui_x11.c	/^gui_mch_get_rgb(pixel)$/;"	f
gui_mch_get_screen_dimensions	src/gui_gtk_x11.c	/^gui_mch_get_screen_dimensions(int *screen_w, int *screen_h)$/;"	f	signature:(int *screen_w, int *screen_h)
gui_mch_get_screen_dimensions	src/gui_mac.c	/^gui_mch_get_screen_dimensions(int *screen_w, int *screen_h)$/;"	f	signature:(int *screen_w, int *screen_h)
gui_mch_get_screen_dimensions	src/gui_photon.c	/^gui_mch_get_screen_dimensions(int *screen_w, int *screen_h)$/;"	f	signature:(int *screen_w, int *screen_h)
gui_mch_get_screen_dimensions	src/gui_riscos.c	/^gui_mch_get_screen_dimensions(int *screen_w, int *screen_h)$/;"	f	signature:(int *screen_w, int *screen_h)
gui_mch_get_screen_dimensions	src/gui_w16.c	/^gui_mch_get_screen_dimensions(int *screen_w, int *screen_h)$/;"	f	signature:(int *screen_w, int *screen_h)
gui_mch_get_screen_dimensions	src/gui_w32.c	/^gui_mch_get_screen_dimensions(int *screen_w, int *screen_h)$/;"	f	signature:(int *screen_w, int *screen_h)
gui_mch_get_screen_dimensions	src/gui_x11.c	/^gui_mch_get_screen_dimensions(screen_w, screen_h)$/;"	f
gui_mch_get_toolbar_colors	src/gui_athena.c	/^gui_mch_get_toolbar_colors(bgp, fgp, bsp, tsp, hsp)$/;"	f
gui_mch_get_winpos	src/gui_gtk_x11.c	/^gui_mch_get_winpos(int *x, int *y)$/;"	f	signature:(int *x, int *y)
gui_mch_get_winpos	src/gui_mac.c	/^gui_mch_get_winpos(int *x, int *y)$/;"	f	signature:(int *x, int *y)
gui_mch_get_winpos	src/gui_photon.c	/^gui_mch_get_winpos(int *x, int *y)$/;"	f	signature:(int *x, int *y)
gui_mch_get_winpos	src/gui_riscos.c	/^gui_mch_get_winpos(int *x, int *y)$/;"	f	signature:(int *x, int *y)
gui_mch_get_winpos	src/gui_w48.c	/^gui_mch_get_winpos(int *x, int *y)$/;"	f	signature:(int *x, int *y)
gui_mch_get_winpos	src/gui_x11.c	/^gui_mch_get_winpos(x, y)$/;"	f
gui_mch_getmouse	src/gui_gtk_x11.c	/^gui_mch_getmouse(int *x, int *y)$/;"	f	signature:(int *x, int *y)
gui_mch_getmouse	src/gui_mac.c	/^gui_mch_getmouse(int *x, int *y)$/;"	f	signature:(int *x, int *y)
gui_mch_getmouse	src/gui_photon.c	/^gui_mch_getmouse(int *x, int *y)$/;"	f	signature:(int *x, int *y)
gui_mch_getmouse	src/gui_riscos.c	/^gui_mch_getmouse(x, y)$/;"	f
gui_mch_getmouse	src/gui_w48.c	/^gui_mch_getmouse(int *x, int *y)$/;"	f	signature:(int *x, int *y)
gui_mch_getmouse	src/gui_x11.c	/^gui_mch_getmouse(int *x, int *y)$/;"	f	signature:(int *x, int *y)
gui_mch_haskey	src/gui_gtk_x11.c	/^gui_mch_haskey(char_u *name)$/;"	f	signature:(char_u *name)
gui_mch_haskey	src/gui_mac.c	/^gui_mch_haskey(char_u *name)$/;"	f	signature:(char_u *name)
gui_mch_haskey	src/gui_photon.c	/^gui_mch_haskey(char_u *name)$/;"	f	signature:(char_u *name)
gui_mch_haskey	src/gui_riscos.c	/^gui_mch_haskey(char_u *name)$/;"	f	signature:(char_u *name)
gui_mch_haskey	src/gui_w48.c	/^gui_mch_haskey(char_u *name)$/;"	f	signature:(char_u *name)
gui_mch_haskey	src/gui_x11.c	/^gui_mch_haskey(name)$/;"	f
gui_mch_iconify	src/gui_gtk_x11.c	/^gui_mch_iconify(void)$/;"	f	signature:(void)
gui_mch_iconify	src/gui_mac.c	/^gui_mch_iconify(void)$/;"	f	signature:(void)
gui_mch_iconify	src/gui_photon.c	/^gui_mch_iconify(void)$/;"	f	signature:(void)
gui_mch_iconify	src/gui_riscos.c	/^gui_mch_iconify(void)$/;"	f	signature:(void)
gui_mch_iconify	src/gui_w48.c	/^gui_mch_iconify(void)$/;"	f	signature:(void)
gui_mch_iconify	src/gui_x11.c	/^gui_mch_iconify()$/;"	f
gui_mch_init	src/gui_gtk_x11.c	/^gui_mch_init(void)$/;"	f	signature:(void)
gui_mch_init	src/gui_mac.c	/^gui_mch_init(void)$/;"	f	signature:(void)
gui_mch_init	src/gui_photon.c	/^gui_mch_init(void)$/;"	f	signature:(void)
gui_mch_init	src/gui_riscos.c	/^gui_mch_init()$/;"	f
gui_mch_init	src/gui_w16.c	/^gui_mch_init(void)$/;"	f	signature:(void)
gui_mch_init	src/gui_w32.c	/^gui_mch_init(void)$/;"	f	signature:(void)
gui_mch_init	src/gui_x11.c	/^gui_mch_init()$/;"	f
gui_mch_init_check	src/gui_gtk_x11.c	/^gui_mch_init_check(void)$/;"	f	signature:(void)
gui_mch_init_check	src/gui_mac.c	/^gui_mch_init_check(void)$/;"	f	signature:(void)
gui_mch_init_check	src/gui_photon.c	/^gui_mch_init_check(void)$/;"	f	signature:(void)
gui_mch_init_check	src/gui_riscos.c	/^gui_mch_init_check()$/;"	f
gui_mch_init_check	src/gui_x11.c	/^gui_mch_init_check()$/;"	f
gui_mch_init_font	src/gui_gtk_x11.c	/^gui_mch_init_font(char_u *font_name, int fontset UNUSED)$/;"	f	signature:(char_u *font_name, int fontset UNUSED)
gui_mch_init_font	src/gui_mac.c	/^gui_mch_init_font(char_u *font_name, int fontset)$/;"	f	signature:(char_u *font_name, int fontset)
gui_mch_init_font	src/gui_photon.c	/^gui_mch_init_font(char_u *vim_font_name, int fontset)$/;"	f	signature:(char_u *vim_font_name, int fontset)
gui_mch_init_font	src/gui_riscos.c	/^gui_mch_init_font(char_u *font_name, int fontset)$/;"	f	signature:(char_u *font_name, int fontset)
gui_mch_init_font	src/gui_w48.c	/^gui_mch_init_font(char_u *font_name, int fontset)$/;"	f	signature:(char_u *font_name, int fontset)
gui_mch_init_font	src/gui_x11.c	/^gui_mch_init_font(font_name, do_fontset)$/;"	f
gui_mch_insert_lines	src/gui_gtk_x11.c	/^gui_mch_insert_lines(int row, int num_lines)$/;"	f	signature:(int row, int num_lines)
gui_mch_insert_lines	src/gui_mac.c	/^gui_mch_insert_lines(int row, int num_lines)$/;"	f	signature:(int row, int num_lines)
gui_mch_insert_lines	src/gui_photon.c	/^gui_mch_insert_lines(int row, int num_lines)$/;"	f	signature:(int row, int num_lines)
gui_mch_insert_lines	src/gui_riscos.c	/^gui_mch_insert_lines(int row, int num_lines)$/;"	f	signature:(int row, int num_lines)
gui_mch_insert_lines	src/gui_w48.c	/^gui_mch_insert_lines($/;"	f	signature:( int row, int num_lines)
gui_mch_insert_lines	src/gui_x11.c	/^gui_mch_insert_lines(row, num_lines)$/;"	f
gui_mch_invert_rectangle	src/gui_gtk_x11.c	/^gui_mch_invert_rectangle(int r, int c, int nr, int nc)$/;"	f	signature:(int r, int c, int nr, int nc)
gui_mch_invert_rectangle	src/gui_mac.c	/^gui_mch_invert_rectangle(int r, int c, int nr, int nc)$/;"	f	signature:(int r, int c, int nr, int nc)
gui_mch_invert_rectangle	src/gui_photon.c	/^gui_mch_invert_rectangle(int row, int col, int nr, int nc)$/;"	f	signature:(int row, int col, int nr, int nc)
gui_mch_invert_rectangle	src/gui_riscos.c	/^gui_mch_invert_rectangle(int r, int c, int nr, int nc)$/;"	f	signature:(int r, int c, int nr, int nc)
gui_mch_invert_rectangle	src/gui_w48.c	/^gui_mch_invert_rectangle($/;"	f	signature:( int r, int c, int nr, int nc)
gui_mch_invert_rectangle	src/gui_x11.c	/^gui_mch_invert_rectangle(r, c, nr, nc)$/;"	f
gui_mch_maximized	src/gui_gtk_x11.c	/^gui_mch_maximized()$/;"	f
gui_mch_maximized	src/gui_w48.c	/^gui_mch_maximized()$/;"	f
gui_mch_menu_grey	src/gui_gtk_x11.c	/^gui_mch_menu_grey(vimmenu_T *menu, int grey)$/;"	f	signature:(vimmenu_T *menu, int grey)
gui_mch_menu_grey	src/gui_mac.c	/^gui_mch_menu_grey(vimmenu_T *menu, int grey)$/;"	f	signature:(vimmenu_T *menu, int grey)
gui_mch_menu_grey	src/gui_photon.c	/^gui_mch_menu_grey(vimmenu_T *menu, int grey)$/;"	f	signature:(vimmenu_T *menu, int grey)
gui_mch_menu_grey	src/gui_riscos.c	/^gui_mch_menu_grey(vimmenu_T *menu, int grey)$/;"	f	signature:(vimmenu_T *menu, int grey)
gui_mch_menu_grey	src/gui_w16.c	/^gui_mch_menu_grey($/;"	f	signature:( vimmenu_T *menu, int grey)
gui_mch_menu_grey	src/gui_w32.c	/^gui_mch_menu_grey($/;"	f	signature:( vimmenu_T *menu, int grey)
gui_mch_menu_grey	src/gui_x11.c	/^gui_mch_menu_grey(menu, grey)$/;"	f
gui_mch_menu_hidden	src/gui_gtk_x11.c	/^gui_mch_menu_hidden(vimmenu_T *menu, int hidden)$/;"	f	signature:(vimmenu_T *menu, int hidden)
gui_mch_menu_hidden	src/gui_mac.c	/^gui_mch_menu_hidden(vimmenu_T *menu, int hidden)$/;"	f	signature:(vimmenu_T *menu, int hidden)
gui_mch_menu_hidden	src/gui_photon.c	/^gui_mch_menu_hidden(vimmenu_T *menu, int hidden)$/;"	f	signature:(vimmenu_T *menu, int hidden)
gui_mch_menu_hidden	src/gui_riscos.c	/^gui_mch_menu_hidden(vimmenu_T *menu, int hidden)$/;"	f	signature:(vimmenu_T *menu, int hidden)
gui_mch_menu_hidden	src/gui_w48.c	/^gui_mch_menu_hidden($/;"	f	signature:( vimmenu_T *menu, int hidden)
gui_mch_menu_hidden	src/gui_x11.c	/^gui_mch_menu_hidden(menu, hidden)$/;"	f
gui_mch_menu_set_tip	src/gui_gtk.c	/^gui_mch_menu_set_tip(vimmenu_T *menu)$/;"	f	signature:(vimmenu_T *menu)
gui_mch_menu_set_tip	src/gui_x11.c	/^gui_mch_menu_set_tip(menu)$/;"	f
gui_mch_mousehide	src/gui_gtk_x11.c	/^gui_mch_mousehide(int hide)$/;"	f	signature:(int hide)
gui_mch_mousehide	src/gui_mac.c	/^gui_mch_mousehide(int hide)$/;"	f	signature:(int hide)
gui_mch_mousehide	src/gui_photon.c	/^gui_mch_mousehide(int hide)$/;"	f	signature:(int hide)
gui_mch_mousehide	src/gui_w48.c	/^gui_mch_mousehide(int hide)$/;"	f	signature:(int hide)
gui_mch_mousehide	src/gui_x11.c	/^gui_mch_mousehide(hide)$/;"	f
gui_mch_new_colors	src/gui_gtk_x11.c	/^gui_mch_new_colors(void)$/;"	f	signature:(void)
gui_mch_new_colors	src/gui_mac.c	/^gui_mch_new_colors(void)$/;"	f	signature:(void)
gui_mch_new_colors	src/gui_photon.c	/^gui_mch_new_colors(void)$/;"	f	signature:(void)
gui_mch_new_colors	src/gui_riscos.c	/^gui_mch_new_colors()$/;"	f
gui_mch_new_colors	src/gui_w48.c	/^gui_mch_new_colors(void)$/;"	f	signature:(void)
gui_mch_new_colors	src/gui_x11.c	/^gui_mch_new_colors()$/;"	f
gui_mch_new_menu_colors	src/gui_athena.c	/^gui_mch_new_menu_colors()$/;"	f
gui_mch_new_menu_colors	src/gui_motif.c	/^gui_mch_new_menu_colors()$/;"	f
gui_mch_new_menu_colors	src/gui_riscos.c	/^gui_mch_new_menu_colors(void)$/;"	f	signature:(void)
gui_mch_new_menu_font	src/gui_athena.c	/^gui_mch_new_menu_font()$/;"	f
gui_mch_new_menu_font	src/gui_motif.c	/^gui_mch_new_menu_font()$/;"	f
gui_mch_new_tooltip_colors	src/gui_athena.c	/^gui_mch_new_tooltip_colors()$/;"	f
gui_mch_new_tooltip_colors	src/gui_motif.c	/^gui_mch_new_tooltip_colors()$/;"	f
gui_mch_new_tooltip_font	src/gui_athena.c	/^gui_mch_new_tooltip_font()$/;"	f
gui_mch_new_tooltip_font	src/gui_motif.c	/^gui_mch_new_tooltip_font()$/;"	f
gui_mch_newfont	src/gui_w48.c	/^gui_mch_newfont()$/;"	f
gui_mch_open	src/gui_gtk_x11.c	/^gui_mch_open(void)$/;"	f	signature:(void)
gui_mch_open	src/gui_mac.c	/^gui_mch_open(void)$/;"	f	signature:(void)
gui_mch_open	src/gui_photon.c	/^gui_mch_open(void)$/;"	f	signature:(void)
gui_mch_open	src/gui_riscos.c	/^gui_mch_open(void)$/;"	f	signature:(void)
gui_mch_open	src/gui_w48.c	/^gui_mch_open(void)$/;"	f	signature:(void)
gui_mch_open	src/gui_x11.c	/^gui_mch_open()$/;"	f
gui_mch_post_balloon	src/gui_beval.c	/^gui_mch_post_balloon(beval, mesg)$/;"	f
gui_mch_post_balloon	src/gui_w32.c	/^gui_mch_post_balloon(beval, mesg)$/;"	f
gui_mch_prepare	src/gui_gtk_x11.c	/^gui_mch_prepare(int *argc, char **argv)$/;"	f	signature:(int *argc, char **argv)
gui_mch_prepare	src/gui_mac.c	/^gui_mch_prepare(int *argc, char **argv)$/;"	f	signature:(int *argc, char **argv)
gui_mch_prepare	src/gui_photon.c	/^gui_mch_prepare(argc, argv)$/;"	f
gui_mch_prepare	src/gui_riscos.c	/^gui_mch_prepare(int *argc, char **argv)$/;"	f	signature:(int *argc, char **argv)
gui_mch_prepare	src/gui_w16.c	/^gui_mch_prepare(int *argc, char **argv)$/;"	f	signature:(int *argc, char **argv)
gui_mch_prepare	src/gui_w32.c	/^gui_mch_prepare(int *argc, char **argv)$/;"	f	signature:(int *argc, char **argv)
gui_mch_prepare	src/gui_x11.c	/^gui_mch_prepare(argc, argv)$/;"	f
gui_mch_recurse_tearoffs	src/gui_motif.c	/^gui_mch_recurse_tearoffs(menu)$/;"	f	file:
gui_mch_recurse_tearoffs	src/gui_motif.c	/^static void gui_mch_recurse_tearoffs __ARGS((vimmenu_T *menu));$/;"	p	file:	signature:(vimmenu_T *menu)
gui_mch_register_sign	src/gui_gtk_x11.c	/^gui_mch_register_sign(char_u *signfile)$/;"	f	signature:(char_u *signfile)
gui_mch_register_sign	src/gui_w32.c	/^gui_mch_register_sign(signfile)$/;"	f
gui_mch_register_sign	src/gui_x11.c	/^gui_mch_register_sign(signfile)$/;"	f
gui_mch_replace_dialog	src/ex_docmd.c	230;"	d	file:
gui_mch_replace_dialog	src/gui_gtk.c	/^gui_mch_replace_dialog(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
gui_mch_replace_dialog	src/gui_motif.c	/^gui_mch_replace_dialog(eap)$/;"	f
gui_mch_replace_dialog	src/gui_w48.c	/^gui_mch_replace_dialog(exarg_T *eap)$/;"	f	signature:(exarg_T *eap)
gui_mch_reset_focus	src/gui_athena.c	/^gui_mch_reset_focus()$/;"	f	file:
gui_mch_reset_focus	src/gui_athena.c	/^static void gui_mch_reset_focus __ARGS((void));$/;"	p	file:	signature:(void)
gui_mch_set_bg_color	src/gui_gtk_x11.c	/^gui_mch_set_bg_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_bg_color	src/gui_mac.c	/^gui_mch_set_bg_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_bg_color	src/gui_photon.c	/^gui_mch_set_bg_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_bg_color	src/gui_w16.c	/^gui_mch_set_bg_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_bg_color	src/gui_w32.c	/^gui_mch_set_bg_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_bg_color	src/gui_x11.c	/^gui_mch_set_bg_color(color)$/;"	f
gui_mch_set_blinking	src/gui_gtk_x11.c	/^gui_mch_set_blinking(long waittime, long on, long off)$/;"	f	signature:(long waittime, long on, long off)
gui_mch_set_blinking	src/gui_mac.c	/^gui_mch_set_blinking(long wait, long on, long off)$/;"	f	signature:(long wait, long on, long off)
gui_mch_set_blinking	src/gui_photon.c	/^gui_mch_set_blinking(long wait, long on, long off)$/;"	f	signature:(long wait, long on, long off)
gui_mch_set_blinking	src/gui_riscos.c	/^gui_mch_set_blinking(long waittime, long on, long off)$/;"	f	signature:(long waittime, long on, long off)
gui_mch_set_blinking	src/gui_w48.c	/^gui_mch_set_blinking(long wait, long on, long off)$/;"	f	signature:(long wait, long on, long off)
gui_mch_set_blinking	src/gui_x11.c	/^gui_mch_set_blinking(waittime, on, off)$/;"	f
gui_mch_set_colors	src/gui_riscos.c	/^gui_mch_set_colors(guicolor_T fg, guicolor_T bg)$/;"	f	signature:(guicolor_T fg, guicolor_T bg)
gui_mch_set_curtab	src/gui_gtk_x11.c	/^gui_mch_set_curtab(nr)$/;"	f
gui_mch_set_curtab	src/gui_mac.c	/^gui_mch_set_curtab(nr)$/;"	f
gui_mch_set_curtab	src/gui_motif.c	/^gui_mch_set_curtab(nr)$/;"	f
gui_mch_set_curtab	src/gui_w48.c	/^gui_mch_set_curtab(nr)$/;"	f
gui_mch_set_fg_color	src/gui_gtk_x11.c	/^gui_mch_set_fg_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_fg_color	src/gui_mac.c	/^gui_mch_set_fg_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_fg_color	src/gui_photon.c	/^gui_mch_set_fg_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_fg_color	src/gui_w16.c	/^gui_mch_set_fg_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_fg_color	src/gui_w32.c	/^gui_mch_set_fg_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_fg_color	src/gui_x11.c	/^gui_mch_set_fg_color(color)$/;"	f
gui_mch_set_font	src/gui_mac.c	/^gui_mch_set_font(GuiFont font)$/;"	f	signature:(GuiFont font)
gui_mch_set_font	src/gui_photon.c	/^gui_mch_set_font(GuiFont font)$/;"	f	signature:(GuiFont font)
gui_mch_set_font	src/gui_riscos.c	/^gui_mch_set_font(GuiFont font)$/;"	f	signature:(GuiFont font)
gui_mch_set_font	src/gui_w16.c	/^gui_mch_set_font(GuiFont font)$/;"	f	signature:(GuiFont font)
gui_mch_set_font	src/gui_w32.c	/^gui_mch_set_font(GuiFont font)$/;"	f	signature:(GuiFont font)
gui_mch_set_font	src/gui_x11.c	/^gui_mch_set_font(font)$/;"	f
gui_mch_set_fontset	src/gui_x11.c	/^gui_mch_set_fontset(fontset)$/;"	f
gui_mch_set_footer	src/gui_motif.c	/^gui_mch_set_footer(s)$/;"	f
gui_mch_set_foreground	src/gui_gtk_x11.c	/^gui_mch_set_foreground(void)$/;"	f	signature:(void)
gui_mch_set_foreground	src/gui_mac.c	/^gui_mch_set_foreground(void)$/;"	f	signature:(void)
gui_mch_set_foreground	src/gui_photon.c	/^gui_mch_set_foreground()$/;"	f
gui_mch_set_foreground	src/gui_riscos.c	/^gui_mch_set_foreground()$/;"	f
gui_mch_set_foreground	src/gui_w16.c	/^gui_mch_set_foreground(void)$/;"	f	signature:(void)
gui_mch_set_foreground	src/gui_w32.c	/^gui_mch_set_foreground(void)$/;"	f	signature:(void)
gui_mch_set_foreground	src/gui_x11.c	/^gui_mch_set_foreground()$/;"	f
gui_mch_set_menu_pos	src/gui_athena.c	/^gui_mch_set_menu_pos(x, y, w, h)$/;"	f
gui_mch_set_menu_pos	src/gui_mac.c	/^gui_mch_set_menu_pos(int x, int y, int w, int h)$/;"	f	signature:(int x, int y, int w, int h)
gui_mch_set_menu_pos	src/gui_photon.c	/^gui_mch_set_menu_pos(int x, int y, int w, int h)$/;"	f	signature:(int x, int y, int w, int h)
gui_mch_set_menu_pos	src/gui_riscos.c	/^gui_mch_set_menu_pos(int x, int y, int w, int h)$/;"	f	signature:(int x, int y, int w, int h)
gui_mch_set_menu_pos	src/gui_w48.c	/^gui_mch_set_menu_pos($/;"	f	signature:( int x, int y, int w, int h)
gui_mch_set_parent	src/gui_w32.c	/^gui_mch_set_parent(char *title)$/;"	f	signature:(char *title)
gui_mch_set_scrollbar_colors	src/gui_athena.c	/^gui_mch_set_scrollbar_colors(sb)$/;"	f
gui_mch_set_scrollbar_colors	src/gui_motif.c	/^gui_mch_set_scrollbar_colors(sb)$/;"	f
gui_mch_set_scrollbar_colors	src/gui_riscos.c	/^gui_mch_set_scrollbar_colors(scrollbar_T *sb)$/;"	f	signature:(scrollbar_T *sb)
gui_mch_set_scrollbar_pos	src/gui_athena.c	/^gui_mch_set_scrollbar_pos(sb, x, y, w, h)$/;"	f
gui_mch_set_scrollbar_pos	src/gui_gtk.c	/^gui_mch_set_scrollbar_pos(scrollbar_T *sb, int x, int y, int w, int h)$/;"	f	signature:(scrollbar_T *sb, int x, int y, int w, int h)
gui_mch_set_scrollbar_pos	src/gui_mac.c	/^gui_mch_set_scrollbar_pos($/;"	f	signature:( scrollbar_T *sb, int x, int y, int w, int h)
gui_mch_set_scrollbar_pos	src/gui_motif.c	/^gui_mch_set_scrollbar_pos(sb, x, y, w, h)$/;"	f
gui_mch_set_scrollbar_pos	src/gui_photon.c	/^gui_mch_set_scrollbar_pos(scrollbar_T *sb, int x, int y, int w, int h)$/;"	f	signature:(scrollbar_T *sb, int x, int y, int w, int h)
gui_mch_set_scrollbar_pos	src/gui_riscos.c	/^gui_mch_set_scrollbar_pos(sb, x, y, w, h)$/;"	f
gui_mch_set_scrollbar_pos	src/gui_w48.c	/^gui_mch_set_scrollbar_pos($/;"	f	signature:( scrollbar_T *sb, int x, int y, int w, int h)
gui_mch_set_scrollbar_thumb	src/gui_athena.c	/^gui_mch_set_scrollbar_thumb(sb, val, size, max)$/;"	f
gui_mch_set_scrollbar_thumb	src/gui_gtk.c	/^gui_mch_set_scrollbar_thumb(scrollbar_T *sb, long val, long size, long max)$/;"	f	signature:(scrollbar_T *sb, long val, long size, long max)
gui_mch_set_scrollbar_thumb	src/gui_mac.c	/^gui_mch_set_scrollbar_thumb($/;"	f	signature:( scrollbar_T *sb, long val, long size, long max)
gui_mch_set_scrollbar_thumb	src/gui_motif.c	/^gui_mch_set_scrollbar_thumb(sb, val, size, max)$/;"	f
gui_mch_set_scrollbar_thumb	src/gui_photon.c	/^gui_mch_set_scrollbar_thumb(scrollbar_T *sb, int val, int size, int max)$/;"	f	signature:(scrollbar_T *sb, int val, int size, int max)
gui_mch_set_scrollbar_thumb	src/gui_riscos.c	/^gui_mch_set_scrollbar_thumb(sb, val, size, max)$/;"	f
gui_mch_set_scrollbar_thumb	src/gui_w16.c	/^gui_mch_set_scrollbar_thumb($/;"	f	signature:( scrollbar_T *sb, long val, long size, long max)
gui_mch_set_scrollbar_thumb	src/gui_w32.c	/^gui_mch_set_scrollbar_thumb($/;"	f	signature:( scrollbar_T *sb, long val, long size, long max)
gui_mch_set_shellsize	src/gui_gtk_x11.c	/^gui_mch_set_shellsize(int width, int height,$/;"	f	signature:(int width, int height, int min_width UNUSED, int min_height UNUSED, int base_width UNUSED, int base_height UNUSED, int direction UNUSED)
gui_mch_set_shellsize	src/gui_mac.c	/^gui_mch_set_shellsize($/;"	f	signature:( int width, int height, int min_width, int min_height, int base_width, int base_height, int direction)
gui_mch_set_shellsize	src/gui_photon.c	/^gui_mch_set_shellsize(int width, int height,$/;"	f	signature:(int width, int height, int min_width, int min_height, int base_width, int base_height, int direction)
gui_mch_set_shellsize	src/gui_riscos.c	/^gui_mch_set_shellsize(width, height, min_width, min_height, base_width, base_height, direction)$/;"	f
gui_mch_set_shellsize	src/gui_w16.c	/^gui_mch_set_shellsize(int width, int height,$/;"	f	signature:(int width, int height, int min_width, int min_height, int base_width, int base_height, int direction)
gui_mch_set_shellsize	src/gui_w32.c	/^gui_mch_set_shellsize(int width, int height,$/;"	f	signature:(int width, int height, int min_width, int min_height, int base_width, int base_height, int direction)
gui_mch_set_shellsize	src/gui_x11.c	/^gui_mch_set_shellsize(width, height, min_width, min_height,$/;"	f
gui_mch_set_sp_color	src/gui_gtk_x11.c	/^gui_mch_set_sp_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_sp_color	src/gui_mac.c	/^gui_mch_set_sp_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_sp_color	src/gui_photon.c	/^gui_mch_set_sp_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_sp_color	src/gui_w16.c	/^gui_mch_set_sp_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_sp_color	src/gui_w32.c	/^gui_mch_set_sp_color(guicolor_T color)$/;"	f	signature:(guicolor_T color)
gui_mch_set_sp_color	src/gui_x11.c	/^gui_mch_set_sp_color(color)$/;"	f
gui_mch_set_text_area_pos	src/gui_athena.c	/^gui_mch_set_text_area_pos(x, y, w, h)$/;"	f
gui_mch_set_text_area_pos	src/gui_gtk.c	/^gui_mch_set_text_area_pos(int x, int y, int w, int h)$/;"	f	signature:(int x, int y, int w, int h)
gui_mch_set_text_area_pos	src/gui_mac.c	/^gui_mch_set_text_area_pos(int x, int y, int w, int h)$/;"	f	signature:(int x, int y, int w, int h)
gui_mch_set_text_area_pos	src/gui_motif.c	/^gui_mch_set_text_area_pos(x, y, w, h)$/;"	f
gui_mch_set_text_area_pos	src/gui_photon.c	/^gui_mch_set_text_area_pos(int x, int y, int w, int h)$/;"	f	signature:(int x, int y, int w, int h)
gui_mch_set_text_area_pos	src/gui_riscos.c	/^gui_mch_set_text_area_pos(int x, int y, int w, int h)$/;"	f	signature:(int x, int y, int w, int h)
gui_mch_set_text_area_pos	src/gui_w48.c	/^gui_mch_set_text_area_pos(int x, int y, int w, int h)$/;"	f	signature:(int x, int y, int w, int h)
gui_mch_set_toolbar_pos	src/gui_athena.c	/^gui_mch_set_toolbar_pos(x, y, w, h)$/;"	f
gui_mch_set_winpos	src/gui_gtk_x11.c	/^gui_mch_set_winpos(int x, int y)$/;"	f	signature:(int x, int y)
gui_mch_set_winpos	src/gui_mac.c	/^gui_mch_set_winpos(int x, int y)$/;"	f	signature:(int x, int y)
gui_mch_set_winpos	src/gui_photon.c	/^gui_mch_set_winpos(int x, int y)$/;"	f	signature:(int x, int y)
gui_mch_set_winpos	src/gui_riscos.c	/^gui_mch_set_winpos(int x, int y)$/;"	f	signature:(int x, int y)
gui_mch_set_winpos	src/gui_w48.c	/^gui_mch_set_winpos(int x, int y)$/;"	f	signature:(int x, int y)
gui_mch_set_winpos	src/gui_x11.c	/^gui_mch_set_winpos(x, y)$/;"	f
gui_mch_setmouse	src/gui_gtk_x11.c	/^gui_mch_setmouse(int x, int y)$/;"	f	signature:(int x, int y)
gui_mch_setmouse	src/gui_mac.c	/^gui_mch_setmouse(int x, int y)$/;"	f	signature:(int x, int y)
gui_mch_setmouse	src/gui_photon.c	/^gui_mch_setmouse(int x, int y)$/;"	f	signature:(int x, int y)
gui_mch_setmouse	src/gui_riscos.c	/^gui_mch_setmouse(x, y)$/;"	f
gui_mch_setmouse	src/gui_w48.c	/^gui_mch_setmouse(int x, int y)$/;"	f	signature:(int x, int y)
gui_mch_setmouse	src/gui_x11.c	/^gui_mch_setmouse(x, y)$/;"	f
gui_mch_settitle	src/gui_gtk_x11.c	/^gui_mch_settitle(char_u *title, char_u *icon UNUSED)$/;"	f	signature:(char_u *title, char_u *icon UNUSED)
gui_mch_settitle	src/gui_mac.c	/^gui_mch_settitle(char_u *title, char_u *icon)$/;"	f	signature:(char_u *title, char_u *icon)
gui_mch_settitle	src/gui_photon.c	/^gui_mch_settitle(char_u *title,	char_u *icon)$/;"	f	signature:(char_u *title, char_u *icon)
gui_mch_settitle	src/gui_w48.c	/^gui_mch_settitle($/;"	f	signature:( char_u *title, char_u *icon)
gui_mch_show_popupmenu	src/gui_athena.c	/^gui_mch_show_popupmenu(menu)$/;"	f
gui_mch_show_popupmenu	src/gui_gtk.c	/^gui_mch_show_popupmenu(vimmenu_T *menu)$/;"	f	signature:(vimmenu_T *menu)
gui_mch_show_popupmenu	src/gui_mac.c	/^gui_mch_show_popupmenu(vimmenu_T *menu)$/;"	f	signature:(vimmenu_T *menu)
gui_mch_show_popupmenu	src/gui_motif.c	/^gui_mch_show_popupmenu(menu)$/;"	f
gui_mch_show_popupmenu	src/gui_photon.c	/^gui_mch_show_popupmenu(vimmenu_T *menu)$/;"	f	signature:(vimmenu_T *menu)
gui_mch_show_popupmenu	src/gui_riscos.c	/^gui_mch_show_popupmenu(menu)$/;"	f
gui_mch_show_popupmenu	src/gui_w16.c	/^gui_mch_show_popupmenu(vimmenu_T *menu)$/;"	f	signature:(vimmenu_T *menu)
gui_mch_show_popupmenu	src/gui_w32.c	/^gui_mch_show_popupmenu(vimmenu_T *menu)$/;"	f	signature:(vimmenu_T *menu)
gui_mch_show_popupmenu_at	src/gui_w48.c	/^gui_mch_show_popupmenu_at(vimmenu_T *menu, int x, int y)$/;"	f	file:	signature:(vimmenu_T *menu, int x, int y)
gui_mch_show_tabline	src/gui_gtk_x11.c	/^gui_mch_show_tabline(int showit)$/;"	f	signature:(int showit)
gui_mch_show_tabline	src/gui_mac.c	/^gui_mch_show_tabline(int showit)$/;"	f	signature:(int showit)
gui_mch_show_tabline	src/gui_motif.c	/^gui_mch_show_tabline(int showit)$/;"	f	signature:(int showit)
gui_mch_show_tabline	src/gui_w48.c	/^gui_mch_show_tabline(int showit)$/;"	f	signature:(int showit)
gui_mch_show_toolbar	src/gui_athena.c	/^gui_mch_show_toolbar(int showit)$/;"	f	signature:(int showit)
gui_mch_show_toolbar	src/gui_gtk_x11.c	/^gui_mch_show_toolbar(int showit)$/;"	f	signature:(int showit)
gui_mch_show_toolbar	src/gui_motif.c	/^gui_mch_show_toolbar(int showit)$/;"	f	signature:(int showit)
gui_mch_show_toolbar	src/gui_photon.c	/^gui_mch_show_toolbar(int showit)$/;"	f	signature:(int showit)
gui_mch_show_toolbar	src/gui_w48.c	/^gui_mch_show_toolbar(int showit)$/;"	f	signature:(int showit)
gui_mch_showing_tabline	src/gui_gtk_x11.c	/^gui_mch_showing_tabline(void)$/;"	f	signature:(void)
gui_mch_showing_tabline	src/gui_mac.c	/^gui_mch_showing_tabline(void)$/;"	f	signature:(void)
gui_mch_showing_tabline	src/gui_motif.c	/^gui_mch_showing_tabline(void)$/;"	f	signature:(void)
gui_mch_showing_tabline	src/gui_w48.c	/^gui_mch_showing_tabline(void)$/;"	f	signature:(void)
gui_mch_start_blink	src/gui_gtk_x11.c	/^gui_mch_start_blink(void)$/;"	f	signature:(void)
gui_mch_start_blink	src/gui_mac.c	/^gui_mch_start_blink(void)$/;"	f	signature:(void)
gui_mch_start_blink	src/gui_photon.c	/^gui_mch_start_blink(void)$/;"	f	signature:(void)
gui_mch_start_blink	src/gui_riscos.c	/^gui_mch_start_blink(void)$/;"	f	signature:(void)
gui_mch_start_blink	src/gui_w48.c	/^gui_mch_start_blink(void)$/;"	f	signature:(void)
gui_mch_start_blink	src/gui_x11.c	/^gui_mch_start_blink()$/;"	f
gui_mch_stop_blink	src/gui_gtk_x11.c	/^gui_mch_stop_blink(void)$/;"	f	signature:(void)
gui_mch_stop_blink	src/gui_mac.c	/^gui_mch_stop_blink(void)$/;"	f	signature:(void)
gui_mch_stop_blink	src/gui_photon.c	/^gui_mch_stop_blink(void)$/;"	f	signature:(void)
gui_mch_stop_blink	src/gui_riscos.c	/^gui_mch_stop_blink(void)$/;"	f	signature:(void)
gui_mch_stop_blink	src/gui_w48.c	/^gui_mch_stop_blink(void)$/;"	f	signature:(void)
gui_mch_stop_blink	src/gui_x11.c	/^gui_mch_stop_blink()$/;"	f
gui_mch_submenu_change	src/gui_athena.c	/^gui_mch_submenu_change(menu, colors)$/;"	f	file:
gui_mch_submenu_change	src/gui_athena.c	/^static void gui_mch_submenu_change __ARGS((vimmenu_T *mp, int colors));$/;"	p	file:	signature:(vimmenu_T *mp, int colors)
gui_mch_tearoff	src/gui_w32.c	/^gui_mch_tearoff($/;"	f	file:	signature:( char_u *title, vimmenu_T *menu, int initX, int initY)
gui_mch_tearoff	src/gui_w32.c	/^static void gui_mch_tearoff(char_u *title, vimmenu_T *menu, int initX, int initY);$/;"	p	file:	signature:(char_u *title, vimmenu_T *menu, int initX, int initY)
gui_mch_text_area_extra_height	src/gui_motif.c	/^gui_mch_text_area_extra_height()$/;"	f
gui_mch_toggle_tearoffs	src/gui_athena.c	/^gui_mch_toggle_tearoffs(enable)$/;"	f
gui_mch_toggle_tearoffs	src/gui_gtk.c	/^gui_mch_toggle_tearoffs(int enable)$/;"	f	signature:(int enable)
gui_mch_toggle_tearoffs	src/gui_mac.c	/^gui_mch_toggle_tearoffs(int enable)$/;"	f	signature:(int enable)
gui_mch_toggle_tearoffs	src/gui_motif.c	/^gui_mch_toggle_tearoffs(enable)$/;"	f
gui_mch_toggle_tearoffs	src/gui_photon.c	/^gui_mch_toggle_tearoffs(int enable)$/;"	f	signature:(int enable)
gui_mch_toggle_tearoffs	src/gui_riscos.c	/^gui_mch_toggle_tearoffs(enable)$/;"	f
gui_mch_toggle_tearoffs	src/menu.c	/^gui_mch_toggle_tearoffs(int enable)$/;"	f	signature:(int enable)
gui_mch_uninit	src/gui_x11.c	/^gui_mch_uninit()$/;"	f
gui_mch_unmaximize	src/gui_gtk_x11.c	/^gui_mch_unmaximize()$/;"	f
gui_mch_unpost_balloon	src/gui_beval.c	/^gui_mch_unpost_balloon(beval)$/;"	f
gui_mch_update	src/gui_gtk_x11.c	/^gui_mch_update(void)$/;"	f	signature:(void)
gui_mch_update	src/gui_mac.c	/^gui_mch_update(void)$/;"	f	signature:(void)
gui_mch_update	src/gui_photon.c	/^gui_mch_update(void)$/;"	f	signature:(void)
gui_mch_update	src/gui_riscos.c	/^gui_mch_update(void)$/;"	f	signature:(void)
gui_mch_update	src/gui_w48.c	/^gui_mch_update(void)$/;"	f	signature:(void)
gui_mch_update	src/gui_x11.c	/^gui_mch_update()$/;"	f
gui_mch_update_tabline	src/gui_gtk_x11.c	/^gui_mch_update_tabline(void)$/;"	f	signature:(void)
gui_mch_update_tabline	src/gui_mac.c	/^gui_mch_update_tabline(void)$/;"	f	signature:(void)
gui_mch_update_tabline	src/gui_motif.c	/^gui_mch_update_tabline(void)$/;"	f	signature:(void)
gui_mch_update_tabline	src/gui_w48.c	/^gui_mch_update_tabline(void)$/;"	f	signature:(void)
gui_mch_wait_for_chars	src/gui_gtk_x11.c	/^gui_mch_wait_for_chars(long wtime)$/;"	f	signature:(long wtime)
gui_mch_wait_for_chars	src/gui_mac.c	/^gui_mch_wait_for_chars(int wtime)$/;"	f	signature:(int wtime)
gui_mch_wait_for_chars	src/gui_photon.c	/^gui_mch_wait_for_chars(int wtime)$/;"	f	signature:(int wtime)
gui_mch_wait_for_chars	src/gui_riscos.c	/^gui_mch_wait_for_chars(long wtime)$/;"	f	signature:(long wtime)
gui_mch_wait_for_chars	src/gui_w48.c	/^gui_mch_wait_for_chars(int wtime)$/;"	f	signature:(int wtime)
gui_mch_wait_for_chars	src/gui_x11.c	/^gui_mch_wait_for_chars(wtime)$/;"	f
gui_menu_cb	src/gui.c	/^gui_menu_cb(menu)$/;"	f
gui_motif_add_actext	src/gui_motif.c	/^gui_motif_add_actext(menu)$/;"	f	file:
gui_motif_add_actext	src/gui_motif.c	/^static void gui_motif_add_actext __ARGS((vimmenu_T *menu));$/;"	p	file:	signature:(vimmenu_T *menu)
gui_motif_create_fontlist	src/gui_motif.c	/^gui_motif_create_fontlist(font)$/;"	f
gui_motif_fontset2fontlist	src/gui_motif.c	/^gui_motif_fontset2fontlist(fontset)$/;"	f
gui_motif_menu_colors	src/gui_motif.c	/^gui_motif_menu_colors(id)$/;"	f	file:
gui_motif_menu_colors	src/gui_motif.c	/^static void gui_motif_menu_colors __ARGS((Widget id));$/;"	p	file:	signature:(Widget id)
gui_motif_menu_fontlist	src/gui_motif.c	/^gui_motif_menu_fontlist(id)$/;"	f
gui_motif_scroll_colors	src/gui_motif.c	/^gui_motif_scroll_colors(id)$/;"	f	file:
gui_motif_scroll_colors	src/gui_motif.c	/^static void gui_motif_scroll_colors __ARGS((Widget id));$/;"	p	file:	signature:(Widget id)
gui_motif_set_mnemonics	src/gui_motif.c	/^gui_motif_set_mnemonics(enable)$/;"	f
gui_motif_synch_fonts	src/gui_motif.c	/^gui_motif_synch_fonts(void)$/;"	f	signature:(void)
gui_motif_update_mousemodel	src/gui_motif.c	/^gui_motif_update_mousemodel(menu)$/;"	f
gui_mouse_correct	src/gui.c	/^gui_mouse_correct()$/;"	f
gui_mouse_moved	src/gui.c	/^gui_mouse_moved(x, y)$/;"	f
gui_mswin_find_menu	src/gui_w48.c	/^gui_mswin_find_menu($/;"	f	file:	signature:( vimmenu_T *pMenu, int id)
gui_mswin_find_scrollbar	src/gui_w48.c	/^gui_mswin_find_scrollbar(HWND hwnd)$/;"	f	file:	signature:(HWND hwnd)
gui_mswin_get_menu_height	src/gui_w16.c	/^gui_mswin_get_menu_height($/;"	f	file:	signature:( int fix_window)
gui_mswin_get_menu_height	src/gui_w32.c	/^gui_mswin_get_menu_height($/;"	f	file:	signature:( int fix_window)
gui_mswin_get_menu_height	src/gui_w48.c	/^static int gui_mswin_get_menu_height(int fix_window);$/;"	p	file:	signature:(int fix_window)
gui_mswin_get_valid_dimensions	src/gui_w48.c	/^gui_mswin_get_valid_dimensions($/;"	f	file:	signature:( int w, int h, int *valid_w, int *valid_h)
gui_mswin_rm_blink_timer	src/gui_w48.c	/^gui_mswin_rm_blink_timer(void)$/;"	f	file:	signature:(void)
gui_new_scrollbar_colors	src/gui.c	/^gui_new_scrollbar_colors()$/;"	f
gui_new_shellsize	src/gui.c	/^gui_new_shellsize()$/;"	f
gui_outstr	src/gui.c	/^gui_outstr(s, len)$/;"	f	file:
gui_outstr	src/gui.c	/^static void gui_outstr __ARGS((char_u *, int));$/;"	p	file:	signature:(char_u *, int)
gui_outstr_nowrap	src/gui.c	/^gui_outstr_nowrap(s, len, flags, fg, bg, back)$/;"	f
gui_ph_dialog_close	src/gui_photon.c	/^gui_ph_dialog_close( int button, void *data )$/;"	f	file:	signature:( int button, void *data )
gui_ph_dialog_esc	src/gui_photon.c	/^gui_ph_dialog_esc( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )$/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_dialog_text	src/gui_photon.c	/^static PtWidget_t *gui_ph_dialog_text = NULL;$/;"	v	file:
gui_ph_dialog_text_enter	src/gui_photon.c	/^gui_ph_dialog_text_enter( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )$/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_draw_end	src/gui_photon.c	/^gui_ph_draw_end( void )$/;"	f	file:	signature:( void )
gui_ph_draw_end	src/gui_photon.c	/^static void gui_ph_draw_end( void );$/;"	p	file:	signature:( void )
gui_ph_draw_start	src/gui_photon.c	/^gui_ph_draw_start( void )$/;"	f	file:	signature:( void )
gui_ph_draw_start	src/gui_photon.c	/^static void gui_ph_draw_start( void );$/;"	p	file:	signature:( void )
gui_ph_encoding_changed	src/gui_photon.c	/^gui_ph_encoding_changed( int new_encoding )$/;"	f	signature:( int new_encoding )
gui_ph_find_buffer_item	src/gui_photon.c	/^gui_ph_find_buffer_item( char_u *name )$/;"	f	file:	signature:( char_u *name )
gui_ph_get_font	src/gui_photon.c	/^gui_ph_get_font($/;"	f	file:	signature:( char_u *font_name, int_u font_flags, int_u font_size, int_u enforce )
gui_ph_get_panelgroup_margins	src/gui_photon.c	/^gui_ph_get_panelgroup_margins($/;"	f	file:	signature:( short *top, short *bottom, short *left, short *right )
gui_ph_get_panelgroup_margins	src/gui_photon.c	/^static void gui_ph_get_panelgroup_margins( short*, short*, short*, short* );$/;"	p	file:	signature:( short*, short*, short*, short* )
gui_ph_handle_buffer_remove	src/gui_photon.c	/^gui_ph_handle_buffer_remove($/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_handle_focus	src/gui_photon.c	/^gui_ph_handle_focus( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )$/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_handle_focus	src/gui_photon.c	/^static PtCallbackF_t gui_ph_handle_focus;	\/* focus change of text area *\/$/;"	v	file:
gui_ph_handle_keyboard	src/gui_photon.c	/^gui_ph_handle_keyboard( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )$/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_handle_keyboard	src/gui_photon.c	/^static PtCallbackF_t gui_ph_handle_keyboard;$/;"	v	file:
gui_ph_handle_menu	src/gui_photon.c	/^gui_ph_handle_menu( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )$/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_handle_menu	src/gui_photon.c	/^static PtCallbackF_t gui_ph_handle_menu;$/;"	v	file:
gui_ph_handle_menu_resize	src/gui_photon.c	/^gui_ph_handle_menu_resize($/;"	f	file:	signature:( PtWidget_t *widget, void *other, PtCallbackInfo_t *info )
gui_ph_handle_menu_resize	src/gui_photon.c	/^static PtCallbackF_t gui_ph_handle_menu_resize;$/;"	v	file:
gui_ph_handle_menu_unrealized	src/gui_photon.c	/^gui_ph_handle_menu_unrealized($/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_handle_menu_unrealized	src/gui_photon.c	/^static PtCallbackF_t gui_ph_handle_menu_unrealized;$/;"	v	file:
gui_ph_handle_mouse	src/gui_photon.c	/^gui_ph_handle_mouse( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )$/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_handle_mouse	src/gui_photon.c	/^static PtCallbackF_t gui_ph_handle_mouse;$/;"	v	file:
gui_ph_handle_pg_change	src/gui_photon.c	/^gui_ph_handle_pg_change($/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_handle_pulldown_menu	src/gui_photon.c	/^gui_ph_handle_pulldown_menu($/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_handle_pulldown_menu	src/gui_photon.c	/^static PtCallbackF_t gui_ph_handle_pulldown_menu;$/;"	v	file:
gui_ph_handle_raw_draw	src/gui_photon.c	/^gui_ph_handle_raw_draw( PtWidget_t *widget, PhTile_t *damage )$/;"	f	file:	signature:( PtWidget_t *widget, PhTile_t *damage )
gui_ph_handle_scrollbar	src/gui_photon.c	/^gui_ph_handle_scrollbar( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )$/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_handle_scrollbar	src/gui_photon.c	/^static PtCallbackF_t gui_ph_handle_scrollbar;$/;"	v	file:
gui_ph_handle_timer_cursor	src/gui_photon.c	/^gui_ph_handle_timer_cursor($/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_handle_timer_cursor	src/gui_photon.c	/^static PtCallbackF_t gui_ph_handle_timer_cursor;$/;"	v	file:
gui_ph_handle_timer_timeout	src/gui_photon.c	/^gui_ph_handle_timer_timeout(PtWidget_t *widget, void *data, PtCallbackInfo_t *info)$/;"	f	file:	signature:(PtWidget_t *widget, void *data, PtCallbackInfo_t *info)
gui_ph_handle_timer_timeout	src/gui_photon.c	/^static PtCallbackF_t gui_ph_handle_timer_timeout;$/;"	v	file:
gui_ph_handle_window_cb	src/gui_photon.c	/^gui_ph_handle_window_cb( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )$/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_handle_window_cb	src/gui_photon.c	/^static PtCallbackF_t gui_ph_handle_window_cb;$/;"	v	file:
gui_ph_handle_window_open	src/gui_photon.c	/^gui_ph_handle_window_open($/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_is_buffer_item	src/gui_photon.c	/^gui_ph_is_buffer_item( vimmenu_T *menu, vimmenu_T *parent )$/;"	f	file:	signature:( vimmenu_T *menu, vimmenu_T *parent )
gui_ph_mouse_color	src/gui_photon.c	/^static PgColor_t gui_ph_mouse_color =	Pg_BLACK;$/;"	v	file:
gui_ph_pane_resize	src/gui_photon.c	/^gui_ph_pane_resize( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )$/;"	f	file:	signature:( PtWidget_t *widget, void *data, PtCallbackInfo_t *info )
gui_ph_parse_font_name	src/gui_photon.c	/^gui_ph_parse_font_name($/;"	f	file:	signature:( char_u *vim_font, char_u **font_name, int_u *font_flags, int_u *font_size )
gui_ph_pg_add_buffer	src/gui_photon.c	/^gui_ph_pg_add_buffer(char *name )$/;"	f	file:	signature:(char *name )
gui_ph_pg_remove_buffer	src/gui_photon.c	/^gui_ph_pg_remove_buffer( char *name )$/;"	f	file:	signature:( char *name )
gui_ph_pg_set_buffer_num	src/gui_photon.c	/^gui_ph_pg_set_buffer_num( int_u buf_num )$/;"	f	file:	signature:( int_u buf_num )
gui_ph_position_menu	src/gui_photon.c	/^gui_ph_position_menu( PtWidget_t *widget, int priority )$/;"	f	file:	signature:( PtWidget_t *widget, int priority )
gui_ph_raw_offset	src/gui_photon.c	/^static PhPoint_t    gui_ph_raw_offset;$/;"	v	file:
gui_ph_resize_container	src/gui_photon.c	/^gui_ph_resize_container( void )$/;"	f	file:	signature:( void )
gui_ph_show_tooltip	src/gui_photon.c	/^static PtWidget_t * gui_ph_show_tooltip( PtWidget_t *window,$/;"	f	file:	signature:( PtWidget_t *window, PtWidget_t *widget, int position, char *text, char *font, PgColor_t fill_color, PgColor_t text_color )
gui_ph_show_tooltip	src/gui_photon.c	/^static PtWidget_t * gui_ph_show_tooltip( PtWidget_t *window,$/;"	p	file:	signature:( PtWidget_t *window, PtWidget_t *widget, int position, char *text, char *font, PgColor_t fill_color, PgColor_t text_color )
gui_ph_timer_cursor	src/gui_photon.c	/^static PtWidget_t   *gui_ph_timer_cursor;   \/* handle cursor blinking *\/$/;"	v	file:
gui_ph_timer_timeout	src/gui_photon.c	/^static PtWidget_t   *gui_ph_timer_timeout;  \/* used in gui_mch_wait_for_chars *\/$/;"	v	file:
gui_ph_toolbar_find_icon	src/gui_photon.c	/^gui_ph_toolbar_find_icon( vimmenu_T *menu )$/;"	f	file:	signature:( vimmenu_T *menu )
gui_ph_toolbar_find_icon	src/gui_photon.c	/^static PhImage_t *gui_ph_toolbar_find_icon( vimmenu_T *menu );$/;"	p	file:	signature:( vimmenu_T *menu )
gui_ph_toolbar_images	src/gui_photon.c	/^static PhImage_t *gui_ph_toolbar_images[] = {$/;"	v	file:
gui_ph_toolbar_load_icon	src/gui_photon.c	/^gui_ph_toolbar_load_icon( char_u *iconfile )$/;"	f	file:	signature:( char_u *iconfile )
gui_position_components	src/gui.c	/^gui_position_components(total_width)$/;"	f	file:
gui_position_components	src/gui.c	/^static void gui_position_components __ARGS((int));$/;"	p	file:	signature:(int)
gui_position_menu	src/gui.c	/^gui_position_menu()$/;"	f
gui_prepare	src/gui.c	/^gui_prepare(argc, argv)$/;"	f
gui_prev_topfill	src/globals.h	/^EXTERN int	gui_prev_topfill INIT(= 0);$/;"	v
gui_prev_topline	src/globals.h	/^EXTERN linenr_T gui_prev_topline INIT(= 0);$/;"	v
gui_redraw	src/gui.c	/^gui_redraw(x, y, w, h)$/;"	f
gui_redraw_block	src/gui.c	/^gui_redraw_block(row1, col1, row2, col2, flags)$/;"	f
gui_remove_scrollbars	src/gui.c	/^gui_remove_scrollbars()$/;"	f
gui_reset_scroll_region	src/gui.c	/^gui_reset_scroll_region()$/;"	f
gui_resize_shell	src/gui.c	/^gui_resize_shell(pixel_width, pixel_height)$/;"	f
gui_screenchar	src/gui.c	/^gui_screenchar(off, flags, fg, bg, back)$/;"	f	file:
gui_screenchar	src/gui.c	/^static int gui_screenchar __ARGS((int off, int flags, guicolor_T fg, guicolor_T bg, int back));$/;"	p	file:	signature:(int off, int flags, guicolor_T fg, guicolor_T bg, int back)
gui_screenstr	src/gui.c	/^gui_screenstr(off, len, flags, fg, bg, back)$/;"	f	file:
gui_screenstr	src/gui.c	/^static int gui_screenstr __ARGS((int off, int len, int flags, guicolor_T fg, guicolor_T bg, int back));$/;"	p	file:	signature:(int off, int len, int flags, guicolor_T fg, guicolor_T bg, int back)
gui_send_mouse_event	src/gui.c	/^gui_send_mouse_event(button, x, y, repeated_click, modifiers)$/;"	f
gui_set_bg_color	src/gui.c	/^gui_set_bg_color(name)$/;"	f	file:
gui_set_bg_color	src/gui.c	/^static void gui_set_bg_color __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
gui_set_cursor	src/gui.c	/^gui_set_cursor(row, col)$/;"	f
gui_set_fg_color	src/gui.c	/^gui_set_fg_color(name)$/;"	f	file:
gui_set_fg_color	src/gui.c	/^static void gui_set_fg_color __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
gui_set_shellsize	src/gui.c	/^gui_set_shellsize(mustset, fit_to_display, direction)$/;"	f
gui_shell_closed	src/gui.c	/^gui_shell_closed()$/;"	f
gui_show_popupmenu	src/menu.c	/^gui_show_popupmenu()$/;"	f
gui_start	src/gui.c	/^gui_start()$/;"	f
gui_start_highlight	src/gui.c	/^gui_start_highlight(mask)$/;"	f
gui_stop_highlight	src/gui.c	/^gui_stop_highlight(mask)$/;"	f
gui_undraw_cursor	src/gui.c	/^gui_undraw_cursor()$/;"	f
gui_update_cursor	src/gui.c	/^gui_update_cursor(force, clear_selection)$/;"	f
gui_update_cursor_later	src/gui.c	/^gui_update_cursor_later()$/;"	f
gui_update_horiz_scrollbar	src/gui.c	/^gui_update_horiz_scrollbar(force)$/;"	f	file:
gui_update_horiz_scrollbar	src/gui.c	/^static void gui_update_horiz_scrollbar __ARGS((int));$/;"	p	file:	signature:(int)
gui_update_menus	src/menu.c	/^gui_update_menus(modes)$/;"	f
gui_update_menus_recurse	src/menu.c	/^gui_update_menus_recurse(menu, mode)$/;"	f	file:
gui_update_menus_recurse	src/menu.c	/^static void gui_update_menus_recurse __ARGS((vimmenu_T *, int));$/;"	p	file:	signature:(vimmenu_T *, int)
gui_update_screen	src/gui.c	/^gui_update_screen()$/;"	f
gui_update_scrollbars	src/gui.c	/^gui_update_scrollbars(force)$/;"	f
gui_update_tabline	src/gui.c	/^gui_update_tabline()$/;"	f
gui_use_tabline	src/gui.c	/^gui_use_tabline()$/;"	f
gui_w32_get_menu_font	src/gui_w32.c	/^gui_w32_get_menu_font(LOGFONT *lf)$/;"	f	file:	signature:(LOGFONT *lf)
gui_wait_for_chars	src/gui.c	/^gui_wait_for_chars(wtime)$/;"	f
gui_win_pos_T	src/gui.h	/^} gui_win_pos_T;$/;"	t	typeref:enum:__anon69
gui_win_x	src/globals.h	/^EXTERN int	gui_win_x INIT(= -1);$/;"	v
gui_win_y	src/globals.h	/^EXTERN int	gui_win_y INIT(= -1);$/;"	v
gui_wingoto_xy	src/gui.c	/^gui_wingoto_xy(x, y)$/;"	f	file:
gui_wingoto_xy	src/gui.c	/^static void gui_wingoto_xy __ARGS((int x, int y));$/;"	p	file:	signature:(int x, int y)
gui_write	src/gui.c	/^gui_write(s, len)$/;"	f
gui_x11_blink_cb	src/gui_x11.c	/^gui_x11_blink_cb(timed_out, interval_id)$/;"	f	file:
gui_x11_blink_cb	src/gui_x11.c	/^static void gui_x11_blink_cb __ARGS((XtPointer timed_out, XtIntervalId *interval_id));$/;"	p	file:	signature:(XtPointer timed_out, XtIntervalId *interval_id)
gui_x11_callbacks	src/gui_x11.c	/^gui_x11_callbacks(textArea, vimForm)$/;"	f
gui_x11_check_copy_area	src/gui_x11.c	/^gui_x11_check_copy_area()$/;"	f	file:
gui_x11_check_copy_area	src/gui_x11.c	/^static void gui_x11_check_copy_area __ARGS((void));$/;"	p	file:	signature:(void)
gui_x11_create_blank_mouse	src/gui_x11.c	/^gui_x11_create_blank_mouse()$/;"	f	file:
gui_x11_create_blank_mouse	src/gui_x11.c	/^static Cursor gui_x11_create_blank_mouse __ARGS((void));$/;"	p	file:	signature:(void)
gui_x11_create_widgets	src/gui_athena.c	/^gui_x11_create_widgets()$/;"	f
gui_x11_create_widgets	src/gui_motif.c	/^gui_x11_create_widgets()$/;"	f
gui_x11_destroy_widgets	src/gui_athena.c	/^gui_x11_destroy_widgets()$/;"	f
gui_x11_destroy_widgets	src/gui_motif.c	/^gui_x11_destroy_widgets()$/;"	f
gui_x11_enter_cb	src/gui_x11.c	/^gui_x11_enter_cb(w, data, event, dum)$/;"	f	file:
gui_x11_enter_cb	src/gui_x11.c	/^static void gui_x11_enter_cb __ARGS((Widget w, XtPointer data, XEvent *event, Boolean *dum));$/;"	p	file:	signature:(Widget w, XtPointer data, XEvent *event, Boolean *dum)
gui_x11_expose_cb	src/gui_x11.c	/^gui_x11_expose_cb(w, dud, event, dum)$/;"	f	file:
gui_x11_expose_cb	src/gui_x11.c	/^static void gui_x11_expose_cb __ARGS((Widget w, XtPointer dud, XEvent *event, Boolean *dum));$/;"	p	file:	signature:(Widget w, XtPointer dud, XEvent *event, Boolean *dum)
gui_x11_focus_change_cb	src/gui_x11.c	/^gui_x11_focus_change_cb(w, data, event, dum)$/;"	f	file:
gui_x11_focus_change_cb	src/gui_x11.c	/^static void gui_x11_focus_change_cb __ARGS((Widget w, XtPointer data, XEvent *event, Boolean *dum));$/;"	p	file:	signature:(Widget w, XtPointer data, XEvent *event, Boolean *dum)
gui_x11_get_last_mouse_event	src/gui_x11.c	/^gui_x11_get_last_mouse_event()$/;"	f
gui_x11_get_wid	src/gui_athena.c	/^gui_x11_get_wid()$/;"	f
gui_x11_get_wid	src/gui_motif.c	/^gui_x11_get_wid()$/;"	f
gui_x11_key_hit_cb	src/gui_x11.c	/^gui_x11_key_hit_cb(w, dud, event, dum)$/;"	f
gui_x11_leave_cb	src/gui_x11.c	/^gui_x11_leave_cb(w, data, event, dum)$/;"	f	file:
gui_x11_leave_cb	src/gui_x11.c	/^static void gui_x11_leave_cb __ARGS((Widget w, XtPointer data, XEvent *event, Boolean *dum));$/;"	p	file:	signature:(Widget w, XtPointer data, XEvent *event, Boolean *dum)
gui_x11_menu_cb	src/gui_x11.c	/^gui_x11_menu_cb(w, client_data, call_data)$/;"	f
gui_x11_mouse_cb	src/gui_x11.c	/^gui_x11_mouse_cb(w, dud, event, dum)$/;"	f	file:
gui_x11_mouse_cb	src/gui_x11.c	/^static void gui_x11_mouse_cb __ARGS((Widget w, XtPointer data, XEvent *event, Boolean *dum));$/;"	p	file:	signature:(Widget w, XtPointer data, XEvent *event, Boolean *dum)
gui_x11_resize_window_cb	src/gui_x11.c	/^gui_x11_resize_window_cb(w, dud, event, dum)$/;"	f	file:
gui_x11_resize_window_cb	src/gui_x11.c	/^static void gui_x11_resize_window_cb __ARGS((Widget w, XtPointer dud, XEvent *event, Boolean *dum));$/;"	p	file:	signature:(Widget w, XtPointer dud, XEvent *event, Boolean *dum)
gui_x11_send_event_handler	src/gui_x11.c	/^gui_x11_send_event_handler(w, client_data, event, dum)$/;"	f	file:
gui_x11_send_event_handler	src/gui_x11.c	/^static void gui_x11_send_event_handler __ARGS((Widget, XtPointer, XEvent *, Boolean *));$/;"	p	file:	signature:(Widget, XtPointer, XEvent *, Boolean *)
gui_x11_set_back_color	src/gui_athena.c	/^gui_x11_set_back_color()$/;"	f
gui_x11_set_back_color	src/gui_motif.c	/^gui_x11_set_back_color()$/;"	f
gui_x11_sniff_request_cb	src/gui_x11.c	/^gui_x11_sniff_request_cb(closure, source, id)$/;"	f	file:
gui_x11_sniff_request_cb	src/gui_x11.c	/^static void gui_x11_sniff_request_cb __ARGS((XtPointer closure, int *source, XtInputId *id));$/;"	p	file:	signature:(XtPointer closure, int *source, XtInputId *id)
gui_x11_timer_cb	src/gui_x11.c	/^gui_x11_timer_cb(timed_out, interval_id)$/;"	f	file:
gui_x11_timer_cb	src/gui_x11.c	/^static void gui_x11_timer_cb __ARGS((XtPointer timed_out, XtIntervalId *interval_id));$/;"	p	file:	signature:(XtPointer timed_out, XtIntervalId *interval_id)
gui_x11_visibility_cb	src/gui_x11.c	/^gui_x11_visibility_cb(w, dud, event, dum)$/;"	f	file:
gui_x11_visibility_cb	src/gui_x11.c	/^static void gui_x11_visibility_cb __ARGS((Widget w, XtPointer dud, XEvent *event, Boolean *dum));$/;"	p	file:	signature:(Widget w, XtPointer dud, XEvent *event, Boolean *dum)
gui_x11_wm_protocol_handler	src/gui_x11.c	/^gui_x11_wm_protocol_handler(w, client_data, event, dum)$/;"	f	file:
gui_x11_wm_protocol_handler	src/gui_x11.c	/^static void gui_x11_wm_protocol_handler __ARGS((Widget, XtPointer, XEvent *, Boolean *));$/;"	p	file:	signature:(Widget, XtPointer, XEvent *, Boolean *)
gui_xm_select_font	src/gui_xmdlg.c	/^gui_xm_select_font(char_u *current)$/;"	f	signature:(char_u *current)
gui_xy2colrow	src/gui.c	/^gui_xy2colrow(x, y, colp)$/;"	f
guicolor_T	src/gui.h	/^typedef long	    guicolor_T;	\/* handle for a GUI color; for X11 this should$/;"	t
guicolor_T	src/structs.h	86;"	d
guint	src/gui_gtk_x11.c	65;"	d	file:
guint8	src/gui_gtk.c	79;"	d	file:
gx	runtime/plugin/netrwPlugin.vim	/^  nmap <unique> gx <Plug>NetrwBrowseX$/;"	m
gzip	runtime/plugin/gzip.vim	/^augroup gzip$/;"	a
gzip#appre	runtime/autoload/gzip.vim	/^fun gzip#appre(cmd)$/;"	f
gzip#read	runtime/autoload/gzip.vim	/^fun gzip#read(cmd)$/;"	f
gzip#write	runtime/autoload/gzip.vim	/^fun gzip#write(cmd)$/;"	f
h	runtime/macros/less.vim	/^noremap h :call <SID>Help()<CR>$/;"	m
hBufferMutex	src/if_sniff.c	/^static HANDLE hBufferMutex=NULL;$/;"	v	file:
hDlgPrint	src/os_mswin.c	/^static HWND		hDlgPrint;$/;"	v	file:
hIconvDLL	src/mbyte.c	/^static HINSTANCE hIconvDLL = 0;$/;"	v	file:
hImage	src/gui_w32.c	/^    HANDLE	hImage;$/;"	m	struct:_signicon_t	file:	access:public
hLibImm	src/gui_w32.c	/^static HINSTANCE hLibImm = NULL;$/;"	v	file:
hLibintlDLL	src/GvimExt/gvimext.cpp	/^static HINSTANCE hLibintlDLL = 0;$/;"	v	file:
hLibintlDLL	src/os_win32.c	/^static HINSTANCE hLibintlDLL = 0;$/;"	v	file:
hMsvcrtDLL	src/mbyte.c	/^static HINSTANCE hMsvcrtDLL = 0;$/;"	v	file:
hMzGC	src/if_mzsch.c	/^static HINSTANCE hMzGC = 0;$/;"	v	file:
hMzSch	src/if_mzsch.c	/^static HINSTANCE hMzSch = 0;$/;"	v	file:
hOrigin	src/gui_at_fs.c	/^    int		hOrigin;$/;"	m	struct:__anon114	file:	access:public
hProc	src/if_cscope.h	/^    HANDLE	    hProc;	\/* cscope process handle *\/$/;"	m	struct:csi	access:public
hShape	src/gui_w32.c	/^    HANDLE	hShape;	\/* Mask bitmap handle *\/$/;"	m	struct:_signicon_t	file:	access:public
hTclLib	src/if_tcl.c	/^static HANDLE hTclLib = NULL;$/;"	v	file:
h_scroll_to	src/gui_riscos.c	/^h_scroll_to(col)$/;"	f
had_end	src/fold.c	/^    int		had_end;	\/* level of fold that is forced to end above$/;"	m	struct:__anon98	file:	access:public
had_endbrace	src/regexp.c	/^static char_u	had_endbrace[NSUBEXP];	\/* flags, TRUE if end of () found *\/$/;"	v	file:
had_eol	src/regexp.c	/^static int	had_eol;	\/* TRUE when EOL found by vim_regcomp() *\/$/;"	v	file:
half_shape	src/arabic.c	/^half_shape(c)$/;"	f	file:
half_shape	src/arabic.c	/^static int  half_shape __ARGS((int c));$/;"	p	file:	signature:(int c)
halfpage	src/move.c	/^halfpage(flag, Prenum)$/;"	f
han_index	src/hangulin.c	842;"	d	file:
handle_drop	src/ex_docmd.c	/^handle_drop(filec, filev, split)$/;"	f
handle_focus_event	src/os_win32.c	/^handle_focus_event(INPUT_RECORD ir)$/;"	f	file:	signature:(INPUT_RECORD ir)
handle_from_sniff	src/if_sniff.c	/^static HANDLE handle_from_sniff=NULL;$/;"	v	file:
handle_key_queue	src/netbeans.c	/^handle_key_queue(void)$/;"	f	file:	signature:(void)
handle_resize	src/os_unix.c	/^handle_resize()$/;"	f	file:
handle_resize	src/os_unix.c	/^static void handle_resize __ARGS((void));$/;"	p	file:	signature:(void)
handle_subscript	src/eval.c	/^handle_subscript(arg, rettv, evaluate, verbose)$/;"	f	file:
handle_subscript	src/eval.c	/^static int handle_subscript __ARGS((char_u **arg, typval_T *rettv, int evaluate, int verbose));$/;"	p	file:	signature:(char_u **arg, typval_T *rettv, int evaluate, int verbose)
handle_swap_exists	src/buffer.c	/^handle_swap_exists(old_curbuf)$/;"	f
handle_tabmenu	src/normal.c	/^handle_tabmenu()$/;"	f
handle_to_sniff	src/if_sniff.c	/^static HANDLE handle_to_sniff=NULL;$/;"	v	file:
handle_x_keys	src/misc2.c	/^handle_x_keys(key)$/;"	f
handler_id	src/gui.h	/^    unsigned long handler_id;   \/* Id of "value_changed" signal handler *\/$/;"	m	struct:GuiScrollbar	access:public
handler_routine	src/os_win32.c	/^handler_routine($/;"	f	file:	signature:( DWORD dwCtrlType)
hangul_automata2	src/hangulin.c	/^hangul_automata2(buf, c)$/;"	f	file:
hangul_automata2	src/hangulin.c	/^static int hangul_automata2 __ARGS((char_u *buf, unsigned int *c));$/;"	p	file:	signature:(char_u *buf, unsigned int *c)
hangul_automata3	src/hangulin.c	/^hangul_automata3(buf, c)$/;"	f	file:
hangul_automata3	src/hangulin.c	/^static int hangul_automata3 __ARGS((char_u *buf, unsigned int *c));$/;"	p	file:	signature:(char_u *buf, unsigned int *c)
hangul_input_clear	src/hangulin.c	/^hangul_input_clear()$/;"	f
hangul_input_process	src/hangulin.c	/^hangul_input_process(s, len)$/;"	f
hangul_input_state	src/hangulin.c	/^static int hangul_input_state = 0;$/;"	v	file:
hangul_input_state_get	src/hangulin.c	/^hangul_input_state_get()$/;"	f
hangul_input_state_set	src/hangulin.c	/^hangul_input_state_set(state)$/;"	f
hangul_input_state_toggle	src/hangulin.c	/^hangul_input_state_toggle()$/;"	f
hangul_keyboard_set	src/hangulin.c	/^hangul_keyboard_set()$/;"	f
hangul_keyboard_type	src/hangulin.c	/^static int hangul_keyboard_type = HANGUL_DEFAULT_KEYBOARD;$/;"	v	file:
hardcopy_line	src/hardcopy.c	/^hardcopy_line(psettings, page_line, ppos)$/;"	f	file:
hardcopy_line	src/hardcopy.c	/^static colnr_T hardcopy_line __ARGS((prt_settings_T *psettings, int page_line, prt_pos_T *ppos));$/;"	p	file:	signature:(prt_settings_T *psettings, int page_line, prt_pos_T *ppos)
hasAnyFolding	src/fold.c	/^hasAnyFolding(win)$/;"	f
hasFolding	src/fold.c	/^hasFolding(lnum, firstp, lastp)$/;"	f
hasFoldingWin	src/fold.c	/^hasFoldingWin(win, lnum, firstp, lastp, cache, infop)$/;"	f
has_autocmd	src/fileio.c	/^has_autocmd(event, sfname, buf)$/;"	f
has_charset	src/hardcopy.c	/^    int		has_charset;$/;"	m	struct:prt_ps_charset_S	file:	access:public
has_color	src/structs.h	/^    int		has_color;$/;"	m	struct:__anon60	access:public
has_compl_option	src/edit.c	/^has_compl_option(dict_opt)$/;"	f	file:
has_compl_option	src/edit.c	/^static int  has_compl_option __ARGS((int dict_opt));$/;"	p	file:	signature:(int dict_opt)
has_cont_list	src/syntax.c	/^    char	has_cont_list;	\/* TRUE if "cont_list" can be used *\/$/;"	m	struct:__anon82	file:	access:public
has_count	src/ex_docmd.c	/^    int		has_count;  \/* :123verbose  :3tab *\/$/;"	m	struct:cmdmod	file:	access:public
has_cursorhold	src/fileio.c	/^has_cursorhold()$/;"	f
has_cursormoved	src/fileio.c	/^has_cursormoved()$/;"	f
has_cursormovedI	src/fileio.c	/^has_cursormovedI()$/;"	f
has_format_option	src/option.c	/^has_format_option(x)$/;"	f
has_gvim	src/dosinst.c	/^int	has_gvim = 0;		\/* installable gvim.exe exists *\/$/;"	v
has_loop_cmd	src/ex_eval.c	/^has_loop_cmd(p)$/;"	f
has_mbyte	src/globals.h	/^EXTERN int	has_mbyte INIT(= 0);		\/* any multi-byte encoding *\/$/;"	v
has_mouse_termcode	src/term.c	/^static int has_mouse_termcode = 0;$/;"	v	file:
has_non_ascii	src/spell.c	/^has_non_ascii(s)$/;"	f	file:
has_non_ascii	src/spell.c	/^static int has_non_ascii __ARGS((char_u *s));$/;"	p	file:	signature:(char_u *s)
has_patch	src/version.c	/^has_patch(n)$/;"	f
has_profiling	src/ex_cmds2.c	/^has_profiling(file, fname, fp)$/;"	f
has_submenu	src/gui_athena.c	/^has_submenu(widget)$/;"	f	file:
has_submenu	src/gui_athena.c	/^static Boolean	has_submenu __ARGS((Widget));$/;"	p	file:	signature:(Widget)
has_vim	src/dosinst.c	/^int	has_vim = 0;		\/* installable vim.exe exists *\/$/;"	v
hash_T	src/structs.h	/^typedef long_u hash_T;		\/* Type for hi_hash *\/$/;"	t
hash_add	src/hashtab.c	/^hash_add(ht, key)$/;"	f
hash_add_item	src/hashtab.c	/^hash_add_item(ht, hi, key, hash)$/;"	f
hash_clear	src/hashtab.c	/^hash_clear(ht)$/;"	f
hash_clear_all	src/hashtab.c	/^hash_clear_all(ht, off)$/;"	f
hash_debug_results	src/hashtab.c	/^hash_debug_results()$/;"	f
hash_find	src/hashtab.c	/^hash_find(ht, key)$/;"	f
hash_hash	src/hashtab.c	/^hash_hash(key)$/;"	f
hash_init	src/hashtab.c	/^hash_init(ht)$/;"	f
hash_lock	src/hashtab.c	/^hash_lock(ht)$/;"	f
hash_lookup	src/hashtab.c	/^hash_lookup(ht, key, hash)$/;"	f
hash_may_resize	src/hashtab.c	/^hash_may_resize(ht, minitems)$/;"	f	file:
hash_may_resize	src/hashtab.c	/^static int hash_may_resize __ARGS((hashtab_T *ht, int minitems));$/;"	p	file:	signature:(hashtab_T *ht, int minitems)
hash_remove	src/hashtab.c	/^hash_remove(ht, hi)$/;"	f
hash_removed	src/globals.h	/^EXTERN char_u	hash_removed;$/;"	v
hash_unlock	src/hashtab.c	/^hash_unlock(ht)$/;"	f
hashitem_S	src/structs.h	/^typedef struct hashitem_S$/;"	s
hashitem_S::hi_hash	src/structs.h	/^    long_u	hi_hash;	\/* cached hash number of hi_key *\/$/;"	m	struct:hashitem_S	access:public
hashitem_S::hi_key	src/structs.h	/^    char_u	*hi_key;$/;"	m	struct:hashitem_S	access:public
hashitem_T	src/structs.h	/^} hashitem_T;$/;"	t	typeref:struct:hashitem_S
hashkey	src/spell.c	/^	char_u	hashkey[6];	\/* the hash key, only used while compressing *\/$/;"	m	union:wordnode_S::__anon15	file:	access:public
hashtab_T	src/structs.h	/^} hashtab_T;$/;"	t	typeref:struct:hashtable_S
hashtable_S	src/structs.h	/^typedef struct hashtable_S$/;"	s
hashtable_S::ht_array	src/structs.h	/^    hashitem_T	*ht_array;	\/* points to the array, allocated when it's$/;"	m	struct:hashtable_S	access:public
hashtable_S::ht_error	src/structs.h	/^    int		ht_error;	\/* when set growing failed, can't add more$/;"	m	struct:hashtable_S	access:public
hashtable_S::ht_filled	src/structs.h	/^    long_u	ht_filled;	\/* number of items used + removed *\/$/;"	m	struct:hashtable_S	access:public
hashtable_S::ht_locked	src/structs.h	/^    int		ht_locked;	\/* counter for hash_lock() *\/$/;"	m	struct:hashtable_S	access:public
hashtable_S::ht_mask	src/structs.h	/^    long_u	ht_mask;	\/* mask used for hash value (nr of items in$/;"	m	struct:hashtable_S	access:public
hashtable_S::ht_smallarray	src/structs.h	/^    hashitem_T	ht_smallarray[HT_INIT_SIZE];   \/* initial array *\/$/;"	m	struct:hashtable_S	access:public
hashtable_S::ht_used	src/structs.h	/^    long_u	ht_used;	\/* number of items used *\/$/;"	m	struct:hashtable_S	access:public
hasnum	src/structs.h	/^    int		hasnum;$/;"	m	struct:__anon58	access:public
have_dollars	src/os_unix.c	/^have_dollars(num, file)$/;"	f	file:
have_dollars	src/os_unix.c	/^static int  have_dollars __ARGS((int, char_u **));$/;"	p	file:	signature:(int, char_u **)
have_wildcard	src/os_unix.c	/^have_wildcard(num, file)$/;"	f	file:
have_wildcard	src/os_unix.c	/^static int  have_wildcard __ARGS((int, char_u **));$/;"	p	file:	signature:(int, char_u **)
hdr	src/gui_w32.c	/^    NMHDR	hdr;$/;"	m	struct:tagNMTTDISPINFOA	file:	access:public
hdr	src/gui_w32.c	/^    NMHDR	hdr;$/;"	m	struct:tagNMTTDISPINFOW	file:	access:public
hdr	src/gui_w32.c	/^    NMHDR      hdr;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:	access:public
head	src/netbeans.c	/^static queue_T head;  \/* dummy node, header for circular queue *\/$/;"	v	file:
head	src/tag.c	/^    char_u	*head;		\/* start of pattern head *\/$/;"	m	struct:__anon29	file:	access:public
header_count	src/undo.c	/^static int header_count;$/;"	v	file:
headlen	src/tag.c	/^    int		headlen;	\/* length of head[] *\/$/;"	m	struct:__anon29	file:	access:public
height	src/gui.h	/^    int		height;		\/* Current height of scroll bar in rows *\/$/;"	m	struct:GuiScrollbar	access:public
height	src/gui_gtk_f.h	/^    guint height;$/;"	m	struct:_GtkForm	access:public
height	src/hardcopy.c	/^    float	height;$/;"	m	struct:prt_mediasize_S	file:	access:public
height	src/move.c	/^    int		    height;	\/* height of added line *\/$/;"	m	struct:__anon84	file:	access:public
help	src/if_cscope.h	/^    char *  help;$/;"	m	struct:__anon86	access:public
help_compare	src/ex_cmds.c	/^	help_compare __ARGS((const void *s1, const void *s2));$/;"	p	file:	signature:(const void *s1, const void *s2)
help_compare	src/ex_cmds.c	/^help_compare(s1, s2)$/;"	f	file:
help_heuristic	src/ex_cmds.c	/^help_heuristic(matched_string, offset, wrong_case)$/;"	f
helptags_one	src/ex_cmds.c	/^helptags_one(dir, ext, tagfname, add_help_tags)$/;"	f	file:
helptags_one	src/ex_cmds.c	/^static void helptags_one __ARGS((char_u *dir, char_u *ext, char_u *lang, int add_help_tags));$/;"	p	file:	signature:(char_u *dir, char_u *ext, char_u *lang, int add_help_tags)
hex2nr	src/charset.c	/^hex2nr(c)$/;"	f
hex_digit	src/gui_mac.c	/^hex_digit(int c)$/;"	f	file:	signature:(int c)
hex_digit	src/gui_photon.c	/^hex_digit(int c)$/;"	f	file:	signature:(int c)
hex_digit	src/gui_w48.c	/^hex_digit(int c)$/;"	f	file:	signature:(int c)
hexhex2nr	src/charset.c	/^hexhex2nr(p)$/;"	f
hexx	src/xxd/xxd.c	/^char hexxa[] = "0123456789abcdef0123456789ABCDEF", *hexx = hexxa;$/;"	v
hexxa	src/xxd/xxd.c	/^char hexxa[] = "0123456789abcdef0123456789ABCDEF", *hexx = hexxa;$/;"	v
hi_hash	src/structs.h	/^    long_u	hi_hash;	\/* cached hash number of hi_key *\/$/;"	m	struct:hashitem_S	access:public
hi_key	src/structs.h	/^    char_u	*hi_key;$/;"	m	struct:hashitem_S	access:public
hidden	src/structs.h	/^    int		hidden;$/;"	m	struct:VimMenu	access:public
hide	src/structs.h	/^    int		hide;			\/* TRUE when ":hide" was used *\/$/;"	m	struct:__anon42	access:public
highest_patch	src/version.c	/^highest_patch()$/;"	f
highlight_attr	src/globals.h	/^EXTERN int	highlight_attr[HLF_COUNT];  \/* Highl. attr for each context. *\/$/;"	v
highlight_changed	src/syntax.c	/^highlight_changed()$/;"	f
highlight_clear	src/syntax.c	/^highlight_clear(idx)$/;"	f	file:
highlight_clear	src/syntax.c	/^static void highlight_clear __ARGS((int idx));$/;"	p	file:	signature:(int idx)
highlight_color	src/syntax.c	/^highlight_color(id, what, modec)$/;"	f
highlight_exists	src/syntax.c	/^highlight_exists(name)$/;"	f
highlight_ga	src/syntax.c	/^static garray_T highlight_ga;	\/* highlight groups for 'highlight' option *\/$/;"	v	file:
highlight_gui_color_rgb	src/syntax.c	/^highlight_gui_color_rgb(id, fg)$/;"	f
highlight_gui_started	src/syntax.c	/^highlight_gui_started()$/;"	f
highlight_has_attr	src/syntax.c	/^highlight_has_attr(id, flag, modec)$/;"	f
highlight_init_both	src/syntax.c	/^static char *(highlight_init_both[]) =$/;"	v	file:
highlight_init_dark	src/syntax.c	/^static char *(highlight_init_dark[]) =$/;"	v	file:
highlight_init_light	src/syntax.c	/^static char *(highlight_init_light[]) =$/;"	v	file:
highlight_list	src/syntax.c	/^highlight_list()$/;"	f	file:
highlight_list	src/syntax.c	/^static void highlight_list __ARGS((void));$/;"	p	file:	signature:(void)
highlight_list_arg	src/syntax.c	/^highlight_list_arg(id, didh, type, iarg, sarg, name)$/;"	f	file:
highlight_list_arg	src/syntax.c	/^static int highlight_list_arg __ARGS((int id, int didh, int type, int iarg, char_u *sarg, char *name));$/;"	p	file:	signature:(int id, int didh, int type, int iarg, char_u *sarg, char *name)
highlight_list_one	src/syntax.c	/^highlight_list_one(id)$/;"	f	file:
highlight_list_one	src/syntax.c	/^static void highlight_list_one __ARGS((int id));$/;"	p	file:	signature:(int id)
highlight_list_two	src/syntax.c	/^highlight_list_two(cnt, attr)$/;"	f	file:
highlight_list_two	src/syntax.c	/^static void highlight_list_two __ARGS((int cnt, int attr));$/;"	p	file:	signature:(int cnt, int attr)
highlight_mask	src/gui.h	/^    int		highlight_mask;	    \/* Highlight attribute mask *\/$/;"	m	struct:Gui	access:public
highlight_match	src/globals.h	/^EXTERN int	highlight_match INIT(= FALSE);	\/* show search match pos *\/$/;"	v
highlight_pixmap	src/gui_xmebwp.h	/^    Pixmap highlight_pixmap;$/;"	m	struct:_XmEnhancedButtonPart	access:public
highlight_stlnc	src/globals.h	/^EXTERN int	highlight_stlnc[9];		\/* On top of user *\/$/;"	v
highlight_types	runtime/syntax/spup.vim	/^    let highlight_types = 1$/;"	v
highlight_user	src/globals.h	/^EXTERN int	highlight_user[9];		\/* User[1-9] attributes *\/$/;"	v
highlighttest	runtime/syntax/hitest.vim	/^aug highlighttest$/;"	a
hinst	src/gui_w32.c	/^	HINSTANCE hinst;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
hinst	src/gui_w32.c	/^    HINSTANCE	hinst;$/;"	m	struct:tagNMTTDISPINFOA	file:	access:public
hinst	src/gui_w32.c	/^    HINSTANCE	hinst;$/;"	m	struct:tagNMTTDISPINFOW	file:	access:public
hinst	src/gui_w32.c	/^    HINSTANCE  hinst;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:	access:public
hinstLua	src/if_lua.c	/^static HANDLE hinstLua = NULL;$/;"	v	file:
hinstPy3	src/if_python3.c	/^static HINSTANCE hinstPy3 = 0; \/* Instance of python.dll *\/$/;"	v	file:
hinstPython	src/if_python.c	/^static HINSTANCE hinstPython = 0; \/* Instance of python.dll *\/$/;"	v	file:
hinstRuby	src/if_ruby.c	/^static HINSTANCE hinstRuby = 0; \/* Instance of ruby.dll *\/$/;"	v	file:
hisidx	src/ex_getln.c	/^static int	hisidx[HIST_COUNT] = {-1, -1, -1, -1, -1};  \/* lastused entry *\/$/;"	v	file:
hislen	src/ex_getln.c	/^static int	hislen = 0;		\/* actual length of history tables *\/$/;"	v	file:
hisnum	src/ex_getln.c	/^    int		hisnum;		\/* identifying number *\/$/;"	m	struct:hist_entry	file:	access:public
hisnum	src/ex_getln.c	/^static int	hisnum[HIST_COUNT] = {0, 0, 0, 0, 0};$/;"	v	file:
hisstr	src/ex_getln.c	/^    char_u	*hisstr;	\/* actual entry, separator char after the NUL *\/$/;"	m	struct:hist_entry	file:	access:public
hist_char2type	src/ex_getln.c	/^hist_char2type(c)$/;"	f	file:
hist_char2type	src/ex_getln.c	/^static int	hist_char2type __ARGS((int c));$/;"	p	file:	signature:(int c)
hist_entry	src/ex_getln.c	/^typedef struct hist_entry$/;"	s	file:
hist_entry::hisnum	src/ex_getln.c	/^    int		hisnum;		\/* identifying number *\/$/;"	m	struct:hist_entry	file:	access:public
hist_entry::hisstr	src/ex_getln.c	/^    char_u	*hisstr;	\/* actual entry, separator char after the NUL *\/$/;"	m	struct:hist_entry	file:	access:public
hist_type2char	src/ex_getln.c	/^hist_type2char(type, use_question)$/;"	f	file:
hist_type2char	src/ex_getln.c	/^static int	hist_type2char __ARGS((int type, int use_question));$/;"	p	file:	signature:(int type, int use_question)
histentry_T	src/ex_getln.c	/^} histentry_T;$/;"	t	typeref:struct:hist_entry	file:
history	src/ex_getln.c	/^static histentry_T *(history[HIST_COUNT]) = {NULL, NULL, NULL, NULL, NULL};$/;"	v	file:
history_names	src/ex_getln.c	/^static char *(history_names[]) =$/;"	v	file:
hit_return_msg	src/message.c	/^hit_return_msg()$/;"	f	file:
hit_return_msg	src/message.c	/^static void hit_return_msg __ARGS((void));$/;"	p	file:	signature:(void)
hkmap	src/edit.c	/^hkmap(c)$/;"	f
hl	src/structs.h	/^    match_T	hl;	    \/* struct for doing the actual highlighting *\/$/;"	m	struct:matchitem	access:public
hl_attr	src/vim.h	1656;"	d
hl_attr_table	src/syntax.c	/^static int hl_attr_table[] =$/;"	v	file:
hl_combine_attr	src/syntax.c	/^hl_combine_attr(char_attr, prim_attr)$/;"	f
hl_do_font	src/syntax.c	/^hl_do_font(idx, arg, do_normal, do_menu, do_tooltip)$/;"	f	file:
hl_do_font	src/syntax.c	/^static void hl_do_font __ARGS((int idx, char_u *arg, int do_normal, int do_menu, int do_tooltip));$/;"	p	file:	signature:(int idx, char_u *arg, int do_normal, int do_menu, int do_tooltip)
hl_get_font_name	src/syntax.c	/^hl_get_font_name()$/;"	f
hl_group	src/syntax.c	/^struct hl_group$/;"	s	file:
hl_group::sg_cterm	src/syntax.c	/^    int		sg_cterm;	\/* "cterm=" highlighting attr *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_cterm_attr	src/syntax.c	/^    int		sg_cterm_attr;	\/* Screen attr for color term mode *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_cterm_bg	src/syntax.c	/^    int		sg_cterm_bg;	\/* terminal bg color number + 1 *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_cterm_bold	src/syntax.c	/^    int		sg_cterm_bold;	\/* bold attr was set for light color *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_cterm_fg	src/syntax.c	/^    int		sg_cterm_fg;	\/* terminal fg color number + 1 *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_font	src/syntax.c	/^    GuiFont	sg_font;	\/* GUI font handle *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_font_name	src/syntax.c	/^    char_u	*sg_font_name;  \/* GUI font or fontset name *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_fontset	src/syntax.c	/^    GuiFontset	sg_fontset;	\/* GUI fontset handle *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_gui	src/syntax.c	/^    int		sg_gui;		\/* "gui=" highlighting attributes *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_gui_attr	src/syntax.c	/^    int		sg_gui_attr;    \/* Screen attr for GUI mode *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_gui_bg	src/syntax.c	/^    guicolor_T	sg_gui_bg;	\/* GUI background color handle *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_gui_bg_name	src/syntax.c	/^    char_u	*sg_gui_bg_name;\/* GUI background color name *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_gui_fg	src/syntax.c	/^    guicolor_T	sg_gui_fg;	\/* GUI foreground color handle *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_gui_fg_name	src/syntax.c	/^    char_u	*sg_gui_fg_name;\/* GUI foreground color name *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_gui_sp	src/syntax.c	/^    guicolor_T	sg_gui_sp;	\/* GUI special color handle *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_gui_sp_name	src/syntax.c	/^    char_u	*sg_gui_sp_name;\/* GUI special color name *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_link	src/syntax.c	/^    int		sg_link;	\/* link to this highlight group ID *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_name	src/syntax.c	/^    char_u	*sg_name;	\/* highlight group name *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_name_u	src/syntax.c	/^    char_u	*sg_name_u;	\/* uppercase of sg_name *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_scriptID	src/syntax.c	/^    scid_T	sg_scriptID;	\/* script in which the group was last set *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_set	src/syntax.c	/^    int		sg_set;		\/* combination of SG_* flags *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_start	src/syntax.c	/^    char_u	*sg_start;	\/* terminal string for start highl *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_stop	src/syntax.c	/^    char_u	*sg_stop;	\/* terminal string for stop highl *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_term	src/syntax.c	/^    int		sg_term;	\/* "term=" highlighting attributes *\/$/;"	m	struct:hl_group	file:	access:public
hl_group::sg_term_attr	src/syntax.c	/^    int		sg_term_attr;	\/* Screen attr for term mode *\/$/;"	m	struct:hl_group	file:	access:public
hl_has_settings	src/syntax.c	/^hl_has_settings(idx, check_link)$/;"	f	file:
hl_has_settings	src/syntax.c	/^static int hl_has_settings __ARGS((int idx, int check_link));$/;"	p	file:	signature:(int idx, int check_link)
hl_name_table	src/syntax.c	/^static char *(hl_name_table[]) =$/;"	v	file:
hl_set_bg_color_name	src/syntax.c	/^hl_set_bg_color_name(name)$/;"	f
hl_set_fg_color_name	src/syntax.c	/^hl_set_fg_color_name(name)$/;"	f
hl_set_font_name	src/syntax.c	/^hl_set_font_name(font_name)$/;"	f
hlf_T	src/vim.h	/^} hlf_T;$/;"	t	typeref:enum:__anon33
hlg_id	src/structs.h	/^    int		hlg_id;	    \/* highlight group ID *\/$/;"	m	struct:matchitem	access:public
hold_gui_events	src/globals.h	/^EXTERN volatile int hold_gui_events INIT(= 0);$/;"	v
home_replace	src/misc1.c	/^home_replace(buf, src, dst, dstlen, one)$/;"	f
home_replace_save	src/misc1.c	/^home_replace_save(buf, src)$/;"	f
homedir	src/misc1.c	/^static char_u	*homedir = NULL;$/;"	v	file:
hostname	runtime/ftplugin/changelog.vim	/^  function! s:hostname()$/;"	f
hpux	src/pty.c	105;"	d	file:
hres	src/GvimExt/gvimext.cpp	/^HRESULT hres = 0;$/;"	v
ht_array	src/structs.h	/^    hashitem_T	*ht_array;	\/* points to the array, allocated when it's$/;"	m	struct:hashtable_S	access:public
ht_error	src/structs.h	/^    int		ht_error;	\/* when set growing failed, can't add more$/;"	m	struct:hashtable_S	access:public
ht_filled	src/structs.h	/^    long_u	ht_filled;	\/* number of items used + removed *\/$/;"	m	struct:hashtable_S	access:public
ht_locked	src/structs.h	/^    int		ht_locked;	\/* counter for hash_lock() *\/$/;"	m	struct:hashtable_S	access:public
ht_mask	src/structs.h	/^    long_u	ht_mask;	\/* mask used for hash value (nr of items in$/;"	m	struct:hashtable_S	access:public
ht_smallarray	src/structs.h	/^    hashitem_T	ht_smallarray[HT_INIT_SIZE];   \/* initial array *\/$/;"	m	struct:hashtable_S	access:public
ht_used	src/structs.h	/^    long_u	ht_used;	\/* number of items used *\/$/;"	m	struct:hashtable_S	access:public
html_atom	src/gui_gtk_x11.c	/^static GdkAtom html_atom = GDK_NONE;$/;"	v	file:
html_no_rendering	runtime/syntax/spyce.vim	/^let html_no_rendering = 1    " do not render <b>,<i>, etc...$/;"	v
htmlcomplete#CheckDoctype	runtime/autoload/htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
htmlcomplete#CompleteTags	runtime/autoload/htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#LoadData	runtime/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
htonl2	src/blowfish.c	369;"	d	file:
htonl2	src/blowfish.c	373;"	d	file:
http	runtime/tutor/tutor.pl	/^	http:\/\/helion.pl\/ksiazki\/viedyt.htm$/;"	l
http	runtime/tutor/tutor.pl	/^	http:\/\/helion.pl\/ksiazki\/vilek.htm$/;"	l
huntype	src/xxd/xxd.c	/^huntype(fpi, fpo, fperr, pname, cols, hextype, base_off)$/;"	f	file:
huntype	src/xxd/xxd.c	/^static int huntype __P((FILE *, FILE *, FILE *, char *, int, int, long));$/;"	p	file:	signature:(FILE *, FILE *, FILE *, char *, int, int, long)
hwnd	src/gui_w32.c	/^	HWND hwnd;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
hwnd	src/os_mswin.c	/^    HWND hwnd;$/;"	m	struct:server_id	file:	access:public
i	runtime/ftplugin/html.vim	/^        let i += 1$/;"	v
i	runtime/ftplugin/html.vim	/^    let i = 1$/;"	v
i	runtime/syntax/xpm.vim	/^   let i = i + 1$/;"	v
i	runtime/syntax/xpm.vim	/^let i      = 1$/;"	v
i	runtime/syntax/xpm2.vim	/^    let i = i + 1$/;"	v
i	runtime/syntax/xpm2.vim	/^  let i      = 1$/;"	v
i	src/testdir/test49.vim	/^	let i = i + 1$/;"	v
i	src/testdir/test49.vim	/^    let i = 0$/;"	v
iBitmap	src/vimtbar.h	/^    int  iBitmap;	 \/\/ index into bitmap of this button's picture$/;"	m	struct:tagTBBUTTON	access:public
iceconn	src/os_unix.c	/^    IceConn iceconn;	    \/* The ICE connection ID *\/$/;"	m	struct:__anon65	file:	access:public
icon_builtin	src/structs.h	/^    int		icon_builtin;	    \/* icon names is BuiltIn{nr} *\/$/;"	m	struct:VimMenu	access:public
icon_link_names	src/dosinst.h	/^char *(icon_link_names[ICON_COUNT]) =$/;"	v
icon_minlines	runtime/syntax/icon.vim	/^  let icon_minlines = 15$/;"	v
icon_names	src/dosinst.h	/^char *(icon_names[ICON_COUNT]) =$/;"	v
icon_size_changed_foreach	src/gui_gtk_x11.c	/^icon_size_changed_foreach(GtkWidget *widget, gpointer user_data)$/;"	f	file:	signature:(GtkWidget *widget, gpointer user_data)
iconfile	src/structs.h	/^    char_u	*iconfile;	    \/* name of file for icon or NULL *\/$/;"	m	struct:VimMenu	access:public
iconidx	src/structs.h	/^    int		iconidx;	    \/* icon index (-1 if not set) *\/$/;"	m	struct:VimMenu	access:public
iconv	src/globals.h	/^EXTERN size_t (*iconv) (iconv_t cd, const char **inbuf, size_t *inbytesleft, char **outbuf, size_t *outbytesleft);$/;"	v
iconv_close	src/globals.h	/^EXTERN int (*iconv_close) (iconv_t cd);$/;"	v
iconv_enabled	src/mbyte.c	/^iconv_enabled(verbose)$/;"	f
iconv_end	src/mbyte.c	/^iconv_end()$/;"	f
iconv_errno	src/globals.h	/^EXTERN int* (*iconv_errno) (void);$/;"	v
iconv_open	src/globals.h	/^EXTERN iconv_t (*iconv_open) (const char *tocode, const char *fromcode);$/;"	v
iconv_string	src/mbyte.c	/^iconv_string(vcp, str, slen, unconvlenp, resultlenp)$/;"	f	file:
iconv_string	src/mbyte.c	/^static char_u *iconv_string __ARGS((vimconv_T *vcp, char_u *str, int slen, int *unconvlenp, int *resultlenp));$/;"	p	file:	signature:(vimconv_T *vcp, char_u *str, int slen, int *unconvlenp, int *resultlenp)
iconv_t	src/structs.h	/^typedef struct _iconv_t *iconv_t;$/;"	t	typeref:struct:_iconv_t
iconv_t	src/structs.h	/^typedef void *iconv_t;$/;"	t
iconvctl	src/globals.h	/^EXTERN int (*iconvctl) (iconv_t cd, int request, void *argument);$/;"	v
id	src/gui.h	/^    ControlHandle id;		\/* A handle to the scrollbar *\/$/;"	m	struct:GuiScrollbar	access:public
id	src/gui.h	/^    GtkWidget *id;		\/* Id of real scroll bar *\/$/;"	m	struct:GuiScrollbar	access:public
id	src/gui.h	/^    HWND	id;		\/* Id of real scroll bar *\/$/;"	m	struct:GuiScrollbar	access:public
id	src/gui.h	/^    PtWidget_t	*id;$/;"	m	struct:GuiScrollbar	access:public
id	src/gui.h	/^    Widget	id;		\/* Id of real scroll bar *\/$/;"	m	struct:GuiScrollbar	access:public
id	src/gui.h	/^    int		id;		\/* Window handle of scrollbar window *\/$/;"	m	struct:GuiScrollbar	access:public
id	src/gui_motif.c	/^    int	    id;$/;"	m	struct:dialog_callback_arg	file:	access:public
id	src/if_xcmdsrv.c	/^    Window  id;$/;"	m	struct:ServerReply	file:	access:public
id	src/structs.h	/^    GtkWidget	*id;		    \/* Manage this to enable item *\/$/;"	m	struct:VimMenu	access:public
id	src/structs.h	/^    PtWidget_t	*id;$/;"	m	struct:VimMenu	access:public
id	src/structs.h	/^    UINT	id;		    \/* Id of menu item *\/$/;"	m	struct:VimMenu	access:public
id	src/structs.h	/^    Widget	id;		    \/* Manage this to enable item *\/$/;"	m	struct:VimMenu	access:public
id	src/structs.h	/^    int		*id;		    \/* Not used, but gui.c needs it *\/$/;"	m	struct:VimMenu	access:public
id	src/structs.h	/^    int		id;		\/* highlight group ID *\/$/;"	m	struct:cursor_entry	access:public
id	src/structs.h	/^    int		id;		\/* unique identifier for each placed sign *\/$/;"	m	struct:signlist	access:public
id	src/structs.h	/^    int		id;	    \/* match ID *\/$/;"	m	struct:matchitem	access:public
id	src/structs.h	/^    short	id;		\/* highlight group ID of item *\/$/;"	m	struct:sp_syn	access:public
idCommand	src/vimtbar.h	/^    int  idCommand;	 \/\/ WM_COMMAND menu ID that this button sends$/;"	m	struct:tagTBBUTTON	access:public
id_lm	src/structs.h	/^    int		id_lm;		\/* highlight group ID for :lmap mode *\/$/;"	m	struct:cursor_entry	access:public
ident	src/gui.h	/^    long	ident;		\/* Unique identifier for each scrollbar *\/$/;"	m	struct:GuiScrollbar	access:public
idopt_T	src/option.c	/^} idopt_T;$/;"	t	typeref:enum:__anon1	file:
idx	src/gui_mac.c	/^    short   idx;$/;"	m	struct:__anon130	file:	access:public
idx_T	src/spell.c	/^typedef int idx_T;$/;"	t	file:
idx_T	src/spell.c	/^typedef long idx_T;$/;"	t	file:
if_already	runtime/doc/makehtml.awk	/^function if_already() {$/;"	f
if_level	src/ex_docmd.c	/^static int	if_level = 0;		\/* depth in :if *\/$/;"	v	file:
ignore_enter	src/gui_gtk.c	/^    int		ignore_enter;	    \/* no default button, ignore "Enter" *\/$/;"	m	struct:_DialogInfo	file:	access:public
ignore_script	src/globals.h	/^EXTERN int	ignore_script INIT(= FALSE);  \/* ignore script input *\/$/;"	v
ignore_tabline_evt	src/gui_gtk_x11.c	/^static int ignore_tabline_evt = FALSE;$/;"	v	file:
ignorecase	src/search.c	/^ignorecase(pat)$/;"	f
ignored	src/globals.h	/^EXTERN int ignored;$/;"	v
ignoredp	src/globals.h	/^EXTERN char *ignoredp;$/;"	v
illegal_char	src/option.c	/^illegal_char(errbuf, c)$/;"	f	file:
illegal_char	src/option.c	/^static char_u *illegal_char __ARGS((char_u *, int));$/;"	p	file:	signature:(char_u *, int)
illegal_slash	src/misc2.c	/^illegal_slash(name)$/;"	f
im_activatekey_keyval	src/mbyte.c	/^static unsigned int  im_activatekey_keyval = GDK_VoidSymbol;$/;"	v	file:
im_activatekey_state	src/mbyte.c	/^static unsigned int  im_activatekey_state  = 0;$/;"	v	file:
im_add_to_input	src/mbyte.c	/^im_add_to_input(char_u *str, int len)$/;"	f	file:	signature:(char_u *str, int len)
im_commit_cb	src/mbyte.c	/^im_commit_cb(GtkIMContext *context UNUSED,$/;"	f	file:	signature:(GtkIMContext *context UNUSED, const gchar *str, gpointer data UNUSED)
im_commit_handler_id	src/mbyte.c	/^static unsigned long im_commit_handler_id  = 0;$/;"	v	file:
im_correct_cursor	src/mbyte.c	/^im_correct_cursor(int num_move_back)$/;"	f	file:	signature:(int num_move_back)
im_delete_preedit	src/mbyte.c	/^im_delete_preedit(void)$/;"	f	file:	signature:(void)
im_get_feedback_attr	src/mbyte.c	/^im_get_feedback_attr(int col)$/;"	f	signature:(int col)
im_get_status	src/gui_mac.c	/^im_get_status(void)$/;"	f	signature:(void)
im_get_status	src/gui_w32.c	/^im_get_status()$/;"	f
im_get_status	src/hangulin.c	/^im_get_status()$/;"	f
im_get_status	src/mbyte.c	/^im_get_status()$/;"	f
im_get_status	src/mbyte.c	/^im_get_status(void)$/;"	f	signature:(void)
im_initialized	src/gui_mac.c	/^static int		     im_initialized = 0;$/;"	v	file:
im_is_active	src/gui_mac.c	/^static int im_is_active = FALSE;$/;"	v	file:
im_is_active	src/mbyte.c	/^static int im_is_active	       = FALSE;	\/* IM is enabled for current mode    *\/$/;"	v	file:
im_is_preediting	src/mbyte.c	/^im_is_preediting()$/;"	f
im_on_window_switch	src/gui_mac.c	/^im_on_window_switch(int active)$/;"	f	file:	signature:(int active)
im_on_window_switch	src/gui_mac.c	/^static void im_on_window_switch(int active);$/;"	p	file:	signature:(int active)
im_preedit_changed_cb	src/mbyte.c	/^im_preedit_changed_cb(GtkIMContext *context, gpointer data UNUSED)$/;"	f	file:	signature:(GtkIMContext *context, gpointer data UNUSED)
im_preedit_cursor	src/mbyte.c	/^static int im_preedit_cursor   = 0;	\/* cursor offset in characters       *\/$/;"	v	file:
im_preedit_end_cb	src/mbyte.c	/^im_preedit_end_cb(GtkIMContext *context UNUSED, gpointer data UNUSED)$/;"	f	file:	signature:(GtkIMContext *context UNUSED, gpointer data UNUSED)
im_preedit_start_cb	src/mbyte.c	/^im_preedit_start_cb(GtkIMContext *context UNUSED, gpointer data UNUSED)$/;"	f	file:	signature:(GtkIMContext *context UNUSED, gpointer data UNUSED)
im_preedit_trailing	src/mbyte.c	/^static int im_preedit_trailing = 0;	\/* number of characters after cursor *\/$/;"	v	file:
im_save_status	src/ui.c	/^im_save_status(psave)$/;"	f
im_set_active	src/gui_mac.c	/^im_set_active(int active)$/;"	f	signature:(int active)
im_set_active	src/gui_w32.c	/^im_set_active(int active)$/;"	f	signature:(int active)
im_set_active	src/mbyte.c	/^im_set_active(active)$/;"	f
im_set_active	src/mbyte.c	/^im_set_active(int active)$/;"	f	signature:(int active)
im_set_font	src/gui_w32.c	/^im_set_font(LOGFONT *lf)$/;"	f	signature:(LOGFONT *lf)
im_set_position	src/gui_mac.c	/^im_set_position(int row, int col)$/;"	f	signature:(int row, int col)
im_set_position	src/gui_w32.c	/^im_set_position(int row, int col)$/;"	f	signature:(int row, int col)
im_set_position	src/mbyte.c	/^im_set_position(int row, int col)$/;"	f	signature:(int row, int col)
im_set_position	src/mbyte.c	/^im_set_position(row, col)$/;"	f
im_show_info	src/mbyte.c	/^im_show_info(void)$/;"	f	file:	signature:(void)
im_shutdown	src/mbyte.c	/^im_shutdown(void)$/;"	f	signature:(void)
im_string_to_keyval	src/mbyte.c	/^im_string_to_keyval(const char *str, unsigned int *keyval, unsigned int *state)$/;"	f	file:	signature:(const char *str, unsigned int *keyval, unsigned int *state)
im_synthesize_keypress	src/mbyte.c	/^im_synthesize_keypress(unsigned int keyval, unsigned int state)$/;"	f	file:	signature:(unsigned int keyval, unsigned int state)
im_xim_isvalid_imactivate	src/mbyte.c	/^im_xim_isvalid_imactivate(void)$/;"	f	signature:(void)
image	src/structs.h	/^    Pixmap	image;		    \/* Toolbar image *\/$/;"	m	struct:VimMenu	access:public
iminfo	Makefile	/^	echo "set notitle noicon nocp nomodeline viminfo=" >no_title.vim$/;"	m
imp_PyExc_AttributeError	src/if_python.c	/^static PyObject *imp_PyExc_AttributeError;$/;"	v	file:
imp_PyExc_IndexError	src/if_python.c	/^static PyObject *imp_PyExc_IndexError;$/;"	v	file:
imp_PyExc_KeyboardInterrupt	src/if_python.c	/^static PyObject *imp_PyExc_KeyboardInterrupt;$/;"	v	file:
imp_PyExc_TypeError	src/if_python.c	/^static PyObject *imp_PyExc_TypeError;$/;"	v	file:
imp_PyExc_ValueError	src/if_python.c	/^static PyObject *imp_PyExc_ValueError;$/;"	v	file:
inAtomic	src/netbeans.c	/^static int inAtomic = 0;$/;"	v	file:
in_cinkeys	src/edit.c	/^in_cinkeys(keytyped, when, line_is_empty)$/;"	f
in_focus	src/gui.h	/^    int		in_focus;	    \/* Vim has input focus *\/$/;"	m	struct:Gui	access:public
in_history	src/ex_getln.c	/^in_history(type, str, move_to_front)$/;"	f	file:
in_history	src/ex_getln.c	/^static int	in_history __ARGS((int, char_u *, int));$/;"	p	file:	signature:(int, char_u *, int)
in_html_tag	src/search.c	/^in_html_tag(end_tag)$/;"	f	file:
in_html_tag	src/search.c	/^static int in_html_tag __ARGS((int));$/;"	p	file:	signature:(int)
in_id_list	src/syntax.c	/^in_id_list(cur_si, list, ssp, contained)$/;"	f	file:
in_id_list	src/syntax.c	/^static int in_id_list __ARGS((stateitem_T *item, short *cont_list, struct sp_syn *ssp, int contained));$/;"	p	file:	signature:(stateitem_T *item, short *cont_list, struct sp_syn *ssp, int contained)
in_mch_delay	src/os_unix.c	/^static volatile int in_mch_delay = FALSE;    \/* sleeping in mch_delay() *\/$/;"	v	file:
in_pixels	src/gui_xmdlg.c	/^    Boolean	in_pixels;	\/* toggle state - size in pixels  *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
in_use	src/gui.h	/^    int		in_use;		    \/* Is the GUI being used? *\/$/;"	m	struct:Gui	access:public
in_win_border	src/charset.c	/^in_win_border(wp, vcol)$/;"	f
inbuf	src/ui.c	/^static char_u	inbuf[INBUFLEN + MAX_KEY_CODE_LEN];$/;"	v	file:
inbufcount	src/ui.c	/^static int	inbufcount = 0;	    \/* number of chars in inbuf[] *\/$/;"	v	file:
inc	src/misc2.c	/^inc(lp)$/;"	f
inc_cRefThisDLL	src/GvimExt/gvimext.cpp	/^inc_cRefThisDLL()$/;"	f	file:	signature:()
inc_cursor	src/misc2.c	/^inc_cursor()$/;"	f
inc_msg_scrolled	src/message.c	/^inc_msg_scrolled()$/;"	f	file:
inc_msg_scrolled	src/message.c	/^static void inc_msg_scrolled __ARGS((void));$/;"	p	file:	signature:(void)
inc_tag	src/structs.h	/^    int		inc_tag;	\/* ":syn include" unique tag *\/$/;"	m	struct:sp_syn	access:public
inchar	src/getchar.c	/^inchar(buf, maxlen, wait_time, tb_change_cnt)$/;"	f
inchar_time	src/ex_cmds2.c	/^static proftime_T inchar_time;$/;"	v	file:
incl	src/misc2.c	/^incl(lp)$/;"	f
include_default	src/syntax.c	/^static int include_default = 0;	\/* when 1 include "default" *\/$/;"	v	file:
include_groups	src/fileio.c	/^static int include_groups = FALSE;$/;"	v	file:
include_link	src/syntax.c	/^static int include_link = 0;	\/* when 2 include "link" and "clear" *\/$/;"	v	file:
include_none	src/syntax.c	/^static int include_none = 0;	\/* when 1 include "None" *\/$/;"	v	file:
include_syntax	runtime/syntax/context.vim	/^function! s:include_syntax(name, group)$/;"	f
included_patches	src/version.c	/^static int included_patches[] =$/;"	v	file:
inclusive	src/structs.h	/^    int		inclusive;	\/* TRUE if char motion is inclusive (only$/;"	m	struct:oparg_S	access:public
increase	runtime/ftplugin/cobol.vim	/^function! s:increase(...)$/;"	f
ind_hash_comment	src/misc1.c	/^static int	ind_hash_comment = 0;   \/* # starts a comment *\/$/;"	v	file:
indent_to_innermost_parentheses	runtime/indent/dtd.vim	/^function s:indent_to_innermost_parentheses(line, end)$/;"	f
indent_value	runtime/indent/sh.vim	/^function! s:indent_value(option)$/;"	f
index	src/os_vms.c	/^    ITEM	index;$/;"	m	struct:__anon80	file:	access:public
index	src/spell.c	/^	int	index;		\/* index in written nodes (valid after first$/;"	m	union:wordnode_S::__anon15	file:	access:public
indir	src/option.c	/^    idopt_T	indir;		\/* global option: PV_NONE;$/;"	m	struct:vimoption	file:	access:public
infile	src/testdir/test49.vim	/^	let infile = tempname()$/;"	v
info	src/dehqx.py	/^info = conv.FInfo$/;"	v
info_message	src/globals.h	/^EXTERN int	info_message INIT(= FALSE); \/* printing informative message *\/$/;"	v
info_pointer	src/structs.h	/^typedef struct info_pointer$/;"	s
info_pointer::ip_bnum	src/structs.h	/^    blocknr_T	ip_bnum;	\/* block number *\/$/;"	m	struct:info_pointer	access:public
info_pointer::ip_high	src/structs.h	/^    linenr_T	ip_high;	\/* highest lnum in this block *\/$/;"	m	struct:info_pointer	access:public
info_pointer::ip_index	src/structs.h	/^    int		ip_index;	\/* index for block with current lnum *\/$/;"	m	struct:info_pointer	access:public
info_pointer::ip_low	src/structs.h	/^    linenr_T	ip_low;		\/* lowest lnum in this block *\/$/;"	m	struct:info_pointer	access:public
infoptr_T	src/structs.h	/^} infoptr_T;	\/* block\/index pair *\/$/;"	t	typeref:struct:info_pointer
inindent	src/misc1.c	/^inindent(extra)$/;"	f
initDone	src/netbeans.c	/^    unsigned int	 initDone:1;$/;"	m	struct:nbbuf_struct	file:	access:public
init_bat_choice	src/dosinst.c	/^init_bat_choice(int target)$/;"	f	file:	signature:(int target)
init_bat_choices	src/dosinst.c	/^init_bat_choices(void)$/;"	f	file:	signature:(void)
init_chartab	src/charset.c	/^init_chartab()$/;"	f
init_class_tab	src/regexp.c	/^init_class_tab()$/;"	f	file:
init_class_tab	src/regexp.c	/^static void	init_class_tab __ARGS((void));$/;"	p	file:	signature:(void)
init_cmds	src/if_sniff.c	/^static char *init_cmds[]= {$/;"	v	file:
init_directories_choice	src/dosinst.c	/^init_directories_choice(void)$/;"	f	file:	signature:(void)
init_exn_catching_apply	src/if_mzsch.c	/^init_exn_catching_apply(void)$/;"	f	file:	signature:(void)
init_exn_catching_apply	src/if_mzsch.c	/^static void init_exn_catching_apply(void);$/;"	p	file:	signature:(void)
init_gui_options	src/option.c	/^init_gui_options()$/;"	f
init_highlight	src/syntax.c	/^init_highlight(both, reset)$/;"	f
init_history	src/ex_getln.c	/^init_history()$/;"	f
init_homedir	src/misc1.c	/^init_homedir()$/;"	f
init_locale	src/main.c	/^init_locale()$/;"	f	file:
init_locale	src/main.c	/^static void init_locale __ARGS((void));$/;"	p	file:	signature:(void)
init_logfont	src/os_mswin.c	/^init_logfont(LOGFONT *lf)$/;"	f	file:	signature:(LOGFONT *lf)
init_mappings	src/getchar.c	/^init_mappings()$/;"	f
init_mouse_wheel	src/gui_w32.c	/^init_mouse_wheel(void)$/;"	f	file:	signature:(void)
init_normal_cmds	src/normal.c	/^init_normal_cmds()$/;"	f
init_openwith_choice	src/dosinst.c	/^init_openwith_choice(void)$/;"	f	file:	signature:(void)
init_popup_choice	src/dosinst.c	/^init_popup_choice(void)$/;"	f	file:	signature:(void)
init_preedit_start_col	src/mbyte.c	/^init_preedit_start_col(void)$/;"	f	file:	signature:(void)
init_search_hl	src/screen.c	/^init_search_hl(wp)$/;"	f	file:
init_search_hl	src/screen.c	/^static void init_search_hl __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
init_shortcut_choices	src/dosinst.c	/^init_shortcut_choices(void)$/;"	f	file:	signature:(void)
init_signal_stack	src/os_unix.c	/^init_signal_stack()$/;"	f	file:
init_signal_stack	src/os_unix.c	/^static void init_signal_stack __ARGS((void));$/;"	p	file:	signature:(void)
init_spell_chartab	src/spell.c	/^init_spell_chartab()$/;"	f
init_spellfile	src/spell.c	/^init_spellfile()$/;"	f	file:
init_spellfile	src/spell.c	/^static void init_spellfile __ARGS((void));$/;"	p	file:	signature:(void)
init_startmenu_choice	src/dosinst.c	/^init_startmenu_choice(void)$/;"	f	file:	signature:(void)
init_structs	src/if_python.c	/^init_structs(void)$/;"	f	file:	signature:(void)
init_structs	src/if_python.c	/^static void init_structs(void);$/;"	p	file:	signature:(void)
init_structs	src/if_python3.c	/^init_structs(void)$/;"	f	file:	signature:(void)
init_structs	src/if_python3.c	/^static void init_structs(void);$/;"	p	file:	signature:(void)
init_syl_tab	src/spell.c	/^init_syl_tab(slang)$/;"	f	file:
init_syl_tab	src/spell.c	/^static int init_syl_tab __ARGS((slang_T *slang));$/;"	p	file:	signature:(slang_T *slang)
init_syn_patterns	src/syntax.c	/^init_syn_patterns()$/;"	f	file:
init_syn_patterns	src/syntax.c	/^static void init_syn_patterns __ARGS((void));$/;"	p	file:	signature:(void)
init_tv	src/eval.c	/^init_tv(varp)$/;"	f	file:
init_tv	src/eval.c	/^static void init_tv __ARGS((typval_T *varp));$/;"	p	file:	signature:(typval_T *varp)
init_typebuf	src/getchar.c	/^init_typebuf()$/;"	f	file:
init_typebuf	src/getchar.c	/^static void	init_typebuf __ARGS((void));$/;"	p	file:	signature:(void)
init_var_dict	src/eval.c	/^init_var_dict(dict, dict_var)$/;"	f
init_vimrc_choices	src/dosinst.c	/^init_vimrc_choices(void)$/;"	f	file:	signature:(void)
init_window_hints_state	src/gui_gtk_x11.c	/^static int init_window_hints_state = 0;$/;"	v	file:
init_yank	src/ops.c	/^init_yank()$/;"	f
initchr	src/regexp.c	/^initchr(str)$/;"	f	file:
initchr	src/regexp.c	/^static void	initchr __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
initialFileCmd	src/workshop.c	/^static char	*initialFileCmd;	\/* save command but defer doing it *\/$/;"	v	file:
initialise_findrep	src/gui_w48.c	/^initialise_findrep(char_u *initial_string)$/;"	f	file:	signature:(char_u *initial_string)
initialise_tabline	src/gui_mac.c	/^initialise_tabline(void)$/;"	f	file:	signature:(void)
initialise_tabline	src/gui_mac.c	/^static void initialise_tabline(void);$/;"	p	file:	signature:(void)
initialise_tabline	src/gui_w32.c	/^initialise_tabline(void)$/;"	f	file:	signature:(void)
initialise_tabline	src/gui_w32.c	/^static void initialise_tabline(void);$/;"	p	file:	signature:(void)
initialise_toolbar	src/gui_w16.c	/^initialise_toolbar(void)$/;"	f	file:	signature:(void)
initialise_toolbar	src/gui_w16.c	/^static void initialise_toolbar(void);$/;"	p	file:	signature:(void)
initialise_toolbar	src/gui_w32.c	/^initialise_toolbar(void)$/;"	f	file:	signature:(void)
initialise_toolbar	src/gui_w32.c	/^static void initialise_toolbar(void);$/;"	p	file:	signature:(void)
initialised	src/if_python.c	/^static int initialised = 0;$/;"	v	file:
initialized	src/if_mzsch.c	/^static int initialized = FALSE;$/;"	v	file:
initmap	src/getchar.c	/^static struct initmap$/;"	s	file:
initmap::arg	src/getchar.c	/^    char_u	*arg;$/;"	m	struct:initmap	file:	access:public
initmap::mode	src/getchar.c	/^    int		mode;$/;"	m	struct:initmap	file:	access:public
initmappings	src/getchar.c	/^} initmappings[] =$/;"	v	typeref:struct:initmap	file:
initmaster	src/pty.c	/^initmaster(f)$/;"	f	file:
initmaster	src/pty.c	/^static void initmaster __ARGS((int));$/;"	p	file:	signature:(int)
inmacro	src/search.c	/^inmacro(opt, s)$/;"	f	file:
inmacro	src/search.c	/^static int inmacro __ARGS((char_u *, char_u *));$/;"	p	file:	signature:(char_u *, char_u *)
input	src/dehqx.py	/^input = sys.argv[1]$/;"	v
inputHandler	src/integration.c	/^static XtInputId inputHandler;		\/* Cookie for input *\/$/;"	v	file:
inputHandler	src/netbeans.c	/^static XtInputId inputHandler = (XtInputId)NULL;  \/* Cookie for input *\/$/;"	v	file:
inputHandler	src/netbeans.c	/^static gint inputHandler = 0;		\/* Cookie for input *\/$/;"	v	file:
inputHandler	src/netbeans.c	/^static int  inputHandler = -1;		\/* simply ret.value of WSAAsyncSelect() *\/$/;"	v	file:
input_available	src/getchar.c	/^input_available()$/;"	f
input_conv	src/globals.h	/^EXTERN vimconv_T input_conv;			\/* type of input conversion *\/$/;"	v
input_fn	src/ex_getln.c	/^    int		input_fn;	\/* when TRUE Invoked for input() function *\/$/;"	m	struct:cmdline_info	file:	access:public
input_style	src/mbyte.c	/^static XIMStyle	input_style;$/;"	v	file:
input_timer_cb	src/gui_gtk_x11.c	/^input_timer_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
inputsecret_flag	src/eval.c	/^static int inputsecret_flag = 0;$/;"	v	file:
ins_at_eol	src/globals.h	/^EXTERN int	ins_at_eol INIT(= FALSE); \/* put cursor after eol when$/;"	v
ins_bs	src/edit.c	/^ins_bs(c, mode, inserted_space_p)$/;"	f	file:
ins_bs	src/edit.c	/^static int  ins_bs __ARGS((int c, int mode, int *inserted_space_p));$/;"	p	file:	signature:(int c, int mode, int *inserted_space_p)
ins_bs_one	src/edit.c	/^ins_bs_one(vcolp)$/;"	f	file:
ins_bs_one	src/edit.c	/^static void ins_bs_one __ARGS((colnr_T *vcolp));$/;"	p	file:	signature:(colnr_T *vcolp)
ins_bytes	src/misc1.c	/^ins_bytes(p)$/;"	f
ins_bytes_len	src/misc1.c	/^ins_bytes_len(p, len)$/;"	f
ins_char	src/misc1.c	/^ins_char(c)$/;"	f
ins_char_bytes	src/misc1.c	/^ins_char_bytes(buf, charlen)$/;"	f
ins_char_typebuf	src/getchar.c	/^ins_char_typebuf(c)$/;"	f
ins_compl_accept_char	src/edit.c	/^ins_compl_accept_char(c)$/;"	f	file:
ins_compl_accept_char	src/edit.c	/^static int  ins_compl_accept_char __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_compl_active	src/edit.c	/^ins_compl_active()$/;"	f
ins_compl_add	src/edit.c	/^ins_compl_add(str, len, icase, fname, cptext, cdir, flags, adup)$/;"	f	file:
ins_compl_add	src/edit.c	/^static int ins_compl_add __ARGS((char_u *str, int len, int icase, char_u *fname, char_u **cptext, int cdir, int flags, int adup));$/;"	p	file:	signature:(char_u *str, int len, int icase, char_u *fname, char_u **cptext, int cdir, int flags, int adup)
ins_compl_add_infercase	src/edit.c	/^ins_compl_add_infercase(str, len, icase, fname, dir, flags)$/;"	f
ins_compl_add_list	src/edit.c	/^ins_compl_add_list(list)$/;"	f	file:
ins_compl_add_list	src/edit.c	/^static void ins_compl_add_list __ARGS((list_T *list));$/;"	p	file:	signature:(list_T *list)
ins_compl_add_matches	src/edit.c	/^ins_compl_add_matches(num_matches, matches, icase)$/;"	f	file:
ins_compl_add_matches	src/edit.c	/^static void ins_compl_add_matches __ARGS((int num_matches, char_u **matches, int icase));$/;"	p	file:	signature:(int num_matches, char_u **matches, int icase)
ins_compl_add_tv	src/edit.c	/^ins_compl_add_tv(tv, dir)$/;"	f
ins_compl_addfrommatch	src/edit.c	/^ins_compl_addfrommatch()$/;"	f	file:
ins_compl_addfrommatch	src/edit.c	/^static void ins_compl_addfrommatch __ARGS((void));$/;"	p	file:	signature:(void)
ins_compl_addleader	src/edit.c	/^ins_compl_addleader(c)$/;"	f	file:
ins_compl_addleader	src/edit.c	/^static void ins_compl_addleader __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_compl_bs	src/edit.c	/^ins_compl_bs()$/;"	f	file:
ins_compl_bs	src/edit.c	/^static int  ins_compl_bs __ARGS((void));$/;"	p	file:	signature:(void)
ins_compl_check_keys	src/edit.c	/^ins_compl_check_keys(frequency)$/;"	f
ins_compl_clear	src/edit.c	/^ins_compl_clear()$/;"	f	file:
ins_compl_clear	src/edit.c	/^static void ins_compl_clear __ARGS((void));$/;"	p	file:	signature:(void)
ins_compl_del_pum	src/edit.c	/^ins_compl_del_pum()$/;"	f	file:
ins_compl_del_pum	src/edit.c	/^static void ins_compl_del_pum __ARGS((void));$/;"	p	file:	signature:(void)
ins_compl_delete	src/edit.c	/^ins_compl_delete()$/;"	f	file:
ins_compl_delete	src/edit.c	/^static void ins_compl_delete __ARGS((void));$/;"	p	file:	signature:(void)
ins_compl_dictionaries	src/edit.c	/^ins_compl_dictionaries(dict_start, pat, flags, thesaurus)$/;"	f	file:
ins_compl_dictionaries	src/edit.c	/^static void ins_compl_dictionaries __ARGS((char_u *dict, char_u *pat, int flags, int thesaurus));$/;"	p	file:	signature:(char_u *dict, char_u *pat, int flags, int thesaurus)
ins_compl_equal	src/edit.c	/^ins_compl_equal(match, str, len)$/;"	f	file:
ins_compl_equal	src/edit.c	/^static int  ins_compl_equal __ARGS((compl_T *match, char_u *str, int len));$/;"	p	file:	signature:(compl_T *match, char_u *str, int len)
ins_compl_files	src/edit.c	/^ins_compl_files(count, files, thesaurus, flags, regmatch, buf, dir)$/;"	f	file:
ins_compl_files	src/edit.c	/^static void ins_compl_files __ARGS((int count, char_u **files, int thesaurus, int flags, regmatch_T *regmatch, char_u *buf, int *dir));$/;"	p	file:	signature:(int count, char_u **files, int thesaurus, int flags, regmatch_T *regmatch, char_u *buf, int *dir)
ins_compl_free	src/edit.c	/^ins_compl_free()$/;"	f	file:
ins_compl_free	src/edit.c	/^static void ins_compl_free __ARGS((void));$/;"	p	file:	signature:(void)
ins_compl_get_exp	src/edit.c	/^ins_compl_get_exp(ini)$/;"	f	file:
ins_compl_get_exp	src/edit.c	/^static int  ins_compl_get_exp __ARGS((pos_T *ini));$/;"	p	file:	signature:(pos_T *ini)
ins_compl_insert	src/edit.c	/^ins_compl_insert()$/;"	f	file:
ins_compl_insert	src/edit.c	/^static void ins_compl_insert __ARGS((void));$/;"	p	file:	signature:(void)
ins_compl_key2count	src/edit.c	/^ins_compl_key2count(c)$/;"	f	file:
ins_compl_key2count	src/edit.c	/^static int  ins_compl_key2count __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_compl_key2dir	src/edit.c	/^ins_compl_key2dir(c)$/;"	f	file:
ins_compl_key2dir	src/edit.c	/^static int  ins_compl_key2dir __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_compl_len	src/edit.c	/^ins_compl_len()$/;"	f	file:
ins_compl_len	src/edit.c	/^static int ins_compl_len __ARGS((void));$/;"	p	file:	signature:(void)
ins_compl_longest_match	src/edit.c	/^ins_compl_longest_match(match)$/;"	f	file:
ins_compl_longest_match	src/edit.c	/^static void ins_compl_longest_match __ARGS((compl_T *match));$/;"	p	file:	signature:(compl_T *match)
ins_compl_make_cyclic	src/edit.c	/^ins_compl_make_cyclic()$/;"	f	file:
ins_compl_make_cyclic	src/edit.c	/^static int  ins_compl_make_cyclic __ARGS((void));$/;"	p	file:	signature:(void)
ins_compl_new_leader	src/edit.c	/^ins_compl_new_leader()$/;"	f	file:
ins_compl_new_leader	src/edit.c	/^static void ins_compl_new_leader __ARGS((void));$/;"	p	file:	signature:(void)
ins_compl_next	src/edit.c	/^ins_compl_next(allow_get_expansion, count, insert_match)$/;"	f	file:
ins_compl_next	src/edit.c	/^static int  ins_compl_next __ARGS((int allow_get_expansion, int count, int insert_match));$/;"	p	file:	signature:(int allow_get_expansion, int count, int insert_match)
ins_compl_next_buf	src/edit.c	/^ins_compl_next_buf(buf, flag)$/;"	f	file:
ins_compl_next_buf	src/edit.c	/^static buf_T *ins_compl_next_buf __ARGS((buf_T *buf, int flag));$/;"	p	file:	signature:(buf_T *buf, int flag)
ins_compl_prep	src/edit.c	/^ins_compl_prep(c)$/;"	f	file:
ins_compl_prep	src/edit.c	/^static int  ins_compl_prep __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_compl_pum_key	src/edit.c	/^ins_compl_pum_key(c)$/;"	f	file:
ins_compl_pum_key	src/edit.c	/^static int  ins_compl_pum_key __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_compl_restart	src/edit.c	/^ins_compl_restart()$/;"	f	file:
ins_compl_restart	src/edit.c	/^static void ins_compl_restart __ARGS((void));$/;"	p	file:	signature:(void)
ins_compl_set_original_text	src/edit.c	/^ins_compl_set_original_text(str)$/;"	f	file:
ins_compl_set_original_text	src/edit.c	/^static void ins_compl_set_original_text __ARGS((char_u *str));$/;"	p	file:	signature:(char_u *str)
ins_compl_show_pum	src/edit.c	/^ins_compl_show_pum()$/;"	f
ins_compl_upd_pum	src/edit.c	/^ins_compl_upd_pum()$/;"	f	file:
ins_compl_upd_pum	src/edit.c	/^static void ins_compl_upd_pum __ARGS((void));$/;"	p	file:	signature:(void)
ins_compl_use_match	src/edit.c	/^ins_compl_use_match(c)$/;"	f	file:
ins_compl_use_match	src/edit.c	/^static int  ins_compl_use_match __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_complete	src/edit.c	/^ins_complete(c)$/;"	f	file:
ins_complete	src/edit.c	/^static int  ins_complete __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_copychar	src/edit.c	/^ins_copychar(lnum)$/;"	f	file:
ins_copychar	src/edit.c	/^static int  ins_copychar __ARGS((linenr_T lnum));$/;"	p	file:	signature:(linenr_T lnum)
ins_ctrl_	src/edit.c	/^ins_ctrl_()$/;"	f	file:
ins_ctrl_	src/edit.c	/^static void ins_ctrl_ __ARGS((void));$/;"	p	file:	signature:(void)
ins_ctrl_ey	src/edit.c	/^ins_ctrl_ey(tc)$/;"	f	file:
ins_ctrl_ey	src/edit.c	/^static int  ins_ctrl_ey __ARGS((int tc));$/;"	p	file:	signature:(int tc)
ins_ctrl_g	src/edit.c	/^ins_ctrl_g()$/;"	f	file:
ins_ctrl_g	src/edit.c	/^static void ins_ctrl_g __ARGS((void));$/;"	p	file:	signature:(void)
ins_ctrl_hat	src/edit.c	/^ins_ctrl_hat()$/;"	f	file:
ins_ctrl_hat	src/edit.c	/^static void ins_ctrl_hat __ARGS((void));$/;"	p	file:	signature:(void)
ins_ctrl_o	src/edit.c	/^ins_ctrl_o()$/;"	f	file:
ins_ctrl_o	src/edit.c	/^static void ins_ctrl_o __ARGS((void));$/;"	p	file:	signature:(void)
ins_ctrl_v	src/edit.c	/^ins_ctrl_v()$/;"	f	file:
ins_ctrl_v	src/edit.c	/^static void ins_ctrl_v __ARGS((void));$/;"	p	file:	signature:(void)
ins_ctrl_x	src/edit.c	/^ins_ctrl_x()$/;"	f	file:
ins_ctrl_x	src/edit.c	/^static void ins_ctrl_x __ARGS((void));$/;"	p	file:	signature:(void)
ins_del	src/edit.c	/^ins_del()$/;"	f	file:
ins_del	src/edit.c	/^static void ins_del __ARGS((void));$/;"	p	file:	signature:(void)
ins_digraph	src/edit.c	/^ins_digraph()$/;"	f	file:
ins_digraph	src/edit.c	/^static int  ins_digraph __ARGS((void));$/;"	p	file:	signature:(void)
ins_down	src/edit.c	/^ins_down(startcol)$/;"	f	file:
ins_down	src/edit.c	/^static void ins_down __ARGS((int startcol));$/;"	p	file:	signature:(int startcol)
ins_drop	src/edit.c	/^ins_drop()$/;"	f	file:
ins_drop	src/edit.c	/^static void ins_drop __ARGS((void));$/;"	p	file:	signature:(void)
ins_end	src/edit.c	/^ins_end(c)$/;"	f	file:
ins_end	src/edit.c	/^static void ins_end __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_eol	src/edit.c	/^ins_eol(c)$/;"	f	file:
ins_eol	src/edit.c	/^static int  ins_eol __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_esc	src/edit.c	/^ins_esc(count, cmdchar, nomove)$/;"	f	file:
ins_esc	src/edit.c	/^static int  ins_esc __ARGS((long *count, int cmdchar, int nomove));$/;"	p	file:	signature:(long *count, int cmdchar, int nomove)
ins_home	src/edit.c	/^ins_home(c)$/;"	f	file:
ins_home	src/edit.c	/^static void ins_home __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_horscroll	src/edit.c	/^ins_horscroll()$/;"	f
ins_insert	src/edit.c	/^ins_insert(replaceState)$/;"	f	file:
ins_insert	src/edit.c	/^static void ins_insert __ARGS((int replaceState));$/;"	p	file:	signature:(int replaceState)
ins_left	src/edit.c	/^ins_left()$/;"	f	file:
ins_left	src/edit.c	/^static void ins_left __ARGS((void));$/;"	p	file:	signature:(void)
ins_mouse	src/edit.c	/^ins_mouse(c)$/;"	f	file:
ins_mouse	src/edit.c	/^static void ins_mouse __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_mousescroll	src/edit.c	/^ins_mousescroll(dir)$/;"	f	file:
ins_mousescroll	src/edit.c	/^static void ins_mousescroll __ARGS((int dir));$/;"	p	file:	signature:(int dir)
ins_need_undo	src/edit.c	/^static int	ins_need_undo;		\/* call u_save() before inserting a$/;"	v	file:
ins_pagedown	src/edit.c	/^ins_pagedown()$/;"	f	file:
ins_pagedown	src/edit.c	/^static void ins_pagedown __ARGS((void));$/;"	p	file:	signature:(void)
ins_pageup	src/edit.c	/^ins_pageup()$/;"	f	file:
ins_pageup	src/edit.c	/^static void ins_pageup __ARGS((void));$/;"	p	file:	signature:(void)
ins_redraw	src/edit.c	/^ins_redraw(ready)$/;"	f	file:
ins_redraw	src/edit.c	/^static void ins_redraw __ARGS((int ready));$/;"	p	file:	signature:(int ready)
ins_reg	src/edit.c	/^ins_reg()$/;"	f	file:
ins_reg	src/edit.c	/^static void ins_reg __ARGS((void));$/;"	p	file:	signature:(void)
ins_right	src/edit.c	/^ins_right()$/;"	f	file:
ins_right	src/edit.c	/^static void ins_right __ARGS((void));$/;"	p	file:	signature:(void)
ins_s_left	src/edit.c	/^ins_s_left()$/;"	f	file:
ins_s_left	src/edit.c	/^static void ins_s_left __ARGS((void));$/;"	p	file:	signature:(void)
ins_s_right	src/edit.c	/^ins_s_right()$/;"	f	file:
ins_s_right	src/edit.c	/^static void ins_s_right __ARGS((void));$/;"	p	file:	signature:(void)
ins_scroll	src/edit.c	/^ins_scroll()$/;"	f
ins_shift	src/edit.c	/^ins_shift(c, lastc)$/;"	f	file:
ins_shift	src/edit.c	/^static void ins_shift __ARGS((int c, int lastc));$/;"	p	file:	signature:(int c, int lastc)
ins_start_select	src/edit.c	/^ins_start_select(c)$/;"	f	file:
ins_start_select	src/edit.c	/^static int ins_start_select __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_str	src/misc1.c	/^ins_str(s)$/;"	f
ins_tab	src/edit.c	/^ins_tab()$/;"	f	file:
ins_tab	src/edit.c	/^static int  ins_tab __ARGS((void));$/;"	p	file:	signature:(void)
ins_tabline	src/edit.c	/^ins_tabline(c)$/;"	f	file:
ins_tabline	src/edit.c	/^static void ins_tabline __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_try_si	src/edit.c	/^ins_try_si(c)$/;"	f	file:
ins_try_si	src/edit.c	/^static void ins_try_si __ARGS((int c));$/;"	p	file:	signature:(int c)
ins_typebuf	src/getchar.c	/^ins_typebuf(str, noremap, offset, nottyped, silent)$/;"	f
ins_up	src/edit.c	/^ins_up(startcol)$/;"	f	file:
ins_up	src/edit.c	/^static void ins_up __ARGS((int startcol));$/;"	p	file:	signature:(int startcol)
insecure_flag	src/option.c	/^insecure_flag(opt_idx, opt_flags)$/;"	f	file:
insecure_flag	src/option.c	/^static long_u *insecure_flag __ARGS((int opt_idx, int opt_flags));$/;"	p	file:	signature:(int opt_idx, int opt_flags)
insecure_flag	src/option.c	2996;"	d	file:
insensitive_pixmap	src/gui_xmebwp.h	/^    Pixmap insensitive_pixmap;$/;"	m	struct:_XmEnhancedButtonPart	access:public
insertDone	src/netbeans.c	/^    unsigned int	 insertDone:1;$/;"	m	struct:nbbuf_struct	file:	access:public
insert_buffer_line_list	src/if_mzsch.c	/^insert_buffer_line_list(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
insert_buffer_line_list	src/if_mzsch.c	/^static Scheme_Object *insert_buffer_line_list(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
insert_lines	src/os_win32.c	/^insert_lines(unsigned cLines)$/;"	f	file:	signature:(unsigned cLines)
insert_lines	src/os_win32.c	/^static void insert_lines(unsigned cLines);$/;"	p	file:	signature:(unsigned cLines)
insert_reg	src/ops.c	/^insert_reg(regname, literally)$/;"	f
insert_sign	src/buffer.c	/^insert_sign(buf, prev, next, id, lnum, typenr)$/;"	f	file:
insert_sign	src/buffer.c	/^static void insert_sign __ARGS((buf_T *buf, signlist_T *prev, signlist_T *next, int id, linenr_T lnum, int typenr));$/;"	p	file:	signature:(buf_T *buf, signlist_T *prev, signlist_T *next, int id, linenr_T lnum, int typenr)
insert_special	src/edit.c	/^insert_special(c, allow_modmask, ctrlv)$/;"	f	file:
insert_special	src/edit.c	/^static void insert_special __ARGS((int, int, int));$/;"	p	file:	signature:(int, int, int)
insertchar	src/edit.c	/^insertchar(c, flags, second_indent)$/;"	f
inspect_system	src/dosinst.c	/^inspect_system(void)$/;"	f	file:	signature:(void)
install	src/dosinst.c	/^install(void)$/;"	f	file:	signature:(void)
install_OLE_register	src/dosinst.c	/^install_OLE_register(void)$/;"	f	file:	signature:(void)
install_bat_choice	src/dosinst.c	/^install_bat_choice(int idx)$/;"	f	file:	signature:(int idx)
install_openwith	src/dosinst.c	/^static int	install_openwith = 0;$/;"	v	file:
install_popup	src/dosinst.c	/^static int	install_popup = 0;$/;"	v	file:
install_registry	src/dosinst.c	/^install_registry(void)$/;"	f	file:	signature:(void)
install_shortcut_evim	src/dosinst.c	/^install_shortcut_evim(int idx)$/;"	f	signature:(int idx)
install_shortcut_gview	src/dosinst.c	/^install_shortcut_gview(int idx)$/;"	f	signature:(int idx)
install_shortcut_gvim	src/dosinst.c	/^install_shortcut_gvim(int idx)$/;"	f	signature:(int idx)
install_start_menu	src/dosinst.c	/^install_start_menu(int idx)$/;"	f	file:	signature:(int idx)
install_vimfilesdir	src/dosinst.c	/^install_vimfilesdir(int idx)$/;"	f	file:	signature:(int idx)
install_vimrc	src/dosinst.c	/^install_vimrc(int idx)$/;"	f	file:	signature:(int idx)
installdir	src/dosinst.h	/^char	installdir[BUFSIZE];	\/* top of the installation dir, where the$/;"	v
installfunc	src/dosinst.c	/^    void    (*installfunc)(int idx);	\/* function to install this choice *\/$/;"	m	struct:choice	file:	access:public
instr	src/vim.h	2140;"	d
int_cmp	src/option.c	/^int_cmp(a, b)$/;"	f	file:
int_cmp	src/option.c	/^static int int_cmp __ARGS((const void *a, const void *b));$/;"	p	file:	signature:(const void *a, const void *b)
int_u	src/vim.h	/^typedef unsigned int	int_u;$/;"	t
int_wordlist	src/spell.c	/^static char_u	*int_wordlist = NULL;$/;"	v	file:
int_wordlist_spl	src/spell.c	/^int_wordlist_spl(fname)$/;"	f	file:
int_wordlist_spl	src/spell.c	/^static void int_wordlist_spl __ARGS((char_u *fname));$/;"	p	file:	signature:(char_u *fname)
intable	src/mbyte.c	/^intable(table, size, c)$/;"	f	file:
intable	src/mbyte.c	/^static int intable __ARGS((struct interval *table, size_t size, int c));$/;"	p	file:	signature:(struct interval *table, size_t size, int c)
intcaught	src/testdir/test49.vim	/^		let intcaught = 1$/;"	v
intcaught	src/testdir/test49.vim	/^	    let intcaught = 0$/;"	v
intcaught	src/testdir/test49.vim	/^	    let intcaught = 1$/;"	v
interactive	src/dosinst.h	/^int	interactive;		\/* non-zero when running interactively *\/$/;"	v
internal_format	src/edit.c	/^internal_format(textwidth, second_indent, flags, format_only, c)$/;"	f	file:
internal_format	src/edit.c	/^static void internal_format __ARGS((int textwidth, int second_indent, int flags, int format_only, int c));$/;"	p	file:	signature:(int textwidth, int second_indent, int flags, int format_only, int c)
interp	src/if_tcl.c	/^    Tcl_Interp	*interp;$/;"	m	struct:ref	file:	access:public
interp	src/if_tcl.c	/^    Tcl_Interp *interp;$/;"	m	struct:__anon123	file:	access:public
interval	src/mbyte.c	/^struct interval$/;"	s	file:
interval::first	src/mbyte.c	/^    long first;$/;"	m	struct:interval	file:	access:public
interval::last	src/mbyte.c	/^    long last;$/;"	m	struct:interval	file:	access:public
intr_char	src/globals.h	/^EXTERN int	intr_char INIT(= 0);	    \/* extra interrupt character *\/$/;"	v
intro_message	src/version.c	/^intro_message(colon)$/;"	f
invalid_bot	src/fold.c	/^static linenr_T invalid_bot = (linenr_T)0;$/;"	v	file:
invalid_range	src/ex_docmd.c	/^invalid_range(eap)$/;"	f	file:
invalid_range	src/ex_docmd.c	/^static char_u	*invalid_range __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
invalid_top	src/fold.c	/^static linenr_T invalid_top = (linenr_T)0;$/;"	v	file:
invalidate_botline	src/move.c	/^invalidate_botline()$/;"	f
invalidate_botline_win	src/move.c	/^invalidate_botline_win(wp)$/;"	f
invalidate_current_state	src/syntax.c	/^invalidate_current_state()$/;"	f	file:
invalidate_current_state	src/syntax.c	/^static void invalidate_current_state __ARGS((void));$/;"	p	file:	signature:(void)
invert_gc	src/gui.h	/^    GC		invert_gc;$/;"	m	struct:Gui	access:public
invoke_edit	src/normal.c	/^invoke_edit(cap, repl, cmd, startln)$/;"	f	file:
invoke_edit	src/normal.c	/^static void	invoke_edit __ARGS((cmdarg_T *cap, int repl, int cmd, int startln));$/;"	p	file:	signature:(cmdarg_T *cap, int repl, int cmd, int startln)
iochan	src/os_vms.c	/^static short	iochan;			\/* TTY I\/O channel *\/$/;"	v	file:
iosb	src/os_vms.c	/^static short	iosb[4];		\/* IO status block *\/$/;"	v	file:
ip_bnum	src/structs.h	/^    blocknr_T	ip_bnum;	\/* block number *\/$/;"	m	struct:info_pointer	access:public
ip_high	src/structs.h	/^    linenr_T	ip_high;	\/* highest lnum in this block *\/$/;"	m	struct:info_pointer	access:public
ip_index	src/structs.h	/^    int		ip_index;	\/* index for block with current lnum *\/$/;"	m	struct:info_pointer	access:public
ip_low	src/structs.h	/^    linenr_T	ip_low;		\/* lowest lnum in this block *\/$/;"	m	struct:info_pointer	access:public
ipa	src/blowfish.c	/^static UINT32_T ipa[18] = {$/;"	v	file:
ireg_ic	src/regexp.c	/^static int	ireg_ic;$/;"	v	file:
ireg_icombine	src/regexp.c	/^static int	ireg_icombine;$/;"	v	file:
ireg_maxcol	src/regexp.c	/^static colnr_T	ireg_maxcol;$/;"	v	file:
isMapped	src/integration.c	/^isMapped(Widget widget)$/;"	f	file:	signature:(Widget widget)
isNetbeansBuffer	src/netbeans.c	/^isNetbeansBuffer(buf_T *bufp)$/;"	f	signature:(buf_T *bufp)
isNetbeansModified	src/netbeans.c	/^isNetbeansModified(buf_T *bufp)$/;"	f	signature:(buf_T *bufp)
isPanelVisible	src/gui_mac.c	/^    Boolean isPanelVisible;$/;"	m	struct:__anon128	file:	access:public
isShowing	src/workshop.c	/^isShowing($/;"	f	file:	signature:( int lnum)
isShowing	src/workshop.c	/^static Boolean	 isShowing(int);$/;"	p	file:	signature:(int)
isWindowMapped	src/integration.c	/^isWindowMapped(Display *display, Window win)$/;"	f	file:	signature:(Display *display, Window win)
is_MAX	src/ops.c	/^    int		is_MAX;		\/* TRUE if curswant==MAXCOL when starting *\/$/;"	m	struct:block_def	file:	access:public
is_Magic	src/regexp.c	242;"	d	file:
is_VIsual	src/structs.h	/^    int		is_VIsual;	\/* operator on Visual area *\/$/;"	m	struct:oparg_S	access:public
is_aff_rule	src/spell.c	/^is_aff_rule(items, itemcnt, rulename, mincount)$/;"	f	file:
is_aff_rule	src/spell.c	/^static int is_aff_rule __ARGS((char_u **items, int itemcnt, char *rulename, int	 mincount));$/;"	p	file:	signature:(char_u **items, int itemcnt, char *rulename, int mincount)
is_bash	runtime/syntax/initng.vim	/^let is_bash = 1$/;"	v
is_case	runtime/indent/sh.vim	/^function! s:is_case(line)$/;"	f
is_case_break	runtime/indent/sh.vim	/^function! s:is_case_break(line)$/;"	f
is_case_ended	runtime/indent/sh.vim	/^function! s:is_case_ended(line)$/;"	f
is_case_label	runtime/indent/sh.vim	/^function! s:is_case_label(line, pnum)$/;"	f
is_cjk_font	src/gui_gtk_x11.c	/^is_cjk_font(PangoFontDescription *font_desc)$/;"	f	file:	signature:(PangoFontDescription *font_desc)
is_click	src/misc2.c	/^    int	    is_click;		\/* Is it a mouse button click event? *\/$/;"	m	struct:mousetable	file:	access:public
is_continuation_line	runtime/indent/sh.vim	/^function! s:is_continuation_line(line)$/;"	f
is_dev_fd_file	src/fileio.c	/^is_dev_fd_file(fname)$/;"	f	file:
is_dev_fd_file	src/fileio.c	/^static int is_dev_fd_file(char_u *fname);$/;"	p	file:	signature:(char_u *fname)
is_drag	src/misc2.c	/^    int	    is_drag;		\/* Is it a mouse drag event? *\/$/;"	m	struct:mousetable	file:	access:public
is_etag	src/tag.c	/^    int		is_etag;	\/* TRUE for emacs tag *\/$/;"	m	struct:tag_pointers	file:	access:public
is_ignore_draw	src/gui_photon.c	/^static int is_ignore_draw = FALSE;$/;"	v	file:
is_oneChar	src/ops.c	/^    int		is_oneChar;	\/* TRUE if block within one character *\/$/;"	m	struct:block_def	file:	access:public
is_photon_available	src/os_qnx.c	/^int is_photon_available;$/;"	v
is_qf_win	src/quickfix.c	/^is_qf_win(win, qi)$/;"	f	file:
is_qf_win	src/quickfix.c	/^static int	is_qf_win __ARGS((win_T *win, qf_info_T *qi));$/;"	p	file:	signature:(win_T *win, qf_info_T *qi)
is_short	src/ops.c	/^    int		is_short;	\/* TRUE if line is too short to fit in block *\/$/;"	m	struct:block_def	file:	access:public
is_timeout	src/gui_photon.c	/^static short	    is_timeout;		    \/* Has the timeout occured? *\/$/;"	v	file:
is_unique	src/misc1.c	/^is_unique(maybe_unique, gap, i)$/;"	f	file:
is_unique	src/misc1.c	/^static int is_unique __ARGS((char_u *maybe_unique, garray_T *gap, int i));$/;"	p	file:	signature:(char_u *maybe_unique, garray_T *gap, int i)
is_winnt_3	src/gui_w32.c	/^is_winnt_3(void)$/;"	f	file:	signature:(void)
iskKeep	runtime/syntax/vim.vim	/^ let iskKeep= &isk$/;"	v
istermoption	src/option.c	/^istermoption(p)$/;"	f	file:
istermoption	src/option.c	/^static int  istermoption __ARGS((struct vimoption *));$/;"	p	file:	signature:(struct vimoption *)
ital_font	src/gui.h	/^    GuiFont	ital_font;	    \/* Italic font *\/$/;"	m	struct:Gui	access:public
italic	src/structs.h	/^    int		italic;$/;"	m	struct:__anon59	access:public
item_compare	src/eval.c	/^	item_compare __ARGS((const void *s1, const void *s2));$/;"	p	file:	signature:(const void *s1, const void *s2)
item_compare	src/eval.c	/^item_compare(s1, s2)$/;"	f	file:
item_compare2	src/eval.c	/^	item_compare2 __ARGS((const void *s1, const void *s2));$/;"	p	file:	signature:(const void *s1, const void *s2)
item_compare2	src/eval.c	/^item_compare2(s1, s2)$/;"	f	file:
item_compare_func	src/eval.c	/^static char_u	*item_compare_func;$/;"	v	file:
item_compare_func_err	src/eval.c	/^static int	item_compare_func_err;$/;"	v	file:
item_compare_ic	src/eval.c	/^static int	item_compare_ic;$/;"	v	file:
item_copy	src/eval.c	/^item_copy(from, to, deep, copyID)$/;"	f	file:
item_copy	src/eval.c	/^static int item_copy __ARGS((typval_T *from, typval_T *to, int deep, int copyID));$/;"	p	file:	signature:(typval_T *from, typval_T *to, int deep, int copyID)
item_lock	src/eval.c	/^item_lock(tv, deep, lock)$/;"	f	file:
item_lock	src/eval.c	/^static void item_lock __ARGS((typval_T *tv, int deep, int lock));$/;"	p	file:	signature:(typval_T *tv, int deep, int lock)
itemcode	src/os_vms.c	/^    short	itemcode;$/;"	m	struct:__anon78	file:	access:public
j	runtime/ftplugin/flexwiki.vim	/^  nmap <buffer> j      gj$/;"	m
j	runtime/ftplugin/flexwiki.vim	/^  vmap <buffer> j      gj$/;"	m
j	runtime/macros/less.vim	/^map j <CR>$/;"	m
j_charsets	src/hardcopy.c	/^static struct prt_ps_charset_S j_charsets[] =$/;"	v	typeref:struct:prt_ps_charset_S	file:
j_encodings	src/hardcopy.c	/^static struct prt_ps_encoding_S j_encodings[] =$/;"	v	typeref:struct:prt_ps_encoding_S	file:
java_highlight_all	runtime/syntax/java.vim	/^  let java_highlight_all=1$/;"	v
java_minlines	runtime/syntax/java.vim	/^  let java_minlines = 10$/;"	v
javascriptcomplete#CompleteJS	runtime/autoload/javascriptcomplete.vim	/^function! javascriptcomplete#CompleteJS(findstart, base)$/;"	f
jobname	src/structs.h	/^    char_u	*jobname;$/;"	m	struct:__anon60	access:public
johab_fcon_to_wan	src/hangulin.c	/^static const char_u johab_fcon_to_wan[] =$/;"	v	file:
johab_lcon_to_wan	src/hangulin.c	/^static const char_u johab_lcon_to_wan[] =$/;"	v	file:
johab_vow_to_wan	src/hangulin.c	/^static const char_u johab_vow_to_wan[] =$/;"	v	file:
jproperties_lines	runtime/syntax/jproperties.vim	/^	let jproperties_lines = 256$/;"	v
jproperties_show_messages	runtime/syntax/jproperties.vim	/^	let jproperties_show_messages = 0$/;"	v
jproperties_strict_syntax	runtime/syntax/jproperties.vim	/^	let jproperties_strict_syntax = 0$/;"	v
jump	runtime/ftplugin/cucumber.vim	/^function! s:jump(command,count)$/;"	f
jumpProc	src/gui_at_sb.h	/^    XtCallbackList jumpProc;	\/* same as thumbProc but pass data by ref *\/$/;"	m	struct:__anon31	access:public
jump_to_mouse	src/ui.c	/^jump_to_mouse(flags, inclusive, which_button)$/;"	f
jumpto_tag	src/tag.c	/^jumpto_tag(lbuf, forceit, keep_help)$/;"	f	file:
jumpto_tag	src/tag.c	/^static int jumpto_tag __ARGS((char_u *lbuf, int forceit, int keep_help));$/;"	p	file:	signature:(char_u *lbuf, int forceit, int keep_help)
k	runtime/ftplugin/flexwiki.vim	/^  nmap <buffer> k      gk$/;"	m
k	runtime/ftplugin/flexwiki.vim	/^  vmap <buffer> k      gk$/;"	m
k	runtime/macros/less.vim	/^noremap <script> k <C-Y><SID>L$/;"	m
kCreateEmpty	src/gui_mac.c	119;"	d	file:
kCreateRect	src/gui_mac.c	120;"	d	file:
kDestroy	src/gui_mac.c	121;"	d	file:
kMyDataBrowserAttributeListViewAlternatingRowColors	src/gui_mac.c	/^enum { kMyDataBrowserAttributeListViewAlternatingRowColors = (1 << 1) };$/;"	e	enum:__anon133	file:
kNothing	src/gui_mac.c	118;"	d	file:
kTabContextMenuId	src/gui_mac.c	/^    kTabContextMenuId = 42,$/;"	e	enum:__anon131	file:
kTabsColumn	src/gui_mac.c	/^    kTabsColumn = 'Tabs'$/;"	e	enum:__anon132	file:
k_char	src/structs.h	/^    int		k_char;		\/* conceal substitute character *\/$/;"	m	struct:keyentry	access:public
k_charsets	src/hardcopy.c	/^static struct prt_ps_charset_S k_charsets[] =$/;"	v	typeref:struct:prt_ps_charset_S	file:
k_encodings	src/hardcopy.c	/^static struct prt_ps_encoding_S k_encodings[] =$/;"	v	typeref:struct:prt_ps_encoding_S	file:
k_syn	src/structs.h	/^    struct sp_syn k_syn;	\/* struct passed to in_id_list() *\/$/;"	m	struct:keyentry	typeref:struct:keyentry::sp_syn	access:public
kbhit	src/os_msdos.c	689;"	d	file:
kbhit	src/os_msdos.c	691;"	d	file:
ke_next	src/structs.h	/^    keyentry_T	*ke_next;	\/* next entry with identical "keyword[]" *\/$/;"	m	struct:keyentry	access:public
keep_filetype	src/globals.h	/^EXTERN int	keep_filetype INIT(= FALSE);	\/* value for did_filetype when$/;"	v
keep_help_flag	src/globals.h	/^EXTERN int	keep_help_flag INIT(= FALSE); \/* doing :ta from help file *\/$/;"	v
keep_msg	src/globals.h	/^EXTERN char_u	*keep_msg INIT(= NULL);	    \/* msg to be shown after redraw *\/$/;"	v
keep_msg_attr	src/globals.h	/^EXTERN int	keep_msg_attr INIT(= 0);    \/* highlight attr for keep_msg *\/$/;"	v
keep_msg_more	src/globals.h	/^EXTERN int	keep_msg_more INIT(= FALSE); \/* keep_msg was set by msgmore() *\/$/;"	v
keepalt	src/structs.h	/^    int		keepalt;		\/* TRUE when ":keepalt" was used *\/$/;"	m	struct:__anon42	access:public
keepend_level	src/syntax.c	/^static int keepend_level = -1;$/;"	v	file:
keepjumps	src/structs.h	/^    int		keepjumps;		\/* TRUE when ":keepjumps" was used *\/$/;"	m	struct:__anon42	access:public
keepmarks	src/structs.h	/^    int		keepmarks;		\/* TRUE when ":keepmarks" was used *\/$/;"	m	struct:__anon42	access:public
key	src/misc2.c	/^    int	    key;	\/* Special key code or ascii value *\/$/;"	m	struct:key_name_entry	file:	access:public
keyEventHandlerUPP	src/gui_mac.c	/^static EventHandlerUPP keyEventHandlerUPP = NULL;$/;"	v	file:
keyHead	src/netbeans.c	/^static keyQ_T keyHead; \/* dummy node, header for circular queue *\/$/;"	v	file:
keyQ_T	src/netbeans.c	/^typedef struct keyqueue keyQ_T;$/;"	t	typeref:struct:keyqueue	file:
key_event	src/gui_beval.c	/^key_event(BalloonEval *beval, unsigned keyval, int is_keypress)$/;"	f	file:	signature:(BalloonEval *beval, unsigned keyval, int is_keypress)
key_event	src/gui_beval.c	/^static void key_event __ARGS((BalloonEval *, unsigned, int));$/;"	p	file:	signature:(BalloonEval *, unsigned, int)
key_extra	src/keymap.h	/^enum key_extra$/;"	g
key_name_entry	src/misc2.c	/^static struct key_name_entry$/;"	s	file:
key_name_entry::key	src/misc2.c	/^    int	    key;	\/* Special key code or ascii value *\/$/;"	m	struct:key_name_entry	file:	access:public
key_name_entry::name	src/misc2.c	/^    char_u  *name;	\/* Name of key *\/$/;"	m	struct:key_name_entry	file:	access:public
key_names	src/term.c	/^static char *(key_names[]) =$/;"	v	file:
key_names_table	src/misc2.c	/^} key_names_table[] =$/;"	v	typeref:struct:key_name_entry	file:
key_press_event	src/gui_gtk_x11.c	/^key_press_event(GtkWidget *widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GdkEventKey *event, gpointer data UNUSED)
key_release_event	src/gui_gtk_x11.c	/^key_release_event(GtkWidget *widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GdkEventKey *event, gpointer data UNUSED)
key_sym	src/gui_gtk_x11.c	/^    guint key_sym;$/;"	m	struct:special_key	file:	access:public
key_sym	src/gui_mac.c	/^    KeySym  key_sym;$/;"	m	struct:__anon129	file:	access:public
key_sym	src/gui_photon.c	/^    int	    key_sym;$/;"	m	struct:__anon7	file:	access:public
key_sym	src/gui_w48.c	/^    UINT    key_sym;$/;"	m	struct:__anon145	file:	access:public
key_sym	src/gui_x11.c	/^    KeySym  key_sym;$/;"	m	struct:specialkey	file:	access:public
keyentry	src/structs.h	/^struct keyentry$/;"	s
keyentry::flags	src/structs.h	/^    int		flags;$/;"	m	struct:keyentry	access:public
keyentry::k_char	src/structs.h	/^    int		k_char;		\/* conceal substitute character *\/$/;"	m	struct:keyentry	access:public
keyentry::k_syn	src/structs.h	/^    struct sp_syn k_syn;	\/* struct passed to in_id_list() *\/$/;"	m	struct:keyentry	typeref:struct:keyentry::sp_syn	access:public
keyentry::ke_next	src/structs.h	/^    keyentry_T	*ke_next;	\/* next entry with identical "keyword[]" *\/$/;"	m	struct:keyentry	access:public
keyentry::keyword	src/structs.h	/^    char_u	keyword[1];	\/* actually longer *\/$/;"	m	struct:keyentry	access:public
keyentry::next_list	src/structs.h	/^    short	*next_list;	\/* ID list for next match (if non-zero) *\/$/;"	m	struct:keyentry	access:public
keyentry_T	src/structs.h	/^typedef struct keyentry keyentry_T;$/;"	t	typeref:struct:keyentry
keyhit_callback	src/gui_athena.c	/^keyhit_callback(w, client_data, event, cont)$/;"	f	file:
keyhit_callback	src/gui_athena.c	/^static void keyhit_callback __ARGS((Widget w, XtPointer client_data, XEvent *event, Boolean *cont));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XEvent *event, Boolean *cont)
keyhit_callback	src/gui_motif.c	/^keyhit_callback(w, client_data, event, cont)$/;"	f	file:
keyhit_callback	src/gui_motif.c	/^static void keyhit_callback __ARGS((Widget w, XtPointer client_data, XEvent *event, Boolean *cont));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XEvent *event, Boolean *cont)
keymap_init	src/digraph.c	/^keymap_init()$/;"	f
keymap_unload	src/digraph.c	/^keymap_unload()$/;"	f	file:
keymap_unload	src/digraph.c	/^static void keymap_unload __ARGS((void));$/;"	p	file:	signature:(void)
keyqueue	src/netbeans.c	/^struct keyqueue$/;"	s	file:
keyqueue::keystr	src/netbeans.c	/^    char_u	    *keystr;$/;"	m	struct:keyqueue	file:	access:public
keyqueue::next	src/netbeans.c	/^    struct keyqueue *next;$/;"	m	struct:keyqueue	typeref:struct:keyqueue::keyqueue	file:	access:public
keyqueue::prev	src/netbeans.c	/^    struct keyqueue *prev;$/;"	m	struct:keyqueue	typeref:struct:keyqueue::keyqueue	file:	access:public
keys	src/misc2.c	/^static ulg keys[3]; \/* keys defining the pseudo-random sequence *\/$/;"	v	file:
keystr	src/netbeans.c	/^    char_u	    *keystr;$/;"	m	struct:keyqueue	file:	access:public
keysum	src/blowfish.c	/^    UINT32_T keysum;$/;"	m	struct:__anon122	file:	access:public
keyval_to_string	src/gui_gtk_x11.c	/^keyval_to_string(unsigned int keyval, unsigned int state, char_u *string)$/;"	f	file:	signature:(unsigned int keyval, unsigned int state, char_u *string)
keyword	src/structs.h	/^    char_u	keyword[1];	\/* actually longer *\/$/;"	m	struct:keyentry	access:public
keyword	src/syntax.c	/^    int		keyword;	\/* TRUE for ":syn keyword" *\/$/;"	m	struct:__anon82	file:	access:public
kind_table_for_2	src/hangulin.c	/^kind_table_for_2(c)$/;"	f	file:
kind_table_for_3	src/hangulin.c	/^static short_u kind_table_for_3[] =$/;"	v	file:
km_startsel	src/globals.h	/^EXTERN int	km_startsel INIT(= FALSE);$/;"	v
km_stopsel	src/globals.h	/^EXTERN int	km_stopsel INIT(= FALSE);$/;"	v
kmap_T	src/digraph.c	/^} kmap_T;$/;"	t	typeref:struct:__anon125	file:
ks_table1	src/hangulin.c	/^static const char_u ks_table1[][3] =$/;"	v	file:
ks_table2	src/hangulin.c	/^static const unsigned short ks_table2[][4] =$/;"	v	file:
ksmd_str	src/term.c	/^static char ksmd_str[20];$/;"	v	file:
ksme_str	src/term.c	/^static char ksme_str[20];$/;"	v	file:
ksmr_str	src/term.c	/^static char ksmr_str[20];$/;"	v	file:
l	src/hangulin.c	/^static int f=F_NULL, m=M_NULL, l=L_NULL;$/;"	v	file:
lParam	src/gui_w32.c	/^	LPARAM lParam;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
lParam	src/gui_w32.c	/^    LPARAM	lParam;$/;"	m	struct:tagNMTTDISPINFOA	file:	access:public
lParam	src/gui_w32.c	/^    LPARAM	lParam;$/;"	m	struct:tagNMTTDISPINFOW	file:	access:public
lParam	src/gui_w32.c	/^    LPARAM     lParam;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:	access:public
l_avars	src/eval.c	/^    dict_T	l_avars;	\/* a: argument variables *\/$/;"	m	struct:funccall_S	file:	access:public
l_avars_var	src/eval.c	/^    dictitem_T	l_avars_var;	\/* variable for a: scope *\/$/;"	m	struct:funccall_S	file:	access:public
l_listitems	src/eval.c	/^    listitem_T	l_listitems[MAX_FUNC_ARGS];	\/* listitems for a:000 *\/$/;"	m	struct:funccall_S	file:	access:public
l_varlist	src/eval.c	/^    list_T	l_varlist;	\/* list for a:000 *\/$/;"	m	struct:funccall_S	file:	access:public
l_vars	src/eval.c	/^    dict_T	l_vars;		\/* l: local function variables *\/$/;"	m	struct:funccall_S	file:	access:public
l_vars_var	src/eval.c	/^    dictitem_T	l_vars_var;	\/* variable for l: scope *\/$/;"	m	struct:funccall_S	file:	access:public
label	src/gui_xmebwp.h	/^    XmLabelPart label;$/;"	m	struct:_XmEnhancedButtonRec	access:public
label	src/structs.h	/^    GtkWidget   *label;		    \/* Used by "set wak=" code. *\/$/;"	m	struct:VimMenu	access:public
label_class	src/gui_xmebwp.h	/^    XmLabelClassPart label_class;$/;"	m	struct:__anon92	access:public
label_expose	src/gui_motif.c	/^label_expose(_w, _event, _region)$/;"	f	file:
label_expose	src/gui_motif.c	/^static void label_expose __ARGS((Widget _w, XEvent *_event, Region _region));$/;"	p	file:	signature:(Widget _w, XEvent *_event, Region _region)
label_location	src/gui_xmebwp.h	/^    int label_location;$/;"	m	struct:_XmEnhancedButtonPart	access:public
lalloc	src/misc2.c	/^lalloc(size, message)$/;"	f
lalloc_clear	src/misc2.c	/^lalloc_clear(size, message)$/;"	f
lang	runtime/spell/check_locales.vim	/^  let lang = substitute(item.text, '.*LANG=\\(\\S\\+\\).*', '\\1', '')$/;"	v
langmap_adjust_mb	src/option.c	/^langmap_adjust_mb(c)$/;"	f
langmap_entry_T	src/option.c	/^} langmap_entry_T;$/;"	t	typeref:struct:__anon2	file:
langmap_init	src/option.c	/^langmap_init()$/;"	f	file:
langmap_init	src/option.c	/^static void langmap_init __ARGS((void));$/;"	p	file:	signature:(void)
langmap_mapchar	src/globals.h	/^EXTERN char_u	langmap_mapchar[256];	\/* mapping for language keys *\/$/;"	v
langmap_mapga	src/option.c	/^static garray_T langmap_mapga;$/;"	v	file:
langmap_set	src/option.c	/^langmap_set()$/;"	f	file:
langmap_set	src/option.c	/^static void langmap_set __ARGS((void));$/;"	p	file:	signature:(void)
langmap_set_entry	src/option.c	/^langmap_set_entry(from, to)$/;"	f	file:
langmap_set_entry	src/option.c	/^static void langmap_set_entry __ARGS((int from, int to));$/;"	p	file:	signature:(int from, int to)
langp_S	src/spell.c	/^typedef struct langp_S$/;"	s	file:
langp_S::lp_region	src/spell.c	/^    int		lp_region;	\/* bitmask for region or REGION_ALL *\/$/;"	m	struct:langp_S	file:	access:public
langp_S::lp_replang	src/spell.c	/^    slang_T	*lp_replang;	\/* language used for REP items or NULL *\/$/;"	m	struct:langp_S	file:	access:public
langp_S::lp_sallang	src/spell.c	/^    slang_T	*lp_sallang;	\/* language used for sound folding or NULL *\/$/;"	m	struct:langp_S	file:	access:public
langp_S::lp_slang	src/spell.c	/^    slang_T	*lp_slang;	\/* info for this language *\/$/;"	m	struct:langp_S	file:	access:public
langp_T	src/spell.c	/^} langp_T;$/;"	t	typeref:struct:langp_S	file:
last	src/fileio.c	/^    char	    last;		\/* last command in list *\/$/;"	m	struct:AutoCmd	file:	access:public
last	src/fileio.c	/^    char	    last;		\/* last pattern for apply_autocmds() *\/$/;"	m	struct:AutoPat	file:	access:public
last	src/mbyte.c	/^    long last;$/;"	m	struct:interval	file:	access:public
lastMouseTick	src/gui_mac.c	/^static long lastMouseTick = 0;$/;"	v	file:
last_breakp	src/ex_cmds2.c	/^static int last_breakp = 0;	\/* nr of last defined breakpoint *\/$/;"	v	file:
last_cmdline	src/globals.h	/^EXTERN char_u	*last_cmdline INIT(= NULL); \/* last command line (for ":) *\/$/;"	v
last_cursormoved	src/globals.h	/^EXTERN pos_T	last_cursormoved	    \/* for CursorMoved event *\/$/;"	v
last_event	src/fileio.c	/^static event_T	last_event;$/;"	v	file:
last_group	src/fileio.c	/^static int	last_group;$/;"	v	file:
last_idx	src/search.c	/^static int last_idx = 0;	\/* index in spats[] for RE_LAST *\/$/;"	v	file:
last_insert	src/edit.c	/^static char_u	*last_insert = NULL;	\/* the text of the previous insert,$/;"	v	file:
last_insert_skip	src/edit.c	/^static int	last_insert_skip; \/* nr of chars in front of previous insert *\/$/;"	v	file:
last_l	src/hangulin.c	/^static int last_l = -1, last_ll = -1;$/;"	v	file:
last_ll	src/hangulin.c	/^static int last_l = -1, last_ll = -1;$/;"	v	file:
last_maptick	src/ex_getln.c	/^static int	last_maptick = -1;	\/* last seen maptick *\/$/;"	v	file:
last_matchgroup	src/syntax.c	/^static int  last_matchgroup;$/;"	v	file:
last_mouse_event	src/gui_x11.c	/^static XButtonPressedEvent last_mouse_event;$/;"	v	file:
last_msg_hist	src/message.c	/^static struct msg_hist *last_msg_hist = NULL;$/;"	v	typeref:struct:msg_hist	file:
last_msgchunk	src/message.c	/^static msgchunk_T *last_msgchunk = NULL; \/* last displayed text *\/$/;"	v	file:
last_pat_prog	src/search.c	/^last_pat_prog(regmatch)$/;"	f
last_recorded_len	src/getchar.c	/^static int	last_recorded_len = 0;	\/* number of last recorded chars *\/$/;"	v	file:
last_search_pat	src/search.c	/^last_search_pat()$/;"	f
last_set_msg	src/eval.c	/^last_set_msg(scriptID)$/;"	f
last_shape	src/gui_gtk_x11.c	/^static int last_shape = 0;$/;"	v	file:
last_shape	src/gui_photon.c	/^static int last_shape = 0;$/;"	v	file:
last_shape	src/gui_x11.c	/^static int last_shape = 0;$/;"	v	file:
last_sign_typenr	src/ex_cmds.c	/^static int	last_sign_typenr = MAX_TYPENR;	\/* is decremented *\/$/;"	v	file:
last_sourcing_lnum	src/message.c	/^static int	last_sourcing_lnum = 0;$/;"	v	file:
last_sourcing_name	src/message.c	/^static char_u   *last_sourcing_name = NULL;$/;"	v	file:
last_status	src/window.c	/^last_status(morewin)$/;"	f
last_status_rec	src/window.c	/^last_status_rec(fr, statusline)$/;"	f	file:
last_status_rec	src/window.c	/^static void last_status_rec __ARGS((frame_T *fr, int statusline));$/;"	p	file:	signature:(frame_T *fr, int statusline)
last_window	src/window.c	/^last_window()$/;"	f	file:
last_window	src/window.c	/^static int last_window __ARGS((void));$/;"	p	file:	signature:(void)
lastbuf	src/globals.h	/^EXTERN buf_T	*lastbuf INIT(= NULL);	\/* last buffer *\/$/;"	v
lasticon	src/buffer.c	/^static char_u *lasticon = NULL;$/;"	v	file:
lastmark	src/undo.c	/^static int	lastmark = 0;$/;"	v	file:
lasttitle	src/buffer.c	/^static char_u *lasttitle = NULL;$/;"	v	file:
lastwin	src/globals.h	/^EXTERN win_T	*lastwin;		\/* last window *\/$/;"	v
lastwin	src/globals.h	539;"	d
latin1flags	src/charset.c	/^static char_u latin1flags[257] = "                                                                 UUUUUUUUUUUUUUUUUUUUUUUUUU      llllllllllllllllllllllllll                                                                     UUUUUUUUUUUUUUUUUUUUUUU UUUUUUUllllllllllllllllllllllll llllllll";$/;"	v	file:
latin1lower	src/charset.c	/^static char_u latin1lower[257] = "                                 !\\"#$%&'()*+,-.\/0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿àáâãäåæçèéêëìíîïðñòóôõö×øùúûüýþßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ";$/;"	v	file:
latin1upper	src/charset.c	/^static char_u latin1upper[257] = "                                 !\\"#$%&'()*+,-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ÷ØÙÚÛÜÝÞÿ";$/;"	v	file:
latin9_to_ucs	src/gui_w32.c	/^latin9_to_ucs(char_u *text, int len, WCHAR *unicodebuf)$/;"	f	file:	signature:(char_u *text, int len, WCHAR *unicodebuf)
latin_char2bytes	src/mbyte.c	/^latin_char2bytes(c, buf)$/;"	f
latin_char2cells	src/mbyte.c	/^latin_char2cells(c)$/;"	f
latin_char2len	src/mbyte.c	/^latin_char2len(c)$/;"	f
latin_head_off	src/mbyte.c	/^latin_head_off(base, p)$/;"	f
latin_off2cells	src/mbyte.c	/^latin_off2cells(off, max_off)$/;"	f
latin_ptr2cells	src/mbyte.c	/^latin_ptr2cells(p)$/;"	f
latin_ptr2cells_len	src/mbyte.c	/^latin_ptr2cells_len(p, size)$/;"	f
latin_ptr2char	src/mbyte.c	/^latin_ptr2char(p)$/;"	f
latin_ptr2len	src/mbyte.c	/^latin_ptr2len(p)$/;"	f
latin_ptr2len_len	src/mbyte.c	/^latin_ptr2len_len(p, size)$/;"	f
lbase	src/if_tcl.c	/^    int lbase;$/;"	m	struct:__anon123	file:	access:public
lbr_chartabsize	src/charset.c	/^lbr_chartabsize(s, col)$/;"	f
lbr_chartabsize_adv	src/charset.c	/^lbr_chartabsize_adv(s, col)$/;"	f
lc_active	src/globals.h	/^EXTERN volatile int lc_active INIT(= FALSE); \/* TRUE when lc_jump_env is valid. *\/$/;"	v
lc_jump_env	src/globals.h	/^EXTERN JMP_BUF lc_jump_env;	\/* argument to SETJMP() *\/$/;"	v
lc_signal	src/globals.h	/^EXTERN volatile int lc_signal;	\/* caught signal number, 0 when no was signal$/;"	v
lcon	src/hangulin.c	/^lcon(c)$/;"	f	file:
lcs_conceal	src/globals.h	/^EXTERN int	lcs_conceal INIT(= '-');$/;"	v
lcs_eol	src/globals.h	/^EXTERN int	lcs_eol INIT(= '$');$/;"	v
lcs_ext	src/globals.h	/^EXTERN int	lcs_ext INIT(= NUL);$/;"	v
lcs_nbsp	src/globals.h	/^EXTERN int	lcs_nbsp INIT(= NUL);$/;"	v
lcs_prec	src/globals.h	/^EXTERN int	lcs_prec INIT(= NUL);$/;"	v
lcs_tab1	src/globals.h	/^EXTERN int	lcs_tab1 INIT(= NUL);$/;"	v
lcs_tab2	src/globals.h	/^EXTERN int	lcs_tab2 INIT(= NUL);$/;"	v
lcs_trail	src/globals.h	/^EXTERN int	lcs_trail INIT(= NUL);$/;"	v
lead_spaces	src/hardcopy.c	/^    int		lead_spaces;	    \/* remaining spaces for a TAB *\/$/;"	m	struct:__anon126	file:	access:public
leaf_name	src/gui_riscos.c	/^char_u *leaf_name = NULL;	\/* Leaf name from DataSave *\/$/;"	v
leaf_ref	src/gui_riscos.c	/^int leaf_ref = 0;		\/* Wimp message number - send via Wimp$Scrap *\/$/;"	v
leave_cleanup	src/ex_eval.c	/^leave_cleanup(csp)$/;"	f
leave_notify_event	src/gui_gtk_x11.c	/^leave_notify_event(GtkWidget *widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GdkEventCrossing *event UNUSED, gpointer data UNUSED)
leave_tabpage	src/window.c	/^leave_tabpage(new_curbuf)$/;"	f	file:
leave_tabpage	src/window.c	/^static int leave_tabpage __ARGS((buf_T *new_curbuf));$/;"	p	file:	signature:(buf_T *new_curbuf)
left_sbar_x	src/gui.h	/^    int		left_sbar_x;	    \/* Calculated x coord for left scrollbar *\/$/;"	m	struct:Gui	access:public
leftcol_changed	src/misc2.c	/^leftcol_changed()$/;"	f
len	src/hardcopy.c	/^    int		len;$/;"	m	struct:prt_dsc_comment_S	file:	access:public
len	src/hardcopy.c	/^    int		len;$/;"	m	struct:prt_dsc_line_S	file:	access:public
len	src/hardcopy.c	/^    int     len;$/;"	m	struct:prt_resfile_buffer_S	file:	access:public
len	src/tag.c	/^    int		len;		\/* length of pat[] *\/$/;"	m	struct:__anon29	file:	access:public
len	src/term.c	/^    int	    len;	    \/* STRLEN(code) *\/$/;"	m	struct:termcode	file:	access:public
length	src/gui_at_sb.h	/^    Dimension	  length;	\/* either height or width *\/$/;"	m	struct:__anon31	access:public
length	src/os_vms.c	/^	    char	length;$/;"	m	struct:__anon75::__anon76::__anon77	file:	access:public
level	src/eval.c	/^    int		level;		\/* top nesting level of executed function *\/$/;"	m	struct:funccall_S	file:	access:public
level	src/ex_cmds2.c	/^    int		level;		\/* top nesting level of sourced file *\/$/;"	m	struct:source_cookie	file:	access:public
lex	runtime/indent/dtd.vim	/^function s:lex(input, start, ...)$/;"	f
lex1	runtime/indent/dtd.vim	/^function s:lex1(input, start, ...)$/;"	f
li_next	src/structs.h	/^    listitem_T	*li_next;	\/* next item in list *\/$/;"	m	struct:listitem_S	access:public
li_prev	src/structs.h	/^    listitem_T	*li_prev;	\/* previous item in list *\/$/;"	m	struct:listitem_S	access:public
li_tv	src/structs.h	/^    typval_T	li_tv;		\/* type and value of the variable *\/$/;"	m	struct:listitem_S	access:public
libcall_common	src/eval.c	/^libcall_common(argvars, rettv, type)$/;"	f	file:
libcall_common	src/eval.c	/^static void libcall_common __ARGS((typval_T *argvars, typval_T *rettv, int type));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv, int type)
limit_pos	src/syntax.c	/^limit_pos(pos, limit)$/;"	f	file:
limit_pos	src/syntax.c	/^static void limit_pos __ARGS((lpos_T *pos, lpos_T *limit));$/;"	p	file:	signature:(lpos_T *pos, lpos_T *limit)
limit_pos_zero	src/syntax.c	/^limit_pos_zero(pos, limit)$/;"	f	file:
limit_pos_zero	src/syntax.c	/^static void limit_pos_zero __ARGS((lpos_T *pos, lpos_T *limit));$/;"	p	file:	signature:(lpos_T *pos, lpos_T *limit)
limit_thumb	src/gui_at_sb.h	/^    Bool	limit_thumb;	\/* limit thumb to inside scrollbar *\/$/;"	m	struct:__anon31	access:public
limitscore_T	src/spell.c	/^} limitscore_T;$/;"	t	typeref:struct:__anon18	file:
line	runtime/ftplugin/html.vim	/^        let line = getline(i)$/;"	v
line	runtime/ftplugin/html.vim	/^    let line = ""$/;"	v
line	runtime/macros/maze/mazeclean.c	/^char *M, A, Z, E = 40, line[80], T[3];$/;"	v
line	src/ex_docmd.c	/^    char_u	*line;		\/* command line *\/$/;"	m	struct:__anon4	file:	access:public
line	src/search.c	/^    int		line;		\/* search has line offset *\/$/;"	m	struct:soffset	file:	access:public
line1	src/ex_cmds.h	/^    linenr_T	line1;		\/* the first line number *\/$/;"	m	struct:exarg	access:public
line1	src/spell.c	/^static char line1[PRINTLINESIZE];$/;"	v	file:
line2	src/ex_cmds.h	/^    linenr_T	line2;		\/* the second line number or count *\/$/;"	m	struct:exarg	access:public
line2	src/spell.c	/^static char line2[PRINTLINESIZE];$/;"	v	file:
line3	src/spell.c	/^static char line3[PRINTLINESIZE];$/;"	v	file:
lineFolded	src/fold.c	/^lineFolded(win, lnum)$/;"	f
lineNum	src/gui_mac.c	/^    short lineNum; \/\/ line to select (<0 to specify range)$/;"	m	struct:SelectionRange	file:	access:public
line_breakcheck	src/misc1.c	/^line_breakcheck()$/;"	f
line_count	src/structs.h	/^    long	line_count;	\/* number of lines from op_start to op_end$/;"	m	struct:oparg_S	access:public
line_count_info	src/ops.c	/^line_count_info(line, wc, cc, limit, eol_size)$/;"	f	file:
line_count_info	src/ops.c	/^static long	line_count_info __ARGS((char_u *line, long *wc, long *cc, long limit, int eol_size));$/;"	p	file:	signature:(char_u *line, long *wc, long *cc, long limit, int eol_size)
line_end	src/hardcopy.c	/^    int     line_end;$/;"	m	struct:prt_resfile_buffer_S	file:	access:public
line_in_range	src/if_mzsch.c	/^line_in_range(linenr_T lnum, buf_T *buf)$/;"	f	file:	signature:(linenr_T lnum, buf_T *buf)
line_in_range	src/if_mzsch.c	/^static int line_in_range(linenr_T, buf_T *);$/;"	p	file:	signature:(linenr_T, buf_T *)
line_s_current	src/if_ruby.c	/^static VALUE line_s_current()$/;"	f	file:
line_start	src/hardcopy.c	/^    int     line_start;$/;"	m	struct:prt_resfile_buffer_S	file:	access:public
lineclear	src/screen.c	/^lineclear(off, width)$/;"	f	file:
lineclear	src/screen.c	/^static void lineclear __ARGS((unsigned off, int width));$/;"	p	file:	signature:(unsigned off, int width)
linecopy	src/screen.c	/^linecopy(to, from, wp)$/;"	f	file:
linecopy	src/screen.c	/^static void linecopy __ARGS((int to, int from, win_T *wp));$/;"	p	file:	signature:(int to, int from, win_T *wp)
lineempty	src/macros.h	48;"	d
lineinvalid	src/screen.c	/^lineinvalid(off, width)$/;"	f	file:
lineinvalid	src/screen.c	/^static void lineinvalid __ARGS((unsigned off, int width));$/;"	p	file:	signature:(unsigned off, int width)
linelen	src/ex_cmds.c	/^linelen(has_tab)$/;"	f	file:
linelen	src/ex_cmds.c	/^static int linelen __ARGS((int *has_tab));$/;"	p	file:	signature:(int *has_tab)
linenr	src/eval.c	/^    int		linenr;		\/* next line to be executed *\/$/;"	m	struct:funccall_S	file:	access:public
linenr_T	src/structs.h	/^typedef long		linenr_T;$/;"	t
linenr_T	src/vim.h	/^typedef long	linenr_T;		\/* line number type *\/$/;"	t
lineoff_T	src/move.c	/^} lineoff_T;$/;"	t	typeref:struct:__anon84	file:
lines_gap	src/ex_docmd.c	/^    garray_T	*lines_gap;		\/* growarray with line info *\/$/;"	m	struct:loop_cookie	file:	access:public
lines_left	src/globals.h	/^EXTERN int	lines_left INIT(= -1);	    \/* lines left for listing *\/$/;"	v
lines_per_page	src/structs.h	/^    int		lines_per_page;$/;"	m	struct:__anon60	access:public
linetabsize	src/charset.c	/^linetabsize(s)$/;"	f
linetabsize_col	src/charset.c	/^linetabsize_col(startcol, s)$/;"	f
linewhite	src/search.c	/^linewhite(lnum)$/;"	f
lisp_match	src/misc1.c	/^lisp_match(p)$/;"	f	file:
lisp_match	src/misc1.c	/^static int lisp_match __ARGS((char_u *p));$/;"	p	file:	signature:(char_u *p)
list	src/gui_xmdlg.c	/^    Widget	list[NONE];$/;"	m	struct:_SharedFontSelData	file:	access:public
list2fpos	src/eval.c	/^list2fpos(arg, posp, fnump)$/;"	f	file:
list2fpos	src/eval.c	/^static int list2fpos __ARGS((typval_T *arg, pos_T *posp, int *fnump));$/;"	p	file:	signature:(typval_T *arg, pos_T *posp, int *fnump)
list2proftime	src/eval.c	/^list2proftime(arg, tm)$/;"	f	file:
list2proftime	src/eval.c	/^static int list2proftime __ARGS((typval_T *arg, proftime_T *tm));$/;"	p	file:	signature:(typval_T *arg, proftime_T *tm)
list2string	src/eval.c	/^list2string(tv, copyID)$/;"	f	file:
list2string	src/eval.c	/^static char_u *list2string __ARGS((typval_T *tv, int copyID));$/;"	p	file:	signature:(typval_T *tv, int copyID)
list_T	src/structs.h	/^typedef struct listvar_S list_T;$/;"	t	typeref:struct:listvar_S
list_add_watch	src/eval.c	/^list_add_watch(l, lw)$/;"	f	file:
list_add_watch	src/eval.c	/^static void list_add_watch __ARGS((list_T *l, listwatch_T *lw));$/;"	p	file:	signature:(list_T *l, listwatch_T *lw)
list_alloc	src/eval.c	/^list_alloc()$/;"	f
list_append	src/eval.c	/^list_append(l, item)$/;"	f	file:
list_append	src/eval.c	/^static void list_append __ARGS((list_T *l, listitem_T *item));$/;"	p	file:	signature:(list_T *l, listitem_T *item)
list_append_dict	src/eval.c	/^list_append_dict(list, dict)$/;"	f
list_append_number	src/eval.c	/^list_append_number(l, n)$/;"	f	file:
list_append_number	src/eval.c	/^static int list_append_number __ARGS((list_T *l, varnumber_T n));$/;"	p	file:	signature:(list_T *l, varnumber_T n)
list_append_string	src/eval.c	/^list_append_string(l, str, len)$/;"	f
list_append_tv	src/eval.c	/^list_append_tv(l, tv)$/;"	f
list_arg_vars	src/eval.c	/^list_arg_vars(eap, arg, first)$/;"	f	file:
list_arg_vars	src/eval.c	/^static char_u *list_arg_vars __ARGS((exarg_T *eap, char_u *arg, int *first));$/;"	p	file:	signature:(exarg_T *eap, char_u *arg, int *first)
list_buf_vars	src/eval.c	/^list_buf_vars(first)$/;"	f	file:
list_buf_vars	src/eval.c	/^static void list_buf_vars __ARGS((int *first));$/;"	p	file:	signature:(int *first)
list_concat	src/eval.c	/^list_concat(l1, l2, tv)$/;"	f	file:
list_concat	src/eval.c	/^static int list_concat __ARGS((list_T *l1, list_T *l2, typval_T *tv));$/;"	p	file:	signature:(list_T *l1, list_T *l2, typval_T *tv)
list_copy	src/eval.c	/^list_copy(orig, deep, copyID)$/;"	f	file:
list_copy	src/eval.c	/^static list_T *list_copy __ARGS((list_T *orig, int deep, int copyID));$/;"	p	file:	signature:(list_T *orig, int deep, int copyID)
list_equal	src/eval.c	/^list_equal(l1, l2, ic)$/;"	f	file:
list_equal	src/eval.c	/^static int list_equal __ARGS((list_T *l1, list_T *l2, int ic));$/;"	p	file:	signature:(list_T *l1, list_T *l2, int ic)
list_extend	src/eval.c	/^list_extend(l1, l2, bef)$/;"	f	file:
list_extend	src/eval.c	/^static int list_extend __ARGS((list_T	*l1, list_T *l2, listitem_T *bef));$/;"	p	file:	signature:(list_T *l1, list_T *l2, listitem_T *bef)
list_find	src/eval.c	/^list_find(l, n)$/;"	f	file:
list_find	src/eval.c	/^static listitem_T *list_find __ARGS((list_T *l, long n));$/;"	p	file:	signature:(list_T *l, long n)
list_find_nr	src/eval.c	/^list_find_nr(l, idx, errorp)$/;"	f	file:
list_find_nr	src/eval.c	/^static long list_find_nr __ARGS((list_T *l, long idx, int *errorp));$/;"	p	file:	signature:(list_T *l, long idx, int *errorp)
list_find_str	src/eval.c	/^list_find_str(l, idx)$/;"	f
list_fix_watch	src/eval.c	/^list_fix_watch(l, item)$/;"	f	file:
list_fix_watch	src/eval.c	/^static void list_fix_watch __ARGS((list_T *l, listitem_T *item));$/;"	p	file:	signature:(list_T *l, listitem_T *item)
list_free	src/eval.c	/^list_free(l, recurse)$/;"	f
list_func_head	src/eval.c	/^list_func_head(fp, indent)$/;"	f	file:
list_func_head	src/eval.c	/^static void list_func_head __ARGS((ufunc_T *fp, int indent));$/;"	p	file:	signature:(ufunc_T *fp, int indent)
list_func_vars	src/eval.c	/^list_func_vars(first)$/;"	f	file:
list_func_vars	src/eval.c	/^static void list_func_vars __ARGS((int *first));$/;"	p	file:	signature:(int *first)
list_glob_vars	src/eval.c	/^list_glob_vars(first)$/;"	f	file:
list_glob_vars	src/eval.c	/^static void list_glob_vars __ARGS((int *first));$/;"	p	file:	signature:(int *first)
list_hashtable_vars	src/eval.c	/^list_hashtable_vars(ht, prefix, empty, first)$/;"	f	file:
list_hashtable_vars	src/eval.c	/^static void list_hashtable_vars __ARGS((hashtab_T *ht, char_u *prefix, int empty, int *first));$/;"	p	file:	signature:(hashtab_T *ht, char_u *prefix, int empty, int *first)
list_idx_of_item	src/eval.c	/^list_idx_of_item(l, item)$/;"	f	file:
list_idx_of_item	src/eval.c	/^static long list_idx_of_item __ARGS((list_T *l, listitem_T *item));$/;"	p	file:	signature:(list_T *l, listitem_T *item)
list_insert_tv	src/eval.c	/^list_insert_tv(l, tv, item)$/;"	f	file:
list_insert_tv	src/eval.c	/^static int list_insert_tv __ARGS((list_T *l, typval_T *tv, listitem_T *item));$/;"	p	file:	signature:(list_T *l, typval_T *tv, listitem_T *item)
list_join	src/eval.c	/^list_join(gap, l, sep, echo, copyID)$/;"	f	file:
list_join	src/eval.c	/^static int list_join __ARGS((garray_T *gap, list_T *l, char_u *sep, int echo, int copyID));$/;"	p	file:	signature:(garray_T *gap, list_T *l, char_u *sep, int echo, int copyID)
list_len	src/eval.c	/^list_len(l)$/;"	f	file:
list_len	src/eval.c	/^static long list_len __ARGS((list_T *l));$/;"	p	file:	signature:(list_T *l)
list_one_var	src/eval.c	/^list_one_var(v, prefix, first)$/;"	f	file:
list_one_var	src/eval.c	/^static void list_one_var __ARGS((dictitem_T *v, char_u *prefix, int *first));$/;"	p	file:	signature:(dictitem_T *v, char_u *prefix, int *first)
list_one_var_a	src/eval.c	/^list_one_var_a(prefix, name, type, string, first)$/;"	f	file:
list_one_var_a	src/eval.c	/^static void list_one_var_a __ARGS((char_u *prefix, char_u *name, int type, char_u *string, int *first));$/;"	p	file:	signature:(char_u *prefix, char_u *name, int type, char_u *string, int *first)
list_rem_watch	src/eval.c	/^list_rem_watch(l, lwrem)$/;"	f	file:
list_rem_watch	src/eval.c	/^static void list_rem_watch __ARGS((list_T *l, listwatch_T *lwrem));$/;"	p	file:	signature:(list_T *l, listwatch_T *lwrem)
list_remove	src/eval.c	/^list_remove(l, item, item2)$/;"	f	file:
list_remove	src/eval.c	/^static void list_remove __ARGS((list_T *l, listitem_T *item, listitem_T *item2));$/;"	p	file:	signature:(list_T *l, listitem_T *item, listitem_T *item2)
list_script_vars	src/eval.c	/^list_script_vars(first)$/;"	f	file:
list_script_vars	src/eval.c	/^static void list_script_vars __ARGS((int *first));$/;"	p	file:	signature:(int *first)
list_tab_vars	src/eval.c	/^list_tab_vars(first)$/;"	f	file:
list_tab_vars	src/eval.c	/^static void list_tab_vars __ARGS((int *first));$/;"	p	file:	signature:(int *first)
list_unref	src/eval.c	/^list_unref(l)$/;"	f
list_version	src/version.c	/^list_version()$/;"	f
list_vim_vars	src/eval.c	/^list_vim_vars(first)$/;"	f	file:
list_vim_vars	src/eval.c	/^static void list_vim_vars __ARGS((int *first));$/;"	p	file:	signature:(int *first)
list_win_vars	src/eval.c	/^list_win_vars(first)$/;"	f	file:
list_win_vars	src/eval.c	/^static void list_win_vars __ARGS((int *first));$/;"	p	file:	signature:(int *first)
listcmd_busy	src/globals.h	/^EXTERN int	listcmd_busy INIT(= FALSE); \/* set when :argdo, :windo or$/;"	v
listdigraphs	src/digraph.c	/^listdigraphs()$/;"	f
listitem_S	src/structs.h	/^struct listitem_S$/;"	s
listitem_S::li_next	src/structs.h	/^    listitem_T	*li_next;	\/* next item in list *\/$/;"	m	struct:listitem_S	access:public
listitem_S::li_prev	src/structs.h	/^    listitem_T	*li_prev;	\/* previous item in list *\/$/;"	m	struct:listitem_S	access:public
listitem_S::li_tv	src/structs.h	/^    typval_T	li_tv;		\/* type and value of the variable *\/$/;"	m	struct:listitem_S	access:public
listitem_T	src/structs.h	/^typedef struct listitem_S listitem_T;$/;"	t	typeref:struct:listitem_S
listitem_alloc	src/eval.c	/^listitem_alloc()$/;"	f	file:
listitem_alloc	src/eval.c	/^static listitem_T *listitem_alloc __ARGS((void));$/;"	p	file:	signature:(void)
listitem_free	src/eval.c	/^listitem_free(item)$/;"	f	file:
listitem_free	src/eval.c	/^static void listitem_free __ARGS((listitem_T *item));$/;"	p	file:	signature:(listitem_T *item)
listitem_remove	src/eval.c	/^listitem_remove(l, item)$/;"	f	file:
listitem_remove	src/eval.c	/^static void listitem_remove __ARGS((list_T *l, listitem_T *item));$/;"	p	file:	signature:(list_T *l, listitem_T *item)
listvar_S	src/structs.h	/^struct listvar_S$/;"	s
listvar_S::lv_copyID	src/structs.h	/^    int		lv_copyID;	\/* ID used by deepcopy() *\/$/;"	m	struct:listvar_S	access:public
listvar_S::lv_copylist	src/structs.h	/^    list_T	*lv_copylist;	\/* copied list used by deepcopy() *\/$/;"	m	struct:listvar_S	access:public
listvar_S::lv_first	src/structs.h	/^    listitem_T	*lv_first;	\/* first item, NULL if none *\/$/;"	m	struct:listvar_S	access:public
listvar_S::lv_idx	src/structs.h	/^    int		lv_idx;		\/* cached index of an item *\/$/;"	m	struct:listvar_S	access:public
listvar_S::lv_idx_item	src/structs.h	/^    listitem_T	*lv_idx_item;	\/* when not NULL item at index "lv_idx" *\/$/;"	m	struct:listvar_S	access:public
listvar_S::lv_last	src/structs.h	/^    listitem_T	*lv_last;	\/* last item, NULL if none *\/$/;"	m	struct:listvar_S	access:public
listvar_S::lv_len	src/structs.h	/^    int		lv_len;		\/* number of items *\/$/;"	m	struct:listvar_S	access:public
listvar_S::lv_lock	src/structs.h	/^    char	lv_lock;	\/* zero, VAR_LOCKED, VAR_FIXED *\/$/;"	m	struct:listvar_S	access:public
listvar_S::lv_refcount	src/structs.h	/^    int		lv_refcount;	\/* reference count *\/$/;"	m	struct:listvar_S	access:public
listvar_S::lv_used_next	src/structs.h	/^    list_T	*lv_used_next;	\/* next list in used lists list *\/$/;"	m	struct:listvar_S	access:public
listvar_S::lv_used_prev	src/structs.h	/^    list_T	*lv_used_prev;	\/* previous list in used lists list *\/$/;"	m	struct:listvar_S	access:public
listvar_S::lv_watch	src/structs.h	/^    listwatch_T	*lv_watch;	\/* first watcher, NULL if none *\/$/;"	m	struct:listvar_S	access:public
listwatch_S	src/structs.h	/^struct listwatch_S$/;"	s
listwatch_S::lw_item	src/structs.h	/^    listitem_T		*lw_item;	\/* item being watched *\/$/;"	m	struct:listwatch_S	access:public
listwatch_S::lw_next	src/structs.h	/^    listwatch_T		*lw_next;	\/* next watcher *\/$/;"	m	struct:listwatch_S	access:public
listwatch_T	src/structs.h	/^typedef struct listwatch_S listwatch_T;$/;"	t	typeref:struct:listwatch_S
literal	src/main.c	/^    int		literal;		\/* don't expand file names *\/$/;"	m	struct:__anon9	file:	access:public
lk	src/swis.s	/^lk	rn	14$/;"	l
ll_di	src/eval.c	/^    dictitem_T	*ll_di;		\/* The dictitem or NULL *\/$/;"	m	struct:lval_S	file:	access:public
ll_dict	src/eval.c	/^    dict_T	*ll_dict;	\/* The Dictionary or NULL *\/$/;"	m	struct:lval_S	file:	access:public
ll_empty2	src/eval.c	/^    int		ll_empty2;	\/* Second index is empty: [i:] *\/$/;"	m	struct:lval_S	file:	access:public
ll_exp_name	src/eval.c	/^    char_u	*ll_exp_name;	\/* NULL or expanded name in allocated memory. *\/$/;"	m	struct:lval_S	file:	access:public
ll_free_all	src/quickfix.c	/^ll_free_all(pqi)$/;"	f	file:
ll_free_all	src/quickfix.c	/^static void	ll_free_all __ARGS((qf_info_T **pqi));$/;"	p	file:	signature:(qf_info_T **pqi)
ll_get_or_alloc_list	src/quickfix.c	/^ll_get_or_alloc_list(wp)$/;"	f	file:
ll_get_or_alloc_list	src/quickfix.c	/^static qf_info_T *ll_get_or_alloc_list __ARGS((win_T *));$/;"	p	file:	signature:(win_T *)
ll_li	src/eval.c	/^    listitem_T	*ll_li;		\/* The list item or NULL. *\/$/;"	m	struct:lval_S	file:	access:public
ll_list	src/eval.c	/^    list_T	*ll_list;	\/* The list or NULL. *\/$/;"	m	struct:lval_S	file:	access:public
ll_n1	src/eval.c	/^    long	ll_n1;		\/* First index for list *\/$/;"	m	struct:lval_S	file:	access:public
ll_n2	src/eval.c	/^    long	ll_n2;		\/* Second index for list range *\/$/;"	m	struct:lval_S	file:	access:public
ll_name	src/eval.c	/^    char_u	*ll_name;	\/* start of variable name (can be NULL) *\/$/;"	m	struct:lval_S	file:	access:public
ll_new_list	src/quickfix.c	/^ll_new_list()$/;"	f	file:
ll_new_list	src/quickfix.c	/^static qf_info_T *ll_new_list __ARGS((void));$/;"	p	file:	signature:(void)
ll_newkey	src/eval.c	/^    char_u	*ll_newkey;	\/* New key for Dict in alloc. mem or NULL. *\/$/;"	m	struct:lval_S	file:	access:public
ll_range	src/eval.c	/^    int		ll_range;	\/* TRUE when a [i:j] range was used *\/$/;"	m	struct:lval_S	file:	access:public
ll_tv	src/eval.c	/^    typval_T	*ll_tv;		\/* Typeval of item being used.  If "newkey"$/;"	m	struct:lval_S	file:	access:public
lnkname	src/dosinst.h	/^    char	*lnkname;	\/* shortcut file name *\/$/;"	m	struct:__anon138	access:public
lnum	runtime/spell/fixdup.vim	/^  let lnum += 1$/;"	v
lnum	runtime/spell/fixdup.vim	/^let lnum = 2$/;"	v
lnum	src/ex_cmds.c	/^    linenr_T	lnum;			\/* line number *\/$/;"	m	struct:__anon66	file:	access:public
lnum	src/ex_docmd.c	/^    linenr_T	lnum;		\/* sourcing_lnum of the line *\/$/;"	m	struct:__anon4	file:	access:public
lnum	src/fold.c	/^    linenr_T	lnum;		\/* current line number *\/$/;"	m	struct:__anon98	file:	access:public
lnum	src/move.c	/^    linenr_T	    lnum;	\/* line number *\/$/;"	m	struct:__anon84	file:	access:public
lnum	src/search.c	/^    linenr_T	lnum;		\/* Line we were up to in file *\/$/;"	m	struct:SearchedFile	file:	access:public
lnum	src/structs.h	/^    linenr_T	lnum;		\/* line number which has this sign *\/$/;"	m	struct:signlist	access:public
lnum	src/structs.h	/^    linenr_T	lnum;	\/* line number *\/$/;"	m	struct:__anon34	access:public
lnum	src/structs.h	/^    linenr_T	lnum;	\/* line number *\/$/;"	m	struct:__anon35	access:public
lnum	src/structs.h	/^    linenr_T	lnum;	\/* the line to search for a match *\/$/;"	m	struct:__anon56	access:public
lnum_save	src/fold.c	/^    linenr_T	lnum_save;	\/* line nr used by foldUpdateIEMSRecurse() *\/$/;"	m	struct:__anon98	file:	access:public
load_buffer_by_name	src/workshop.c	/^load_buffer_by_name($/;"	f	file:	signature:( char *filename, int lnum)
load_buffer_by_name	src/workshop.c	/^static void	 load_buffer_by_name(char *, int);$/;"	p	file:	signature:(char *, int)
load_colors	src/syntax.c	/^load_colors(name)$/;"	f
load_current_state	src/syntax.c	/^load_current_state(from)$/;"	f	file:
load_current_state	src/syntax.c	/^static void load_current_state __ARGS((synstate_T *from));$/;"	p	file:	signature:(synstate_T *from)
load_dll	src/if_lua.c	48;"	d	file:
load_dll	src/if_lua.c	52;"	d	file:
load_dll	src/if_python.c	106;"	d	file:
load_dll	src/if_python.c	108;"	d	file:
load_dll	src/if_python.c	113;"	d	file:
load_dll	src/if_python3.c	84;"	d	file:
load_dll	src/if_python3.c	86;"	d	file:
load_dll	src/if_python3.c	91;"	d	file:
load_dummy_buffer	src/quickfix.c	/^load_dummy_buffer(fname)$/;"	f	file:
load_dummy_buffer	src/quickfix.c	/^static buf_T	*load_dummy_buffer __ARGS((char_u *fname));$/;"	p	file:	signature:(char_u *fname)
load_menu_iconfile	src/gui_gtk.c	/^load_menu_iconfile(char_u *name, GtkIconSize icon_size)$/;"	f	file:	signature:(char_u *name, GtkIconSize icon_size)
load_window	src/workshop.c	/^load_window($/;"	f	file:	signature:( char *filename, int lnum)
load_window	src/workshop.c	/^static void	 load_window(char *, int lnum);$/;"	p	file:	signature:(char *, int lnum)
loaded_gzip	runtime/plugin/gzip.vim	/^let loaded_gzip = 1$/;"	v
loaded_less	runtime/macros/less.vim	/^let loaded_less = 1$/;"	v
loaded_matchit	runtime/macros/matchit.vim	/^let loaded_matchit = 1$/;"	v
loaded_rrhelper	runtime/plugin/rrhelper.vim	/^let loaded_rrhelper = 1$/;"	v
loaded_spellfile_plugin	runtime/plugin/spellfile.vim	/^let loaded_spellfile_plugin = 1$/;"	v
local_xsmp_handle_requests	src/gui_gtk_x11.c	/^local_xsmp_handle_requests(source, condition, data)$/;"	f	file:
local_xsmp_handle_requests	src/gui_x11.c	/^local_xsmp_handle_requests(c, s, i)$/;"	f	file:
local_xsmp_handle_requests	src/gui_x11.c	/^static void local_xsmp_handle_requests __ARGS((XtPointer c, int *s, XtInputId *i));$/;"	p	file:	signature:(XtPointer c, int *s, XtInputId *i)
lock2name	src/os_amiga.c	/^lock2name(lock, buf, len)$/;"	f	file:
lock2name	src/os_amiga.c	/^static int lock2name __ARGS((BPTR lock, char_u *buf, long   len));$/;"	p	file:	signature:(BPTR lock, char_u *buf, long len)
lockmarks	src/structs.h	/^    int		lockmarks;		\/* TRUE when ":lockmarks" was used *\/$/;"	m	struct:__anon42	access:public
logfont2name	src/gui_w48.c	/^logfont2name(LOGFONT lf)$/;"	f	file:	signature:(LOGFONT lf)
login	runtime/ftplugin/changelog.vim	/^  function! s:login()$/;"	f
longVersion	src/version.c	/^char	*longVersion = VIM_VERSION_LONG;$/;"	v
longVersion	src/version.c	/^char	*longVersion = VIM_VERSION_LONG_DATE __DATE__ " " __TIME__ ")";$/;"	v
longVersion	src/version.c	/^char	longVersion[sizeof(VIM_VERSION_LONG_DATE) + sizeof(__DATE__)$/;"	v
long_i	src/vim.h	/^typedef		 __int64	long_i;$/;"	t
long_i	src/vim.h	/^typedef		 long __w64     long_i;$/;"	t
long_to_char	src/memline.c	/^long_to_char(n, s)$/;"	f	file:
long_to_char	src/memline.c	/^static void long_to_char __ARGS((long, char_u *));$/;"	p	file:	signature:(long, char_u *)
long_u	src/vim.h	/^typedef unsigned __int64	long_u;$/;"	t
long_u	src/vim.h	/^typedef unsigned long __w64	long_u;$/;"	t
longest_lnum	src/gui.c	/^static linenr_T longest_lnum = 0;$/;"	v	file:
lookup	src/nbdebug.c	/^lookup($/;"	f	file:	signature:( char *file)
lookup	src/nbdebug.c	/^static int	 lookup(char *);$/;"	p	file:	signature:(char *)
lookup	src/wsdebug.c	/^lookup($/;"	f	file:	signature:( char *file)
lookup	src/wsdebug.c	/^static int	 lookup(char *);$/;"	p	file:	signature:(char *)
lookupVerb	src/workshop.c	/^lookupVerb($/;"	f	file:	signature:( char *verb, int skip)
lookupVerb	src/workshop.c	/^static char	*lookupVerb(char *, int);$/;"	p	file:	signature:(char *, int)
lookup_menu_iconfile	src/gui_gtk.c	/^lookup_menu_iconfile(char_u *iconfile, char_u *dest)$/;"	f	file:	signature:(char_u *iconfile, char_u *dest)
loop_cookie	src/ex_docmd.c	/^struct loop_cookie$/;"	s	file:
loop_cookie::cookie	src/ex_docmd.c	/^    void	*cookie;$/;"	m	struct:loop_cookie	file:	access:public
loop_cookie::current_line	src/ex_docmd.c	/^    int		current_line;		\/* last read line from growarray *\/$/;"	m	struct:loop_cookie	file:	access:public
loop_cookie::getline	src/ex_docmd.c	/^    char_u	*(*getline) __ARGS((int, void *, int));$/;"	m	struct:loop_cookie	file:	access:public
loop_cookie::lines_gap	src/ex_docmd.c	/^    garray_T	*lines_gap;		\/* growarray with line info *\/$/;"	m	struct:loop_cookie	file:	access:public
loop_cookie::repeating	src/ex_docmd.c	/^    int		repeating;		\/* TRUE when looping a second time *\/$/;"	m	struct:loop_cookie	file:	access:public
loops	src/testdir/test49.vim	/^		    let loops = loops - 1$/;"	v
loops	src/testdir/test49.vim	/^		let loops = loops - 1$/;"	v
loops	src/testdir/test49.vim	/^	    let loops = -1$/;"	v
loops	src/testdir/test49.vim	/^	    let loops = loops - 1$/;"	v
loops	src/testdir/test49.vim	/^	let loops = loops - 1$/;"	v
loops	src/testdir/test49.vim	/^    let loops = 3$/;"	v
loops	src/testdir/test49.vim	/^    let loops = loops - 1$/;"	v
loops	src/testdir/test49.vim	/^let loops = 2$/;"	v
loops	src/testdir/test49.vim	/^let loops = 3$/;"	v
lowest_marked	src/memline.c	/^static linenr_T	lowest_marked = 0;$/;"	v	file:
lp_region	src/spell.c	/^    int		lp_region;	\/* bitmask for region or REGION_ALL *\/$/;"	m	struct:langp_S	file:	access:public
lp_replang	src/spell.c	/^    slang_T	*lp_replang;	\/* language used for REP items or NULL *\/$/;"	m	struct:langp_S	file:	access:public
lp_sallang	src/spell.c	/^    slang_T	*lp_sallang;	\/* language used for sound folding or NULL *\/$/;"	m	struct:langp_S	file:	access:public
lp_slang	src/spell.c	/^    slang_T	*lp_slang;	\/* info for this language *\/$/;"	m	struct:langp_S	file:	access:public
lpos_T	src/structs.h	/^} lpos_T;$/;"	t	typeref:struct:__anon35
lpszText	src/gui_w32.c	/^	LPSTR lpszText;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
lpszText	src/gui_w32.c	/^    LPSTR	lpszText;$/;"	m	struct:tagNMTTDISPINFOA	file:	access:public
lpszText	src/gui_w32.c	/^    LPSTR      lpszText;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:	access:public
lpszText	src/gui_w32.c	/^    LPWSTR	lpszText;$/;"	m	struct:tagNMTTDISPINFOW	file:	access:public
lpwAlign	src/gui_w32.c	/^lpwAlign($/;"	f	file:	signature:( LPWORD lpIn)
lpwAlign	src/gui_w32.c	/^static LPWORD lpwAlign(LPWORD);$/;"	p	file:
lrF_sub	src/farsi.c	/^lrF_sub(ibuf)$/;"	f
lrFswap	src/farsi.c	/^lrFswap(cmdbuf, len)$/;"	f
lrswap	src/farsi.c	/^lrswap(ibuf)$/;"	f
lrswapbuf	src/farsi.c	/^lrswapbuf(buf, len)$/;"	f	file:
lrswapbuf	src/farsi.c	/^static void lrswapbuf __ARGS((char_u *buf, int len));$/;"	p	file:	signature:(char_u *buf, int len)
lt	src/macros.h	22;"	d
lt	src/macros.h	35;"	d
ltoreq	src/macros.h	43;"	d
ltp	src/macros.h	27;"	d
ltp	src/macros.h	37;"	d
luaL_addlstring	src/if_lua.c	70;"	d	file:
luaL_buffinit	src/if_lua.c	68;"	d	file:
luaL_checkinteger	src/if_lua.c	61;"	d	file:
luaL_checklstring	src/if_lua.c	60;"	d	file:
luaL_checktype	src/if_lua.c	63;"	d	file:
luaL_error	src/if_lua.c	64;"	d	file:
luaL_loadbuffer	src/if_lua.c	66;"	d	file:
luaL_loadfile	src/if_lua.c	65;"	d	file:
luaL_newstate	src/if_lua.c	67;"	d	file:
luaL_openlibs	src/if_lua.c	116;"	d	file:
luaL_optinteger	src/if_lua.c	62;"	d	file:
luaL_prepbuffer	src/if_lua.c	69;"	d	file:
luaL_pushresult	src/if_lua.c	71;"	d	file:
luaL_register	src/if_lua.c	58;"	d	file:
luaL_typerror	src/if_lua.c	59;"	d	file:
luaV_Buffer	src/if_lua.c	/^typedef buf_T *luaV_Buffer;$/;"	t	file:
luaV_Buffer_mt	src/if_lua.c	/^static const luaL_Reg luaV_Buffer_mt[] = {$/;"	v	file:
luaV_Reg	src/if_lua.c	/^} luaV_Reg;$/;"	t	typeref:struct:__anon127	file:
luaV_Window	src/if_lua.c	/^typedef win_T *luaV_Window;$/;"	t	file:
luaV_Window_mt	src/if_lua.c	/^static const luaL_Reg luaV_Window_mt[] = {$/;"	v	file:
luaV_addlstring	src/if_lua.c	/^luaV_addlstring(luaL_Buffer *b, const char *s, size_t l, int toline)$/;"	f	file:	signature:(luaL_Buffer *b, const char *s, size_t l, int toline)
luaV_beep	src/if_lua.c	/^luaV_beep(lua_State *L UNUSED)$/;"	f	file:	signature:(lua_State *L UNUSED)
luaV_buffer	src/if_lua.c	/^luaV_buffer(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_buffer_call	src/if_lua.c	/^luaV_buffer_call(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_buffer_index	src/if_lua.c	/^luaV_buffer_index(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_buffer_insert	src/if_lua.c	/^luaV_buffer_insert(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_buffer_isvalid	src/if_lua.c	/^luaV_buffer_isvalid(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_buffer_len	src/if_lua.c	/^luaV_buffer_len(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_buffer_newindex	src/if_lua.c	/^luaV_buffer_newindex(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_buffer_next	src/if_lua.c	/^luaV_buffer_next(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_buffer_previous	src/if_lua.c	/^luaV_buffer_previous(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_buffer_tostring	src/if_lua.c	/^luaV_buffer_tostring(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_checksandbox	src/if_lua.c	37;"	d	file:
luaV_checkudata	src/if_lua.c	/^luaV_checkudata(lua_State *L, int ud, const char *tname)$/;"	f	file:	signature:(lua_State *L, int ud, const char *tname)
luaV_command	src/if_lua.c	/^luaV_command(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_dll	src/if_lua.c	/^static const luaV_Reg luaV_dll[] = {$/;"	v	file:
luaV_emsg	src/if_lua.c	40;"	d	file:
luaV_eval	src/if_lua.c	/^luaV_eval(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_free	src/if_lua.c	/^luaV_free(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_function	src/if_lua.c	/^typedef void **luaV_function;$/;"	t	file:
luaV_getfield	src/if_lua.c	34;"	d	file:
luaV_isbuffer	src/if_lua.c	/^luaV_isbuffer(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_iswindow	src/if_lua.c	/^luaV_iswindow(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_line	src/if_lua.c	/^luaV_line(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_module	src/if_lua.c	/^static const luaL_Reg luaV_module[] = {$/;"	v	file:
luaV_msg	src/if_lua.c	39;"	d	file:
luaV_msgfunc	src/if_lua.c	/^luaV_msgfunc(lua_State *L, msgfunc_T mf)$/;"	f	file:	signature:(lua_State *L, msgfunc_T mf)
luaV_newbuffer	src/if_lua.c	/^luaV_newbuffer(lua_State *L, buf_T *buf)$/;"	f	file:	signature:(lua_State *L, buf_T *buf)
luaV_newmetatable	src/if_lua.c	/^luaV_newmetatable(lua_State *L, const char *tname)$/;"	f	file:	signature:(lua_State *L, const char *tname)
luaV_newstate	src/if_lua.c	/^luaV_newstate(void)$/;"	f	file:	signature:(void)
luaV_newwindow	src/if_lua.c	/^luaV_newwindow(lua_State *L, win_T *win)$/;"	f	file:	signature:(lua_State *L, win_T *win)
luaV_open	src/if_lua.c	/^luaV_open(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_print	src/if_lua.c	/^luaV_print(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_pushbuffer	src/if_lua.c	/^luaV_pushbuffer (lua_State *L, buf_T *buf)$/;"	f	file:	signature:(lua_State *L, buf_T *buf)
luaV_pushline	src/if_lua.c	/^luaV_pushline(lua_State *L, buf_T *buf, linenr_T n)$/;"	f	file:	signature:(lua_State *L, buf_T *buf, linenr_T n)
luaV_pushtypval	src/if_lua.c	/^luaV_pushtypval(lua_State *L, typval_T *tv)$/;"	f	file:	signature:(lua_State *L, typval_T *tv)
luaV_pushwindow	src/if_lua.c	/^luaV_pushwindow(lua_State *L, win_T *win)$/;"	f	file:	signature:(lua_State *L, win_T *win)
luaV_setrange	src/if_lua.c	/^luaV_setrange(lua_State *L, int line1, int line2)$/;"	f	file:	signature:(lua_State *L, int line1, int line2)
luaV_toline	src/if_lua.c	/^luaV_toline(lua_State *L, int pos)$/;"	f	file:	signature:(lua_State *L, int pos)
luaV_toudata	src/if_lua.c	/^luaV_toudata(lua_State *L, int ud, const char *tname)$/;"	f	file:	signature:(lua_State *L, int ud, const char *tname)
luaV_window	src/if_lua.c	/^luaV_window(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_window_call	src/if_lua.c	/^luaV_window_call(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_window_index	src/if_lua.c	/^luaV_window_index(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_window_isvalid	src/if_lua.c	/^luaV_window_isvalid(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_window_newindex	src/if_lua.c	/^luaV_window_newindex (lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_window_next	src/if_lua.c	/^luaV_window_next(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_window_previous	src/if_lua.c	/^luaV_window_previous(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
luaV_window_tostring	src/if_lua.c	/^luaV_window_tostring(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
lua_buffer_free	src/if_lua.c	/^lua_buffer_free(buf_T *buf)$/;"	f	signature:(buf_T *buf)
lua_call	src/if_lua.c	105;"	d	file:
lua_close	src/if_lua.c	73;"	d	file:
lua_createtable	src/if_lua.c	98;"	d	file:
lua_enabled	src/if_lua.c	/^lua_enabled(int verbose)$/;"	f	signature:(int verbose)
lua_end	src/if_lua.c	/^lua_end(void)$/;"	f	signature:(void)
lua_getfield	src/if_lua.c	96;"	d	file:
lua_getmetatable	src/if_lua.c	100;"	d	file:
lua_gettop	src/if_lua.c	74;"	d	file:
lua_init	src/if_lua.c	/^lua_init(void)$/;"	f	file:	signature:(void)
lua_is_open	src/if_lua.c	/^lua_is_open(void)$/;"	f	file:	signature:(void)
lua_isnumber	src/if_lua.c	78;"	d	file:
lua_isstring	src/if_lua.c	79;"	d	file:
lua_link_init	src/if_lua.c	/^lua_link_init(char *libname, int verbose)$/;"	f	file:	signature:(char *libname, int verbose)
lua_newuserdata	src/if_lua.c	99;"	d	file:
lua_pcall	src/if_lua.c	106;"	d	file:
lua_pushboolean	src/if_lua.c	94;"	d	file:
lua_pushcclosure	src/if_lua.c	93;"	d	file:
lua_pushfstring	src/if_lua.c	92;"	d	file:
lua_pushinteger	src/if_lua.c	89;"	d	file:
lua_pushlightuserdata	src/if_lua.c	95;"	d	file:
lua_pushlstring	src/if_lua.c	90;"	d	file:
lua_pushnil	src/if_lua.c	87;"	d	file:
lua_pushnumber	src/if_lua.c	88;"	d	file:
lua_pushstring	src/if_lua.c	91;"	d	file:
lua_pushvalue	src/if_lua.c	76;"	d	file:
lua_rawequal	src/if_lua.c	81;"	d	file:
lua_rawget	src/if_lua.c	97;"	d	file:
lua_rawset	src/if_lua.c	102;"	d	file:
lua_rawseti	src/if_lua.c	103;"	d	file:
lua_replace	src/if_lua.c	77;"	d	file:
lua_setfield	src/if_lua.c	101;"	d	file:
lua_setmetatable	src/if_lua.c	104;"	d	file:
lua_settop	src/if_lua.c	75;"	d	file:
lua_subversion	runtime/syntax/lua.vim	/^  let lua_subversion = 0$/;"	v
lua_subversion	runtime/syntax/lua.vim	/^  let lua_subversion = 1$/;"	v
lua_toboolean	src/if_lua.c	84;"	d	file:
lua_tointeger	src/if_lua.c	83;"	d	file:
lua_tolstring	src/if_lua.c	85;"	d	file:
lua_tonumber	src/if_lua.c	82;"	d	file:
lua_touserdata	src/if_lua.c	86;"	d	file:
lua_type	src/if_lua.c	80;"	d	file:
lua_version	runtime/syntax/lua.vim	/^  let lua_version = 5$/;"	v
lua_window_free	src/if_lua.c	/^lua_window_free(win_T *win)$/;"	f	signature:(win_T *win)
luaopen_base	src/if_lua.c	108;"	d	file:
luaopen_debug	src/if_lua.c	115;"	d	file:
luaopen_io	src/if_lua.c	112;"	d	file:
luaopen_math	src/if_lua.c	111;"	d	file:
luaopen_os	src/if_lua.c	113;"	d	file:
luaopen_package	src/if_lua.c	114;"	d	file:
luaopen_string	src/if_lua.c	110;"	d	file:
luaopen_table	src/if_lua.c	109;"	d	file:
luaopen_vim	src/if_lua.c	/^luaopen_vim(lua_State *L)$/;"	f	file:	signature:(lua_State *L)
lv_copyID	src/structs.h	/^    int		lv_copyID;	\/* ID used by deepcopy() *\/$/;"	m	struct:listvar_S	access:public
lv_copylist	src/structs.h	/^    list_T	*lv_copylist;	\/* copied list used by deepcopy() *\/$/;"	m	struct:listvar_S	access:public
lv_first	src/structs.h	/^    listitem_T	*lv_first;	\/* first item, NULL if none *\/$/;"	m	struct:listvar_S	access:public
lv_idx	src/structs.h	/^    int		lv_idx;		\/* cached index of an item *\/$/;"	m	struct:listvar_S	access:public
lv_idx_item	src/structs.h	/^    listitem_T	*lv_idx_item;	\/* when not NULL item at index "lv_idx" *\/$/;"	m	struct:listvar_S	access:public
lv_last	src/structs.h	/^    listitem_T	*lv_last;	\/* last item, NULL if none *\/$/;"	m	struct:listvar_S	access:public
lv_len	src/structs.h	/^    int		lv_len;		\/* number of items *\/$/;"	m	struct:listvar_S	access:public
lv_lock	src/structs.h	/^    char	lv_lock;	\/* zero, VAR_LOCKED, VAR_FIXED *\/$/;"	m	struct:listvar_S	access:public
lv_refcount	src/structs.h	/^    int		lv_refcount;	\/* reference count *\/$/;"	m	struct:listvar_S	access:public
lv_used_next	src/structs.h	/^    list_T	*lv_used_next;	\/* next list in used lists list *\/$/;"	m	struct:listvar_S	access:public
lv_used_prev	src/structs.h	/^    list_T	*lv_used_prev;	\/* previous list in used lists list *\/$/;"	m	struct:listvar_S	access:public
lv_watch	src/structs.h	/^    listwatch_T	*lv_watch;	\/* first watcher, NULL if none *\/$/;"	m	struct:listvar_S	access:public
lval_S	src/eval.c	/^typedef struct lval_S$/;"	s	file:
lval_S::ll_di	src/eval.c	/^    dictitem_T	*ll_di;		\/* The dictitem or NULL *\/$/;"	m	struct:lval_S	file:	access:public
lval_S::ll_dict	src/eval.c	/^    dict_T	*ll_dict;	\/* The Dictionary or NULL *\/$/;"	m	struct:lval_S	file:	access:public
lval_S::ll_empty2	src/eval.c	/^    int		ll_empty2;	\/* Second index is empty: [i:] *\/$/;"	m	struct:lval_S	file:	access:public
lval_S::ll_exp_name	src/eval.c	/^    char_u	*ll_exp_name;	\/* NULL or expanded name in allocated memory. *\/$/;"	m	struct:lval_S	file:	access:public
lval_S::ll_li	src/eval.c	/^    listitem_T	*ll_li;		\/* The list item or NULL. *\/$/;"	m	struct:lval_S	file:	access:public
lval_S::ll_list	src/eval.c	/^    list_T	*ll_list;	\/* The list or NULL. *\/$/;"	m	struct:lval_S	file:	access:public
lval_S::ll_n1	src/eval.c	/^    long	ll_n1;		\/* First index for list *\/$/;"	m	struct:lval_S	file:	access:public
lval_S::ll_n2	src/eval.c	/^    long	ll_n2;		\/* Second index for list range *\/$/;"	m	struct:lval_S	file:	access:public
lval_S::ll_name	src/eval.c	/^    char_u	*ll_name;	\/* start of variable name (can be NULL) *\/$/;"	m	struct:lval_S	file:	access:public
lval_S::ll_newkey	src/eval.c	/^    char_u	*ll_newkey;	\/* New key for Dict in alloc. mem or NULL. *\/$/;"	m	struct:lval_S	file:	access:public
lval_S::ll_range	src/eval.c	/^    int		ll_range;	\/* TRUE when a [i:j] range was used *\/$/;"	m	struct:lval_S	file:	access:public
lval_S::ll_tv	src/eval.c	/^    typval_T	*ll_tv;		\/* Typeval of item being used.  If "newkey"$/;"	m	struct:lval_S	file:	access:public
lval_T	src/eval.c	/^} lval_T;$/;"	t	typeref:struct:lval_S	file:
lvl	src/fold.c	/^    int		lvl;		\/* current level (-1 for undefined) *\/$/;"	m	struct:__anon98	file:	access:public
lvl_next	src/fold.c	/^    int		lvl_next;	\/* level used for next line *\/$/;"	m	struct:__anon98	file:	access:public
lw_item	src/structs.h	/^    listitem_T		*lw_item;	\/* item being watched *\/$/;"	m	struct:listwatch_S	access:public
lw_next	src/structs.h	/^    listwatch_T		*lw_next;	\/* next watcher *\/$/;"	m	struct:listwatch_S	access:public
m	src/hangulin.c	/^static int f=F_NULL, m=M_NULL, l=L_NULL;$/;"	v	file:
mVIM	src/if_ruby.c	/^static VALUE mVIM;$/;"	v	file:
m_ChangeDir	src/VisVim/Commands.cpp	/^	int	m_ChangeDir;$/;"	m	class:CMainDialog	file:	access:public
m_ExceptionInfo	src/VisVim/OleAut.h	/^	EXCEPINFO	m_ExceptionInfo;$/;"	m	class:COleAutomationControl	access:protected
m_VariantResult	src/VisVim/OleAut.h	/^	VARIANTARG	m_VariantResult;$/;"	m	class:COleAutomationControl	access:protected
m_bDevStudioEditor	src/VisVim/Commands.cpp	/^	BOOL	m_bDevStudioEditor;$/;"	m	class:CMainDialog	file:	access:public
m_bNewTabs	src/VisVim/Commands.cpp	/^	BOOL	m_bNewTabs;$/;"	m	class:CMainDialog	file:	access:public
m_cRef	src/GvimExt/gvimext.h	/^	ULONG	m_cRef;$/;"	m	class:CShellExtClassFactory	access:protected
m_cRef	src/GvimExt/gvimext.h	/^    ULONG	 m_cRef;$/;"	m	class:CShellExt	access:protected
m_cntOfHWnd	src/GvimExt/gvimext.h	/^    int		 m_cntOfHWnd;$/;"	m	class:CShellExt	access:public
m_dwAdvise	src/VisVim/Commands.h	/^		DWORD m_dwAdvise;$/;"	m	class:CCommands::XEventHandler	access:protected
m_dwCookie	src/VisVim/DSAddIn.h	/^	DWORD m_dwCookie;$/;"	m	class:CDSAddIn	access:protected
m_edit_existing_off	src/GvimExt/gvimext.h	/^    UINT	 m_edit_existing_off;$/;"	m	class:CShellExt	access:protected
m_expr	src/structs.h	/^    char	m_expr;		\/* <expr> used, m_str is an expression *\/$/;"	m	struct:mapblock	access:public
m_hResult	src/VisVim/OleAut.h	/^	HRESULT		m_hResult;$/;"	m	class:COleAutomationControl	access:protected
m_hWnd	src/GvimExt/gvimext.h	/^    HWND	 m_hWnd[MAX_HWND];$/;"	m	class:CShellExt	access:public
m_info	src/structs.h	/^struct m_info$/;"	s
m_info::m_next	src/structs.h	/^    minfo_T	*m_next;	\/* pointer to next free chunk in the list *\/$/;"	m	struct:m_info	access:public
m_info::m_size	src/structs.h	/^    long_u	m_size;		\/* size of the chunk (including m_info) *\/$/;"	m	struct:m_info	access:public
m_keylen	src/structs.h	/^    int		m_keylen;	\/* strlen(m_keys) *\/$/;"	m	struct:mapblock	access:public
m_keys	src/structs.h	/^    char_u	*m_keys;	\/* mapped from *\/$/;"	m	struct:mapblock	access:public
m_mode	src/structs.h	/^    int		m_mode;		\/* valid mode *\/$/;"	m	struct:mapblock	access:public
m_nErrArg	src/VisVim/OleAut.h	/^	UINT		m_nErrArg;$/;"	m	class:COleAutomationControl	access:protected
m_next	src/structs.h	/^    mapblock_T	*m_next;	\/* next mapblock in list *\/$/;"	m	struct:mapblock	access:public
m_next	src/structs.h	/^    minfo_T	*m_next;	\/* pointer to next free chunk in the list *\/$/;"	m	struct:m_info	access:public
m_noremap	src/structs.h	/^    int		m_noremap;	\/* if non-zero no re-mapping for m_str *\/$/;"	m	struct:mapblock	access:public
m_onlyone	src/window.c	/^static char *m_onlyone = N_("Already only one window");$/;"	v	file:
m_pApplication	src/VisVim/Commands.h	/^	IApplication * m_pApplication;$/;"	m	class:CCommands	access:protected
m_pApplicationEventsObj	src/VisVim/Commands.h	/^	XApplicationEventsObj *m_pApplicationEventsObj;$/;"	m	class:CCommands	access:protected
m_pCommands	src/VisVim/Commands.h	/^		CCommands *m_pCommands;$/;"	m	class:CCommands::XEventHandler	access:public
m_pCommands	src/VisVim/DSAddIn.h	/^	CCommandsObj * m_pCommands;$/;"	m	class:CDSAddIn	access:protected
m_pDataObj	src/GvimExt/gvimext.h	/^    LPDATAOBJECT m_pDataObj;$/;"	m	class:CShellExt	access:protected
m_pDebuggerEventsObj	src/VisVim/Commands.h	/^	XDebuggerEventsObj *m_pDebuggerEventsObj;$/;"	m	class:CCommands	access:protected
m_pDispatch	src/VisVim/OleAut.h	/^	IDispatch*	m_pDispatch;$/;"	m	class:COleAutomationControl	access:protected
m_script_ID	src/structs.h	/^    scid_T	m_script_ID;	\/* ID of script where map was defined *\/$/;"	m	struct:mapblock	access:public
m_silent	src/structs.h	/^    char	m_silent;	\/* <silent> used, don't echo commands *\/$/;"	m	struct:mapblock	access:public
m_size	src/structs.h	/^    long_u	m_size;		\/* size of the chunk (including m_info) *\/$/;"	m	struct:m_info	access:public
m_str	src/structs.h	/^    char_u	*m_str;		\/* mapped to *\/$/;"	m	struct:mapblock	access:public
macMoveDialogItem	src/gui_mac.c	/^macMoveDialogItem($/;"	f	file:	signature:( DialogRef theDialog, short itemNumber, short X, short Y, Rect *inBox)
macSetDialogItemText	src/gui_mac.c	/^macSetDialogItemText($/;"	f	file:	signature:( DialogRef theDialog, short itemNumber, Str255 itemName)
macSizeDialogItem	src/gui_mac.c	/^macSizeDialogItem($/;"	f	file:	signature:( DialogRef theDialog, short itemNumber, short width, short height)
mac_conv_cleanup	src/os_mac_conv.c	/^mac_conv_cleanup()$/;"	f
mac_conv_init	src/os_mac_conv.c	/^mac_conv_init()$/;"	f
mac_enc_to_cfstring	src/os_mac_conv.c	/^mac_enc_to_cfstring(from, fromLen)$/;"	f
mac_enc_to_utf16	src/os_mac_conv.c	/^mac_enc_to_utf16(from, fromLen, actualLen)$/;"	f
mac_lang_init	src/os_mac_conv.c	/^mac_lang_init() {$/;"	f
mac_precompose_path	src/os_mac_conv.c	/^mac_precompose_path(decompPath, decompLen, precompLen)$/;"	f
mac_string_convert	src/os_mac_conv.c	/^mac_string_convert(ptr, len, lenp, fail_on_error, from_enc, to_enc, unconvlenp)$/;"	f
mac_utf16_to_enc	src/os_mac_conv.c	/^mac_utf16_to_enc(from, fromLen, actualLen)$/;"	f
mac_utf16_to_utf8	src/os_mac_conv.c	/^mac_utf16_to_utf8(from, fromLen, actualLen)$/;"	f	file:
mac_utf16_to_utf8	src/os_mac_conv.c	/^static char_u	    *mac_utf16_to_utf8 __ARGS((UniChar *from, size_t fromLen, size_t *actualLen));$/;"	p	file:	signature:(UniChar *from, size_t fromLen, size_t *actualLen)
mac_utf8_to_utf16	src/os_mac_conv.c	/^mac_utf8_to_utf16(from, fromLen, actualLen)$/;"	f	file:
mac_utf8_to_utf16	src/os_mac_conv.c	/^static UniChar	    *mac_utf8_to_utf16 __ARGS((char_u *from, size_t fromLen, size_t *actualLen));$/;"	p	file:	signature:(char_u *from, size_t fromLen, size_t *actualLen)
macroman2enc	src/os_mac_conv.c	/^macroman2enc(ptr, sizep, real_size)$/;"	f
magic	src/search.c	/^    int		    magic;	\/* magicness of the pattern *\/$/;"	m	struct:spat	file:	access:public
magick	src/gui_gtk_x11.c	2322;"	d	file:
magick	src/gui_gtk_x11.c	2326;"	d	file:
magick	src/gui_gtk_x11.c	2328;"	d	file:
magick	src/gui_gtk_x11.c	2329;"	d	file:
magick	src/gui_gtk_x11.c	2331;"	d	file:
magick	src/gui_gtk_x11.c	2332;"	d	file:
magick	src/gui_gtk_x11.c	2334;"	d	file:
main	runtime/doc/doctags.c	/^main(argc, argv)$/;"	f
main	runtime/macros/maze/maze.c	/^char*M,A,Z,E=40,J[40],T[40];main(C){for(*J=A=scanf(M="%d",&C);$/;"	f
main	runtime/macros/maze/mazeansi.c	/^char*M,A,Z,E=40,J[80],T[3];main(C){for(M=J+E,*J=A=scanf("%d",&$/;"	f
main	runtime/macros/maze/mazeclean.c	/^main (C)$/;"	f
main	runtime/tools/blink.c	/^main()$/;"	f
main	runtime/tools/ccfilter.c	/^int main( int argc, char *argv[] )$/;"	f	signature:( int argc, char *argv[] )
main	runtime/tools/xcmdsrv_client.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	src/dosinst.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	src/if_python.c	54;"	d	file:
main	src/if_python3.c	66;"	d	file:
main	src/os_vms_mms.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	src/po/sjiscorr.c	/^main(argc, argv)$/;"	f
main	src/tee/tee.c	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	src/uninstal.c	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	src/vimrun.c	/^main(void)$/;"	f	signature:(void)
main	src/xxd/xxd.c	/^main(argc, argv)$/;"	f
main_errors	src/main.c	/^static char *(main_errors[]) =$/;"	v	file:
main_loop	src/main.c	/^main_loop(cmdwin, noexmode)$/;"	f
main_msg	src/main.c	/^main_msg(s)$/;"	f	file:
main_msg	src/main.c	/^static void main_msg __ARGS((char *s));$/;"	p	file:	signature:(char *s)
main_start_gui	src/main.c	/^main_start_gui()$/;"	f	file:
main_start_gui	src/main.c	/^static void main_start_gui __ARGS((void));$/;"	p	file:	signature:(void)
main_syntax	runtime/syntax/aspperl.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	runtime/syntax/aspvbs.vim	/^  let main_syntax = 'aspvbs'$/;"	v
main_syntax	runtime/syntax/css.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	runtime/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
main_syntax	runtime/syntax/fvwm2m4.vim	/^  let main_syntax = 'fvwm2m4'$/;"	v
main_syntax	runtime/syntax/groovy.vim	/^  let main_syntax='groovy'$/;"	v
main_syntax	runtime/syntax/gsp.vim	/^  let main_syntax = 'gsp'$/;"	v
main_syntax	runtime/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	runtime/syntax/html.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	runtime/syntax/htmlcheetah.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	runtime/syntax/htmldjango.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	runtime/syntax/htmlm4.vim	/^  let main_syntax='htmlm4'$/;"	v
main_syntax	runtime/syntax/htmlos.vim	/^  let main_syntax = 'htmlos'$/;"	v
main_syntax	runtime/syntax/java.vim	/^  let main_syntax='java'$/;"	v
main_syntax	runtime/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	runtime/syntax/jsp.vim	/^  let main_syntax = 'jsp'$/;"	v
main_syntax	runtime/syntax/liquid.vim	/^  let main_syntax = 'liquid'$/;"	v
main_syntax	runtime/syntax/lite.vim	/^  let main_syntax = 'lite'$/;"	v
main_syntax	runtime/syntax/m4.vim	/^  let main_syntax='m4'$/;"	v
main_syntax	runtime/syntax/mason.vim	/^	let main_syntax = 'mason'$/;"	v
main_syntax	runtime/syntax/msql.vim	/^  let main_syntax = 'msql'$/;"	v
main_syntax	runtime/syntax/ora.vim	/^  let main_syntax = 'ora'$/;"	v
main_syntax	runtime/syntax/pdf.vim	/^    let main_syntax = 'pdf'$/;"	v
main_syntax	runtime/syntax/php.vim	/^  let main_syntax = 'php'$/;"	v
main_syntax	runtime/syntax/plp.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	runtime/syntax/smarty.vim	/^  let main_syntax = 'smarty'$/;"	v
main_syntax	runtime/syntax/smil.vim	/^  let main_syntax = 'smil'$/;"	v
main_syntax	runtime/syntax/spyce.vim	/^  let main_syntax='spyce'$/;"	v
main_syntax	runtime/syntax/texinfo.vim	/^  let main_syntax = 'texinfo'$/;"	v
main_syntax	runtime/syntax/tf.vim	/^  let main_syntax = 'tf'$/;"	v
main_syntax	runtime/syntax/tpp.vim	/^  let main_syntax = 'tpp'$/;"	v
main_syntax	runtime/syntax/uc.vim	/^  let main_syntax='uc'$/;"	v
main_syntax	runtime/syntax/webmacro.vim	/^  let main_syntax = 'webmacro'$/;"	v
main_syntax	runtime/syntax/wml.vim	/^  let main_syntax = 'wml'$/;"	v
mainerr	src/main.c	/^mainerr(n, str)$/;"	f	file:
mainerr	src/main.c	/^static void mainerr __ARGS((int, char_u *));$/;"	p	file:	signature:(int, char_u *)
mainerr_arg_missing	src/main.c	/^mainerr_arg_missing(str)$/;"	f
mainwin	src/gui.h	/^    GtkWidget	*mainwin;	    \/* top level GTK window *\/$/;"	m	struct:Gui	access:public
mainwin_destroy_cb	src/gui_gtk_x11.c	/^mainwin_destroy_cb(GtkObject *object UNUSED, gpointer data UNUSED)$/;"	f	file:	signature:(GtkObject *object UNUSED, gpointer data UNUSED)
mainwin_event_cb	src/gui_beval.c	/^mainwin_event_cb(GtkWidget *widget UNUSED, GdkEvent *event, gpointer data)$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GdkEvent *event, gpointer data)
mainwin_event_cb	src/gui_beval.c	/^static gint mainwin_event_cb __ARGS((GtkWidget *, GdkEvent *, gpointer));$/;"	p	file:	signature:(GtkWidget *, GdkEvent *, gpointer)
mainwin_realize	src/gui_gtk_x11.c	/^mainwin_realize(GtkWidget *widget UNUSED, gpointer data UNUSED)$/;"	f	file:	signature:(GtkWidget *widget UNUSED, gpointer data UNUSED)
mainwin_screen_changed_cb	src/gui_gtk_x11.c	/^mainwin_screen_changed_cb(GtkWidget  *widget,$/;"	f	file:	signature:(GtkWidget *widget, GdkScreen *previous_screen UNUSED, gpointer data UNUSED)
make_bom	src/fileio.c	/^make_bom(buf, name)$/;"	f	file:
make_bom	src/fileio.c	/^static int make_bom __ARGS((char_u *buf, char_u *name));$/;"	p	file:	signature:(char_u *buf, char_u *name)
make_case_word	src/spell.c	/^make_case_word(fword, cword, flags)$/;"	f	file:
make_case_word	src/spell.c	/^static void make_case_word __ARGS((char_u *fword, char_u *cword, int flags));$/;"	p	file:	signature:(char_u *fword, char_u *cword, int flags)
make_connection	src/eval.c	/^make_connection()$/;"	f	file:
make_connection	src/eval.c	/^static void make_connection __ARGS((void));$/;"	p	file:	signature:(void)
make_crc_tab	src/misc2.c	/^make_crc_tab()$/;"	f	file:
make_crc_tab	src/misc2.c	/^static void make_crc_tab __ARGS((void));$/;"	p	file:	signature:(void)
make_expanded_name	src/eval.c	/^make_expanded_name(in_start, expr_start, expr_end, in_end)$/;"	f	file:
make_expanded_name	src/eval.c	/^static char_u * make_expanded_name __ARGS((char_u *in_start, char_u *expr_start, char_u *expr_end, char_u *in_end));$/;"	p	file:	signature:(char_u *in_start, char_u *expr_start, char_u *expr_end, char_u *in_end)
make_extmatch	src/regexp.c	/^make_extmatch()$/;"	f	file:
make_extmatch	src/regexp.c	/^static reg_extmatch_T *make_extmatch __ARGS((void));$/;"	p	file:	signature:(void)
make_filter_cmd	src/ex_cmds.c	/^make_filter_cmd(cmd, itmp, otmp)$/;"	f
make_modules	src/if_mzsch.c	/^make_modules()$/;"	f	file:
make_modules	src/if_mzsch.c	/^static void make_modules(void);$/;"	p	file:	signature:(void)
make_percent_swname	src/memline.c	/^make_percent_swname(dir, name)$/;"	f	file:
make_percent_swname	src/memline.c	/^static char_u *make_percent_swname __ARGS((char_u *dir, char_u *name));$/;"	p	file:	signature:(char_u *dir, char_u *name)
make_pull_name	src/gui_athena.c	/^make_pull_name(name)$/;"	f	file:
make_pull_name	src/gui_athena.c	/^static char_u	*make_pull_name __ARGS((char_u * name));$/;"	p	file:	signature:(char_u * name)
make_snapshot	src/window.c	/^make_snapshot(idx)$/;"	f
make_snapshot_rec	src/window.c	/^make_snapshot_rec(fr, frp)$/;"	f	file:
make_snapshot_rec	src/window.c	/^static void make_snapshot_rec __ARGS((frame_T *fr, frame_T **frp));$/;"	p	file:	signature:(frame_T *fr, frame_T **frp)
make_tabpages	src/window.c	/^make_tabpages(maxcount)$/;"	f
make_tooltip	src/gui_w32.c	/^make_tooltip(beval, text, pt)$/;"	f	file:
make_tooltip	src/gui_w32.c	/^static void make_tooltip __ARGS((BalloonEval *beval, char *text, POINT pt));$/;"	p	file:	signature:(BalloonEval *beval, char *text, POINT pt)
make_version	src/version.c	/^make_version()$/;"	f
make_windows	src/window.c	/^make_windows(count, vertical)$/;"	f
makefoldset	src/option.c	/^makefoldset(fd)$/;"	f
makemap	src/getchar.c	/^makemap(fd, buf)$/;"	f
makeopens	src/ex_docmd.c	/^makeopens(fd, dirnow)$/;"	f	file:
makeopens	src/ex_docmd.c	/^static int	makeopens __ARGS((FILE *fd, char_u *dirnow));$/;"	p	file:	signature:(FILE *fd, char_u *dirnow)
makeset	src/option.c	/^makeset(fd, opt_flags, local_only)$/;"	f
makeswapname	src/memline.c	/^makeswapname(fname, ffname, buf, dir_name)$/;"	f
maketitle	src/buffer.c	/^maketitle()$/;"	f
manage_centered	src/gui_motif.c	/^manage_centered(dialog_child)$/;"	f
map_clear	src/getchar.c	/^map_clear(cmdp, arg, forceit, abbr)$/;"	f
map_clear_int	src/getchar.c	/^map_clear_int(buf, mode, local, abbr)$/;"	f
map_colour	src/os_riscos.c	/^map_colour(dos)$/;"	f	file:
map_free	src/getchar.c	/^map_free(mpp)$/;"	f	file:
map_free	src/getchar.c	/^static void	map_free __ARGS((mapblock_T **));$/;"	p	file:	signature:(mapblock_T **)
map_to_exists	src/getchar.c	/^map_to_exists(str, modechars, abbr)$/;"	f
map_to_exists_mode	src/getchar.c	/^map_to_exists_mode(rhs, mode, abbr)$/;"	f
mapblock	src/structs.h	/^struct mapblock$/;"	s
mapblock::m_expr	src/structs.h	/^    char	m_expr;		\/* <expr> used, m_str is an expression *\/$/;"	m	struct:mapblock	access:public
mapblock::m_keylen	src/structs.h	/^    int		m_keylen;	\/* strlen(m_keys) *\/$/;"	m	struct:mapblock	access:public
mapblock::m_keys	src/structs.h	/^    char_u	*m_keys;	\/* mapped from *\/$/;"	m	struct:mapblock	access:public
mapblock::m_mode	src/structs.h	/^    int		m_mode;		\/* valid mode *\/$/;"	m	struct:mapblock	access:public
mapblock::m_next	src/structs.h	/^    mapblock_T	*m_next;	\/* next mapblock in list *\/$/;"	m	struct:mapblock	access:public
mapblock::m_noremap	src/structs.h	/^    int		m_noremap;	\/* if non-zero no re-mapping for m_str *\/$/;"	m	struct:mapblock	access:public
mapblock::m_script_ID	src/structs.h	/^    scid_T	m_script_ID;	\/* ID of script where map was defined *\/$/;"	m	struct:mapblock	access:public
mapblock::m_silent	src/structs.h	/^    char	m_silent;	\/* <silent> used, don't echo commands *\/$/;"	m	struct:mapblock	access:public
mapblock::m_str	src/structs.h	/^    char_u	*m_str;		\/* mapped to *\/$/;"	m	struct:mapblock	access:public
mapblock_T	src/structs.h	/^typedef struct mapblock mapblock_T;$/;"	t	typeref:struct:mapblock
maphash	src/getchar.c	/^static mapblock_T	*(maphash[256]);$/;"	v	file:
maphash_valid	src/getchar.c	/^static int		maphash_valid = FALSE;$/;"	v	file:
maplink	runtime/doc/vim2html.pl	/^sub maplink$/;"	s
mapped	src/gui_gtk_f.c	/^    gint mapped;$/;"	m	struct:_GtkFormChild	file:	access:public
mapped_ctrl_c	src/globals.h	/^EXTERN int	mapped_ctrl_c INIT(= FALSE); \/* CTRL-C is mapped *\/$/;"	v
mapsigntype	src/netbeans.c	/^mapsigntype(nbbuf_T *buf, int localsigntype)$/;"	f	file:	signature:(nbbuf_T *buf, int localsigntype)
mapsigntype	src/netbeans.c	/^static int  mapsigntype __ARGS((nbbuf_T *, int localsigntype));$/;"	p	file:	signature:(nbbuf_T *, int localsigntype)
maptick	src/globals.h	/^EXTERN int	maptick INIT(= 0);	\/* tick for each non-mapped char *\/$/;"	v
mark	src/structs.h	/^    pos_T	mark;		\/* cursor position *\/$/;"	m	struct:filemark	access:public
mark_adjust	src/mark.c	/^mark_adjust(line1, line2, amount, amount_after)$/;"	f
mark_col_adjust	src/mark.c	/^mark_col_adjust(lnum, mincol, lnum_amount, col_amount)$/;"	f
mark_line	src/mark.c	/^mark_line(mp, lead_len)$/;"	f	file:
mark_line	src/mark.c	/^static char_u *mark_line __ARGS((pos_T *mp, int lead_len));$/;"	p	file:	signature:(pos_T *mp, int lead_len)
match	src/gui_xmdlg.c	/^match(SharedFontSelData *data, enum ListSpecifier l, int i)$/;"	f	file:	signature:(SharedFontSelData *data, enum ListSpecifier l, int i)
match	src/structs.h	/^    regmmatch_T	match;	    \/* regexp program for pattern *\/$/;"	m	struct:matchitem	access:public
match	src/testdir/test49.vim	/^		    let match = MATCH(0, thrmsg, 'E106', "Unknown variable")$/;"	v
match	src/testdir/test49.vim	/^		    let match = MATCH(0, thrmsg, 'E108', "No such variable")$/;"	v
match_T	src/structs.h	/^} match_T;$/;"	t	typeref:struct:__anon56
match_add	src/window.c	/^match_add(wp, grp, pat, prio, id)$/;"	f
match_checkcompoundpattern	src/spell.c	/^match_checkcompoundpattern(ptr, wlen, gap)$/;"	f	file:
match_checkcompoundpattern	src/spell.c	/^static int match_checkcompoundpattern __ARGS((char_u *ptr, int wlen, garray_T *gap));$/;"	p	file:	signature:(char_u *ptr, int wlen, garray_T *gap)
match_compoundrule	src/spell.c	/^match_compoundrule(slang, compflags)$/;"	f	file:
match_compoundrule	src/spell.c	/^static int match_compoundrule __ARGS((slang_T *slang, char_u *compflags));$/;"	p	file:	signature:(slang_T *slang, char_u *compflags)
match_delete	src/window.c	/^match_delete(wp, id, perr)$/;"	f
match_file_list	src/fileio.c	/^match_file_list(list, sfname, ffname)$/;"	f
match_file_pat	src/fileio.c	/^match_file_pat(pattern, prog, fname, sfname, tail, allow_dirs)$/;"	f
match_suffix	src/misc1.c	/^match_suffix(fname)$/;"	f
matched	src/search.c	/^    int		matched;	\/* Found a match in this file *\/$/;"	m	struct:SearchedFile	file:	access:public
matches	src/regexp.h	/^    char_u		*matches[NSUBEXP];$/;"	m	struct:__anon74	access:public
matchinf_S	src/spell.c	/^typedef struct matchinf_S$/;"	s	file:
matchinf_S::mi_capflags	src/spell.c	/^    int		mi_capflags;		\/* WF_ONECAP WF_ALLCAP WF_KEEPCAP *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_cend	src/spell.c	/^    char_u	*mi_cend;		\/* char after what was used for$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_compextra	src/spell.c	/^    int		mi_compextra;		\/* nr of COMPOUNDROOT words *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_compflags	src/spell.c	/^    char_u	mi_compflags[MAXWLEN];	\/* flags for compound words used *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_complen	src/spell.c	/^    int		mi_complen;		\/* nr of compound words used *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_compoff	src/spell.c	/^    int		mi_compoff;		\/* start of following word offset *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_cprefixlen	src/spell.c	/^    int		mi_cprefixlen;		\/* byte length of prefix in original$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_end	src/spell.c	/^    char_u	*mi_end;		\/* end of matching word so far *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_end2	src/spell.c	/^    char_u	*mi_end2;		\/* "mi_end" without following word *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_fend	src/spell.c	/^    char_u	*mi_fend;		\/* next char to be added to mi_fword *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_fword	src/spell.c	/^    char_u	mi_fword[MAXWLEN + 1];	\/* mi_word case-folded *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_fwordlen	src/spell.c	/^    int		mi_fwordlen;		\/* nr of valid bytes in mi_fword *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_lp	src/spell.c	/^    langp_T	*mi_lp;			\/* info for language and region *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_prefarridx	src/spell.c	/^    int		mi_prefarridx;		\/* index in sl_pidxs with list of$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_prefcnt	src/spell.c	/^    int		mi_prefcnt;		\/* number of entries at mi_prefarridx *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_prefixlen	src/spell.c	/^    int		mi_prefixlen;		\/* byte length of prefix *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_result	src/spell.c	/^    int		mi_result;		\/* result so far: SP_BAD, SP_OK, etc. *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_result2	src/spell.c	/^    int		mi_result2;		\/* "mi_resul" without following word *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_win	src/spell.c	/^    win_T	*mi_win;		\/* buffer being checked *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_S::mi_word	src/spell.c	/^    char_u	*mi_word;		\/* start of word being checked *\/$/;"	m	struct:matchinf_S	file:	access:public
matchinf_T	src/spell.c	/^} matchinf_T;$/;"	t	typeref:struct:matchinf_S	file:
matchitem	src/structs.h	/^struct matchitem$/;"	s
matchitem::hl	src/structs.h	/^    match_T	hl;	    \/* struct for doing the actual highlighting *\/$/;"	m	struct:matchitem	access:public
matchitem::hlg_id	src/structs.h	/^    int		hlg_id;	    \/* highlight group ID *\/$/;"	m	struct:matchitem	access:public
matchitem::id	src/structs.h	/^    int		id;	    \/* match ID *\/$/;"	m	struct:matchitem	access:public
matchitem::match	src/structs.h	/^    regmmatch_T	match;	    \/* regexp program for pattern *\/$/;"	m	struct:matchitem	access:public
matchitem::next	src/structs.h	/^    matchitem_T	*next;$/;"	m	struct:matchitem	access:public
matchitem::pattern	src/structs.h	/^    char_u	*pattern;   \/* pattern to highlight *\/$/;"	m	struct:matchitem	access:public
matchitem::priority	src/structs.h	/^    int		priority;   \/* match priority *\/$/;"	m	struct:matchitem	access:public
matchitem_T	src/structs.h	/^typedef struct matchitem matchitem_T;$/;"	t	typeref:struct:matchitem
matchparen	runtime/plugin/matchparen.vim	/^augroup matchparen$/;"	a
max	src/gui.h	/^    long	max;		\/* Number of lines in buffer *\/$/;"	m	struct:GuiScrollbar	access:public
max	src/gui_at_sb.h	/^    float	  max;		\/* Maximum value for top *\/$/;"	m	struct:__anon31	access:public
max_min	src/eval.c	/^max_min(argvars, rettv, domax)$/;"	f	file:
max_min	src/eval.c	/^static void max_min __ARGS((typval_T *argvars, typval_T *rettv, int domax));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv, int domax)
max_topfill	src/move.c	/^max_topfill()$/;"	f	file:
max_topfill	src/move.c	/^static void max_topfill __ARGS((void));$/;"	p	file:	signature:(void)
maxa	src/if_mzsch.c	/^    int		maxa;$/;"	m	struct:__anon26	file:	access:public
maxval	src/regexp.c	/^    long	maxval;$/;"	m	struct:regstar_S	file:	access:public
may_clear_sb_text	src/message.c	/^may_clear_sb_text()$/;"	f
may_core_dump	src/os_unix.c	/^may_core_dump()$/;"	f	file:
may_core_dump	src/os_unix.c	/^static void may_core_dump __ARGS((void));$/;"	p	file:	signature:(void)
may_garbage_collect	src/globals.h	/^EXTERN int	may_garbage_collect INIT(= FALSE);$/;"	v
may_get_selection	src/ops.c	/^may_get_selection(regname)$/;"	f
may_open_tabpage	src/window.c	/^may_open_tabpage()$/;"	f
may_req_termresponse	src/term.c	/^may_req_termresponse()$/;"	f
may_set_selection	src/ops.c	/^may_set_selection()$/;"	f	file:
may_set_selection	src/ops.c	/^static void	may_set_selection __ARGS((void));$/;"	p	file:	signature:(void)
may_start_select	src/normal.c	/^may_start_select(c)$/;"	f
may_sync_undo	src/getchar.c	/^may_sync_undo()$/;"	f	file:
may_sync_undo	src/getchar.c	/^static void	may_sync_undo __ARGS((void));$/;"	p	file:	signature:(void)
mb_adjust_cursor	src/mbyte.c	/^mb_adjust_cursor()$/;"	f
mb_adjust_opend	src/ops.c	/^mb_adjust_opend(oap)$/;"	f	file:
mb_adjust_opend	src/ops.c	/^static void	mb_adjust_opend __ARGS((oparg_T *oap));$/;"	p	file:	signature:(oparg_T *oap)
mb_adjustpos	src/mbyte.c	/^mb_adjustpos(lp)$/;"	f
mb_bytelen_tab	src/globals.h	/^EXTERN char	mb_bytelen_tab[256];$/;"	v
mb_charlen	src/mbyte.c	/^mb_charlen(str)$/;"	f
mb_charlen_len	src/mbyte.c	/^mb_charlen_len(str, len)$/;"	f
mb_copy_char	src/mbyte.c	/^mb_copy_char(fp, tp)$/;"	f
mb_cptr2char_adv	src/mbyte.c	/^mb_cptr2char_adv(pp)$/;"	f
mb_cptr2len	src/macros.h	269;"	d
mb_cptr_adv	src/macros.h	265;"	d
mb_cptr_adv	src/macros.h	276;"	d
mb_decompose	src/regexp.c	/^mb_decompose(c, c1, c2, c3)$/;"	f	file:
mb_decompose	src/regexp.c	/^static void mb_decompose __ARGS((int c, int *c1, int *c2, int *c3));$/;"	p	file:	signature:(int c, int *c1, int *c2, int *c3)
mb_fix_col	src/mbyte.c	/^mb_fix_col(col, row)$/;"	f
mb_get_class	src/mbyte.c	/^mb_get_class(p)$/;"	f
mb_init	src/mbyte.c	/^mb_init()$/;"	f
mb_lefthalve	src/mbyte.c	/^mb_lefthalve(row, col)$/;"	f
mb_off_next	src/mbyte.c	/^mb_off_next(base, p)$/;"	f
mb_prevptr	src/mbyte.c	/^mb_prevptr(line, p)$/;"	f
mb_ptr2char_adv	src/mbyte.c	/^mb_ptr2char_adv(pp)$/;"	f
mb_ptr_adv	src/macros.h	263;"	d
mb_ptr_adv	src/macros.h	275;"	d
mb_ptr_back	src/macros.h	267;"	d
mb_ptr_back	src/macros.h	277;"	d
mb_replace_pop_ins	src/edit.c	/^mb_replace_pop_ins(cc)$/;"	f	file:
mb_replace_pop_ins	src/edit.c	/^static void mb_replace_pop_ins __ARGS((int cc));$/;"	p	file:	signature:(int cc)
mb_str2wide	src/spell.c	/^mb_str2wide(s)$/;"	f	file:
mb_str2wide	src/spell.c	/^static int *mb_str2wide __ARGS((char_u *s));$/;"	p	file:	signature:(char_u *s)
mb_string2cells	src/mbyte.c	/^mb_string2cells(p, len)$/;"	f
mb_strnicmp	src/mbyte.c	/^mb_strnicmp(s1, s2, nn)$/;"	f
mb_tail_off	src/mbyte.c	/^mb_tail_off(base, p)$/;"	f
mb_unescape	src/mbyte.c	/^mb_unescape(pp)$/;"	f
mbfont_opts	src/hardcopy.c	/^static option_table_T mbfont_opts[OPT_MBFONT_NUM_OPTIONS] =$/;"	v	file:
mcase	src/gui_gtk.c	/^    GtkWidget *mcase;	\/* 'Match case' check button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
mcase	src/gui_motif.c	/^    Widget mcase;	\/* 'match case' check button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
mch_FullName	src/os_amiga.c	/^mch_FullName(fname, buf, len, force)$/;"	f
mch_FullName	src/os_msdos.c	/^mch_FullName($/;"	f	signature:( char_u *fname, char_u *buf, int len, int force)
mch_FullName	src/os_mswin.c	/^mch_FullName($/;"	f	signature:( char_u *fname, char_u *buf, int len, int force)
mch_FullName	src/os_riscos.c	/^mch_FullName(fname, buf, len, force)$/;"	f
mch_FullName	src/os_unix.c	/^mch_FullName(fname, buf, len, force)$/;"	f
mch_access	src/macros.h	168;"	d
mch_access	src/macros.h	176;"	d
mch_access	src/os_win32.c	/^mch_access(char *n, int p)$/;"	f	signature:(char *n, int p)
mch_avail_mem	src/os_amiga.c	/^mch_avail_mem(special)$/;"	f
mch_avail_mem	src/os_msdos.c	/^mch_avail_mem(int special)$/;"	f	signature:(int special)
mch_avail_mem	src/os_riscos.c	/^mch_avail_mem(special)$/;"	f
mch_avail_mem	src/os_win16.c	/^mch_avail_mem($/;"	f	signature:( int special)
mch_avail_mem	src/os_win32.c	/^mch_avail_mem(int special)$/;"	f	signature:(int special)
mch_breakcheck	src/os_amiga.c	/^mch_breakcheck()$/;"	f
mch_breakcheck	src/os_msdos.c	/^mch_breakcheck(void)$/;"	f	signature:(void)
mch_breakcheck	src/os_riscos.c	/^mch_breakcheck()$/;"	f
mch_breakcheck	src/os_unix.c	/^mch_breakcheck()$/;"	f
mch_breakcheck	src/os_win16.c	/^mch_breakcheck()$/;"	f
mch_breakcheck	src/os_win32.c	/^mch_breakcheck(void)$/;"	f	signature:(void)
mch_call_shell	src/os_amiga.c	/^mch_call_shell(cmd, options)$/;"	f
mch_call_shell	src/os_msdos.c	/^mch_call_shell($/;"	f	signature:( char_u *cmd, int options)
mch_call_shell	src/os_riscos.c	/^mch_call_shell(cmd, options)$/;"	f
mch_call_shell	src/os_unix.c	/^mch_call_shell(cmd, options)$/;"	f
mch_call_shell	src/os_win16.c	/^mch_call_shell($/;"	f	signature:( char_u *cmd, int options)
mch_call_shell	src/os_win32.c	/^mch_call_shell($/;"	f	signature:( char_u *cmd, int options)
mch_can_exe	src/os_amiga.c	/^mch_can_exe(name)$/;"	f
mch_can_exe	src/os_msdos.c	/^mch_can_exe(name)$/;"	f
mch_can_exe	src/os_riscos.c	/^mch_can_exe(name)$/;"	f
mch_can_exe	src/os_unix.c	/^mch_can_exe(name)$/;"	f
mch_can_exe	src/os_win32.c	/^mch_can_exe(char_u *name)$/;"	f	signature:(char_u *name)
mch_can_restore_icon	src/os_amiga.c	/^mch_can_restore_icon()$/;"	f
mch_can_restore_icon	src/os_mswin.c	/^mch_can_restore_icon()$/;"	f
mch_can_restore_icon	src/os_riscos.c	/^mch_can_restore_icon()$/;"	f
mch_can_restore_icon	src/os_unix.c	/^mch_can_restore_icon()$/;"	f
mch_can_restore_title	src/os_amiga.c	/^mch_can_restore_title()$/;"	f
mch_can_restore_title	src/os_mswin.c	/^mch_can_restore_title()$/;"	f
mch_can_restore_title	src/os_riscos.c	/^mch_can_restore_title()$/;"	f
mch_can_restore_title	src/os_unix.c	/^mch_can_restore_title()$/;"	f
mch_char_avail	src/os_amiga.c	/^mch_char_avail()$/;"	f
mch_char_avail	src/os_msdos.c	/^mch_char_avail(void)$/;"	f	signature:(void)
mch_char_avail	src/os_mswin.c	/^mch_char_avail()$/;"	f
mch_char_avail	src/os_riscos.c	/^mch_char_avail()$/;"	f
mch_char_avail	src/os_unix.c	/^mch_char_avail()$/;"	f
mch_char_avail	src/os_win32.c	/^mch_char_avail(void)$/;"	f	signature:(void)
mch_chdir	src/dosinst.h	/^mch_chdir(char *path)$/;"	f	signature:(char *path)
mch_chdir	src/os_amiga.h	212;"	d
mch_chdir	src/os_msdos.c	/^mch_chdir(char *path)$/;"	f	signature:(char *path)
mch_chdir	src/os_mswin.c	/^mch_chdir(char *path)$/;"	f	signature:(char *path)
mch_chdir	src/os_riscos.c	/^mch_chdir(dir)$/;"	f
mch_chdir	src/os_unix.c	/^mch_chdir(path)$/;"	f
mch_check_columns	src/os_msdos.c	/^mch_check_columns()$/;"	f
mch_check_filetype	src/os_riscos.c	/^mch_check_filetype(fname, type)$/;"	f
mch_check_win	src/os_amiga.c	/^mch_check_win(argc, argv)$/;"	f
mch_check_win	src/os_msdos.c	/^mch_check_win($/;"	f	signature:( int argc, char **argv)
mch_check_win	src/os_riscos.c	/^mch_check_win(argc, argv)$/;"	f
mch_check_win	src/os_unix.c	/^mch_check_win(argc, argv)$/;"	f
mch_check_win	src/os_win16.c	/^mch_check_win($/;"	f	signature:( int argc, char **argv)
mch_check_win	src/os_win32.c	/^mch_check_win($/;"	f	signature:( int argc, char **argv)
mch_copy_file_attribute	src/os_win32.c	/^mch_copy_file_attribute(char_u *from, char_u *to)$/;"	f	signature:(char_u *from, char_u *to)
mch_copy_sec	src/os_unix.c	/^mch_copy_sec(from_file, to_file)$/;"	f
mch_delay	src/os_amiga.c	/^mch_delay(msec, ignoreinput)$/;"	f
mch_delay	src/os_msdos.c	/^mch_delay($/;"	f	signature:( long msec, int ignoreinput)
mch_delay	src/os_riscos.c	/^mch_delay(msec, ignoreinput)$/;"	f
mch_delay	src/os_unix.c	/^mch_delay(msec, ignoreinput)$/;"	f
mch_delay	src/os_win16.c	/^mch_delay($/;"	f	signature:( long msec, int ignoreinput)
mch_delay	src/os_win32.c	/^mch_delay($/;"	f	signature:( long msec, int ignoreinput)
mch_didjmp	src/os_unix.c	/^mch_didjmp()$/;"	f
mch_dirname	src/os_amiga.c	/^mch_dirname(buf, len)$/;"	f
mch_dirname	src/os_msdos.c	/^mch_dirname($/;"	f	signature:( char_u *buf, int len)
mch_dirname	src/os_riscos.c	/^mch_dirname(buf, len)$/;"	f
mch_dirname	src/os_unix.c	/^mch_dirname(buf, len)$/;"	f
mch_dirname	src/os_win32.c	/^mch_dirname($/;"	f	signature:( char_u *buf, int len)
mch_early_init	src/os_amiga.c	/^mch_early_init()$/;"	f
mch_early_init	src/os_msdos.c	/^mch_early_init(void)$/;"	f	signature:(void)
mch_early_init	src/os_mswin.c	/^mch_early_init(void)$/;"	f	signature:(void)
mch_early_init	src/os_riscos.c	/^mch_early_init()$/;"	f
mch_early_init	src/os_unix.c	/^mch_early_init()$/;"	f
mch_endjmp	src/os_unix.c	/^mch_endjmp()$/;"	f
mch_errmsg	src/message.c	/^mch_errmsg(str)$/;"	f
mch_errmsg	src/message.c	2694;"	d	file:
mch_errmsg	src/vim.h	1927;"	d
mch_exit	src/os_amiga.c	/^mch_exit(r)$/;"	f
mch_exit	src/os_msdos.c	/^mch_exit(int r)$/;"	f	signature:(int r)
mch_exit	src/os_mswin.c	/^mch_exit(int r)$/;"	f	signature:(int r)
mch_exit	src/os_riscos.c	/^mch_exit(r)$/;"	f
mch_exit	src/os_unix.c	/^mch_exit(r)$/;"	f
mch_exit	src/os_win32.c	/^mch_exit(int r)$/;"	f	signature:(int r)
mch_expand_wildcards	src/os_riscos.c	/^mch_expand_wildcards(num_pat, pat, num_file, file, flags)$/;"	f
mch_expand_wildcards	src/os_unix.c	/^mch_expand_wildcards(num_pat, pat, num_file, file, flags)$/;"	f
mch_expand_wildcards	src/os_vms.c	/^mch_expand_wildcards(int num_pat, char_u **pat, int *num_file, char_u ***file, int flags)$/;"	f	signature:(int num_pat, char_u **pat, int *num_file, char_u ***file, int flags)
mch_expandpath	src/misc1.c	/^mch_expandpath($/;"	f	signature:( garray_T *gap, char_u *path, int flags)
mch_expandpath	src/os_amiga.c	/^mch_expandpath(gap, pat, flags)$/;"	f
mch_expandpath	src/os_riscos.c	/^mch_expandpath(gap, path, flags)$/;"	f
mch_expandpath	src/os_unix.c	/^mch_expandpath(gap, path, flags)$/;"	f
mch_expandpath	src/os_vms.c	/^mch_expandpath(garray_T *gap, char_u *path, int flags)$/;"	f	signature:(garray_T *gap, char_u *path, int flags)
mch_fopen	src/macros.h	170;"	d
mch_fopen	src/macros.h	179;"	d
mch_fopen	src/os_win32.c	/^mch_fopen(char *name, char *mode)$/;"	f	signature:(char *name, char *mode)
mch_free_acl	src/os_unix.c	/^mch_free_acl(aclent)$/;"	f
mch_free_acl	src/os_win32.c	/^mch_free_acl(vim_acl_T acl)$/;"	f	signature:(vim_acl_T acl)
mch_free_mem	src/os_unix.c	/^mch_free_mem()$/;"	f
mch_fstat	src/macros.h	171;"	d
mch_fstat	src/macros.h	181;"	d
mch_get_acl	src/os_unix.c	/^mch_get_acl(fname)$/;"	f
mch_get_acl	src/os_win32.c	/^mch_get_acl(char_u *fname)$/;"	f	signature:(char_u *fname)
mch_get_host_name	src/os_amiga.c	/^mch_get_host_name(s, len)$/;"	f
mch_get_host_name	src/os_msdos.c	/^mch_get_host_name($/;"	f	signature:( char_u *s, int len)
mch_get_host_name	src/os_riscos.c	/^mch_get_host_name(s, len)$/;"	f
mch_get_host_name	src/os_unix.c	/^mch_get_host_name(s, len)$/;"	f
mch_get_host_name	src/os_win32.c	/^mch_get_host_name($/;"	f	signature:( char_u *s, int len)
mch_get_pid	src/os_amiga.c	/^mch_get_pid()$/;"	f
mch_get_pid	src/os_msdos.c	/^mch_get_pid(void)$/;"	f	signature:(void)
mch_get_pid	src/os_riscos.c	/^mch_get_pid()$/;"	f
mch_get_pid	src/os_unix.c	/^mch_get_pid()$/;"	f
mch_get_pid	src/os_win16.c	/^mch_get_pid()$/;"	f
mch_get_pid	src/os_win32.c	/^mch_get_pid(void)$/;"	f	signature:(void)
mch_get_shellsize	src/os_amiga.c	/^mch_get_shellsize()$/;"	f
mch_get_shellsize	src/os_msdos.c	/^mch_get_shellsize(void)$/;"	f	signature:(void)
mch_get_shellsize	src/os_mswin.c	/^mch_get_shellsize(void)$/;"	f	signature:(void)
mch_get_shellsize	src/os_riscos.c	/^mch_get_shellsize()$/;"	f
mch_get_shellsize	src/os_unix.c	/^mch_get_shellsize()$/;"	f
mch_get_shellsize	src/os_vms.c	/^mch_get_shellsize(void)$/;"	f	signature:(void)
mch_get_shellsize	src/os_win32.c	/^mch_get_shellsize(void)$/;"	f	signature:(void)
mch_get_uname	src/os_unix.c	/^mch_get_uname(uid, s, len)$/;"	f
mch_get_user_name	src/os_amiga.c	/^mch_get_user_name(s, len)$/;"	f
mch_get_user_name	src/os_msdos.c	/^mch_get_user_name($/;"	f	signature:( char_u *s, int len)
mch_get_user_name	src/os_riscos.c	/^mch_get_user_name(s, len)$/;"	f
mch_get_user_name	src/os_unix.c	/^mch_get_user_name(s, len)$/;"	f
mch_get_user_name	src/os_win32.c	/^mch_get_user_name($/;"	f	signature:( char_u *s, int len)
mch_get_winpos	src/os_mswin.c	/^mch_get_winpos(int *x, int *y)$/;"	f	signature:(int *x, int *y)
mch_getenv	src/os_amiga.c	/^mch_getenv(var)$/;"	f
mch_getenv	src/os_mac.h	241;"	d
mch_getenv	src/os_mac.h	244;"	d
mch_getenv	src/os_mac.h	250;"	d
mch_getenv	src/os_msdos.c	/^mch_getenv(char_u *name)$/;"	f	signature:(char_u *name)
mch_getenv	src/os_riscos.h	165;"	d
mch_getenv	src/os_unix.h	489;"	d
mch_getenv	src/os_unix.h	491;"	d
mch_getenv	src/os_vms.c	/^mch_getenv(char_u *lognam)$/;"	f	signature:(char_u *lognam)
mch_getenv	src/os_win32.h	190;"	d
mch_getperm	src/os_amiga.c	/^mch_getperm(name)$/;"	f
mch_getperm	src/os_msdos.c	/^mch_getperm(char_u *name)$/;"	f	signature:(char_u *name)
mch_getperm	src/os_riscos.c	/^mch_getperm(name)$/;"	f
mch_getperm	src/os_unix.c	/^mch_getperm(name)$/;"	f
mch_getperm	src/os_win32.c	/^mch_getperm(char_u *name)$/;"	f	signature:(char_u *name)
mch_gpm_process	src/os_unix.c	/^mch_gpm_process()$/;"	f	file:
mch_gpm_process	src/os_unix.c	/^static int mch_gpm_process __ARGS((void));$/;"	p	file:	signature:(void)
mch_has_exp_wildcard	src/os_amiga.c	/^mch_has_exp_wildcard(p)$/;"	f
mch_has_exp_wildcard	src/os_msdos.c	/^mch_has_exp_wildcard(char_u *p)$/;"	f	signature:(char_u *p)
mch_has_exp_wildcard	src/os_mswin.c	/^mch_has_exp_wildcard(char_u *p)$/;"	f	signature:(char_u *p)
mch_has_exp_wildcard	src/os_riscos.c	/^mch_has_exp_wildcard(p)$/;"	f
mch_has_exp_wildcard	src/os_unix.c	/^mch_has_exp_wildcard(p)$/;"	f
mch_has_wildcard	src/os_amiga.c	/^mch_has_wildcard(p)$/;"	f
mch_has_wildcard	src/os_msdos.c	/^mch_has_wildcard(char_u *p)$/;"	f	signature:(char_u *p)
mch_has_wildcard	src/os_mswin.c	/^mch_has_wildcard(char_u *p)$/;"	f	signature:(char_u *p)
mch_has_wildcard	src/os_riscos.c	/^mch_has_wildcard(p)$/;"	f
mch_has_wildcard	src/os_unix.c	/^mch_has_wildcard(p)$/;"	f
mch_hide	src/os_amiga.c	/^mch_hide(name)$/;"	f
mch_hide	src/os_msdos.c	/^mch_hide(char_u *name)$/;"	f	signature:(char_u *name)
mch_hide	src/os_riscos.c	/^mch_hide(name)$/;"	f
mch_hide	src/os_unix.c	/^mch_hide(name)$/;"	f
mch_hide	src/os_win32.c	/^mch_hide(char_u *name)$/;"	f	signature:(char_u *name)
mch_inchar	src/os_amiga.c	/^mch_inchar(buf, maxlen, time, tb_change_cnt)$/;"	f
mch_inchar	src/os_msdos.c	/^mch_inchar($/;"	f	signature:( char_u *buf, int maxlen, long time, int tb_change_cnt)
mch_inchar	src/os_riscos.c	/^mch_inchar(buf, maxlen, wtime, tb_change_cnt)$/;"	f
mch_inchar	src/os_unix.c	/^mch_inchar(buf, maxlen, wtime, tb_change_cnt)$/;"	f
mch_inchar	src/os_win32.c	/^mch_inchar($/;"	f	signature:( char_u *buf, int maxlen, long time, int tb_change_cnt)
mch_init	src/os_amiga.c	/^mch_init()$/;"	f
mch_init	src/os_msdos.c	/^mch_init(void)$/;"	f	signature:(void)
mch_init	src/os_riscos.c	/^mch_init()$/;"	f
mch_init	src/os_unix.c	/^mch_init()$/;"	f
mch_init	src/os_win16.c	/^mch_init()$/;"	f
mch_init	src/os_win32.c	/^mch_init(void)$/;"	f	signature:(void)
mch_input_isatty	src/os_amiga.c	/^mch_input_isatty()$/;"	f
mch_input_isatty	src/os_msdos.c	/^mch_input_isatty(void)$/;"	f	signature:(void)
mch_input_isatty	src/os_mswin.c	/^mch_input_isatty()$/;"	f
mch_input_isatty	src/os_riscos.c	/^mch_input_isatty()$/;"	f
mch_input_isatty	src/os_unix.c	/^mch_input_isatty()$/;"	f
mch_isFullName	src/os_amiga.c	/^mch_isFullName(fname)$/;"	f
mch_isFullName	src/os_msdos.c	/^mch_isFullName(char_u *fname)$/;"	f	signature:(char_u *fname)
mch_isFullName	src/os_mswin.c	/^mch_isFullName(char_u *fname)$/;"	f	signature:(char_u *fname)
mch_isFullName	src/os_riscos.c	/^mch_isFullName(fname)$/;"	f
mch_isFullName	src/os_unix.c	/^mch_isFullName(fname)$/;"	f
mch_is_linked	src/os_win32.c	/^mch_is_linked(char_u *fname)$/;"	f	signature:(char_u *fname)
mch_isdir	src/os_amiga.c	/^mch_isdir(name)$/;"	f
mch_isdir	src/os_msdos.c	/^mch_isdir(char_u *name)$/;"	f	signature:(char_u *name)
mch_isdir	src/os_riscos.c	/^mch_isdir(name)$/;"	f
mch_isdir	src/os_unix.c	/^mch_isdir(name)$/;"	f
mch_isdir	src/os_win32.c	/^mch_isdir(char_u *name)$/;"	f	signature:(char_u *name)
mch_libcall	src/os_mswin.c	/^mch_libcall($/;"	f	signature:( char_u *libname, char_u *funcname, char_u *argstring, int argint, char_u **string_result, int *number_result)
mch_libcall	src/os_unix.c	/^mch_libcall(libname, funcname, argstring, argint, string_result, number_result)$/;"	f
mch_lstat	src/macros.h	196;"	d
mch_lstat	src/macros.h	198;"	d
mch_memmove	src/misc2.c	/^mch_memmove(dst_arg, src_arg, len)$/;"	f
mch_memmove	src/os_riscos.h	163;"	d
mch_memmove	src/os_unix.h	466;"	d
mch_memmove	src/os_unix.h	469;"	d
mch_memmove	src/os_unix.h	472;"	d
mch_memmove	src/vim.h	/^void mch_memmove __ARGS((void *, void *, size_t));$/;"	p	signature:(void *, void *, size_t)
mch_memmove	src/vim.h	1598;"	d
mch_mkdir	src/os_amiga.c	/^mch_mkdir(name)$/;"	f
mch_msg	src/message.c	/^mch_msg(str)$/;"	f
mch_msg	src/message.c	2697;"	d	file:
mch_msg	src/vim.h	1929;"	d
mch_munge_fname	src/os_riscos.c	/^mch_munge_fname(fname)$/;"	f
mch_new_shellsize	src/os_amiga.c	/^mch_new_shellsize()$/;"	f
mch_new_shellsize	src/os_msdos.c	/^mch_new_shellsize()$/;"	f
mch_new_shellsize	src/os_mswin.c	/^mch_new_shellsize(void)$/;"	f	signature:(void)
mch_new_shellsize	src/os_riscos.c	/^mch_new_shellsize()$/;"	f
mch_new_shellsize	src/os_unix.c	/^mch_new_shellsize()$/;"	f
mch_new_shellsize	src/os_win32.c	/^mch_new_shellsize(void)$/;"	f	signature:(void)
mch_nodetype	src/os_amiga.c	/^mch_nodetype(name)$/;"	f
mch_nodetype	src/os_msdos.c	/^mch_nodetype(char_u *name)$/;"	f	signature:(char_u *name)
mch_nodetype	src/os_riscos.c	/^mch_nodetype(name)$/;"	f
mch_nodetype	src/os_unix.c	/^mch_nodetype(name)$/;"	f
mch_nodetype	src/os_win32.c	/^mch_nodetype(char_u *name)$/;"	f	signature:(char_u *name)
mch_open	src/macros.h	203;"	d
mch_open	src/macros.h	211;"	d
mch_open	src/macros.h	214;"	d
mch_open	src/os_win32.c	/^mch_open(char *name, int flags, int mode)$/;"	f	signature:(char *name, int flags, int mode)
mch_open_rw	src/macros.h	221;"	d
mch_open_rw	src/macros.h	224;"	d
mch_open_rw	src/macros.h	226;"	d
mch_post_buffer_write	src/gui_mac.c	/^mch_post_buffer_write(buf_T *buf)$/;"	f	signature:(buf_T *buf)
mch_print_begin	src/hardcopy.c	/^mch_print_begin(psettings)$/;"	f
mch_print_begin	src/os_mswin.c	/^mch_print_begin(prt_settings_T *psettings)$/;"	f	signature:(prt_settings_T *psettings)
mch_print_begin_page	src/hardcopy.c	/^mch_print_begin_page(str)$/;"	f
mch_print_begin_page	src/os_mswin.c	/^mch_print_begin_page(char_u *msg)$/;"	f	signature:(char_u *msg)
mch_print_blank_page	src/hardcopy.c	/^mch_print_blank_page()$/;"	f
mch_print_blank_page	src/os_mswin.c	/^mch_print_blank_page(void)$/;"	f	signature:(void)
mch_print_cleanup	src/hardcopy.c	/^mch_print_cleanup()$/;"	f
mch_print_cleanup	src/os_mswin.c	/^mch_print_cleanup(void)$/;"	f	signature:(void)
mch_print_end	src/hardcopy.c	/^mch_print_end(psettings)$/;"	f
mch_print_end	src/os_mswin.c	/^mch_print_end(prt_settings_T *psettings)$/;"	f	signature:(prt_settings_T *psettings)
mch_print_end_page	src/hardcopy.c	/^mch_print_end_page()$/;"	f
mch_print_end_page	src/os_mswin.c	/^mch_print_end_page(void)$/;"	f	signature:(void)
mch_print_init	src/hardcopy.c	/^mch_print_init(psettings, jobname, forceit)$/;"	f
mch_print_init	src/os_mswin.c	/^mch_print_init(prt_settings_T *psettings, char_u *jobname, int forceit)$/;"	f	signature:(prt_settings_T *psettings, char_u *jobname, int forceit)
mch_print_set_bg	src/hardcopy.c	/^mch_print_set_bg(bgcol)$/;"	f
mch_print_set_bg	src/os_mswin.c	/^mch_print_set_bg(long_u bgcol)$/;"	f	signature:(long_u bgcol)
mch_print_set_fg	src/hardcopy.c	/^mch_print_set_fg(fgcol)$/;"	f
mch_print_set_fg	src/os_mswin.c	/^mch_print_set_fg(long_u fgcol)$/;"	f	signature:(long_u fgcol)
mch_print_set_font	src/hardcopy.c	/^mch_print_set_font(iBold, iItalic, iUnderline)$/;"	f
mch_print_set_font	src/os_mswin.c	/^mch_print_set_font(int iBold, int iItalic, int iUnderline)$/;"	f	signature:(int iBold, int iItalic, int iUnderline)
mch_print_start_line	src/hardcopy.c	/^mch_print_start_line(margin, page_line)$/;"	f
mch_print_start_line	src/os_mswin.c	/^mch_print_start_line(margin, page_line)$/;"	f
mch_print_text_out	src/hardcopy.c	/^mch_print_text_out(p, len)$/;"	f
mch_print_text_out	src/os_mswin.c	/^mch_print_text_out(char_u *p, int len)$/;"	f	signature:(char_u *p, int len)
mch_read_filetype	src/os_riscos.c	/^mch_read_filetype(file)$/;"	f
mch_remove	src/os_amiga.h	210;"	d
mch_remove	src/os_mac.h	238;"	d
mch_remove	src/os_msdos.c	/^mch_remove(char_u *name)$/;"	f	signature:(char_u *name)
mch_remove	src/os_riscos.c	/^mch_remove(file)$/;"	f
mch_remove	src/os_unix.h	106;"	d
mch_remove	src/os_unix.h	97;"	d
mch_remove	src/os_win32.c	/^mch_remove(char_u *name)$/;"	f	signature:(char_u *name)
mch_rename	src/os_amiga.h	211;"	d
mch_rename	src/os_mac.h	237;"	d
mch_rename	src/os_msdos.c	/^mch_rename(const char *OldFile, const char *NewFile)$/;"	f	signature:(const char *OldFile, const char *NewFile)
mch_rename	src/os_msdos.h	/^int mch_rename(const char *OldFile, const char *NewFile);$/;"	p	signature:(const char *OldFile, const char *NewFile)
mch_rename	src/os_msdos.h	97;"	d
mch_rename	src/os_riscos.h	164;"	d
mch_rename	src/os_unix.c	/^mch_rename(src, dest)$/;"	f
mch_rename	src/os_unix.h	/^int mch_rename __ARGS((const char *src, const char *dest));$/;"	p	signature:(const char *src, const char *dest)
mch_rename	src/os_unix.h	481;"	d
mch_rename	src/os_win16.c	/^mch_rename($/;"	f	signature:( const char *pszOldFile, const char *pszNewFile)
mch_rename	src/os_win32.c	/^mch_rename($/;"	f	signature:( const char *pszOldFile, const char *pszNewFile)
mch_resolve_shortcut	src/os_mswin.c	/^mch_resolve_shortcut(char_u *fname)$/;"	f	signature:(char_u *fname)
mch_restore_cursor_shape	src/os_msdos.c	/^mch_restore_cursor_shape(int restore)$/;"	f	file:	signature:(int restore)
mch_restore_title	src/os_amiga.c	/^mch_restore_title(which)$/;"	f
mch_restore_title	src/os_mswin.c	/^mch_restore_title($/;"	f	signature:( int which)
mch_restore_title	src/os_riscos.c	/^mch_restore_title(which)$/;"	f
mch_restore_title	src/os_unix.c	/^mch_restore_title(which)$/;"	f
mch_rmdir	src/os_msdos.h	105;"	d
mch_rmdir	src/os_unix.h	101;"	d
mch_rmdir	src/os_unix.h	105;"	d
mch_screenmode	src/os_amiga.c	/^mch_screenmode(arg)$/;"	f
mch_screenmode	src/os_msdos.c	/^mch_screenmode(char_u *arg)$/;"	f	signature:(char_u *arg)
mch_screenmode	src/os_mswin.c	/^mch_screenmode($/;"	f	signature:( char_u *arg)
mch_screenmode	src/os_riscos.c	/^mch_screenmode(arg)$/;"	f
mch_screenmode	src/os_unix.c	/^mch_screenmode(arg)$/;"	f
mch_set_acl	src/os_unix.c	/^mch_set_acl(fname, aclent)$/;"	f
mch_set_acl	src/os_win32.c	/^mch_set_acl(char_u *fname, vim_acl_T acl)$/;"	f	signature:(char_u *fname, vim_acl_T acl)
mch_set_cursor_shape	src/os_msdos.c	/^mch_set_cursor_shape(int thickness)$/;"	f	file:	signature:(int thickness)
mch_set_cursor_shape	src/os_win32.c	/^mch_set_cursor_shape(int thickness)$/;"	f	file:	signature:(int thickness)
mch_set_filetype	src/os_riscos.c	/^mch_set_filetype(file, type)$/;"	f
mch_set_mouse_shape	src/gui_gtk_x11.c	/^mch_set_mouse_shape(int shape)$/;"	f	signature:(int shape)
mch_set_mouse_shape	src/gui_photon.c	/^mch_set_mouse_shape(shape)$/;"	f
mch_set_mouse_shape	src/gui_w48.c	/^mch_set_mouse_shape(int shape)$/;"	f	signature:(int shape)
mch_set_mouse_shape	src/gui_x11.c	/^mch_set_mouse_shape(shape)$/;"	f
mch_set_normal_colors	src/os_msdos.c	/^mch_set_normal_colors()$/;"	f
mch_set_normal_colors	src/os_win32.c	/^mch_set_normal_colors(void)$/;"	f	signature:(void)
mch_set_shellsize	src/os_amiga.c	/^mch_set_shellsize()$/;"	f
mch_set_shellsize	src/os_msdos.c	/^mch_set_shellsize(void)$/;"	f	signature:(void)
mch_set_shellsize	src/os_mswin.c	/^mch_set_shellsize(void)$/;"	f	signature:(void)
mch_set_shellsize	src/os_riscos.c	/^mch_set_shellsize()$/;"	f
mch_set_shellsize	src/os_unix.c	/^mch_set_shellsize()$/;"	f
mch_set_shellsize	src/os_vms.c	/^mch_set_shellsize(void)$/;"	f	signature:(void)
mch_set_shellsize	src/os_win32.c	/^mch_set_shellsize(void)$/;"	f	signature:(void)
mch_set_winpos	src/os_mswin.c	/^mch_set_winpos(int x, int y)$/;"	f	signature:(int x, int y)
mch_set_winsize_now	src/os_win32.c	/^mch_set_winsize_now(void)$/;"	f	signature:(void)
mch_setenv	src/os_amiga.c	/^mch_setenv(var, value, x)$/;"	f
mch_setenv	src/os_mac.h	242;"	d
mch_setenv	src/os_mac.h	246;"	d
mch_setenv	src/os_mac.h	251;"	d
mch_setenv	src/os_msdos.h	107;"	d
mch_setenv	src/os_riscos.h	166;"	d
mch_setenv	src/os_unix.h	493;"	d
mch_setenv	src/os_vms.c	/^mch_setenv(char *var, char *value, int x)$/;"	f	signature:(char *var, char *value, int x)
mch_setenv	src/os_win16.h	138;"	d
mch_setenv	src/os_win32.h	189;"	d
mch_setmouse	src/os_msdos.c	/^mch_setmouse(int on)$/;"	f	signature:(int on)
mch_setmouse	src/os_riscos.c	/^mch_setmouse(on)$/;"	f
mch_setmouse	src/os_unix.c	/^mch_setmouse(on)$/;"	f
mch_setmouse	src/os_win16.c	/^mch_setmouse($/;"	f	signature:( int on)
mch_setmouse	src/os_win32.c	/^mch_setmouse(int on)$/;"	f	signature:(int on)
mch_setperm	src/os_amiga.c	/^mch_setperm(name, perm)$/;"	f
mch_setperm	src/os_msdos.c	/^mch_setperm($/;"	f	signature:( char_u *name, long perm)
mch_setperm	src/os_riscos.c	/^mch_setperm(name, perm)$/;"	f
mch_setperm	src/os_unix.c	/^mch_setperm(name, perm)$/;"	f
mch_setperm	src/os_win32.c	/^mch_setperm($/;"	f	signature:( char_u *name, long perm)
mch_settitle	src/os_amiga.c	/^mch_settitle(title, icon)$/;"	f
mch_settitle	src/os_mswin.c	/^mch_settitle($/;"	f	signature:( char_u *title, char_u *icon)
mch_settitle	src/os_riscos.c	/^mch_settitle(title, icon)$/;"	f
mch_settitle	src/os_unix.c	/^mch_settitle(title, icon)$/;"	f
mch_settmode	src/os_amiga.c	/^mch_settmode(tmode)$/;"	f
mch_settmode	src/os_msdos.c	/^mch_settmode(int tmode)$/;"	f	signature:(int tmode)
mch_settmode	src/os_mswin.c	/^mch_settmode(int tmode)$/;"	f	signature:(int tmode)
mch_settmode	src/os_riscos.c	/^mch_settmode(tmode)$/;"	f
mch_settmode	src/os_unix.c	/^mch_settmode(tmode)$/;"	f
mch_settmode	src/os_vms.c	/^mch_settmode(int tmode)$/;"	f	signature:(int tmode)
mch_settmode	src/os_win32.c	/^mch_settmode(int tmode)$/;"	f	signature:(int tmode)
mch_stackcheck	src/os_unix.c	/^mch_stackcheck(p)$/;"	f
mch_startjmp	src/os_unix.c	/^mch_startjmp()$/;"	f
mch_stat	src/macros.h	173;"	d
mch_stat	src/macros.h	183;"	d
mch_stat	src/macros.h	188;"	d
mch_stat	src/macros.h	190;"	d
mch_suspend	src/os_amiga.c	/^mch_suspend()$/;"	f
mch_suspend	src/os_msdos.c	/^mch_suspend(void)$/;"	f	signature:(void)
mch_suspend	src/os_mswin.c	/^mch_suspend()$/;"	f
mch_suspend	src/os_riscos.c	/^mch_suspend()$/;"	f
mch_suspend	src/os_unix.c	/^mch_suspend()$/;"	f
mch_system	src/os_win16.c	/^mch_system(char *cmd, int options)$/;"	f	file:	signature:(char *cmd, int options)
mch_system	src/os_win32.c	/^mch_system(char *cmd, int options)$/;"	f	file:	signature:(char *cmd, int options)
mch_system	src/os_win32.c	3213;"	d	file:
mch_total_mem	src/os_unix.c	/^mch_total_mem(special)$/;"	f
mch_update_cursor	src/os_msdos.c	/^mch_update_cursor(void)$/;"	f	signature:(void)
mch_update_cursor	src/os_win32.c	/^mch_update_cursor(void)$/;"	f	signature:(void)
mch_windows95	src/os_win32.c	/^mch_windows95(void)$/;"	f	signature:(void)
mch_wrename	src/os_win32.c	/^mch_wrename(WCHAR *wold, WCHAR *wnew)$/;"	f	signature:(WCHAR *wold, WCHAR *wnew)
mch_writable	src/os_win32.c	/^mch_writable(char_u *name)$/;"	f	signature:(char_u *name)
mch_write	src/os_amiga.c	/^mch_write(p, len)$/;"	f
mch_write	src/os_msdos.c	/^mch_write($/;"	f	signature:( char_u *s, int len)
mch_write	src/os_riscos.c	/^mch_write(s, len)$/;"	f
mch_write	src/os_unix.c	/^mch_write(s, len)$/;"	f
mch_write	src/os_win32.c	/^mch_write($/;"	f	signature:( char_u *s, int len)
mcmd_e	src/if_cscope.h	/^} mcmd_e;$/;"	t	typeref:enum:__anon88
medium	src/GvimExt/gvimext.cpp	/^STGMEDIUM medium;$/;"	v
mediumVersion	src/version.c	/^static char	*mediumVersion = VIM_VERSION_MEDIUM;$/;"	v	file:
mel_minlines	runtime/syntax/mel.vim	/^  let mel_minlines=15$/;"	v
mem_allocated	src/misc2.c	/^static long_u mem_allocated;$/;"	v	file:
mem_allocs	src/misc2.c	/^static long_u mem_allocs[MEM_SIZES];$/;"	v	file:
mem_freed	src/misc2.c	/^static long_u mem_freed;$/;"	v	file:
mem_frees	src/misc2.c	/^static long_u mem_frees[MEM_SIZES];$/;"	v	file:
mem_peak	src/misc2.c	/^static long_u mem_peak;$/;"	v	file:
mem_post_alloc	src/misc2.c	/^mem_post_alloc(pp, size)$/;"	f	file:
mem_post_alloc	src/misc2.c	/^static void mem_post_alloc __ARGS((void **pp, size_t size));$/;"	p	file:	signature:(void **pp, size_t size)
mem_pre_alloc_l	src/misc2.c	/^mem_pre_alloc_l(sizep)$/;"	f	file:
mem_pre_alloc_l	src/misc2.c	/^static void mem_pre_alloc_l __ARGS((long_u *sizep));$/;"	p	file:	signature:(long_u *sizep)
mem_pre_alloc_s	src/misc2.c	/^mem_pre_alloc_s(sizep)$/;"	f	file:
mem_pre_alloc_s	src/misc2.c	/^static void mem_pre_alloc_s __ARGS((size_t *sizep));$/;"	p	file:	signature:(size_t *sizep)
mem_pre_free	src/misc2.c	/^mem_pre_free(pp)$/;"	f	file:
mem_pre_free	src/misc2.c	/^static void mem_pre_free __ARGS((void **pp));$/;"	p	file:	signature:(void **pp)
mem_realloc	src/misc2.c	/^mem_realloc(ptr, size)$/;"	f
memfile	src/structs.h	/^struct memfile$/;"	s
memfile::mf_blocknr_max	src/structs.h	/^    blocknr_T	mf_blocknr_max;		\/* highest positive block number + 1*\/$/;"	m	struct:memfile	access:public
memfile::mf_blocknr_min	src/structs.h	/^    blocknr_T	mf_blocknr_min;		\/* lowest negative block number - 1 *\/$/;"	m	struct:memfile	access:public
memfile::mf_buffer	src/structs.h	/^    buf_T	*mf_buffer;		\/* bufer this memfile is for *\/$/;"	m	struct:memfile	access:public
memfile::mf_dirty	src/structs.h	/^    int		mf_dirty;		\/* TRUE if there are dirty blocks *\/$/;"	m	struct:memfile	access:public
memfile::mf_fd	src/structs.h	/^    int		mf_fd;			\/* file descriptor *\/$/;"	m	struct:memfile	access:public
memfile::mf_ffname	src/structs.h	/^    char_u	*mf_ffname;		\/* idem, full path *\/$/;"	m	struct:memfile	access:public
memfile::mf_fname	src/structs.h	/^    char_u	*mf_fname;		\/* name of the file *\/$/;"	m	struct:memfile	access:public
memfile::mf_free_first	src/structs.h	/^    bhdr_T	*mf_free_first;		\/* first block_hdr in free list *\/$/;"	m	struct:memfile	access:public
memfile::mf_hash	src/structs.h	/^    bhdr_T	*mf_hash[MEMHASHSIZE];	\/* array of hash lists *\/$/;"	m	struct:memfile	access:public
memfile::mf_infile_count	src/structs.h	/^    blocknr_T	mf_infile_count;	\/* number of pages in the file *\/$/;"	m	struct:memfile	access:public
memfile::mf_neg_count	src/structs.h	/^    blocknr_T	mf_neg_count;		\/* number of negative blocks numbers *\/$/;"	m	struct:memfile	access:public
memfile::mf_old_cm	src/structs.h	/^    int		mf_old_cm;$/;"	m	struct:memfile	access:public
memfile::mf_old_key	src/structs.h	/^    char_u	*mf_old_key;$/;"	m	struct:memfile	access:public
memfile::mf_old_seed	src/structs.h	/^    char_u	mf_old_seed[MF_SEED_LEN];$/;"	m	struct:memfile	access:public
memfile::mf_page_size	src/structs.h	/^    unsigned	mf_page_size;		\/* number of bytes in a page *\/$/;"	m	struct:memfile	access:public
memfile::mf_seed	src/structs.h	/^    char_u	mf_seed[MF_SEED_LEN];	\/* seed for encryption *\/$/;"	m	struct:memfile	access:public
memfile::mf_trans	src/structs.h	/^    NR_TRANS	*mf_trans[MEMHASHSIZE];	\/* array of trans lists *\/$/;"	m	struct:memfile	access:public
memfile::mf_used_count	src/structs.h	/^    unsigned	mf_used_count;		\/* number of pages in used list *\/$/;"	m	struct:memfile	access:public
memfile::mf_used_count_max	src/structs.h	/^    unsigned	mf_used_count_max;	\/* maximum number of pages in memory *\/$/;"	m	struct:memfile	access:public
memfile::mf_used_first	src/structs.h	/^    bhdr_T	*mf_used_first;		\/* mru block_hdr in used list *\/$/;"	m	struct:memfile	access:public
memfile::mf_used_last	src/structs.h	/^    bhdr_T	*mf_used_last;		\/* lru block_hdr in used list *\/$/;"	m	struct:memfile	access:public
memfile_T	src/structs.h	/^typedef struct memfile	    memfile_T;$/;"	t	typeref:struct:memfile
memline	src/structs.h	/^typedef struct memline$/;"	s
memline::ml_chunksize	src/structs.h	/^    chunksize_T *ml_chunksize;$/;"	m	struct:memline	access:public
memline::ml_flags	src/structs.h	/^    int		ml_flags;$/;"	m	struct:memline	access:public
memline::ml_line_count	src/structs.h	/^    linenr_T	ml_line_count;	\/* number of lines in the buffer *\/$/;"	m	struct:memline	access:public
memline::ml_line_lnum	src/structs.h	/^    linenr_T	ml_line_lnum;	\/* line number of cached line, 0 if not valid *\/$/;"	m	struct:memline	access:public
memline::ml_line_ptr	src/structs.h	/^    char_u	*ml_line_ptr;	\/* pointer to cached line *\/$/;"	m	struct:memline	access:public
memline::ml_locked	src/structs.h	/^    bhdr_T	*ml_locked;	\/* block used by last ml_get *\/$/;"	m	struct:memline	access:public
memline::ml_locked_high	src/structs.h	/^    linenr_T	ml_locked_high;	\/* last line in ml_locked *\/$/;"	m	struct:memline	access:public
memline::ml_locked_lineadd	src/structs.h	/^    int		ml_locked_lineadd;  \/* number of lines inserted in ml_locked *\/$/;"	m	struct:memline	access:public
memline::ml_locked_low	src/structs.h	/^    linenr_T	ml_locked_low;	\/* first line in ml_locked *\/$/;"	m	struct:memline	access:public
memline::ml_mfp	src/structs.h	/^    memfile_T	*ml_mfp;	\/* pointer to associated memfile *\/$/;"	m	struct:memline	access:public
memline::ml_numchunks	src/structs.h	/^    int		ml_numchunks;$/;"	m	struct:memline	access:public
memline::ml_stack	src/structs.h	/^    infoptr_T	*ml_stack;	\/* stack of pointer blocks (array of IPTRs) *\/$/;"	m	struct:memline	access:public
memline::ml_stack_size	src/structs.h	/^    int		ml_stack_size;	\/* total number of entries in ml_stack *\/$/;"	m	struct:memline	access:public
memline::ml_stack_top	src/structs.h	/^    int		ml_stack_top;	\/* current top if ml_stack *\/$/;"	m	struct:memline	access:public
memline::ml_usedchunks	src/structs.h	/^    int		ml_usedchunks;$/;"	m	struct:memline	access:public
memline_T	src/structs.h	/^} memline_T;$/;"	t	typeref:struct:memline
menuBar	src/gui_athena.c	/^static Widget menuBar = (Widget)0;$/;"	v	file:
menuBar	src/gui_motif.c	/^static Widget menuBar;$/;"	v	file:
menuMap	src/workshop.c	/^static MenuMap	*menuMap;		\/* list of verb\/menu mappings *\/$/;"	v	file:
menuMapMax	src/workshop.c	/^static int	 menuMapMax;		\/* allocated size of menuMap *\/$/;"	v	file:
menuMapSize	src/workshop.c	/^static int	 menuMapSize;		\/* current size of menuMap *\/$/;"	v	file:
menuTrans	src/gui_athena.c	/^static XtTranslations	popupTrans, parentTrans, menuTrans, supermenuTrans;$/;"	v	file:
menu_bg_pixel	src/gui.h	/^    guicolor_T	menu_bg_pixel;		\/* Same in Pixel format *\/$/;"	m	struct:Gui	access:public
menu_def_bg_pixel	src/gui.h	/^    guicolor_T	menu_def_bg_pixel;  \/* Default menu background *\/$/;"	m	struct:Gui	access:public
menu_def_fg_pixel	src/gui.h	/^    guicolor_T	menu_def_fg_pixel;  \/* Default menu foreground *\/$/;"	m	struct:Gui	access:public
menu_enabled	src/gui_motif.c	/^static int menu_enabled = TRUE;$/;"	v	file:
menu_fg_pixel	src/gui.h	/^    guicolor_T	menu_fg_pixel;		\/* Same in Pixel format *\/$/;"	m	struct:Gui	access:public
menu_font	src/gui.h	/^    GuiFont	menu_font;	    \/* menu item font *\/$/;"	m	struct:Gui	access:public
menu_fontset	src/gui.h	/^    GuiFontset	menu_fontset;	    \/* set of fonts for multi-byte chars *\/$/;"	m	struct:Gui	access:public
menu_handle	src/structs.h	/^    MenuHandle	menu_handle;$/;"	m	struct:VimMenu	access:public
menu_height	src/gui.h	/^    int		menu_height;	    \/* Height of the menu bar *\/$/;"	m	struct:Gui	access:public
menu_height_fixed	src/gui.h	/^    char	menu_height_fixed;  \/* TRUE if menu height fixed *\/$/;"	m	struct:Gui	access:public
menu_id	src/structs.h	/^    short	menu_id;	    \/* the menu id to which this item belong *\/$/;"	m	struct:VimMenu	access:public
menu_is_active	src/gui.h	/^    char	menu_is_active;	    \/* TRUE if menu is present *\/$/;"	m	struct:Gui	access:public
menu_is_child_of_popup	src/menu.c	/^menu_is_child_of_popup(menu)$/;"	f
menu_is_hidden	src/menu.c	/^menu_is_hidden(name)$/;"	f	file:
menu_is_hidden	src/menu.c	/^static int menu_is_hidden __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
menu_is_menubar	src/menu.c	/^menu_is_menubar(name)$/;"	f
menu_is_popup	src/menu.c	/^menu_is_popup(name)$/;"	f
menu_is_separator	src/menu.c	/^menu_is_separator(name)$/;"	f
menu_is_tearoff	src/menu.c	/^menu_is_tearoff(name)$/;"	f	file:
menu_is_tearoff	src/menu.c	/^static int menu_is_tearoff __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
menu_is_toolbar	src/menu.c	/^menu_is_toolbar(name)$/;"	f
menu_item_activate	src/gui_gtk.c	/^menu_item_activate(GtkWidget *widget UNUSED, gpointer data)$/;"	f	file:	signature:(GtkWidget *widget UNUSED, gpointer data)
menu_item_new	src/gui_gtk.c	/^menu_item_new(vimmenu_T *menu, GtkWidget *parent_widget)$/;"	f	file:	signature:(vimmenu_T *menu, GtkWidget *parent_widget)
menu_mode_chars	src/menu.c	/^static char_u	menu_mode_chars[] = {'n', 'v', 's', 'o', 'i', 'c', 't'};$/;"	v	file:
menu_nable_recurse	src/menu.c	/^menu_nable_recurse(menu, name, modes, enable)$/;"	f	file:
menu_nable_recurse	src/menu.c	/^static int menu_nable_recurse __ARGS((vimmenu_T *menu, char_u *name, int modes, int enable));$/;"	p	file:	signature:(vimmenu_T *menu, char_u *name, int modes, int enable)
menu_name_equal	src/menu.c	/^menu_name_equal(name, menu)$/;"	f	file:
menu_name_equal	src/menu.c	/^static int menu_name_equal __ARGS((char_u *name, vimmenu_T *menu));$/;"	p	file:	signature:(char_u *name, vimmenu_T *menu)
menu_name_skip	src/menu.c	/^menu_name_skip(name)$/;"	f
menu_namecmp	src/menu.c	/^menu_namecmp(name, mname)$/;"	f	file:
menu_namecmp	src/menu.c	/^static int menu_namecmp __ARGS((char_u *name, char_u *mname));$/;"	p	file:	signature:(char_u *name, char_u *mname)
menu_skip_part	src/menu.c	/^menu_skip_part(p)$/;"	f	file:
menu_skip_part	src/menu.c	/^static char_u *menu_skip_part __ARGS((char_u *p));$/;"	p	file:	signature:(char_u *p)
menu_stock_ids	src/gui_gtk.c	/^static const char * const menu_stock_ids[] =$/;"	v	file:
menu_text	src/menu.c	/^menu_text(str, mnemonic, actext)$/;"	f	file:
menu_text	src/menu.c	/^static char_u *menu_text __ARGS((char_u *text, int *mnemonic, char_u **actext));$/;"	p	file:	signature:(char_u *text, int *mnemonic, char_u **actext)
menu_title_removing_mnemonic	src/gui_mac.c	/^menu_title_removing_mnemonic(vimmenu_T *menu)$/;"	f	file:	signature:(vimmenu_T *menu)
menu_translate_tab_and_shift	src/menu.c	/^menu_translate_tab_and_shift(arg_start)$/;"	f	file:
menu_translate_tab_and_shift	src/menu.c	/^static char_u *menu_translate_tab_and_shift __ARGS((char_u *arg_start));$/;"	p	file:	signature:(char_u *arg_start)
menu_unescape_name	src/menu.c	/^menu_unescape_name(name)$/;"	f	file:
menu_unescape_name	src/menu.c	/^static void menu_unescape_name  __ARGS((char_u	*p));$/;"	p	file:	signature:(char_u *p)
menu_width	src/gui.h	/^    int		menu_width;	    \/* Width of the menu bar *\/$/;"	m	struct:Gui	access:public
menubar	src/gui.h	/^    GtkWidget	*menubar;	    \/* menubar *\/$/;"	m	struct:Gui	access:public
menubar_h	src/gui.h	/^    GtkWidget	*menubar_h;	    \/* menubar handle *\/$/;"	m	struct:Gui	access:public
menutrans_T	src/menu.c	/^} menutrans_T;$/;"	t	typeref:struct:__anon68	file:
menutrans_ga	src/menu.c	/^static garray_T menutrans_ga = {0, 0, 0, 0, NULL};$/;"	v	file:
menutrans_help_dialog	runtime/lang/menu_hu_hu.iso_8859-2.vim	/^let menutrans_help_dialog = "Írd be a kívánt szót vagy parancsot:\\n\\n A szövegbeviteli parancsok elé írj i_-t (pl.: i_CTRL-X)\\nA sorszerkeszõ parancsok elé c_-t (pl.: c_<Del>)\\nA változókat a ' jellel vedd körül (pl.: 'shiftwidth')"$/;"	v
menutrans_help_dialog	runtime/lang/menu_hu_hu.utf-8.vim	/^let menutrans_help_dialog = "Ãrd be a kÃ­vÃ¡nt szÃ³t vagy parancsot:\\n\\n A szÃ¶vegbeviteli parancsok elÃ© Ã­rj i_-t (pl.: i_CTRL-X)\\nA sorszerkeszÅ parancsok elÃ© c_-t (pl.: c_<Del>)\\nA vÃ¡ltozÃ³kat a ' jellel vedd kÃ¶rÃ¼l (pl.: 'shiftwidth')"$/;"	v
menutrans_help_dialog	runtime/lang/menu_nl_nl.latin1.vim	/^let menutrans_help_dialog = "Typ een commando of woord om help voor te vinden:\\n\\nVoeg i_ in voor Input mode commandos (bijv. i_CTRL-X)\\nVoeg c_ in voor een commando-regel edit commando (bijv. c_<Del>)\\nVoeg ' in \\voor een optie naam (bijv. 'shiftwidth')"$/;"	v
menutrans_help_dialog	runtime/lang/menu_pl_pl.iso_8859-2.vim	/^let menutrans_help_dialog = "Wprowad¼ komendê lub s³owo, aby otrzymaæ pomoc o:\\n\\nPrzedrostek i_ oznacza komendê trybu Wprowadzania (np. i_CTRL-X)\\nPrzedrostek c_ oznacza komendê edycji wiersza komend (np. c_<Del>)\\nPrzedrostek ' oznacza nazwê opcji (np. 'shiftwidth')"$/;"	v
menutrans_help_dialog	runtime/lang/menu_pl_pl.utf-8.vim	/^let menutrans_help_dialog = "WprowadÅº komendÄ lub sÅowo, aby otrzymaÄ pomoc o:\\n\\nPrzedrostek i_ oznacza komendÄ trybu Wprowadzania (np. i_CTRL-X)\\nPrzedrostek c_ oznacza komendÄ edycji wiersza komend (np. c_<Del>)\\nPrzedrostek ' oznacza nazwÄ opcji (np. 'shiftwidth')"$/;"	v
menutrans_help_dialog	runtime/lang/menu_polish_poland.1250.vim	/^let menutrans_help_dialog = "Wprowad komendê lub s³owo, aby otrzymaæ pomoc o:\\n\\nPrzedrostek i_ oznacza komendê trybu Wprowadzania (np. i_CTRL-X)\\nPrzedrostek c_ oznacza komendê edycji wiersza komend (np. c_<Del>)\\nPrzedrostek ' oznacza nazwê opcji (np. 'shiftwidth')"$/;"	v
menutrans_help_dialog	runtime/lang/menu_sr_rs.ascii.vim	/^let menutrans_help_dialog = "Unesite naredbu ili rec cije pojasnjenje trazite:\\n\\nDodajte i_ za naredbe unosa (npr. i_CTRL-X)\\nDodajte c_ za naredbe komandnog rezima (npr. s_<Del>)\\nDodajte ' za imena opcija (npr. 'shiftwidth')"$/;"	v
menutrans_help_dialog	runtime/lang/menu_sr_rs.iso_8859-2.vim	/^let menutrans_help_dialog = "Unesite naredbu ili reè èije poja¹njenje tra¾ite:\\n\\nDodajte i_ za naredbe unosa (npr. i_CTRL-X)\\nDodajte c_ za naredbe komandnog re¾ima (npr. s_<Del>)\\nDodajte ' za imena opcija (npr. 'shiftwidth')"$/;"	v
menutrans_help_dialog	runtime/lang/menu_sr_rs.iso_8859-5.vim	/^let menutrans_help_dialog = "ÃÝÕáØâÕ ÝÐàÕÔÑã ØÛØ àÕç çØøÕ ßÞøÐèúÕúÕ âàÐÖØâÕ:\\n\\n´ÞÔÐøâÕ i_ ×Ð ÝÐàÕÔÑÕ ãÝÞáÐ (Ýßà. i_CTRL-X)\\n´ÞÔÐøâÕ c_ ×Ð ÝÐàÕÔÑÕ ÚÞÜÐÝÔÝÞÓ àÕÖØÜÐ (Ýßà. á_<Del>)\\n´ÞÔÐøâÕ ' ×Ð ØÜÕÝÐ ÞßæØøÐ (Ýßà. 'shiftwidth')"$/;"	v
menutrans_help_dialog	runtime/lang/menu_sr_rs.utf-8.vim	/^let menutrans_help_dialog = "Ð£Ð½ÐµÑÐ¸ÑÐµ Ð½Ð°ÑÐµÐ´Ð±Ñ Ð¸Ð»Ð¸ ÑÐµÑ ÑÐ¸ÑÐµ Ð¿Ð¾ÑÐ°ÑÑÐµÑÐµ ÑÑÐ°Ð¶Ð¸ÑÐµ:\\n\\nÐÐ¾Ð´Ð°ÑÑÐµ i_ Ð·Ð° Ð½Ð°ÑÐµÐ´Ð±Ðµ ÑÐ½Ð¾ÑÐ° (Ð½Ð¿Ñ. i_CTRL-X)\\nÐÐ¾Ð´Ð°ÑÑÐµ c_ Ð·Ð° Ð½Ð°ÑÐµÐ´Ð±Ðµ ÐºÐ¾Ð¼Ð°Ð½Ð´Ð½Ð¾Ð³ ÑÐµÐ¶Ð¸Ð¼Ð° (Ð½Ð¿Ñ. Ñ_<Del>)\\nÐÐ¾Ð´Ð°ÑÑÐµ ' Ð·Ð° Ð¸Ð¼ÐµÐ½Ð° Ð¾Ð¿ÑÐ¸ÑÐ° (Ð½Ð¿Ñ. 'shiftwidth')"$/;"	v
menutrans_help_dialog	runtime/lang/menu_sv_se.latin1.vim	/^let menutrans_help_dialog = "Skriv in ett kommando eller ord som du vill söka hjälp på:\\n\\nBörja med i_ för infogninglägeskommandon (t.ex. i_CTRL-X)\\nBörja med c_ för kommandoradredigeringskommandon (t.ex. c_<Del>)\\nBörja med ' för ett inställningsnamn (t.ex. 'shiftwidth')"$/;"	v
menutrans_help_dialog	runtime/lang/menu_uk_ua.cp1251.vim	/^let menutrans_help_dialog = "Âêàæ³òü êîìàíäó àáî ñëîâî äëÿ ïîøóêó:\\n\\nÄîäàéòå i_ äëÿ êîìàíä ðåæèìó âñòàâêè (íàïð. i_CTRL-X)\\nÄîäàéòå i_ äëÿ êîìàíäíîãî ðåæèìó (íàïð. ñ_<Del>)\\nÄîäàéòå ' äëÿ ïîçíà÷åííÿ íàçâè îïö³¿ (íàïð. 'shiftwidth')"$/;"	v
menutrans_help_dialog	runtime/lang/menu_uk_ua.koi8-u.vim	/^let menutrans_help_dialog = "÷ËÁÖ¦ÔØ ËÏÍÁÎÄÕ ÁÂÏ ÓÌÏ×Ï ÄÌÑ ÐÏÛÕËÕ:\\n\\näÏÄÁÊÔÅ i_ ÄÌÑ ËÏÍÁÎÄ ÒÅÖÉÍÕ ×ÓÔÁ×ËÉ (ÎÁÐÒ. i_CTRL-X)\\näÏÄÁÊÔÅ i_ ÄÌÑ ËÏÍÁÎÄÎÏÇÏ ÒÅÖÉÍÕ (ÎÁÐÒ. Ó_<Del>)\\näÏÄÁÊÔÅ ' ÄÌÑ ÐÏÚÎÁÞÅÎÎÑ ÎÁÚ×É ÏÐÃ¦§ (ÎÁÐÒ. 'shiftwidth')"$/;"	v
menutrans_lookup	src/menu.c	/^menutrans_lookup(name, len)$/;"	f	file:
menutrans_lookup	src/menu.c	/^static char_u *menutrans_lookup __ARGS((char_u *name, int len));$/;"	p	file:	signature:(char_u *name, int len)
menutrans_no_file	runtime/lang/menu_hu_hu.iso_8859-2.vim	/^let menutrans_no_file = "[Nincs file]"$/;"	v
menutrans_no_file	runtime/lang/menu_hu_hu.utf-8.vim	/^let menutrans_no_file = "[Nincs file]"$/;"	v
menutrans_no_file	runtime/lang/menu_nl_nl.latin1.vim	/^let menutrans_no_file = "[Geen Bestand]"$/;"	v
menutrans_no_file	runtime/lang/menu_pl_pl.iso_8859-2.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	runtime/lang/menu_pl_pl.utf-8.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	runtime/lang/menu_polish_poland.1250.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	runtime/lang/menu_ru_ru.koi8-r.vim	/^let menutrans_no_file = "[îÅÔ ÆÁÊÌÁ]"$/;"	v
menutrans_no_file	runtime/lang/menu_ru_ru.vim	/^let menutrans_no_file = "[ÐÐµÑ ÑÐ°Ð¹Ð»Ð°]"$/;"	v
menutrans_no_file	runtime/lang/menu_sr_rs.ascii.vim	/^let menutrans_no_file = "[Nema datoteke]"$/;"	v
menutrans_no_file	runtime/lang/menu_sr_rs.iso_8859-2.vim	/^let menutrans_no_file = "[Nema datoteke]"$/;"	v
menutrans_no_file	runtime/lang/menu_sr_rs.iso_8859-5.vim	/^let menutrans_no_file = "[½ÕÜÐ ÔÐâÞâÕÚÕ]"$/;"	v
menutrans_no_file	runtime/lang/menu_sr_rs.utf-8.vim	/^let menutrans_no_file = "[ÐÐµÐ¼Ð° Ð´Ð°ÑÐ¾ÑÐµÐºÐµ]"$/;"	v
menutrans_no_file	runtime/lang/menu_sv_se.latin1.vim	/^let menutrans_no_file = "[Ingen fil]"$/;"	v
menutrans_no_file	runtime/lang/menu_uk_ua.cp1251.vim	/^let menutrans_no_file = "[Íåìàº\\ Ôàéëà]"$/;"	v
menutrans_no_file	runtime/lang/menu_uk_ua.koi8-u.vim	/^let menutrans_no_file = "[îÅÍÁ¤\\ æÁÊÌÁ]"$/;"	v
menutrans_no_file	runtime/lang/menu_vi_vn.vim	/^let menutrans_no_file = "[khÃ´ng cÃ³ táº­p tin]"$/;"	v
messageFromEserve	src/integration.c	/^messageFromEserve(XtPointer clientData UNUSED,$/;"	f	signature:(XtPointer clientData UNUSED, int *dum1 UNUSED, XtInputId *dum2 UNUSED)
messageFromEserve	src/integration.c	/^static void messageFromEserve(XtPointer clientData, int *dum1, XtInputId *dum2);$/;"	p	file:	signature:(XtPointer clientData, int *dum1, XtInputId *dum2)
messageFromNetbeans	src/netbeans.c	/^messageFromNetbeans(XtPointer clientData UNUSED,$/;"	f	file:	signature:(XtPointer clientData UNUSED, int *unused1 UNUSED, XtInputId *unused2 UNUSED)
messageFromNetbeans	src/netbeans.c	/^messageFromNetbeans(gpointer clientData UNUSED,$/;"	f	file:	signature:(gpointer clientData UNUSED, gint unused1 UNUSED, GdkInputCondition unused2 UNUSED)
messageFromNetbeans	src/netbeans.c	/^static void messageFromNetbeans __ARGS((XtPointer, int *, XtInputId *));$/;"	p	file:	signature:(XtPointer, int *, XtInputId *)
messageFromNetbeans	src/netbeans.c	/^static void messageFromNetbeans __ARGS((gpointer, gint, GdkInputCondition));$/;"	p	file:	signature:(gpointer, gint, GdkInputCondition)
message_window	src/os_mswin.c	/^HWND message_window = 0;	    \/* window that's handling messsages *\/$/;"	v
messages	src/structs.h	/^    struct msglist	*messages;	\/* message(s) causing error exception *\/$/;"	m	struct:vim_exception	typeref:struct:vim_exception::msglist	access:public
messages	src/testdir/test49.vim	/^    let messages = g:messages . "D"$/;"	v
messages	src/testdir/test49.vim	/^let messages = ""$/;"	v
messaging	src/screen.c	/^messaging()$/;"	f
metakey	src/os_msdos.c	/^    char_u	metakey;$/;"	m	struct:__anon81	file:	access:public
mf_alloc_bhdr	src/memfile.c	/^mf_alloc_bhdr(mfp, page_count)$/;"	f	file:
mf_alloc_bhdr	src/memfile.c	/^static bhdr_T *mf_alloc_bhdr __ARGS((memfile_T *, int));$/;"	p	file:	signature:(memfile_T *, int)
mf_blocknr_max	src/structs.h	/^    blocknr_T	mf_blocknr_max;		\/* highest positive block number + 1*\/$/;"	m	struct:memfile	access:public
mf_blocknr_min	src/structs.h	/^    blocknr_T	mf_blocknr_min;		\/* lowest negative block number - 1 *\/$/;"	m	struct:memfile	access:public
mf_buffer	src/structs.h	/^    buf_T	*mf_buffer;		\/* bufer this memfile is for *\/$/;"	m	struct:memfile	access:public
mf_close	src/memfile.c	/^mf_close(mfp, del_file)$/;"	f
mf_close_file	src/memfile.c	/^mf_close_file(buf, getlines)$/;"	f
mf_dirty	src/structs.h	/^    int		mf_dirty;		\/* TRUE if there are dirty blocks *\/$/;"	m	struct:memfile	access:public
mf_do_open	src/memfile.c	/^mf_do_open(mfp, fname, flags)$/;"	f	file:
mf_do_open	src/memfile.c	/^static void mf_do_open __ARGS((memfile_T *, char_u *, int));$/;"	p	file:	signature:(memfile_T *, char_u *, int)
mf_dont_release	src/globals.h	/^EXTERN int	mf_dont_release INIT(= FALSE);	\/* don't release blocks *\/$/;"	v
mf_fd	src/structs.h	/^    int		mf_fd;			\/* file descriptor *\/$/;"	m	struct:memfile	access:public
mf_ffname	src/structs.h	/^    char_u	*mf_ffname;		\/* idem, full path *\/$/;"	m	struct:memfile	access:public
mf_find_hash	src/memfile.c	/^mf_find_hash(mfp, nr)$/;"	f	file:
mf_find_hash	src/memfile.c	/^static bhdr_T *mf_find_hash __ARGS((memfile_T *, blocknr_T));$/;"	p	file:	signature:(memfile_T *, blocknr_T)
mf_fname	src/structs.h	/^    char_u	*mf_fname;		\/* name of the file *\/$/;"	m	struct:memfile	access:public
mf_free	src/memfile.c	/^mf_free(mfp, hp)$/;"	f
mf_free_bhdr	src/memfile.c	/^mf_free_bhdr(hp)$/;"	f	file:
mf_free_bhdr	src/memfile.c	/^static void mf_free_bhdr __ARGS((bhdr_T *));$/;"	p	file:	signature:(bhdr_T *)
mf_free_first	src/structs.h	/^    bhdr_T	*mf_free_first;		\/* first block_hdr in free list *\/$/;"	m	struct:memfile	access:public
mf_fullname	src/memfile.c	/^mf_fullname(mfp)$/;"	f
mf_get	src/memfile.c	/^mf_get(mfp, nr, page_count)$/;"	f
mf_hash	src/structs.h	/^    bhdr_T	*mf_hash[MEMHASHSIZE];	\/* array of hash lists *\/$/;"	m	struct:memfile	access:public
mf_infile_count	src/structs.h	/^    blocknr_T	mf_infile_count;	\/* number of pages in the file *\/$/;"	m	struct:memfile	access:public
mf_ins_free	src/memfile.c	/^mf_ins_free(mfp, hp)$/;"	f	file:
mf_ins_free	src/memfile.c	/^static void mf_ins_free __ARGS((memfile_T *, bhdr_T *));$/;"	p	file:	signature:(memfile_T *, bhdr_T *)
mf_ins_hash	src/memfile.c	/^mf_ins_hash(mfp, hp)$/;"	f	file:
mf_ins_hash	src/memfile.c	/^static void mf_ins_hash __ARGS((memfile_T *, bhdr_T *));$/;"	p	file:	signature:(memfile_T *, bhdr_T *)
mf_ins_used	src/memfile.c	/^mf_ins_used(mfp, hp)$/;"	f	file:
mf_ins_used	src/memfile.c	/^static void mf_ins_used __ARGS((memfile_T *, bhdr_T *));$/;"	p	file:	signature:(memfile_T *, bhdr_T *)
mf_need_trans	src/memfile.c	/^mf_need_trans(mfp)$/;"	f
mf_neg_count	src/structs.h	/^    blocknr_T	mf_neg_count;		\/* number of negative blocks numbers *\/$/;"	m	struct:memfile	access:public
mf_new	src/memfile.c	/^mf_new(mfp, negative, page_count)$/;"	f
mf_new_page_size	src/memfile.c	/^mf_new_page_size(mfp, new_size)$/;"	f
mf_old_cm	src/structs.h	/^    int		mf_old_cm;$/;"	m	struct:memfile	access:public
mf_old_key	src/structs.h	/^    char_u	*mf_old_key;$/;"	m	struct:memfile	access:public
mf_old_seed	src/structs.h	/^    char_u	mf_old_seed[MF_SEED_LEN];$/;"	m	struct:memfile	access:public
mf_open	src/memfile.c	/^mf_open(fname, flags)$/;"	f
mf_open_file	src/memfile.c	/^mf_open_file(mfp, fname)$/;"	f
mf_page_size	src/structs.h	/^    unsigned	mf_page_size;		\/* number of bytes in a page *\/$/;"	m	struct:memfile	access:public
mf_put	src/memfile.c	/^mf_put(mfp, hp, dirty, infile)$/;"	f
mf_read	src/memfile.c	/^mf_read(mfp, hp)$/;"	f	file:
mf_read	src/memfile.c	/^static int  mf_read __ARGS((memfile_T *, bhdr_T *));$/;"	p	file:	signature:(memfile_T *, bhdr_T *)
mf_release	src/memfile.c	/^mf_release(mfp, page_count)$/;"	f	file:
mf_release	src/memfile.c	/^static bhdr_T *mf_release __ARGS((memfile_T *, int));$/;"	p	file:	signature:(memfile_T *, int)
mf_release_all	src/memfile.c	/^mf_release_all()$/;"	f
mf_rem_free	src/memfile.c	/^mf_rem_free(mfp)$/;"	f	file:
mf_rem_free	src/memfile.c	/^static bhdr_T *mf_rem_free __ARGS((memfile_T *));$/;"	p	file:	signature:(memfile_T *)
mf_rem_hash	src/memfile.c	/^mf_rem_hash(mfp, hp)$/;"	f	file:
mf_rem_hash	src/memfile.c	/^static void mf_rem_hash __ARGS((memfile_T *, bhdr_T *));$/;"	p	file:	signature:(memfile_T *, bhdr_T *)
mf_rem_used	src/memfile.c	/^mf_rem_used(mfp, hp)$/;"	f	file:
mf_rem_used	src/memfile.c	/^static void mf_rem_used __ARGS((memfile_T *, bhdr_T *));$/;"	p	file:	signature:(memfile_T *, bhdr_T *)
mf_seed	src/structs.h	/^    char_u	mf_seed[MF_SEED_LEN];	\/* seed for encryption *\/$/;"	m	struct:memfile	access:public
mf_set_dirty	src/memfile.c	/^mf_set_dirty(mfp)$/;"	f
mf_set_ffname	src/memfile.c	/^mf_set_ffname(mfp)$/;"	f
mf_sync	src/memfile.c	/^mf_sync(mfp, flags)$/;"	f
mf_trans	src/structs.h	/^    NR_TRANS	*mf_trans[MEMHASHSIZE];	\/* array of trans lists *\/$/;"	m	struct:memfile	access:public
mf_trans_add	src/memfile.c	/^mf_trans_add(mfp, hp)$/;"	f	file:
mf_trans_add	src/memfile.c	/^static int  mf_trans_add __ARGS((memfile_T *, bhdr_T *));$/;"	p	file:	signature:(memfile_T *, bhdr_T *)
mf_trans_del	src/memfile.c	/^mf_trans_del(mfp, old_nr)$/;"	f
mf_used_count	src/structs.h	/^    unsigned	mf_used_count;		\/* number of pages in used list *\/$/;"	m	struct:memfile	access:public
mf_used_count_max	src/structs.h	/^    unsigned	mf_used_count_max;	\/* maximum number of pages in memory *\/$/;"	m	struct:memfile	access:public
mf_used_first	src/structs.h	/^    bhdr_T	*mf_used_first;		\/* mru block_hdr in used list *\/$/;"	m	struct:memfile	access:public
mf_used_last	src/structs.h	/^    bhdr_T	*mf_used_last;		\/* lru block_hdr in used list *\/$/;"	m	struct:memfile	access:public
mf_write	src/memfile.c	/^mf_write(mfp, hp)$/;"	f	file:
mf_write	src/memfile.c	/^static int  mf_write __ARGS((memfile_T *, bhdr_T *));$/;"	p	file:	signature:(memfile_T *, bhdr_T *)
mf_write_block	src/memfile.c	/^mf_write_block(mfp, hp, offset, size)$/;"	f	file:
mf_write_block	src/memfile.c	/^static int  mf_write_block __ARGS((memfile_T *mfp, bhdr_T *hp, off_t offset, unsigned size));$/;"	p	file:	signature:(memfile_T *mfp, bhdr_T *hp, off_t offset, unsigned size)
mfd_save	src/testdir/test49.vim	/^	let mfd_save = &mfd$/;"	v
mfplain_mp_macros	runtime/syntax/mp.vim	/^  let mfplain_mp_macros = 0 " Set this to '1' to include these macro names$/;"	v
mi_capflags	src/spell.c	/^    int		mi_capflags;		\/* WF_ONECAP WF_ALLCAP WF_KEEPCAP *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_cend	src/spell.c	/^    char_u	*mi_cend;		\/* char after what was used for$/;"	m	struct:matchinf_S	file:	access:public
mi_compextra	src/spell.c	/^    int		mi_compextra;		\/* nr of COMPOUNDROOT words *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_compflags	src/spell.c	/^    char_u	mi_compflags[MAXWLEN];	\/* flags for compound words used *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_complen	src/spell.c	/^    int		mi_complen;		\/* nr of compound words used *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_compoff	src/spell.c	/^    int		mi_compoff;		\/* start of following word offset *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_cprefixlen	src/spell.c	/^    int		mi_cprefixlen;		\/* byte length of prefix in original$/;"	m	struct:matchinf_S	file:	access:public
mi_cprefixlen	src/spell.c	711;"	d	file:
mi_end	src/spell.c	/^    char_u	*mi_end;		\/* end of matching word so far *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_end2	src/spell.c	/^    char_u	*mi_end2;		\/* "mi_end" without following word *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_fend	src/spell.c	/^    char_u	*mi_fend;		\/* next char to be added to mi_fword *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_fword	src/spell.c	/^    char_u	mi_fword[MAXWLEN + 1];	\/* mi_word case-folded *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_fwordlen	src/spell.c	/^    int		mi_fwordlen;		\/* nr of valid bytes in mi_fword *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_lp	src/spell.c	/^    langp_T	*mi_lp;			\/* info for language and region *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_prefarridx	src/spell.c	/^    int		mi_prefarridx;		\/* index in sl_pidxs with list of$/;"	m	struct:matchinf_S	file:	access:public
mi_prefcnt	src/spell.c	/^    int		mi_prefcnt;		\/* number of entries at mi_prefarridx *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_prefixlen	src/spell.c	/^    int		mi_prefixlen;		\/* byte length of prefix *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_result	src/spell.c	/^    int		mi_result;		\/* result so far: SP_BAD, SP_OK, etc. *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_result2	src/spell.c	/^    int		mi_result2;		\/* "mi_resul" without following word *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_win	src/spell.c	/^    win_T	*mi_win;		\/* buffer being checked *\/$/;"	m	struct:matchinf_S	file:	access:public
mi_word	src/spell.c	/^    char_u	*mi_word;		\/* start of word being checked *\/$/;"	m	struct:matchinf_S	file:	access:public
min_rows	src/window.c	/^min_rows()$/;"	f
min_thumb	src/gui_at_sb.h	/^    Dimension	  min_thumb;	\/* minimum size for the thumb. *\/$/;"	m	struct:__anon31	access:public
mina	src/if_mzsch.c	/^    int		mina;	\/* arity information *\/$/;"	m	struct:__anon26	file:	access:public
minfo_T	src/structs.h	/^typedef struct m_info minfo_T;$/;"	t	typeref:struct:m_info
minlen	src/ex_docmd.c	/^    int		minlen;$/;"	m	struct:cmdmod	file:	access:public
minval	src/regexp.c	/^    long	minval;$/;"	m	struct:regstar_S	file:	access:public
mkdir_recurse	src/eval.c	/^mkdir_recurse(dir, prot)$/;"	f	file:
mkdir_recurse	src/eval.c	/^static int mkdir_recurse __ARGS((char_u *dir, int prot));$/;"	p	file:	signature:(char_u *dir, int prot)
mksession_nl	src/ex_docmd.c	/^static int mksession_nl = FALSE;    \/* use NL only in put_eol() *\/$/;"	v	file:
mkspell	src/spell.c	/^mkspell(fcount, fnames, ascii, overwrite, added_word)$/;"	f	file:
mkspell	src/spell.c	/^static void mkspell __ARGS((int fcount, char_u **fnames, int ascii, int overwrite, int added_word));$/;"	p	file:	signature:(int fcount, char_u **fnames, int ascii, int overwrite, int added_word)
ml_add_stack	src/memline.c	/^ml_add_stack(buf)$/;"	f	file:
ml_add_stack	src/memline.c	/^static int ml_add_stack __ARGS((buf_T *));$/;"	p	file:	signature:(buf_T *)
ml_append	src/memline.c	/^ml_append(lnum, line, len, newfile)$/;"	f
ml_append_buf	src/memline.c	/^ml_append_buf(buf, lnum, line, len, newfile)$/;"	f
ml_append_int	src/memline.c	/^ml_append_int(buf, lnum, line, len, newfile, mark)$/;"	f	file:
ml_append_int	src/memline.c	/^static int ml_append_int __ARGS((buf_T *, linenr_T, char_u *, colnr_T, int, int));$/;"	p	file:	signature:(buf_T *, linenr_T, char_u *, colnr_T, int, int)
ml_check_b0_id	src/memline.c	/^ml_check_b0_id(b0p)$/;"	f	file:
ml_check_b0_id	src/memline.c	/^static int ml_check_b0_id __ARGS((ZERO_BL *b0p));$/;"	p	file:	signature:(ZERO_BL *b0p)
ml_chunksize	src/structs.h	/^    chunksize_T *ml_chunksize;$/;"	m	struct:memline	access:public
ml_chunksize	src/structs.h	/^typedef struct ml_chunksize$/;"	s
ml_chunksize::mlcs_numlines	src/structs.h	/^    int		mlcs_numlines;$/;"	m	struct:ml_chunksize	access:public
ml_chunksize::mlcs_totalsize	src/structs.h	/^    long	mlcs_totalsize;$/;"	m	struct:ml_chunksize	access:public
ml_clearmarked	src/memline.c	/^ml_clearmarked()$/;"	f
ml_close	src/memline.c	/^ml_close(buf, del_file)$/;"	f
ml_close_all	src/memline.c	/^ml_close_all(del_file)$/;"	f
ml_close_notmod	src/memline.c	/^ml_close_notmod()$/;"	f
ml_crypt_prepare	src/memline.c	/^ml_crypt_prepare(mfp, offset, reading)$/;"	f	file:
ml_crypt_prepare	src/memline.c	/^static void ml_crypt_prepare __ARGS((memfile_T *mfp, off_t offset, int reading));$/;"	p	file:	signature:(memfile_T *mfp, off_t offset, int reading)
ml_decrypt_data	src/memline.c	/^ml_decrypt_data(mfp, data, offset, size)$/;"	f
ml_delete	src/memline.c	/^ml_delete(lnum, message)$/;"	f
ml_delete_int	src/memline.c	/^ml_delete_int(buf, lnum, message)$/;"	f	file:
ml_delete_int	src/memline.c	/^static int ml_delete_int __ARGS((buf_T *, linenr_T, int));$/;"	p	file:	signature:(buf_T *, linenr_T, int)
ml_encrypt_data	src/memline.c	/^ml_encrypt_data(mfp, data, offset, size)$/;"	f
ml_find_line	src/memline.c	/^ml_find_line(buf, lnum, action)$/;"	f	file:
ml_find_line	src/memline.c	/^static bhdr_T *ml_find_line __ARGS((buf_T *, linenr_T, int));$/;"	p	file:	signature:(buf_T *, linenr_T, int)
ml_find_line_or_offset	src/memline.c	/^ml_find_line_or_offset(buf, lnum, offp)$/;"	f
ml_firstmarked	src/memline.c	/^ml_firstmarked()$/;"	f
ml_flags	src/structs.h	/^    int		ml_flags;$/;"	m	struct:memline	access:public
ml_flush_line	src/memline.c	/^ml_flush_line(buf)$/;"	f	file:
ml_flush_line	src/memline.c	/^static void ml_flush_line __ARGS((buf_T *));$/;"	p	file:	signature:(buf_T *)
ml_get	src/memline.c	/^ml_get(lnum)$/;"	f
ml_get_buf	src/memline.c	/^ml_get_buf(buf, lnum, will_change)$/;"	f
ml_get_curline	src/memline.c	/^ml_get_curline()$/;"	f
ml_get_cursor	src/memline.c	/^ml_get_cursor()$/;"	f
ml_get_pos	src/memline.c	/^ml_get_pos(pos)$/;"	f
ml_line_alloced	src/memline.c	/^ml_line_alloced()$/;"	f
ml_line_count	src/structs.h	/^    linenr_T	ml_line_count;	\/* number of lines in the buffer *\/$/;"	m	struct:memline	access:public
ml_line_lnum	src/structs.h	/^    linenr_T	ml_line_lnum;	\/* line number of cached line, 0 if not valid *\/$/;"	m	struct:memline	access:public
ml_line_ptr	src/structs.h	/^    char_u	*ml_line_ptr;	\/* pointer to cached line *\/$/;"	m	struct:memline	access:public
ml_lineadd	src/memline.c	/^ml_lineadd(buf, count)$/;"	f	file:
ml_lineadd	src/memline.c	/^static void ml_lineadd __ARGS((buf_T *, int));$/;"	p	file:	signature:(buf_T *, int)
ml_locked	src/structs.h	/^    bhdr_T	*ml_locked;	\/* block used by last ml_get *\/$/;"	m	struct:memline	access:public
ml_locked_high	src/structs.h	/^    linenr_T	ml_locked_high;	\/* last line in ml_locked *\/$/;"	m	struct:memline	access:public
ml_locked_lineadd	src/structs.h	/^    int		ml_locked_lineadd;  \/* number of lines inserted in ml_locked *\/$/;"	m	struct:memline	access:public
ml_locked_low	src/structs.h	/^    linenr_T	ml_locked_low;	\/* first line in ml_locked *\/$/;"	m	struct:memline	access:public
ml_mfp	src/structs.h	/^    memfile_T	*ml_mfp;	\/* pointer to associated memfile *\/$/;"	m	struct:memline	access:public
ml_new_data	src/memline.c	/^ml_new_data(mfp, negative, page_count)$/;"	f	file:
ml_new_data	src/memline.c	/^static bhdr_T *ml_new_data __ARGS((memfile_T *, int, int));$/;"	p	file:	signature:(memfile_T *, int, int)
ml_new_ptr	src/memline.c	/^ml_new_ptr(mfp)$/;"	f	file:
ml_new_ptr	src/memline.c	/^static bhdr_T *ml_new_ptr __ARGS((memfile_T *));$/;"	p	file:	signature:(memfile_T *)
ml_numchunks	src/structs.h	/^    int		ml_numchunks;$/;"	m	struct:memline	access:public
ml_open	src/memline.c	/^ml_open(buf)$/;"	f
ml_open_file	src/memline.c	/^ml_open_file(buf)$/;"	f
ml_open_files	src/memline.c	/^ml_open_files()$/;"	f
ml_preserve	src/memline.c	/^ml_preserve(buf, message)$/;"	f
ml_recover	src/memline.c	/^ml_recover()$/;"	f
ml_replace	src/memline.c	/^ml_replace(lnum, line, copy)$/;"	f
ml_set_b0_crypt	src/memline.c	/^ml_set_b0_crypt(buf, b0p)$/;"	f	file:
ml_set_b0_crypt	src/memline.c	/^static void ml_set_b0_crypt __ARGS((buf_T *buf, ZERO_BL *b0p));$/;"	p	file:	signature:(buf_T *buf, ZERO_BL *b0p)
ml_set_crypt_key	src/memline.c	/^ml_set_crypt_key(buf, old_key, old_cm)$/;"	f
ml_setflags	src/memline.c	/^ml_setflags(buf)$/;"	f
ml_setmarked	src/memline.c	/^ml_setmarked(lnum)$/;"	f
ml_setname	src/memline.c	/^ml_setname(buf)$/;"	f
ml_stack	src/structs.h	/^    infoptr_T	*ml_stack;	\/* stack of pointer blocks (array of IPTRs) *\/$/;"	m	struct:memline	access:public
ml_stack_size	src/structs.h	/^    int		ml_stack_size;	\/* total number of entries in ml_stack *\/$/;"	m	struct:memline	access:public
ml_stack_top	src/structs.h	/^    int		ml_stack_top;	\/* current top if ml_stack *\/$/;"	m	struct:memline	access:public
ml_sync_all	src/memline.c	/^ml_sync_all(check_file, check_char)$/;"	f
ml_timestamp	src/memline.c	/^ml_timestamp(buf)$/;"	f
ml_upd_block0	src/memline.c	/^ml_upd_block0(buf, what)$/;"	f	file:
ml_upd_block0	src/memline.c	/^static void ml_upd_block0 __ARGS((buf_T *buf, upd_block0_T what));$/;"	p	file:	signature:(buf_T *buf, upd_block0_T what)
ml_updatechunk	src/memline.c	/^ml_updatechunk(buf, line, len, updtype)$/;"	f	file:
ml_updatechunk	src/memline.c	/^static void ml_updatechunk __ARGS((buf_T *buf, long line, long len, int updtype));$/;"	p	file:	signature:(buf_T *buf, long line, long len, int updtype)
ml_usedchunks	src/structs.h	/^    int		ml_usedchunks;$/;"	m	struct:memline	access:public
mlcs_numlines	src/structs.h	/^    int		mlcs_numlines;$/;"	m	struct:ml_chunksize	access:public
mlcs_totalsize	src/structs.h	/^    long	mlcs_totalsize;$/;"	m	struct:ml_chunksize	access:public
mnemonic	src/structs.h	/^    int		mnemonic;	    \/* mnemonic key (after '&') *\/$/;"	m	struct:VimMenu	access:public
mnemonic_event	src/gui_motif.c	/^mnemonic_event(Widget w, XtPointer call_data UNUSED, XKeyEvent *event)$/;"	f	file:	signature:(Widget w, XtPointer call_data UNUSED, XKeyEvent *event)
mod_flag	src/misc2.c	/^    short	mod_flag;	\/* Bit(s) for particular key modifier *\/$/;"	m	struct:modmasktable	file:	access:public
mod_mask	src/globals.h	/^EXTERN int	mod_mask INIT(= 0x0);		\/* current key modifiers *\/$/;"	v
mod_mask	src/misc2.c	/^    short	mod_mask;	\/* Bit-mask for particular key modifier *\/$/;"	m	struct:modmasktable	file:	access:public
mod_mask_table	src/misc2.c	/^} mod_mask_table[] =$/;"	v	typeref:struct:modmasktable	file:
mode	src/getchar.c	/^    int		mode;$/;"	m	struct:initmap	file:	access:public
mode	src/vim.h	/^    short_u	mode;		\/* Select by char, word, or line. *\/$/;"	m	struct:VimClipboard	access:public
mode_displayed	src/globals.h	/^EXTERN int	mode_displayed INIT(= FALSE);	\/* mode is being displayed *\/$/;"	v
mode_t	src/os_os2_cfg.h	64;"	d
modec	src/structs.h	/^    int		modec;$/;"	m	struct:__anon60	access:public
modes	src/structs.h	/^    int		modes;		    \/* Which modes is this menu visible for? *\/$/;"	m	struct:VimMenu	access:public
modified	src/netbeans.c	/^    unsigned int	 modified:1;$/;"	m	struct:nbbuf_struct	file:	access:public
modified_was_set	src/globals.h	/^EXTERN int	modified_was_set;		\/* did ":set modified" *\/$/;"	v
modifier_keys_table	src/misc2.c	/^static char_u modifier_keys_table[] =$/;"	v	file:
modifier_len	src/ex_docmd.c	/^modifier_len(cmd)$/;"	f
modifiers_gdk2mouse	src/gui_gtk_x11.c	/^modifiers_gdk2mouse(guint state)$/;"	f	file:	signature:(guint state)
modifiers_gdk2vim	src/gui_gtk_x11.c	/^modifiers_gdk2vim(guint state)$/;"	f	file:	signature:(guint state)
modify_fname	src/eval.c	/^modify_fname(src, usedlen, fnamep, bufp, fnamelen)$/;"	f
modlen	src/term.c	/^    int	    modlen;	    \/* length of part before ";*~". *\/$/;"	m	struct:termcode	file:	access:public
modmasktable	src/misc2.c	/^static struct modmasktable$/;"	s	file:
modmasktable::mod_flag	src/misc2.c	/^    short	mod_flag;	\/* Bit(s) for particular key modifier *\/$/;"	m	struct:modmasktable	file:	access:public
modmasktable::mod_mask	src/misc2.c	/^    short	mod_mask;	\/* Bit-mask for particular key modifier *\/$/;"	m	struct:modmasktable	file:	access:public
modmasktable::name	src/misc2.c	/^    char_u	name;		\/* Single letter name of modifier *\/$/;"	m	struct:modmasktable	file:	access:public
modname	src/fileio.c	/^modname(fname, ext, prepend_dot)$/;"	f
moreenv	src/misc2.c	/^moreenv()$/;"	f	file:
moreenv	src/misc2.c	/^static int  moreenv __ARGS((void));	\/* incr. size of env. *\/$/;"	p	file:	signature:(void)
mostly_ignore	src/os_beos.c	/^mostly_ignore(int sig)$/;"	f	file:	signature:(int sig)
motif_get_toolbar_colors	src/gui_motif.c	/^motif_get_toolbar_colors(bgp, fgp, bsp, tsp, hsp)$/;"	f
motif_tabline_timer_cb	src/gui_motif.c	/^motif_tabline_timer_cb (timed_out, interval_id)$/;"	f	file:
motion_force	src/structs.h	/^    int		motion_force;	\/* force motion type: 'v', 'V' or CTRL-V *\/$/;"	m	struct:oparg_S	access:public
motion_notify_event	src/gui_gtk_x11.c	/^motion_notify_event(GtkWidget *widget,$/;"	f	file:	signature:(GtkWidget *widget, GdkEventMotion *event, gpointer data UNUSED)
motion_repeat_offset	src/gui_gtk_x11.c	/^static int   motion_repeat_offset = FALSE;$/;"	v	file:
motion_repeat_timer	src/gui_gtk_x11.c	/^static guint motion_repeat_timer  = 0;$/;"	v	file:
motion_repeat_timer_cb	src/gui_gtk_x11.c	/^motion_repeat_timer_cb(gpointer data UNUSED)$/;"	f	file:	signature:(gpointer data UNUSED)
motion_repeat_timer_cb	src/gui_gtk_x11.c	/^static gint  motion_repeat_timer_cb(gpointer);$/;"	p	file:
motion_type	src/structs.h	/^    int		motion_type;	\/* type of the current cursor motion *\/$/;"	m	struct:oparg_S	access:public
mouseWheelHandlerUPP	src/gui_mac.c	/^static EventHandlerUPP mouseWheelHandlerUPP = NULL;$/;"	v	file:
mouse_active	src/os_msdos.c	/^static int mouse_active;		\/* mouse enabled *\/$/;"	v	file:
mouse_area	src/os_msdos.c	/^mouse_area(void)$/;"	f	file:	signature:(void)
mouse_avail	src/os_msdos.c	/^static int mouse_avail = FALSE;		\/* mouse present *\/$/;"	v	file:
mouse_choice	src/dosinst.c	/^int	mouse_choice = (int)mouse_mswin;$/;"	v
mouse_choices	src/dosinst.c	/^char	*(mouse_choices[]) =$/;"	v
mouse_click	src/os_msdos.c	/^static int mouse_click = -1;		\/* mouse status *\/$/;"	v	file:
mouse_click_count	src/os_msdos.c	/^static int mouse_click_count = 0;	\/* count for multi-clicks *\/$/;"	v	file:
mouse_click_time	src/os_msdos.c	/^static long mouse_click_time = 0;	\/* biostime() of last click *\/$/;"	v	file:
mouse_click_timer	src/gui_gtk_x11.c	/^static guint mouse_click_timer = 0;$/;"	v	file:
mouse_click_timer_cb	src/gui_gtk_x11.c	/^mouse_click_timer_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
mouse_click_x	src/os_msdos.c	/^static int mouse_click_x = 0;		\/* x of previous mouse click *\/$/;"	v	file:
mouse_click_y	src/os_msdos.c	/^static int mouse_click_y = 0;		\/* y of previous mouse click *\/$/;"	v	file:
mouse_col	src/globals.h	/^EXTERN int	mouse_col;$/;"	v
mouse_comp_pos	src/ui.c	/^mouse_comp_pos(win, rowp, colp, lnump)$/;"	f
mouse_dragging	src/globals.h	/^EXTERN int	mouse_dragging INIT(= 0);	\/* extending Visual area with$/;"	v
mouse_find_win	src/ui.c	/^mouse_find_win(rowp, colp)$/;"	f
mouse_has	src/term.c	/^mouse_has(c)$/;"	f
mouse_hidden	src/os_msdos.c	/^static int mouse_hidden;		\/* mouse not shown *\/$/;"	v	file:
mouse_last_click	src/os_msdos.c	/^static int mouse_last_click = -1;	\/* previous status at click *\/$/;"	v	file:
mouse_model_popup	src/term.c	/^mouse_model_popup()$/;"	f
mouse_mswin	src/dosinst.c	/^    mouse_mswin$/;"	e	enum:__anon119	file:
mouse_past_bottom	src/globals.h	/^EXTERN int	mouse_past_bottom INIT(= FALSE);\/* mouse below last line *\/$/;"	v
mouse_past_eol	src/globals.h	/^EXTERN int	mouse_past_eol INIT(= FALSE);	\/* mouse right of line *\/$/;"	v
mouse_row	src/globals.h	/^EXTERN int	mouse_row;$/;"	v
mouse_scroll_lines	src/gui_w32.c	/^static int mouse_scroll_lines = 0;$/;"	v	file:
mouse_table	src/misc2.c	/^} mouse_table[] =$/;"	v	typeref:struct:mousetable	file:
mouse_text	src/dosinst.c	/^char	*mouse_text = "- The mouse %s";$/;"	v
mouse_timed_out	src/gui_gtk_x11.c	/^static int mouse_timed_out = TRUE;$/;"	v	file:
mouse_topfill	src/os_msdos.c	/^static int mouse_topfill = 0;		\/* w_topfill at previous mouse click *\/$/;"	v	file:
mouse_topline	src/os_msdos.c	/^static linenr_T mouse_topline = 0;	\/* w_topline at previous mouse click *\/$/;"	v	file:
mouse_x	src/os_msdos.c	/^static int mouse_x = -1;		\/* mouse x coordinate *\/$/;"	v	file:
mouse_x_div	src/os_msdos.c	/^static int mouse_x_div = 8;		\/* column = x coord \/ mouse_x_div *\/$/;"	v	file:
mouse_xterm	src/dosinst.c	/^    mouse_xterm = 1,$/;"	e	enum:__anon119	file:
mouse_y	src/os_msdos.c	/^static int mouse_y = -1;		\/* mouse y coordinate *\/$/;"	v	file:
mouse_y_div	src/os_msdos.c	/^static int mouse_y_div = 8;		\/* line   = y coord \/ mouse_y_div *\/$/;"	v	file:
mousetable	src/misc2.c	/^static struct mousetable$/;"	s	file:
mousetable::button	src/misc2.c	/^    int	    button;		\/* Which mouse button is it? *\/$/;"	m	struct:mousetable	file:	access:public
mousetable::is_click	src/misc2.c	/^    int	    is_click;		\/* Is it a mouse button click event? *\/$/;"	m	struct:mousetable	file:	access:public
mousetable::is_drag	src/misc2.c	/^    int	    is_drag;		\/* Is it a mouse drag event? *\/$/;"	m	struct:mousetable	file:	access:public
mousetable::pseudo_code	src/misc2.c	/^    int	    pseudo_code;	\/* Code for pseudo mouse event *\/$/;"	m	struct:mousetable	file:	access:public
move_lines	src/fileio.c	/^move_lines(frombuf, tobuf)$/;"	f	file:
move_lines	src/fileio.c	/^static int move_lines __ARGS((buf_T *frombuf, buf_T *tobuf));$/;"	p	file:	signature:(buf_T *frombuf, buf_T *tobuf)
movechangelist	src/mark.c	/^movechangelist(count)$/;"	f
movemark	src/mark.c	/^movemark(count)$/;"	f
mparm_T	src/main.c	/^} mparm_T;$/;"	t	typeref:struct:__anon9	file:
mr_pattern	src/search.c	/^static char_u	    *mr_pattern = NULL;	\/* pattern used by search_regcomp() *\/$/;"	v	file:
mr_pattern_alloced	src/search.c	/^static int	    mr_pattern_alloced = FALSE; \/* mr_pattern was allocated *\/$/;"	v	file:
msg	src/gui_beval.h	/^    char_u		*msg;$/;"	m	struct:BalloonEvalStruct	access:public
msg	src/message.c	/^    char_u		*msg;$/;"	m	struct:msg_hist	file:	access:public
msg	src/message.c	/^msg(s)$/;"	f
msg	src/structs.h	/^    char_u		*msg;		\/* original message *\/$/;"	m	struct:msglist	access:public
msgCB	src/gui_beval.h	/^    void		(*msgCB)__ARGS((struct BalloonEvalStruct *, int));$/;"	m	struct:BalloonEvalStruct	access:public
msg_add_eol	src/fileio.c	/^msg_add_eol()$/;"	f	file:
msg_add_eol	src/fileio.c	/^static void msg_add_eol __ARGS((void));$/;"	p	file:	signature:(void)
msg_add_fileformat	src/fileio.c	/^msg_add_fileformat(eol_type)$/;"	f	file:
msg_add_fileformat	src/fileio.c	/^static int msg_add_fileformat __ARGS((int eol_type));$/;"	p	file:	signature:(int eol_type)
msg_add_fname	src/fileio.c	/^msg_add_fname(buf, fname)$/;"	f
msg_add_lines	src/fileio.c	/^msg_add_lines(insert_space, lnum, nchars)$/;"	f
msg_advance	src/message.c	/^msg_advance(col)$/;"	f
msg_attr	src/message.c	/^msg_attr(s, attr)$/;"	f
msg_attr_keep	src/message.c	/^msg_attr_keep(s, attr, keep)$/;"	f
msg_buf	src/globals.h	/^EXTERN char_u	msg_buf[MSG_BUF_LEN];	\/* small buffer for messages *\/$/;"	v
msg_check	src/message.c	/^msg_check()$/;"	f
msg_check_screen	src/message.c	/^msg_check_screen()$/;"	f	file:
msg_check_screen	src/message.c	/^static int  msg_check_screen __ARGS((void));$/;"	p	file:	signature:(void)
msg_clr_cmdline	src/message.c	/^msg_clr_cmdline()$/;"	f
msg_clr_eos	src/message.c	/^msg_clr_eos()$/;"	f
msg_clr_eos_force	src/message.c	/^msg_clr_eos_force()$/;"	f
msg_col	src/globals.h	/^EXTERN int	msg_col;$/;"	v
msg_compressing	src/spell.c	/^static char *msg_compressing = N_("Compressing word tree...");$/;"	v	file:
msg_didany	src/globals.h	/^EXTERN int	msg_didany INIT(= FALSE);   \/* msg_outstr() was used at all *\/$/;"	v
msg_didout	src/globals.h	/^EXTERN int	msg_didout INIT(= FALSE);   \/* msg_outstr() was used in line *\/$/;"	v
msg_end	src/message.c	/^msg_end()$/;"	f
msg_end_prompt	src/message.c	/^msg_end_prompt()$/;"	f
msg_hist	src/message.c	/^struct msg_hist$/;"	s	file:
msg_hist::attr	src/message.c	/^    int			attr;$/;"	m	struct:msg_hist	file:	access:public
msg_hist::msg	src/message.c	/^    char_u		*msg;$/;"	m	struct:msg_hist	file:	access:public
msg_hist::next	src/message.c	/^    struct msg_hist	*next;$/;"	m	struct:msg_hist	typeref:struct:msg_hist::msg_hist	file:	access:public
msg_hist_len	src/message.c	/^static int msg_hist_len = 0;$/;"	v	file:
msg_hist_off	src/globals.h	/^EXTERN int      msg_hist_off INIT(= FALSE); \/* don't add messages to history *\/$/;"	v
msg_home_replace	src/message.c	/^msg_home_replace(fname)$/;"	f
msg_home_replace_attr	src/message.c	/^msg_home_replace_attr(fname, attr)$/;"	f	file:
msg_home_replace_attr	src/message.c	/^static void msg_home_replace_attr __ARGS((char_u *fname, int attr));$/;"	p	file:	signature:(char_u *fname, int attr)
msg_home_replace_hl	src/message.c	/^msg_home_replace_hl(fname)$/;"	f
msg_list	src/globals.h	/^EXTERN struct msglist **msg_list INIT(= NULL);$/;"	v	typeref:struct:
msg_loclist	src/buffer.c	/^static char *msg_loclist = N_("[Location List]");$/;"	v	file:
msg_make	src/message.c	/^msg_make(arg)$/;"	f
msg_may_trunc	src/message.c	/^msg_may_trunc(force, s)$/;"	f
msg_moremsg	src/message.c	/^msg_moremsg(full)$/;"	f
msg_no_more	src/globals.h	/^EXTERN int	msg_no_more INIT(= FALSE);  \/* don't use more prompt, truncate$/;"	v
msg_nowait	src/globals.h	/^EXTERN int	msg_nowait INIT(= FALSE);   \/* don't wait for this msg *\/$/;"	v
msg_outnum	src/message.c	/^msg_outnum(n)$/;"	f
msg_outtrans	src/message.c	/^msg_outtrans(str)$/;"	f
msg_outtrans_attr	src/message.c	/^msg_outtrans_attr(str, attr)$/;"	f
msg_outtrans_len	src/message.c	/^msg_outtrans_len(str, len)$/;"	f
msg_outtrans_len_attr	src/message.c	/^msg_outtrans_len_attr(msgstr, len, attr)$/;"	f
msg_outtrans_one	src/message.c	/^msg_outtrans_one(p, attr)$/;"	f
msg_outtrans_special	src/message.c	/^msg_outtrans_special(strstart, from)$/;"	f
msg_pos_mode	src/screen.c	/^msg_pos_mode()$/;"	f	file:
msg_pos_mode	src/screen.c	/^static void msg_pos_mode __ARGS((void));$/;"	p	file:	signature:(void)
msg_prt_line	src/message.c	/^msg_prt_line(s, list)$/;"	f
msg_putchar	src/message.c	/^msg_putchar(c)$/;"	f
msg_putchar_attr	src/message.c	/^msg_putchar_attr(c, attr)$/;"	f
msg_puts	src/message.c	/^msg_puts(s)$/;"	f
msg_puts_attr	src/message.c	/^msg_puts_attr(s, attr)$/;"	f
msg_puts_attr_len	src/message.c	/^msg_puts_attr_len(str, maxlen, attr)$/;"	f	file:
msg_puts_attr_len	src/message.c	/^static void msg_puts_attr_len __ARGS((char_u *str, int maxlen, int attr));$/;"	p	file:	signature:(char_u *str, int maxlen, int attr)
msg_puts_display	src/message.c	/^msg_puts_display(str, maxlen, attr, recurse)$/;"	f	file:
msg_puts_display	src/message.c	/^static void msg_puts_display __ARGS((char_u *str, int maxlen, int attr, int recurse));$/;"	p	file:	signature:(char_u *str, int maxlen, int attr, int recurse)
msg_puts_long_attr	src/message.c	/^msg_puts_long_attr(longstr, attr)$/;"	f
msg_puts_long_len_attr	src/message.c	/^msg_puts_long_len_attr(longstr, len, attr)$/;"	f
msg_puts_printf	src/message.c	/^msg_puts_printf(str, maxlen)$/;"	f	file:
msg_puts_printf	src/message.c	/^static void msg_puts_printf __ARGS((char_u *str, int maxlen));$/;"	p	file:	signature:(char_u *str, int maxlen)
msg_puts_title	src/message.c	/^msg_puts_title(s)$/;"	f
msg_qflist	src/buffer.c	/^static char *msg_qflist = N_("[Quickfix List]");$/;"	v	file:
msg_row	src/globals.h	/^EXTERN int	msg_row;$/;"	v
msg_sb_start	src/message.c	/^msg_sb_start(mps)$/;"	f	file:
msg_sb_start	src/message.c	/^static msgchunk_T *msg_sb_start __ARGS((msgchunk_T *mps));$/;"	p	file:	signature:(msgchunk_T *mps)
msg_screen_putchar	src/message.c	/^msg_screen_putchar(c, attr)$/;"	f	file:
msg_screen_putchar	src/message.c	/^static void msg_screen_putchar __ARGS((int c, int attr));$/;"	p	file:	signature:(int c, int attr)
msg_scroll	src/globals.h	/^EXTERN int	msg_scroll INIT(= FALSE);   \/* msg_start() will scroll *\/$/;"	v
msg_scroll_up	src/message.c	/^msg_scroll_up()$/;"	f	file:
msg_scroll_up	src/message.c	/^static void msg_scroll_up __ARGS((void));$/;"	p	file:	signature:(void)
msg_scrolled	src/globals.h	/^EXTERN int	msg_scrolled;	\/* Number of screen lines that windows have$/;"	v
msg_scrolled_ign	src/globals.h	/^EXTERN int	msg_scrolled_ign INIT(= FALSE);$/;"	v
msg_show_console_dialog	src/message.c	/^msg_show_console_dialog(message, buttons, dfltbutton)$/;"	f	file:
msg_show_console_dialog	src/message.c	/^static char_u *msg_show_console_dialog __ARGS((char_u *message, char_u *buttons, int dfltbutton));$/;"	p	file:	signature:(char_u *message, char_u *buttons, int dfltbutton)
msg_silent	src/globals.h	/^EXTERN int	msg_silent INIT(= 0);	\/* don't print messages *\/$/;"	v
msg_sniff_disconnect	src/if_sniff.c	/^static char msg_sniff_disconnect[] = N_("Cannot connect to SNiFF+. Check environment (sniffemacs must be found in $PATH).\\n");$/;"	v	file:
msg_source	src/message.c	/^msg_source(attr)$/;"	f
msg_start	src/message.c	/^msg_start()$/;"	f
msg_starthere	src/message.c	/^msg_starthere()$/;"	f
msg_strtrunc	src/message.c	/^msg_strtrunc(s, force)$/;"	f
msg_trunc_attr	src/message.c	/^msg_trunc_attr(s, force, attr)$/;"	f
msg_use_printf	src/message.c	/^msg_use_printf()$/;"	f
msgchunk_S	src/message.c	/^struct msgchunk_S$/;"	s	file:
msgchunk_S::sb_attr	src/message.c	/^    int		sb_attr;	\/* text attributes *\/$/;"	m	struct:msgchunk_S	file:	access:public
msgchunk_S::sb_eol	src/message.c	/^    char	sb_eol;		\/* TRUE when line ends after this text *\/$/;"	m	struct:msgchunk_S	file:	access:public
msgchunk_S::sb_msg_col	src/message.c	/^    int		sb_msg_col;	\/* column in which text starts *\/$/;"	m	struct:msgchunk_S	file:	access:public
msgchunk_S::sb_next	src/message.c	/^    msgchunk_T	*sb_next;$/;"	m	struct:msgchunk_S	file:	access:public
msgchunk_S::sb_prev	src/message.c	/^    msgchunk_T	*sb_prev;$/;"	m	struct:msgchunk_S	file:	access:public
msgchunk_S::sb_text	src/message.c	/^    char_u	sb_text[1];	\/* text to be displayed, actually longer *\/$/;"	m	struct:msgchunk_S	file:	access:public
msgchunk_T	src/message.c	/^typedef struct msgchunk_S msgchunk_T;$/;"	t	typeref:struct:msgchunk_S	file:
msgfile	src/testdir/test49.vim	/^let msgfile = tempname()$/;"	v
msgfunc_T	src/if_lua.c	/^typedef void (*msgfunc_T)(char_u *);$/;"	t	file:
msglist	src/structs.h	/^struct msglist$/;"	s
msglist::msg	src/structs.h	/^    char_u		*msg;		\/* original message *\/$/;"	m	struct:msglist	access:public
msglist::next	src/structs.h	/^    struct msglist	*next;		\/* next of several messages in a row *\/$/;"	m	struct:msglist	typeref:struct:msglist::msglist	access:public
msglist::throw_msg	src/structs.h	/^    char_u		*throw_msg;	\/* msg to throw: usually original one *\/$/;"	m	struct:msglist	access:public
msgmore	src/misc1.c	/^msgmore(n)$/;"	f
msh_msgmousewheel	src/gui_w32.c	/^static UINT msh_msgmousewheel = 0;$/;"	v	file:
mshape	src/structs.h	/^    int		mshape;		\/* one of the MSHAPE defines *\/$/;"	m	struct:cursor_entry	access:public
mshape_idcs	src/gui_w48.c	/^static LPCSTR mshape_idcs[] =$/;"	v	file:
mshape_ids	src/gui_gtk_x11.c	/^static const int mshape_ids[] =$/;"	v	file:
mshape_ids	src/gui_photon.c	/^static int mshape_ids[] =$/;"	v	file:
mshape_ids	src/gui_x11.c	/^static int mshape_ids[] =$/;"	v	file:
mshape_names	src/misc2.c	/^static char * mshape_names[] =$/;"	v	file:
mt_names	src/tag.c	/^static char	*mt_names[MT_COUNT\/2] =$/;"	v	file:
mtime	src/gui_at_fs.c	/^    time_t	mtime;$/;"	m	struct:__anon114	file:	access:public
multiline_balloon_available	src/gui_w32.c	/^multiline_balloon_available(void)$/;"	f	signature:(void)
mupad_cmdextversion	runtime/syntax/mupad.vim	/^  let mupad_cmdextversion = 2$/;"	v
must_redraw	src/globals.h	/^EXTERN int	must_redraw INIT(= 0);	    \/* type of redraw necessary *\/$/;"	v
mv_DEtools	runtime/syntax/maple.vim	/^  let mv_DEtools    = 1$/;"	v
mv_Galois	runtime/syntax/maple.vim	/^  let mv_Galois     = 1$/;"	v
mv_GaussInt	runtime/syntax/maple.vim	/^  let mv_GaussInt   = 1$/;"	v
mv_LREtools	runtime/syntax/maple.vim	/^  let mv_LREtools   = 1$/;"	v
mv_combinat	runtime/syntax/maple.vim	/^  let mv_combinat   = 1$/;"	v
mv_combstruct	runtime/syntax/maple.vim	/^  let mv_combstruct = 1$/;"	v
mv_difforms	runtime/syntax/maple.vim	/^  let mv_difforms   = 1$/;"	v
mv_finance	runtime/syntax/maple.vim	/^  let mv_finance    = 1$/;"	v
mv_genfunc	runtime/syntax/maple.vim	/^  let mv_genfunc    = 1$/;"	v
mv_geometry	runtime/syntax/maple.vim	/^  let mv_geometry   = 1$/;"	v
mv_grobner	runtime/syntax/maple.vim	/^  let mv_grobner    = 1$/;"	v
mv_group	runtime/syntax/maple.vim	/^  let mv_group      = 1$/;"	v
mv_inttrans	runtime/syntax/maple.vim	/^  let mv_inttrans   = 1$/;"	v
mv_liesymm	runtime/syntax/maple.vim	/^  let mv_liesymm    = 1$/;"	v
mv_linalg	runtime/syntax/maple.vim	/^  let mv_linalg     = 1$/;"	v
mv_logic	runtime/syntax/maple.vim	/^  let mv_logic      = 1$/;"	v
mv_networks	runtime/syntax/maple.vim	/^  let mv_networks   = 1$/;"	v
mv_numapprox	runtime/syntax/maple.vim	/^  let mv_numapprox  = 1$/;"	v
mv_numtheory	runtime/syntax/maple.vim	/^  let mv_numtheory  = 1$/;"	v
mv_orthopoly	runtime/syntax/maple.vim	/^  let mv_orthopoly  = 1$/;"	v
mv_padic	runtime/syntax/maple.vim	/^  let mv_padic      = 1$/;"	v
mv_plots	runtime/syntax/maple.vim	/^  let mv_plots      = 1$/;"	v
mv_plottools	runtime/syntax/maple.vim	/^  let mv_plottools  = 1$/;"	v
mv_powseries	runtime/syntax/maple.vim	/^  let mv_powseries  = 1$/;"	v
mv_process	runtime/syntax/maple.vim	/^  let mv_process    = 1$/;"	v
mv_simplex	runtime/syntax/maple.vim	/^  let mv_simplex    = 1$/;"	v
mv_stats	runtime/syntax/maple.vim	/^  let mv_stats      = 1$/;"	v
mv_student	runtime/syntax/maple.vim	/^  let mv_student    = 1$/;"	v
mv_sumtools	runtime/syntax/maple.vim	/^  let mv_sumtools   = 1$/;"	v
mv_tensor	runtime/syntax/maple.vim	/^  let mv_tensor     = 1$/;"	v
mv_totorder	runtime/syntax/maple.vim	/^  let mv_totorder   = 1$/;"	v
myDataBrowserChangeAttributes	src/gui_mac.c	/^myDataBrowserChangeAttributes(ControlRef inDataBrowser,$/;"	f	file:	signature:(ControlRef inDataBrowser, OptionBits inAttributesToSet, OptionBits inAttributesToClear)
my_acl	src/os_win32.c	/^struct my_acl$/;"	s	file:
my_acl::pDacl	src/os_win32.c	/^    PACL		    pDacl;$/;"	m	struct:my_acl	file:	access:public
my_acl::pSacl	src/os_win32.c	/^    PACL		    pSacl;$/;"	m	struct:my_acl	file:	access:public
my_acl::pSecurityDescriptor	src/os_win32.c	/^    PSECURITY_DESCRIPTOR    pSecurityDescriptor;$/;"	m	struct:my_acl	file:	access:public
my_acl::pSidGroup	src/os_win32.c	/^    PSID		    pSidGroup;$/;"	m	struct:my_acl	file:	access:public
my_acl::pSidOwner	src/os_win32.c	/^    PSID		    pSidOwner;$/;"	m	struct:my_acl	file:	access:public
my_fullpath	src/dosinst.h	/^my_fullpath(char *buf, char *fname, int len)$/;"	f	signature:(char *buf, char *fname, int len)
my_fullpath	src/dosinst.h	517;"	d
my_iconv_open	src/mbyte.c	/^my_iconv_open(to, from)$/;"	f
my_script_func	src/testdir/test60.vim	/^function! s:my_script_func()$/;"	f
myclreol	src/os_msdos.c	/^myclreol(void)$/;"	f	file:	signature:(void)
myclreol	src/os_msdos.c	398;"	d	file:
myclrscr	src/os_msdos.c	/^myclrscr(void)$/;"	f	file:	signature:(void)
myclrscr	src/os_msdos.c	399;"	d	file:
mydelline	src/os_msdos.c	/^mydelline(void)$/;"	f	file:	signature:(void)
mydelline	src/os_msdos.c	401;"	d	file:
myexit	src/dosinst.h	/^myexit(int n)$/;"	f	signature:(int n)
myflush	src/os_msdos.c	/^myflush(void)$/;"	f	file:	signature:(void)
myfread	src/tee/tee.c	/^myfread(char *buf, int elsize \/*ignored*\/, int max, FILE *fp)$/;"	f	signature:(char *buf, int elsize , int max, FILE *fp)
mygetdigits	src/os_msdos.c	/^mygetdigits(pp)$/;"	f	file:
mygetdigits	src/os_msdos.c	397;"	d	file:
mygotoxy	src/os_msdos.c	/^mygotoxy(int x, int y)$/;"	f	file:	signature:(int x, int y)
mygotoxy	src/os_msdos.c	390;"	d	file:
myinsline	src/os_msdos.c	/^myinsline(void)$/;"	f	file:	signature:(void)
myinsline	src/os_msdos.c	400;"	d	file:
mynormvideo	src/os_msdos.c	/^mynormvideo(void)$/;"	f	file:	signature:(void)
mynormvideo	src/os_msdos.c	393;"	d	file:
myputch	src/os_msdos.c	/^myputch(int iChar)$/;"	f	file:	signature:(int iChar)
myputch	src/os_msdos.c	391;"	d	file:
myresetstkoflw	src/os_win32.c	/^myresetstkoflw(void)$/;"	f	signature:(void)
myscroll	src/os_msdos.c	/^myscroll(void)$/;"	f	file:	signature:(void)
myscroll	src/os_msdos.c	392;"	d	file:
mytextattr	src/os_msdos.c	/^mytextattr(int iAttribute)$/;"	f	file:	signature:(int iAttribute)
mytextattr	src/os_msdos.c	394;"	d	file:
mytextbackground	src/os_msdos.c	/^mytextbackground(int iBkgColor)$/;"	f	file:	signature:(int iBkgColor)
mytextbackground	src/os_msdos.c	396;"	d	file:
mytextcolor	src/os_msdos.c	/^mytextcolor(int iTextColor)$/;"	f	file:	signature:(int iTextColor)
mytextcolor	src/os_msdos.c	395;"	d	file:
mytextinit	src/os_msdos.c	/^mytextinit(struct text_info *pTextinfo)$/;"	f	file:	signature:(struct text_info *pTextinfo)
mytoupper	src/dosinst.h	/^mytoupper(int c)$/;"	f	signature:(int c)
mywindow	src/os_msdos.c	/^mywindow(int iLeft, int iTop, int iRight, int iBottom)$/;"	f	file:	signature:(int iLeft, int iTop, int iRight, int iBottom)
mz_buffer_type	src/if_mzsch.c	/^static Scheme_Type mz_buffer_type;$/;"	v	file:
mz_fix_cursor	src/if_mzsch.c	/^mz_fix_cursor(int lo, int hi, int extra)$/;"	f	file:	signature:(int lo, int hi, int extra)
mz_fix_cursor	src/if_mzsch.c	/^static void mz_fix_cursor(int lo, int hi, int extra);$/;"	p	file:	signature:(int lo, int hi, int extra)
mz_threads_allow	src/if_mzsch.c	/^static int mz_threads_allow = 0;$/;"	v	file:
mz_window_type	src/if_mzsch.c	/^static Scheme_Type mz_window_type;$/;"	v	file:
mzgc_imports	src/if_mzsch.c	/^static Thunk_Info mzgc_imports[] = {$/;"	v	file:
mzsch_imports	src/if_mzsch.c	/^static Thunk_Info mzsch_imports[] = {$/;"	v	file:
mzscheme_beep	src/if_mzsch.c	/^mzscheme_beep(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:	signature:(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)
mzscheme_beep	src/if_mzsch.c	/^static Scheme_Object *mzscheme_beep(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
mzscheme_buffer_free	src/if_mzsch.c	/^mzscheme_buffer_free(buf_T *buf)$/;"	f	signature:(buf_T *buf)
mzscheme_enabled	src/if_mzsch.c	/^mzscheme_enabled(int verbose)$/;"	f	signature:(int verbose)
mzscheme_end	src/if_mzsch.c	/^mzscheme_end(void)$/;"	f	signature:(void)
mzscheme_env_main	src/if_mzsch.c	/^mzscheme_env_main(Scheme_Env *env, int argc UNUSED, char **argv UNUSED)$/;"	f	file:	signature:(Scheme_Env *env, int argc UNUSED, char **argv UNUSED)
mzscheme_env_main	src/if_mzsch.c	/^static int mzscheme_env_main(Scheme_Env *env, int argc, char **argv);$/;"	p	file:	signature:(Scheme_Env *env, int argc, char **argv)
mzscheme_init	src/if_mzsch.c	/^mzscheme_init(void)$/;"	f	file:	signature:(void)
mzscheme_init	src/if_mzsch.c	/^static int mzscheme_init(void);$/;"	p	file:	signature:(void)
mzscheme_main	src/if_mzsch.c	/^mzscheme_main(void)$/;"	f	signature:(void)
mzscheme_open_buffer	src/if_mzsch.c	/^mzscheme_open_buffer(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
mzscheme_open_buffer	src/if_mzsch.c	/^static Scheme_Object *mzscheme_open_buffer(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
mzscheme_runtime_link_init	src/if_mzsch.c	/^mzscheme_runtime_link_init(char *sch_dll, char *gc_dll, int verbose)$/;"	f	file:	signature:(char *sch_dll, char *gc_dll, int verbose)
mzscheme_runtime_link_init	src/if_mzsch.c	/^static int mzscheme_runtime_link_init(char *sch_dll, char *gc_dll,$/;"	p	file:	signature:(char *sch_dll, char *gc_dll, int verbose)
mzscheme_to_vim	src/if_mzsch.c	/^mzscheme_to_vim(Scheme_Object *obj, typval_T *tv, int depth,$/;"	f	file:	signature:(Scheme_Object *obj, typval_T *tv, int depth, Scheme_Hash_Table *visited)
mzscheme_to_vim	src/if_mzsch.c	/^static int mzscheme_to_vim(Scheme_Object *obj, typval_T *tv, int depth,$/;"	p	file:	signature:(Scheme_Object *obj, typval_T *tv, int depth, Scheme_Hash_Table *visited)
mzscheme_window_free	src/if_mzsch.c	/^mzscheme_window_free(win_T *win)$/;"	f	signature:(win_T *win)
mzthreads_allowed	src/if_mzsch.c	/^mzthreads_allowed(void)$/;"	f	signature:(void)
mzvim_check_threads	src/if_mzsch.c	/^mzvim_check_threads(void)$/;"	f	signature:(void)
mzvim_reset_timer	src/if_mzsch.c	/^mzvim_reset_timer(void)$/;"	f	signature:(void)
n	runtime/syntax/xpm.vim	/^	 let n = 1		" n = color index$/;"	v
n	runtime/syntax/xpm.vim	/^	 let n = n + 1$/;"	v
n	runtime/syntax/xpm.vim	/^let n      = 0$/;"	v
n	runtime/syntax/xpm2.vim	/^	let n = 1			" n = color index$/;"	v
n	runtime/syntax/xpm2.vim	/^	let n = n + 1$/;"	v
n	runtime/syntax/xpm2.vim	/^  let n      = 0$/;"	v
nArgsW	src/os_win32.c	/^static int	nArgsW = 0;$/;"	v	file:
nChars	src/gui_at_fs.c	/^    int		nChars;$/;"	m	struct:__anon114	file:	access:public
nCopyAnsiToWideChar	src/gui_w32.c	/^nCopyAnsiToWideChar($/;"	f	file:	signature:( LPWORD lpWCStr, LPSTR lpAnsiIn)
nCopyAnsiToWideChar	src/gui_w32.c	/^static int nCopyAnsiToWideChar(LPWORD, LPSTR);$/;"	p	file:
nEntries	src/gui_at_fs.c	/^    int		nEntries;$/;"	m	struct:__anon114	file:	access:public
nIndexHigh	src/if_cscope.h	/^    DWORD	    nIndexHigh;	\/* st_ino has no meaning in the Windows *\/$/;"	m	struct:csi	access:public
nIndexLow	src/if_cscope.h	/^    DWORD	    nIndexLow;$/;"	m	struct:csi	access:public
nVolume	src/if_cscope.h	/^    DWORD	    nVolume;	\/* Volume serial number, instead of st_dev *\/$/;"	m	struct:csi	access:public
n_collated_copies	src/structs.h	/^    int		n_collated_copies;$/;"	m	struct:__anon60	access:public
n_commands	src/main.c	/^    int		n_commands;		     \/* no. of commands from + or -c *\/$/;"	m	struct:__anon9	file:	access:public
n_flag	src/os_riscos.h	150;"	d
n_opencmd	src/normal.c	/^n_opencmd(cap)$/;"	f	file:
n_opencmd	src/normal.c	/^static void	n_opencmd __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
n_pre_commands	src/main.c	/^    int		n_pre_commands;		     \/* no. of commands from --cmd *\/$/;"	m	struct:__anon9	file:	access:public
n_start_visual_mode	src/normal.c	/^n_start_visual_mode(c)$/;"	f	file:
n_start_visual_mode	src/normal.c	/^static void	n_start_visual_mode __ARGS((int c));$/;"	p	file:	signature:(int c)
n_swapchar	src/normal.c	/^n_swapchar(cap)$/;"	f	file:
n_swapchar	src/normal.c	/^static void	n_swapchar __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
n_uncollated_copies	src/structs.h	/^    int		n_uncollated_copies;$/;"	m	struct:__anon60	access:public
name	runtime/ftplugin/changelog.vim	/^  function! s:name(login)$/;"	f
name	src/dosinst.h	/^    char	*name;		\/* Vim exe name (without .exe) *\/$/;"	m	struct:__anon138	access:public
name	src/ex_docmd.c	/^    char	*name;$/;"	m	struct:cmdmod	file:	access:public
name	src/ex_docmd.c	/^    char    *name;$/;"	m	struct:__anon5	file:	access:public
name	src/fileio.c	/^    char	*name;	\/* event name *\/$/;"	m	struct:event_name	file:	access:public
name	src/gui_at_fs.c	/^    char	*name;$/;"	m	struct:__anon115	file:	access:public
name	src/gui_gtk_x11.c	/^    const char	    *name;$/;"	m	struct:__anon91	file:	access:public
name	src/gui_xmdlg.c	/^    Widget	name;$/;"	m	struct:_SharedFontSelData	file:	access:public
name	src/hardcopy.c	/^    char	*name;$/;"	m	struct:prt_mediasize_S	file:	access:public
name	src/hardcopy.c	/^    char_u  name[64];$/;"	m	struct:prt_ps_resource_S	file:	access:public
name	src/if_cscope.h	/^    char *  name;$/;"	m	struct:__anon86	access:public
name	src/if_lua.c	/^    const char *name;$/;"	m	struct:__anon127	file:	access:public
name	src/if_mzsch.c	/^    char	    *name;$/;"	m	struct:__anon27	file:	access:public
name	src/if_mzsch.c	/^    char	*name;$/;"	m	struct:__anon26	file:	access:public
name	src/if_mzsch.c	/^    char    *name;$/;"	m	struct:__anon28	file:	access:public
name	src/if_python.c	/^    char *name;$/;"	m	struct:__anon93	file:	access:public
name	src/if_python3.c	/^    char *name;$/;"	m	struct:__anon107	file:	access:public
name	src/if_ruby.c	/^    char *name;$/;"	m	struct:__anon137	file:	access:public
name	src/if_tcl.c	/^    char* name;$/;"	m	struct:__anon124	file:	access:public
name	src/mbyte.c	/^{   char *name;		int canon;}$/;"	m	struct:__anon135	file:	access:public
name	src/mbyte.c	/^{   char *name;		int prop;		int codepage;}$/;"	m	struct:__anon134	file:	access:public
name	src/misc2.c	/^    char_u	name;		\/* Single letter name of modifier *\/$/;"	m	struct:modmasktable	file:	access:public
name	src/misc2.c	/^    char_u  *name;	\/* Name of key *\/$/;"	m	struct:key_name_entry	file:	access:public
name	src/os_mswin.c	/^    char	*name;$/;"	m	struct:charset_pair	file:	access:public
name	src/os_mswin.c	/^    char_u *name;$/;"	m	struct:server_id	file:	access:public
name	src/os_unix.c	/^    char    *name;	\/* Signal name (not char_u!). *\/$/;"	m	struct:signalinfo	file:	access:public
name	src/search.c	/^    char_u	*name;		\/* Full name of file *\/$/;"	m	struct:SearchedFile	file:	access:public
name	src/structs.h	/^    char	*name;		\/* mode name (fixed) *\/$/;"	m	struct:cursor_entry	access:public
name	src/structs.h	/^    char_u	*name;		    \/* Name of menu, possibly translated *\/$/;"	m	struct:VimMenu	access:public
name	src/structs.h	/^    const char	*name;$/;"	m	struct:__anon58	access:public
name	src/syntax.c	/^    char	*name;$/;"	m	struct:name_list	file:	access:public
name	src/syntax.c	/^    char    *name;				\/* subcommand name *\/$/;"	m	struct:subcommand	file:	access:public
name	src/term.c	/^    char_u  name[2];	    \/* termcap name of entry *\/$/;"	m	struct:termcode	file:	access:public
name	src/workshop.c	/^    char	*name;			\/* name of the menu *\/$/;"	m	struct:__anon106	file:	access:public
nameStrip	src/workshop.c	/^nameStrip($/;"	f	file:	signature:( char *raw)
name_callback	src/gui_xmdlg.c	/^name_callback(Widget w,$/;"	f	file:	signature:(Widget w, SharedFontSelData *data, XmListCallbackStruct *call_data)
name_list	src/syntax.c	/^struct name_list$/;"	s	file:
name_list::flag	src/syntax.c	/^    int		flag;$/;"	m	struct:name_list	file:	access:public
name_list::name	src/syntax.c	/^    char	*name;$/;"	m	struct:name_list	file:	access:public
name_part	src/gui_xmdlg.c	/^name_part(char *font, char *buf)$/;"	f	file:	signature:(char *font, char *buf)
name_to_mod_mask	src/misc2.c	/^name_to_mod_mask(c)$/;"	f
namedfm	src/mark.c	/^static xfmark_T namedfm[NMARKS + EXTRA_MARKS];		\/* marks with file nr *\/$/;"	v	file:
namelowcpy	src/misc1.c	/^namelowcpy($/;"	f	file:	signature:( char_u *d, char_u *s)
names	src/gui_xmdlg.c	/^    char	**names;	\/* font name array of arrays *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
nb_bufp2nbbuf_fire	src/netbeans.c	/^nb_bufp2nbbuf_fire(buf_T *bufp, int *bufnop)$/;"	f	file:	signature:(buf_T *bufp, int *bufnop)
nb_debug	src/nbdebug.c	/^FILE		*nb_debug = NULL;$/;"	v
nb_dlevel	src/nbdebug.c	/^u_int		 nb_dlevel = 0;		\/* nb_debug verbosity level *\/$/;"	v
nb_do_cmd	src/netbeans.c	/^nb_do_cmd($/;"	f	file:	signature:( int bufno, char_u *cmd, int func, int cmdno, char_u *args)
nb_do_cmd	src/netbeans.c	/^static int  nb_do_cmd __ARGS((int, char_u *, int, int, char_u *));$/;"	p	file:	signature:(int, char_u *, int, int, char_u *)
nb_free	src/netbeans.c	/^nb_free()$/;"	f	file:
nb_free	src/netbeans.c	/^static void nb_free __ARGS((void));$/;"	p	file:	signature:(void)
nb_get_buf	src/netbeans.c	/^nb_get_buf(int bufno)$/;"	f	file:	signature:(int bufno)
nb_getbufno	src/netbeans.c	/^nb_getbufno(buf_T *bufp)$/;"	f	file:	signature:(buf_T *bufp)
nb_init_graphics	src/netbeans.c	/^nb_init_graphics(void)$/;"	f	file:	signature:(void)
nb_init_graphics	src/netbeans.c	/^static void nb_init_graphics __ARGS((void));$/;"	p	file:	signature:(void)
nb_joinlines	src/netbeans.c	/^nb_joinlines(linenr_T first, linenr_T other)$/;"	f	file:	signature:(linenr_T first, linenr_T other)
nb_parse_cmd	src/netbeans.c	/^nb_parse_cmd(char_u *cmd)$/;"	f	file:	signature:(char_u *cmd)
nb_parse_cmd	src/netbeans.c	/^static void nb_parse_cmd __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
nb_partialremove	src/netbeans.c	/^nb_partialremove(linenr_T lnum, colnr_T first, colnr_T last)$/;"	f	file:	signature:(linenr_T lnum, colnr_T first, colnr_T last)
nb_quote	src/netbeans.c	/^nb_quote(char_u *txt)$/;"	f	file:	signature:(char_u *txt)
nb_reply_nil	src/netbeans.c	/^nb_reply_nil(int cmdno)$/;"	f	file:	signature:(int cmdno)
nb_reply_nr	src/netbeans.c	/^nb_reply_nr(int cmdno, long result)$/;"	f	file:	signature:(int cmdno, long result)
nb_reply_text	src/netbeans.c	/^nb_reply_text(int cmdno, char_u *result)$/;"	f	file:	signature:(int cmdno, char_u *result)
nb_send	src/netbeans.c	/^nb_send(char *buf, char *fun)$/;"	f	file:	signature:(char *buf, char *fun)
nb_send	src/netbeans.c	/^static void nb_send __ARGS((char *buf, char *fun));$/;"	p	file:	signature:(char *buf, char *fun)
nb_set_curbuf	src/netbeans.c	/^nb_set_curbuf(buf_T *buf)$/;"	f	file:	signature:(buf_T *buf)
nb_set_curbuf	src/netbeans.c	/^static void nb_set_curbuf __ARGS((buf_T *buf));$/;"	p	file:	signature:(buf_T *buf)
nb_unquote	src/netbeans.c	/^nb_unquote(char_u *p, char_u **endp)$/;"	f	file:	signature:(char_u *p, char_u **endp)
nbbuf_T	src/netbeans.c	/^typedef struct nbbuf_struct nbbuf_T;$/;"	t	typeref:struct:nbbuf_struct	file:
nbbuf_number	src/netbeans.c	/^    int			 nbbuf_number;$/;"	m	struct:nbbuf_struct	file:	access:public
nbbuf_struct	src/netbeans.c	/^struct nbbuf_struct$/;"	s	file:
nbbuf_struct::bufp	src/netbeans.c	/^    buf_T		*bufp;$/;"	m	struct:nbbuf_struct	file:	access:public
nbbuf_struct::displayname	src/netbeans.c	/^    char		*displayname;$/;"	m	struct:nbbuf_struct	file:	access:public
nbbuf_struct::fireChanges	src/netbeans.c	/^    unsigned int	 fireChanges:1;$/;"	m	struct:nbbuf_struct	file:	access:public
nbbuf_struct::initDone	src/netbeans.c	/^    unsigned int	 initDone:1;$/;"	m	struct:nbbuf_struct	file:	access:public
nbbuf_struct::insertDone	src/netbeans.c	/^    unsigned int	 insertDone:1;$/;"	m	struct:nbbuf_struct	file:	access:public
nbbuf_struct::modified	src/netbeans.c	/^    unsigned int	 modified:1;$/;"	m	struct:nbbuf_struct	file:	access:public
nbbuf_struct::nbbuf_number	src/netbeans.c	/^    int			 nbbuf_number;$/;"	m	struct:nbbuf_struct	file:	access:public
nbbuf_struct::signmap	src/netbeans.c	/^    int			*signmap;$/;"	m	struct:nbbuf_struct	file:	access:public
nbbuf_struct::signmaplen	src/netbeans.c	/^    short_u		 signmaplen;$/;"	m	struct:nbbuf_struct	file:	access:public
nbbuf_struct::signmapused	src/netbeans.c	/^    short_u		 signmapused;$/;"	m	struct:nbbuf_struct	file:	access:public
nbdb	src/nbdebug.c	/^void		 nbdb(char *, ...);$/;"	p	file:	signature:(char *, ...)
nbdbg	src/nbdebug.c	/^nbdbg($/;"	f	signature:( char *fmt, ...)
nbdbg	src/nbdebug.h	/^nbdbg($/;"	f	signature:( char *fmt, ...)
nbdbg	src/nbdebug.h	/^void		 nbdbg(char *, ...);$/;"	p	signature:(char *, ...)
nbdebug	src/nbdebug.h	26;"	d
nbdebug	src/vim.h	2107;"	d
nbdebug_log_init	src/nbdebug.c	/^nbdebug_log_init($/;"	f	signature:( char *log_var, char *level_var)
nbdebug_log_init	src/nbdebug.h	/^void nbdebug_log_init __ARGS((char *log_var, char *level_var));$/;"	p	signature:(char *log_var, char *level_var)
nbdebug_wait	src/nbdebug.c	/^void nbdebug_wait($/;"	f	signature:( u_int wait_flags, char *wait_var, u_int wait_secs)
nbdebug_wait	src/nbdebug.h	/^void nbdebug_wait __ARGS((u_int wait_flags, char *wait_var, u_int wait_secs));$/;"	p	signature:(u_int wait_flags, char *wait_var, u_int wait_secs)
nbsock	src/netbeans.c	/^static NBSOCK nbsock = -1;		\/* socket fd for Netbeans connection *\/$/;"	v	file:
nchar	src/structs.h	/^    int		nchar;		\/* next command character (optional) *\/$/;"	m	struct:cmdarg_S	access:public
ncharC1	src/structs.h	/^    int		ncharC1;	\/* first composing character (optional) *\/$/;"	m	struct:cmdarg_S	access:public
ncharC2	src/structs.h	/^    int		ncharC2;	\/* second composing character (optional) *\/$/;"	m	struct:cmdarg_S	access:public
need_check_timestamps	src/globals.h	/^EXTERN int	need_check_timestamps INIT(= FALSE); \/* need to check file$/;"	v
need_clear_subexpr	src/regexp.c	/^static int	need_clear_subexpr;	\/* subexpressions still need to be$/;"	v	file:
need_clear_zsubexpr	src/regexp.c	/^static int	need_clear_zsubexpr = FALSE;	\/* extmatch subexpressions$/;"	v	file:
need_clr_eos	src/globals.h	/^EXTERN int	need_clr_eos INIT(= FALSE); \/* need to clear text before$/;"	v
need_conversion	src/fileio.c	/^need_conversion(fenc)$/;"	f	file:
need_conversion	src/fileio.c	/^static int need_conversion __ARGS((char_u *fenc));$/;"	p	file:	signature:(char_u *fenc)
need_cursor_line_redraw	src/globals.h	/^EXTERN int		need_cursor_line_redraw INIT(= FALSE);$/;"	v
need_fileinfo	src/globals.h	/^EXTERN int	need_fileinfo INIT(= FALSE);\/* do fileinfo() after redraw *\/$/;"	v
need_gather	src/term.c	/^static int	need_gather = FALSE;	    \/* need to fill termleader[] *\/$/;"	v	file:
need_highlight_changed	src/globals.h	/^EXTERN int	need_highlight_changed INIT(= TRUE);$/;"	v
need_key_msg	src/globals.h	/^EXTERN char need_key_msg[] INIT(= N_("Need encryption key for \\"%s\\""));$/;"	v
need_maketitle	src/globals.h	/^EXTERN int	need_maketitle INIT(= TRUE); \/* call maketitle() soon *\/$/;"	v
need_mouse_correct	src/globals.h	/^EXTERN int	need_mouse_correct INIT(= FALSE);$/;"	v
need_rb_str_new_cstr	src/if_ruby.c	175;"	d	file:
need_rethrow	src/ex_docmd.c	/^    int		need_rethrow;$/;"	m	struct:dbg_stuff	file:	access:public
need_rethrow	src/globals.h	/^EXTERN int need_rethrow INIT(= FALSE);$/;"	v
need_start_insertmode	src/globals.h	/^EXTERN int	need_start_insertmode INIT(= FALSE);$/;"	v
need_uninstall_entry	src/dosinst.c	/^static int	need_uninstall_entry = 0;$/;"	v	file:
need_vimrun_warning	src/os_win32.c	/^static int need_vimrun_warning = FALSE;$/;"	v	file:
need_wait_return	src/globals.h	/^EXTERN int	need_wait_return INIT(= 0); \/* need to wait for return later *\/$/;"	v
needs_charset	src/hardcopy.c	/^    int		needs_charset;$/;"	m	struct:prt_ps_encoding_S	file:	access:public
needupdate	src/netbeans.c	/^static int needupdate = 0;$/;"	v	file:
nested	src/fileio.c	/^    char	    nested;		\/* If autocommands nest here *\/$/;"	m	struct:AutoCmd	file:	access:public
nested_wimp	src/gui_riscos.c	/^int nested_wimp = FALSE;	\/* Bool - can we use the new wimp? *\/$/;"	v
netbeansArg	src/globals.h	/^EXTERN char *netbeansArg INIT(= NULL);	\/* the -nb[:host:port:passwd] arg *\/$/;"	v
netbeansFireChanges	src/globals.h	/^EXTERN int netbeansFireChanges INIT(= 1); \/* send buffer changes if != 0 *\/$/;"	v
netbeansForcedQuit	src/globals.h	/^EXTERN int netbeansForcedQuit INIT(= 0);\/* don't write modified files *\/$/;"	v
netbeansReadFile	src/globals.h	/^EXTERN int netbeansReadFile INIT(= 1);	\/* OK to read from disk if != 0 *\/$/;"	v
netbeansSuppressNoLines	src/globals.h	/^EXTERN int netbeansSuppressNoLines INIT(= 0); \/* skip "No lines in buffer" *\/$/;"	v
netbeans_active	src/netbeans.c	/^netbeans_active(void)$/;"	f	signature:(void)
netbeans_beval_cb	src/netbeans.c	/^netbeans_beval_cb($/;"	f	signature:( BalloonEval *beval, int state UNUSED)
netbeans_button_release	src/netbeans.c	/^netbeans_button_release(int button)$/;"	f	signature:(int button)
netbeans_close	src/netbeans.c	/^netbeans_close(void)$/;"	f	file:	signature:(void)
netbeans_connect	src/netbeans.c	/^netbeans_connect(char *params, int doabort)$/;"	f	file:	signature:(char *params, int doabort)
netbeans_connect	src/netbeans.c	/^static int netbeans_connect __ARGS((char *, int));$/;"	p	file:	signature:(char *, int)
netbeans_deleted_all_lines	src/netbeans.c	/^netbeans_deleted_all_lines(buf_T *bufp)$/;"	f	signature:(buf_T *bufp)
netbeans_draw_multisign_indicator	src/gui_w32.c	/^netbeans_draw_multisign_indicator(int row)$/;"	f	signature:(int row)
netbeans_draw_multisign_indicator	src/netbeans.c	/^netbeans_draw_multisign_indicator(int row)$/;"	f	signature:(int row)
netbeans_end	src/netbeans.c	/^netbeans_end(void)$/;"	f	signature:(void)
netbeans_file_activated	src/netbeans.c	/^netbeans_file_activated(buf_T *bufp)$/;"	f	signature:(buf_T *bufp)
netbeans_file_killed	src/netbeans.c	/^netbeans_file_killed(buf_T *bufp)$/;"	f	signature:(buf_T *bufp)
netbeans_file_opened	src/netbeans.c	/^netbeans_file_opened(buf_T *bufp)$/;"	f	signature:(buf_T *bufp)
netbeans_filedesc	src/netbeans.c	/^netbeans_filedesc(void)$/;"	f	signature:(void)
netbeans_frame_moved	src/netbeans.c	/^netbeans_frame_moved(int new_x, int new_y)$/;"	f	signature:(int new_x, int new_y)
netbeans_gui_register	src/netbeans.c	/^netbeans_gui_register(void)$/;"	f	signature:(void)
netbeans_gutter_click	src/netbeans.c	/^netbeans_gutter_click(linenr_T lnum)$/;"	f	signature:(linenr_T lnum)
netbeans_init_winsock	src/gui_w32.c	/^netbeans_init_winsock()$/;"	f
netbeans_inserted	src/netbeans.c	/^netbeans_inserted($/;"	f	signature:( buf_T *bufp, linenr_T linenr, colnr_T col, char_u *txt, int newlen)
netbeans_is_guarded	src/netbeans.c	/^netbeans_is_guarded(linenr_T top, linenr_T bot)$/;"	f	signature:(linenr_T top, linenr_T bot)
netbeans_keycommand	src/netbeans.c	/^netbeans_keycommand(int key)$/;"	f	signature:(int key)
netbeans_keyname	src/netbeans.c	/^netbeans_keyname(int key, char *buf)$/;"	f	file:	signature:(int key, char *buf)
netbeans_keystring	src/netbeans.c	/^netbeans_keystring(char_u *keyName)$/;"	f	file:	signature:(char_u *keyName)
netbeans_keystring	src/netbeans.c	/^static int netbeans_keystring __ARGS((char_u *keystr));$/;"	p	file:	signature:(char_u *keystr)
netbeans_open	src/netbeans.c	/^netbeans_open(char *params, int doabort)$/;"	f	signature:(char *params, int doabort)
netbeans_parse_messages	src/netbeans.c	/^netbeans_parse_messages(void)$/;"	f	signature:(void)
netbeans_read	src/netbeans.c	/^netbeans_read()$/;"	f
netbeans_removed	src/netbeans.c	/^netbeans_removed($/;"	f	signature:( buf_T *bufp, linenr_T linenr, colnr_T col, long len)
netbeans_save_buffer	src/netbeans.c	/^netbeans_save_buffer(buf_T *bufp)$/;"	f	signature:(buf_T *bufp)
netbeans_send_disconnect	src/netbeans.c	/^netbeans_send_disconnect()$/;"	f
netbeans_unmodified	src/netbeans.c	/^netbeans_unmodified(buf_T *bufp UNUSED)$/;"	f	signature:(buf_T *bufp UNUSED)
netrw#ErrorMsg	runtime/autoload/netrw.vim	/^fun! netrw#ErrorMsg(level,msg,errnum)$/;"	f
netrw#Explore	runtime/autoload/netrw.vim	/^fun! netrw#Explore(indx,dosplit,style,...)$/;"	f
netrw#LocalBrowseCheck	runtime/autoload/netrw.vim	/^fun! netrw#LocalBrowseCheck(dirname)$/;"	f
netrw#NetRead	runtime/autoload/netrw.vim	/^fun! netrw#NetRead(mode,...)$/;"	f
netrw#NetSource	runtime/autoload/netrw.vim	/^fun! netrw#NetSource(...)$/;"	f
netrw#NetWrite	runtime/autoload/netrw.vim	/^fun! netrw#NetWrite(...) range$/;"	f
netrw#NetrwBrowseX	runtime/autoload/netrw.vim	/^fun! netrw#NetrwBrowseX(fname,remote)$/;"	f
netrw#NetrwClean	runtime/autoload/netrw.vim	/^fun! netrw#NetrwClean(sys)$/;"	f
netrw#NetrwObtain	runtime/autoload/netrw.vim	/^fun! netrw#NetrwObtain(islocal,fname,...)$/;"	f
netrw#NetrwRestorePosn	runtime/autoload/netrw.vim	/^fun! netrw#NetrwRestorePosn(...)$/;"	f
netrw#NetrwSavePosn	runtime/autoload/netrw.vim	/^fun! netrw#NetrwSavePosn()$/;"	f
netrw#Nread	runtime/autoload/netrw.vim	/^fun! netrw#Nread(mode,fname)$/;"	f
netrw#RFC2396	runtime/autoload/netrw.vim	/^fun! netrw#RFC2396(fname)$/;"	f
netrw#WinPath	runtime/autoload/netrw.vim	/^fun! netrw#WinPath(path)$/;"	f
netrwFileHandlers#Invoke	runtime/autoload/netrwFileHandlers.vim	/^fun! netrwFileHandlers#Invoke(exten,fname)$/;"	f
netrwSettings#NetrwSettings	runtime/autoload/netrwSettings.vim	/^fun! netrwSettings#NetrwSettings()$/;"	f
new	src/VisVim/Commands.cpp	8;"	d	file:
new	src/VisVim/DSAddIn.cpp	7;"	d	file:
new	src/VisVim/OleAut.cpp	41;"	d	file:
new	src/VisVim/VisVim.cpp	11;"	d	file:
newFoldLevel	src/fold.c	/^newFoldLevel()$/;"	f
newFoldLevelWin	src/fold.c	/^newFoldLevelWin(wp)$/;"	f	file:
newFoldLevelWin	src/fold.c	/^static void newFoldLevelWin __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
new_changelog_entry	runtime/ftplugin/changelog.vim	/^  function! s:new_changelog_entry()$/;"	f
new_cmdpos	src/ex_getln.c	/^static int	new_cmdpos;	\/* position set by set_cmdline_pos() *\/$/;"	v	file:
new_curbuf	src/structs.h	/^    buf_T	*new_curbuf;	\/* new curbuf *\/$/;"	m	struct:__anon57	access:public
new_curwin	src/structs.h	/^    win_T	*new_curwin;	\/* new curwin *\/$/;"	m	struct:__anon57	access:public
new_fnames_from_AEDesc	src/gui_mac.c	/^new_fnames_from_AEDesc(AEDesc *theList, long *numFiles, OSErr *error)$/;"	f	signature:(AEDesc *theList, long *numFiles, OSErr *error)
new_frame	src/window.c	/^new_frame(win_T *wp)$/;"	f	file:	signature:(win_T *wp)
new_frame	src/window.c	/^static void new_frame __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
new_insert_skip	src/edit.c	/^static int	new_insert_skip;  \/* nr of chars in front of current insert *\/$/;"	v	file:
new_last_cmdline	src/globals.h	/^EXTERN char_u	*new_last_cmdline INIT(= NULL);	\/* new value for last_cmdline *\/$/;"	v
new_pixel_height	src/globals.h	/^EXTERN int	new_pixel_height INIT(= 0);$/;"	v
new_pixel_width	src/globals.h	/^EXTERN int	new_pixel_width INIT(= 0);$/;"	v
new_script_vars	src/eval.c	/^new_script_vars(id)$/;"	f
newenv	src/misc2.c	/^newenv()$/;"	f	file:
newenv	src/misc2.c	/^static int  newenv __ARGS((void));	\/* copy env. from stack to heap *\/$/;"	p	file:	signature:(void)
newline_on_exit	src/globals.h	/^EXTERN int	newline_on_exit INIT(= FALSE);	\/* did msg in altern. screen *\/$/;"	v
next	src/fileio.c	/^    struct AutoCmd  *next;		\/* Next AutoCmd in list *\/$/;"	m	struct:AutoCmd	typeref:struct:AutoCmd::AutoCmd	file:	access:public
next	src/fileio.c	/^    struct AutoPat  *next;		\/* next AutoPat in AutoPat list *\/$/;"	m	struct:AutoPat	typeref:struct:AutoPat::AutoPat	file:	access:public
next	src/fileio.c	/^    struct AutoPatCmd   *next;	\/* chain of active apc-s for auto-invalidation*\/$/;"	m	struct:AutoPatCmd	typeref:struct:AutoPatCmd::AutoPatCmd	file:	access:public
next	src/if_sniff.c	/^    struct sniffBufNode *next;$/;"	m	struct:sniffBufNode	typeref:struct:sniffBufNode::sniffBufNode	file:	access:public
next	src/if_tcl.c	/^    struct ref	*next;$/;"	m	struct:ref	typeref:struct:ref::ref	file:	access:public
next	src/message.c	/^    struct msg_hist	*next;$/;"	m	struct:msg_hist	typeref:struct:msg_hist::msg_hist	file:	access:public
next	src/netbeans.c	/^    struct cmdqueue *next;$/;"	m	struct:cmdqueue	typeref:struct:cmdqueue::cmdqueue	file:	access:public
next	src/netbeans.c	/^    struct keyqueue *next;$/;"	m	struct:keyqueue	typeref:struct:keyqueue::keyqueue	file:	access:public
next	src/quickfix.c	/^    efm_T	    *next;	\/* pointer to next (NULL if last) *\/$/;"	m	struct:efm_S	file:	access:public
next	src/quickfix.c	/^    struct dir_stack_T	*next;$/;"	m	struct:dir_stack_T	typeref:struct:dir_stack_T::dir_stack_T	file:	access:public
next	src/spell.c	/^	wordnode_T *next;	\/* next node with same hash key *\/$/;"	m	union:wordnode_S::__anon16	file:	access:public
next	src/structs.h	/^    eslist_T	*next;			\/* next element on the list *\/$/;"	m	struct:eslist_elem	access:public
next	src/structs.h	/^    matchitem_T	*next;$/;"	m	struct:matchitem	access:public
next	src/structs.h	/^    signlist_T	*next;		\/* next signlist entry *\/$/;"	m	struct:signlist	access:public
next	src/structs.h	/^    struct msglist	*next;		\/* next of several messages in a row *\/$/;"	m	struct:msglist	typeref:struct:msglist::msglist	access:public
next	src/structs.h	/^    vimmenu_T	*next;		    \/* Next item in menu *\/$/;"	m	struct:VimMenu	access:public
nextPtr	src/if_xcmdsrv.c	/^    struct PendingCommand *nextPtr;$/;"	m	struct:PendingCommand	typeref:struct:PendingCommand::PendingCommand	file:	access:public
next_cmd	src/if_sniff.c	/^    struct sn_cmd_list* next_cmd;$/;"	m	struct:sn_cmd_list	typeref:struct:sn_cmd_list::sn_cmd_list	file:	access:public
next_fenc	src/fileio.c	/^next_fenc(pp)$/;"	f	file:
next_fenc	src/fileio.c	/^static char_u *next_fenc __ARGS((char_u **pp));$/;"	p	file:	signature:(char_u **pp)
next_for_item	src/eval.c	/^next_for_item(fi_void, arg)$/;"	f
next_list	src/structs.h	/^    short	*next_list;	\/* ID list for next match (if non-zero) *\/$/;"	m	struct:keyentry	access:public
next_list	src/syntax.c	/^    short	*next_list;	\/* group IDs for "nextgroup" argument *\/$/;"	m	struct:__anon82	file:	access:public
next_match_col	src/syntax.c	/^static int next_match_col;		\/* column for start of next match *\/$/;"	v	file:
next_match_end_idx	src/syntax.c	/^static int next_match_end_idx;		\/* ID of group for end pattn or zero *\/$/;"	v	file:
next_match_eoe_pos	src/syntax.c	/^static lpos_T next_match_eoe_pos;	\/* pos. for end of end pattern *\/$/;"	v	file:
next_match_eos_pos	src/syntax.c	/^static lpos_T next_match_eos_pos;	\/* end of start pattn (start region) *\/$/;"	v	file:
next_match_extmatch	src/syntax.c	/^static reg_extmatch_T *next_match_extmatch = NULL;$/;"	v	file:
next_match_flags	src/syntax.c	/^static long next_match_flags;		\/* flags for next match *\/$/;"	v	file:
next_match_h_endpos	src/syntax.c	/^static lpos_T next_match_h_endpos;	\/* pos. for highl. end of next match *\/$/;"	v	file:
next_match_h_startpos	src/syntax.c	/^static lpos_T next_match_h_startpos;  \/* pos. for highl. start of next match *\/$/;"	v	file:
next_match_idx	src/syntax.c	/^static int next_match_idx;		\/* index of matched item *\/$/;"	v	file:
next_match_m_endpos	src/syntax.c	/^static lpos_T next_match_m_endpos;	\/* position for end of next match *\/$/;"	v	file:
next_search_hl	src/screen.c	/^next_search_hl(win, shl, lnum, mincol)$/;"	f	file:
next_search_hl	src/screen.c	/^static void next_search_hl __ARGS((win_T *win, match_T *shl, linenr_T lnum, colnr_T mincol));$/;"	p	file:	signature:(win_T *win, match_T *shl, linenr_T lnum, colnr_T mincol)
next_seqnr	src/syntax.c	/^static int next_seqnr = 0;		\/* value to use for si_seqnr *\/$/;"	v	file:
nextb	src/regexp.c	/^    int		nextb;		\/* next byte *\/$/;"	m	struct:regstar_S	file:	access:public
nextb_ic	src/regexp.c	/^    int		nextb_ic;	\/* next byte reverse case *\/$/;"	m	struct:regstar_S	file:	access:public
nextchr	src/regexp.c	/^static int	nextchr;    \/* used for ungetchr() *\/$/;"	v	file:
nextcmd	src/ex_cmds.h	/^    char_u	*nextcmd;	\/* next command (NULL if none) *\/$/;"	m	struct:exarg	access:public
nextcmd	src/fileio.c	/^    AutoCmd	*nextcmd;	\/* next AutoCmd to execute *\/$/;"	m	struct:AutoPatCmd	file:	access:public
nextent	src/termlib.c	/^nextent(tbuf, termcap, buflen)		\/* Read 1 entry from TERMCAP file *\/$/;"	f	file:
nextent	src/termlib.c	/^static int  nextent __ARGS((char *, FILE *, int));$/;"	p	file:	signature:(char *, FILE *, int)
nextline	src/ex_cmds2.c	/^    char_u      *nextline;      \/* if not NULL: line that was read ahead *\/$/;"	m	struct:source_cookie	file:	access:public
nextwild	src/ex_getln.c	/^nextwild(xp, type, options)$/;"	f	file:
nextwild	src/ex_getln.c	/^static int	nextwild __ARGS((expand_T *xp, int type, int options));$/;"	p	file:	signature:(expand_T *xp, int type, int options)
no_Magic	src/regexp.c	/^no_Magic(x)$/;"	f	file:
no_Magic	src/regexp.c	/^static int no_Magic __ARGS((int x));$/;"	p	file:	signature:(int x)
no_abbr	src/globals.h	/^EXTERN int	no_abbr INIT(= TRUE);	\/* TRUE when no abbreviations loaded *\/$/;"	v
no_autoload	src/eval.c	/^static int		no_autoload = FALSE;$/;"	v	file:
no_check_timestamps	src/globals.h	/^EXTERN int	no_check_timestamps INIT(= 0);	\/* Don't check timestamps *\/$/;"	v
no_console_input	src/gui.c	/^no_console_input()$/;"	f
no_executable	vimtutor.bat	/^:no_executable$/;"	l
no_hlsearch	src/globals.h	/^EXTERN int	no_hlsearch INIT(= FALSE);$/;"	v
no_lines_msg	src/globals.h	/^EXTERN char_u no_lines_msg[]	INIT(= N_("--No lines in buffer--"));$/;"	v
no_mapping	src/globals.h	/^EXTERN int no_mapping INIT(= FALSE);	\/* currently no mapping allowed *\/$/;"	v
no_scs	src/search.c	/^    int		    no_scs;	\/* no smarcase for this pattern *\/$/;"	m	struct:spat	file:	access:public
no_smartcase	src/globals.h	/^EXTERN int	no_smartcase INIT(= FALSE);	\/* don't use 'smartcase' once *\/$/;"	v
no_spell_checking	src/spell.c	/^no_spell_checking(wp)$/;"	f	file:
no_spell_checking	src/spell.c	/^static int no_spell_checking __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
no_swap_file	src/main.c	/^    int		no_swap_file;		\/* "-n" argument used *\/$/;"	m	struct:__anon9	file:	access:public
no_u_sync	src/globals.h	/^EXTERN int no_u_sync INIT(= 0);		\/* Don't call u_sync() *\/$/;"	v
no_viminfo	src/ex_cmds.c	/^no_viminfo()$/;"	f	file:
no_viminfo	src/ex_cmds.c	/^static int no_viminfo __ARGS((void));$/;"	p	file:	signature:(void)
no_wait_return	src/globals.h	/^EXTERN int	no_wait_return INIT(= 0);   \/* don't wait for return for now *\/$/;"	v
no_zero_mapping	src/globals.h	/^EXTERN int no_zero_mapping INIT(= 0);	\/* mapping zero not allowed *\/$/;"	v
noalt	src/gui_gtk.c	/^    int		noalt;		    \/* accept accelerators without Alt *\/$/;"	m	struct:_DialogInfo	file:	access:public
node_compress	src/spell.c	/^node_compress(spin, node, ht, tot)$/;"	f	file:
node_compress	src/spell.c	/^static int node_compress __ARGS((spellinfo_T *spin, wordnode_T *node, hashtab_T *ht, int *tot));$/;"	p	file:	signature:(spellinfo_T *spin, wordnode_T *node, hashtab_T *ht, int *tot)
node_equal	src/spell.c	/^node_equal(n1, n2)$/;"	f	file:
node_equal	src/spell.c	/^static int node_equal __ARGS((wordnode_T *n1, wordnode_T *n2));$/;"	p	file:	signature:(wordnode_T *n1, wordnode_T *n2)
nofile_fname	src/tag.c	/^static char_u	*nofile_fname = NULL;	\/* fname for NOTAGFILE error *\/$/;"	v	file:
nofold_len	src/spell.c	/^nofold_len(fword, flen, word)$/;"	f	file:
nofold_len	src/spell.c	/^static int nofold_len __ARGS((char_u *fword, int flen, char_u *word));$/;"	p	file:	signature:(char_u *fword, int flen, char_u *word)
non_zero_arg	src/eval.c	/^non_zero_arg(argvars)$/;"	f	file:
non_zero_arg	src/eval.c	/^static int non_zero_arg __ARGS((typval_T *argvars));$/;"	p	file:	signature:(typval_T *argvars)
noremap	src/structs.h	/^    int		noremap[MENU_MODES]; \/* A REMAP_ flag for each mode *\/$/;"	m	struct:VimMenu	access:public
noremapbuf_init	src/getchar.c	/^static char_u	noremapbuf_init[TYPELEN_INIT];	\/* initial typebuf.tb_noremap *\/$/;"	v	file:
norm_font	src/gui.h	/^    GuiFont	norm_font;	    \/* Normal font *\/$/;"	m	struct:Gui	access:public
norm_logfont	src/gui_w48.c	/^static LOGFONT norm_logfont;$/;"	v	file:
norm_pixel	src/gui.h	/^    guicolor_T	norm_pixel;	    \/* Color of normal text *\/$/;"	m	struct:Gui	access:public
normal_cmd	src/normal.c	/^normal_cmd(oap, toplevel)$/;"	f
normal_pixmap	src/gui_xmebwp.h	/^    Pixmap normal_pixmap;$/;"	m	struct:_XmEnhancedButtonPart	access:public
normal_search	src/normal.c	/^normal_search(cap, dir, pat, opt)$/;"	f	file:
normal_search	src/normal.c	/^static void	normal_search __ARGS((cmdarg_T *cap, int dir, char_u *pat, int opt));$/;"	p	file:	signature:(cmdarg_T *cap, int dir, char_u *pat, int opt)
normvideo	src/os_win32.c	/^normvideo(void)$/;"	f	file:	signature:(void)
normvideo	src/os_win32.c	/^static void normvideo(void);$/;"	p	file:	signature:(void)
not_exiting	src/ex_docmd.c	/^not_exiting()$/;"	f
not_supported	runtime/spell/check_locales.vim	/^let not_supported = []$/;"	v
not_writing	src/ex_cmds.c	/^not_writing()$/;"	f
notag	runtime/ftplugin/pdf.vim	/^function! s:notag()$/;"	f
notify_multithread	src/if_mzsch.c	/^notify_multithread(int on)$/;"	f	file:	signature:(int on)
nqc_minlines	runtime/syntax/nqc.vim	/^    let nqc_minlines = 15	    " mostly for () constructs$/;"	v
nqc_minlines	runtime/syntax/nqc.vim	/^    let nqc_minlines = 50	    " #if 0 constructs can be long$/;"	v
nr2hex	src/charset.c	/^nr2hex(c)$/;"	f	file:
nr2hex	src/charset.c	/^static unsigned nr2hex __ARGS((unsigned c));$/;"	p	file:	signature:(unsigned c)
nr_trans	src/structs.h	/^struct nr_trans$/;"	s
nr_trans::nt_new_bnum	src/structs.h	/^    blocknr_T	nt_new_bnum;		\/* new, positive, number *\/$/;"	m	struct:nr_trans	access:public
nr_trans::nt_next	src/structs.h	/^    NR_TRANS	*nt_next;		\/* next nr_trans in hash list *\/$/;"	m	struct:nr_trans	access:public
nr_trans::nt_old_bnum	src/structs.h	/^    blocknr_T	nt_old_bnum;		\/* old, negative, number *\/$/;"	m	struct:nr_trans	access:public
nr_trans::nt_prev	src/structs.h	/^    NR_TRANS	*nt_prev;		\/* previous nr_trans in hash list *\/$/;"	m	struct:nr_trans	access:public
nt_new_bnum	src/structs.h	/^    blocknr_T	nt_new_bnum;		\/* new, positive, number *\/$/;"	m	struct:nr_trans	access:public
nt_next	src/structs.h	/^    NR_TRANS	*nt_next;		\/* next nr_trans in hash list *\/$/;"	m	struct:nr_trans	access:public
nt_old_bnum	src/structs.h	/^    blocknr_T	nt_old_bnum;		\/* old, negative, number *\/$/;"	m	struct:nr_trans	access:public
nt_prev	src/structs.h	/^    NR_TRANS	*nt_prev;		\/* previous nr_trans in hash list *\/$/;"	m	struct:nr_trans	access:public
ntaction	vimtutor.bat	/^:ntaction$/;"	l
nul	src/os_vms.c	/^    int		nul;$/;"	m	struct:__anon79	file:	access:public
nul	src/os_vms.c	/^    int	nul;$/;"	m	struct:__anon80	file:	access:public
null_libintl_bind_textdomain_codeset	src/os_win32.c	/^null_libintl_bind_textdomain_codeset(const char *domainname,$/;"	f	file:	signature:(const char *domainname, const char *codeset)
null_libintl_bind_textdomain_codeset	src/os_win32.c	/^static char *null_libintl_bind_textdomain_codeset(const char *, const char *);$/;"	p	file:	signature:(const char *, const char *)
null_libintl_bindtextdomain	src/GvimExt/gvimext.cpp	/^null_libintl_bindtextdomain(const char * \/* domainname *\/, const char * \/* dirname *\/)$/;"	f	file:	signature:(const char * , const char * )
null_libintl_bindtextdomain	src/GvimExt/gvimext.cpp	/^static char *null_libintl_bindtextdomain(const char *, const char *);$/;"	p	file:	signature:(const char *, const char *)
null_libintl_bindtextdomain	src/os_win32.c	/^null_libintl_bindtextdomain(const char *domainname, const char *dirname)$/;"	f	file:	signature:(const char *domainname, const char *dirname)
null_libintl_bindtextdomain	src/os_win32.c	/^static char *null_libintl_bindtextdomain(const char *, const char *);$/;"	p	file:	signature:(const char *, const char *)
null_libintl_gettext	src/GvimExt/gvimext.cpp	/^null_libintl_gettext(const char *msgid)$/;"	f	file:	signature:(const char *msgid)
null_libintl_gettext	src/GvimExt/gvimext.cpp	/^static char *null_libintl_gettext(const char *);$/;"	p	file:	signature:(const char *)
null_libintl_gettext	src/os_win32.c	/^null_libintl_gettext(const char *msgid)$/;"	f	file:	signature:(const char *msgid)
null_libintl_gettext	src/os_win32.c	/^static char *null_libintl_gettext(const char *);$/;"	p	file:	signature:(const char *)
null_libintl_textdomain	src/GvimExt/gvimext.cpp	/^null_libintl_textdomain(const char*  \/* domainname *\/)$/;"	f	file:	signature:(const char* )
null_libintl_textdomain	src/GvimExt/gvimext.cpp	/^static char *null_libintl_textdomain(const char *);$/;"	p	file:	signature:(const char *)
null_libintl_textdomain	src/os_win32.c	/^null_libintl_textdomain(const char *domainname)$/;"	f	file:	signature:(const char *domainname)
null_libintl_textdomain	src/os_win32.c	/^static char *null_libintl_textdomain(const char *);$/;"	p	file:	signature:(const char *)
num	src/gui_xmdlg.c	/^    int		num;		\/* number of font names *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
num_alloc	src/misc2.c	/^static long_u num_alloc;$/;"	v	file:
num_charsets	src/hardcopy.c	/^    int				num_charsets;$/;"	m	struct:prt_ps_mbfont_S	file:	access:public
num_cols	src/gui.h	/^    int		num_cols;	    \/* Number of columns *\/$/;"	m	struct:Gui	access:public
num_complex_braces	src/regexp.c	/^static int	num_complex_braces; \/* Complex \\{...} count *\/$/;"	v	file:
num_encodings	src/hardcopy.c	/^    int				num_encodings;$/;"	m	struct:prt_ps_mbfont_S	file:	access:public
num_freed	src/misc2.c	/^static long_u num_freed;$/;"	v	file:
num_panels	src/gui_photon.c	/^static ushort_t	num_panels = 0;$/;"	v	file:
num_rows	src/gui.h	/^    int		num_rows;	    \/* Number of rows *\/$/;"	m	struct:Gui	access:public
num_windows	src/dosinst.c	/^static int num_windows;$/;"	v	file:
num_windows	src/os_win32.c	/^static int num_windows;$/;"	v	file:
number	src/structs.h	/^    long	number;$/;"	m	struct:__anon58	access:public
number	src/structs.h	/^    prt_text_attr_T number;$/;"	m	struct:__anon60	access:public
number_width	src/screen.c	/^number_width(wp)$/;"	f
number_width	src/vim.h	1941;"	d
nv_Replace	src/normal.c	/^nv_Replace(cap)$/;"	f	file:
nv_Replace	src/normal.c	/^static void	nv_Replace __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_Undo	src/normal.c	/^nv_Undo(cap)$/;"	f	file:
nv_Undo	src/normal.c	/^static void	nv_Undo __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_Zet	src/normal.c	/^nv_Zet(cap)$/;"	f	file:
nv_Zet	src/normal.c	/^static void	nv_Zet __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_abbrev	src/normal.c	/^nv_abbrev(cap)$/;"	f	file:
nv_abbrev	src/normal.c	/^static void	nv_abbrev __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_addsub	src/normal.c	/^nv_addsub(cap)$/;"	f	file:
nv_addsub	src/normal.c	/^static void	nv_addsub __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_at	src/normal.c	/^nv_at(cap)$/;"	f	file:
nv_at	src/normal.c	/^static void	nv_at __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_bck_word	src/normal.c	/^nv_bck_word(cap)$/;"	f	file:
nv_bck_word	src/normal.c	/^static void	nv_bck_word __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_beginline	src/normal.c	/^nv_beginline(cap)$/;"	f	file:
nv_beginline	src/normal.c	/^static void	nv_beginline __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_brace	src/normal.c	/^nv_brace(cap)$/;"	f	file:
nv_brace	src/normal.c	/^static void	nv_brace __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_brackets	src/normal.c	/^nv_brackets(cap)$/;"	f	file:
nv_brackets	src/normal.c	/^static void	nv_brackets __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_clear	src/normal.c	/^nv_clear(cap)$/;"	f	file:
nv_clear	src/normal.c	/^static void	nv_clear __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_cmd	src/normal.c	/^static const struct nv_cmd$/;"	s	file:
nv_cmd::cmd_arg	src/normal.c	/^    short	cmd_arg;	\/* value for ca.arg *\/$/;"	m	struct:nv_cmd	file:	access:public
nv_cmd::cmd_char	src/normal.c	/^    int		cmd_char;	\/* (first) command character *\/$/;"	m	struct:nv_cmd	file:	access:public
nv_cmd::cmd_flags	src/normal.c	/^    short_u	cmd_flags;	\/* NV_ flags *\/$/;"	m	struct:nv_cmd	file:	access:public
nv_cmd::cmd_func	src/normal.c	/^    nv_func_T   cmd_func;	\/* function for this command *\/$/;"	m	struct:nv_cmd	file:	access:public
nv_cmd_idx	src/normal.c	/^static short nv_cmd_idx[NV_CMDS_SIZE];$/;"	v	file:
nv_cmds	src/normal.c	/^} nv_cmds[] =$/;"	v	typeref:struct:nv_cmd	file:
nv_colon	src/normal.c	/^nv_colon(cap)$/;"	f	file:
nv_colon	src/normal.c	/^static void	nv_colon __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_compare	src/normal.c	/^		nv_compare __ARGS((const void *s1, const void *s2));$/;"	p	file:	signature:(const void *s1, const void *s2)
nv_compare	src/normal.c	/^nv_compare(s1, s2)$/;"	f	file:
nv_csearch	src/normal.c	/^nv_csearch(cap)$/;"	f	file:
nv_csearch	src/normal.c	/^static void	nv_csearch __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_ctrlg	src/normal.c	/^nv_ctrlg(cap)$/;"	f	file:
nv_ctrlg	src/normal.c	/^static void	nv_ctrlg __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_ctrlh	src/normal.c	/^nv_ctrlh(cap)$/;"	f	file:
nv_ctrlh	src/normal.c	/^static void	nv_ctrlh __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_ctrlo	src/normal.c	/^nv_ctrlo(cap)$/;"	f	file:
nv_ctrlo	src/normal.c	/^static void	nv_ctrlo __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_cursorhold	src/normal.c	/^nv_cursorhold(cap)$/;"	f	file:
nv_cursorhold	src/normal.c	/^static void	nv_cursorhold __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_cursormark	src/normal.c	/^nv_cursormark(cap, flag, pos)$/;"	f	file:
nv_cursormark	src/normal.c	/^static void	nv_cursormark __ARGS((cmdarg_T *cap, int flag, pos_T *pos));$/;"	p	file:	signature:(cmdarg_T *cap, int flag, pos_T *pos)
nv_diffgetput	src/diff.c	/^nv_diffgetput(put)$/;"	f
nv_dollar	src/normal.c	/^nv_dollar(cap)$/;"	f	file:
nv_dollar	src/normal.c	/^static void	nv_dollar __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_dot	src/normal.c	/^nv_dot(cap)$/;"	f	file:
nv_dot	src/normal.c	/^static void	nv_dot __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_down	src/normal.c	/^nv_down(cap)$/;"	f	file:
nv_down	src/normal.c	/^static void	nv_down __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_drop	src/normal.c	/^nv_drop(cap)$/;"	f	file:
nv_drop	src/normal.c	/^static void	nv_drop __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_edit	src/normal.c	/^nv_edit(cap)$/;"	f	file:
nv_edit	src/normal.c	/^static void	nv_edit __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_end	src/normal.c	/^nv_end(cap)$/;"	f	file:
nv_end	src/normal.c	/^static void	nv_end __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_error	src/normal.c	/^nv_error(cap)$/;"	f	file:
nv_error	src/normal.c	/^static void	nv_error __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_esc	src/normal.c	/^nv_esc(cap)$/;"	f	file:
nv_esc	src/normal.c	/^static void	nv_esc __ARGS((cmdarg_T *oap));$/;"	p	file:	signature:(cmdarg_T *oap)
nv_exmode	src/normal.c	/^nv_exmode(cap)$/;"	f	file:
nv_exmode	src/normal.c	/^static void	nv_exmode __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_findpar	src/normal.c	/^nv_findpar(cap)$/;"	f	file:
nv_findpar	src/normal.c	/^static void	nv_findpar __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_func_T	src/normal.c	/^typedef void (*nv_func_T) __ARGS((cmdarg_T *cap));$/;"	t	file:
nv_g_cmd	src/normal.c	/^nv_g_cmd(cap)$/;"	f	file:
nv_g_cmd	src/normal.c	/^static void	nv_g_cmd __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_gd	src/normal.c	/^nv_gd(oap, nchar, thisblock)$/;"	f	file:
nv_gd	src/normal.c	/^static void	nv_gd __ARGS((oparg_T *oap, int nchar, int thisblock));$/;"	p	file:	signature:(oparg_T *oap, int nchar, int thisblock)
nv_gomark	src/normal.c	/^nv_gomark(cap)$/;"	f	file:
nv_gomark	src/normal.c	/^static void	nv_gomark __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_goto	src/normal.c	/^nv_goto(cap)$/;"	f	file:
nv_goto	src/normal.c	/^static void	nv_goto __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_gotofile	src/normal.c	/^nv_gotofile(cap)$/;"	f	file:
nv_gotofile	src/normal.c	/^static void	nv_gotofile __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_halfpage	src/normal.c	/^nv_halfpage(cap)$/;"	f	file:
nv_halfpage	src/normal.c	/^static void	nv_halfpage __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_hat	src/normal.c	/^nv_hat(cap)$/;"	f	file:
nv_hat	src/normal.c	/^static void	nv_hat __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_help	src/normal.c	/^nv_help(cap)$/;"	f	file:
nv_help	src/normal.c	/^static void	nv_help __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_home	src/normal.c	/^nv_home(cap)$/;"	f	file:
nv_home	src/normal.c	/^static void	nv_home __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_hor_scrollbar	src/normal.c	/^nv_hor_scrollbar(cap)$/;"	f	file:
nv_hor_scrollbar	src/normal.c	/^static void	nv_hor_scrollbar __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_ident	src/normal.c	/^nv_ident(cap)$/;"	f	file:
nv_ident	src/normal.c	/^static void	nv_ident __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_ignore	src/normal.c	/^nv_ignore(cap)$/;"	f	file:
nv_ignore	src/normal.c	/^static void	nv_ignore __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_join	src/normal.c	/^nv_join(cap)$/;"	f	file:
nv_join	src/normal.c	/^static void	nv_join __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_kundo	src/normal.c	/^nv_kundo(cap)$/;"	f	file:
nv_kundo	src/normal.c	/^static void	nv_kundo __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_left	src/normal.c	/^nv_left(cap)$/;"	f	file:
nv_left	src/normal.c	/^static void	nv_left __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_lineop	src/normal.c	/^nv_lineop(cap)$/;"	f	file:
nv_lineop	src/normal.c	/^static void	nv_lineop __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_mark	src/normal.c	/^nv_mark(cap)$/;"	f	file:
nv_mark	src/normal.c	/^static void	nv_mark __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_max_linear	src/normal.c	/^static int nv_max_linear;$/;"	v	file:
nv_mouse	src/normal.c	/^nv_mouse(cap)$/;"	f	file:
nv_mouse	src/normal.c	/^static void	nv_mouse __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_mousescroll	src/normal.c	/^nv_mousescroll(cap)$/;"	f	file:
nv_mousescroll	src/normal.c	/^static void	nv_mousescroll __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_nbcmd	src/normal.c	/^nv_nbcmd(cap)$/;"	f	file:
nv_nbcmd	src/normal.c	/^static void	nv_nbcmd __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_next	src/normal.c	/^nv_next(cap)$/;"	f	file:
nv_next	src/normal.c	/^static void	nv_next __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_nop	src/normal.c	/^nv_nop(cap)$/;"	f	file:
nv_nop	src/normal.c	/^static void	nv_nop __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_normal	src/normal.c	/^nv_normal(cap)$/;"	f	file:
nv_normal	src/normal.c	/^static void	nv_normal __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_object	src/normal.c	/^nv_object(cap)$/;"	f	file:
nv_object	src/normal.c	/^static void	nv_object __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_open	src/normal.c	/^nv_open(cap)$/;"	f	file:
nv_open	src/normal.c	/^static void	nv_open __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_operator	src/normal.c	/^nv_operator(cap)$/;"	f	file:
nv_operator	src/normal.c	/^static void	nv_operator __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_optrans	src/normal.c	/^nv_optrans(cap)$/;"	f	file:
nv_optrans	src/normal.c	/^static void	nv_optrans __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_page	src/normal.c	/^nv_page(cap)$/;"	f	file:
nv_page	src/normal.c	/^static void	nv_page __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_pcmark	src/normal.c	/^nv_pcmark(cap)$/;"	f	file:
nv_pcmark	src/normal.c	/^static void	nv_pcmark __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_percent	src/normal.c	/^nv_percent(cap)$/;"	f	file:
nv_percent	src/normal.c	/^static void	nv_percent __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_pipe	src/normal.c	/^nv_pipe(cap)$/;"	f	file:
nv_pipe	src/normal.c	/^static void	nv_pipe __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_put	src/normal.c	/^nv_put(cap)$/;"	f	file:
nv_put	src/normal.c	/^static void	nv_put __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_record	src/normal.c	/^nv_record(cap)$/;"	f	file:
nv_record	src/normal.c	/^static void	nv_record __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_redo	src/normal.c	/^nv_redo(cap)$/;"	f	file:
nv_redo	src/normal.c	/^static void	nv_redo __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_regname	src/normal.c	/^nv_regname(cap)$/;"	f	file:
nv_regname	src/normal.c	/^static void	nv_regname __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_replace	src/normal.c	/^nv_replace(cap)$/;"	f	file:
nv_replace	src/normal.c	/^static void	nv_replace __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_right	src/normal.c	/^nv_right(cap)$/;"	f	file:
nv_right	src/normal.c	/^static void	nv_right __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_screengo	src/normal.c	/^nv_screengo(oap, dir, dist)$/;"	f	file:
nv_screengo	src/normal.c	/^static int	nv_screengo __ARGS((oparg_T *oap, int dir, long dist));$/;"	p	file:	signature:(oparg_T *oap, int dir, long dist)
nv_scroll	src/normal.c	/^nv_scroll(cap)$/;"	f	file:
nv_scroll	src/normal.c	/^static void	nv_scroll __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_scroll_line	src/normal.c	/^nv_scroll_line(cap)$/;"	f	file:
nv_scroll_line	src/normal.c	/^static void	nv_scroll_line __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_search	src/normal.c	/^nv_search(cap)$/;"	f	file:
nv_search	src/normal.c	/^static void	nv_search __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_select	src/normal.c	/^nv_select(cap)$/;"	f	file:
nv_select	src/normal.c	/^static void	nv_select __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_sniff	src/normal.c	/^nv_sniff(cap)$/;"	f	file:
nv_sniff	src/normal.c	/^static void	nv_sniff __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_subst	src/normal.c	/^nv_subst(cap)$/;"	f	file:
nv_subst	src/normal.c	/^static void	nv_subst __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_suspend	src/normal.c	/^nv_suspend(cap)$/;"	f	file:
nv_suspend	src/normal.c	/^static void	nv_suspend __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_tabline	src/normal.c	/^nv_tabline(cap)$/;"	f	file:
nv_tabline	src/normal.c	/^static void	nv_tabline __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_tabmenu	src/normal.c	/^nv_tabmenu(cap)$/;"	f	file:
nv_tabmenu	src/normal.c	/^static void	nv_tabmenu __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_tagpop	src/normal.c	/^nv_tagpop(cap)$/;"	f	file:
nv_tagpop	src/normal.c	/^static void	nv_tagpop __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_tilde	src/normal.c	/^nv_tilde(cap)$/;"	f	file:
nv_tilde	src/normal.c	/^static void	nv_tilde __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_undo	src/normal.c	/^nv_undo(cap)$/;"	f	file:
nv_undo	src/normal.c	/^static void	nv_undo __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_up	src/normal.c	/^nv_up(cap)$/;"	f	file:
nv_up	src/normal.c	/^static void	nv_up __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_ver_scrollbar	src/normal.c	/^nv_ver_scrollbar(cap)$/;"	f	file:
nv_ver_scrollbar	src/normal.c	/^static void	nv_ver_scrollbar __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_visual	src/normal.c	/^nv_visual(cap)$/;"	f	file:
nv_visual	src/normal.c	/^static void	nv_visual __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_vreplace	src/normal.c	/^nv_vreplace(cap)$/;"	f	file:
nv_vreplace	src/normal.c	/^static void	nv_vreplace __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_window	src/normal.c	/^nv_window(cap)$/;"	f	file:
nv_window	src/normal.c	/^static void	nv_window __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_wordcmd	src/normal.c	/^nv_wordcmd(cap)$/;"	f	file:
nv_wordcmd	src/normal.c	/^static void	nv_wordcmd __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
nv_zet	src/normal.c	/^nv_zet(cap)$/;"	f	file:
nv_zet	src/normal.c	/^static void	nv_zet __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
oap	src/structs.h	/^    oparg_T	*oap;		\/* Operator arguments *\/$/;"	m	struct:cmdarg_S	access:public
objtbl	src/if_ruby.c	/^static VALUE objtbl;$/;"	v	file:
ofb_buffer	src/blowfish.c	/^static char_u ofb_buffer[BF_OFB_LEN]; \/* 64 bytes *\/$/;"	v	file:
off	src/fold.c	/^    linenr_T	off;		\/* offset between lnum and real line number *\/$/;"	m	struct:__anon98	file:	access:public
off	src/search.c	/^    long	off;		\/* line or char offset *\/$/;"	m	struct:soffset	file:	access:public
off	src/search.c	/^    struct soffset  off;$/;"	m	struct:spat	typeref:struct:spat::soffset	file:	access:public
off2pos	src/netbeans.c	/^off2pos(buf_T *buf, long offset)$/;"	f	file:	signature:(buf_T *buf, long offset)
off2pos	src/netbeans.c	/^static pos_T *off2pos __ARGS((buf_T *, long));$/;"	p	file:	signature:(buf_T *, long)
off_t	src/os_amiga.h	/^typedef long off_t;$/;"	t
off_t	src/os_msdos.h	/^typedef long off_t;$/;"	t
off_t	src/os_os2_cfg.h	67;"	d
off_t	src/os_win16.h	/^typedef long off_t;$/;"	t
offset	src/mbyte.c	/^    int offset;$/;"	m	struct:__anon136	file:	access:public
offset2bytes	src/spell.c	/^offset2bytes(nr, buf)$/;"	f	file:
offset2bytes	src/spell.c	/^static int offset2bytes __ARGS((int nr, char_u *buf));$/;"	p	file:	signature:(int nr, char_u *buf)
ok	src/gui_xmdlg.c	/^    Widget	ok;$/;"	m	struct:_SharedFontSelData	file:	access:public
ok_callback	src/gui_xmdlg.c	/^ok_callback(Widget w UNUSED,$/;"	f	file:	signature:(Widget w UNUSED, SharedFontSelData *data, XmPushButtonCallbackStruct *call_data UNUSED)
old	src/gui_xmdlg.c	/^    XFontStruct	*old;		\/* font data structure for sample display *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
oldEvent	src/gui_at_sb.c	/^    XEvent *oldEvent;$/;"	m	struct:EventData	file:	access:public
old_char	src/getchar.c	/^static int old_char = -1;	\/* character put back by vungetc() *\/$/;"	v	file:
old_char	src/structs.h	/^    int			old_char;$/;"	m	struct:__anon50	access:public
old_cursor_state	src/os_riscos.c	/^int old_cursor_state = -1;$/;"	v
old_escape_state	src/os_riscos.c	/^int old_escape_state = -1;$/;"	v
old_fn	src/if_py_both.h	/^static writefn old_fn = NULL;$/;"	v
old_indent	src/edit.c	/^static int	old_indent = 0;		\/* for ^^D command in insert mode *\/$/;"	v	file:
old_label_expose	src/gui_motif.c	/^static XtExposeProc old_label_expose = NULL;$/;"	v	file:
old_list	src/gui_xmdlg.c	/^    XmFontList	old_list;	\/* font data structure for sample display *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
old_mod_mask	src/getchar.c	/^static int old_mod_mask;	\/* mod_mask for ungotten character *\/$/;"	v	file:
old_mod_mask	src/structs.h	/^    int			old_mod_mask;$/;"	m	struct:__anon50	access:public
old_mouse_shape	src/misc2.c	/^static int old_mouse_shape = 0;$/;"	v	file:
old_num_windows	src/os_win32.c	/^static int old_num_windows;$/;"	v	file:
old_redobuff	src/getchar.c	/^static struct buffheader old_redobuff = {{NULL, {NUL}}, NULL, 0, 0};$/;"	v	typeref:struct:buffheader	file:
old_showcmd_buf	src/normal.c	/^static char_u	old_showcmd_buf[SHOWCMD_BUFLEN];  \/* For push_showcmd() *\/$/;"	v	file:
old_sub	src/ex_cmds.c	/^static char_u	*old_sub = NULL;	\/* previous substitute pattern *\/$/;"	v	file:
old_termresponse	src/fileio.c	/^static char_u	*old_termresponse = NULL;$/;"	v	file:
oldbat	src/dosinst.h	/^    char	*oldbat;	\/* path to existing xxx.bat or NULL *\/$/;"	m	struct:__anon138	access:public
oldexe	src/dosinst.h	/^    char	*oldexe;	\/* path to existing xxx.exe or NULL *\/$/;"	m	struct:__anon138	access:public
oldicon	src/os_unix.c	/^static char_u	*oldicon = NULL;$/;"	v	file:
oldtitle	src/os_unix.c	/^static char_u	*oldtitle = NULL;$/;"	v	file:
oldvimrc	src/dosinst.c	/^char	oldvimrc[BUFSIZE];	\/* name of existing vimrc file *\/$/;"	v
oldwindowtitle	src/os_amiga.c	/^static char_u		*oldwindowtitle = NULL;$/;"	v	file:
ole_error	src/gui_w32.c	/^ole_error(char *arg)$/;"	f	file:	signature:(char *arg)
on_select_tab	src/gui_gtk_x11.c	/^on_select_tab($/;"	f	file:	signature:( GtkNotebook *notebook UNUSED, GtkNotebookPage *page UNUSED, gint idx, gpointer data UNUSED)
on_tabline_menu	src/gui_gtk_x11.c	/^on_tabline_menu(GtkWidget *widget, GdkEvent *event)$/;"	f	file:	signature:(GtkWidget *widget, GdkEvent *event)
oneLineTextEditTranslations	src/gui_at_fs.c	/^static char *oneLineTextEditTranslations = "\\$/;"	v	file:
one_adjust	src/mark.c	973;"	d	file:
one_adjust_nodel	src/mark.c	988;"	d	file:
one_exactly	src/regexp.c	/^static int	one_exactly = FALSE;	\/* only do one char for EXACTLY *\/$/;"	v	file:
one_window	src/window.c	/^one_window()$/;"	f	file:
one_window	src/window.c	/^static int one_window __ARGS((void));$/;"	p	file:	signature:(void)
onecap_copy	src/spell.c	/^onecap_copy(word, wcopy, upper)$/;"	f	file:
onecap_copy	src/spell.c	/^static void onecap_copy __ARGS((char_u *word, char_u *wcopy, int upper));$/;"	p	file:	signature:(char_u *word, char_u *wcopy, int upper)
oneleft	src/edit.c	/^oneleft()$/;"	f
oneline_comments	runtime/syntax/spup.vim	/^    let oneline_comments = 2$/;"	v
onepage	src/move.c	/^onepage(dir, count)$/;"	f
oneright	src/edit.c	/^oneright()$/;"	f
only_one_window	src/window.c	/^only_one_window()$/;"	f
opFoldRange	src/fold.c	/^opFoldRange(first, last, opening, recurse, had_visual)$/;"	f
op_change	src/ops.c	/^op_change(oap)$/;"	f
op_colon	src/normal.c	/^op_colon(oap)$/;"	f	file:
op_colon	src/normal.c	/^static void	op_colon __ARGS((oparg_T *oap));$/;"	p	file:	signature:(oparg_T *oap)
op_delete	src/ops.c	/^op_delete(oap)$/;"	f
op_format	src/ops.c	/^op_format(oap, keep_cursor)$/;"	f
op_formatexpr	src/ops.c	/^op_formatexpr(oap)$/;"	f
op_function	src/normal.c	/^op_function(oap)$/;"	f	file:
op_function	src/normal.c	/^static void	op_function __ARGS((oparg_T *oap));$/;"	p	file:	signature:(oparg_T *oap)
op_insert	src/ops.c	/^op_insert(oap, count1)$/;"	f
op_on_lines	src/ops.c	/^op_on_lines(op)$/;"	f
op_reindent	src/ops.c	/^op_reindent(oap, how)$/;"	f
op_replace	src/ops.c	/^op_replace(oap, c)$/;"	f
op_shift	src/ops.c	/^op_shift(oap, curs_top, amount)$/;"	f
op_tilde	src/ops.c	/^op_tilde(oap)$/;"	f
op_type	src/structs.h	/^    int		op_type;	\/* current pending operator type *\/$/;"	m	struct:oparg_S	access:public
op_yank	src/ops.c	/^op_yank(oap, deleting, mess)$/;"	f
oparg_S	src/structs.h	/^typedef struct oparg_S$/;"	s
oparg_S::block_mode	src/structs.h	/^    int		block_mode;	\/* current operator is Visual block mode *\/$/;"	m	struct:oparg_S	access:public
oparg_S::cursor_start	src/structs.h	/^    pos_T	cursor_start;	\/* cursor position before motion for "gw" *\/$/;"	m	struct:oparg_S	access:public
oparg_S::empty	src/structs.h	/^    int		empty;		\/* op_start and op_end the same (only used by$/;"	m	struct:oparg_S	access:public
oparg_S::end	src/structs.h	/^    pos_T	end;		\/* end of the operator *\/$/;"	m	struct:oparg_S	access:public
oparg_S::end_adjusted	src/structs.h	/^    int		end_adjusted;	\/* backuped b_op_end one char (only used by$/;"	m	struct:oparg_S	access:public
oparg_S::end_vcol	src/structs.h	/^    colnr_T	end_vcol;	\/* end col for block mode operator *\/$/;"	m	struct:oparg_S	access:public
oparg_S::inclusive	src/structs.h	/^    int		inclusive;	\/* TRUE if char motion is inclusive (only$/;"	m	struct:oparg_S	access:public
oparg_S::is_VIsual	src/structs.h	/^    int		is_VIsual;	\/* operator on Visual area *\/$/;"	m	struct:oparg_S	access:public
oparg_S::line_count	src/structs.h	/^    long	line_count;	\/* number of lines from op_start to op_end$/;"	m	struct:oparg_S	access:public
oparg_S::motion_force	src/structs.h	/^    int		motion_force;	\/* force motion type: 'v', 'V' or CTRL-V *\/$/;"	m	struct:oparg_S	access:public
oparg_S::motion_type	src/structs.h	/^    int		motion_type;	\/* type of the current cursor motion *\/$/;"	m	struct:oparg_S	access:public
oparg_S::op_type	src/structs.h	/^    int		op_type;	\/* current pending operator type *\/$/;"	m	struct:oparg_S	access:public
oparg_S::prev_count0	src/structs.h	/^    long	prev_count0;	\/* ca.count0 saved for K_CURSORHOLD *\/$/;"	m	struct:oparg_S	access:public
oparg_S::prev_opcount	src/structs.h	/^    long	prev_opcount;	\/* ca.opcount saved for K_CURSORHOLD *\/$/;"	m	struct:oparg_S	access:public
oparg_S::regname	src/structs.h	/^    int		regname;	\/* register to use for the operator *\/$/;"	m	struct:oparg_S	access:public
oparg_S::start	src/structs.h	/^    pos_T	start;		\/* start of the operator *\/$/;"	m	struct:oparg_S	access:public
oparg_S::start_vcol	src/structs.h	/^    colnr_T	start_vcol;	\/* start col for block mode operator *\/$/;"	m	struct:oparg_S	access:public
oparg_S::use_reg_one	src/structs.h	/^    int		use_reg_one;	\/* TRUE if delete uses reg 1 even when not$/;"	m	struct:oparg_S	access:public
oparg_T	src/structs.h	/^} oparg_T;$/;"	t	typeref:struct:oparg_S
opchars	src/ops.c	/^static char opchars[][3] =$/;"	v	file:
opcount	src/globals.h	/^EXTERN int	opcount INIT(= 0);	\/* count for pending operator *\/$/;"	v
opcount	src/structs.h	/^    long	opcount;	\/* count before an operator *\/$/;"	m	struct:cmdarg_S	access:public
openFold	src/fold.c	/^openFold(lnum, count)$/;"	f
openFoldRecurse	src/fold.c	/^openFoldRecurse(lnum)$/;"	f
open_app_context	src/ui.c	/^open_app_context()$/;"	f
open_buffer	src/buffer.c	/^open_buffer(read_stdin, eap, flags)$/;"	f
open_changelog	runtime/ftplugin/changelog.vim	/^  function! s:open_changelog()$/;"	f
open_exfile	src/ex_docmd.c	/^open_exfile(fname, forceit, mode)$/;"	f
open_line	src/misc1.c	/^open_line(dir, flags, old_indent)$/;"	f
open_spellbuf	src/spell.c	/^open_spellbuf()$/;"	f	file:
open_spellbuf	src/spell.c	/^static buf_T *open_spellbuf __ARGS((void));$/;"	p	file:	signature:(void)
openscript	src/getchar.c	/^openscript(name, directly)$/;"	f
openwith_gvim_path	src/uninstal.c	/^openwith_gvim_path(char *buf)$/;"	f	file:	signature:(char *buf)
opt_strings_flags	src/option.c	/^opt_strings_flags(val, values, flagp, list)$/;"	f	file:
opt_strings_flags	src/option.c	/^static int opt_strings_flags __ARGS((char_u *val, char **values, unsigned *flagp, int list));$/;"	p	file:	signature:(char_u *val, char **values, unsigned *flagp, int list)
option_expand	src/option.c	/^option_expand(opt_idx, val)$/;"	f	file:
option_expand	src/option.c	/^static char_u *option_expand __ARGS((int opt_idx, char_u *val));$/;"	p	file:	signature:(int opt_idx, char_u *val)
option_table_T	src/structs.h	/^} option_table_T;$/;"	t	typeref:struct:__anon58
option_value2string	src/option.c	/^option_value2string(opp, opt_flags)$/;"	f	file:
option_value2string	src/option.c	/^static void option_value2string __ARGS((struct vimoption *, int opt_flags));$/;"	p	file:	signature:(struct vimoption *, int opt_flags)
option_was_set	src/option.c	/^option_was_set(name)$/;"	f
optionalblock	runtime/indent/cobol.vim	/^function! s:optionalblock(lnum,ind,blocks,clauses)$/;"	f
optioncmd	src/if_tcl.c	/^optioncmd(dummy, interp, objc, objv)$/;"	f	file:
options	src/option.c	/^	options[] =$/;"	v	typeref:struct:_far	file:
optval_default	src/option.c	/^optval_default(p, varp)$/;"	f	file:
optval_default	src/option.c	/^static int optval_default __ARGS((struct vimoption *, char_u *varp));$/;"	p	file:	signature:(struct vimoption *, char_u *varp)
optwin	runtime/optwin.vim	/^augroup optwin$/;"	a
orgmode	src/os_vms.c	/^static TT_MODE	orgmode;$/;"	v	file:
orientation	src/gui_at_sb.h	/^    XtOrientation orientation;	\/* horizontal or vertical *\/$/;"	m	struct:__anon31	access:public
orig_attr	src/os_msdos.c	/^static int orig_attr = 0x0700;		\/* video attributes when starting *\/$/;"	v	file:
orig_line_count	src/globals.h	/^EXTERN int	orig_line_count INIT(= 0);  \/* Line count when "gR" started *\/$/;"	v
orig_topfill	src/term.c	/^static int orig_topfill = 0;$/;"	v	file:
orig_topline	src/term.c	/^static linenr_T orig_topline = 0;$/;"	v	file:
origin_end_col	src/vim.h	/^    short_u	origin_end_col;$/;"	m	struct:VimClipboard	access:public
origin_row	src/vim.h	/^    short_u	origin_row;$/;"	m	struct:VimClipboard	access:public
origin_start_col	src/vim.h	/^    short_u	origin_start_col;$/;"	m	struct:VimClipboard	access:public
os_version	src/gui_w48.c	/^static OSVERSIONINFO os_version;    \/* like it says.  Init in gui_mch_init() *\/$/;"	v	file:
ospeed	src/os_mac.h	52;"	d
ospeed	src/term.c	/^short ospeed;$/;"	v
ospeed	src/termlib.c	/^short	ospeed;		      \/* Baud rate (1-16, 1=300, 16=19200), as in stty *\/$/;"	v
osver	src/xxd/xxd.c	/^char osver[] = " (Win32)";$/;"	v
osver	src/xxd/xxd.c	/^char osver[] = " (dos 16 bit)";$/;"	v
osver	src/xxd/xxd.c	/^char osver[] = " (dos 32 bit)";$/;"	v
osver	src/xxd/xxd.c	/^char osver[] = "";$/;"	v
other_mf_macros	runtime/syntax/mf.vim	/^  let other_mf_macros = 1 " Set this to '0' if your code gets too colourful$/;"	v
other_mf_macros	runtime/syntax/mp.vim	/^let other_mf_macros = 0 " cmbase.mf, logo.mf, ... neither$/;"	v
other_mp_macros	runtime/syntax/mp.vim	/^  let other_mp_macros = 1 " Set this to '0' if your source gets too colourful$/;"	v
other_sourcing_name	src/message.c	/^other_sourcing_name()$/;"	f	file:
other_sourcing_name	src/message.c	/^static int other_sourcing_name __ARGS((void));$/;"	p	file:	signature:(void)
otherfile	src/buffer.c	/^otherfile(ffname)$/;"	f
otherfile_buf	src/buffer.c	/^otherfile_buf(buf, ffname$/;"	f	file:
otherfile_buf	src/buffer.c	/^static int	otherfile_buf __ARGS((buf_T *buf, char_u *ffname));$/;"	p	file:	signature:(buf_T *buf, char_u *ffname)
otherfile_buf	src/buffer.c	/^static int	otherfile_buf __ARGS((buf_T *buf, char_u *ffname, struct stat *stp));$/;"	p	file:	signature:(buf_T *buf, char_u *ffname, struct stat *stp)
out	src/dehqx.py	/^out = conv.FName$/;"	v
out_buf	src/term.c	/^static char_u		out_buf[OUT_SIZE + 1];$/;"	v	file:
out_char	src/term.c	/^out_char(c)$/;"	f
out_char_nf	src/term.c	/^out_char_nf(c)$/;"	f	file:
out_char_nf	src/term.c	/^static void out_char_nf __ARGS((unsigned));$/;"	p	file:	signature:(unsigned)
out_data	src/dehqx.py	/^out_data = out$/;"	v
out_flush	src/term.c	/^out_flush()$/;"	f
out_flush_check	src/term.c	/^out_flush_check()$/;"	f
out_num	src/os_amiga.c	/^out_num(n)$/;"	f	file:
out_num	src/os_amiga.c	/^static void out_num __ARGS((long n));$/;"	p	file:	signature:(long n)
out_pos	src/term.c	/^static int		out_pos = 0;	\/* number of chars in out_buf *\/$/;"	v	file:
out_rsrc	src/dehqx.py	/^out_rsrc = out + '.rsrcfork'$/;"	v
out_str	src/term.c	/^out_str(s)$/;"	f
out_str_nf	src/term.c	/^out_str_nf(s)$/;"	f
out_trash	src/term.c	/^out_trash()$/;"	f
outfile	src/dehqx.py	/^    outfile = open(out_rsrc, 'wb')$/;"	v
outfile	src/dehqx.py	/^outfile = open(out_data, 'wb')$/;"	v
outfile	src/structs.h	/^    char_u	*outfile;$/;"	m	struct:__anon60	access:public
output_conv	src/globals.h	/^EXTERN vimconv_T output_conv;			\/* type of output conversion *\/$/;"	v
overrideShellWidgetClass	src/gui_gtk_vms.h	669;"	d
overstrike	src/ex_getln.c	/^    int		overstrike;	\/* Typing mode on the command line.  Shared by$/;"	m	struct:cmdline_info	file:	access:public
owned	src/vim.h	/^    int		owned;		\/* Flag: do we own the selection? *\/$/;"	m	struct:VimClipboard	access:public
p	runtime/macros/less.vim	/^map p %$/;"	m
p	src/testdir/test49.vim	/^		let p = 0$/;"	v
p	src/testdir/test49.vim	/^	    let p = 1$/;"	v
p	src/testdir/test49.vim	/^	let p = 0$/;"	v
p	src/testdir/test49.vim	/^    let p = 1$/;"	v
p3imp_PyExc_AttributeError	src/if_python3.c	/^static PyObject *p3imp_PyExc_AttributeError;$/;"	v	file:
p3imp_PyExc_IndexError	src/if_python3.c	/^static PyObject *p3imp_PyExc_IndexError;$/;"	v	file:
p3imp_PyExc_KeyboardInterrupt	src/if_python3.c	/^static PyObject *p3imp_PyExc_KeyboardInterrupt;$/;"	v	file:
p3imp_PyExc_TypeError	src/if_python3.c	/^static PyObject *p3imp_PyExc_TypeError;$/;"	v	file:
p3imp_PyExc_ValueError	src/if_python3.c	/^static PyObject *p3imp_PyExc_ValueError;$/;"	v	file:
pDacl	src/os_win32.c	/^    PACL		    pDacl;$/;"	m	struct:my_acl	file:	access:public
pGetMonitorInfo	src/gui_w32.c	/^static TGetMonitorInfo	    pGetMonitorInfo = NULL;$/;"	v	file:
pGetNamedSecurityInfo	src/os_win32.c	/^static PGNSECINFO pGetNamedSecurityInfo;$/;"	v	file:
pIApp	src/glbl_ime.cpp	/^static IActiveIMMApp *pIApp = NULL;$/;"	v	file:
pIMsg	src/glbl_ime.cpp	/^static IActiveIMMMessagePumpOwner *pIMsg = NULL;$/;"	v	file:
pImmAssociateContext	src/gui_w32.c	/^static HIMC (WINAPI *pImmAssociateContext)(HWND, HIMC);$/;"	v	file:
pImmAssociateContext	src/gui_w32.c	378;"	d	file:
pImmGetCompositionFont	src/gui_w32.c	/^static BOOL (WINAPI *pImmGetCompositionFont)(HIMC, LPLOGFONTA);$/;"	v	file:
pImmGetCompositionFont	src/gui_w32.c	382;"	d	file:
pImmGetCompositionStringA	src/gui_w32.c	/^static LONG (WINAPI *pImmGetCompositionStringA)(HIMC, DWORD, LPVOID, DWORD);$/;"	v	file:
pImmGetCompositionStringA	src/gui_w32.c	375;"	d	file:
pImmGetCompositionStringW	src/gui_w32.c	/^static LONG (WINAPI *pImmGetCompositionStringW)(HIMC, DWORD, LPVOID, DWORD);$/;"	v	file:
pImmGetCompositionStringW	src/gui_w32.c	376;"	d	file:
pImmGetContext	src/gui_w32.c	/^static HIMC (WINAPI *pImmGetContext)(HWND);$/;"	v	file:
pImmGetContext	src/gui_w32.c	377;"	d	file:
pImmGetConversionStatus	src/gui_w32.c	/^static BOOL (WINAPI *pImmGetConversionStatus)(HIMC, LPDWORD, LPDWORD);$/;"	v	file:
pImmGetConversionStatus	src/gui_w32.c	385;"	d	file:
pImmGetOpenStatus	src/gui_w32.c	/^static BOOL (WINAPI *pImmGetOpenStatus)(HIMC);$/;"	v	file:
pImmGetOpenStatus	src/gui_w32.c	380;"	d	file:
pImmReleaseContext	src/gui_w32.c	/^static BOOL (WINAPI *pImmReleaseContext)(HWND, HIMC);$/;"	v	file:
pImmReleaseContext	src/gui_w32.c	379;"	d	file:
pImmSetCompositionFont	src/gui_w32.c	/^static BOOL (WINAPI *pImmSetCompositionFont)(HIMC, LPLOGFONTA);$/;"	v	file:
pImmSetCompositionFont	src/gui_w32.c	383;"	d	file:
pImmSetCompositionWindow	src/gui_w32.c	/^static BOOL (WINAPI *pImmSetCompositionWindow)(HIMC, LPCOMPOSITIONFORM);$/;"	v	file:
pImmSetCompositionWindow	src/gui_w32.c	384;"	d	file:
pImmSetConversionStatus	src/gui_w32.c	/^static BOOL (WINAPI *pImmSetConversionStatus)(HIMC, DWORD, DWORD);$/;"	v	file:
pImmSetConversionStatus	src/gui_w32.c	386;"	d	file:
pImmSetOpenStatus	src/gui_w32.c	/^static BOOL (WINAPI *pImmSetOpenStatus)(HIMC, BOOL);$/;"	v	file:
pImmSetOpenStatus	src/gui_w32.c	381;"	d	file:
pMonitorFromWindow	src/gui_w32.c	/^static TMonitorFromWindow   pMonitorFromWindow = NULL;$/;"	v	file:
pSacl	src/os_win32.c	/^    PACL		    pSacl;$/;"	m	struct:my_acl	file:	access:public
pSaveInst	src/os_w32exe.c	/^static void (_cdecl *pSaveInst)(HINSTANCE);$/;"	v	file:
pSaveInst	src/os_win16.c	/^static void (_cdecl *pSaveInst)(HINSTANCE);$/;"	v	file:
pSecurityDescriptor	src/os_win32.c	/^    PSECURITY_DESCRIPTOR    pSecurityDescriptor;$/;"	m	struct:my_acl	file:	access:public
pSetNamedSecurityInfo	src/os_win32.c	/^static PSNSECINFO pSetNamedSecurityInfo;$/;"	v	file:
pSidGroup	src/os_win32.c	/^    PSID		    pSidGroup;$/;"	m	struct:my_acl	file:	access:public
pSidOwner	src/os_win32.c	/^    PSID		    pSidOwner;$/;"	m	struct:my_acl	file:	access:public
p_acd	src/option.h	/^EXTERN int	p_acd;		\/* 'autochdir' *\/$/;"	v
p_ai	src/option.c	/^static int	p_ai;$/;"	v	file:
p_ai_nopaste	src/option.c	/^static int	p_ai_nopaste;$/;"	v	file:
p_aleph	src/option.h	/^EXTERN long	p_aleph;	\/* 'aleph' *\/$/;"	v
p_altkeymap	src/option.h	/^EXTERN int	p_altkeymap;	\/* 'altkeymap' *\/$/;"	v
p_ambw	src/option.h	/^EXTERN char_u	*p_ambw;	\/* 'ambiwidth' *\/$/;"	v
p_ambw_values	src/option.c	/^static char *(p_ambw_values[]) = {"single", "double", NULL};$/;"	v	file:
p_antialias	src/option.h	/^EXTERN int	*p_antialias;	\/* 'antialias' *\/$/;"	v
p_ar	src/option.h	/^EXTERN int	p_ar;		\/* 'autoread' *\/$/;"	v
p_ari	src/option.h	/^EXTERN int	p_ari;		\/* 'allowrevins' *\/$/;"	v
p_arshape	src/option.h	/^EXTERN int	p_arshape;	\/* 'arabicshape' *\/$/;"	v
p_aw	src/option.h	/^EXTERN int	p_aw;		\/* 'autowrite' *\/$/;"	v
p_awa	src/option.h	/^EXTERN int	p_awa;		\/* 'autowriteall' *\/$/;"	v
p_bdir	src/option.h	/^EXTERN char_u	*p_bdir;	\/* 'backupdir' *\/$/;"	v
p_bdlay	src/option.h	/^EXTERN long	p_bdlay;	\/* 'balloondelay' *\/$/;"	v
p_beval	src/option.h	/^EXTERN int	p_beval;	\/* 'ballooneval' *\/$/;"	v
p_bex	src/option.h	/^EXTERN char_u	*p_bex;		\/* 'backupext' *\/$/;"	v
p_bexpr	src/option.h	/^EXTERN char_u	*p_bexpr;$/;"	v
p_bg	src/option.h	/^EXTERN char_u	*p_bg;		\/* 'background' *\/$/;"	v
p_bg_values	src/option.c	/^static char *(p_bg_values[]) = {"light", "dark", NULL};$/;"	v	file:
p_bh	src/option.c	/^static char_u	*p_bh;$/;"	v	file:
p_bin	src/option.c	/^static int	p_bin;$/;"	v	file:
p_biosk	src/option.h	/^EXTERN int	p_biosk;	\/* 'bioskey' *\/$/;"	v
p_bk	src/option.h	/^EXTERN int	p_bk;		\/* 'backup' *\/$/;"	v
p_bkc	src/option.h	/^EXTERN char_u	*p_bkc;		\/* 'backupcopy' *\/$/;"	v
p_bkc_values	src/option.h	/^static char *(p_bkc_values[]) = {"yes", "auto", "no", "breaksymlink", "breakhardlink", NULL};$/;"	v
p_bl	src/option.c	/^static int	p_bl;$/;"	v	file:
p_bomb	src/option.c	/^static int	p_bomb;$/;"	v	file:
p_breakat	src/option.h	/^EXTERN char_u	*p_breakat;	\/* 'breakat' *\/$/;"	v
p_bs	src/option.h	/^EXTERN char_u	*p_bs;		\/* 'backspace' *\/$/;"	v
p_bs_values	src/option.c	/^static char *(p_bs_values[]) = {"indent", "eol", "start", NULL};$/;"	v	file:
p_bsdir	src/option.h	/^EXTERN char_u	*p_bsdir;	\/* 'browsedir' *\/$/;"	v
p_bsdir_values	src/option.c	/^static char *(p_bsdir_values[]) = {"current", "last", "buffer", NULL};$/;"	v	file:
p_bsk	src/option.h	/^EXTERN char_u	*p_bsk;		\/* 'backupskip' *\/$/;"	v
p_bt	src/option.c	/^static char_u	*p_bt;$/;"	v	file:
p_bufhidden_values	src/option.c	/^static char *(p_bufhidden_values[]) = {"hide", "unload", "delete", "wipe", NULL};$/;"	v	file:
p_buftype_values	src/option.c	/^static char *(p_buftype_values[]) = {"nofile", "nowrite", "quickfix", "help", "acwrite", NULL};$/;"	v	file:
p_buftype_values	src/option.c	/^static char *(p_buftype_values[]) = {"nofile", "nowrite", "quickfix", "help", NULL};$/;"	v	file:
p_cb	src/option.h	/^EXTERN char_u	*p_cb;		\/* 'clipboard' *\/$/;"	v
p_cc	src/option.h	/^EXTERN char_u   *p_cc;		\/* 'colorcolumn' *\/$/;"	v
p_cc_cols	src/option.h	/^EXTERN int      p_cc_cols[256]; \/* array for 'colorcolumn' columns *\/$/;"	v
p_ccv	src/option.h	/^EXTERN char_u	*p_ccv;		\/* 'charconvert' *\/$/;"	v
p_cdpath	src/option.h	/^EXTERN char_u	*p_cdpath;	\/* 'cdpath' *\/$/;"	v
p_cedit	src/option.h	/^EXTERN char_u	*p_cedit;	\/* 'cedit' *\/$/;"	v
p_cfu	src/option.c	/^static char_u	*p_cfu;$/;"	v	file:
p_ch	src/option.h	/^EXTERN long	p_ch;		\/* 'cmdheight' *\/$/;"	v
p_ci	src/option.c	/^static int	p_ci;$/;"	v	file:
p_cin	src/option.c	/^static int	p_cin;$/;"	v	file:
p_cink	src/option.c	/^static char_u	*p_cink;$/;"	v	file:
p_cino	src/option.c	/^static char_u	*p_cino;$/;"	v	file:
p_cinw	src/option.c	/^static char_u	*p_cinw;$/;"	v	file:
p_cm	src/option.h	/^EXTERN char_u	*p_cm;		\/* 'cryptmethod' *\/$/;"	v
p_cm_values	src/option.c	/^static char *(p_cm_values[]) = {"zip", "blowfish", NULL};$/;"	v	file:
p_cmp	src/option.h	/^EXTERN char_u	*p_cmp;		\/* 'casemap' *\/$/;"	v
p_cmp_values	src/option.h	/^static char *(p_cmp_values[]) = {"internal", "keepascii", NULL};$/;"	v
p_cms	src/option.c	/^static char_u	*p_cms;$/;"	v	file:
p_com	src/option.c	/^static char_u	*p_com;$/;"	v	file:
p_confirm	src/option.h	/^EXTERN int	p_confirm;	\/* 'confirm' *\/$/;"	v
p_consk	src/option.h	/^EXTERN int	p_consk;	\/* 'conskey' *\/$/;"	v
p_cot	src/option.h	/^EXTERN char_u	*p_cot;		\/* 'completeopt' *\/$/;"	v
p_cot_values	src/option.c	/^static char *(p_cot_values[]) = {"menu", "menuone", "longest", "preview", NULL};$/;"	v	file:
p_cp	src/option.h	/^EXTERN int	p_cp;		\/* 'compatible' *\/$/;"	v
p_cpo	src/option.h	/^EXTERN char_u	*p_cpo;		\/* 'cpoptions' *\/$/;"	v
p_cpt	src/option.c	/^static char_u	*p_cpt;$/;"	v	file:
p_cspc	src/option.h	/^EXTERN long	p_cspc;		\/* 'cscopepathcomp' *\/$/;"	v
p_csprg	src/option.h	/^EXTERN char_u	*p_csprg;	\/* 'cscopeprg' *\/$/;"	v
p_csqf	src/option.h	/^EXTERN char_u	*p_csqf;	\/* 'cscopequickfix' *\/$/;"	v
p_cst	src/option.h	/^EXTERN int	p_cst;		\/* 'cscopetag' *\/$/;"	v
p_csto	src/option.h	/^EXTERN long	p_csto;		\/* 'cscopetagorder' *\/$/;"	v
p_csverbose	src/option.h	/^EXTERN int	p_csverbose;	\/* 'cscopeverbose' *\/$/;"	v
p_cwh	src/option.h	/^EXTERN long	p_cwh;		\/* 'cmdwinheight' *\/$/;"	v
p_debug	src/option.h	/^EXTERN char_u	*p_debug;	\/* 'debug' *\/$/;"	v
p_debug_values	src/option.c	/^static char *(p_debug_values[]) = {"msg", "throw", "beep", NULL};$/;"	v	file:
p_deco	src/option.h	/^EXTERN int	p_deco;		\/* 'delcombine' *\/$/;"	v
p_def	src/option.h	/^EXTERN char_u	*p_def;		\/* 'define' *\/$/;"	v
p_dex	src/option.h	/^EXTERN char_u	*p_dex;		\/* 'diffexpr' *\/$/;"	v
p_dg	src/option.h	/^EXTERN int	p_dg;		\/* 'digraph' *\/$/;"	v
p_dict	src/option.h	/^EXTERN char_u	*p_dict;	\/* 'dictionary' *\/$/;"	v
p_dip	src/option.h	/^EXTERN char_u	*p_dip;		\/* 'diffopt' *\/$/;"	v
p_dir	src/option.h	/^EXTERN char_u	*p_dir;		\/* 'directory' *\/$/;"	v
p_dy	src/option.h	/^EXTERN char_u	*p_dy;		\/* 'display' *\/$/;"	v
p_dy_values	src/option.h	/^static char *(p_dy_values[]) = {"lastline", "uhex", NULL};$/;"	v
p_ea	src/option.h	/^EXTERN int	p_ea;		\/* 'equalalways' *\/$/;"	v
p_ead	src/option.h	/^EXTERN char_u	*p_ead;		\/* 'eadirection' *\/$/;"	v
p_ead_values	src/option.c	/^static char *(p_ead_values[]) = {"both", "ver", "hor", NULL};$/;"	v	file:
p_eb	src/option.h	/^EXTERN int	p_eb;		\/* 'errorbells' *\/$/;"	v
p_ed	src/option.h	/^EXTERN int	p_ed;		\/* 'edcompatible' *\/$/;"	v
p_ef	src/option.h	/^EXTERN char_u	*p_ef;		\/* 'errorfile' *\/$/;"	v
p_efm	src/option.h	/^EXTERN char_u	*p_efm;		\/* 'errorformat' *\/$/;"	v
p_ei	src/option.h	/^EXTERN char_u	*p_ei;		\/* 'eventignore' *\/$/;"	v
p_ek	src/option.h	/^EXTERN int	p_ek;		\/* 'esckeys' *\/$/;"	v
p_enc	src/option.h	/^EXTERN char_u	*p_enc;		\/* 'encoding' *\/$/;"	v
p_eol	src/option.c	/^static int	p_eol;$/;"	v	file:
p_ep	src/option.h	/^EXTERN char_u	*p_ep;		\/* 'equalprg' *\/$/;"	v
p_et	src/option.c	/^static int	p_et;$/;"	v	file:
p_et_nobin	src/option.c	/^static int	p_et_nobin;$/;"	v	file:
p_exrc	src/option.h	/^EXTERN int	p_exrc;		\/* 'exrc' *\/$/;"	v
p_fcl	src/option.h	/^EXTERN char_u	*p_fcl;		\/* 'foldclose' *\/$/;"	v
p_fcl_values	src/option.c	/^static char *(p_fcl_values[]) = {"all", NULL};$/;"	v	file:
p_fcs	src/option.h	/^EXTERN char_u	*p_fcs;		\/* 'fillchar' *\/$/;"	v
p_fdls	src/option.h	/^EXTERN long	p_fdls;		\/* 'foldlevelstart' *\/$/;"	v
p_fdm_values	src/option.c	/^static char *(p_fdm_values[]) = {"manual", "expr", "marker", "indent", "syntax",$/;"	v	file:
p_fdo	src/option.h	/^EXTERN char_u	*p_fdo;		\/* 'foldopen' *\/$/;"	v
p_fdo_values	src/option.h	/^static char *(p_fdo_values[]) = {"all", "block", "hor", "mark", "percent",$/;"	v
p_fenc	src/option.c	/^static char_u	*p_fenc;$/;"	v	file:
p_fencs	src/option.h	/^EXTERN char_u	*p_fencs;	\/* 'fileencodings' *\/$/;"	v
p_fex	src/option.c	/^static char_u	*p_fex;$/;"	v	file:
p_ff	src/option.c	/^static char_u	*p_ff;$/;"	v	file:
p_ff_values	src/option.c	/^static char *(p_ff_values[]) = {FF_UNIX, FF_DOS, FF_MAC, NULL};$/;"	v	file:
p_ffs	src/option.h	/^EXTERN char_u	*p_ffs;		\/* 'fileformats' *\/$/;"	v
p_fkmap	src/option.h	/^EXTERN int	p_fkmap;	\/* 'fkmap' *\/$/;"	v
p_flp	src/option.c	/^static char_u	*p_flp;$/;"	v	file:
p_fo	src/option.c	/^static char_u	*p_fo;$/;"	v	file:
p_fp	src/option.h	/^EXTERN char_u	*p_fp;		\/* 'formatprg' *\/$/;"	v
p_fs	src/option.h	/^EXTERN int	p_fs;		\/* 'fsync' *\/$/;"	v
p_ft	src/option.c	/^static char_u	*p_ft;$/;"	v	file:
p_gd	src/option.h	/^EXTERN int	p_gd;		\/* 'gdefault' *\/$/;"	v
p_gefm	src/option.h	/^EXTERN char_u	*p_gefm;	\/* 'grepformat' *\/$/;"	v
p_ghr	src/option.h	/^EXTERN long	p_ghr;		\/* 'guiheadroom' *\/$/;"	v
p_go	src/option.h	/^EXTERN char_u	*p_go;		\/* 'guioptions' *\/$/;"	v
p_gp	src/option.h	/^EXTERN char_u	*p_gp;		\/* 'grepprg' *\/$/;"	v
p_gtl	src/option.h	/^EXTERN char_u	*p_gtl;		\/* 'guitablabel' *\/$/;"	v
p_gtt	src/option.h	/^EXTERN char_u	*p_gtt;		\/* 'guitabtooltip' *\/$/;"	v
p_guicursor	src/option.h	/^EXTERN char_u	*p_guicursor;	\/* 'guicursor' *\/$/;"	v
p_guifont	src/option.h	/^EXTERN char_u	*p_guifont;	\/* 'guifont' *\/$/;"	v
p_guifontset	src/option.h	/^EXTERN char_u	*p_guifontset;	\/* 'guifontset' *\/$/;"	v
p_guifontwide	src/option.h	/^EXTERN char_u	*p_guifontwide;	\/* 'guifontwide' *\/$/;"	v
p_guipty	src/option.h	/^EXTERN int	p_guipty;	\/* 'guipty' *\/$/;"	v
p_header	src/option.h	/^EXTERN char_u	*p_header;	\/* 'printheader' *\/$/;"	v
p_hf	src/option.h	/^EXTERN char_u	*p_hf;		\/* 'helpfile' *\/$/;"	v
p_hh	src/option.h	/^EXTERN long	p_hh;		\/* 'helpheight' *\/$/;"	v
p_hi	src/option.h	/^EXTERN long	p_hi;		\/* 'history' *\/$/;"	v
p_hid	src/option.h	/^EXTERN int	p_hid;		\/* 'hidden' *\/$/;"	v
p_hkmap	src/option.h	/^EXTERN int	p_hkmap;	\/* 'hkmap' *\/$/;"	v
p_hkmapp	src/option.h	/^EXTERN int	p_hkmapp;	\/* 'hkmapp' *\/$/;"	v
p_hl	src/option.h	/^EXTERN char_u	*p_hl;		\/* 'highlight' *\/$/;"	v
p_hlg	src/option.h	/^EXTERN char_u	*p_hlg;		\/* 'helplang' *\/$/;"	v
p_hls	src/option.h	/^EXTERN int	p_hls;		\/* 'hlsearch' *\/$/;"	v
p_ic	src/option.h	/^EXTERN int	p_ic;		\/* 'ignorecase' *\/$/;"	v
p_icon	src/option.h	/^EXTERN int	p_icon;		\/* 'icon' *\/$/;"	v
p_iconstring	src/option.h	/^EXTERN char_u	*p_iconstring;	\/* 'iconstring' *\/$/;"	v
p_im	src/option.h	/^EXTERN int	p_im;		\/* 'insertmode' *\/$/;"	v
p_imak	src/option.h	/^EXTERN char_u	*p_imak;	\/* 'imactivatekey' *\/$/;"	v
p_imcmdline	src/option.h	/^EXTERN int	p_imcmdline;	\/* 'imcmdline' *\/$/;"	v
p_imdisable	src/option.h	/^EXTERN int	p_imdisable;	\/* 'imdisable' *\/$/;"	v
p_iminsert	src/option.c	/^static long	p_iminsert;$/;"	v	file:
p_imsearch	src/option.c	/^static long	p_imsearch;$/;"	v	file:
p_inc	src/option.h	/^EXTERN char_u	*p_inc;$/;"	v
p_inde	src/option.c	/^static char_u	*p_inde;$/;"	v	file:
p_indk	src/option.c	/^static char_u	*p_indk;$/;"	v	file:
p_inex	src/option.c	/^static char_u	*p_inex;$/;"	v	file:
p_inf	src/option.c	/^static int	p_inf;$/;"	v	file:
p_is	src/option.h	/^EXTERN int	p_is;		\/* 'incsearch' *\/$/;"	v
p_isf	src/option.h	/^EXTERN char_u	*p_isf;		\/* 'isfname' *\/$/;"	v
p_isi	src/option.h	/^EXTERN char_u	*p_isi;		\/* 'isident' *\/$/;"	v
p_isk	src/option.c	/^static char_u	*p_isk;$/;"	v	file:
p_isp	src/option.h	/^EXTERN char_u	*p_isp;		\/* 'isprint' *\/$/;"	v
p_js	src/option.h	/^EXTERN int	p_js;		\/* 'joinspaces' *\/$/;"	v
p_key	src/option.c	/^static char_u	*p_key;$/;"	v	file:
p_keymap	src/option.c	/^static char_u	*p_keymap;$/;"	v	file:
p_km	src/option.h	/^EXTERN char_u	*p_km;		\/* 'keymodel' *\/$/;"	v
p_km_values	src/option.c	/^static char *(p_km_values[]) = {"startsel", "stopsel", NULL};$/;"	v	file:
p_kp	src/option.h	/^EXTERN char_u	*p_kp;		\/* 'keywordprg' *\/$/;"	v
p_langmap	src/option.h	/^EXTERN char_u	*p_langmap;	\/* 'langmap'*\/$/;"	v
p_lcs	src/option.h	/^EXTERN char_u	*p_lcs;		\/* 'listchars' *\/$/;"	v
p_linespace	src/option.h	/^EXTERN long	p_linespace;	\/* 'linespace' *\/$/;"	v
p_lisp	src/option.c	/^static int	p_lisp;$/;"	v	file:
p_lispwords	src/option.h	/^EXTERN char_u	*p_lispwords;	\/* 'lispwords' *\/$/;"	v
p_lm	src/option.h	/^EXTERN char_u	*p_lm;		\/* 'langmenu' *\/$/;"	v
p_lpl	src/option.h	/^EXTERN int	p_lpl;		\/* 'loadplugins' *\/$/;"	v
p_ls	src/option.h	/^EXTERN long	p_ls;		\/* 'laststatus' *\/$/;"	v
p_lz	src/option.h	/^EXTERN int	p_lz;		\/* 'lazyredraw' *\/$/;"	v
p_ma	src/option.c	/^static int	p_ma;$/;"	v	file:
p_macatsui	src/option.h	/^EXTERN int	p_macatsui;	\/* 'macatsui' *\/$/;"	v
p_macatsui_last	src/gui_mac.c	/^int	    p_macatsui_last;$/;"	v
p_magic	src/option.h	/^EXTERN int	p_magic;	\/* 'magic' *\/$/;"	v
p_mat	src/option.h	/^EXTERN long	p_mat;		\/* 'matchtime' *\/$/;"	v
p_mco	src/option.h	/^EXTERN long	p_mco;		\/* 'maxcombine' *\/$/;"	v
p_mef	src/option.h	/^EXTERN char_u	*p_mef;		\/* 'makeef' *\/$/;"	v
p_mfd	src/option.h	/^EXTERN long	p_mfd;		\/* 'maxfuncdepth' *\/$/;"	v
p_mh	src/option.h	/^EXTERN int	p_mh;		\/* 'mousehide' *\/$/;"	v
p_mis	src/option.h	/^EXTERN long	p_mis;		\/* 'menuitems' *\/$/;"	v
p_ml	src/option.c	/^static int	p_ml;$/;"	v	file:
p_ml_nobin	src/option.c	/^static int	p_ml_nobin;$/;"	v	file:
p_mls	src/option.h	/^EXTERN long	p_mls;		\/* 'modelines' *\/$/;"	v
p_mm	src/option.h	/^EXTERN long	p_mm;		\/* 'maxmem' *\/$/;"	v
p_mmd	src/option.h	/^EXTERN long	p_mmd;		\/* 'maxmapdepth' *\/$/;"	v
p_mmp	src/option.h	/^EXTERN long	p_mmp;		\/* 'maxmempattern' *\/$/;"	v
p_mmt	src/option.h	/^EXTERN long	p_mmt;		\/* 'maxmemtot' *\/$/;"	v
p_mod	src/option.c	/^static int	p_mod;$/;"	v	file:
p_more	src/option.h	/^EXTERN int	p_more;		\/* 'more' *\/$/;"	v
p_mouse	src/option.h	/^EXTERN char_u	*p_mouse;	\/* 'mouse' *\/$/;"	v
p_mousef	src/option.h	/^EXTERN int	p_mousef;	\/* 'mousefocus' *\/$/;"	v
p_mousem	src/option.h	/^EXTERN char_u	*p_mousem;	\/* 'mousemodel' *\/$/;"	v
p_mousem_values	src/option.c	/^static char *(p_mousem_values[]) = {"extend", "popup", "popup_setpos", "mac", NULL};$/;"	v	file:
p_mouseshape	src/option.h	/^EXTERN char_u	*p_mouseshape;	\/* 'mouseshape' *\/$/;"	v
p_mouset	src/option.h	/^EXTERN long	p_mouset;	\/* 'mousetime' *\/$/;"	v
p_mp	src/option.h	/^EXTERN char_u	*p_mp;		\/* 'makeprg' *\/$/;"	v
p_mps	src/option.c	/^static char_u	*p_mps;$/;"	v	file:
p_msm	src/option.h	/^EXTERN char_u	*p_msm;		\/* 'mkspellmem' *\/$/;"	v
p_mzq	src/option.h	/^EXTERN long	p_mzq;		\/* 'mzquantum *\/$/;"	v
p_nf	src/option.c	/^static char_u	*p_nf;$/;"	v	file:
p_nf_values	src/option.c	/^static char *(p_nf_values[]) = {"octal", "hex", "alpha", NULL};$/;"	v	file:
p_odev	src/option.h	/^EXTERN int	p_odev;		\/* 'opendevice' *\/$/;"	v
p_oft	src/option.c	/^static char_u	*p_oft;$/;"	v	file:
p_ofu	src/option.c	/^static char_u	*p_ofu;$/;"	v	file:
p_opfunc	src/option.h	/^EXTERN char_u	*p_opfunc;	\/* 'operatorfunc' *\/$/;"	v
p_para	src/option.h	/^EXTERN char_u	*p_para;	\/* 'paragraphs' *\/$/;"	v
p_paste	src/option.h	/^EXTERN int	p_paste;	\/* 'paste' *\/$/;"	v
p_path	src/option.h	/^EXTERN char_u	*p_path;	\/* 'path' *\/$/;"	v
p_pdev	src/option.h	/^EXTERN char_u	*p_pdev;	\/* 'printdevice' *\/$/;"	v
p_penc	src/option.h	/^EXTERN char_u	*p_penc;	\/* 'printencoding' *\/$/;"	v
p_pex	src/option.h	/^EXTERN char_u	*p_pex;		\/* 'patchexpr' *\/$/;"	v
p_pexpr	src/option.h	/^EXTERN char_u	*p_pexpr;	\/* 'printexpr' *\/$/;"	v
p_pfn	src/option.h	/^EXTERN char_u	*p_pfn;		\/* 'printfont' *\/$/;"	v
p_ph	src/option.h	/^EXTERN long	p_ph;		\/* 'pumheight' *\/$/;"	v
p_pi	src/option.c	/^static int	p_pi;$/;"	v	file:
p_pm	src/option.h	/^EXTERN char_u	*p_pm;		\/* 'patchmode' *\/$/;"	v
p_pmcs	src/option.h	/^EXTERN char_u	*p_pmcs;	\/* 'printmbcharset' *\/$/;"	v
p_pmfn	src/option.h	/^EXTERN char_u	*p_pmfn;	\/* 'printmbfont' *\/$/;"	v
p_popt	src/option.h	/^EXTERN char_u	*p_popt;	\/* 'printoptions' *\/$/;"	v
p_prompt	src/option.h	/^EXTERN int	p_prompt;	\/* 'prompt' *\/$/;"	v
p_pt	src/option.h	/^EXTERN char_u	*p_pt;		\/* 'pastetoggle' *\/$/;"	v
p_pvh	src/option.h	/^EXTERN long	p_pvh;		\/* 'previewheight' *\/$/;"	v
p_qe	src/option.c	/^static char_u	*p_qe;$/;"	v	file:
p_rdt	src/option.h	/^EXTERN long	p_rdt;		\/* 'redrawtime' *\/$/;"	v
p_remap	src/option.h	/^EXTERN int	p_remap;	\/* 'remap' *\/$/;"	v
p_report	src/option.h	/^EXTERN long	p_report;	\/* 'report' *\/$/;"	v
p_ri	src/option.h	/^EXTERN int	p_ri;		\/* 'revins' *\/$/;"	v
p_ro	src/option.c	/^static int	p_ro;$/;"	v	file:
p_rs	src/option.h	/^EXTERN int	p_rs;		\/* 'restorescreen' *\/$/;"	v
p_rtp	src/option.h	/^EXTERN char_u	*p_rtp;		\/* 'runtimepath' *\/$/;"	v
p_ru	src/option.h	/^EXTERN int	p_ru;		\/* 'ruler' *\/$/;"	v
p_ruf	src/option.h	/^EXTERN char_u	*p_ruf;		\/* 'rulerformat' *\/$/;"	v
p_sb	src/option.h	/^EXTERN int	p_sb;		\/* 'splitbelow' *\/$/;"	v
p_sbo	src/option.h	/^EXTERN char_u	*p_sbo;		\/* 'scrollopt' *\/$/;"	v
p_sbr	src/option.h	/^EXTERN char_u	*p_sbr;		\/* 'showbreak' *\/$/;"	v
p_sc	src/option.h	/^EXTERN int	p_sc;		\/* 'showcmd' *\/$/;"	v
p_scbopt_values	src/option.c	/^static char *(p_scbopt_values[]) = {"ver", "hor", "jump", NULL};$/;"	v	file:
p_scs	src/option.h	/^EXTERN int	p_scs;		\/* 'smartcase' *\/$/;"	v
p_sections	src/option.h	/^EXTERN char_u	*p_sections;	\/* 'sections' *\/$/;"	v
p_secure	src/option.h	/^EXTERN int	p_secure;	\/* 'secure' *\/$/;"	v
p_sel	src/option.h	/^EXTERN char_u	*p_sel;		\/* 'selection' *\/$/;"	v
p_sel_values	src/option.c	/^static char *(p_sel_values[]) = {"inclusive", "exclusive", "old", NULL};$/;"	v	file:
p_sft	src/option.h	/^EXTERN int	p_sft;		\/* 'showfulltag' *\/$/;"	v
p_sh	src/option.h	/^EXTERN char_u	*p_sh;		\/* 'shell' *\/$/;"	v
p_shcf	src/option.h	/^EXTERN char_u	*p_shcf;	\/* 'shellcmdflag' *\/$/;"	v
p_shm	src/option.h	/^EXTERN char_u	*p_shm;		\/* 'shortmess' *\/$/;"	v
p_shq	src/option.h	/^EXTERN char_u	*p_shq;		\/* 'shellquote' *\/$/;"	v
p_si	src/option.c	/^static int	p_si;$/;"	v	file:
p_siso	src/option.h	/^EXTERN long	p_siso;		\/* 'sidescrolloff' *\/$/;"	v
p_sj	src/option.h	/^EXTERN long	p_sj;		\/* 'scrolljump' *\/$/;"	v
p_slm	src/option.h	/^EXTERN char_u	*p_slm;		\/* 'selectmode' *\/$/;"	v
p_slm_values	src/option.c	/^static char *(p_slm_values[]) = {"mouse", "key", "cmd", NULL};$/;"	v	file:
p_sm	src/option.h	/^EXTERN int	p_sm;		\/* 'showmatch' *\/$/;"	v
p_smc	src/option.c	/^static long	p_smc;$/;"	v	file:
p_smd	src/option.h	/^EXTERN int	p_smd;		\/* 'showmode' *\/$/;"	v
p_sn	src/option.c	/^static int	p_sn;$/;"	v	file:
p_so	src/option.h	/^EXTERN long	p_so;		\/* 'scrolloff' *\/$/;"	v
p_sol	src/option.h	/^EXTERN int	p_sol;		\/* 'startofline' *\/$/;"	v
p_sp	src/option.h	/^EXTERN char_u	*p_sp;		\/* 'shellpipe' *\/$/;"	v
p_spc	src/option.c	/^static char_u	*p_spc;$/;"	v	file:
p_spf	src/option.c	/^static char_u	*p_spf;$/;"	v	file:
p_spl	src/option.c	/^static char_u	*p_spl;$/;"	v	file:
p_spr	src/option.h	/^EXTERN int	p_spr;		\/* 'splitright' *\/$/;"	v
p_sps	src/option.h	/^EXTERN char_u	*p_sps;		\/* 'spellsuggest' *\/$/;"	v
p_sr	src/option.h	/^EXTERN int	p_sr;		\/* 'shiftround' *\/$/;"	v
p_srr	src/option.h	/^EXTERN char_u	*p_srr;		\/* 'shellredir' *\/$/;"	v
p_ss	src/option.h	/^EXTERN long	p_ss;		\/* 'sidescroll' *\/$/;"	v
p_ssl	src/option.h	/^EXTERN int	p_ssl;		\/* 'shellslash' *\/$/;"	v
p_ssop	src/option.h	/^EXTERN char_u	*p_ssop;	\/* 'sessionoptions' *\/$/;"	v
p_ssop_values	src/option.h	/^static char *(p_ssop_values[]) = {"buffers", "winpos", "resize", "winsize",$/;"	v
p_st	src/option.h	/^EXTERN long	p_st;		\/* 'shelltype' *\/$/;"	v
p_sta	src/option.h	/^EXTERN int	p_sta;		\/* 'smarttab' *\/$/;"	v
p_stal	src/option.h	/^EXTERN long	p_stal;		\/* 'showtabline' *\/$/;"	v
p_stl	src/option.h	/^EXTERN char_u	*p_stl;		\/* 'statusline' *\/$/;"	v
p_stmp	src/option.h	/^EXTERN int	p_stmp;		\/* 'shelltemp' *\/$/;"	v
p_sts	src/option.c	/^static long	p_sts;$/;"	v	file:
p_sts_nopaste	src/option.c	/^static long	p_sts_nopaste;$/;"	v	file:
p_su	src/option.h	/^EXTERN char_u	*p_su;		\/* 'suffixes' *\/$/;"	v
p_sua	src/option.c	/^static char_u	*p_sua;$/;"	v	file:
p_sw	src/option.c	/^static long	p_sw;$/;"	v	file:
p_swb	src/option.h	/^EXTERN char_u	*p_swb;		\/* 'switchbuf' *\/$/;"	v
p_swb_values	src/option.h	/^static char *(p_swb_values[]) = {"useopen", "usetab", "split", "newtab", NULL};$/;"	v
p_swf	src/option.c	/^static int	p_swf;$/;"	v	file:
p_sws	src/option.h	/^EXTERN char_u	*p_sws;		\/* 'swapsync' *\/$/;"	v
p_sxq	src/option.h	/^EXTERN char_u	*p_sxq;		\/* 'shellxquote' *\/$/;"	v
p_syn	src/option.c	/^static char_u	*p_syn;$/;"	v	file:
p_ta	src/option.h	/^EXTERN int	p_ta;		\/* 'textauto' *\/$/;"	v
p_tags	src/option.h	/^EXTERN char_u	*p_tags;	\/* 'tags' *\/$/;"	v
p_tal	src/option.h	/^EXTERN char_u	*p_tal;		\/* 'tabline' *\/$/;"	v
p_tbi	src/option.h	/^EXTERN int	p_tbi;		\/* 'ttybuiltin' *\/$/;"	v
p_tbidi	src/option.h	/^EXTERN int	p_tbidi;	\/* 'termbidi' *\/$/;"	v
p_tbis	src/option.h	/^EXTERN char_u	*p_tbis;	\/* 'toolbariconsize' *\/$/;"	v
p_tbis_values	src/option.h	/^static char *(p_tbis_values[]) = {"tiny", "small", "medium", "large", NULL};$/;"	v
p_tbs	src/option.h	/^EXTERN int	p_tbs;		\/* 'tagbsearch' *\/$/;"	v
p_tenc	src/option.h	/^EXTERN char_u	*p_tenc;	\/* 'termencoding' *\/$/;"	v
p_term	src/option.c	2855;"	d	file:
p_terse	src/option.h	/^EXTERN int	p_terse;	\/* 'terse' *\/$/;"	v
p_tf	src/option.h	/^EXTERN int	p_tf;		\/* 'ttyfast' *\/$/;"	v
p_tgst	src/option.h	/^EXTERN int	p_tgst;		\/* 'tagstack' *\/$/;"	v
p_timeout	src/option.h	/^EXTERN int	p_timeout;	\/* 'timeout' *\/$/;"	v
p_title	src/option.h	/^EXTERN int	p_title;	\/* 'title' *\/$/;"	v
p_titlelen	src/option.h	/^EXTERN long	p_titlelen;	\/* 'titlelen' *\/$/;"	v
p_titleold	src/option.h	/^EXTERN char_u	*p_titleold;	\/* 'titleold' *\/$/;"	v
p_titlestring	src/option.h	/^EXTERN char_u	*p_titlestring;	\/* 'titlestring' *\/$/;"	v
p_tl	src/option.h	/^EXTERN long	p_tl;		\/* 'taglength' *\/$/;"	v
p_tm	src/option.h	/^EXTERN long	p_tm;		\/* 'timeoutlen' *\/$/;"	v
p_to	src/option.h	/^EXTERN int	p_to;		\/* 'tildeop' *\/$/;"	v
p_toolbar	src/option.h	/^EXTERN char_u	*p_toolbar;	\/* 'toolbar' *\/$/;"	v
p_toolbar_values	src/option.h	/^static char *(p_toolbar_values[]) = {"text", "icons", "tooltips", "horiz", NULL};$/;"	v
p_tpm	src/option.h	/^EXTERN long	p_tpm;		\/* 'tabpagemax' *\/$/;"	v
p_tr	src/option.h	/^EXTERN int	p_tr;		\/* 'tagrelative' *\/$/;"	v
p_ts	src/option.c	/^static long	p_ts;$/;"	v	file:
p_tsr	src/option.h	/^EXTERN char_u	*p_tsr;		\/* 'thesaurus' *\/$/;"	v
p_ttimeout	src/option.h	/^EXTERN int	p_ttimeout;	\/* 'ttimeout' *\/$/;"	v
p_ttm	src/option.h	/^EXTERN long	p_ttm;		\/* 'ttimeoutlen' *\/$/;"	v
p_ttym	src/option.h	/^EXTERN char_u	*p_ttym;	\/* 'ttymouse' *\/$/;"	v
p_ttym_values	src/option.h	/^static char *(p_ttym_values[]) = {"xterm", "xterm2", "dec", "netterm", "jsbterm", "pterm", NULL};$/;"	v
p_ttyscroll	src/option.h	/^EXTERN long	p_ttyscroll;	\/* 'ttyscroll' *\/$/;"	v
p_tw	src/option.c	/^static long	p_tw;$/;"	v	file:
p_tw_nobin	src/option.c	/^static long	p_tw_nobin;$/;"	v	file:
p_tw_nopaste	src/option.c	/^static long	p_tw_nopaste;$/;"	v	file:
p_tx	src/option.c	/^static int	p_tx;$/;"	v	file:
p_uc	src/option.h	/^EXTERN long	p_uc;		\/* 'updatecount' *\/$/;"	v
p_udf	src/option.c	/^static int	p_udf;$/;"	v	file:
p_udir	src/option.h	/^EXTERN char_u	*p_udir;	\/* 'undodir' *\/$/;"	v
p_ul	src/option.h	/^EXTERN long	p_ul;		\/* 'undolevels' *\/$/;"	v
p_ur	src/option.h	/^EXTERN long	p_ur;		\/* 'undoreload' *\/$/;"	v
p_ut	src/option.h	/^EXTERN long	p_ut;		\/* 'updatetime' *\/$/;"	v
p_vb	src/option.h	/^EXTERN int	p_vb;		\/* 'visualbell' *\/$/;"	v
p_vdir	src/option.h	/^EXTERN char_u	*p_vdir;	\/* 'viewdir' *\/$/;"	v
p_ve	src/option.h	/^EXTERN char_u	*p_ve;		\/* 'virtualedit' *\/$/;"	v
p_ve_values	src/option.h	/^static char *(p_ve_values[]) = {"block", "insert", "all", "onemore", NULL};$/;"	v
p_verbose	src/option.h	/^EXTERN long	p_verbose;	\/* 'verbose' *\/$/;"	v
p_vfile	src/option.h	/^EXTERN char_u	*p_vfile;	\/* 'verbosefile' *\/$/;"	v
p_viminfo	src/option.h	/^EXTERN char_u	*p_viminfo;	\/* 'viminfo' *\/$/;"	v
p_vop	src/option.h	/^EXTERN char_u	*p_vop;		\/* 'viewoptions' *\/$/;"	v
p_wa	src/option.h	/^EXTERN int	p_wa;		\/* 'writeany' *\/$/;"	v
p_wak	src/option.h	/^EXTERN char_u	*p_wak;		\/* 'winaltkeys' *\/$/;"	v
p_wak_values	src/option.c	/^static char *(p_wak_values[]) = {"yes", "menu", "no", NULL};$/;"	v	file:
p_warn	src/option.h	/^EXTERN int	p_warn;		\/* 'warn' *\/$/;"	v
p_wb	src/option.h	/^EXTERN int	p_wb;		\/* 'writebackup' *\/$/;"	v
p_wc	src/option.h	/^EXTERN long	p_wc;		\/* 'wildchar' *\/$/;"	v
p_wcm	src/option.h	/^EXTERN long	p_wcm;		\/* 'wildcharm' *\/$/;"	v
p_wd	src/option.h	/^EXTERN long	p_wd;		\/* 'writedelay' *\/$/;"	v
p_wh	src/option.h	/^EXTERN long	p_wh;		\/* 'winheight' *\/$/;"	v
p_wig	src/option.h	/^EXTERN char_u	*p_wig;		\/* 'wildignore' *\/$/;"	v
p_wim	src/option.h	/^EXTERN char_u	*p_wim;		\/* 'wildmode' *\/$/;"	v
p_window	src/option.h	/^EXTERN long	p_window;	\/* 'window' *\/$/;"	v
p_wiv	src/option.h	/^EXTERN int	p_wiv;		\/* 'weirdinvert' *\/$/;"	v
p_wiw	src/option.h	/^EXTERN long	p_wiw;		\/* 'winwidth' *\/$/;"	v
p_wm	src/option.c	/^static long	p_wm;$/;"	v	file:
p_wm_nobin	src/option.c	/^static long	p_wm_nobin;$/;"	v	file:
p_wm_nopaste	src/option.c	/^static long	p_wm_nopaste;$/;"	v	file:
p_wmh	src/option.h	/^EXTERN long	p_wmh;		\/* 'winminheight' *\/$/;"	v
p_wmnu	src/option.h	/^EXTERN int	p_wmnu;		\/* 'wildmenu' *\/$/;"	v
p_wmw	src/option.h	/^EXTERN long	p_wmw;		\/* 'winminwidth' *\/$/;"	v
p_wop	src/option.h	/^EXTERN char_u	*p_wop;		\/* 'wildoptions' *\/$/;"	v
p_wop_values	src/option.c	/^static char *(p_wop_values[]) = {"tagfile", NULL};$/;"	v	file:
p_write	src/option.h	/^EXTERN int	p_write;	\/* 'write' *\/$/;"	v
p_ws	src/option.h	/^EXTERN int	p_ws;		\/* 'wrapscan' *\/$/;"	v
p_ww	src/option.h	/^EXTERN char_u	*p_ww;		\/* 'whichwrap' *\/$/;"	v
page_count	src/hardcopy.c	/^static int	page_count;$/;"	v	file:
panel_titles	src/gui_photon.c	/^static char	**panel_titles = NULL;$/;"	v	file:
paragraph_start	src/ops.c	/^paragraph_start(lnum)$/;"	f
parent	src/structs.h	/^    vimmenu_T	*parent;	    \/* Parent of menu *\/$/;"	m	struct:VimMenu	access:public
parentTrans	src/gui_athena.c	/^static XtTranslations	popupTrans, parentTrans, menuTrans, supermenuTrans;$/;"	v	file:
parent_class	src/gui_gtk_f.c	/^static GtkWidgetClass *parent_class = NULL;$/;"	v	file:
parent_class	src/gui_gtk_f.h	/^    GtkContainerClass parent_class;$/;"	m	struct:_GtkFormClass	access:public
parseMarker	src/fold.c	/^parseMarker(wp)$/;"	f	file:
parseMarker	src/fold.c	/^static void parseMarker __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
parse_builtin_tcap	src/term.c	/^parse_builtin_tcap(term)$/;"	f	file:
parse_builtin_tcap	src/term.c	/^static void parse_builtin_tcap __ARGS((char_u *s));$/;"	p	file:	signature:(char_u *s)
parse_command_name	src/main.c	/^parse_command_name(parmp)$/;"	f	file:
parse_command_name	src/main.c	/^static void parse_command_name __ARGS((mparm_T *parmp));$/;"	p	file:	signature:(mparm_T *parmp)
parse_compl_arg	src/ex_docmd.c	/^parse_compl_arg(value, vallen, complp, argt, compl_arg)$/;"	f
parse_list_options	src/hardcopy.c	/^parse_list_options(option_str, table, table_size)$/;"	f	file:
parse_list_options	src/hardcopy.c	/^static char_u *parse_list_options __ARGS((char_u *option_str, option_table_T *table, int table_size));$/;"	p	file:	signature:(char_u *option_str, option_table_T *table, int table_size)
parse_match	src/tag.c	/^parse_match(lbuf, tagp)$/;"	f	file:
parse_match	src/tag.c	/^static int parse_match __ARGS((char_u *lbuf, tagptrs_T *tagp));$/;"	p	file:	signature:(char_u *lbuf, tagptrs_T *tagp)
parse_printmbfont	src/hardcopy.c	/^parse_printmbfont()$/;"	f
parse_printoptions	src/hardcopy.c	/^parse_printoptions()$/;"	f
parse_shape_opt	src/misc2.c	/^parse_shape_opt(what)$/;"	f
parse_tag_line	src/tag.c	/^parse_tag_line(lbuf,$/;"	f	file:
parse_tag_line	src/tag.c	/^static int parse_tag_line __ARGS((char_u *lbuf, int is_etag, tagptrs_T *tagp));$/;"	p	file:	signature:(char_u *lbuf, int is_etag, tagptrs_T *tagp)
parse_tag_line	src/tag.c	/^static int parse_tag_line __ARGS((char_u *lbuf, tagptrs_T *tagp));$/;"	p	file:	signature:(char_u *lbuf, tagptrs_T *tagp)
parse_uri_list	src/gui_gtk_x11.c	/^parse_uri_list(int *count, char_u *data, int len)$/;"	f	file:	signature:(int *count, char_u *data, int len)
passwd_field	runtime/ftplugin/changelog.vim	/^  function! s:passwd_field(line, field)$/;"	f
password	src/blowfish.c	/^    char_u   password[64];$/;"	m	struct:__anon122	file:	access:public
paste#Paste	runtime/autoload/paste.vim	/^  func! paste#Paste()$/;"	f
paste#paste_cmd	runtime/autoload/paste.vim	/^  let paste#paste_cmd = {'n': ":call paste#Paste()<CR>"}$/;"	v
paste#paste_cmd	runtime/autoload/paste.vim	/^  let paste#paste_cmd = {'n': "\\"=@+.'xy'<CR>gPFx\\"_2x"}$/;"	v
paste#paste_cmd	runtime/autoload/paste.vim	/^  let paste#paste_cmd['i'] = 'x<BS><Esc>' . paste#paste_cmd['n'] . 'gi'$/;"	v
paste#paste_cmd	runtime/autoload/paste.vim	/^  let paste#paste_cmd['i'] = 'x<Esc>' . paste#paste_cmd['n'] . '"_s'$/;"	v
paste#paste_cmd	runtime/autoload/paste.vim	/^  let paste#paste_cmd['v'] = '"-c<Esc>' . paste#paste_cmd['n']$/;"	v
paste#paste_cmd	runtime/autoload/paste.vim	/^  let paste#paste_cmd['v'] = '"-c<Esc>gix<Esc>' . paste#paste_cmd['n'] . '"_x'$/;"	v
paste_option_changed	src/option.c	/^paste_option_changed()$/;"	f	file:
paste_option_changed	src/option.c	/^static void paste_option_changed __ARGS((void));$/;"	p	file:	signature:(void)
pat	src/fileio.c	/^    char_u	    *pat;		\/* pattern as typed (NULL when pattern$/;"	m	struct:AutoPat	file:	access:public
pat	src/search.c	/^    char_u	    *pat;	\/* the pattern (in allocated memory) or NULL *\/$/;"	m	struct:spat	file:	access:public
pat	src/tag.c	/^    char_u	*pat;		\/* the pattern *\/$/;"	m	struct:__anon29	file:	access:public
pat_T	src/tag.c	/^} pat_T;$/;"	t	typeref:struct:__anon29	file:
pat_has_uppercase	src/search.c	/^pat_has_uppercase(pat)$/;"	f
path	src/gui_at_fs.c	/^    char	*path;$/;"	m	struct:__anon114	file:	access:public
path_is_url	src/window.c	/^path_is_url(p)$/;"	f	file:
path_is_url	src/window.c	/^static int path_is_url __ARGS((char_u *p));$/;"	p	file:	signature:(char_u *p)
path_with_url	src/window.c	/^path_with_url(fname)$/;"	f
pathcmp	src/dosinst.c	/^pathcmp(char *p, int plen, char *q, int qlen)$/;"	f	file:	signature:(char *p, int plen, char *q, int qlen)
pathcmp	src/misc2.c	/^pathcmp(p, q, maxlen)$/;"	f
patlen	src/fileio.c	/^    int		    patlen;		\/* strlen() of pat *\/$/;"	m	struct:AutoPat	file:	access:public
pattern	runtime/syntax/cucumber.vim	/^function! s:pattern(key)$/;"	f
pattern	src/structs.h	/^    char_u	*pattern;   \/* pattern to highlight *\/$/;"	m	struct:matchitem	access:public
pause_time	src/ex_cmds2.c	/^static proftime_T pause_time;$/;"	v	file:
pax	src/blowfish.c	/^static UINT32_T pax[18];$/;"	v	file:
pb_count	src/memline.c	/^    short_u	pb_count;	\/* number of pointers in this block *\/$/;"	m	struct:pointer_block	file:	access:public
pb_count_max	src/memline.c	/^    short_u	pb_count_max;	\/* maximum value for pb_count *\/$/;"	m	struct:pointer_block	file:	access:public
pb_id	src/memline.c	/^    short_u	pb_id;		\/* ID for pointer block: PTR_ID *\/$/;"	m	struct:pointer_block	file:	access:public
pb_pointer	src/memline.c	/^    PTR_EN	pb_pointer[1];	\/* list of pointers to blocks (actually longer)$/;"	m	struct:pointer_block	file:	access:public
pc_attr	src/edit.c	/^static int  pc_attr;$/;"	v	file:
pc_bytes	src/edit.c	/^static char_u pc_bytes[2];		\/* saved bytes *\/$/;"	v	file:
pc_bytes	src/edit.c	/^static char_u pc_bytes[MB_MAXBYTES + 1]; \/* saved bytes *\/$/;"	v	file:
pc_col	src/edit.c	/^static int  pc_col;$/;"	v	file:
pc_row	src/edit.c	/^static int  pc_row;$/;"	v	file:
pc_status	src/edit.c	/^static int  pc_status;$/;"	v	file:
pchar	src/macros.h	16;"	d
pchar_cursor	src/misc1.c	/^pchar_cursor(c)$/;"	f
pe_bnum	src/memline.c	/^    blocknr_T	pe_bnum;	\/* block number *\/$/;"	m	struct:pointer_entry	file:	access:public
pe_line_count	src/memline.c	/^    linenr_T	pe_line_count;	\/* number of lines in this branch *\/$/;"	m	struct:pointer_entry	file:	access:public
pe_old_lnum	src/memline.c	/^    linenr_T	pe_old_lnum;	\/* lnum for this block (for recovery) *\/$/;"	m	struct:pointer_entry	file:	access:public
pe_page_count	src/memline.c	/^    int		pe_page_count;	\/* number of pages in block pe_bnum *\/$/;"	m	struct:pointer_entry	file:	access:public
peekchr	src/regexp.c	/^peekchr()$/;"	f	file:
peekchr	src/regexp.c	/^static int	peekchr __ARGS((void));$/;"	p	file:	signature:(void)
pending	src/structs.h	/^    int pending;		\/* error\/interrupt\/exception state *\/$/;"	m	struct:cleanup_stuff	access:public
pendingCommands	src/if_xcmdsrv.c	/^static PendingCommand *pendingCommands = NULL;$/;"	v	file:
percentage	src/structs.h	/^    int		percentage;	\/* percentage of cell for bar *\/$/;"	m	struct:cursor_entry	access:public
perlpath	runtime/ftplugin/perl.vim	/^	    let perlpath = system("perl -e 'print join(q\/,\/,@INC)'")$/;"	v
perlpath	runtime/ftplugin/perl.vim	/^	    let perlpath = system('perl -e "print join(q\/,\/,@INC)"')$/;"	v
perlpath	runtime/ftplugin/perl.vim	/^	let perlpath = ".,,"$/;"	v
perlpath	runtime/ftplugin/perl.vim	/^	let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
perlpath	src/Makefile	/^	perlpath=`.\/which.sh perl` && sed -e "s+\/usr\/bin\/perl+$$perlpath+" $(TOOLSSOURCE)\/efm_perl.pl >$(DEST_TOOLS)\/efm_perl.pl$/;"	m
permute_suffixes	runtime/syntax/hostconf.vim	/^function s:permute_suffixes(list)$/;"	f
perror	src/xxd/xxd.c	/^extern void perror __P((char *));$/;"	p	file:	signature:(char *)
pexpand_cmds	src/ex_cmds2.c	/^static char *pexpand_cmds[] = {$/;"	v	file:
pexpand_what	src/ex_cmds2.c	/^} pexpand_what;$/;"	v	typeref:enum:__anon64	file:
pfmain_syntax_init	runtime/syntax/pfmain.vim	/^		let pfmain_syntax_init = 1$/;"	v
pg_margin_bottom	src/gui_photon.c	/^static short pg_margin_left, pg_margin_right, pg_margin_top, pg_margin_bottom;$/;"	v	file:
pg_margin_left	src/gui_photon.c	/^static short pg_margin_left, pg_margin_right, pg_margin_top, pg_margin_bottom;$/;"	v	file:
pg_margin_right	src/gui_photon.c	/^static short pg_margin_left, pg_margin_right, pg_margin_top, pg_margin_bottom;$/;"	v	file:
pg_margin_top	src/gui_photon.c	/^static short pg_margin_left, pg_margin_right, pg_margin_top, pg_margin_bottom;$/;"	v	file:
php_alt_assignByReference	runtime/syntax/php.vim	/^    let php_alt_assignByReference = 1$/;"	v
php_alt_comparisons	runtime/syntax/php.vim	/^    let php_alt_comparisons = 1$/;"	v
php_parent_error_close	runtime/syntax/php.vim	/^  let php_parent_error_close=1$/;"	v
php_parent_error_open	runtime/syntax/php.vim	/^  let php_parent_error_open=1$/;"	v
php_special_functions	runtime/syntax/php.vim	/^    let php_special_functions = 1$/;"	v
php_sync_method	runtime/indent/php.vim	/^let php_sync_method = 0$/;"	v
php_sync_method	runtime/syntax/php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	runtime/syntax/php.vim	/^    let php_sync_method=php_minlines$/;"	v
phpcomplete#CompletePHP	runtime/autoload/phpcomplete.vim	/^function! phpcomplete#CompletePHP(findstart, base)$/;"	f
phpcomplete#GetClassContents	runtime/autoload/phpcomplete.vim	/^function! phpcomplete#GetClassContents(file, name) " {{{$/;"	f
phpcomplete#GetClassLocation	runtime/autoload/phpcomplete.vim	/^function! phpcomplete#GetClassLocation(classname) " {{{$/;"	f
phpcomplete#GetClassName	runtime/autoload/phpcomplete.vim	/^function! phpcomplete#GetClassName(scontext) " {{{$/;"	f
phpcomplete#LoadData	runtime/autoload/phpcomplete.vim	/^function! phpcomplete#LoadData() " {{{$/;"	f
pid	src/if_cscope.h	/^    DWORD	    pid;	\/* PID of the connected cscope process. *\/$/;"	m	struct:csi	access:public
pid	src/if_cscope.h	/^    pid_t	    pid;	\/* PID of the connected cscope process. *\/$/;"	m	struct:csi	access:public
pid_t	src/os_os2_cfg.h	70;"	d
pixels_to_points	src/gui_w48.c	/^pixels_to_points(int pixels, int vertical)$/;"	f	file:	signature:(int pixels, int vertical)
pixmap_data	src/gui_xmebwp.h	/^    String pixmap_data;$/;"	m	struct:_XmEnhancedButtonPart	access:public
pixmap_depth	src/gui_xmebwp.h	/^    int pixmap_depth;$/;"	m	struct:_XmEnhancedButtonPart	access:public
pixmap_file	src/gui_xmebwp.h	/^    String pixmap_file;$/;"	m	struct:_XmEnhancedButtonPart	access:public
pixmap_height	src/gui_xmebwp.h	/^    Dimension pixmap_height;$/;"	m	struct:_XmEnhancedButtonPart	access:public
pixmap_width	src/gui_xmebwp.h	/^    Dimension pixmap_width;$/;"	m	struct:_XmEnhancedButtonPart	access:public
pixval	src/gui.h	/^    int		pixval;		\/* pixel count of value *\/$/;"	m	struct:GuiScrollbar	access:public
plain_mf_macros	runtime/syntax/mf.vim	/^  let plain_mf_macros = 1 " Set this to '0' if your source gets too colourful$/;"	v
plain_mf_macros	runtime/syntax/mp.vim	/^let plain_mf_macros = 0 " plain.mf has no special meaning for MetaPost$/;"	v
plain_mp_macros	runtime/syntax/mp.vim	/^  let plain_mp_macros = 1 " Set this to '0' if your source gets too colourful$/;"	v
plain_vgetc	src/getchar.c	/^plain_vgetc()$/;"	f
plaintxt	src/blowfish.c	/^    char_u   plaintxt[9];$/;"	m	struct:__anon122	file:	access:public
pldebug	src/integration.c	/^pldebug($/;"	f	signature:( char *fmt, ...)
pldebug	src/integration.c	/^static void pldebug(char *, ...);$/;"	p	file:	signature:(char *, ...)
plines	src/misc1.c	/^plines(lnum)$/;"	f
plines_m_win	src/misc1.c	/^plines_m_win(wp, first, last)$/;"	f
plines_nofill	src/misc1.c	/^plines_nofill(lnum)$/;"	f
plines_win	src/misc1.c	/^plines_win(wp, lnum, winheight)$/;"	f
plines_win_col	src/misc1.c	/^plines_win_col(wp, lnum, column)$/;"	f
plines_win_nofill	src/misc1.c	/^plines_win_nofill(wp, lnum, winheight)$/;"	f
plines_win_nofold	src/misc1.c	/^plines_win_nofold(wp, lnum)$/;"	f
plot_rectangle	src/gui_riscos.c	/^plot_rectangle(plot, colour, minx, miny, maxx, maxy)$/;"	f
pmain	src/os_w32exe.c	/^static int (_cdecl *pmain)(int, char **);$/;"	v	file:
pmain	src/os_win16.c	/^static int (_cdecl *pmain)(int, char **);$/;"	v	file:
pointerEvent	src/gui_beval.c	/^pointerEvent(beval, event)$/;"	f	file:
pointerEvent	src/gui_beval.c	/^static void pointerEvent __ARGS((BalloonEval *, XEvent *));$/;"	p	file:	signature:(BalloonEval *, XEvent *)
pointerEventEH	src/gui_beval.c	/^pointerEventEH(w, client_data, event, unused)$/;"	f	file:
pointerEventEH	src/gui_beval.c	/^static void pointerEventEH __ARGS((Widget, XtPointer, XEvent *, Boolean *));$/;"	p	file:	signature:(Widget, XtPointer, XEvent *, Boolean *)
pointer_block	src/memline.c	/^struct pointer_block$/;"	s	file:
pointer_block::pb_count	src/memline.c	/^    short_u	pb_count;	\/* number of pointers in this block *\/$/;"	m	struct:pointer_block	file:	access:public
pointer_block::pb_count_max	src/memline.c	/^    short_u	pb_count_max;	\/* maximum value for pb_count *\/$/;"	m	struct:pointer_block	file:	access:public
pointer_block::pb_id	src/memline.c	/^    short_u	pb_id;		\/* ID for pointer block: PTR_ID *\/$/;"	m	struct:pointer_block	file:	access:public
pointer_block::pb_pointer	src/memline.c	/^    PTR_EN	pb_pointer[1];	\/* list of pointers to blocks (actually longer)$/;"	m	struct:pointer_block	file:	access:public
pointer_entry	src/memline.c	/^struct pointer_entry$/;"	s	file:
pointer_entry::pe_bnum	src/memline.c	/^    blocknr_T	pe_bnum;	\/* block number *\/$/;"	m	struct:pointer_entry	file:	access:public
pointer_entry::pe_line_count	src/memline.c	/^    linenr_T	pe_line_count;	\/* number of lines in this branch *\/$/;"	m	struct:pointer_entry	file:	access:public
pointer_entry::pe_old_lnum	src/memline.c	/^    linenr_T	pe_old_lnum;	\/* lnum for this block (for recovery) *\/$/;"	m	struct:pointer_entry	file:	access:public
pointer_entry::pe_page_count	src/memline.c	/^    int		pe_page_count;	\/* number of pages in block pe_bnum *\/$/;"	m	struct:pointer_entry	file:	access:public
pointer_event	src/gui_beval.c	/^pointer_event(BalloonEval *beval, int x, int y, unsigned state)$/;"	f	file:	signature:(BalloonEval *beval, int x, int y, unsigned state)
pointer_event	src/gui_beval.c	/^static void pointer_event __ARGS((BalloonEval *, int, int, unsigned));$/;"	p	file:	signature:(BalloonEval *, int, int, unsigned)
pointer_hidden	src/gui.h	/^    int		pointer_hidden;	    \/* Is the mouse pointer hidden? *\/$/;"	m	struct:Gui	access:public
points_to_pixels	src/gui_mac.c	/^points_to_pixels(char_u *str, char_u **end, int vertical)$/;"	f	file:	signature:(char_u *str, char_u **end, int vertical)
points_to_pixels	src/os_mswin.c	/^points_to_pixels(char_u *str, char_u **end, int vertical, long_i pprinter_dc)$/;"	f	file:	signature:(char_u *str, char_u **end, int vertical, long_i pprinter_dc)
polecenia	runtime/tutor/tutor.pl	/^  polecenia:$/;"	l
poll	src/auto/osdef.h	/^extern int	poll __ARGS((struct pollfd *, long, int));$/;"	p	signature:(struct pollfd *, long, int)
pop	src/hangulin.c	44;"	d	file:
pop_current_state	src/syntax.c	/^pop_current_state()$/;"	f	file:
pop_current_state	src/syntax.c	/^static void pop_current_state __ARGS((void));$/;"	p	file:	signature:(void)
pop_showcmd	src/normal.c	/^pop_showcmd()$/;"	f
popupTrans	src/gui_athena.c	/^static XtTranslations	popupTrans, parentTrans, menuTrans, supermenuTrans;$/;"	v	file:
popup_gvim_path	src/uninstal.c	/^popup_gvim_path(char *buf)$/;"	f	file:	signature:(char *buf)
popup_menu_position_func	src/gui_gtk.c	/^popup_menu_position_func(GtkMenu *menu UNUSED,$/;"	f	file:	signature:(GtkMenu *menu UNUSED, gint *x, gint *y, gboolean *push_in UNUSED, gpointer user_data UNUSED)
popup_mode_name	src/menu.c	/^popup_mode_name(name, idx)$/;"	f	file:
popup_mode_name	src/menu.c	/^static char_u *popup_mode_name __ARGS((char_u *name, int idx));$/;"	p	file:	signature:(char_u *name, int idx)
popup_mouse_pos	src/gui_gtk.c	/^static int popup_mouse_pos;$/;"	v	file:
port	src/if_mzsch.c	/^    Scheme_Object   *port;$/;"	m	struct:__anon27	file:	access:public
pos	src/regexp.c	/^	lpos_T	pos;	\/* reginput pos, for multi-line regexp *\/$/;"	m	union:__anon99::__anon100	file:	access:public
pos	src/regexp.c	/^	lpos_T	pos;$/;"	m	union:__anon101::__anon102	file:	access:public
pos2off	src/netbeans.c	/^pos2off(buf_T *buf, pos_T *pos)$/;"	f	file:	signature:(buf_T *buf, pos_T *pos)
pos2off	src/netbeans.c	/^static long pos2off __ARGS((buf_T *, pos_T *));$/;"	p	file:	signature:(buf_T *, pos_T *)
pos_T	src/structs.h	/^} pos_T;$/;"	t	typeref:struct:__anon34
position_cursor	runtime/ftplugin/changelog.vim	/^  function! s:position_cursor()$/;"	f
post	src/testdir/test49.vim	/^		let post = 0$/;"	v
post	src/testdir/test49.vim	/^	    let post = 0$/;"	v
postpone_keycommand	src/netbeans.c	/^postpone_keycommand(char_u *keystr)$/;"	f	file:	signature:(char_u *keystr)
postpone_keycommand	src/netbeans.c	/^static void postpone_keycommand __ARGS((char_u *keystr));$/;"	p	file:	signature:(char_u *keystr)
postponed_mouseshape	src/globals.h	/^EXTERN int	postponed_mouseshape INIT(= FALSE); \/* postponed updating the$/;"	v
postponed_split	src/globals.h	/^EXTERN int	postponed_split INIT(= 0);  \/* for CTRL-W CTRL-] command *\/$/;"	v
postponed_split_flags	src/globals.h	/^EXTERN int	postponed_split_flags INIT(= 0);  \/* args for win_split() *\/$/;"	v
postponed_split_tab	src/globals.h	/^EXTERN int	postponed_split_tab INIT(= 0);  \/* cmdmod.tab *\/$/;"	v
postscr_level	runtime/syntax/postscr.vim	/^  let postscr_level = 2$/;"	v
ppath	src/if_cscope.h	/^    char *	    ppath;	\/* path to prepend (the -P option) *\/$/;"	m	struct:csi	access:public
ppwiz_highlight_defs	runtime/syntax/ppwiz.vim	/^    let ppwiz_highlight_defs = 1$/;"	v
ppwiz_with_html	runtime/syntax/ppwiz.vim	/^    let ppwiz_with_html = 1$/;"	v
pre_commands	src/main.c	/^    char_u	*pre_commands[MAX_ARG_CMDS]; \/* commands from --cmd argument *\/$/;"	m	struct:__anon9	file:	access:public
pre_whitesp	src/ops.c	/^    int		pre_whitesp;	\/* screen cols of ws before block *\/$/;"	m	struct:block_def	file:	access:public
pre_whitesp_c	src/ops.c	/^    int		pre_whitesp_c;	\/* chars of ws before block *\/$/;"	m	struct:block_def	file:	access:public
prechar	src/structs.h	/^    int		prechar;	\/* prefix character (optional, always 'g') *\/$/;"	m	struct:cmdarg_S	access:public
preedit_end_col	src/globals.h	/^EXTERN colnr_T		preedit_end_col INIT(= MAXCOL);$/;"	v
preedit_get_status	src/mbyte.c	/^preedit_get_status(void)$/;"	f	signature:(void)
preedit_is_active	src/mbyte.c	/^static int preedit_is_active   = FALSE;$/;"	v	file:
preedit_start_col	src/globals.h	/^EXTERN colnr_T		preedit_start_col INIT(= MAXCOL);$/;"	v
prefix	src/auto/config.mk	/^prefix		= \/usr\/local$/;"	m
prefix	src/quickfix.c	/^    char_u	    prefix;	\/* prefix of this format line: *\/$/;"	m	struct:efm_S	file:	access:public
prep_exarg	src/fileio.c	/^prep_exarg(eap, buf)$/;"	f
prep_redo	src/normal.c	/^prep_redo(regname, num, cmd1, cmd2, cmd3, cmd4, cmd5)$/;"	f	file:
prep_redo	src/normal.c	/^static void	prep_redo __ARGS((int regname, long, int, int, int, int, int));$/;"	p	file:	signature:(int regname, long, int, int, int, int, int)
prep_redo_cmd	src/normal.c	/^prep_redo_cmd(cap)$/;"	f	file:
prep_redo_cmd	src/normal.c	/^static void	prep_redo_cmd __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
prepare_crypt_read	src/fileio.c	/^prepare_crypt_read(fp)$/;"	f
prepare_crypt_write	src/fileio.c	/^prepare_crypt_write(buf, lenp)$/;"	f
prepare_pats	src/tag.c	/^prepare_pats(pats, has_re)$/;"	f	file:
prepare_pats	src/tag.c	/^static void prepare_pats __ARGS((pat_T *pats, int has_re));$/;"	p	file:	signature:(pat_T *pats, int has_re)
prepare_search_hl	src/screen.c	/^prepare_search_hl(wp, lnum)$/;"	f	file:
prepare_search_hl	src/screen.c	/^static void prepare_search_hl __ARGS((win_T *wp, linenr_T lnum));$/;"	p	file:	signature:(win_T *wp, linenr_T lnum)
prepare_server	src/main.c	/^prepare_server(parmp)$/;"	f	file:
prepare_server	src/main.c	/^static void prepare_server __ARGS((mparm_T *parmp));$/;"	p	file:	signature:(mparm_T *parmp)
prepare_tagpreview	src/ex_cmds.c	/^prepare_tagpreview(undo_sync)$/;"	f
prepare_to_exit	src/misc1.c	/^prepare_to_exit()$/;"	f
prepare_viminfo_history	src/ex_getln.c	/^prepare_viminfo_history(asklen)$/;"	f
prepare_vimvar	src/eval.c	/^prepare_vimvar(idx, save_tv)$/;"	f	file:
prepare_vimvar	src/eval.c	/^static void prepare_vimvar __ARGS((int idx, typval_T *save_tv));$/;"	p	file:	signature:(int idx, typval_T *save_tv)
preprocs_left	src/ops.c	/^preprocs_left()$/;"	f
present	src/structs.h	/^    int		present;$/;"	m	struct:__anon58	access:public
preserve_exit	src/misc1.c	/^preserve_exit()$/;"	f
prev	src/netbeans.c	/^    struct cmdqueue *prev;$/;"	m	struct:cmdqueue	typeref:struct:cmdqueue::cmdqueue	file:	access:public
prev	src/netbeans.c	/^    struct keyqueue *prev;$/;"	m	struct:keyqueue	typeref:struct:keyqueue::keyqueue	file:	access:public
prev	src/structs.h	/^    signlist_T  *prev;		\/* previous entry -- for easy reordering *\/$/;"	m	struct:signlist	access:public
prev	src/vim.h	/^    pos_T	prev;		\/* Previous position *\/$/;"	m	struct:VimClipboard	access:public
prev_at_start	src/regexp.c	/^static int	prev_at_start;  \/* True when on the second character *\/$/;"	v	file:
prev_bg_color	src/gui_x11.c	/^static guicolor_T	prev_bg_color = INVALCOLOR;$/;"	v	file:
prev_ccline	src/ex_getln.c	/^static struct cmdline_info  prev_ccline;$/;"	v	typeref:struct:cmdline_info	file:
prev_ccline_used	src/ex_getln.c	/^static int		    prev_ccline_used = FALSE;$/;"	v	file:
prev_count0	src/structs.h	/^    long	prev_count0;	\/* ca.count0 saved for K_CURSORHOLD *\/$/;"	m	struct:oparg_S	access:public
prev_dir	src/ex_docmd.c	/^static char_u	*prev_dir = NULL;$/;"	v	file:
prev_fg_color	src/gui_x11.c	/^static guicolor_T	prev_fg_color = INVALCOLOR;$/;"	v	file:
prev_lnum	src/fold.c	/^static linenr_T prev_lnum = 0;$/;"	v	file:
prev_lnum_lvl	src/fold.c	/^static int prev_lnum_lvl = -1;$/;"	v	file:
prev_opcount	src/structs.h	/^    long	prev_opcount;	\/* ca.opcount saved for K_CURSORHOLD *\/$/;"	m	struct:oparg_S	access:public
prev_sp_color	src/gui_x11.c	/^static guicolor_T	prev_sp_color = INVALCOLOR;$/;"	v	file:
prev_timeval	src/main.c	/^static struct timeval	prev_timeval;$/;"	v	typeref:struct:timeval	file:
prev_which_scrollbars	src/gui.c	/^static int	prev_which_scrollbars[3];$/;"	v	file:
prev_wrap	src/gui.h	/^    int		prev_wrap;	    \/* For updating the horizontal scrollbar *\/$/;"	m	struct:Gui	access:public
prevchr	src/regexp.c	/^static int	prevchr;$/;"	v	file:
prevchr_len	src/regexp.c	/^static int	prevchr_len;	\/* byte length of previous char *\/$/;"	v	file:
prevcmd	src/ex_cmds.c	/^static char_u	*prevcmd = NULL;	\/* the previous command *\/$/;"	v	file:
prevgood	runtime/indent/bst.vim	/^function! s:prevgood(lnum)$/;"	f
prevgood	runtime/indent/cobol.vim	/^function! s:prevgood(lnum)$/;"	f
previous_funccal	src/eval.c	/^funccall_T *previous_funccal = NULL;$/;"	v
prevnonblanknoncomment	runtime/indent/css.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
prevnonblanknoncomment	runtime/indent/ld.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
prevnonblanknoncomment	runtime/indent/tcl.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
prevprevchr	src/regexp.c	/^static int	prevprevchr;$/;"	v	file:
prevwin	src/globals.h	/^EXTERN win_T	*prevwin INIT(= NULL);	\/* previous window *\/$/;"	v
prim	src/if_mzsch.c	/^    Scheme_Closed_Prim	*prim;$/;"	m	struct:__anon26	file:	access:public
primitive	src/gui_xmebwp.h	/^    XmPrimitivePart primitive;$/;"	m	struct:_XmEnhancedButtonRec	access:public
primitive_class	src/gui_xmebwp.h	/^    XmPrimitiveClassPart primitive_class;$/;"	m	struct:__anon92	access:public
prims	src/if_mzsch.c	/^static Vim_Prim prims[]=$/;"	v	file:
print_cmd_line_help	src/dosinst.c	/^print_cmd_line_help(void)$/;"	f	file:	signature:(void)
print_line	src/ex_cmds.c	/^print_line(lnum, use_number, list)$/;"	f
print_line_no_prefix	src/ex_cmds.c	/^print_line_no_prefix(lnum, use_number, list)$/;"	f
print_pos	src/hardcopy.c	/^    int		print_pos;	    \/* virtual column for computing TABs *\/$/;"	m	struct:__anon126	file:	access:public
print_read_msg	src/netbeans.c	/^print_read_msg(buf)$/;"	f	file:
print_read_msg	src/netbeans.c	/^static void print_read_msg __ARGS((nbbuf_T *buf));$/;"	p	file:	signature:(nbbuf_T *buf)
print_save_msg	src/netbeans.c	/^print_save_msg(buf, nchars)$/;"	f	file:
print_save_msg	src/netbeans.c	/^static void print_save_msg __ARGS((nbbuf_T *buf, off_t nchars));$/;"	p	file:	signature:(nbbuf_T *buf, off_t nchars)
print_windows_error	src/gui_w48.c	/^print_windows_error(void)$/;"	f	file:	signature:(void)
printdigraph	src/digraph.c	/^printdigraph(dp)$/;"	f	file:
printdigraph	src/digraph.c	/^static void printdigraph __ARGS((digr_T *));$/;"	p	file:	signature:(digr_T *)
printer_opts	src/globals.h	/^EXTERN option_table_T printer_opts[OPT_PRINT_NUM_OPTIONS]$/;"	v
printer_page_num	src/globals.h	/^EXTERN linenr_T printer_page_num;$/;"	v
priority	src/structs.h	/^    int		priority;	    \/* Menu order priority *\/$/;"	m	struct:VimMenu	access:public
priority	src/structs.h	/^    int		priority;   \/* match priority *\/$/;"	m	struct:matchitem	access:public
process_compflags	src/spell.c	/^process_compflags(spin, aff, compflags)$/;"	f	file:
process_compflags	src/spell.c	/^static void process_compflags __ARGS((spellinfo_T *spin, afffile_T *aff, char_u *compflags));$/;"	p	file:	signature:(spellinfo_T *spin, afffile_T *aff, char_u *compflags)
process_env	src/main.c	/^process_env(env, is_viminit)$/;"	f
process_event	src/gui_riscos.c	/^process_event(event, block)$/;"	f
process_menuItem	src/integration.c	/^process_menuItem($/;"	f	file:	signature:( char *cmd)
process_menuItem	src/integration.c	/^static void process_menuItem(char *);$/;"	p	file:	signature:(char *)
process_message	src/gui_w48.c	/^process_message(void)$/;"	f	file:	signature:(void)
process_motion_notify	src/gui_gtk_x11.c	/^process_motion_notify(int x, int y, GdkModifierType state)$/;"	f	file:	signature:(int x, int y, GdkModifierType state)
process_still_running	src/memline.c	/^static int process_still_running;$/;"	v	file:
process_toolbarButton	src/integration.c	/^process_toolbarButton($/;"	f	file:	signature:( char *cmd)
process_toolbarButton	src/integration.c	/^static void process_toolbarButton(char *);$/;"	p	file:	signature:(char *)
prof_child	src/eval.c	/^    proftime_T	prof_child;	\/* time spent in a child *\/$/;"	m	struct:funccall_S	file:	access:public
prof_child_enter	src/eval.c	/^prof_child_enter(tm)$/;"	f
prof_child_exit	src/eval.c	/^prof_child_exit(tm)$/;"	f
prof_def_func	src/ex_cmds2.c	/^prof_def_func()$/;"	f
prof_func_line	src/eval.c	/^prof_func_line(fd, count, total, self, prefer_self)$/;"	f	file:
prof_func_line	src/eval.c	/^static void prof_func_line __ARGS((FILE *fd, int count, proftime_T *total, proftime_T *self, int prefer_self));$/;"	p	file:	signature:(FILE *fd, int count, proftime_T *total, proftime_T *self, int prefer_self)
prof_ga	src/ex_cmds2.c	/^static garray_T prof_ga = {0, 0, sizeof(struct debuggy), 4, NULL};$/;"	v	file:
prof_inchar_enter	src/ex_cmds2.c	/^prof_inchar_enter()$/;"	f
prof_inchar_exit	src/ex_cmds2.c	/^prof_inchar_exit()$/;"	f
prof_self_cmp	src/eval.c	/^	prof_self_cmp __ARGS((const void *s1, const void *s2));$/;"	p	file:	signature:(const void *s1, const void *s2)
prof_self_cmp	src/eval.c	/^prof_self_cmp(s1, s2)$/;"	f	file:
prof_sort_list	src/eval.c	/^prof_sort_list(fd, sorttab, st_len, title, prefer_self)$/;"	f	file:
prof_sort_list	src/eval.c	/^static void prof_sort_list __ARGS((FILE *fd, ufunc_T **sorttab, int st_len, char *title, int prefer_self));$/;"	p	file:	signature:(FILE *fd, ufunc_T **sorttab, int st_len, char *title, int prefer_self)
prof_total_cmp	src/eval.c	/^	prof_total_cmp __ARGS((const void *s1, const void *s2));$/;"	p	file:	signature:(const void *s1, const void *s2)
prof_total_cmp	src/eval.c	/^prof_total_cmp(s1, s2)$/;"	f	file:
prof_wait_time	src/ex_cmds2.c	/^static proftime_T prof_wait_time;$/;"	v	file:
profile_add	src/ex_cmds2.c	/^profile_add(tm, tm2)$/;"	f
profile_cmp	src/ex_cmds2.c	/^profile_cmp(tm1, tm2)$/;"	f
profile_dump	src/ex_cmds2.c	/^profile_dump()$/;"	f
profile_end	src/ex_cmds2.c	/^profile_end(tm)$/;"	f
profile_equal	src/ex_cmds2.c	/^profile_equal(tm1, tm2)$/;"	f
profile_fname	src/ex_cmds2.c	/^static char_u	*profile_fname = NULL;$/;"	v	file:
profile_get_wait	src/ex_cmds2.c	/^profile_get_wait(tm)$/;"	f
profile_msg	src/ex_cmds2.c	/^profile_msg(tm)$/;"	f
profile_passed_limit	src/ex_cmds2.c	/^profile_passed_limit(tm)$/;"	f
profile_self	src/ex_cmds2.c	/^profile_self(self, total, children)$/;"	f
profile_setlimit	src/ex_cmds2.c	/^profile_setlimit(msec, tm)$/;"	f
profile_start	src/ex_cmds2.c	/^profile_start(tm)$/;"	f
profile_sub	src/ex_cmds2.c	/^profile_sub(tm, tm2)$/;"	f
profile_sub_wait	src/ex_cmds2.c	/^profile_sub_wait(tm, tma)$/;"	f
profile_zero	src/ex_cmds2.c	/^profile_zero(tm)$/;"	f
proftime_T	src/vim.h	/^typedef LARGE_INTEGER proftime_T;$/;"	t
proftime_T	src/vim.h	/^typedef int proftime_T;	    \/* dummy for function prototypes *\/$/;"	t
proftime_T	src/vim.h	/^typedef struct timeval proftime_T;$/;"	t	typeref:struct:timeval
prog	src/quickfix.c	/^    regprog_T	    *prog;	\/* pre-formatted part of 'errorformat' *\/$/;"	m	struct:efm_S	file:	access:public
prog_magic_wrong	src/regexp.c	/^prog_magic_wrong()$/;"	f	file:
prog_magic_wrong	src/regexp.c	/^static int	prog_magic_wrong __ARGS((void));$/;"	p	file:	signature:(void)
program	src/regexp.h	/^    char_u		program[1];		\/* actually longer.. *\/$/;"	m	struct:__anon71	access:public
progressbar.calculate_ticks	runtime/syntax/2html.vim	/^  func! s:progressbar.calculate_ticks(pb_len)$/;"	f
progressbar.incr	runtime/syntax/2html.vim	/^  func! s:progressbar.incr( ... )$/;"	f
progressbar.paint	runtime/syntax/2html.vim	/^  func! s:progressbar.paint()$/;"	f
prompt_for_number	src/misc1.c	/^prompt_for_number(mouse_used)$/;"	f
prop	src/mbyte.c	/^{   char *name;		int prop;		int codepage;}$/;"	m	struct:__anon134	file:	access:public
property_event	src/gui_gtk_x11.c	/^property_event(GtkWidget *widget,$/;"	f	file:	signature:(GtkWidget *widget, GdkEventProperty *event, gpointer data UNUSED)
proportional	src/gui_xmdlg.c	/^proportional(char *font)$/;"	f	file:	signature:(char *font)
prototypes	src/auto/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
prt_add_resource	src/hardcopy.c	/^prt_add_resource(resource)$/;"	f	file:
prt_add_resource	src/hardcopy.c	/^static int prt_add_resource __ARGS((struct prt_ps_resource_S *resource));$/;"	p	file:	signature:(struct prt_ps_resource_S *resource)
prt_ascii_encoding	src/hardcopy.c	/^static char *prt_ascii_encoding;$/;"	v	file:
prt_attribute_change	src/hardcopy.c	/^static int prt_attribute_change;$/;"	v	file:
prt_bgcol	src/hardcopy.c	/^static int prt_bgcol;$/;"	v	file:
prt_bgcol_offset	src/hardcopy.c	/^static float prt_bgcol_offset;$/;"	v	file:
prt_bottom_margin	src/hardcopy.c	/^static float prt_bottom_margin;$/;"	v	file:
prt_bufsiz	src/hardcopy.c	/^static int prt_bufsiz;$/;"	v	file:
prt_build_cid_fontname	src/hardcopy.c	/^prt_build_cid_fontname(font, name, name_len)$/;"	f	file:
prt_build_cid_fontname	src/hardcopy.c	/^static int prt_build_cid_fontname __ARGS((int font, char_u *name, int name_len));$/;"	p	file:	signature:(int font, char_u *name, int name_len)
prt_char_width	src/hardcopy.c	/^static float prt_char_width;$/;"	v	file:
prt_check_resource	src/hardcopy.c	/^prt_check_resource(resource, version)$/;"	f	file:
prt_check_resource	src/hardcopy.c	/^static int prt_check_resource __ARGS((struct prt_ps_resource_S *resource, char_u *version));$/;"	p	file:	signature:(struct prt_ps_resource_S *resource, char_u *version)
prt_cmap	src/hardcopy.c	/^static char prt_cmap[80];$/;"	v	file:
prt_collate	src/hardcopy.c	/^static int prt_collate;$/;"	v	file:
prt_conv	src/hardcopy.c	/^static vimconv_T prt_conv;$/;"	v	file:
prt_custom_cmap	src/hardcopy.c	/^static int prt_custom_cmap;$/;"	v	file:
prt_def_cidfont	src/hardcopy.c	/^prt_def_cidfont(new_name, height, cidfont)$/;"	f	file:
prt_def_cidfont	src/hardcopy.c	/^static void prt_def_cidfont __ARGS((char *new_name, int height, char *cidfont));$/;"	p	file:	signature:(char *new_name, int height, char *cidfont)
prt_def_font	src/hardcopy.c	/^prt_def_font(new_name, encoding, height, font)$/;"	f	file:
prt_def_font	src/hardcopy.c	/^static void prt_def_font __ARGS((char *new_name, char *encoding, int height, char *font));$/;"	p	file:	signature:(char *new_name, char *encoding, int height, char *font)
prt_def_var	src/hardcopy.c	/^prt_def_var(name, value, prec)$/;"	f	file:
prt_def_var	src/hardcopy.c	/^static void prt_def_var __ARGS((char *name, double value, int prec));$/;"	p	file:	signature:(char *name, double value, int prec)
prt_dlg	src/os_mswin.c	/^static PRINTDLG		prt_dlg;$/;"	v	file:
prt_do_bgcol	src/hardcopy.c	/^static int prt_do_bgcol;$/;"	v	file:
prt_do_conv	src/hardcopy.c	/^static int prt_do_conv;$/;"	v	file:
prt_do_moveto	src/hardcopy.c	/^static int prt_do_moveto;$/;"	v	file:
prt_do_underline	src/hardcopy.c	/^static int prt_do_underline;$/;"	v	file:
prt_dsc_atend	src/hardcopy.c	2096;"	d	file:
prt_dsc_comment_S	src/hardcopy.c	/^struct prt_dsc_comment_S$/;"	s	file:
prt_dsc_comment_S::len	src/hardcopy.c	/^    int		len;$/;"	m	struct:prt_dsc_comment_S	file:	access:public
prt_dsc_comment_S::string	src/hardcopy.c	/^    char	*string;$/;"	m	struct:prt_dsc_comment_S	file:	access:public
prt_dsc_comment_S::type	src/hardcopy.c	/^    int		type;$/;"	m	struct:prt_dsc_comment_S	file:	access:public
prt_dsc_docmedia	src/hardcopy.c	/^prt_dsc_docmedia(paper_name, width, height, weight, colour, type)$/;"	f	file:
prt_dsc_docmedia	src/hardcopy.c	/^static void prt_dsc_docmedia __ARGS((char *paper_name, double width, double height, double weight, char *colour, char *type));$/;"	p	file:	signature:(char *paper_name, double width, double height, double weight, char *colour, char *type)
prt_dsc_font_resource	src/hardcopy.c	/^prt_dsc_font_resource(resource, ps_font)$/;"	f	file:
prt_dsc_font_resource	src/hardcopy.c	/^static void prt_dsc_font_resource __ARGS((char *resource, struct prt_ps_font_S *ps_font));$/;"	p	file:	signature:(char *resource, struct prt_ps_font_S *ps_font)
prt_dsc_ints	src/hardcopy.c	/^prt_dsc_ints(comment, count, ints)$/;"	f	file:
prt_dsc_ints	src/hardcopy.c	/^static void prt_dsc_ints __ARGS((char *comment, int count, int *ints));$/;"	p	file:	signature:(char *comment, int count, int *ints)
prt_dsc_line_S	src/hardcopy.c	/^struct prt_dsc_line_S$/;"	s	file:
prt_dsc_line_S::len	src/hardcopy.c	/^    int		len;$/;"	m	struct:prt_dsc_line_S	file:	access:public
prt_dsc_line_S::string	src/hardcopy.c	/^    char_u	*string;$/;"	m	struct:prt_dsc_line_S	file:	access:public
prt_dsc_line_S::type	src/hardcopy.c	/^    int		type;$/;"	m	struct:prt_dsc_line_S	file:	access:public
prt_dsc_noarg	src/hardcopy.c	/^prt_dsc_noarg(comment)$/;"	f	file:
prt_dsc_noarg	src/hardcopy.c	/^static void prt_dsc_noarg __ARGS((char *comment));$/;"	p	file:	signature:(char *comment)
prt_dsc_requirements	src/hardcopy.c	/^prt_dsc_requirements(duplex, tumble, collate, color, num_copies)$/;"	f	file:
prt_dsc_requirements	src/hardcopy.c	/^static void prt_dsc_requirements __ARGS((int duplex, int tumble, int collate, int color, int num_copies));$/;"	p	file:	signature:(int duplex, int tumble, int collate, int color, int num_copies)
prt_dsc_resources	src/hardcopy.c	/^prt_dsc_resources(comment, type, string)$/;"	f	file:
prt_dsc_resources	src/hardcopy.c	/^static void prt_dsc_resources __ARGS((char *comment, char *type, char *strings));$/;"	p	file:	signature:(char *comment, char *type, char *strings)
prt_dsc_start	src/hardcopy.c	/^prt_dsc_start()$/;"	f	file:
prt_dsc_start	src/hardcopy.c	/^static void prt_dsc_start __ARGS((void));$/;"	p	file:	signature:(void)
prt_dsc_table	src/hardcopy.c	/^static struct prt_dsc_comment_S prt_dsc_table[] =$/;"	v	typeref:struct:prt_dsc_comment_S	file:
prt_dsc_text	src/hardcopy.c	/^prt_dsc_text(comment, text)$/;"	f	file:
prt_dsc_text	src/hardcopy.c	/^static void prt_dsc_text __ARGS((char *comment, char *text));$/;"	p	file:	signature:(char *comment, char *text)
prt_dsc_textline	src/hardcopy.c	/^prt_dsc_textline(comment, text)$/;"	f	file:
prt_dsc_textline	src/hardcopy.c	/^static void prt_dsc_textline __ARGS((char *comment, char *text));$/;"	p	file:	signature:(char *comment, char *text)
prt_dup_cidfont	src/hardcopy.c	/^prt_dup_cidfont(original_name, new_name)$/;"	f	file:
prt_dup_cidfont	src/hardcopy.c	/^static void prt_dup_cidfont __ARGS((char *original_name, char *new_name));$/;"	p	file:	signature:(char *original_name, char *new_name)
prt_duplex	src/hardcopy.c	/^static int prt_duplex;$/;"	v	file:
prt_fgcol	src/hardcopy.c	/^static int prt_fgcol;$/;"	v	file:
prt_file_error	src/hardcopy.c	/^static int prt_file_error;$/;"	v	file:
prt_find_resource	src/hardcopy.c	/^prt_find_resource(name, resource)$/;"	f	file:
prt_find_resource	src/hardcopy.c	/^static int prt_find_resource __ARGS((char *name, struct prt_ps_resource_S *resource));$/;"	p	file:	signature:(char *name, struct prt_ps_resource_S *resource)
prt_first_line_height	src/hardcopy.c	/^static float prt_first_line_height;$/;"	v	file:
prt_flush_buffer	src/hardcopy.c	/^prt_flush_buffer()$/;"	f	file:
prt_flush_buffer	src/hardcopy.c	/^static void prt_flush_buffer __ARGS((void));$/;"	p	file:	signature:(void)
prt_font	src/hardcopy.c	/^static int prt_font;$/;"	v	file:
prt_font_handles	src/os_mswin.c	/^static HFONT		prt_font_handles[2][2][2];$/;"	v	file:
prt_font_metrics	src/hardcopy.c	/^prt_font_metrics(font_scale)$/;"	f	file:
prt_font_metrics	src/hardcopy.c	/^static void prt_font_metrics __ARGS((int font_scale));$/;"	p	file:	signature:(int font_scale)
prt_get_attr	src/hardcopy.c	/^prt_get_attr(hl_id, pattr, modec)$/;"	f	file:
prt_get_attr	src/hardcopy.c	/^static void prt_get_attr __ARGS((int hl_id, prt_text_attr_T* pattr, int modec));$/;"	p	file:	signature:(int hl_id, prt_text_attr_T* pattr, int modec)
prt_get_cpl	src/hardcopy.c	/^prt_get_cpl()$/;"	f	file:
prt_get_cpl	src/hardcopy.c	/^static int prt_get_cpl __ARGS((void));$/;"	p	file:	signature:(void)
prt_get_cpl	src/os_mswin.c	/^prt_get_cpl(void)$/;"	f	file:	signature:(void)
prt_get_lpp	src/hardcopy.c	/^prt_get_lpp()$/;"	f	file:
prt_get_lpp	src/hardcopy.c	/^static int prt_get_lpp __ARGS((void));$/;"	p	file:	signature:(void)
prt_get_lpp	src/os_mswin.c	/^prt_get_lpp(void)$/;"	f	file:	signature:(void)
prt_get_term_color	src/hardcopy.c	/^prt_get_term_color(colorindex)$/;"	f	file:
prt_get_term_color	src/hardcopy.c	/^static long_u prt_get_term_color __ARGS((int colorindex));$/;"	p	file:	signature:(int colorindex)
prt_get_unit	src/hardcopy.c	/^prt_get_unit(idx)$/;"	f
prt_half_width	src/hardcopy.c	/^static int prt_half_width;$/;"	v	file:
prt_header	src/hardcopy.c	/^prt_header(psettings, pagenum, lnum)$/;"	f	file:
prt_header	src/hardcopy.c	/^static void prt_header __ARGS((prt_settings_T *psettings, int pagenum, linenr_T lnum));$/;"	p	file:	signature:(prt_settings_T *psettings, int pagenum, linenr_T lnum)
prt_header_height	src/hardcopy.c	/^prt_header_height()$/;"	f
prt_hexchar	src/hardcopy.c	/^static char_u prt_hexchar[] = "0123456789abcdef";$/;"	v	file:
prt_in_ascii	src/hardcopy.c	/^static int prt_in_ascii;$/;"	v	file:
prt_left_margin	src/hardcopy.c	/^static float prt_left_margin;$/;"	v	file:
prt_left_margin	src/os_mswin.c	/^static int		prt_left_margin;$/;"	v	file:
prt_line_buffer	src/hardcopy.c	/^static char_u prt_line_buffer[257];$/;"	v	file:
prt_line_height	src/hardcopy.c	/^static float prt_line_height;$/;"	v	file:
prt_line_height	src/os_mswin.c	/^static int		prt_line_height;$/;"	v	file:
prt_line_number	src/hardcopy.c	/^prt_line_number(psettings, page_line, lnum)$/;"	f	file:
prt_line_number	src/hardcopy.c	/^static void prt_line_number __ARGS((prt_settings_T *psettings, int page_line, linenr_T lnum));$/;"	p	file:	signature:(prt_settings_T *psettings, int page_line, linenr_T lnum)
prt_match_charset	src/hardcopy.c	/^prt_match_charset(p_charset, p_cmap, pp_mbchar)$/;"	f	file:
prt_match_charset	src/hardcopy.c	/^static int prt_match_charset __ARGS((char *p_charset, struct prt_ps_mbfont_S *p_cmap, struct prt_ps_charset_S **pp_mbchar));$/;"	p	file:	signature:(char *p_charset, struct prt_ps_mbfont_S *p_cmap, struct prt_ps_charset_S **pp_mbchar)
prt_match_encoding	src/hardcopy.c	/^prt_match_encoding(p_encoding, p_cmap, pp_mbenc)$/;"	f	file:
prt_match_encoding	src/hardcopy.c	/^static int prt_match_encoding __ARGS((char *p_encoding, struct prt_ps_mbfont_S *p_cmap, struct prt_ps_encoding_S **pp_mbenc));$/;"	p	file:	signature:(char *p_encoding, struct prt_ps_mbfont_S *p_cmap, struct prt_ps_encoding_S **pp_mbenc)
prt_media	src/hardcopy.c	/^static int prt_media;$/;"	v	file:
prt_mediasize	src/hardcopy.c	/^static struct prt_mediasize_S prt_mediasize[] =$/;"	v	typeref:struct:prt_mediasize_S	file:
prt_mediasize_S	src/hardcopy.c	/^struct prt_mediasize_S$/;"	s	file:
prt_mediasize_S::height	src/hardcopy.c	/^    float	height;$/;"	m	struct:prt_mediasize_S	file:	access:public
prt_mediasize_S::name	src/hardcopy.c	/^    char	*name;$/;"	m	struct:prt_mediasize_S	file:	access:public
prt_mediasize_S::width	src/hardcopy.c	/^    float	width;		\/* width and height in points for portrait *\/$/;"	m	struct:prt_mediasize_S	file:	access:public
prt_message	src/hardcopy.c	/^prt_message(s)$/;"	f	file:
prt_message	src/hardcopy.c	/^static void prt_message __ARGS((char_u *s));$/;"	p	file:	signature:(char_u *s)
prt_name	src/os_mswin.c	/^static char_u		*prt_name = NULL;$/;"	v	file:
prt_need_bgcol	src/hardcopy.c	/^static int prt_need_bgcol;$/;"	v	file:
prt_need_fgcol	src/hardcopy.c	/^static int prt_need_fgcol;$/;"	v	file:
prt_need_font	src/hardcopy.c	/^static int prt_need_font;$/;"	v	file:
prt_need_moveto	src/hardcopy.c	/^static int prt_need_moveto;$/;"	v	file:
prt_need_underline	src/hardcopy.c	/^static int prt_need_underline;$/;"	v	file:
prt_new_bgcol	src/hardcopy.c	/^static int prt_new_bgcol;$/;"	v	file:
prt_next_dsc	src/hardcopy.c	/^prt_next_dsc(p_dsc_line)$/;"	f	file:
prt_next_dsc	src/hardcopy.c	/^static int prt_next_dsc __ARGS((struct prt_dsc_line_S *p_dsc_line));$/;"	p	file:	signature:(struct prt_dsc_line_S *p_dsc_line)
prt_num_copies	src/hardcopy.c	/^static int prt_num_copies;$/;"	v	file:
prt_number_width	src/hardcopy.c	/^static float prt_number_width;$/;"	v	file:
prt_number_width	src/os_mswin.c	/^static int		prt_number_width;$/;"	v	file:
prt_open_resource	src/hardcopy.c	/^prt_open_resource(resource)$/;"	f	file:
prt_open_resource	src/hardcopy.c	/^static int prt_open_resource __ARGS((struct prt_ps_resource_S *resource));$/;"	p	file:	signature:(struct prt_ps_resource_S *resource)
prt_out_mbyte	src/hardcopy.c	/^static int prt_out_mbyte;$/;"	v	file:
prt_page_height	src/hardcopy.c	/^static float prt_page_height;$/;"	v	file:
prt_page_margins	src/hardcopy.c	/^prt_page_margins(width, height, left, right, top, bottom)$/;"	f	file:
prt_page_margins	src/hardcopy.c	/^static void prt_page_margins __ARGS((double width, double height, double *left, double *right, double *top, double *bottom));$/;"	p	file:	signature:(double width, double height, double *left, double *right, double *top, double *bottom)
prt_page_num	src/hardcopy.c	/^static int prt_page_num;$/;"	v	file:
prt_page_width	src/hardcopy.c	/^static float prt_page_width;$/;"	v	file:
prt_portrait	src/hardcopy.c	/^static int prt_portrait;$/;"	v	file:
prt_pos_T	src/hardcopy.c	/^} prt_pos_T;$/;"	t	typeref:struct:__anon126	file:
prt_pos_x	src/hardcopy.c	/^static float prt_pos_x = 0;$/;"	v	file:
prt_pos_x	src/os_mswin.c	/^static int prt_pos_x = 0;$/;"	v	file:
prt_pos_x_moveto	src/hardcopy.c	/^static float prt_pos_x_moveto = 0.0;$/;"	v	file:
prt_pos_y	src/hardcopy.c	/^static float prt_pos_y = 0;$/;"	v	file:
prt_pos_y	src/os_mswin.c	/^static int prt_pos_y = 0;$/;"	v	file:
prt_pos_y_moveto	src/hardcopy.c	/^static float prt_pos_y_moveto = 0.0;$/;"	v	file:
prt_ps_buffer	src/hardcopy.c	/^static garray_T prt_ps_buffer;$/;"	v	file:
prt_ps_charset_S	src/hardcopy.c	/^struct prt_ps_charset_S$/;"	s	file:
prt_ps_charset_S::charset	src/hardcopy.c	/^    char	*charset;$/;"	m	struct:prt_ps_charset_S	file:	access:public
prt_ps_charset_S::cmap_charset	src/hardcopy.c	/^    char	*cmap_charset;$/;"	m	struct:prt_ps_charset_S	file:	access:public
prt_ps_charset_S::has_charset	src/hardcopy.c	/^    int		has_charset;$/;"	m	struct:prt_ps_charset_S	file:	access:public
prt_ps_courier_font	src/hardcopy.c	/^static struct prt_ps_font_S prt_ps_courier_font =$/;"	v	typeref:struct:prt_ps_font_S	file:
prt_ps_encoding_S	src/hardcopy.c	/^struct prt_ps_encoding_S$/;"	s	file:
prt_ps_encoding_S::cmap_encoding	src/hardcopy.c	/^    char	*cmap_encoding;$/;"	m	struct:prt_ps_encoding_S	file:	access:public
prt_ps_encoding_S::encoding	src/hardcopy.c	/^    char	*encoding;$/;"	m	struct:prt_ps_encoding_S	file:	access:public
prt_ps_encoding_S::needs_charset	src/hardcopy.c	/^    int		needs_charset;$/;"	m	struct:prt_ps_encoding_S	file:	access:public
prt_ps_fd	src/hardcopy.c	/^static FILE *prt_ps_fd;$/;"	v	file:
prt_ps_file_name	src/hardcopy.c	/^static char_u *prt_ps_file_name = NULL;$/;"	v	file:
prt_ps_font	src/hardcopy.c	/^static struct prt_ps_font_S* prt_ps_font;$/;"	v	typeref:struct:prt_ps_font_S	file:
prt_ps_font_S	src/hardcopy.c	/^struct prt_ps_font_S$/;"	s	file:
prt_ps_font_S::bbox_max_y	src/hardcopy.c	/^    int		bbox_max_y;$/;"	m	struct:prt_ps_font_S	file:	access:public
prt_ps_font_S::bbox_min_y	src/hardcopy.c	/^    int		bbox_min_y;$/;"	m	struct:prt_ps_font_S	file:	access:public
prt_ps_font_S::ps_fontname	src/hardcopy.c	/^    char	*(ps_fontname[4]);$/;"	m	struct:prt_ps_font_S	file:	access:public
prt_ps_font_S::uline_offset	src/hardcopy.c	/^    int		uline_offset;$/;"	m	struct:prt_ps_font_S	file:	access:public
prt_ps_font_S::uline_width	src/hardcopy.c	/^    int		uline_width;$/;"	m	struct:prt_ps_font_S	file:	access:public
prt_ps_font_S::wx	src/hardcopy.c	/^    int		wx;$/;"	m	struct:prt_ps_font_S	file:	access:public
prt_ps_mb_font	src/hardcopy.c	/^static struct prt_ps_font_S prt_ps_mb_font =$/;"	v	typeref:struct:prt_ps_font_S	file:
prt_ps_mbfont_S	src/hardcopy.c	/^struct prt_ps_mbfont_S$/;"	s	file:
prt_ps_mbfont_S::ascii_enc	src/hardcopy.c	/^    char			*ascii_enc;$/;"	m	struct:prt_ps_mbfont_S	file:	access:public
prt_ps_mbfont_S::charsets	src/hardcopy.c	/^    struct prt_ps_charset_S	*charsets;$/;"	m	struct:prt_ps_mbfont_S	typeref:struct:prt_ps_mbfont_S::prt_ps_charset_S	file:	access:public
prt_ps_mbfont_S::defcs	src/hardcopy.c	/^    char			*defcs;$/;"	m	struct:prt_ps_mbfont_S	file:	access:public
prt_ps_mbfont_S::encodings	src/hardcopy.c	/^    struct prt_ps_encoding_S	*encodings;$/;"	m	struct:prt_ps_mbfont_S	typeref:struct:prt_ps_mbfont_S::prt_ps_encoding_S	file:	access:public
prt_ps_mbfont_S::num_charsets	src/hardcopy.c	/^    int				num_charsets;$/;"	m	struct:prt_ps_mbfont_S	file:	access:public
prt_ps_mbfont_S::num_encodings	src/hardcopy.c	/^    int				num_encodings;$/;"	m	struct:prt_ps_mbfont_S	file:	access:public
prt_ps_mbfonts	src/hardcopy.c	/^static struct prt_ps_mbfont_S prt_ps_mbfonts[] =$/;"	v	typeref:struct:prt_ps_mbfont_S	file:
prt_ps_resource_S	src/hardcopy.c	/^struct prt_ps_resource_S$/;"	s	file:
prt_ps_resource_S::filename	src/hardcopy.c	/^    char_u  filename[MAXPATHL + 1];$/;"	m	struct:prt_ps_resource_S	file:	access:public
prt_ps_resource_S::name	src/hardcopy.c	/^    char_u  name[64];$/;"	m	struct:prt_ps_resource_S	file:	access:public
prt_ps_resource_S::title	src/hardcopy.c	/^    char_u  title[256];$/;"	m	struct:prt_ps_resource_S	file:	access:public
prt_ps_resource_S::type	src/hardcopy.c	/^    int     type;$/;"	m	struct:prt_ps_resource_S	file:	access:public
prt_ps_resource_S::version	src/hardcopy.c	/^    char_u  version[256];$/;"	m	struct:prt_ps_resource_S	file:	access:public
prt_real_bits	src/hardcopy.c	/^prt_real_bits(real, precision, pinteger, pfraction)$/;"	f	file:
prt_real_bits	src/hardcopy.c	/^static void prt_real_bits __ARGS((double real, int precision, int *pinteger, int *pfraction));$/;"	p	file:	signature:(double real, int precision, int *pinteger, int *pfraction)
prt_resfile	src/hardcopy.c	/^static struct prt_resfile_buffer_S prt_resfile;$/;"	v	typeref:struct:prt_resfile_buffer_S	file:
prt_resfile_buffer_S	src/hardcopy.c	/^struct prt_resfile_buffer_S$/;"	s	file:
prt_resfile_buffer_S::buffer	src/hardcopy.c	/^    char_u  buffer[PRT_FILE_BUFFER_LEN];$/;"	m	struct:prt_resfile_buffer_S	file:	access:public
prt_resfile_buffer_S::len	src/hardcopy.c	/^    int     len;$/;"	m	struct:prt_resfile_buffer_S	file:	access:public
prt_resfile_buffer_S::line_end	src/hardcopy.c	/^    int     line_end;$/;"	m	struct:prt_resfile_buffer_S	file:	access:public
prt_resfile_buffer_S::line_start	src/hardcopy.c	/^    int     line_start;$/;"	m	struct:prt_resfile_buffer_S	file:	access:public
prt_resfile_next_line	src/hardcopy.c	/^prt_resfile_next_line()$/;"	f	file:
prt_resfile_next_line	src/hardcopy.c	/^static int prt_resfile_next_line __ARGS((void));$/;"	p	file:	signature:(void)
prt_resfile_skip_nonws	src/hardcopy.c	/^prt_resfile_skip_nonws(offset)$/;"	f	file:
prt_resfile_skip_nonws	src/hardcopy.c	/^static int prt_resfile_skip_nonws __ARGS((int offset));$/;"	p	file:	signature:(int offset)
prt_resfile_skip_ws	src/hardcopy.c	/^prt_resfile_skip_ws(offset)$/;"	f	file:
prt_resfile_skip_ws	src/hardcopy.c	/^static int prt_resfile_skip_ws __ARGS((int offset));$/;"	p	file:	signature:(int offset)
prt_resfile_strncmp	src/hardcopy.c	/^prt_resfile_strncmp(offset, string, len)$/;"	f	file:
prt_resfile_strncmp	src/hardcopy.c	/^static int prt_resfile_strncmp __ARGS((int offset, char *string, int len));$/;"	p	file:	signature:(int offset, char *string, int len)
prt_resource_name	src/hardcopy.c	/^prt_resource_name(filename, cookie)$/;"	f	file:
prt_resource_name	src/hardcopy.c	/^static void prt_resource_name __ARGS((char_u *filename, void *cookie));$/;"	p	file:	signature:(char_u *filename, void *cookie)
prt_resource_types	src/hardcopy.c	/^static char *prt_resource_types[] =$/;"	v	file:
prt_right_margin	src/hardcopy.c	/^static float prt_right_margin;$/;"	v	file:
prt_right_margin	src/os_mswin.c	/^static int		prt_right_margin;$/;"	v	file:
prt_set_bg	src/hardcopy.c	/^prt_set_bg(bg)$/;"	f	file:
prt_set_bg	src/hardcopy.c	/^static void prt_set_bg __ARGS((long_u bg));$/;"	p	file:	signature:(long_u bg)
prt_set_fg	src/hardcopy.c	/^prt_set_fg(fg)$/;"	f	file:
prt_set_fg	src/hardcopy.c	/^static void prt_set_fg __ARGS((long_u fg));$/;"	p	file:	signature:(long_u fg)
prt_set_font	src/hardcopy.c	/^prt_set_font(bold, italic, underline)$/;"	f	file:
prt_set_font	src/hardcopy.c	/^static void prt_set_font __ARGS((int bold, int italic, int underline));$/;"	p	file:	signature:(int bold, int italic, int underline)
prt_settings_T	src/structs.h	/^} prt_settings_T;$/;"	t	typeref:struct:__anon60
prt_text_attr_T	src/structs.h	/^} prt_text_attr_T;$/;"	t	typeref:struct:__anon59
prt_text_run	src/hardcopy.c	/^static float prt_text_run;$/;"	v	file:
prt_tm	src/os_mswin.c	/^static TEXTMETRIC	prt_tm;$/;"	v	file:
prt_top_margin	src/hardcopy.c	/^static float prt_top_margin;$/;"	v	file:
prt_top_margin	src/os_mswin.c	/^static int		prt_top_margin;$/;"	v	file:
prt_tumble	src/hardcopy.c	/^static int prt_tumble;$/;"	v	file:
prt_underline	src/hardcopy.c	/^static int prt_underline;$/;"	v	file:
prt_use_courier	src/hardcopy.c	/^static int prt_use_courier;$/;"	v	file:
prt_use_number	src/hardcopy.c	/^prt_use_number()$/;"	f
prt_write_boolean	src/hardcopy.c	/^prt_write_boolean(b)$/;"	f	file:
prt_write_boolean	src/hardcopy.c	/^static void prt_write_boolean __ARGS((int b));$/;"	p	file:	signature:(int b)
prt_write_file	src/hardcopy.c	/^prt_write_file(buffer)$/;"	f	file:
prt_write_file	src/hardcopy.c	/^static void prt_write_file __ARGS((char_u *buffer));$/;"	p	file:	signature:(char_u *buffer)
prt_write_file_len	src/hardcopy.c	/^prt_write_file_len(buffer, bytes)$/;"	f	file:
prt_write_file_len	src/hardcopy.c	/^static void prt_write_file_len __ARGS((char_u *buffer, int bytes));$/;"	p	file:	signature:(char_u *buffer, int bytes)
prt_write_file_raw_len	src/hardcopy.c	/^prt_write_file_raw_len(buffer, bytes)$/;"	f	file:
prt_write_file_raw_len	src/hardcopy.c	/^static void prt_write_file_raw_len __ARGS((char_u *buffer, int bytes));$/;"	p	file:	signature:(char_u *buffer, int bytes)
prt_write_int	src/hardcopy.c	/^prt_write_int(i)$/;"	f	file:
prt_write_int	src/hardcopy.c	/^static void prt_write_int __ARGS((int i));$/;"	p	file:	signature:(int i)
prt_write_real	src/hardcopy.c	/^prt_write_real(val, prec)$/;"	f	file:
prt_write_real	src/hardcopy.c	/^static void prt_write_real __ARGS((double val, int prec));$/;"	p	file:	signature:(double val, int prec)
prt_write_string	src/hardcopy.c	/^prt_write_string(s)$/;"	f	file:
prt_write_string	src/hardcopy.c	/^static void prt_write_string __ARGS((char *s));$/;"	p	file:	signature:(char *s)
ps_fontname	src/hardcopy.c	/^    char	*(ps_fontname[4]);$/;"	m	struct:prt_ps_font_S	file:	access:public
psepc	src/globals.h	/^EXTERN char	psepc INIT(= '\\\\');	\/* normal path separator character *\/$/;"	v
psepcN	src/globals.h	/^EXTERN char	psepcN INIT(= '\/');	\/* abnormal path separator character *\/$/;"	v
pseps	src/globals.h	/^EXTERN char	pseps[2]		\/* normal path separator string *\/$/;"	v
pseudo_code	src/misc2.c	/^    int	    pseudo_code;	\/* Code for pseudo mouse event *\/$/;"	m	struct:mousetable	file:	access:public
pstrcmp	src/misc1.c	/^pstrcmp(a, b)$/;"	f	file:
pstrcmp	src/misc1.c	/^pstrcmp(const void *a, const void *b)$/;"	f	file:	signature:(const void *a, const void *b)
pstrcmp	src/misc1.c	/^static int	pstrcmp __ARGS((const void *, const void *));$/;"	p	file:	signature:(const void *, const void *)
ptCurrentPos	src/gui_w32.c	/^    POINT ptCurrentPos;$/;"	m	struct:tagCOMPOSITIONFORM	file:	access:public
ptag_entry	src/tag.c	/^static taggy_T ptag_entry = {NULL, {INIT_POS_T(0, 0, 0), 0}, 0, 0};$/;"	v	file:
ptr	src/if_mzsch.c	/^    void    **ptr;$/;"	m	struct:__anon28	file:	access:public
ptr	src/if_python.c	/^    PYTHON_PROC *ptr;$/;"	m	struct:__anon93	file:	access:public
ptr	src/if_python3.c	/^    PYTHON_PROC *ptr;$/;"	m	struct:__anon107	file:	access:public
ptr	src/if_ruby.c	/^    RUBY_PROC *ptr;$/;"	m	struct:__anon137	file:	access:public
ptr	src/if_tcl.c	/^    TCL_PROC* ptr;$/;"	m	struct:__anon124	file:	access:public
ptr	src/regexp.c	/^	char_u	*ptr;	\/* reginput pointer, for single-line regexp *\/$/;"	m	union:__anon99::__anon100	file:	access:public
ptr	src/regexp.c	/^	char_u	*ptr;$/;"	m	union:__anon101::__anon102	file:	access:public
ptr	src/structs.h	/^	u_header_T *ptr;	\/* pointer to next header for alt. redo *\/$/;"	m	union:u_header::__anon40	access:public
ptr	src/structs.h	/^	u_header_T *ptr;	\/* pointer to next undo header in list *\/$/;"	m	union:u_header::__anon38	access:public
ptr	src/structs.h	/^	u_header_T *ptr;	\/* pointer to previous header for alt. redo *\/$/;"	m	union:u_header::__anon41	access:public
ptr	src/structs.h	/^	u_header_T *ptr;	\/* pointer to previous header in list *\/$/;"	m	union:u_header::__anon39	access:public
ptr2cells	src/charset.c	/^ptr2cells(p)$/;"	f
pullAction	src/gui_athena.c	/^static XtActionsRec	pullAction[2] = {$/;"	v	file:
pullerBitmap	src/gui_athena.c	/^static Pixmap		pullerBitmap = None;$/;"	v	file:
puller_width	src/gui_athena.c	/^static int		puller_width = 0;$/;"	v	file:
pum_array	src/popupmnu.c	/^static pumitem_T *pum_array = NULL;	\/* items of displayed pum *\/$/;"	v	file:
pum_base_width	src/popupmnu.c	/^static int pum_base_width;		\/* width of pum items base *\/$/;"	v	file:
pum_clear	src/popupmnu.c	/^pum_clear()$/;"	f
pum_col	src/popupmnu.c	/^static int pum_col;			\/* left column of pum *\/$/;"	v	file:
pum_display	src/popupmnu.c	/^pum_display(array, size, selected)$/;"	f
pum_do_redraw	src/popupmnu.c	/^static int pum_do_redraw = FALSE;	\/* do redraw anyway *\/$/;"	v	file:
pum_enough_matches	src/edit.c	/^pum_enough_matches()$/;"	f	file:
pum_enough_matches	src/edit.c	/^static int  pum_enough_matches __ARGS((void));$/;"	p	file:	signature:(void)
pum_extra	src/structs.h	/^    char_u	*pum_extra;	\/* extra menu text (may be truncated) *\/$/;"	m	struct:__anon61	access:public
pum_first	src/popupmnu.c	/^static int pum_first = 0;		\/* index of top item *\/$/;"	v	file:
pum_get_height	src/popupmnu.c	/^pum_get_height()$/;"	f
pum_height	src/popupmnu.c	/^static int pum_height;			\/* nr of displayed pum items *\/$/;"	v	file:
pum_info	src/structs.h	/^    char_u	*pum_info;	\/* extra info *\/$/;"	m	struct:__anon61	access:public
pum_kind	src/structs.h	/^    char_u	*pum_kind;	\/* extra kind text (may be truncated) *\/$/;"	m	struct:__anon61	access:public
pum_kind_width	src/popupmnu.c	/^static int pum_kind_width;		\/* width of pum items kind column *\/$/;"	v	file:
pum_redraw	src/popupmnu.c	/^pum_redraw()$/;"	f
pum_row	src/popupmnu.c	/^static int pum_row;			\/* top row of pum *\/$/;"	v	file:
pum_scrollbar	src/popupmnu.c	/^static int pum_scrollbar;		\/* TRUE when scrollbar present *\/$/;"	v	file:
pum_selected	src/popupmnu.c	/^static int pum_selected;		\/* index of selected item or -1 *\/$/;"	v	file:
pum_set_selected	src/popupmnu.c	/^pum_set_selected(n, repeat)$/;"	f	file:
pum_set_selected	src/popupmnu.c	/^static int pum_set_selected __ARGS((int n, int repeat));$/;"	p	file:	signature:(int n, int repeat)
pum_size	src/popupmnu.c	/^static int pum_size;			\/* nr of items in "pum_array" *\/$/;"	v	file:
pum_text	src/structs.h	/^    char_u	*pum_text;	\/* main menu text *\/$/;"	m	struct:__anon61	access:public
pum_undisplay	src/popupmnu.c	/^pum_undisplay()$/;"	f
pum_visible	src/popupmnu.c	/^pum_visible()$/;"	f
pum_wanted	src/edit.c	/^pum_wanted()$/;"	f	file:
pum_wanted	src/edit.c	/^static int  pum_wanted __ARGS((void));$/;"	p	file:	signature:(void)
pum_width	src/popupmnu.c	/^static int pum_width;			\/* width of displayed pum items *\/$/;"	v	file:
pumitem_T	src/structs.h	/^} pumitem_T;$/;"	t	typeref:struct:__anon61
push	src/hangulin.c	43;"	d	file:
push_current_state	src/syntax.c	/^push_current_state(idx)$/;"	f	file:
push_current_state	src/syntax.c	/^static int push_current_state __ARGS((int idx));$/;"	p	file:	signature:(int idx)
push_next_match	src/syntax.c	/^push_next_match(cur_si)$/;"	f	file:
push_next_match	src/syntax.c	/^static stateitem_T *push_next_match __ARGS((stateitem_T *cur_si));$/;"	p	file:	signature:(stateitem_T *cur_si)
push_raw_key	src/ui.c	/^push_raw_key (s, len)$/;"	f
push_showcmd	src/normal.c	/^push_showcmd()$/;"	f
pushbutton	src/gui_xmebwp.h	/^    XmPushButtonPart pushbutton;$/;"	m	struct:_XmEnhancedButtonRec	access:public
pushbutton_class	src/gui_xmebwp.h	/^    XmPushButtonClassPart pushbutton_class;$/;"	m	struct:__anon92	access:public
put_and_redo	src/farsi.c	/^put_and_redo(c)$/;"	f	file:
put_and_redo	src/farsi.c	/^static void put_and_redo __ARGS((int c));$/;"	p	file:	signature:(int c)
put_bytes	src/misc2.c	/^put_bytes(fd, nr, len)$/;"	f
put_curr_and_l_to_X	src/farsi.c	/^put_curr_and_l_to_X(c)$/;"	f	file:
put_curr_and_l_to_X	src/farsi.c	/^static void put_curr_and_l_to_X __ARGS((int c));$/;"	p	file:	signature:(int c)
put_eol	src/ex_docmd.c	/^put_eol(fd)$/;"	f
put_escstr	src/getchar.c	/^put_escstr(fd, strstart, what)$/;"	f
put_foldopen_recurse	src/fold.c	/^put_foldopen_recurse(fd, gap, off)$/;"	f	file:
put_foldopen_recurse	src/fold.c	/^static int put_foldopen_recurse __ARGS((FILE *fd, garray_T *gap, linenr_T off));$/;"	p	file:	signature:(FILE *fd, garray_T *gap, linenr_T off)
put_folds	src/fold.c	/^put_folds(fd, wp)$/;"	f
put_folds_recurse	src/fold.c	/^put_folds_recurse(fd, gap, off)$/;"	f	file:
put_folds_recurse	src/fold.c	/^static int put_folds_recurse __ARGS((FILE *fd, garray_T *gap, linenr_T off));$/;"	p	file:	signature:(FILE *fd, garray_T *gap, linenr_T off)
put_header_ptr	src/undo.c	/^put_header_ptr(fp, uhp)$/;"	f	file:
put_header_ptr	src/undo.c	/^static void put_header_ptr __ARGS((FILE	*fp, u_header_T *uhp));$/;"	p	file:	signature:(FILE *fp, u_header_T *uhp)
put_href	runtime/doc/makehtml.awk	/^function put_href() {$/;"	f
put_href2	runtime/doc/makehtml.awk	/^function put_href2() {$/;"	f
put_href3	runtime/doc/makehtml.awk	/^function put_href3() {$/;"	f
put_id_list	src/syntax.c	/^put_id_list(name, list, attr)$/;"	f	file:
put_id_list	src/syntax.c	/^static void put_id_list __ARGS((char_u *name, short *list, int attr));$/;"	p	file:	signature:(char_u *name, short *list, int attr)
put_in_typebuf	src/ops.c	/^put_in_typebuf(s, esc, colon, silent)$/;"	f	file:
put_in_typebuf	src/ops.c	/^static int	put_in_typebuf __ARGS((char_u *s, int esc, int colon,$/;"	p	file:	signature:(char_u *s, int esc, int colon, int silent)
put_line	src/ex_docmd.c	/^put_line(fd, s)$/;"	f
put_node	src/spell.c	/^put_node(fd, node, idx, regionmask, prefixtree)$/;"	f	file:
put_node	src/spell.c	/^static int put_node __ARGS((FILE *fd, wordnode_T *node, int idx, int regionmask, int prefixtree));$/;"	p	file:	signature:(FILE *fd, wordnode_T *node, int idx, int regionmask, int prefixtree)
put_on_cmdline	src/ex_getln.c	/^put_on_cmdline(str, len, redraw)$/;"	f
put_pattern	src/syntax.c	/^put_pattern(s, c, spp, attr)$/;"	f	file:
put_pattern	src/syntax.c	/^static void put_pattern __ARGS((char *s, int c, synpat_T *spp, int attr));$/;"	p	file:	signature:(char *s, int c, synpat_T *spp, int attr)
put_reedit_in_typebuf	src/ops.c	/^put_reedit_in_typebuf(silent)$/;"	f	file:
put_reedit_in_typebuf	src/ops.c	/^static void	put_reedit_in_typebuf __ARGS((int silent));$/;"	p	file:	signature:(int silent)
put_register	src/ops.c	/^put_register(name, reg)$/;"	f
put_setbool	src/option.c	/^put_setbool(fd, cmd, name, value)$/;"	f	file:
put_setbool	src/option.c	/^static int put_setbool __ARGS((FILE *fd, char *cmd, char *name, int value));$/;"	p	file:	signature:(FILE *fd, char *cmd, char *name, int value)
put_setnum	src/option.c	/^put_setnum(fd, cmd, name, valuep)$/;"	f	file:
put_setnum	src/option.c	/^static int put_setnum __ARGS((FILE *fd, char *cmd, char *name, long *valuep));$/;"	p	file:	signature:(FILE *fd, char *cmd, char *name, long *valuep)
put_setstring	src/option.c	/^put_setstring(fd, cmd, name, valuep, expand)$/;"	f	file:
put_setstring	src/option.c	/^static int put_setstring __ARGS((FILE *fd, char *cmd, char *name, char_u **valuep, int expand));$/;"	p	file:	signature:(FILE *fd, char *cmd, char *name, char_u **valuep, int expand)
put_this	runtime/doc/makehtml.awk	/^function put_this() {$/;"	f
put_time	src/misc2.c	/^put_time(fd, the_time)$/;"	f
put_view	src/ex_docmd.c	/^put_view(fd, wp, add_edit, flagp, current_arg_idx)$/;"	f	file:
put_view	src/ex_docmd.c	/^static int	put_view __ARGS((FILE *fd, win_T *wp, int add_edit, unsigned *flagp, int current_arg_idx));$/;"	p	file:	signature:(FILE *fd, win_T *wp, int add_edit, unsigned *flagp, int current_arg_idx)
putcmdline	src/ex_getln.c	/^putcmdline(c, shift)$/;"	f
putdigraph	src/digraph.c	/^putdigraph(str)$/;"	f
putenv	src/misc2.c	/^putenv(string)$/;"	f
putenv	src/proto.h	/^extern int putenv __ARGS((const char *string));		\/* from pty.c *\/$/;"	p	signature:(const char *string)
py3_PyArg_Parse	src/if_python3.c	/^static int (*py3_PyArg_Parse)(PyObject *, char *, ...);$/;"	v	file:
py3_PyArg_ParseTuple	src/if_python3.c	/^static int (*py3_PyArg_ParseTuple)(PyObject *, char *, ...);$/;"	v	file:
py3_PyDict_GetItemString	src/if_python3.c	/^static PyObject* (*py3_PyDict_GetItemString)(PyObject *, const char *);$/;"	v	file:
py3_PyDict_New	src/if_python3.c	/^static PyObject* (*py3_PyDict_New)(void);$/;"	v	file:
py3_PyDict_SetItemString	src/if_python3.c	/^static int (*py3_PyDict_SetItemString)(PyObject *dp, char *key, PyObject *item);$/;"	v	file:
py3_PyErr_BadArgument	src/if_python3.c	/^static int (*py3_PyErr_BadArgument)(void);$/;"	v	file:
py3_PyErr_Clear	src/if_python3.c	/^static void (*py3_PyErr_Clear)(void);$/;"	v	file:
py3_PyErr_NoMemory	src/if_python3.c	/^static PyObject* (*py3_PyErr_NoMemory)(void);$/;"	v	file:
py3_PyErr_Occurred	src/if_python3.c	/^static PyObject* (*py3_PyErr_Occurred)(void);$/;"	v	file:
py3_PyErr_SetNone	src/if_python3.c	/^static void (*py3_PyErr_SetNone)(PyObject *);$/;"	v	file:
py3_PyErr_SetString	src/if_python3.c	/^static void (*py3_PyErr_SetString)(PyObject *, const char *);$/;"	v	file:
py3_PyEval_InitThreads	src/if_python3.c	/^static void (*py3_PyEval_InitThreads)(void);$/;"	v	file:
py3_PyEval_RestoreThread	src/if_python3.c	/^static void(*py3_PyEval_RestoreThread)(PyThreadState *);$/;"	v	file:
py3_PyEval_SaveThread	src/if_python3.c	/^static PyThreadState*(*py3_PyEval_SaveThread)(void);$/;"	v	file:
py3_PyGILState_Ensure	src/if_python3.c	/^static PyGILState_STATE (*py3_PyGILState_Ensure)(void);$/;"	v	file:
py3_PyGILState_Release	src/if_python3.c	/^static void (*py3_PyGILState_Release)(PyGILState_STATE);$/;"	v	file:
py3_PyImport_AppendInittab	src/if_python3.c	/^static int (*py3_PyImport_AppendInittab)(const char *name, PyObject* (*initfunc)(void));$/;"	v	file:
py3_PyImport_ImportModule	src/if_python3.c	/^static PyObject* (*py3_PyImport_ImportModule)(const char *);$/;"	v	file:
py3_PyList_Append	src/if_python3.c	/^static PyObject* (*py3_PyList_Append)(PyObject *, PyObject *);$/;"	v	file:
py3_PyList_GetItem	src/if_python3.c	/^static PyObject* (*py3_PyList_GetItem)(PyObject *, Py_ssize_t);$/;"	v	file:
py3_PyList_New	src/if_python3.c	/^static PyObject* (*py3_PyList_New)(Py_ssize_t size);$/;"	v	file:
py3_PyList_SetItem	src/if_python3.c	/^static int (*py3_PyList_SetItem)(PyObject *, Py_ssize_t, PyObject *);$/;"	v	file:
py3_PyList_Size	src/if_python3.c	/^static Py_ssize_t (*py3_PyList_Size)(PyObject *);$/;"	v	file:
py3_PyLong_AsLong	src/if_python3.c	/^static long (*py3_PyLong_AsLong)(PyObject *);$/;"	v	file:
py3_PyLong_FromLong	src/if_python3.c	/^static PyObject* (*py3_PyLong_FromLong)(long);$/;"	v	file:
py3_PyModule_AddObject	src/if_python3.c	/^static int (*py3_PyModule_AddObject)(PyObject *m, const char *name, PyObject *o);$/;"	v	file:
py3_PyModule_Create2	src/if_python3.c	/^static PyObject* (*py3_PyModule_Create2)(struct PyModuleDef* module, int module_api_version);$/;"	v	file:
py3_PyModule_GetDict	src/if_python3.c	/^static PyObject* (*py3_PyModule_GetDict)(PyObject *);$/;"	v	file:
py3_PyObject_Free	src/if_python3.c	/^    static void (*py3_PyObject_Free)(void*);$/;"	v	file:
py3_PyObject_GenericGetAttr	src/if_python3.c	/^static PyObject* (*py3_PyObject_GenericGetAttr)(PyObject *obj, PyObject *name);$/;"	v	file:
py3_PyObject_Malloc	src/if_python3.c	/^    static void* (*py3_PyObject_Malloc)(size_t);$/;"	v	file:
py3_PyRun_SimpleString	src/if_python3.c	/^static int (*py3_PyRun_SimpleString)(char *);$/;"	v	file:
py3_PySlice_GetIndicesEx	src/if_python3.c	/^static int (*py3_PySlice_GetIndicesEx)(PySliceObject *r, Py_ssize_t length,$/;"	v	file:
py3_PySlice_Type	src/if_python3.c	/^static PyTypeObject* py3_PySlice_Type;$/;"	v	file:
py3_PySys_SetArgv	src/if_python3.c	/^static int (*py3_PySys_SetArgv)(int, wchar_t **);$/;"	v	file:
py3_PySys_SetObject	src/if_python3.c	/^static int (*py3_PySys_SetObject)(char *, PyObject *);$/;"	v	file:
py3_PyType_GenericAlloc	src/if_python3.c	/^static PyObject* (*py3_PyType_GenericAlloc)(PyTypeObject *type, Py_ssize_t nitems);$/;"	v	file:
py3_PyType_GenericNew	src/if_python3.c	/^static PyObject* (*py3_PyType_GenericNew)(PyTypeObject *type, PyObject *args, PyObject *kwds);$/;"	v	file:
py3_PyType_Ready	src/if_python3.c	/^static int (*py3_PyType_Ready)(PyTypeObject *type);$/;"	v	file:
py3_PyType_Type	src/if_python3.c	/^static PyTypeObject* py3_PyType_Type;$/;"	v	file:
py3_PyUnicode_FromString	src/if_python3.c	/^static PyObject* (*py3_PyUnicode_FromString)(const char *u);$/;"	v	file:
py3_PyUnicode_FromStringAndSize	src/if_python3.c	/^static PyObject* (*py3_PyUnicode_FromStringAndSize)(const char *u, Py_ssize_t size);$/;"	v	file:
py3_Py_BuildValue	src/if_python3.c	/^static PyObject* (*py3_Py_BuildValue)(char *, ...);$/;"	v	file:
py3_Py_Finalize	src/if_python3.c	/^static void (*py3_Py_Finalize)(void);$/;"	v	file:
py3_Py_Initialize	src/if_python3.c	/^static void (*py3_Py_Initialize)(void);$/;"	v	file:
py3_Py_IsInitialized	src/if_python3.c	/^static int (*py3_Py_IsInitialized)(void);$/;"	v	file:
py3__PyObject_DebugFree	src/if_python3.c	/^    static void (*py3__PyObject_DebugFree)(void*);$/;"	v	file:
py3__PyObject_DebugMalloc	src/if_python3.c	/^    static void* (*py3__PyObject_DebugMalloc)(size_t);$/;"	v	file:
py3__PyObject_Init	src/if_python3.c	/^static PyObject*(*py3__PyObject_Init)(PyObject *, PyTypeObject *);$/;"	v	file:
py3__PyUnicode_AsString	src/if_python3.c	/^static char* (*py3__PyUnicode_AsString)(PyObject *unicode);$/;"	v	file:
py3__Py_Dealloc	src/if_python3.c	/^    static void (*py3__Py_Dealloc)(PyObject *obj);$/;"	v	file:
py3__Py_NegativeRefcount	src/if_python3.c	/^    static void (*py3__Py_NegativeRefcount)(const char *fname, int lineno, PyObject *op);$/;"	v	file:
py3__Py_NoneStruct	src/if_python3.c	/^static PyObject* py3__Py_NoneStruct;$/;"	v	file:
py3__Py_RefTotal	src/if_python3.c	/^    static Py_ssize_t* py3__Py_RefTotal;$/;"	v	file:
py3_funcname_table	src/if_python3.c	/^} py3_funcname_table[] =$/;"	v	typeref:struct:__anon107	file:
py3_runtime_link_init	src/if_python3.c	/^py3_runtime_link_init(char *libname, int verbose)$/;"	f	file:	signature:(char *libname, int verbose)
py3initialised	src/if_python3.c	/^static int py3initialised = 0;$/;"	v	file:
py_fix_cursor	src/if_py_both.h	/^py_fix_cursor(linenr_T lo, linenr_T hi, linenr_T extra)$/;"	f	signature:(linenr_T lo, linenr_T hi, linenr_T extra)
pygilstate	src/if_python.c	/^static PyGILState_STATE pygilstate = PyGILState_UNLOCKED;$/;"	v	file:
pygilstate	src/if_python3.c	/^static PyGILState_STATE pygilstate = PyGILState_UNLOCKED;$/;"	v	file:
python3_buffer_free	src/if_python3.c	/^python3_buffer_free(buf_T *buf)$/;"	f	signature:(buf_T *buf)
python3_enabled	src/if_python3.c	/^python3_enabled(int verbose)$/;"	f	signature:(int verbose)
python3_end	src/if_python3.c	/^python3_end()$/;"	f
python3_loaded	src/if_python3.c	/^python3_loaded()$/;"	f
python3_window_free	src/if_python3.c	/^python3_window_free(win_T *win)$/;"	f	signature:(win_T *win)
python3complete#Complete	runtime/autoload/python3complete.vim	/^function! python3complete#Complete(findstart, base)$/;"	f
python_buffer_free	src/if_python.c	/^python_buffer_free(buf_T *buf)$/;"	f	signature:(buf_T *buf)
python_enabled	src/if_python.c	/^python_enabled(int verbose)$/;"	f	signature:(int verbose)
python_end	src/if_python.c	/^python_end()$/;"	f
python_funcname_table	src/if_python.c	/^} python_funcname_table[] =$/;"	v	typeref:struct:__anon93	file:
python_loaded	src/if_python.c	/^python_loaded()$/;"	f
python_runtime_link_init	src/if_python.c	/^python_runtime_link_init(char *libname, int verbose)$/;"	f	file:	signature:(char *libname, int verbose)
python_space_error_highlight	runtime/syntax/python.vim	/^  let python_space_error_highlight = 1$/;"	v
python_window_free	src/if_python.c	/^python_window_free(win_T *win)$/;"	f	signature:(win_T *win)
pythoncomplete#Complete	runtime/autoload/pythoncomplete.vim	/^function! pythoncomplete#Complete(findstart, base)$/;"	f
q	runtime/macros/hanoi/hanoi.vim	/^map q tllD$/;"	m
q	runtime/macros/less.vim	/^noremap q :q<CR>$/;"	m
qf_add_entry	src/quickfix.c	/^qf_add_entry(qi, prevp, dir, fname, bufnum, mesg, lnum, col, vis_col, pattern,$/;"	f	file:
qf_add_entry	src/quickfix.c	/^static int	qf_add_entry __ARGS((qf_info_T *qi, qfline_T **prevp, char_u *dir, char_u *fname, int bufnum, char_u *mesg, long lnum, int col, int vis_col, char_u *pattern, int nr, int type, int valid));$/;"	p	file:	signature:(qf_info_T *qi, qfline_T **prevp, char_u *dir, char_u *fname, int bufnum, char_u *mesg, long lnum, int col, int vis_col, char_u *pattern, int nr, int type, int valid)
qf_age	src/ex_docmd.c	116;"	d	file:
qf_age	src/quickfix.c	/^qf_age(eap)$/;"	f
qf_clean_dir_stack	src/quickfix.c	/^qf_clean_dir_stack(stackptr)$/;"	f	file:
qf_clean_dir_stack	src/quickfix.c	/^static void	qf_clean_dir_stack __ARGS((struct dir_stack_T **));$/;"	p	file:	signature:(struct dir_stack_T **)
qf_cleared	src/quickfix.c	/^    char_u	qf_cleared;	\/* set to TRUE if line has been deleted *\/$/;"	m	struct:qfline_S	file:	access:public
qf_col	src/quickfix.c	/^    int		qf_col;		\/* column where the error occurred *\/$/;"	m	struct:qfline_S	file:	access:public
qf_count	src/quickfix.c	/^    int		qf_count;	\/* number of errors (0 means no error list) *\/$/;"	m	struct:qf_list_S	file:	access:public
qf_curlist	src/quickfix.c	/^    int		qf_curlist;	    \/* current error list *\/$/;"	m	struct:qf_info_S	file:	access:public
qf_current_entry	src/quickfix.c	/^qf_current_entry(wp)$/;"	f
qf_fill_buffer	src/quickfix.c	/^qf_fill_buffer(qi)$/;"	f	file:
qf_fill_buffer	src/quickfix.c	/^static void	qf_fill_buffer __ARGS((qf_info_T *qi));$/;"	p	file:	signature:(qf_info_T *qi)
qf_find_buf	src/quickfix.c	/^qf_find_buf(qi)$/;"	f	file:
qf_find_buf	src/quickfix.c	/^static buf_T	*qf_find_buf __ARGS((qf_info_T *qi));$/;"	p	file:	signature:(qf_info_T *qi)
qf_find_win	src/quickfix.c	/^qf_find_win(qi)$/;"	f	file:
qf_find_win	src/quickfix.c	/^static win_T	*qf_find_win __ARGS((qf_info_T *qi));$/;"	p	file:	signature:(qf_info_T *qi)
qf_fmt_text	src/quickfix.c	/^qf_fmt_text(text, buf, bufsize)$/;"	f	file:
qf_fmt_text	src/quickfix.c	/^static void	qf_fmt_text __ARGS((char_u *text, char_u *buf, int bufsize));$/;"	p	file:	signature:(char_u *text, char_u *buf, int bufsize)
qf_fnum	src/quickfix.c	/^    int		qf_fnum;	\/* file number for the line *\/$/;"	m	struct:qfline_S	file:	access:public
qf_free	src/quickfix.c	/^qf_free(qi, idx)$/;"	f	file:
qf_free	src/quickfix.c	/^static void	qf_free __ARGS((qf_info_T *qi, int idx));$/;"	p	file:	signature:(qf_info_T *qi, int idx)
qf_free_all	src/quickfix.c	/^qf_free_all(wp)$/;"	f
qf_get_fnum	src/quickfix.c	/^qf_get_fnum(directory, fname)$/;"	f	file:
qf_get_fnum	src/quickfix.c	/^static int	qf_get_fnum __ARGS((char_u *, char_u *));$/;"	p	file:	signature:(char_u *, char_u *)
qf_guess_filepath	src/quickfix.c	/^qf_guess_filepath(filename)$/;"	f	file:
qf_guess_filepath	src/quickfix.c	/^static char_u	*qf_guess_filepath __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
qf_index	src/quickfix.c	/^    int		qf_index;	\/* current index in the error list *\/$/;"	m	struct:qf_list_S	file:	access:public
qf_info_S	src/quickfix.c	/^struct qf_info_S$/;"	s	file:
qf_info_S::qf_curlist	src/quickfix.c	/^    int		qf_curlist;	    \/* current error list *\/$/;"	m	struct:qf_info_S	file:	access:public
qf_info_S::qf_listcount	src/quickfix.c	/^    int		qf_listcount;	    \/* current number of lists *\/$/;"	m	struct:qf_info_S	file:	access:public
qf_info_S::qf_lists	src/quickfix.c	/^    qf_list_T	qf_lists[LISTCOUNT];$/;"	m	struct:qf_info_S	file:	access:public
qf_info_S::qf_refcount	src/quickfix.c	/^    int		qf_refcount;$/;"	m	struct:qf_info_S	file:	access:public
qf_info_T	src/structs.h	/^typedef struct qf_info_S qf_info_T;$/;"	t	typeref:struct:qf_info_S
qf_init	src/quickfix.c	/^qf_init(wp, efile, errorformat, newlist, qf_title)$/;"	f
qf_init_ext	src/quickfix.c	/^qf_init_ext(qi, efile, buf, tv, errorformat, newlist, lnumfirst, lnumlast,$/;"	f	file:
qf_init_ext	src/quickfix.c	/^static int	qf_init_ext __ARGS((qf_info_T *qi, char_u *efile, buf_T *buf, typval_T *tv, char_u *errorformat, int newlist, linenr_T lnumfirst, linenr_T lnumlast, char_u *qf_title));$/;"	p	file:	signature:(qf_info_T *qi, char_u *efile, buf_T *buf, typval_T *tv, char_u *errorformat, int newlist, linenr_T lnumfirst, linenr_T lnumlast, char_u *qf_title)
qf_jump	src/quickfix.c	/^qf_jump(qi, dir, errornr, forceit)$/;"	f
qf_list	src/ex_docmd.c	115;"	d	file:
qf_list	src/quickfix.c	/^qf_list(eap)$/;"	f
qf_list_S	src/quickfix.c	/^typedef struct qf_list_S$/;"	s	file:
qf_list_S::qf_count	src/quickfix.c	/^    int		qf_count;	\/* number of errors (0 means no error list) *\/$/;"	m	struct:qf_list_S	file:	access:public
qf_list_S::qf_index	src/quickfix.c	/^    int		qf_index;	\/* current index in the error list *\/$/;"	m	struct:qf_list_S	file:	access:public
qf_list_S::qf_nonevalid	src/quickfix.c	/^    int		qf_nonevalid;	\/* TRUE if not a single valid entry found *\/$/;"	m	struct:qf_list_S	file:	access:public
qf_list_S::qf_ptr	src/quickfix.c	/^    qfline_T	*qf_ptr;	\/* pointer to the current error *\/$/;"	m	struct:qf_list_S	file:	access:public
qf_list_S::qf_start	src/quickfix.c	/^    qfline_T	*qf_start;	\/* pointer to the first error *\/$/;"	m	struct:qf_list_S	file:	access:public
qf_list_S::qf_title	src/quickfix.c	/^    char_u	*qf_title;	\/* title derived from the command that created$/;"	m	struct:qf_list_S	file:	access:public
qf_list_T	src/quickfix.c	/^} qf_list_T;$/;"	t	typeref:struct:qf_list_S	file:
qf_listcount	src/quickfix.c	/^    int		qf_listcount;	    \/* current number of lists *\/$/;"	m	struct:qf_info_S	file:	access:public
qf_lists	src/quickfix.c	/^    qf_list_T	qf_lists[LISTCOUNT];$/;"	m	struct:qf_info_S	file:	access:public
qf_lnum	src/quickfix.c	/^    linenr_T	qf_lnum;	\/* line number where the error occurred *\/$/;"	m	struct:qfline_S	file:	access:public
qf_mark_adjust	src/quickfix.c	/^qf_mark_adjust(wp, line1, line2, amount, amount_after)$/;"	f
qf_msg	src/quickfix.c	/^qf_msg(qi)$/;"	f	file:
qf_msg	src/quickfix.c	/^static void	qf_msg __ARGS((qf_info_T *qi));$/;"	p	file:	signature:(qf_info_T *qi)
qf_new_list	src/quickfix.c	/^qf_new_list(qi, qf_title)$/;"	f	file:
qf_new_list	src/quickfix.c	/^static void	qf_new_list __ARGS((qf_info_T *qi, char_u *qf_title));$/;"	p	file:	signature:(qf_info_T *qi, char_u *qf_title)
qf_next	src/quickfix.c	/^    qfline_T	*qf_next;	\/* pointer to next error in the list *\/$/;"	m	struct:qfline_S	file:	access:public
qf_nonevalid	src/quickfix.c	/^    int		qf_nonevalid;	\/* TRUE if not a single valid entry found *\/$/;"	m	struct:qf_list_S	file:	access:public
qf_nr	src/quickfix.c	/^    int		qf_nr;		\/* error number *\/$/;"	m	struct:qfline_S	file:	access:public
qf_pattern	src/quickfix.c	/^    char_u	*qf_pattern;	\/* search pattern for the error *\/$/;"	m	struct:qfline_S	file:	access:public
qf_pop_dir	src/quickfix.c	/^qf_pop_dir(stackptr)$/;"	f	file:
qf_pop_dir	src/quickfix.c	/^static char_u	*qf_pop_dir __ARGS((struct dir_stack_T **));$/;"	p	file:	signature:(struct dir_stack_T **)
qf_prev	src/quickfix.c	/^    qfline_T	*qf_prev;	\/* pointer to previous error in the list *\/$/;"	m	struct:qfline_S	file:	access:public
qf_ptr	src/quickfix.c	/^    qfline_T	*qf_ptr;	\/* pointer to the current error *\/$/;"	m	struct:qf_list_S	file:	access:public
qf_push_dir	src/quickfix.c	/^qf_push_dir(dirbuf, stackptr)$/;"	f	file:
qf_push_dir	src/quickfix.c	/^static char_u	*qf_push_dir __ARGS((char_u *, struct dir_stack_T **));$/;"	p	file:	signature:(char_u *, struct dir_stack_T **)
qf_refcount	src/quickfix.c	/^    int		qf_refcount;$/;"	m	struct:qf_info_S	file:	access:public
qf_start	src/quickfix.c	/^    qfline_T	*qf_start;	\/* pointer to the first error *\/$/;"	m	struct:qf_list_S	file:	access:public
qf_text	src/quickfix.c	/^    char_u	*qf_text;	\/* description of the error *\/$/;"	m	struct:qfline_S	file:	access:public
qf_title	src/quickfix.c	/^    char_u	*qf_title;	\/* title derived from the command that created$/;"	m	struct:qf_list_S	file:	access:public
qf_type	src/quickfix.c	/^    char_u	qf_type;	\/* type of the error (mostly 'E'); 1 for$/;"	m	struct:qfline_S	file:	access:public
qf_types	src/quickfix.c	/^qf_types(c, nr)$/;"	f	file:
qf_types	src/quickfix.c	/^static char_u	*qf_types __ARGS((int, int));$/;"	p	file:	signature:(int, int)
qf_update_buffer	src/quickfix.c	/^qf_update_buffer(qi)$/;"	f	file:
qf_update_buffer	src/quickfix.c	/^static void	qf_update_buffer __ARGS((qf_info_T *qi));$/;"	p	file:	signature:(qf_info_T *qi)
qf_valid	src/quickfix.c	/^    char_u	qf_valid;	\/* valid error message detected *\/$/;"	m	struct:qfline_S	file:	access:public
qf_viscol	src/quickfix.c	/^    char_u	qf_viscol;	\/* set to TRUE if qf_col is screen column *\/$/;"	m	struct:qfline_S	file:	access:public
qf_win_pos_update	src/quickfix.c	/^qf_win_pos_update(qi, old_qf_index)$/;"	f	file:
qf_win_pos_update	src/quickfix.c	/^static int	qf_win_pos_update __ARGS((qf_info_T *qi, int old_qf_index));$/;"	p	file:	signature:(qf_info_T *qi, int old_qf_index)
qfline_S	src/quickfix.c	/^struct qfline_S$/;"	s	file:
qfline_S::qf_cleared	src/quickfix.c	/^    char_u	qf_cleared;	\/* set to TRUE if line has been deleted *\/$/;"	m	struct:qfline_S	file:	access:public
qfline_S::qf_col	src/quickfix.c	/^    int		qf_col;		\/* column where the error occurred *\/$/;"	m	struct:qfline_S	file:	access:public
qfline_S::qf_fnum	src/quickfix.c	/^    int		qf_fnum;	\/* file number for the line *\/$/;"	m	struct:qfline_S	file:	access:public
qfline_S::qf_lnum	src/quickfix.c	/^    linenr_T	qf_lnum;	\/* line number where the error occurred *\/$/;"	m	struct:qfline_S	file:	access:public
qfline_S::qf_next	src/quickfix.c	/^    qfline_T	*qf_next;	\/* pointer to next error in the list *\/$/;"	m	struct:qfline_S	file:	access:public
qfline_S::qf_nr	src/quickfix.c	/^    int		qf_nr;		\/* error number *\/$/;"	m	struct:qfline_S	file:	access:public
qfline_S::qf_pattern	src/quickfix.c	/^    char_u	*qf_pattern;	\/* search pattern for the error *\/$/;"	m	struct:qfline_S	file:	access:public
qfline_S::qf_prev	src/quickfix.c	/^    qfline_T	*qf_prev;	\/* pointer to previous error in the list *\/$/;"	m	struct:qfline_S	file:	access:public
qfline_S::qf_text	src/quickfix.c	/^    char_u	*qf_text;	\/* description of the error *\/$/;"	m	struct:qfline_S	file:	access:public
qfline_S::qf_type	src/quickfix.c	/^    char_u	qf_type;	\/* type of the error (mostly 'E'); 1 for$/;"	m	struct:qfline_S	file:	access:public
qfline_S::qf_valid	src/quickfix.c	/^    char_u	qf_valid;	\/* valid error message detected *\/$/;"	m	struct:qfline_S	file:	access:public
qfline_S::qf_viscol	src/quickfix.c	/^    char_u	qf_viscol;	\/* set to TRUE if qf_col is screen column *\/$/;"	m	struct:qfline_S	file:	access:public
qfline_T	src/quickfix.c	/^typedef struct qfline_S qfline_T;$/;"	t	typeref:struct:qfline_S	file:
ql_info	src/quickfix.c	/^static qf_info_T ql_info;	\/* global quickfix list *\/$/;"	v	file:
qnx_clip_init	src/os_qnx.c	/^void qnx_clip_init()$/;"	f
qnx_init	src/os_qnx.c	/^void qnx_init()$/;"	f
qsort	src/misc2.c	/^qsort(base, elm_count, elm_size, cmp)$/;"	f
qsort	src/proto.h	/^void qsort __ARGS((void *base, size_t elm_count, size_t elm_size, int (*cmp)(const void *, const void *)));$/;"	p	signature:(void *base, size_t elm_count, size_t elm_size, int (*cmp)(const void *, const void *))
query	src/hangulin.c	45;"	d	file:
queue_T	src/netbeans.c	/^typedef struct cmdqueue queue_T;$/;"	t	typeref:struct:cmdqueue	file:
quit_more	src/globals.h	/^EXTERN int	quit_more INIT(= FALSE);    \/* 'q' hit at "--more--" msg *\/$/;"	v
quitmore	src/ex_docmd.c	/^static int	quitmore = 0;$/;"	v	file:
quits_skipped	src/testdir/test49.vim	/^    let quits_skipped = 0$/;"	v
quote_meta	src/edit.c	/^quote_meta(dest, src, len)$/;"	f	file:
quote_meta	src/edit.c	/^static unsigned  quote_meta __ARGS((char_u *dest, char_u *str, int len));$/;"	p	file:	signature:(char_u *dest, char_u *str, int len)
r	runtime/macros/less.vim	/^noremap <script> r <C-L><SID>L$/;"	m
r0	src/swis.s	/^r0:	dcd	0$/;"	l
r1	src/swis.s	/^r1:	dcd	0$/;"	l
r2	src/swis.s	/^r2:	dcd	0$/;"	l
r3	src/swis.s	/^r3:	dcd	0$/;"	l
r4	src/swis.s	/^r4:	dcd	0$/;"	l
r5	src/swis.s	/^r5:	dcd	0$/;"	l
r6	src/swis.s	/^r6:	dcd	0$/;"	l
r7	src/swis.s	/^r7:	dcd	0$/;"	l
r_bac	src/gui_riscos.c	/^    int		r_bac;$/;"	m	struct:__anon8	file:	access:public
r_bpl	src/gui_riscos.c	/^    int		r_bpl;$/;"	m	struct:__anon8	file:	access:public
r_bpp	src/gui_riscos.c	/^    int		r_bpp;$/;"	m	struct:__anon8	file:	access:public
r_caddr	src/gui_riscos.c	/^    char	*r_caddr;$/;"	m	struct:__anon8	file:	access:public
r_cbpc	src/gui_riscos.c	/^    int		r_cbpc;$/;"	m	struct:__anon8	file:	access:public
r_cbpl	src/gui_riscos.c	/^    int		r_cbpl;$/;"	m	struct:__anon8	file:	access:public
r_charh	src/gui_riscos.c	/^    int		r_charh;$/;"	m	struct:__anon8	file:	access:public
r_charw	src/gui_riscos.c	/^    int		r_charw;$/;"	m	struct:__anon8	file:	access:public
r_cmdno	src/netbeans.c	/^static int r_cmdno;			\/* current command number for reply *\/$/;"	v	file:
r_data	src/gui_riscos.c	/^    int		r_data;$/;"	m	struct:__anon8	file:	access:public
r_flags	src/gui_riscos.c	/^    int		r_flags;$/;"	m	struct:__anon8	file:	access:public
r_for	src/gui_riscos.c	/^    int		r_for;$/;"	m	struct:__anon8	file:	access:public
r_linesp	src/gui_riscos.c	/^    int		r_linesp;$/;"	m	struct:__anon8	file:	access:public
r_magx	src/gui_riscos.c	/^    int		r_magx;$/;"	m	struct:__anon8	file:	access:public
r_magy	src/gui_riscos.c	/^    int		r_magy;$/;"	m	struct:__anon8	file:	access:public
r_maxx	src/gui_riscos.c	/^    int		r_maxx;$/;"	m	struct:__anon8	file:	access:public
r_maxy	src/gui_riscos.c	/^    int		r_maxy;$/;"	m	struct:__anon8	file:	access:public
r_minx	src/gui_riscos.c	/^    int		r_minx;$/;"	m	struct:__anon8	file:	access:public
r_miny	src/gui_riscos.c	/^    int		r_miny;$/;"	m	struct:__anon8	file:	access:public
r_mode	src/gui_riscos.c	/^    int		r_mode;$/;"	m	struct:__anon8	file:	access:public
r_palette	src/gui_riscos.c	/^    int		*r_palette;$/;"	m	struct:__anon8	file:	access:public
r_screen	src/gui_riscos.c	/^    int		r_screen;$/;"	m	struct:__anon8	file:	access:public
r_scrollx	src/gui_riscos.c	/^    int		r_scrollx;$/;"	m	struct:__anon8	file:	access:public
r_scrolly	src/gui_riscos.c	/^    int		r_scrolly;$/;"	m	struct:__anon8	file:	access:public
r_workarea	src/gui_riscos.c	/^    char	*r_workarea;$/;"	m	struct:__anon8	file:	access:public
r_xsize	src/gui_riscos.c	/^    int		r_xsize;$/;"	m	struct:__anon8	file:	access:public
r_ysize	src/gui_riscos.c	/^    int		r_ysize;$/;"	m	struct:__anon8	file:	access:public
raise_if_error	src/if_mzsch.c	/^raise_if_error(void)$/;"	f	signature:(void)
raise_vim_exn	src/if_mzsch.c	/^raise_vim_exn(const char *add_info)$/;"	f	signature:(const char *add_info)
randbyte_offset	src/blowfish.c	/^static int randbyte_offset = 0;$/;"	v	file:
rangeEnd	src/mbyte.c	/^    int rangeEnd;$/;"	m	struct:__anon136	file:	access:public
rangeStart	src/mbyte.c	/^    int rangeStart;$/;"	m	struct:__anon136	file:	access:public
range_end	src/if_mzsch.c	/^static long range_end;$/;"	v	file:
range_end	src/if_tcl.c	/^    int range_start, range_end;$/;"	m	struct:__anon123	file:	access:public
range_start	src/if_mzsch.c	/^static long range_start;$/;"	v	file:
range_start	src/if_tcl.c	/^    int range_start, range_end;$/;"	m	struct:__anon123	file:	access:public
raw_in	src/os_amiga.c	/^static BPTR		raw_in = (BPTR)NULL;$/;"	v	file:
raw_out	src/os_amiga.c	/^static BPTR		raw_out = (BPTR)NULL;$/;"	v	file:
rawlen	src/os_mswin.c	/^    int rawlen;		\/* length of clip_star.format_raw, including encoding,$/;"	m	struct:__anon19	file:	access:public
rb_ary_new	src/if_ruby.c	183;"	d	file:
rb_ary_push	src/if_ruby.c	184;"	d	file:
rb_assoc_new	src/if_ruby.c	136;"	d	file:
rb_cFalseClass	src/if_ruby.c	35;"	d	file:
rb_cFixnum	src/if_ruby.c	36;"	d	file:
rb_cNilClass	src/if_ruby.c	37;"	d	file:
rb_cObject	src/if_ruby.c	137;"	d	file:
rb_cSymbol	src/if_ruby.c	38;"	d	file:
rb_cTrueClass	src/if_ruby.c	39;"	d	file:
rb_check_type	src/if_ruby.c	138;"	d	file:
rb_class_path	src/if_ruby.c	139;"	d	file:
rb_data_object_alloc	src/if_ruby.c	140;"	d	file:
rb_define_class_under	src/if_ruby.c	141;"	d	file:
rb_define_const	src/if_ruby.c	142;"	d	file:
rb_define_global_function	src/if_ruby.c	143;"	d	file:
rb_define_method	src/if_ruby.c	144;"	d	file:
rb_define_module	src/if_ruby.c	145;"	d	file:
rb_define_module_function	src/if_ruby.c	146;"	d	file:
rb_define_singleton_method	src/if_ruby.c	147;"	d	file:
rb_define_virtual_variable	src/if_ruby.c	148;"	d	file:
rb_eArgError	src/if_ruby.c	150;"	d	file:
rb_eIndexError	src/if_ruby.c	151;"	d	file:
rb_eRuntimeError	src/if_ruby.c	152;"	d	file:
rb_eStandardError	src/if_ruby.c	153;"	d	file:
rb_enc_find	src/if_ruby.c	201;"	d	file:
rb_enc_find_index	src/if_ruby.c	200;"	d	file:
rb_enc_str_new	src/if_ruby.c	202;"	d	file:
rb_errinfo	src/if_ruby.c	187;"	d	file:
rb_eval_string_protect	src/if_ruby.c	154;"	d	file:
rb_float_new	src/if_ruby.c	182;"	d	file:
rb_global_variable	src/if_ruby.c	155;"	d	file:
rb_hash_aset	src/if_ruby.c	156;"	d	file:
rb_hash_new	src/if_ruby.c	157;"	d	file:
rb_inspect	src/if_ruby.c	158;"	d	file:
rb_int2big	src/if_ruby.c	65;"	d	file:
rb_int2big_stub	src/if_ruby.c	/^VALUE rb_int2big_stub(SIGNED_VALUE x)$/;"	f	signature:(SIGNED_VALUE x)
rb_int2inum	src/if_ruby.c	159;"	d	file:
rb_lastline_get	src/if_ruby.c	160;"	d	file:
rb_lastline_set	src/if_ruby.c	161;"	d	file:
rb_load_protect	src/if_ruby.c	162;"	d	file:
rb_num2long	src/if_ruby.c	163;"	d	file:
rb_num2long	src/if_ruby.c	64;"	d	file:
rb_num2long_stub	src/if_ruby.c	/^SIGNED_VALUE rb_num2long_stub(VALUE x)$/;"	f	signature:(VALUE x)
rb_num2ulong	src/if_ruby.c	164;"	d	file:
rb_obj_alloc	src/if_ruby.c	165;"	d	file:
rb_obj_as_string	src/if_ruby.c	166;"	d	file:
rb_obj_id	src/if_ruby.c	167;"	d	file:
rb_raise	src/if_ruby.c	168;"	d	file:
rb_sprintf	src/if_ruby.c	203;"	d	file:
rb_stdout	src/if_ruby.c	149;"	d	file:
rb_str2cstr	src/if_ruby.c	169;"	d	file:
rb_str_cat	src/if_ruby.c	170;"	d	file:
rb_str_concat	src/if_ruby.c	171;"	d	file:
rb_str_new	src/if_ruby.c	172;"	d	file:
rb_str_new2	src/if_ruby.c	178;"	d	file:
rb_str_new_cstr	src/if_ruby.c	176;"	d	file:
rb_string_value_ptr	src/if_ruby.c	181;"	d	file:
rb_w32_snprintf	src/if_ruby.c	195;"	d	file:
rcArea	src/gui_w32.c	/^    RECT  rcArea;$/;"	m	struct:tagCOMPOSITIONFORM	file:	access:public
rcMonitor	src/gui_w32.c	/^    RECT rcMonitor;$/;"	m	struct:_MONITORINFOstruct	file:	access:public
rcWork	src/gui_w32.c	/^    RECT rcWork;$/;"	m	struct:_MONITORINFOstruct	file:	access:public
rc_did_emsg	src/globals.h	/^EXTERN int	rc_did_emsg INIT(= FALSE);  \/* vim_regcomp() called emsg() *\/$/;"	v
re_extmatch_in	src/globals.h	/^EXTERN reg_extmatch_T *re_extmatch_in INIT(= NULL); \/* Used by vim_regexec():$/;"	v
re_extmatch_out	src/globals.h	/^EXTERN reg_extmatch_T *re_extmatch_out INIT(= NULL); \/* Set by vim_regexec()$/;"	v
re_has_z	src/regexp.c	/^static int	re_has_z;	\/* \\z item detected *\/$/;"	v	file:
re_lookbehind	src/regexp.c	/^re_lookbehind(prog)$/;"	f
re_multi_type	src/regexp.c	/^re_multi_type(c)$/;"	f	file:
re_multi_type	src/regexp.c	/^static int re_multi_type __ARGS((int));$/;"	p	file:	signature:(int)
re_multiline	src/regexp.c	/^re_multiline(prog)$/;"	f
re_num_cmp	src/regexp.c	/^re_num_cmp(val, scan)$/;"	f	file:
re_num_cmp	src/regexp.c	/^static int	re_num_cmp __ARGS((long_u val, char_u *scan));$/;"	p	file:	signature:(long_u val, char_u *scan)
re_put_long	src/regexp.c	/^re_put_long(p, val)$/;"	f	file:
re_put_long	src/regexp.c	/^static char_u	*re_put_long __ARGS((char_u *pr, long_u val));$/;"	p	file:	signature:(char_u *pr, long_u val)
readTagFile	runtime/doc/vim2html.pl	/^sub readTagFile$/;"	s
read_charflags_section	src/spell.c	/^read_charflags_section(fd)$/;"	f	file:
read_charflags_section	src/spell.c	/^static int read_charflags_section __ARGS((FILE *fd));$/;"	p	file:	signature:(FILE *fd)
read_cmd_fd	src/globals.h	/^EXTERN int	read_cmd_fd INIT(= 0);	    \/* fd to read commands from *\/$/;"	v
read_cnt_string	src/spell.c	/^read_cnt_string(fd, cnt_bytes, cntp)$/;"	f	file:
read_cnt_string	src/spell.c	/^static char_u *read_cnt_string __ARGS((FILE *fd, int cnt_bytes, int *lenp));$/;"	p	file:	signature:(FILE *fd, int cnt_bytes, int *lenp)
read_compound	src/spell.c	/^read_compound(fd, slang, len)$/;"	f	file:
read_compound	src/spell.c	/^static int read_compound __ARGS((FILE *fd, slang_T *slang, int len));$/;"	p	file:	signature:(FILE *fd, slang_T *slang, int len)
read_edit	src/ex_cmds.h	/^    int		read_edit;	\/* ++edit argument *\/$/;"	m	struct:exarg	access:public
read_error_exit	src/ui.c	/^read_error_exit()$/;"	f
read_from_input_buf	src/ui.c	/^read_from_input_buf(buf, maxlen)$/;"	f
read_limits	src/regexp.c	/^read_limits(minval, maxval)$/;"	f	file:
read_limits	src/regexp.c	/^static int	read_limits __ARGS((long *, long *));$/;"	p	file:	signature:(long *, long *)
read_prefcond_section	src/spell.c	/^read_prefcond_section(fd, lp)$/;"	f	file:
read_prefcond_section	src/spell.c	/^static int read_prefcond_section __ARGS((FILE *fd, slang_T *lp));$/;"	p	file:	signature:(FILE *fd, slang_T *lp)
read_redo	src/getchar.c	/^read_redo(init, old_redo)$/;"	f	file:
read_redo	src/getchar.c	/^static int	read_redo __ARGS((int, int));$/;"	p	file:	signature:(int, int)
read_region_section	src/spell.c	/^read_region_section(fd, lp, len)$/;"	f	file:
read_region_section	src/spell.c	/^static int read_region_section __ARGS((FILE *fd, slang_T *slang, int len));$/;"	p	file:	signature:(FILE *fd, slang_T *slang, int len)
read_rep_section	src/spell.c	/^read_rep_section(fd, gap, first)$/;"	f	file:
read_rep_section	src/spell.c	/^static int read_rep_section __ARGS((FILE *fd, garray_T *gap, short *first));$/;"	p	file:	signature:(FILE *fd, garray_T *gap, short *first)
read_sal_section	src/spell.c	/^read_sal_section(fd, slang)$/;"	f	file:
read_sal_section	src/spell.c	/^static int read_sal_section __ARGS((FILE *fd, slang_T *slang));$/;"	p	file:	signature:(FILE *fd, slang_T *slang)
read_sofo_section	src/spell.c	/^read_sofo_section(fd, slang)$/;"	f	file:
read_sofo_section	src/spell.c	/^static int read_sofo_section __ARGS((FILE *fd, slang_T *slang));$/;"	p	file:	signature:(FILE *fd, slang_T *slang)
read_stdin	src/main.c	/^read_stdin()$/;"	f	file:
read_stdin	src/main.c	/^static void read_stdin __ARGS((void));$/;"	p	file:	signature:(void)
read_string	src/misc2.c	/^read_string(fd, cnt)$/;"	f
read_string_decrypt	src/undo.c	/^read_string_decrypt(buf, fd, len)$/;"	f	file:
read_string_decrypt	src/undo.c	/^static char_u *read_string_decrypt __ARGS((buf_T *buf UNUSED, FILE *fd, int len));$/;"	p	file:	signature:(buf_T *buf UNUSED, FILE *fd, int len)
read_stuff	src/getchar.c	/^read_stuff(advance)$/;"	f	file:
read_stuff	src/getchar.c	/^static int	read_stuff __ARGS((int advance));$/;"	p	file:	signature:(int advance)
read_thread	src/os_beos.c	/^read_thread(void *dummy)$/;"	f	file:	signature:(void *dummy)
read_thread_id	src/os_beos.c	/^thread_id read_thread_id;$/;"	v
read_tree_node	src/spell.c	/^read_tree_node(fd, byts, idxs, maxidx, startidx, prefixtree, maxprefcondnr)$/;"	f	file:
read_tree_node	src/spell.c	/^static idx_T read_tree_node __ARGS((FILE *fd, char_u *byts, idx_T *idxs, int maxidx, idx_T startidx, int prefixtree, int maxprefcondnr));$/;"	p	file:	signature:(FILE *fd, char_u *byts, idx_T *idxs, int maxidx, idx_T startidx, int prefixtree, int maxprefcondnr)
read_viminfo	src/ex_cmds.c	/^read_viminfo(file, flags)$/;"	f
read_viminfo_bufferlist	src/buffer.c	/^read_viminfo_bufferlist(virp, writing)$/;"	f
read_viminfo_filemark	src/mark.c	/^read_viminfo_filemark(virp, force)$/;"	f
read_viminfo_history	src/ex_getln.c	/^read_viminfo_history(virp)$/;"	f
read_viminfo_register	src/ops.c	/^read_viminfo_register(virp, force)$/;"	f
read_viminfo_search_pattern	src/search.c	/^read_viminfo_search_pattern(virp, force)$/;"	f
read_viminfo_sub_string	src/ex_cmds.c	/^read_viminfo_sub_string(virp, force)$/;"	f
read_viminfo_up_to_marks	src/ex_cmds.c	/^read_viminfo_up_to_marks(virp, forceit, writing)$/;"	f	file:
read_viminfo_up_to_marks	src/ex_cmds.c	/^static int read_viminfo_up_to_marks __ARGS((vir_T *virp, int forceit, int writing));$/;"	p	file:	signature:(vir_T *virp, int forceit, int writing)
read_viminfo_varlist	src/eval.c	/^read_viminfo_varlist(virp, writing)$/;"	f
read_words_section	src/spell.c	/^read_words_section(fd, lp, len)$/;"	f	file:
read_words_section	src/spell.c	/^static int read_words_section __ARGS((FILE *fd, slang_T *lp, int len));$/;"	p	file:	signature:(FILE *fd, slang_T *lp, int len)
readfile	src/fileio.c	/^readfile(fname, sfname, from, lines_to_skip, lines_to_read, eap, flags)$/;"	f
readfile_charconvert	src/fileio.c	/^readfile_charconvert(fname, fenc, fdp)$/;"	f	file:
readfile_charconvert	src/fileio.c	/^static char_u *readfile_charconvert __ARGS((char_u *fname, char_u *fenc, int *fdp));$/;"	p	file:	signature:(char_u *fname, char_u *fenc, int *fdp)
readfile_linenr	src/fileio.c	/^readfile_linenr(linecnt, p, endp)$/;"	f	file:
readfile_linenr	src/fileio.c	/^static linenr_T readfile_linenr __ARGS((linenr_T linecnt, char_u *p, char_u *endp));$/;"	p	file:	signature:(linenr_T linecnt, char_u *p, char_u *endp)
readonlymode	src/globals.h	/^EXTERN int	readonlymode INIT(= FALSE); \/* Set to TRUE for "view" *\/$/;"	v
readthread_handle	src/if_sniff.c	/^static HANDLE readthread_handle=NULL;$/;"	v	file:
real	src/gui_at_fs.c	/^    char	*real;$/;"	m	struct:__anon113	file:	access:public
realloc_cmdbuff	src/ex_getln.c	/^realloc_cmdbuff(len)$/;"	f	file:
realloc_cmdbuff	src/ex_getln.c	/^static int	realloc_cmdbuff __ARGS((int len));$/;"	p	file:	signature:(int len)
really_exiting	src/globals.h	/^EXTERN int	really_exiting INIT(= FALSE);$/;"	v
rebuild_tearoff	src/gui_w32.c	/^rebuild_tearoff(vimmenu_T *menu)$/;"	f	file:	signature:(vimmenu_T *menu)
rebuild_tearoff	src/gui_w48.c	/^static void rebuild_tearoff(vimmenu_T *menu);$/;"	p	file:	signature:(vimmenu_T *menu)
receiveHandler	src/gui_mac.c	/^receiveHandler(WindowRef theWindow, void *handlerRefCon, DragRef theDrag)$/;"	f	file:	signature:(WindowRef theWindow, void *handlerRefCon, DragRef theDrag)
received_selection	src/gui_gtk_x11.c	/^static int received_selection = RS_NONE;$/;"	v	file:
recordbuff	src/getchar.c	/^static struct buffheader recordbuff = {{NULL, {NUL}}, NULL, 0, 0};$/;"	v	typeref:struct:buffheader	file:
recov_file_names	src/memline.c	/^recov_file_names(names, path, prepend_dot)$/;"	f	file:
recov_file_names	src/memline.c	/^static int recov_file_names __ARGS((char_u **, char_u *, int prepend_dot));$/;"	p	file:	signature:(char_u **, char_u *, int prepend_dot)
recover_names	src/memline.c	/^recover_names(fname, list, nr, fname_out)$/;"	f
recoverymode	src/globals.h	/^EXTERN int	recoverymode INIT(= FALSE); \/* Set to TRUE for "-r" option *\/$/;"	v
rect	src/gui_w32.c	/^	RECT rect;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
recurse_tearoffs	src/gui_gtk.c	/^recurse_tearoffs(vimmenu_T *menu, int val)$/;"	f	file:	signature:(vimmenu_T *menu, int val)
redir_endp	src/eval.c	/^static char_u	*redir_endp = NULL;$/;"	v	file:
redir_fd	src/globals.h	/^EXTERN FILE *redir_fd INIT(= NULL);	\/* message redirection file *\/$/;"	v
redir_ga	src/eval.c	/^static garray_T redir_ga;	\/* only valid when redir_lval is not NULL *\/$/;"	v	file:
redir_lval	src/eval.c	/^static lval_T	*redir_lval = NULL;$/;"	v	file:
redir_off	src/globals.h	/^EXTERN int  redir_off INIT(= FALSE);	\/* no redirection for a moment *\/$/;"	v
redir_reg	src/globals.h	/^EXTERN int  redir_reg INIT(= 0);	\/* message redirection register *\/$/;"	v
redir_varname	src/eval.c	/^static char_u	*redir_varname = NULL;$/;"	v	file:
redir_vname	src/globals.h	/^EXTERN int  redir_vname INIT(= 0);	\/* message redirection variable *\/$/;"	v
redir_write	src/message.c	/^redir_write(str, maxlen)$/;"	f	file:
redir_write	src/message.c	/^static void redir_write __ARGS((char_u *s, int maxlen));$/;"	p	file:	signature:(char_u *s, int maxlen)
redirecting	src/message.c	/^redirecting()$/;"	f
redo_VIsual_busy	src/globals.h	/^EXTERN int	redo_VIsual_busy INIT(= FALSE);$/;"	v
redo_literal	src/edit.c	/^redo_literal(c)$/;"	f	file:
redo_literal	src/edit.c	/^static void redo_literal __ARGS((int c));$/;"	p	file:	signature:(int c)
redobuff	src/getchar.c	/^static struct buffheader redobuff = {{NULL, {NUL}}, NULL, 0, 0};$/;"	v	typeref:struct:buffheader	file:
redrawWinline	src/screen.c	/^redrawWinline(lnum, invalid)$/;"	f
redraw_all_later	src/screen.c	/^redraw_all_later(type)$/;"	f
redraw_block	src/gui_riscos.c	/^int *redraw_block = NULL;	\/* NULL means not in a redraw loop. *\/$/;"	v
redraw_block	src/screen.c	/^redraw_block(row, end, wp)$/;"	f	file:
redraw_block	src/screen.c	/^static void redraw_block __ARGS((int row, int end, win_T *wp));$/;"	p	file:	signature:(int row, int end, win_T *wp)
redraw_buf_later	src/screen.c	/^redraw_buf_later(buf, type)$/;"	f
redraw_cmdline	src/globals.h	/^EXTERN int	redraw_cmdline INIT(= FALSE);	\/* cmdline must be redrawn *\/$/;"	v
redraw_curbuf_later	src/screen.c	/^redraw_curbuf_later(type)$/;"	f
redraw_custom_statusline	src/screen.c	/^redraw_custom_statusline(wp)$/;"	f	file:
redraw_custom_statusline	src/screen.c	/^static void redraw_custom_statusline __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
redraw_later	src/screen.c	/^redraw_later(type)$/;"	f
redraw_later_clear	src/screen.c	/^redraw_later_clear()$/;"	f
redraw_statuslines	src/screen.c	/^redraw_statuslines()$/;"	f
redraw_tabline	src/globals.h	/^EXTERN int	    redraw_tabline INIT(= FALSE);  \/* need to redraw tabline *\/$/;"	v
redraw_titles	src/option.c	/^static void redraw_titles __ARGS((void));$/;"	p	file:	signature:(void)
redraw_titles	src/option.c	/^static void redraw_titles()$/;"	f	file:
redraw_win_later	src/screen.c	/^redraw_win_later(wp, type)$/;"	f
redraw_window	src/gui_riscos.c	/^redraw_window(block)$/;"	f
redrawcmd	src/ex_getln.c	/^redrawcmd()$/;"	f
redrawcmd_preedit	src/ex_getln.c	/^redrawcmd_preedit()$/;"	f	file:
redrawcmd_preedit	src/ex_getln.c	/^static void	redrawcmd_preedit __ARGS((void));$/;"	p	file:	signature:(void)
redrawcmdline	src/ex_getln.c	/^redrawcmdline()$/;"	f
redrawcmdprompt	src/ex_getln.c	/^redrawcmdprompt()$/;"	f	file:
redrawcmdprompt	src/ex_getln.c	/^static void	redrawcmdprompt __ARGS((void));$/;"	p	file:	signature:(void)
redrawing	src/screen.c	/^redrawing()$/;"	f
ref	src/if_ole.cpp	/^    unsigned long ref;$/;"	m	class:CVim	file:	access:private
ref	src/if_ole.cpp	/^    unsigned long ref;$/;"	m	class:CVimCF	file:	access:private
ref	src/if_tcl.c	/^struct ref$/;"	s	file:
ref::cmd	src/if_tcl.c	/^    Tcl_Command cmd;	    \/* Tcl command that represents this object *\/$/;"	m	struct:ref	file:	access:public
ref::delcmd	src/if_tcl.c	/^    Tcl_Obj	*delcmd;    \/* Tcl command to call when object is being del. *\/$/;"	m	struct:ref	file:	access:public
ref::interp	src/if_tcl.c	/^    Tcl_Interp	*interp;$/;"	m	struct:ref	file:	access:public
ref::next	src/if_tcl.c	/^    struct ref	*next;$/;"	m	struct:ref	typeref:struct:ref::ref	file:	access:public
ref::vimobj	src/if_tcl.c	/^    void	*vimobj;    \/* Vim window or buffer (win_T* or buf_T*) *\/$/;"	m	struct:ref	file:	access:public
ref_extmatch	src/regexp.c	/^ref_extmatch(em)$/;"	f
refcnt	src/regexp.h	/^    short		refcnt;$/;"	m	struct:__anon74	access:public
refsdeleted	src/if_tcl.c	/^static struct ref refsdeleted;	\/* dummy object for deleted ref list *\/$/;"	v	typeref:struct:ref	file:
reg	src/os_mac.h	51;"	d
reg	src/regexp.c	/^reg(paren, flagp)$/;"	f	file:
reg	src/regexp.c	/^static char_u	*reg __ARGS((int, int *));$/;"	p	file:	signature:(int, int *)
reg_buf	src/regexp.c	/^static buf_T		*reg_buf;$/;"	v	file:
reg_create_key	src/dosinst.c	/^reg_create_key($/;"	f	file:	signature:( HKEY root, const char *subkey, PHKEY phKey)
reg_create_key_and_value	src/dosinst.c	/^reg_create_key_and_value($/;"	f	file:	signature:( HKEY hRootKey, const char *subkey, const char *value_name, const char *data)
reg_delete_key	src/uninstal.c	/^reg_delete_key(HKEY hRootKey, const char *key)$/;"	f	file:	signature:(HKEY hRootKey, const char *key)
reg_do_extmatch	src/globals.h	/^EXTERN int	reg_do_extmatch INIT(= 0);  \/* Used when compiling regexp:$/;"	v
reg_endp	src/regexp.c	/^static char_u		**reg_endp = NULL;$/;"	v	file:
reg_endpos	src/regexp.c	/^static lpos_T		*reg_endpos = NULL;$/;"	v	file:
reg_endzp	src/regexp.c	/^static char_u	*reg_endzp[NSUBEXP];	\/*   and end of \\z(...\\) matches *\/$/;"	v	file:
reg_endzpos	src/regexp.c	/^static lpos_T	reg_endzpos[NSUBEXP];	\/* idem, end pos *\/$/;"	v	file:
reg_equi_class	src/regexp.c	/^reg_equi_class(c)$/;"	f	file:
reg_equi_class	src/regexp.c	/^static void	reg_equi_class __ARGS((int c));$/;"	p	file:	signature:(int c)
reg_extmatch_T	src/regexp.h	/^} reg_extmatch_T;$/;"	t	typeref:struct:__anon74
reg_firstlnum	src/regexp.c	/^static linenr_T		reg_firstlnum;$/;"	v	file:
reg_getline	src/regexp.c	/^reg_getline(lnum)$/;"	f	file:
reg_getline	src/regexp.c	/^static char_u	*reg_getline __ARGS((linenr_T lnum));$/;"	p	file:	signature:(linenr_T lnum)
reg_getline_submatch	src/regexp.c	/^reg_getline_submatch(lnum)$/;"	f	file:
reg_getline_submatch	src/regexp.c	/^static char_u *reg_getline_submatch __ARGS((linenr_T lnum));$/;"	p	file:	signature:(linenr_T lnum)
reg_line_lbr	src/regexp.c	/^static int		reg_line_lbr;	    \/* "\\n" in string is line break *\/$/;"	v	file:
reg_magic	src/regexp.c	/^static int	reg_magic;	\/* magicness of the pattern: *\/$/;"	v	file:
reg_match	src/regexp.c	/^static regmatch_T	*reg_match;$/;"	v	file:
reg_maxline	src/regexp.c	/^static linenr_T		reg_maxline;$/;"	v	file:
reg_mmatch	src/regexp.c	/^static regmmatch_T	*reg_mmatch;$/;"	v	file:
reg_nextline	src/regexp.c	/^reg_nextline()$/;"	f	file:
reg_nextline	src/regexp.c	/^static void	reg_nextline __ARGS((void));$/;"	p	file:	signature:(void)
reg_prev_class	src/regexp.c	/^reg_prev_class()$/;"	f	file:
reg_prev_class	src/regexp.c	/^static int reg_prev_class __ARGS((void));$/;"	p	file:	signature:(void)
reg_prev_sub	src/regexp.c	/^static char_u		*reg_prev_sub = NULL;$/;"	v	file:
reg_prog	src/fileio.c	/^    regprog_T	    *reg_prog;		\/* compiled regprog for pattern *\/$/;"	m	struct:AutoPat	file:	access:public
reg_restore	src/regexp.c	/^reg_restore(save, gap)$/;"	f	file:
reg_restore	src/regexp.c	/^static void	reg_restore __ARGS((regsave_T *save, garray_T *gap));$/;"	p	file:	signature:(regsave_T *save, garray_T *gap)
reg_save	src/regexp.c	/^reg_save(save, gap)$/;"	f	file:
reg_save	src/regexp.c	/^static void	reg_save __ARGS((regsave_T *save, garray_T *gap));$/;"	p	file:	signature:(regsave_T *save, garray_T *gap)
reg_save_equal	src/regexp.c	/^reg_save_equal(save)$/;"	f	file:
reg_save_equal	src/regexp.c	/^static int	reg_save_equal __ARGS((regsave_T *save));$/;"	p	file:	signature:(regsave_T *save)
reg_set_string_value	src/dosinst.c	/^reg_set_string_value($/;"	f	file:	signature:( HKEY hKey, const char *value_name, const char *data)
reg_startp	src/regexp.c	/^static char_u		**reg_startp = NULL;$/;"	v	file:
reg_startpos	src/regexp.c	/^static lpos_T		*reg_startpos = NULL;$/;"	v	file:
reg_startzp	src/regexp.c	/^static char_u	*reg_startzp[NSUBEXP];	\/* Workspace to mark beginning *\/$/;"	v	file:
reg_startzpos	src/regexp.c	/^static lpos_T	reg_startzpos[NSUBEXP];	\/* idem, beginning pos *\/$/;"	v	file:
reg_strict	src/regexp.c	/^static int	reg_strict;	\/* "[abc" is illegal *\/$/;"	v	file:
reg_string	src/regexp.c	/^static int	reg_string;	\/* matching with a string instead of a buffer$/;"	v	file:
reg_submatch	src/regexp.c	/^reg_submatch(no)$/;"	f
reg_tofree	src/regexp.c	/^static char_u	*reg_tofree = NULL;$/;"	v	file:
reg_tofreelen	src/regexp.c	/^static unsigned	reg_tofreelen;$/;"	v	file:
reg_toolong	src/regexp.c	/^static int	reg_toolong;	\/* TRUE when offset out of range *\/$/;"	v	file:
reg_win	src/regexp.c	/^static win_T		*reg_win;$/;"	v	file:
reganch	src/regexp.h	/^    char_u		reganch;$/;"	m	struct:__anon71	access:public
regatom	src/regexp.c	/^regatom(flagp)$/;"	f	file:
regatom	src/regexp.c	/^static char_u	*regatom __ARGS((int *));$/;"	p	file:	signature:(int *)
regbehind_S	src/regexp.c	/^typedef struct regbehind_S$/;"	s	file:
regbehind_S::save_after	src/regexp.c	/^    regsave_T	save_after;$/;"	m	struct:regbehind_S	file:	access:public
regbehind_S::save_behind	src/regexp.c	/^    regsave_T	save_behind;$/;"	m	struct:regbehind_S	file:	access:public
regbehind_S::save_end	src/regexp.c	/^    save_se_T   save_end[NSUBEXP];$/;"	m	struct:regbehind_S	file:	access:public
regbehind_S::save_need_clear_subexpr	src/regexp.c	/^    int		save_need_clear_subexpr;$/;"	m	struct:regbehind_S	file:	access:public
regbehind_S::save_start	src/regexp.c	/^    save_se_T   save_start[NSUBEXP];$/;"	m	struct:regbehind_S	file:	access:public
regbehind_T	src/regexp.c	/^} regbehind_T;$/;"	t	typeref:struct:regbehind_S	file:
regbranch	src/regexp.c	/^regbranch(flagp)$/;"	f	file:
regbranch	src/regexp.c	/^static char_u	*regbranch __ARGS((int *flagp));$/;"	p	file:	signature:(int *flagp)
regc	src/regexp.c	/^regc(b)$/;"	f	file:
regc	src/regexp.c	/^static void	regc __ARGS((int b));$/;"	p	file:	signature:(int b)
regcode	src/regexp.c	/^static char_u	*regcode;	\/* Code-emit pointer, or JUST_CALC_SIZE *\/$/;"	v	file:
regcomp_start	src/regexp.c	/^regcomp_start(expr, re_flags)$/;"	f	file:
regcomp_start	src/regexp.c	/^static void	regcomp_start __ARGS((char_u *expr, int flags));$/;"	p	file:	signature:(char_u *expr, int flags)
regconcat	src/regexp.c	/^regconcat(flagp)$/;"	f	file:
regconcat	src/regexp.c	/^static char_u	*regconcat __ARGS((int *flagp));$/;"	p	file:	signature:(int *flagp)
regdump	src/regexp.c	/^regdump(pattern, r)$/;"	f	file:
regdump	src/regexp.c	/^static void	regdump __ARGS((char_u *, regprog_T *));$/;"	p	file:	signature:(char_u *, regprog_T *)
regflags	src/regexp.c	/^static unsigned	regflags;	\/* RF_ flags for prog *\/$/;"	v	file:
regflags	src/regexp.h	/^    unsigned		regflags;$/;"	m	struct:__anon71	access:public
reghasz	src/regexp.h	/^    char_u		reghasz;$/;"	m	struct:__anon71	access:public
reginput	src/regexp.c	/^static char_u	*reginput;	\/* current input, points into "regline" *\/$/;"	v	file:
reginsert	src/regexp.c	/^reginsert(op, opnd)$/;"	f	file:
reginsert	src/regexp.c	/^static void	reginsert __ARGS((int, char_u *));$/;"	p	file:	signature:(int, char_u *)
reginsert_limits	src/regexp.c	/^reginsert_limits(op, minval, maxval, opnd)$/;"	f	file:
reginsert_limits	src/regexp.c	/^static void	reginsert_limits __ARGS((int, long, long, char_u *));$/;"	p	file:	signature:(int, long, long, char_u *)
register_inproc_server	src/dosinst.c	/^register_inproc_server($/;"	f	file:	signature:( HKEY hRootKey, const char *clsid, const char *extname, const char *module, const char *threading_model)
register_openwith	src/dosinst.c	/^register_openwith($/;"	f	file:	signature:( HKEY hRootKey, const char *exe_path)
register_shellex	src/dosinst.c	/^register_shellex($/;"	f	file:	signature:( HKEY hRootKey, const char *clsid, const char *name, const char *exe_path)
register_uninstall	src/dosinst.c	/^register_uninstall($/;"	f	file:	signature:( HKEY hRootKey, const char *appname, const char *display_name, const char *uninstall_string)
register_vim_exn	src/if_mzsch.c	/^register_vim_exn(void)$/;"	f	file:	signature:(void)
register_vim_exn	src/if_mzsch.c	/^static void register_vim_exn(void);$/;"	p	file:	signature:(void)
registryProperty	runtime/tools/xcmdsrv_client.c	/^static Atom	registryProperty = None;$/;"	v	file:
registryProperty	src/if_xcmdsrv.c	/^static Atom	registryProperty = None;$/;"	v	file:
regitem_S	src/regexp.c	/^typedef struct regitem_S$/;"	s	file:
regitem_S::__anon103::regsave	src/regexp.c	/^	regsave_T  regsave;$/;"	m	union:regitem_S::__anon103	file:	access:public
regitem_S::__anon103::sesave	src/regexp.c	/^	save_se_T  sesave;$/;"	m	union:regitem_S::__anon103	file:	access:public
regitem_S::rs_no	src/regexp.c	/^    short	rs_no;		\/* submatch nr or BEHIND\/NOBEHIND *\/$/;"	m	struct:regitem_S	file:	access:public
regitem_S::rs_scan	src/regexp.c	/^    char_u	*rs_scan;	\/* current node in program *\/$/;"	m	struct:regitem_S	file:	access:public
regitem_S::rs_state	src/regexp.c	/^    regstate_T	rs_state;	\/* what we are doing, one of RS_ above *\/$/;"	m	struct:regitem_S	file:	access:public
regitem_S::rs_un	src/regexp.c	/^    } rs_un;			\/* room for saving reginput *\/$/;"	m	struct:regitem_S	typeref:union:regitem_S::__anon103	file:	access:public
regitem_T	src/regexp.c	/^} regitem_T;$/;"	t	typeref:struct:regitem_S	file:
regline	src/regexp.c	/^static char_u	*regline;	\/* start of current line *\/$/;"	v	file:
reglnum	src/regexp.c	/^static linenr_T	reglnum;	\/* line number, relative to first line *\/$/;"	v	file:
regmatch	src/regexp.c	/^regmatch(scan)$/;"	f	file:
regmatch	src/regexp.c	/^static int	regmatch __ARGS((char_u *prog));$/;"	p	file:	signature:(char_u *prog)
regmatch	src/tag.c	/^    regmatch_T	regmatch;	\/* regexp program, may be NULL *\/$/;"	m	struct:__anon29	file:	access:public
regmatch_T	src/regexp.h	/^} regmatch_T;$/;"	t	typeref:struct:__anon72
regmbc	src/regexp.c	/^regmbc(c)$/;"	f	file:
regmbc	src/regexp.c	/^static void	regmbc __ARGS((int c));$/;"	p	file:	signature:(int c)
regmbc	src/regexp.c	670;"	d	file:
regmlen	src/regexp.h	/^    int			regmlen;$/;"	m	struct:__anon71	access:public
regmmatch_T	src/regexp.h	/^} regmmatch_T;$/;"	t	typeref:struct:__anon73
regmust	src/regexp.h	/^    char_u		*regmust;$/;"	m	struct:__anon71	access:public
regname	src/ex_cmds.h	/^    int		regname;	\/* register name (NUL if none) *\/$/;"	m	struct:exarg	access:public
regname	src/structs.h	/^    int		regname;	\/* register to use for the operator *\/$/;"	m	struct:oparg_S	access:public
regnarrate	src/regexp.c	/^int		regnarrate = 0;$/;"	v
regnext	src/regexp.c	/^regnext(p)$/;"	f	file:
regnext	src/regexp.c	/^static char_u	*regnext __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
regnode	src/regexp.c	/^regnode(op)$/;"	f	file:
regnode	src/regexp.c	/^static char_u	*regnode __ARGS((int));$/;"	p	file:	signature:(int)
regnpar	src/regexp.c	/^static int	regnpar;	\/* () count. *\/$/;"	v	file:
regnzpar	src/regexp.c	/^static int	regnzpar;	\/* \\z() count. *\/$/;"	v	file:
regoptail	src/regexp.c	/^regoptail(p, val)$/;"	f	file:
regoptail	src/regexp.c	/^static void	regoptail __ARGS((char_u *, char_u *));$/;"	p	file:	signature:(char_u *, char_u *)
regparse	src/regexp.c	/^static char_u	*regparse;	\/* Input-scan pointer. *\/$/;"	v	file:
regpiece	src/regexp.c	/^regpiece(flagp)$/;"	f	file:
regpiece	src/regexp.c	/^static char_u	*regpiece __ARGS((int *));$/;"	p	file:	signature:(int *)
regprog	src/regexp.h	/^    regprog_T		*regprog;$/;"	m	struct:__anon72	access:public
regprog	src/regexp.h	/^    regprog_T		*regprog;$/;"	m	struct:__anon73	access:public
regprog_T	src/regexp.h	/^} regprog_T;$/;"	t	typeref:struct:__anon71
regprop	src/regexp.c	/^regprop(op)$/;"	f	file:
regprop	src/regexp.c	/^static char_u	*regprop __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
regrepeat	src/regexp.c	/^regrepeat(p, maxcount)$/;"	f	file:
regrepeat	src/regexp.c	/^static int	regrepeat __ARGS((char_u *p, long maxcount));$/;"	p	file:	signature:(char_u *p, long maxcount)
regs_addr	src/swis.s	/^regs_addr:$/;"	l
regsave	src/regexp.c	/^	regsave_T  regsave;$/;"	m	union:regitem_S::__anon103	file:	access:public
regsave_T	src/regexp.c	/^} regsave_T;$/;"	t	typeref:struct:__anon99	file:
regsize	src/regexp.c	/^static long	regsize;	\/* Code size. *\/$/;"	v	file:
regstack	src/regexp.c	/^static garray_T	regstack = {0, 0, 0, 0, NULL};$/;"	v	file:
regstack_pop	src/regexp.c	/^regstack_pop(scan)$/;"	f	file:
regstack_pop	src/regexp.c	/^static void regstack_pop __ARGS((char_u **scan));$/;"	p	file:	signature:(char_u **scan)
regstack_push	src/regexp.c	/^regstack_push(state, scan)$/;"	f	file:
regstack_push	src/regexp.c	/^static regitem_T *regstack_push __ARGS((regstate_T state, char_u *scan));$/;"	p	file:	signature:(regstate_T state, char_u *scan)
regstar_S	src/regexp.c	/^typedef struct regstar_S$/;"	s	file:
regstar_S::count	src/regexp.c	/^    long	count;$/;"	m	struct:regstar_S	file:	access:public
regstar_S::maxval	src/regexp.c	/^    long	maxval;$/;"	m	struct:regstar_S	file:	access:public
regstar_S::minval	src/regexp.c	/^    long	minval;$/;"	m	struct:regstar_S	file:	access:public
regstar_S::nextb	src/regexp.c	/^    int		nextb;		\/* next byte *\/$/;"	m	struct:regstar_S	file:	access:public
regstar_S::nextb_ic	src/regexp.c	/^    int		nextb_ic;	\/* next byte reverse case *\/$/;"	m	struct:regstar_S	file:	access:public
regstar_T	src/regexp.c	/^} regstar_T;$/;"	t	typeref:struct:regstar_S	file:
regstart	src/regexp.h	/^    int			regstart;$/;"	m	struct:__anon71	access:public
regstate_E	src/regexp.c	/^typedef enum regstate_E$/;"	g	file:
regstate_T	src/regexp.c	/^} regstate_T;$/;"	t	typeref:enum:regstate_E	file:
regtail	src/regexp.c	/^regtail(p, val)$/;"	f	file:
regtail	src/regexp.c	/^static void	regtail __ARGS((char_u *, char_u *));$/;"	p	file:	signature:(char_u *, char_u *)
regtilde	src/regexp.c	/^regtilde(source, magic)$/;"	f
regtry	src/regexp.c	/^regtry(prog, col)$/;"	f	file:
regtry	src/regexp.c	/^static long	regtry __ARGS((regprog_T *prog, colnr_T col));$/;"	p	file:	signature:(regprog_T *prog, colnr_T col)
rem_backslash	src/charset.c	/^rem_backslash(str)$/;"	f
remap_choice	src/dosinst.c	/^int	remap_choice = (int)remap_win;$/;"	v
remap_choices	src/dosinst.c	/^char	*(remap_choices[]) =$/;"	v
remap_no	src/dosinst.c	/^    remap_no = 1,$/;"	e	enum:__anon118	file:
remap_text	src/dosinst.c	/^char	*remap_text = "- %s";$/;"	v
remap_win	src/dosinst.c	/^    remap_win$/;"	e	enum:__anon118	file:
remote_common	src/eval.c	/^remote_common(argvars, rettv, expr)$/;"	f	file:
remote_common	src/eval.c	/^static void remote_common __ARGS((typval_T *argvars, typval_T *rettv, int expr));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv, int expr)
removable	src/mark.c	/^removable(name)$/;"	f
removeEventHandler	src/gui_beval.c	/^removeEventHandler(BalloonEval *beval)$/;"	f	file:	signature:(BalloonEval *beval)
removeEventHandler	src/gui_beval.c	/^removeEventHandler(beval)$/;"	f	file:
removeEventHandler	src/gui_beval.c	/^static void removeEventHandler __ARGS((BalloonEval *));$/;"	p	file:	signature:(BalloonEval *)
remove_batfiles	src/uninstal.c	/^remove_batfiles(int doit)$/;"	f	file:	signature:(int doit)
remove_continuation	runtime/indent/make.vim	/^function s:remove_continuation(line)$/;"	f
remove_duplicates	src/misc1.c	/^remove_duplicates(gap)$/;"	f
remove_icons	src/uninstal.c	/^remove_icons(void)$/;"	f	file:	signature:(void)
remove_if_exists	src/uninstal.c	/^remove_if_exists(char *path, char *filename)$/;"	f	file:	signature:(char *path, char *filename)
remove_key_from_history	src/ex_getln.c	/^remove_key_from_history()$/;"	f
remove_menu	src/menu.c	/^remove_menu(menup, name, modes, silent)$/;"	f	file:
remove_menu	src/menu.c	/^static int remove_menu __ARGS((vimmenu_T **, char_u *, int, int silent));$/;"	p	file:	signature:(vimmenu_T **, char_u *, int, int silent)
remove_openwith	src/uninstal.c	/^remove_openwith(void)$/;"	f	file:	signature:(void)
remove_popup	src/uninstal.c	/^remove_popup(void)$/;"	f	file:	signature:(void)
remove_start_menu	src/uninstal.c	/^remove_start_menu(void)$/;"	f	file:	signature:(void)
remove_tail	src/dosinst.h	/^remove_tail(char *path)$/;"	f	signature:(char *path)
remove_tail	src/misc1.c	/^remove_tail(p, pend, name)$/;"	f	file:
remove_tail	src/misc1.c	/^static char_u *remove_tail __ARGS((char_u *p, char_u *pend, char_u *name));$/;"	p	file:	signature:(char_u *p, char_u *pend, char_u *name)
remove_timer	src/if_mzsch.c	/^remove_timer(void)$/;"	f	file:	signature:(void)
remove_timer	src/if_mzsch.c	/^static void remove_timer(void);$/;"	p	file:	signature:(void)
rep_compare	src/spell.c	/^rep_compare __ARGS((const void *s1, const void *s2));$/;"	p	file:	signature:(const void *s1, const void *s2)
rep_compare	src/spell.c	/^rep_compare(s1, s2)$/;"	f	file:
repeat	runtime/ftplugin/cobol.vim	/^function! s:repeat(str,count)$/;"	f
repeat_cmdline	src/globals.h	/^EXTERN char_u	*repeat_cmdline INIT(= NULL); \/* command line for "." *\/$/;"	v
repeat_message	src/message.c	/^repeat_message()$/;"	f
repeating	src/ex_docmd.c	/^    int		repeating;		\/* TRUE when looping a second time *\/$/;"	m	struct:loop_cookie	file:	access:public
repl_cmdline	src/ex_docmd.c	/^repl_cmdline(eap, src, srclen, repl, cmdlinep)$/;"	f	file:
repl_cmdline	src/ex_docmd.c	/^static char_u	*repl_cmdline __ARGS((exarg_T *eap, char_u *src, int srclen, char_u *repl, char_u **cmdlinep));$/;"	p	file:	signature:(exarg_T *eap, char_u *src, int srclen, char_u *repl, char_u **cmdlinep)
repl_from	src/spell.c	/^static char_u	*repl_from = NULL;$/;"	v	file:
repl_to	src/spell.c	/^static char_u	*repl_to = NULL;$/;"	v	file:
repl_widgets	src/gui_gtk.c	/^static SharedFindReplace repl_widgets = {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL};$/;"	v	file:
repl_widgets	src/gui_motif.c	/^static SharedFindReplace repl_widgets = {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL};$/;"	v	file:
replace	src/gui_gtk.c	/^    GtkWidget *replace;	\/* 'Replace With' action button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
replace	src/gui_motif.c	/^    Widget replace;	\/* 'Replace With' action button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
replace_do_bs	src/edit.c	/^replace_do_bs(limit_col)$/;"	f	file:
replace_do_bs	src/edit.c	/^static void replace_do_bs __ARGS((int limit_col));$/;"	p	file:	signature:(int limit_col)
replace_flush	src/edit.c	/^replace_flush()$/;"	f	file:
replace_flush	src/edit.c	/^static void replace_flush __ARGS((void));$/;"	p	file:	signature:(void)
replace_join	src/edit.c	/^replace_join(off)$/;"	f	file:
replace_join	src/edit.c	/^static void replace_join __ARGS((int off));$/;"	p	file:	signature:(int off)
replace_makeprg	src/ex_docmd.c	/^replace_makeprg(eap, p, cmdlinep)$/;"	f	file:
replace_makeprg	src/ex_docmd.c	/^static char_u	*replace_makeprg __ARGS((exarg_T *eap, char_u *p, char_u **cmdlinep));$/;"	p	file:	signature:(exarg_T *eap, char_u *p, char_u **cmdlinep)
replace_offset	src/globals.h	/^EXTERN int	replace_offset INIT(= 0);   \/* offset for replace_push() *\/$/;"	v
replace_pop	src/edit.c	/^replace_pop()$/;"	f	file:
replace_pop	src/edit.c	/^static int  replace_pop __ARGS((void));$/;"	p	file:	signature:(void)
replace_pop_ins	src/edit.c	/^replace_pop_ins()$/;"	f	file:
replace_pop_ins	src/edit.c	/^static void replace_pop_ins __ARGS((void));$/;"	p	file:	signature:(void)
replace_push	src/edit.c	/^replace_push(c)$/;"	f
replace_push_mb	src/edit.c	/^replace_push_mb(p)$/;"	f
replace_stack	src/edit.c	/^static char_u	*replace_stack = NULL;$/;"	v	file:
replace_stack_len	src/edit.c	/^static long	replace_stack_len = 0;	    \/* max. number of entries *\/$/;"	v	file:
replace_stack_nr	src/edit.c	/^static long	replace_stack_nr = 0;	    \/* next entry in replace stack *\/$/;"	v	file:
replace_termcodes	src/term.c	/^replace_termcodes(from, bufp, from_part, do_lt, special)$/;"	f
reply	src/os_mswin.c	/^    char_u	*reply;		\/* reply string *\/$/;"	m	struct:__anon20	file:	access:public
reply_T	src/os_mswin.c	/^} reply_T;$/;"	t	typeref:struct:__anon20	file:
reply_list	src/os_mswin.c	/^static garray_T reply_list = {0, 0, sizeof(reply_T), 5, 0};$/;"	v	file:
reply_received	src/os_mswin.c	/^static int reply_received = 0;$/;"	v	file:
report_discard_pending	src/ex_eval.c	/^report_discard_pending(pending, value)$/;"	f
report_make_pending	src/ex_eval.c	/^report_make_pending(pending, value)$/;"	f
report_pending	src/ex_eval.c	/^report_pending(action, pending, value)$/;"	f	file:
report_pending	src/ex_eval.c	/^static void	report_pending __ARGS((int action, int pending, void *value));$/;"	p	file:	signature:(int action, int pending, void *value)
report_resume_pending	src/ex_eval.c	/^report_resume_pending(pending, value)$/;"	f
req_codes_from_term	src/term.c	/^req_codes_from_term()$/;"	f	file:
req_codes_from_term	src/term.c	/^static void req_codes_from_term __ARGS((void));$/;"	p	file:	signature:(void)
req_more_codes_from_term	src/term.c	/^req_more_codes_from_term()$/;"	f	file:
req_more_codes_from_term	src/term.c	/^static void req_more_codes_from_term __ARGS((void));$/;"	p	file:	signature:(void)
requestBalloon	src/gui_beval.c	/^requestBalloon(beval)$/;"	f	file:
requestBalloon	src/gui_beval.c	/^static void requestBalloon __ARGS((BalloonEval *));$/;"	p	file:	signature:(BalloonEval *)
request_choice	src/dosinst.c	/^request_choice(void)$/;"	f	file:	signature:(void)
rescore_one	src/spell.c	/^rescore_one(su, stp)$/;"	f	file:
rescore_one	src/spell.c	/^static void rescore_one __ARGS((suginfo_T *su, suggest_T *stp));$/;"	p	file:	signature:(suginfo_T *su, suggest_T *stp)
rescore_suggestions	src/spell.c	/^rescore_suggestions(su)$/;"	f	file:
rescore_suggestions	src/spell.c	/^static void rescore_suggestions __ARGS((suginfo_T *su));$/;"	p	file:	signature:(suginfo_T *su)
resel_VIsual_col	src/normal.c	/^static colnr_T	resel_VIsual_col;		\/* nr of cols or end col *\/$/;"	v	file:
resel_VIsual_line_count	src/normal.c	/^static linenr_T	resel_VIsual_line_count;	\/* number of lines *\/$/;"	v	file:
resel_VIsual_mode	src/normal.c	/^static int	resel_VIsual_mode = NUL;	\/* 'v', 'V', or Ctrl-V *\/$/;"	v	file:
reset_VIsual	src/normal.c	/^reset_VIsual()$/;"	f
reset_VIsual_and_resel	src/normal.c	/^reset_VIsual_and_resel()$/;"	f
reset_cterm_colors	src/screen.c	/^reset_cterm_colors()$/;"	f
reset_expand_highlight	src/syntax.c	/^reset_expand_highlight()$/;"	f
reset_focus	src/gui_motif.c	/^reset_focus()$/;"	f	file:
reset_focus	src/gui_motif.c	/^static void reset_focus __ARGS((void));$/;"	p	file:	signature:(void)
reset_last_sourcing	src/message.c	/^reset_last_sourcing()$/;"	f
reset_modifiable	src/option.c	/^reset_modifiable()$/;"	f
reset_search_dir	src/search.c	/^reset_search_dir()$/;"	f
reset_signals	src/os_unix.c	/^reset_signals()$/;"	f
reset_synblock	src/syntax.c	/^reset_synblock(wp)$/;"	f
resettitle	src/buffer.c	/^resettitle()$/;"	f
resolve_symlink	src/memline.c	/^resolve_symlink(fname, buf)$/;"	f
resources	src/gui_at_sb.c	/^static XtResource resources[] =$/;"	v	file:
resources	src/gui_xmebw.c	/^static XtResource resources[] =$/;"	v	file:
restart_VIsual_select	src/normal.c	/^static int	restart_VIsual_select = 0;$/;"	v	file:
restart_command	src/gui_gtk_x11.c	/^static const char *restart_command = NULL;$/;"	v	file:
restart_edit	src/globals.h	/^EXTERN int restart_edit INIT(= 0);	\/* call edit when next cmd finished *\/$/;"	v
restoreRedobuff	src/getchar.c	/^restoreRedobuff()$/;"	f
restore_cmdline	src/ex_getln.c	/^restore_cmdline(ccp)$/;"	f	file:
restore_cmdline	src/ex_getln.c	/^static void	restore_cmdline __ARGS((struct cmdline_info *ccp));$/;"	p	file:	signature:(struct cmdline_info *ccp)
restore_cmdline_alloc	src/ex_getln.c	/^restore_cmdline_alloc(p)$/;"	f
restore_cterm_colors	src/syntax.c	/^restore_cterm_colors()$/;"	f
restore_dbg_stuff	src/ex_docmd.c	/^restore_dbg_stuff(dsp)$/;"	f	file:
restore_dbg_stuff	src/ex_docmd.c	/^static void restore_dbg_stuff __ARGS((struct dbg_stuff *dsp));$/;"	p	file:	signature:(struct dbg_stuff *dsp)
restore_funccal	src/eval.c	/^restore_funccal(vfc)$/;"	f
restore_se	src/regexp.c	3128;"	d	file:
restore_search_patterns	src/search.c	/^restore_search_patterns()$/;"	f
restore_snapshot	src/window.c	/^restore_snapshot(idx, close_curwin)$/;"	f
restore_snapshot_rec	src/window.c	/^restore_snapshot_rec(sn, fr)$/;"	f	file:
restore_snapshot_rec	src/window.c	/^static win_T *restore_snapshot_rec __ARGS((frame_T *sn, frame_T *fr));$/;"	p	file:	signature:(frame_T *sn, frame_T *fr)
restore_subexpr	src/regexp.c	/^restore_subexpr(bp)$/;"	f	file:
restore_subexpr	src/regexp.c	/^static void	restore_subexpr __ARGS((regbehind_T *bp));$/;"	p	file:	signature:(regbehind_T *bp)
restore_typeahead	src/getchar.c	/^restore_typeahead(tp)$/;"	f
restore_vimvar	src/eval.c	/^restore_vimvar(idx, save_tv)$/;"	f	file:
restore_vimvar	src/eval.c	/^static void restore_vimvar __ARGS((int idx, typval_T *save_tv));$/;"	p	file:	signature:(int idx, typval_T *save_tv)
restricted	src/globals.h	/^EXTERN int	restricted INIT(= FALSE);$/;"	v
result	src/digraph.c	/^    result_T	result;$/;"	m	struct:digraph	file:	access:public
result	src/if_xcmdsrv.c	/^    char_u  *result;	\/* String result for command (malloc'ed).$/;"	m	struct:PendingCommand	file:	access:public
result	src/testdir/test49.vim	/^	    let result = exists('{EXPR("exists", 2)}')$/;"	v
result	src/testdir/test49.vim	/^	let result = exists('*{EXPR("exists", 1)}')$/;"	v
result	src/testdir/test49.vim	/^	let result =$/;"	v
result_T	src/digraph.c	/^typedef char_u result_T;$/;"	t	file:
result_T	src/digraph.c	/^typedef int result_T;$/;"	t	file:
retcode	src/testdir/test49.vim	/^let retcode = I()$/;"	v
retlen	src/os_vms.c	/^    int		*retlen;$/;"	m	struct:__anon78	file:	access:public
rettv	src/eval.c	/^    typval_T	*rettv;		\/* return value *\/$/;"	m	struct:funccall_S	file:	access:public
rettv_dict_alloc	src/eval.c	/^rettv_dict_alloc(rettv)$/;"	f	file:
rettv_dict_alloc	src/eval.c	/^static int rettv_dict_alloc __ARGS((typval_T *rettv));$/;"	p	file:	signature:(typval_T *rettv)
rettv_list_alloc	src/eval.c	/^rettv_list_alloc(rettv)$/;"	f	file:
rettv_list_alloc	src/eval.c	/^static int rettv_list_alloc __ARGS((typval_T *rettv));$/;"	p	file:	signature:(typval_T *rettv)
returned	src/eval.c	/^    int		returned;	\/* ":return" used *\/$/;"	m	struct:funccall_S	file:	access:public
retval	src/structs.h	/^    int		retval;		\/* return: CA_* values *\/$/;"	m	struct:cmdarg_S	access:public
reverse_line	src/ops.c	/^reverse_line(s)$/;"	f	file:
reverse_line	src/ops.c	/^static void reverse_line __ARGS((char_u *s));$/;"	p	file:	signature:(char_u *s)
reverse_text	src/search.c	/^reverse_text(s)$/;"	f
revins_chars	src/edit.c	/^static int	revins_chars;		\/* how much to skip after edit *\/$/;"	v	file:
revins_legal	src/edit.c	/^static int	revins_legal;		\/* was the last char 'legal'? *\/$/;"	v	file:
revins_on	src/edit.c	/^static int	revins_on;		\/* reverse insert mode on *\/$/;"	v	file:
revins_scol	src/edit.c	/^static int	revins_scol;		\/* start column of revins session *\/$/;"	v	file:
rewind	src/xxd/xxd.c	/^extern int rewind  __P((FILE *));$/;"	p	file:	signature:(FILE *)
rewind_conditionals	src/ex_eval.c	/^rewind_conditionals(cstack, idx, cond_type, cond_level)$/;"	f
rgb	src/os_riscos.c	27;"	d	file:
ri_alpha	src/regexp.c	549;"	d	file:
ri_alpha	src/regexp.c	559;"	d	file:
ri_digit	src/regexp.c	544;"	d	file:
ri_digit	src/regexp.c	554;"	d	file:
ri_head	src/regexp.c	548;"	d	file:
ri_head	src/regexp.c	558;"	d	file:
ri_hex	src/regexp.c	545;"	d	file:
ri_hex	src/regexp.c	555;"	d	file:
ri_lower	src/regexp.c	550;"	d	file:
ri_lower	src/regexp.c	560;"	d	file:
ri_octal	src/regexp.c	546;"	d	file:
ri_octal	src/regexp.c	556;"	d	file:
ri_upper	src/regexp.c	551;"	d	file:
ri_upper	src/regexp.c	561;"	d	file:
ri_white	src/regexp.c	552;"	d	file:
ri_white	src/regexp.c	562;"	d	file:
ri_word	src/regexp.c	547;"	d	file:
ri_word	src/regexp.c	557;"	d	file:
right_sbar_x	src/gui.h	/^    int		right_sbar_x;	    \/* Calculated x coord for right scrollbar *\/$/;"	m	struct:Gui	access:public
rl_mirror	src/screen.c	/^rl_mirror(str)$/;"	f
rm	src/structs.h	/^    regmmatch_T	rm;	\/* points to the regexp program; contains last found$/;"	m	struct:__anon56	access:public
rm_ic	src/regexp.h	/^    int			rm_ic;$/;"	m	struct:__anon72	access:public
rmm_ic	src/regexp.h	/^    int			rmm_ic;$/;"	m	struct:__anon73	access:public
rmm_maxcol	src/regexp.h	/^    colnr_T		rmm_maxcol;	\/* when not zero: maximum column *\/$/;"	m	struct:__anon73	access:public
ro_buflist_add	src/os_riscos.c	/^ro_buflist_add(old_name)$/;"	f
ro_build_menu	src/gui_riscos.c	/^ro_build_menu(menu)$/;"	f
ro_continue_drag	src/gui_riscos.c	/^ro_continue_drag(block)$/;"	f
ro_current_font	src/gui_riscos.c	/^int ro_current_font = 0;	\/* 0 is system font, or ZapRedraw *\/$/;"	v
ro_dataload	src/gui_riscos.c	/^ro_dataload(block)$/;"	f
ro_datasave	src/gui_riscos.c	/^ro_datasave(block)$/;"	f
ro_die	src/gui_riscos.c	/^ro_die(error)$/;"	f
ro_drag_finished	src/gui_riscos.c	/^ro_drag_finished(block)$/;"	f
ro_dragging	src/gui_riscos.c	/^int ro_dragging = DRAG_FALSE;$/;"	v
ro_draw_string	src/gui_riscos.c	/^ro_draw_string(x, y, s, len, flags, clip)$/;"	f
ro_find_sbar	src/gui_riscos.c	/^ro_find_sbar(id)$/;"	f
ro_get_font	src/gui_riscos.c	/^ro_get_font(fullname, weight)$/;"	f
ro_insert_key	src/gui_riscos.c	/^ro_insert_key(code)$/;"	f
ro_line_mode	src/os_riscos.c	/^int ro_line_mode = TRUE;  \/* For Ex mode we much echo chars to the screen ourselves *\/$/;"	v
ro_load_template	src/gui_riscos.c	/^ro_load_template(str_name, title, title_size)$/;"	f
ro_measure_tools	src/gui_riscos.c	/^ro_measure_tools()$/;"	f
ro_menu_selection	src/gui_riscos.c	/^ro_menu_selection(block)$/;"	f
ro_message	src/gui_riscos.c	/^ro_message(block)$/;"	f
ro_mouse	src/gui_riscos.c	/^ro_mouse(block)$/;"	f
ro_move_child	src/gui_riscos.c	/^ro_move_child(window, x, y, pos_wanted, pos_got)$/;"	f
ro_ok_to_quit	src/gui_riscos.c	/^ro_ok_to_quit()$/;"	f
ro_open_main	src/gui_riscos.c	/^ro_open_main(block)$/;"	f
ro_open_main	src/gui_riscos.h	/^void ro_open_main(int *block);$/;"	p	signature:(int *block)
ro_open_parent	src/gui_riscos.c	/^ro_open_parent()$/;"	f
ro_open_window	src/gui_riscos.c	/^ro_open_window(block)$/;"	f
ro_prequit	src/gui_riscos.c	/^ro_prequit(block)$/;"	f
ro_press	src/gui_riscos.c	/^ro_press(a, b, modifier)$/;"	f
ro_quit	src/gui_riscos.c	/^ro_quit()$/;"	f
ro_redraw_title	src/gui_riscos.c	/^ro_redraw_title(window)$/;"	f
ro_remove_menu	src/gui_riscos.c	/^ro_remove_menu(menu)$/;"	f	file:
ro_remove_menu	src/gui_riscos.c	/^static void ro_remove_menu(int *menu);$/;"	p	file:	signature:(int *menu)
ro_return_early	src/gui_riscos.c	/^int ro_return_early = FALSE;	\/* Break out of gui_mch_wait_for_chars() *\/$/;"	v
ro_scroll	src/gui_riscos.c	/^ro_scroll(block)$/;"	f
ro_zap_redraw_draw_string	src/gui_riscos.c	/^ro_zap_redraw_draw_string(x, y, string, length, flags, clip)$/;"	f
ro_zap_redraw_initialise	src/gui_riscos.c	/^ro_zap_redraw_initialise()$/;"	f
role_argument	src/gui_gtk_x11.c	/^static const char *role_argument = NULL;$/;"	v	file:
room	src/eval.c	/^	char_u	room[VAR_SHORT_LEN];	\/* room for the name *\/$/;"	m	struct:funccall_S::__anon140	file:	access:public
root_menu	src/globals.h	/^EXTERN vimmenu_T	*root_menu INIT(= NULL);$/;"	v
row	src/gui.h	/^    int		row;		    \/* Current cursor row in GUI display *\/$/;"	m	struct:Gui	access:public
row2tcl	src/if_tcl.c	100;"	d	file:
row2vim	src/if_tcl.c	101;"	d	file:
rs_len	src/regexp.c	/^    int		rs_len;$/;"	m	struct:__anon99	file:	access:public
rs_no	src/regexp.c	/^    short	rs_no;		\/* submatch nr or BEHIND\/NOBEHIND *\/$/;"	m	struct:regitem_S	file:	access:public
rs_scan	src/regexp.c	/^    char_u	*rs_scan;	\/* current node in program *\/$/;"	m	struct:regitem_S	file:	access:public
rs_state	src/regexp.c	/^    regstate_T	rs_state;	\/* what we are doing, one of RS_ above *\/$/;"	m	struct:regitem_S	file:	access:public
rs_u	src/regexp.c	/^    } rs_u;$/;"	m	struct:__anon99	typeref:union:__anon99::__anon100	file:	access:public
rs_un	src/regexp.c	/^    } rs_un;			\/* room for saving reginput *\/$/;"	m	struct:regitem_S	typeref:union:regitem_S::__anon103	file:	access:public
rsrc_bold_font_name	src/gui.h	/^    char_u	*rsrc_bold_font_name; \/* Resource bold font name *\/$/;"	m	struct:Gui	access:public
rsrc_boldital_font_name	src/gui.h	/^    char_u	*rsrc_boldital_font_name;  \/* Resource bold-italic font name *\/$/;"	m	struct:Gui	access:public
rsrc_font_name	src/gui.h	/^    char_u	*rsrc_font_name;    \/* Resource font name, used if 'guifont'$/;"	m	struct:Gui	access:public
rsrc_input_method	src/gui.h	/^    char	*rsrc_input_method;$/;"	m	struct:Gui	access:public
rsrc_ital_font_name	src/gui.h	/^    char_u	*rsrc_ital_font_name; \/* Resource italic font name *\/$/;"	m	struct:Gui	access:public
rsrc_menu_bg_name	src/gui.h	/^    char	*rsrc_menu_bg_name;	\/* Color of menu & dialog background *\/$/;"	m	struct:Gui	access:public
rsrc_menu_fg_name	src/gui.h	/^    char	*rsrc_menu_fg_name;	\/* Color of menu & dialog foreground *\/$/;"	m	struct:Gui	access:public
rsrc_menu_font_name	src/gui.h	/^    char_u	*rsrc_menu_font_name;    \/* Resource menu Font name *\/$/;"	m	struct:Gui	access:public
rsrc_preedit_type_name	src/gui.h	/^    char	*rsrc_preedit_type_name;$/;"	m	struct:Gui	access:public
rsrc_rev_video	src/gui.h	/^    Bool	rsrc_rev_video;	    \/* Use reverse video? *\/$/;"	m	struct:Gui	access:public
rsrc_scroll_bg_name	src/gui.h	/^    char	*rsrc_scroll_bg_name;	\/* Color of scrollbar background *\/$/;"	m	struct:Gui	access:public
rsrc_scroll_fg_name	src/gui.h	/^    char	*rsrc_scroll_fg_name;	\/* Color of scrollbar foreground *\/$/;"	m	struct:Gui	access:public
rsrc_tooltip_bg_name	src/gui.h	/^    char	*rsrc_tooltip_bg_name;	\/* tooltip background color name *\/$/;"	m	struct:Gui	access:public
rsrc_tooltip_fg_name	src/gui.h	/^    char	*rsrc_tooltip_fg_name;	\/* tooltip foreground color name *\/$/;"	m	struct:Gui	access:public
rsrc_tooltip_font_name	src/gui.h	/^    char_u	*rsrc_tooltip_font_name; \/* tooltip font name *\/$/;"	m	struct:Gui	access:public
ru_col	src/globals.h	/^EXTERN int	ru_col;		\/* column for ruler *\/$/;"	v
ru_wid	src/globals.h	/^EXTERN int	ru_wid;		\/* 'rulerfmt' width of ruler when non-zero *\/$/;"	v
ruby_buffer_free	src/if_ruby.c	/^void ruby_buffer_free(buf_T *buf)$/;"	f	signature:(buf_T *buf)
ruby_enabled	src/if_ruby.c	/^ruby_enabled(verbose)$/;"	f
ruby_end	src/if_ruby.c	/^ruby_end()$/;"	f
ruby_errinfo	src/if_ruby.c	189;"	d	file:
ruby_funcname_table	src/if_ruby.c	/^} ruby_funcname_table[] =$/;"	v	typeref:struct:__anon137	file:
ruby_init	src/if_ruby.c	191;"	d	file:
ruby_init_loadpath	src/if_ruby.c	192;"	d	file:
ruby_init_stack	src/if_ruby.c	/^static void (*ruby_init_stack)(VALUE*);$/;"	v	file:
ruby_init_stack	src/if_ruby.c	204;"	d	file:
ruby_initialized	src/if_ruby.c	/^static int ruby_initialized = 0;$/;"	v	file:
ruby_io_init	src/if_ruby.c	/^static void ruby_io_init(void)$/;"	f	file:	signature:(void)
ruby_io_init	src/if_ruby.c	/^static void ruby_io_init(void);$/;"	p	file:	signature:(void)
ruby_minlines	runtime/syntax/ruby.vim	/^    let ruby_minlines = 50$/;"	v
ruby_runtime_link_init	src/if_ruby.c	/^ruby_runtime_link_init(char *libname, int verbose)$/;"	f	file:	signature:(char *libname, int verbose)
ruby_script	src/if_ruby.c	199;"	d	file:
ruby_vim_init	src/if_ruby.c	/^static void ruby_vim_init(void)$/;"	f	file:	signature:(void)
ruby_vim_init	src/if_ruby.c	/^static void ruby_vim_init(void);$/;"	p	file:	signature:(void)
ruby_window_free	src/if_ruby.c	/^void ruby_window_free(win_T *win)$/;"	f	signature:(win_T *win)
rubycomplete#Complete	runtime/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	runtime/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
run_command	src/dosinst.h	/^run_command(char *cmd)$/;"	f	signature:(char *cmd)
running_syn_inc_tag	src/syntax.c	/^static int running_syn_inc_tag = 0;$/;"	v	file:
runtimeidx	src/dosinst.h	/^int	runtimeidx;		\/* index in installdir[] where "vim60" starts *\/$/;"	v
s	runtime/syntax/xpm.vim	/^	 let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	runtime/syntax/xpm.vim	/^   let s = matchstr(getline(i), '".\\{-1,}"')$/;"	v
s	runtime/syntax/xpm2.vim	/^	let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	runtime/syntax/xpm2.vim	/^	let s = substitute(s, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
s	runtime/syntax/xpm2.vim	/^      let s = matchstr(s, "^[^\\!]*")$/;"	v
s	runtime/syntax/xpm2.vim	/^    let s = getline(i)$/;"	v
s1	src/iid_ole.c	/^    unsigned short s1;$/;"	m	struct:_IID	file:	access:public
s2	src/iid_ole.c	/^    unsigned short s2;$/;"	m	struct:_IID	file:	access:public
s:AdaBlockStart	runtime/indent/ada.vim	/^   let s:AdaBlockStart = '^\\s*\\(if\\>\\|while\\>\\|else\\>\\|elsif\\>\\|loop\\>\\|for\\>.*\\<\\(loop\\|use\\)\\>\\|declare\\>\\|begin\\>\\|type\\>.*\\<is\\>[^;]*$\\|\\(type\\>.*\\)\\=\\<record\\>\\|procedure\\>\\|function\\>\\|accept\\>\\|do\\>\\|task\\>\\|package\\>\\|project\\>\\|then\\>\\|when\\>\\|is\\>\\)'$/;"	v
s:AdaBlockStart	runtime/indent/ada.vim	/^   let s:AdaBlockStart = '^\\s*\\(if\\>\\|while\\>\\|else\\>\\|elsif\\>\\|loop\\>\\|for\\>.*\\<\\(loop\\|use\\)\\>\\|declare\\>\\|begin\\>\\|type\\>.*\\<is\\>[^;]*$\\|\\(type\\>.*\\)\\=\\<record\\>\\|procedure\\>\\|function\\>\\|accept\\>\\|do\\>\\|task\\>\\|package\\>\\|then\\>\\|when\\>\\|is\\>\\)'$/;"	v
s:ColonEnd	runtime/indent/occam.vim	/^let s:ColonEnd = '\\(--.*\\)\\@<!:\\s*\\(--.*\\)\\=$'$/;"	v
s:ColonIndent	runtime/indent/occam.vim	/^let s:ColonIndent = '\\(--.*\\)\\@<!\\<PROC\\>'$/;"	v
s:ColonNonColonEndIndent	runtime/indent/occam.vim	/^let s:ColonNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\)\\s\\+TYPE\\|FUNCTION\\)\\>'$/;"	v
s:ColonStart	runtime/indent/occam.vim	/^let s:ColonStart = '^\\s*:\\s*\\(--.*\\)\\=$'$/;"	v
s:CommentLine	runtime/indent/occam.vim	/^let s:CommentLine = '^\\s*--'$/;"	v
s:ERROR	runtime/autoload/netrw.vim	/^ let s:ERROR   = 2$/;"	v
s:ERROR	runtime/autoload/vimball.vim	/^ let s:ERROR   = 2$/;"	v
s:ERROR	runtime/autoload/zip.vim	/^let s:ERROR          = 2$/;"	v
s:ES	runtime/indent/vhdl.vim	/^let s:ES = '\\s*\\%(--.*\\)\\=$'$/;"	v
s:FirstLevelIndent	runtime/indent/occam.vim	/^let s:FirstLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\|PAR\\|SEQ\\|PRI\\s\\+PAR\\|WHILE\\|VALOF\\|CLAIM\\|FORKING\\)\\>\\|\\(--.*\\)\\@<!\\(\\<PROC\\>\\|??\\|\\<CASE\\>\\s*\\(--.*\\)\\=\\_$\\)'$/;"	v
s:FirstLevelNonColonEndIndent	runtime/indent/occam.vim	/^let s:FirstLevelNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\)\\s\\+TYPE\\|FUNCTION\\)\\>'$/;"	v
s:Fold_Collate	runtime/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<begin\\>$\\|'$/;"	v
s:Fold_Collate	runtime/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<exception\\>$\\|'$/;"	v
s:Fold_Collate	runtime/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<is\\>$\\|'$/;"	v
s:Fold_Collate	runtime/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<private\\>$\\|'$/;"	v
s:Fold_Collate	runtime/autoload/ada.vim	/^   let s:Fold_Collate .= '--\\)'$/;"	v
s:Fold_Collate	runtime/autoload/ada.vim	/^   let s:Fold_Collate = '^\\([;)]*$\\|'$/;"	v
s:HtmlEndline	runtime/syntax/2html.vim	/^  let s:HtmlEndline = '<br' . s:tag_close$/;"	v
s:HtmlEndline	runtime/syntax/2html.vim	/^let s:HtmlEndline = ''$/;"	v
s:HtmlSpace	runtime/syntax/2html.vim	/^  let s:HtmlSpace = '\\' . s:LeadingSpace$/;"	v
s:HtmlSpace	runtime/syntax/2html.vim	/^let s:HtmlSpace = ' '$/;"	v
s:LeadingSpace	runtime/syntax/2html.vim	/^  let s:LeadingSpace = '&nbsp;'$/;"	v
s:LeadingSpace	runtime/syntax/2html.vim	/^let s:LeadingSpace = ' '$/;"	v
s:NC	runtime/indent/vhdl.vim	/^let s:NC = '\\%(--.*\\)\\@<!'$/;"	v
s:NE	runtime/indent/vhdl.vim	/^let s:NE = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:NOTE	runtime/autoload/netrw.vim	/^ let s:NOTE    = 0$/;"	v
s:NOTE	runtime/autoload/zip.vim	/^let s:NOTE           = 0$/;"	v
s:PHP_startindenttag	runtime/indent/php.vim	/^let s:PHP_startindenttag = '<?\\%(.*?>\\)\\@!\\|<script[^>]*>\\%(.*<\\\/script>\\)\\@!'$/;"	v
s:ReferenceName	runtime/syntax/rst.vim	/^let s:ReferenceName = '[[:alnum:]]\\+\\%([_.-][[:alnum:]]\\+\\)*'$/;"	v
s:SQLBlockEnd	runtime/indent/sqlanywhere.vim	/^let s:SQLBlockEnd = '^\\s*\\(end\\)\\>'$/;"	v
s:SQLBlockStart	runtime/indent/sqlanywhere.vim	/^let s:SQLBlockStart = '^\\s*\\%('.$/;"	v
s:SecondLevelIndent	runtime/indent/occam.vim	/^let s:SecondLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\)\\>\\|\\(--.*\\)\\@<!?\\s*\\<CASE\\>\\s*\\(--.*\\)\\=\\_$'$/;"	v
s:SecondLevelNonColonEndIndent	runtime/indent/occam.vim	/^let s:SecondLevelNonColonEndIndent = '\\(--.*\\)\\@<!\\<\\(CHAN\\|DATA\\)\\s\\+TYPE\\>'$/;"	v
s:USAGE	runtime/autoload/vimball.vim	/^ let s:USAGE   = 0$/;"	v
s:WARNING	runtime/autoload/netrw.vim	/^ let s:WARNING = 1$/;"	v
s:WARNING	runtime/autoload/vimball.vim	/^ let s:WARNING = 1$/;"	v
s:WARNING	runtime/autoload/zip.vim	/^let s:WARNING        = 1$/;"	v
s:adverbs	runtime/syntax/perl6.vim	/^    let s:adverbs = [$/;"	v
s:after	runtime/syntax/perl6.vim	/^    let s:after  = "\\\\%(\\\\_s*:!\\\\?\\\\K\\\\%(\\\\k\\\\|[-']\\\\K\\\\@=\\\\)*\\\\%(([^)]*)\\\\|\\\\[[^\\\\]]*]\\\\|<[^>]*>\\\\|Â«[^Â»]*Â»\\\\|{[^}]*}\\\\)\\\\?\\\\)*\\\\_s*\\\\)\\\\@<="$/;"	v
s:after_keyword	runtime/syntax/perl6.vim	/^let s:after_keyword = "\\\\)\\\\%(\\\\k\\\\|[-']\\\\K\\\\@=\\\\)\\\\@!\\""$/;"	v
s:allfolds	runtime/syntax/2html.vim	/^let s:allfolds = []$/;"	v
s:ant_cpo_save	runtime/syntax/ant.vim	/^let s:ant_cpo_save = &cpo$/;"	v
s:assignment_rx	runtime/indent/make.vim	/^let s:assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\==\\s*\\zs.*\\\\$'$/;"	v
s:attr	runtime/syntax/2html.vim	/^  let s:attr = ""$/;"	v
s:attr	runtime/syntax/2html.vim	/^  let s:attr = s:CSS1(s:id)$/;"	v
s:attributes	runtime/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:autoinstall	runtime/autoload/getscript.vim	/^  let s:autoinstall= $HOME."\/".s:dotvim$/;"	v
s:autoinstall	runtime/autoload/getscript.vim	/^  let s:autoinstall= g:GetLatestVimScripts_autoinstalldir"$/;"	v
s:autoinstall	runtime/autoload/getscript.vim	/^let s:autoinstall= ""$/;"	v
s:autoresetoptions	runtime/indent/php.vim	/^    let s:autoresetoptions = 1$/;"	v
s:autoresetoptions	runtime/indent/php.vim	/^let s:autoresetoptions = 0$/;"	v
s:beflet	runtime/indent/ocaml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\|try\\)\\|->\\|<-\\|=\\|;\\|(\\)\\s*$'$/;"	v
s:beflet	runtime/indent/sml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\|try\\)\\|->\\|;\\)\\s*$'$/;"	v
s:before	runtime/syntax/perl6.vim	/^    let s:before = "syn region p6StringQ matchgroup=p6Quote start=\\"\\\\%("$/;"	v
s:before_keyword	runtime/syntax/perl6.vim	/^let s:before_keyword = " display \\"\\\\%(\\\\k\\\\|\\\\K\\\\@<=[-']\\\\)\\\\@<!\\\\%("$/;"	v
s:bgc	runtime/syntax/2html.vim	/^  let s:bgc = ( &background == "dark" ? "#000000" : "#ffffff" )$/;"	v
s:bgc	runtime/syntax/2html.vim	/^let s:bgc = s:HtmlColor(synIDattr(hlID("Normal"), "bg#", s:whatterm))$/;"	v
s:block_regex	runtime/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:blockstart	runtime/indent/php.vim	/^let s:blockstart = '\\%(\\%(\\%(}\\s*\\)\\=else\\%(\\s\\+\\)\\=\\)\\=if\\>\\|else\\>\\|while\\>\\|switch\\>\\|case\\>\\|default\\>\\|for\\%(each\\)\\=\\>\\|declare\\>\\|class\\>\\|interface\\>\\|abstract\\>\\|try\\>\\|catch\\>\\)'$/;"	v
s:bmenu_wait	runtime/menu.vim	/^let s:bmenu_wait = 1$/;"	v
s:both	runtime/syntax/perl6.vim	/^let s:both = [s:infix_a_pattern, s:infix_n_pattern]$/;"	v
s:browsefilter	runtime/ftplugin/ant.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/ant.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	runtime/ftplugin/aspvbs.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/aspvbs.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.htm*\\n" .$/;"	v
s:browsefilter	runtime/ftplugin/config.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/config.vim	/^let s:browsefilter = "Bourne Shell Files (*.sh)\\t*.sh\\n" .$/;"	v
s:browsefilter	runtime/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	runtime/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	runtime/ftplugin/jsp.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/jsp.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/jsp.vim	/^let s:browsefilter = "Java Files (*.java)\\t*.java\\n" .$/;"	v
s:browsefilter	runtime/ftplugin/php.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/php.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.html;*.htm\\n" .$/;"	v
s:browsefilter	runtime/ftplugin/sgml.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/sgml.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	runtime/ftplugin/svg.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/svg.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	runtime/ftplugin/tcsh.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/tcsh.vim	/^let s:browsefilter = "csh Files (*.csh)\\t*.csh\\n" .$/;"	v
s:browsefilter	runtime/ftplugin/xhtml.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/xhtml.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/xhtml.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.html;*.htm\\n" .$/;"	v
s:browsefilter	runtime/ftplugin/xsd.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	runtime/ftplugin/xsd.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:byte_pattern	runtime/syntax/cdrtoc.vim	/^let s:byte_pattern = '\\<\\%([01]\\=\\d\\{1,2}\\|2\\%([0-4]\\d\\|5[0-5]\\)\\)\\>'$/;"	v
s:cache_list	runtime/autoload/syntaxcomplete.vim	/^let s:cache_list = []$/;"	v
s:cache_name	runtime/autoload/syntaxcomplete.vim	/^let s:cache_name = []$/;"	v
s:class	runtime/ftplugin/php.vim	/^let s:class = '\\(abstract\\s\\+\\|final\\s\\+\\)*class'$/;"	v
s:code	runtime/ftplugin/ruby.vim	/^    let s:code = "print ($: + begin; require %q{rubygems}; Gem.all_load_paths.sort.uniq; rescue LoadError; []; end).join(%q{,})"$/;"	v
s:col	runtime/syntax/2html.vim	/^	let s:col = s:col + 1$/;"	v
s:col	runtime/syntax/2html.vim	/^    let s:col = 1$/;"	v
s:comment_rx	runtime/indent/make.vim	/^let s:comment_rx = '^\\s*#'$/;"	v
s:concealinfo	runtime/syntax/2html.vim	/^	let s:concealinfo = synconcealed(s:lnum, s:col)$/;"	v
s:concealinfo	runtime/syntax/2html.vim	/^    let s:concealinfo = [0, '']$/;"	v
s:conditionalEnd	runtime/ftplugin/matlab.vim	/^	let s:conditionalEnd = '\\(([^()]*\\)\\@!\\<end\\>\\([^()]*)\\)\\@!'$/;"	v
s:conditional_directive_rx	runtime/indent/make.vim	/^let s:conditional_directive_rx = '^ *\\%(ifn\\=\\%(eq\\|def\\)\\|else\\)\\>'$/;"	v
s:continuation_regex	runtime/indent/ruby.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.,:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:continuation_regex2	runtime/indent/ruby.vim	/^let s:continuation_regex2 =$/;"	v
s:continuation_rx	runtime/indent/make.vim	/^let s:continuation_rx = '\\\\$'$/;"	v
s:continued_rule_rx	runtime/indent/make.vim	/^let s:continued_rule_rx = '^[^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:cpo_sav	runtime/autoload/tohtml.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	runtime/syntax/2html.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_save	runtime/compiler/ant.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/cucumber.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/fortran_g77.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/gcc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/mcs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/onsgmls.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/php.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/se.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/splint.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/tex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/xmllint.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/compiler/xmlwf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/filetype.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/abaqus.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	runtime/ftplugin/alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/automake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/c.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/changelog.vim	/^  let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/cobol.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/context.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/dosini.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/dtrace.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/haskell.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/help.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/hostsaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/ld.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/m4.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/mailcap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/mf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/mp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/msmessages.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/nsis.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/procmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/prolog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/racc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/sshconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/tcl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/udevrules.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/vb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/verilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/xdefaults.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/xf86conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/ftplugin/zsh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/indent/dtd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/indent/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/indent/perl6.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/indent/sh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/menu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/optwin.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/plugin/matchparen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/scripts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/synmenu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/aap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/autohotkey.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/cdrtoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/chordpro.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/cmusrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/context.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/doxygen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/initex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/ld.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/ldapconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/litestep.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/lynx.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/messages.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/plaintex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/privoxy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/racc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/synload.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/udevrules.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/xbl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	runtime/syntax/zsh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpoptions	runtime/ftplugin/ada.vim	/^let s:cpoptions = &cpoptions$/;"	v
s:cposet	runtime/compiler/fortran_F.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	runtime/compiler/fortran_cv.vim	/^let s:cposet = &cpoptions$/;"	v
s:cposet	runtime/compiler/fortran_elf90.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	runtime/compiler/fortran_lf95.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	runtime/ftplugin/fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	runtime/ftplugin/ocaml.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	runtime/indent/fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:cs_cpo_save	runtime/syntax/cs.vim	/^let s:cs_cpo_save = &cpo$/;"	v
s:cterm_color	runtime/syntax/2html.vim	/^    let s:cterm_color = {0: "#000000", 1: "#c00000", 2: "#008000", 3: "#804000", 4: "#0000c0", 5: "#c000c0", 6: "#008080", 7: "#c0c0c0", 8: "#808080", 9: "#ff6060", 10: "#00ff00", 11: "#ffff00", 12: "#8080ff", 13: "#ff40ff", 14: "#00ffff", 15: "#ffffff"}$/;"	v
s:cterm_color	runtime/syntax/2html.vim	/^    let s:cterm_color = {0: "#808080", 1: "#ff6060", 2: "#00ff00", 3: "#ffff00", 4: "#8080ff", 5: "#ff40ff", 6: "#00ffff", 7: "#ffffff"}$/;"	v
s:cur_menu_char	runtime/makemenu.vim	/^let s:cur_menu_char = ""$/;"	v
s:cur_menu_item	runtime/makemenu.vim	/^let s:cur_menu_item = 0$/;"	v
s:cur_menu_name	runtime/makemenu.vim	/^let s:cur_menu_name = ""$/;"	v
s:cur_menu_nr	runtime/makemenu.vim	/^let s:cur_menu_nr = 0$/;"	v
s:curly_	src/testdir/test60.vim	/^let s:curly_{str}_var = 1$/;"	v
s:current_syntax	runtime/syntax/2html.vim	/^  let s:current_syntax = 'none'$/;"	v
s:current_syntax	runtime/syntax/2html.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	runtime/syntax/2html.vim	/^  let s:current_syntax = w:current_syntax$/;"	v
s:defaultORcase	runtime/indent/php.vim	/^let s:defaultORcase = '^\\s*\\%(default\\|case\\).*:'$/;"	v
s:delims	runtime/syntax/perl6.vim	/^let s:delims = [$/;"	v
s:did_ft	runtime/syntax/syntax.vim	/^  let s:did_ft = 0$/;"	v
s:did_ft	runtime/syntax/syntax.vim	/^  let s:did_ft = 1$/;"	v
s:diff_id	runtime/syntax/2html.vim	/^	let s:diff_id = diff_hlID(s:lnum, s:col)$/;"	v
s:diff_id	runtime/syntax/2html.vim	/^    let s:diff_id = 0$/;"	v
s:diff_id_name	runtime/syntax/2html.vim	/^	  let s:diff_id_name = synIDattr(s:diff_id, "name", s:whatterm)$/;"	v
s:diff_id_name	runtime/syntax/2html.vim	/^    let s:diff_id_name = ""$/;"	v
s:diffattr	runtime/syntax/2html.vim	/^    let s:diffattr = diff_hlID(s:lnum, 1)$/;"	v
s:difffillchar	runtime/syntax/2html.vim	/^  let s:difffillchar = '-'$/;"	v
s:difffillchar	runtime/syntax/2html.vim	/^let s:difffillchar = &fillchars[matchend(&fillchars, 'diff:')]$/;"	v
s:dotvim	runtime/autoload/getscript.vim	/^  let s:dotvim= ".vim"$/;"	v
s:dotvim	runtime/autoload/getscript.vim	/^  let s:dotvim= "vimfiles"$/;"	v
s:dtd_cpo_save	runtime/syntax/dtd.vim	/^    let s:dtd_cpo_save = &cpo$/;"	v
s:encoding	runtime/keymap/croatian.vim	/^	let s:encoding = 'cp1250'$/;"	v
s:encoding	runtime/keymap/croatian.vim	/^	let s:encoding = 'iso-8859-2'$/;"	v
s:encoding	runtime/keymap/croatian.vim	/^let s:encoding = &enc$/;"	v
s:end	runtime/syntax/2html.vim	/^    let s:end = line("$")$/;"	v
s:end	runtime/syntax/2html.vim	/^  let s:end = html_end_line$/;"	v
s:end	runtime/syntax/2html.vim	/^  let s:end = line("$")$/;"	v
s:end	runtime/syntax/2html.vim	/^  let s:end = line('$')$/;"	v
s:end	runtime/syntax/2html.vim	/^let s:end=line('$')$/;"	v
s:end_conditional_directive_rx	runtime/indent/make.vim	/^let s:end_conditional_directive_rx = '^\\s*\\%(else\\|endif\\)\\>'$/;"	v
s:end_end_regex	runtime/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end\\>'$/;"	v
s:end_middle_regex	runtime/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue\\>\\|when\\|elsif\\)\\>'$/;"	v
s:end_skip_expr	runtime/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	runtime/indent/ruby.vim	/^let s:end_start_regex = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:endline	runtime/indent/php.vim	/^let s:endline= '\\s*\\%(\/\/.*\\|#.*\\|\/\\*.*\\*\/\\s*\\)\\=$'$/;"	v
s:expandedtab	runtime/syntax/2html.vim	/^	  let s:expandedtab = substitute(s:expandedtab, '\\t', repeat(' ', s:i), '')$/;"	v
s:expandedtab	runtime/syntax/2html.vim	/^	let s:expandedtab = s:concealinfo[1]$/;"	v
s:expandedtab	runtime/syntax/2html.vim	/^	let s:expandedtab = strpart(s:line, s:startcol - 1, s:col - s:startcol)$/;"	v
s:ext	runtime/tutor/tutor.vim	/^      let s:ext = "." . strpart(s:lang, 0, 2)$/;"	v
s:ext	runtime/tutor/tutor.vim	/^      let s:ext = ".cs"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^      let s:ext = ".de"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^      let s:ext = ".nl"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^      let s:ext = ".pl"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^      let s:ext = ".sk"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = ".cs.cp1250"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = ".el"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = ".el.cp737"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = ".el.utf-8"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = ".hr.cp1250"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = ".hu.cp1250"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = ".ja.euc"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = ".ja.sjis"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = ".ko.euc"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = ".pl.cp1250"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = ".sk.cp1250"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = ".tr.iso9"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = ".zh.big5"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = ".zh.euc"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = '.hr'$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = '.hu'$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = '.ru'$/;"	v
s:ext	runtime/tutor/tutor.vim	/^    let s:ext = '.ru.cp1251'$/;"	v
s:ext	runtime/tutor/tutor.vim	/^  let s:ext .= '.utf-8'$/;"	v
s:ext	runtime/tutor/tutor.vim	/^  let s:ext = ""$/;"	v
s:ext	runtime/tutor/tutor.vim	/^  let s:ext = "." . $xx$/;"	v
s:ext	runtime/tutor/tutor.vim	/^  let s:ext = ".de"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^  let s:ext = ".eo.utf-8"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^  let s:ext = ".vi.utf-8"$/;"	v
s:ext	runtime/tutor/tutor.vim	/^let s:ext = ""$/;"	v
s:f	runtime/spell/cleanadd.vim	/^      let s:f = escape(s:fname, ' \\|<')$/;"	v
s:f	runtime/spell/cleanadd.vim	/^      let s:f = fnameescape(s:fname)$/;"	v
s:fgc	runtime/syntax/2html.vim	/^  let s:fgc = ( &background == "dark" ? "#ffffff" : "#000000" )$/;"	v
s:fgc	runtime/syntax/2html.vim	/^let s:fgc = s:HtmlColor(synIDattr(hlID("Normal"), "fg#", s:whatterm))$/;"	v
s:filler	runtime/syntax/2html.vim	/^  let s:filler = diff_filler(s:lnum)$/;"	v
s:firstfold	runtime/syntax/2html.vim	/^	  let s:firstfold = 0$/;"	v
s:firstfold	runtime/syntax/2html.vim	/^      let s:firstfold = 1$/;"	v
s:fname	runtime/syntax/colortest.vim	/^    let s:fname = escape(s:fname, ' \\|')$/;"	v
s:fname	runtime/syntax/colortest.vim	/^    let s:fname = fnameescape(s:fname)$/;"	v
s:fname	runtime/syntax/colortest.vim	/^  let s:fname = expand('<sfile>')$/;"	v
s:foldId	runtime/syntax/2html.vim	/^	let s:foldId = s:foldId + 1$/;"	v
s:foldId	runtime/syntax/2html.vim	/^let s:foldId = 0$/;"	v
s:foldcolumn	runtime/syntax/2html.vim	/^	let s:foldcolumn = s:level+1$/;"	v
s:foldcolumn	runtime/syntax/2html.vim	/^  let s:foldcolumn = &foldcolumn$/;"	v
s:folded_assignment_rx	runtime/indent/make.vim	/^let s:folded_assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\=='$/;"	v
s:foldfillchar	runtime/syntax/2html.vim	/^    let s:foldfillchar = '-'$/;"	v
s:foldfillchar	runtime/syntax/2html.vim	/^  let s:foldfillchar = &fillchars[matchend(&fillchars, 'fold:')]$/;"	v
s:foldstack	runtime/syntax/2html.vim	/^	let s:foldstack[0].id = s:foldId$/;"	v
s:foldstack	runtime/syntax/2html.vim	/^let s:foldstack = []$/;"	v
s:foldtext_save	runtime/syntax/2html.vim	/^  let s:foldtext_save = &foldtext$/;"	v
s:ft_rules_udev_rules_pattern	runtime/filetype.vim	/^let s:ft_rules_udev_rules_pattern = '^\\s*\\cudev_rules\\s*=\\s*"\\([^"]\\{-1,}\\)\/*".*'$/;"	v
s:ftplugin_sql_objects	runtime/ftplugin/sql.vim	/^let s:ftplugin_sql_objects = $/;"	v
s:function	runtime/ftplugin/php.vim	/^let s:function = '\\(abstract\\s\\+\\|final\\s\\+\\|private\\s\\+\\|protected\\s\\+\\|public\\s\\+\\|static\\s\\+\\)*function'$/;"	v
s:hidden	runtime/syntax/hitest.vim	/^let s:hidden      = &hidden$/;"	v
s:htmlfont	runtime/syntax/2html.vim	/^  let s:htmlfont = "'". g:html_font . "', monospace"$/;"	v
s:htmlfont	runtime/syntax/2html.vim	/^  let s:htmlfont = "monospace"$/;"	v
s:i	runtime/ftplugin/ocaml.vim	/^  let s:i = g:omlet_indent_struct$/;"	v
s:i	runtime/ftplugin/ocaml.vim	/^  let s:i = matchstr(s:m,'\\d\\+')$/;"	v
s:i	runtime/ftplugin/ocaml.vim	/^  let s:i = s:idef$/;"	v
s:i	runtime/macros/less.vim	/^    let s:i = s:i + 1$/;"	v
s:i	runtime/macros/less.vim	/^  let s:i = 0$/;"	v
s:i	runtime/menu.vim	/^      let s:i = stridx(s:n, "\\n")$/;"	v
s:i	runtime/menu.vim	/^  let s:i = stridx(s:n, "\\n")$/;"	v
s:i	runtime/syntax/2html.vim	/^	      let s:i = &ts - (s:vcol % &ts)$/;"	v
s:i	runtime/syntax/2html.vim	/^	      let s:i = &ts$/;"	v
s:i	runtime/syntax/2html.vim	/^	    let s:i = &ts - ((s:idx + s:startcol - 1) % &ts)$/;"	v
s:i	runtime/syntax/help.vim	/^let s:i = match(expand("%"), '\\.\\a\\ax$')$/;"	v
s:id	runtime/syntax/2html.vim	/^	let s:id = synID(s:lnum, s:col, 1)$/;"	v
s:id	runtime/syntax/2html.vim	/^	let s:id = synIDtrans(s:id)$/;"	v
s:id	runtime/syntax/2html.vim	/^  let s:id = hlID('FoldColumn')$/;"	v
s:id	runtime/syntax/2html.vim	/^  let s:id = remove(s:idlist, 0)$/;"	v
s:id_name	runtime/syntax/2html.vim	/^	let s:id_name = 'Conceal'$/;"	v
s:id_name	runtime/syntax/2html.vim	/^	let s:id_name = synIDattr(s:id, "name", s:whatterm)$/;"	v
s:id_name	runtime/syntax/2html.vim	/^  let s:id_name = synIDattr(s:id, "name", s:whatterm)$/;"	v
s:idef	runtime/ftplugin/ocaml.vim	/^  let s:idef = 2$/;"	v
s:idef	runtime/ftplugin/ocaml.vim	/^  let s:idef = g:omlet_indent$/;"	v
s:idef	runtime/ftplugin/ocaml.vim	/^  let s:idef = matchstr(s:m,'\\d\\+')$/;"	v
s:idlist	runtime/syntax/2html.vim	/^let s:idlist = []$/;"	v
s:idx	runtime/menu.vim	/^      let s:idx = s:idx + 10$/;"	v
s:idx	runtime/menu.vim	/^    let s:idx = 100$/;"	v
s:idx	runtime/menu.vim	/^  let s:idx = s:idx + 10$/;"	v
s:idx	runtime/menu.vim	/^let s:idx = 100$/;"	v
s:idx	runtime/optwin.vim	/^let s:idx = 1$/;"	v
s:idx	runtime/syntax/2html.vim	/^	  let s:idx = stridx(s:expandedtab, "\\t")$/;"	v
s:idx	runtime/syntax/2html.vim	/^	let s:idx = stridx(s:expandedtab, "\\t")$/;"	v
s:infix	runtime/syntax/perl6.vim	/^let s:infix = "!\\\\?\\\\%(" . s:infix . "\\\\)"$/;"	v
s:infix	runtime/syntax/perl6.vim	/^let s:infix = join(s:both, "\\\\|")$/;"	v
s:infix_a	runtime/syntax/perl6.vim	/^let s:infix_a = [$/;"	v
s:infix_a_long	runtime/syntax/perl6.vim	/^let s:infix_a_long = join(s:infix_a, " ")$/;"	v
s:infix_a_pattern	runtime/syntax/perl6.vim	/^let s:infix_a_pattern = join(s:infix_a_words, "\\\\|")$/;"	v
s:infix_a_words	runtime/syntax/perl6.vim	/^let s:infix_a_words = split(s:infix_a_long)$/;"	v
s:infix_assoc	runtime/syntax/perl6.vim	/^let s:infix_assoc = "!\\\\?\\\\%(" . s:infix_a_pattern . "\\\\)"$/;"	v
s:infix_n	runtime/syntax/perl6.vim	/^let s:infix_n = "but does <=> leg cmp \\\\.\\\\. \\\\.\\\\.\\\\^\\\\^ \\\\^\\\\.\\\\. \\\\^\\\\.\\\\.\\\\^"$/;"	v
s:infix_n_pattern	runtime/syntax/perl6.vim	/^let s:infix_n_pattern = join(s:infix_n_words, "\\\\|")$/;"	v
s:infix_n_words	runtime/syntax/perl6.vim	/^let s:infix_n_words = split(s:infix_n)$/;"	v
s:inheritance_dent	runtime/indent/eiffel.vim	/^let s:inheritance_dent = '\\s*\\(redefine\\|rename\\|export\\)\\>'$/;"	v
s:interface	runtime/ftplugin/php.vim	/^let s:interface = 'interface'$/;"	v
s:just_inserted_rule_rx	runtime/indent/make.vim	/^let s:just_inserted_rule_rx = '^\\s*[^#:]\\+:\\{1,2}$'$/;"	v
s:keepcpo	runtime/autoload/getscript.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	runtime/autoload/netrw.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	runtime/autoload/netrwFileHandlers.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	runtime/autoload/tar.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	runtime/autoload/vimball.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	runtime/autoload/zip.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	runtime/plugin/getscriptPlugin.vim	/^let s:keepcpo                = &cpo$/;"	v
s:keepcpo	runtime/plugin/netrwPlugin.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	runtime/plugin/tarPlugin.vim	/^let s:keepcpo          = &cpo$/;"	v
s:keepcpo	runtime/plugin/vimballPlugin.vim	/^let s:keepcpo              = &cpo$/;"	v
s:keepcpo	runtime/plugin/zipPlugin.vim	/^let s:keepcpo          = &cpo$/;"	v
s:keywords	runtime/syntax/perl6.vim	/^let s:keywords = {$/;"	v
s:lang	runtime/menu.vim	/^      let s:lang = ""$/;"	v
s:lang	runtime/menu.vim	/^      let s:lang = &langmenu$/;"	v
s:lang	runtime/menu.vim	/^      let s:lang = s:lang . '.' . &enc$/;"	v
s:lang	runtime/menu.vim	/^      let s:lang = substitute(s:lang, '\\.[^.]*', "", "")$/;"	v
s:lang	runtime/menu.vim	/^    let s:lang = substitute(s:lang, " ", "_", "g")$/;"	v
s:lang	runtime/menu.vim	/^    let s:lang = substitute(s:lang, "@euro", "", "")$/;"	v
s:lang	runtime/menu.vim	/^    let s:lang = substitute(s:lang, '\\.iso8859', ".iso_8859", "")$/;"	v
s:lang	runtime/menu.vim	/^    let s:lang = substitute(s:lang, 'iso_8859-15\\=$', "latin1", "")$/;"	v
s:lang	runtime/menu.vim	/^    let s:lang = substitute(tolower(s:lang), '\\.iso-', ".iso_", "")$/;"	v
s:lang	runtime/menu.vim	/^    let s:lang = v:lang$/;"	v
s:lang	runtime/tutor/tutor.vim	/^    let s:lang = $LANG$/;"	v
s:lang	runtime/tutor/tutor.vim	/^    let s:lang = $LC_ALL$/;"	v
s:lang	runtime/tutor/tutor.vim	/^    let s:lang = substitute(s:lang, '\\c@euro', '', '')$/;"	v
s:lang	runtime/tutor/tutor.vim	/^    let s:lang = v:lang$/;"	v
s:lang	runtime/tutor/tutor.vim	/^  let s:lang = ""$/;"	v
s:last_mps	runtime/macros/matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_words	runtime/macros/matchit.vim	/^let s:last_words = ":"$/;"	v
s:lazyredraw	runtime/syntax/hitest.vim	/^let s:lazyredraw  = &lazyredraw$/;"	v
s:len	runtime/syntax/2html.vim	/^	  let s:len = &columns$/;"	v
s:len	runtime/syntax/2html.vim	/^    let s:len = strlen(s:line)$/;"	v
s:length_pattern	runtime/syntax/cdrtoc.vim	/^let s:length_pattern = '\\%(\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|\\d\\)\\|\\d\\+\\)\\>'$/;"	v
s:letlim	runtime/indent/ocaml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letlim	runtime/indent/sml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letpat	runtime/indent/ocaml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|external\\)\\>'$/;"	v
s:letpat	runtime/indent/sml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|external\\)\\>'$/;"	v
s:level	runtime/syntax/2html.vim	/^      let s:level = match(foldtextresult(s:lnum), '+-*\\zs[^-]') - 2$/;"	v
s:lim	runtime/indent/ocaml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:lim	runtime/indent/sml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:line	runtime/syntax/2html.vim	/^	  let s:line = s:line . repeat(' ', &columns - virtcol([s:lnum, s:len]) - s:margin)$/;"	v
s:line	runtime/syntax/2html.vim	/^    let s:line = getline(s:lnum)$/;"	v
s:line1	runtime/scripts.vim	/^    let s:line1 = substitute(s:line1, '\\<env\\s\\+', '', '')$/;"	v
s:line1	runtime/scripts.vim	/^    let s:line1 = substitute(s:line1, '\\S\\+=\\S\\+', '', 'g')$/;"	v
s:line1	runtime/scripts.vim	/^let s:line1 = getline(1)$/;"	v
s:line2	runtime/scripts.vim	/^  let s:line2 = getline(2)$/;"	v
s:line3	runtime/scripts.vim	/^  let s:line3 = getline(3)$/;"	v
s:line4	runtime/scripts.vim	/^  let s:line4 = getline(4)$/;"	v
s:line5	runtime/scripts.vim	/^  let s:line5 = getline(5)$/;"	v
s:lines	runtime/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	runtime/ftplugin/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	runtime/syntax/2html.vim	/^    let s:lines[-1].="<\/span><\/span>"$/;"	v
s:lines	runtime/syntax/2html.vim	/^let s:lines = []$/;"	v
s:lines	runtime/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	runtime/syntax/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lmax	runtime/ftplugin/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	runtime/ftplugin/fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	runtime/indent/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	runtime/indent/fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	runtime/syntax/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	runtime/syntax/fortran.vim	/^    let s:lmax = 500$/;"	v
s:ln	runtime/ftplugin/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	runtime/ftplugin/fortran.vim	/^    let s:ln=1$/;"	v
s:ln	runtime/indent/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	runtime/indent/fortran.vim	/^    let s:ln=1$/;"	v
s:ln	runtime/syntax/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	runtime/syntax/fortran.vim	/^    let s:ln=1$/;"	v
s:lnum	runtime/makemenu.vim	/^let s:lnum = line(".") - 1$/;"	v
s:lnum	runtime/makemenu.vim	/^let s:lnum = s:lnum + 1$/;"	v
s:lnum	runtime/optwin.vim	/^let s:lnum = line("$")$/;"	v
s:lnum	runtime/scripts.vim	/^	let s:lnum += 1$/;"	v
s:lnum	runtime/scripts.vim	/^      let s:lnum += 1$/;"	v
s:lnum	runtime/scripts.vim	/^      let s:lnum = 1$/;"	v
s:lnum	runtime/scripts.vim	/^    let s:lnum = 1$/;"	v
s:lnum	runtime/syntax/2html.vim	/^      let s:lnum = s:lnum + 1$/;"	v
s:lnum	runtime/syntax/2html.vim	/^    let s:lnum = 1$/;"	v
s:lnum	runtime/syntax/2html.vim	/^    let s:lnum = s:new_lnum$/;"	v
s:lnum	runtime/syntax/2html.vim	/^  let s:lnum = 1$/;"	v
s:lnum	runtime/syntax/2html.vim	/^  let s:lnum = html_start_line$/;"	v
s:lnum	runtime/syntax/2html.vim	/^  let s:lnum = s:lnum + 1$/;"	v
s:ls	runtime/syntax/2html.vim	/^let s:ls  = &ls$/;"	v
s:luapath	runtime/syntax/vim.vim	/^ let s:luapath= globpath(&rtp,"syntax\/lua.vim")$/;"	v
s:luapath	runtime/syntax/vim.vim	/^let s:luapath= expand("<sfile>:p:h")."\/lua.vim"$/;"	v
s:lz	runtime/macros/less.vim	/^let s:lz = &lz$/;"	v
s:m	runtime/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'default\\s*=\\s*\\d\\+')$/;"	v
s:m	runtime/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'struct\\s*=\\s*\\d\\+')$/;"	v
s:man_find_arg	runtime/ftplugin/man.vim	/^    let s:man_find_arg = "-l"$/;"	v
s:man_find_arg	runtime/ftplugin/man.vim	/^let s:man_find_arg = "-w"$/;"	v
s:man_sect_arg	runtime/ftplugin/man.vim	/^    let s:man_sect_arg = "-s"$/;"	v
s:man_sect_arg	runtime/ftplugin/man.vim	/^let s:man_sect_arg = ""$/;"	v
s:man_tag_depth	runtime/ftplugin/man.vim	/^let s:man_tag_depth = 0$/;"	v
s:margin	runtime/syntax/2html.vim	/^  let s:margin = 0$/;"	v
s:margin	runtime/syntax/2html.vim	/^  let s:margin = strlen(s:end) + 1$/;"	v
s:match_words	runtime/ftplugin/aspvbs.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	runtime/ftplugin/aspvbs.vim	/^let s:match_words = ""$/;"	v
s:match_words	runtime/ftplugin/config.vim	/^let s:match_words = ""$/;"	v
s:match_words	runtime/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	runtime/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	runtime/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:match_words	runtime/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	runtime/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	runtime/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	runtime/ftplugin/jsp.vim	/^    let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	runtime/ftplugin/jsp.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	runtime/ftplugin/jsp.vim	/^let s:match_words = ""$/;"	v
s:match_words	runtime/ftplugin/php.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	runtime/ftplugin/php.vim	/^let s:match_words = ""$/;"	v
s:match_words	runtime/ftplugin/xhtml.vim	/^    let s:match_words = b:match_words . "," . s:match_words$/;"	v
s:match_words	runtime/ftplugin/xhtml.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	runtime/ftplugin/xhtml.vim	/^let s:match_words = ""$/;"	v
s:maxoff	runtime/indent/python.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:mmssff_pattern	runtime/syntax/cdrtoc.vim	/^let s:mmssff_pattern = '\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|\\d\\)\\>'$/;"	v
s:modeline	runtime/ftplugin/ocaml.vim	/^  let s:modeline = ""$/;"	v
s:modeline	runtime/ftplugin/ocaml.vim	/^  let s:modeline = getline(".")$/;"	v
s:module	runtime/indent/ocaml.vim	/^let s:module = '\\<\\%(begin\\|sig\\|struct\\|object\\)\\>'$/;"	v
s:module	runtime/indent/sml.vim	/^let s:module = '\\<\\%(let\\|sig\\|struct\\)\\>'$/;"	v
s:more	runtime/syntax/hitest.vim	/^let s:more	  = &more$/;"	v
s:my_syncolor	runtime/syntax/doxygen.vim	/^    let s:my_syncolor=1$/;"	v
s:my_syncolor	runtime/syntax/doxygen.vim	/^  let s:my_syncolor=0$/;"	v
s:my_synlink	runtime/syntax/doxygen.vim	/^    let s:my_synlink=1$/;"	v
s:my_synlink	runtime/syntax/doxygen.vim	/^  let s:my_synlink=0$/;"	v
s:mzschemepath	runtime/syntax/vim.vim	/^ let s:mzschemepath= globpath(&rtp,"syntax\/scheme.vim")$/;"	v
s:mzschemepath	runtime/syntax/vim.vim	/^let s:mzschemepath= expand("<sfile>:p:h")."\/scheme.vim"$/;"	v
s:n	runtime/menu.vim	/^	let s:n = ""$/;"	v
s:n	runtime/menu.vim	/^	let s:n = strpart(s:n, s:i + 1, 19999)$/;"	v
s:n	runtime/menu.vim	/^    let s:n = ""$/;"	v
s:n	runtime/menu.vim	/^    let s:n = strpart(s:n, s:i + 1, 19999)$/;"	v
s:n	runtime/menu.vim	/^  let s:n = globpath(&runtimepath, "keymap\/*.vim")$/;"	v
s:n	runtime/menu.vim	/^let s:n = globpath(&runtimepath, "colors\/*.vim")$/;"	v
s:n	runtime/menu.vim	/^let s:n = globpath(&runtimepath, "compiler\/*.vim")$/;"	v
s:n	runtime/syntax/2html.vim	/^	let s:n = 2$/;"	v
s:n	runtime/syntax/2html.vim	/^      let s:n = s:n - 1$/;"	v
s:n	runtime/syntax/2html.vim	/^    let s:n = s:filler$/;"	v
s:name	runtime/menu.vim	/^	let s:name = s:n$/;"	v
s:name	runtime/menu.vim	/^	let s:name = strpart(s:n, 0, s:i)$/;"	v
s:name	runtime/menu.vim	/^      let s:name = substitute(s:name, '\\c.*[\/\\\\:\\]]\\([^\/\\\\:_]*\\)\\(_[0-9a-zA-Z-]*\\)\\=\\.vim', '\\1', '')$/;"	v
s:name	runtime/menu.vim	/^    let s:name = s:n$/;"	v
s:name	runtime/menu.vim	/^    let s:name = strpart(s:n, 0, s:i)$/;"	v
s:name	runtime/menu.vim	/^  let s:name = substitute(s:name, '\\c.*[\/\\\\:\\]]\\([^\/\\\\:]*\\)\\.vim', '\\1', '')$/;"	v
s:name	runtime/scripts.vim	/^    let s:name = 'wish'$/;"	v
s:name	runtime/scripts.vim	/^    let s:name = substitute(s:line1, '^#!.*[\/\\\\]\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:name	runtime/scripts.vim	/^    let s:name = substitute(s:line1, '^#!.*\\<env\\>\\s\\+\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:name	runtime/scripts.vim	/^    let s:name = substitute(s:line1, '^#!\\s*\\([^\/\\\\ ]*\\>\\).*', '\\1', '')$/;"	v
s:name	runtime/scripts.vim	/^    let s:name = substitute(s:line1, '^#!\\s*\\S*[\/\\\\]\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:names	runtime/menu.vim	/^let s:names = sort(map(split(s:n, "\\n"), 'substitute(v:val, "\\\\c.*[\/\\\\\\\\:\\\\]]\\\\([^\/\\\\\\\\:]*\\\\)\\\\.vim", "\\\\1", "")'), 1)$/;"	v
s:netrw_has_nt_rcp	runtime/autoload/netrw.vim	/^ let s:netrw_has_nt_rcp = 0$/;"	v
s:netrw_has_nt_rcp	runtime/autoload/netrw.vim	/^ let s:netrw_has_nt_rcp = 1$/;"	v
s:netrw_rcpmode	runtime/autoload/netrw.vim	/^ let s:netrw_rcpmode    = ''$/;"	v
s:netrw_rcpmode	runtime/autoload/netrw.vim	/^ let s:netrw_rcpmode    = '-b'$/;"	v
s:netrw_usercuc	runtime/autoload/netrw.vim	/^ let s:netrw_usercuc   = &cursorcolumn$/;"	v
s:netrw_usercul	runtime/autoload/netrw.vim	/^ let s:netrw_usercul   = &cursorline$/;"	v
s:new	runtime/syntax/2html.vim	/^	    let s:new = s:new . "<a class='FoldColumn' href='javascript:toggleFold(\\"fold".s:foldstack[0].id."\\")'>"$/;"	v
s:new	runtime/syntax/2html.vim	/^	    let s:new = s:new . "<a class='toggle-open FoldColumn' href='javascript:toggleFold(\\"fold".s:foldstack[0].id."\\")'>"$/;"	v
s:new	runtime/syntax/2html.vim	/^	    let s:new = s:new . "toggle-filler "$/;"	v
s:new	runtime/syntax/2html.vim	/^	    let s:new = s:new . repeat(" ", s:foldcolumn - s:allfolds[0].level)$/;"	v
s:new	runtime/syntax/2html.vim	/^	    let s:new = s:new . repeat(' ', s:foldcolumn - s:foldstack[0].level) . "<\/a>"$/;"	v
s:new	runtime/syntax/2html.vim	/^	    let s:new = s:new . repeat('|', s:allfolds[0].level - 1) . "<\/a>"$/;"	v
s:new	runtime/syntax/2html.vim	/^	    let s:new = s:new . repeat('|', s:allfolds[0].level - 1)$/;"	v
s:new	runtime/syntax/2html.vim	/^	    let s:new = s:new . repeat('|', s:foldstack[0].level)$/;"	v
s:new	runtime/syntax/2html.vim	/^	    let s:new = s:new . s:HtmlFormat(repeat(' ', s:foldcolumn), "FoldColumn", "")$/;"	v
s:new	runtime/syntax/2html.vim	/^	  let s:new = s:new . "-"$/;"	v
s:new	runtime/syntax/2html.vim	/^	  let s:new = s:new . "<\/a>"$/;"	v
s:new	runtime/syntax/2html.vim	/^	  let s:new = s:new . "<a class='toggle-closed FoldColumn' href='javascript:toggleFold(\\"fold".s:foldId."\\")'>"$/;"	v
s:new	runtime/syntax/2html.vim	/^	  let s:new = s:new . "<a class='toggle-open "$/;"	v
s:new	runtime/syntax/2html.vim	/^	  let s:new = s:new . "<a class='toggle-open FoldColumn' href='javascript:toggleFold(\\"fold".s:foldId."\\")'>+<\/a>"$/;"	v
s:new	runtime/syntax/2html.vim	/^	  let s:new = s:new . "FoldColumn' href='javascript:toggleFold(\\"fold".s:foldId."\\")'>"$/;"	v
s:new	runtime/syntax/2html.vim	/^	  let s:new = s:new . repeat(" ", s:foldcolumn - s:allfolds[0].level) . "<\/a>"$/;"	v
s:new	runtime/syntax/2html.vim	/^	let s:new .= "<span id='"$/;"	v
s:new	runtime/syntax/2html.vim	/^	let s:new .= "fold".s:foldId."' class='".s:allfolds[0].type."'>"$/;"	v
s:new	runtime/syntax/2html.vim	/^	let s:new .= (exists('g:html_diff_win_num') ? "win".g:html_diff_win_num : "")$/;"	v
s:new	runtime/syntax/2html.vim	/^	let s:new = repeat(s:LeadingSpace, s:margin) . s:new$/;"	v
s:new	runtime/syntax/2html.vim	/^	let s:new = s:new . " " . s:filler . " inserted lines "$/;"	v
s:new	runtime/syntax/2html.vim	/^	let s:new = s:new . "<span class='fulltext'>"$/;"	v
s:new	runtime/syntax/2html.vim	/^	let s:new = s:new . repeat(s:difffillchar, &columns - strlen(s:new) - s:margin)$/;"	v
s:new	runtime/syntax/2html.vim	/^	let s:new = s:new . repeat(s:difffillchar, 3)$/;"	v
s:new	runtime/syntax/2html.vim	/^	let s:new = s:new . s:HtmlFormat(s:expandedtab,  s:id_name, s:diff_id_name)$/;"	v
s:new	runtime/syntax/2html.vim	/^	let s:new = s:new . substitute(s:HtmlFormat(s:numcol . foldtextresult(s:lnum), "Folded", ""), '<\/span>', s:HtmlEndline.'\\n\\0', '')$/;"	v
s:new	runtime/syntax/2html.vim	/^	let s:new = s:new."<\/span><\/span>"$/;"	v
s:new	runtime/syntax/2html.vim	/^      let s:new = repeat(s:difffillchar, 3)$/;"	v
s:new	runtime/syntax/2html.vim	/^      let s:new = s:HtmlFormat(s:new, "DiffDelete", "")$/;"	v
s:new	runtime/syntax/2html.vim	/^      let s:new = s:new . repeat(s:foldfillchar, &columns - strlen(s:new))$/;"	v
s:new	runtime/syntax/2html.vim	/^      let s:new = s:new . s:HtmlFormat(s:numcol, "lnr", "")$/;"	v
s:new	runtime/syntax/2html.vim	/^    let s:new = s:HtmlFormat(s:new, "Folded", "")$/;"	v
s:new	runtime/syntax/2html.vim	/^    let s:new = s:numcol . foldtextresult(s:lnum)$/;"	v
s:new	runtime/syntax/2html.vim	/^  let s:new = ""$/;"	v
s:new_lnum	runtime/syntax/2html.vim	/^    let s:new_lnum = foldclosedend(s:lnum)$/;"	v
s:newfold	runtime/syntax/2html.vim	/^	let s:newfold.type = "open-fold"$/;"	v
s:newfold	runtime/syntax/2html.vim	/^      let s:newfold = {'firstline': s:lnum, 'lastline': foldclosedend(s:lnum), 'level': s:level,'type': "closed-fold"}$/;"	v
s:newwin	runtime/syntax/2html.vim	/^let s:newwin = winnr()$/;"	v
s:newwin_stl	runtime/syntax/2html.vim	/^let s:newwin_stl = &l:stl$/;"	v
s:no_indent	runtime/indent/eiffel.vim	/^let s:no_indent = '^\\s*\\(class\\|feature\\|creation\\|inherit\\)\\>'$/;"	v
s:notPhpHereDoc	runtime/indent/php.vim	/^let s:notPhpHereDoc = '\\%(break\\|return\\|continue\\|exit\\|else\\)'$/;"	v
s:not_end	runtime/ftplugin/framescript.vim	/^  let s:not_end = '\\c\\%(\\<End\\)\\@<!'$/;"	v
s:notelse	runtime/ftplugin/fortran.vim	/^  let s:notelse = '\\%(\\<end\\s\\+\\|\\<else\\s\\+\\)\\@<!'$/;"	v
s:notend	runtime/ftplugin/ada.vim	/^   let s:notend      = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	runtime/ftplugin/aspvbs.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	runtime/ftplugin/fortran.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	runtime/ftplugin/sql.vim	/^let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	runtime/ftplugin/vhdl.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notprocedure	runtime/ftplugin/fortran.vim	/^  let s:notprocedure = '\\%(\\s\\+procedure\\>\\)\\@!'$/;"	v
s:notselect	runtime/ftplugin/fortran.vim	/^  let s:notselect = '\\%(\\<select\\s\\+\\)\\@<!'$/;"	v
s:notslash	runtime/macros/matchit.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	v
s:numcol	runtime/syntax/2html.vim	/^    let s:numcol = ""$/;"	v
s:numcol	runtime/syntax/2html.vim	/^    let s:numcol = repeat(' ', s:margin - 1 - strlen(s:lnum)) . s:lnum . ' '$/;"	v
s:obj	runtime/indent/ocaml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|object\\s*(.*)\\)\\s*$'$/;"	v
s:obj	runtime/indent/sml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|object\\s*(.*)\\)\\s*$'$/;"	v
s:ocaml_word_char	runtime/ftplugin/ocaml.vim	/^    let s:ocaml_word_char = '\\w|[À-ÿ]|'''$/;"	v
s:offset	runtime/syntax/2html.vim	/^	    let s:offset -= s:i - 1$/;"	v
s:offset	runtime/syntax/2html.vim	/^	let s:offset = 0$/;"	v
s:old_bind	runtime/syntax/2html.vim	/^let s:old_bind = &l:scrollbind$/;"	v
s:old_et	runtime/syntax/2html.vim	/^let s:old_et = &l:et$/;"	v
s:old_fdm	runtime/syntax/2html.vim	/^let s:old_fdm = &foldmethod$/;"	v
s:old_fen	runtime/syntax/2html.vim	/^let s:old_fen = &foldenable$/;"	v
s:old_icon	runtime/optwin.vim	/^let s:old_icon = &icon$/;"	v
s:old_icon	runtime/syntax/2html.vim	/^let s:old_icon = &icon$/;"	v
s:old_magic	runtime/syntax/2html.vim	/^let s:old_magic = &magic$/;"	v
s:old_more	runtime/syntax/2html.vim	/^let s:old_more = &more$/;"	v
s:old_paste	runtime/syntax/2html.vim	/^let s:old_paste = &paste$/;"	v
s:old_report	runtime/syntax/2html.vim	/^let s:old_report = &report$/;"	v
s:old_ru	runtime/optwin.vim	/^let s:old_ru = &ru$/;"	v
s:old_sc	runtime/optwin.vim	/^let s:old_sc = &sc$/;"	v
s:old_search	runtime/syntax/2html.vim	/^let s:old_search = @\/$/;"	v
s:old_title	runtime/optwin.vim	/^let s:old_title = &title$/;"	v
s:old_title	runtime/syntax/2html.vim	/^let s:old_title = &title$/;"	v
s:old_winfixheight	runtime/syntax/2html.vim	/^let s:old_winfixheight = &l:winfixheight$/;"	v
s:old_winheight	runtime/syntax/2html.vim	/^let s:old_winheight = winheight(0)$/;"	v
s:oldcolumn	runtime/syntax/lhaskell.vim	/^let s:oldcolumn=col(".")$/;"	v
s:oldcpo	runtime/syntax/tcsh.vim	/^let s:oldcpo = &cpo$/;"	v
s:oldline	runtime/syntax/lhaskell.vim	/^let s:oldline=line(".")$/;"	v
s:oneProbe	runtime/syntax/dtrace.vim	/^let s:oneProbe = '\\%(BEGIN\\|END\\|ERROR\\|\\S\\{-}:\\S\\{-}:\\S\\{-}:\\S\\{-}\\)\\_s*'$/;"	v
s:or_replace	runtime/ftplugin/sql.vim	/^let s:or_replace = '\\%(or\\s\\+replace\\s\\+\\)\\?'$/;"	v
s:orders	runtime/syntax/hostconf.vim	/^let s:orders = ['bind', 'hosts', 'nis']$/;"	v
s:ordot	runtime/ftplugin/cobol.vim	/^    let s:ordot = '\\|\\ze\\.\\%( \\@=\\|$\\)'$/;"	v
s:orgbufnr	runtime/syntax/2html.vim	/^let s:orgbufnr = winbufnr(0)$/;"	v
s:orgwin	runtime/syntax/2html.vim	/^let s:orgwin = bufwinnr(s:orgbufnr)$/;"	v
s:origwin_stl	runtime/syntax/2html.vim	/^let s:origwin_stl = &l:stl$/;"	v
s:outdent	runtime/indent/eiffel.vim	/^let s:outdent = '^\\s*\\(else\\|invariant\\|variant\\|do\\|require\\|until\\|loop\\|local\\)\\>'$/;"	v
s:perlpath	runtime/syntax/vim.vim	/^ let s:perlpath= globpath(&rtp,"syntax\/perl.vim")$/;"	v
s:perlpath	runtime/syntax/vim.vim	/^let s:perlpath= expand("<sfile>:p:h")."\/perl.vim"$/;"	v
s:pgb	runtime/syntax/2html.vim	/^	  let s:pgb.needs_redraw = 0$/;"	v
s:pgb	runtime/syntax/2html.vim	/^      let s:pgb.needs_redraw = 0$/;"	v
s:pgb	runtime/syntax/2html.vim	/^    let s:pgb = s:ProgressBar("Processing folds:", line('$')*2, s:orgwin)$/;"	v
s:pgb	runtime/syntax/2html.vim	/^    let s:pgb.needs_redraw = 0$/;"	v
s:pgb	runtime/syntax/2html.vim	/^  let s:pgb = s:ProgressBar("Processing classes:", len(s:idlist),s:newwin)$/;"	v
s:pgb	runtime/syntax/2html.vim	/^  let s:pgb = s:ProgressBar("Processing lines:", s:end - s:lnum + 1, s:orgwin)$/;"	v
s:prepended	runtime/autoload/syntaxcomplete.vim	/^let s:prepended  = ''$/;"	v
s:prevc	runtime/syntax/2html.vim	/^		let s:prevc = matchstr(s:expandedtab, '.\\%' . (s:idx + 1) . 'c')$/;"	v
s:prevc	runtime/syntax/2html.vim	/^		let s:prevc = matchstr(s:line, '.\\%' . (s:startcol + s:idx + s:offset) . 'c')$/;"	v
s:progressbar	runtime/syntax/2html.vim	/^  let s:progressbar={}$/;"	v
s:property	runtime/indent/sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:pythonpath	runtime/syntax/vim.vim	/^ let s:pythonpath= globpath(&rtp,"syntax\/python.vim")$/;"	v
s:pythonpath	runtime/syntax/vim.vim	/^let s:pythonpath= expand("<sfile>:p:h")."\/python.vim"$/;"	v
s:q_adverbs	runtime/syntax/perl6.vim	/^    let s:q_adverbs = [$/;"	v
s:register_a	runtime/syntax/hitest.vim	/^let s:register_a  = @a$/;"	v
s:register_se	runtime/syntax/hitest.vim	/^let s:register_se = @\/$/;"	v
s:relative_indent	runtime/indent/eiffel.vim	/^let s:relative_indent = '^\\s*\\(deferred\\|class\\|feature\\|creation\\|inherit\\|loop\\|from\\|until\\|if\\|else\\|elseif\\|ensure\\|require\\|check\\|do\\|local\\|invariant\\|variant\\|rename\\|redefine\\|do\\|export\\)\\>'$/;"	v
s:report	runtime/syntax/hitest.vim	/^let s:report      = &report$/;"	v
s:routines	runtime/syntax/perl6.vim	/^let s:routines = [$/;"	v
s:ruby_deindent_keywords	runtime/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	runtime/indent/ruby.vim	/^let s:ruby_indent_keywords = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:ruby_path	runtime/ftplugin/ruby.vim	/^      let s:ruby_path = system("ruby -e '" . s:code . "'")$/;"	v
s:ruby_path	runtime/ftplugin/ruby.vim	/^      let s:ruby_path = system('ruby -e "' . s:code . '"')$/;"	v
s:ruby_path	runtime/ftplugin/ruby.vim	/^    let s:ruby_path = ".,,"$/;"	v
s:ruby_path	runtime/ftplugin/ruby.vim	/^    let s:ruby_path = '.,' . substitute(s:ruby_path, '\\%(^\\|,\\)\\.\\%(,\\|$\\)', ',,', '')$/;"	v
s:ruby_path	runtime/ftplugin/ruby.vim	/^    let s:ruby_path = g:ruby_path$/;"	v
s:rubycomplete_debug	runtime/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	runtime/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:rubypath	runtime/syntax/vim.vim	/^ let s:rubypath= globpath(&rtp,"syntax\/ruby.vim")$/;"	v
s:rubypath	runtime/syntax/vim.vim	/^let s:rubypath= expand("<sfile>:p:h")."\/ruby.vim"$/;"	v
s:rule_rx	runtime/indent/make.vim	/^let s:rule_rx = '^[^ \\t#:][^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:s	runtime/ftplugin/ocaml.vim	/^let s:s = line2byte(line('.'))+col('.')-1$/;"	v
s:save_cpo	runtime/ftplugin/ant.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/aspvbs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/csc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/csh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/dtd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/html.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/initex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/java.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/jsp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/matlab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/perl6.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/php.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/plaintex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/sgml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/sql.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/svg.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/tcsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/tex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/xhtml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/xml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/ftplugin/xsd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/macros/matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	runtime/mswin.vim	/^  let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	runtime/syntax/named.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_exc	runtime/autoload/sqlcomplete.vim	/^    let s:save_exc = g:omni_syntax_group_exclude_sql$/;"	v
s:save_exc	runtime/autoload/sqlcomplete.vim	/^let s:save_exc              = ""$/;"	v
s:save_inc	runtime/autoload/sqlcomplete.vim	/^    let s:save_inc = g:omni_syntax_group_include_sql$/;"	v
s:save_inc	runtime/autoload/sqlcomplete.vim	/^let s:save_inc              = ""$/;"	v
s:save_prev_table	runtime/autoload/sqlcomplete.vim	/^let s:save_prev_table       = ""$/;"	v
s:save_wrapscan	src/po/check.vim	/^let s:save_wrapscan = &wrapscan$/;"	v
s:savecpo	runtime/compiler/perl.vim	/^let s:savecpo = &cpo$/;"	v
s:script_dict	src/testdir/test60.vim	/^let s:script_dict = {"xcord":100, "ycord":2}$/;"	v
s:script_list	src/testdir/test60.vim	/^let s:script_list = ["blue", "orange"]$/;"	v
s:script_var	src/testdir/test60.vim	/^let s:script_var = 1$/;"	v
s:searchpairflags	runtime/indent/php.vim	/^let s:searchpairflags = 'bWr'$/;"	v
s:section	runtime/ftplugin/php.vim	/^let s:section = '\\(.*\\%#\\)\\@!\\_^\\s*\\zs\\('.s:function.'\\|'.s:class.'\\|'.s:interface.'\\)'$/;"	v
s:settings	runtime/syntax/2html.vim	/^let s:settings = tohtml#GetUserSettings()$/;"	v
s:sgml_cpo_save	runtime/syntax/sgml.vim	/^let s:sgml_cpo_save = &cpo$/;"	v
s:sh_fold_functions	runtime/syntax/sh.vim	/^ let s:sh_fold_functions = 1$/;"	v
s:sh_fold_heredoc	runtime/syntax/sh.vim	/^ let s:sh_fold_heredoc   = 2$/;"	v
s:sh_fold_ifdofor	runtime/syntax/sh.vim	/^ let s:sh_fold_ifdofor   = 4$/;"	v
s:sh_indent_defaults	runtime/indent/sh.vim	/^let s:sh_indent_defaults = {$/;"	v
s:shortmess	runtime/syntax/hitest.vim	/^let s:shortmess   = &shortmess$/;"	v
s:single_dent	runtime/indent/eiffel.vim	/^let s:single_dent = '^[^-]\\+[[:alnum:]]\\+ is\\(\\s*\\(--\\).*\\)\\=$'$/;"	v
s:skip	runtime/indent/cobol.vim	/^let s:skip = 'getline(".") =~ "^.\\\\{6\\\\}[*\/$-]\\\\|\\"[^\\"]*\\""'$/;"	v
s:skip_expr	runtime/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:sol	runtime/ftplugin/sh.vim	/^    let s:sol = '\\%(;\\s*\\|^\\s*\\)\\@<='  " start of line$/;"	v
s:spacing_errors	runtime/syntax/changelog.vim	/^  let s:spacing_errors = 1$/;"	v
s:spacing_errors	runtime/syntax/changelog.vim	/^  let s:spacing_errors = b:changelog_spacing_errors$/;"	v
s:spacing_errors	runtime/syntax/changelog.vim	/^  let s:spacing_errors = g:changelog_spacing_errors$/;"	v
s:spc	runtime/spell/he.vim	/^let s:spc = &l:spc$/;"	v
s:spc	runtime/spell/yi.vim	/^let s:spc = &l:spc$/;"	v
s:spellfile_URL	runtime/autoload/spellfile.vim	/^let s:spellfile_URL = ''    " Start with nothing so that s:donedict is reset.$/;"	v
s:sql_file_procedure	runtime/autoload/sqlcomplete.vim	/^let s:sql_file_procedure    = ""$/;"	v
s:sql_file_table	runtime/autoload/sqlcomplete.vim	/^let s:sql_file_table        = ""$/;"	v
s:sql_file_view	runtime/autoload/sqlcomplete.vim	/^let s:sql_file_view         = ""$/;"	v
s:startcol	runtime/syntax/2html.vim	/^      let s:startcol = s:col " The start column for processing text$/;"	v
s:subtype	runtime/syntax/liquid.vim	/^  let s:subtype = exists('b:liquid_subtype') ? b:liquid_subtype : ''$/;"	v
s:syn_list	runtime/autoload/sqlcomplete.vim	/^let s:syn_list              = []$/;"	v
s:syn_remove_words	runtime/autoload/syntaxcomplete.vim	/^let s:syn_remove_words = 'match,matchgroup=,contains,'.$/;"	v
s:syn_value	runtime/autoload/sqlcomplete.vim	/^let s:syn_value             = []$/;"	v
s:syng_strcom	runtime/indent/ruby.vim	/^let s:syng_strcom = '\\<ruby\\%(String\\|StringEscape\\|ASCIICode' .$/;"	v
s:syng_string	runtime/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_stringdoc	runtime/indent/ruby.vim	/^let s:syng_stringdoc =$/;"	v
s:tag	runtime/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag_close	runtime/syntax/2html.vim	/^  let s:tag_close = ' \/>'$/;"	v
s:tag_close	runtime/syntax/2html.vim	/^  let s:tag_close = '>'$/;"	v
s:taintopt	runtime/compiler/perl.vim	/^	let s:taintopt = ''$/;"	v
s:taintopt	runtime/compiler/perl.vim	/^	let s:taintopt = 'T'$/;"	v
s:tbl_alias	runtime/autoload/sqlcomplete.vim	/^let s:tbl_alias             = []$/;"	v
s:tbl_cols	runtime/autoload/sqlcomplete.vim	/^let s:tbl_cols              = []$/;"	v
s:tbl_name	runtime/autoload/sqlcomplete.vim	/^let s:tbl_name              = []$/;"	v
s:tclpath	runtime/syntax/vim.vim	/^  let s:tclpath= globpath(&rtp,"syntax\/tcl.vim")$/;"	v
s:tclpath	runtime/syntax/vim.vim	/^ let s:tclpath= expand("<sfile>:p:h")."\/tcl.vim"$/;"	v
s:temp	runtime/syntax/perl6.vim	/^    let s:temp = split(s:words_space)$/;"	v
s:temp	runtime/syntax/perl6.vim	/^let s:temp = split(s:words_space)$/;"	v
s:test	runtime/ftplugin/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	runtime/indent/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	runtime/syntax/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:texMathList	runtime/syntax/tex.vim	/^  let s:texMathList=[$/;"	v
s:tex_conceal	runtime/syntax/tex.vim	/^ let s:tex_conceal= 'admgs'$/;"	v
s:tex_conceal	runtime/syntax/tex.vim	/^ let s:tex_conceal= g:tex_conceal$/;"	v
s:thiswin	runtime/optwin.vim	/^  let s:thiswin = winnr()$/;"	v
s:thiswin	runtime/optwin.vim	/^let s:thiswin = winnr()$/;"	v
s:token_pattern	runtime/indent/dtd.vim	/^let s:token_pattern = '^[^[:space:]]\\+'$/;"	v
s:trust_user_indent	runtime/indent/eiffel.vim	/^let s:trust_user_indent = '\\(+\\)\\(\\s*\\(--\\).*\\)\\=$'$/;"	v
s:trytcl	runtime/syntax/vim.vim	/^ let s:trytcl= (&shell !~ '\\<\\%(bash\\>\\|4[nN][tT]\\|\\<zsh\\)\\>\\%(\\.exe\\)\\=$')$/;"	v
s:trytcl	runtime/syntax/vim.vim	/^ let s:trytcl= 1$/;"	v
s:tutorfile	runtime/tutor/tutor.vim	/^let s:tutorfile = "\/tutor\/tutor"$/;"	v
s:tutorxx	runtime/tutor/tutor.vim	/^let s:tutorxx = $VIMRUNTIME . s:tutorfile . s:ext$/;"	v
s:type	runtime/indent/ocaml.vim	/^let s:type = '^\\s*\\%(class\\|let\\|type\\)\\>.*='$/;"	v
s:type	runtime/indent/sml.vim	/^let s:type = '^\\s*\\%(let\\|type\\)\\>.*='$/;"	v
s:undo_ftplugin	runtime/ftplugin/ant.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/ant.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	runtime/ftplugin/aspvbs.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/aspvbs.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	runtime/ftplugin/config.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/config.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	runtime/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	runtime/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	runtime/ftplugin/jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/jsp.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	runtime/ftplugin/php.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/php.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	runtime/ftplugin/sgml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/sgml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	runtime/ftplugin/svg.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/svg.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	runtime/ftplugin/tcsh.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/tcsh.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	runtime/ftplugin/xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/xhtml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	runtime/ftplugin/xsd.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	runtime/ftplugin/xsd.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_spellang	runtime/menu.vim	/^  let s:undo_spellang = ['aun &Tools.&Spelling.&Find\\ More\\ Languages']$/;"	v
s:val	runtime/indent/sml.vim	/^let s:val = '^\\s*\\(val\\|external\\)\\>.*:'$/;"	v
s:values	runtime/autoload/csscomplete.vim	/^	let s:values = split("azimuth background background-attachment background-color background-image background-position background-repeat border bottom border-collapse border-color border-spacing border-style border-top border-right border-bottom border-left border-top-color border-right-color border-bottom-color border-left-color  border-top-style border-right-style border-bottom-style border-left-style border-top-width border-right-width border-bottom-width border-left-width border-width caption-side clear clip color content counter-increment counter-reset cue cue-after cue-before cursor display direction elevation empty-cells float font font-family font-size font-style font-variant font-weight height left letter-spacing line-height list-style list-style-image list-style-position list-style-type margin margin-right margin-left margin-top margin-bottom max-height max-width min-height min-width orphans outline outline-color outline-style outline-width overflow padding padding-top padding-right padding-bottom padding-left page-break-after page-break-before page-break-inside pause pause-after pause-before pitch pitch-range play-during position quotes right richness speak speak-header speak-numeral speak-punctuation speech-rate stress table-layout text-align text-decoration text-indent text-transform top unicode-bidi vertical-align visibility voice-family volume white-space width widows word-spacing z-index")$/;"	v
s:vcol	runtime/syntax/2html.vim	/^	      let s:vcol = virtcol([s:lnum, s:startcol + s:idx + s:offset - len(s:prevc)])$/;"	v
s:warnopt	runtime/compiler/perl.vim	/^	let s:warnopt = 'W'$/;"	v
s:warnopt	runtime/compiler/perl.vim	/^	let s:warnopt = 'w'$/;"	v
s:was_diff	src/po/cleanup.vim	/^let s:was_diff = &diff$/;"	v
s:whatterm	runtime/syntax/2html.vim	/^  let s:whatterm = "cterm"$/;"	v
s:whatterm	runtime/syntax/2html.vim	/^  let s:whatterm = "gui"$/;"	v
s:when_no_matched_or_others	runtime/ftplugin/sql.vim	/^let s:when_no_matched_or_others = '\\%(\\<when\\>\\%(\\s\\+\\%(\\%(\\<not\\>\\s\\+\\)\\?<matched\\>\\)\\|\\<others\\>\\)\\@!\\)'$/;"	v
s:words	runtime/syntax/perl6.vim	/^    let s:words = join(s:temp, "\\\\|")$/;"	v
s:words	runtime/syntax/perl6.vim	/^let s:words = join(s:temp, "\\\\|")$/;"	v
s:words_space	runtime/syntax/perl6.vim	/^    let s:words_space = join(words, " ")$/;"	v
s:words_space	runtime/syntax/perl6.vim	/^let s:words_space = join(s:routines, " ")$/;"	v
s:wrapscan	runtime/syntax/hitest.vim	/^let s:wrapscan    = &wrapscan$/;"	v
s:wsh_cpo_save	runtime/syntax/wsh.vim	/^let s:wsh_cpo_save = &cpo$/;"	v
s:xml_cpo_save	runtime/syntax/xml.vim	/^let s:xml_cpo_save = &cpo$/;"	v
s:zipfile_escape	runtime/autoload/zip.vim	/^let s:zipfile_escape = ' ?&;\\'$/;"	v
s:zsh_syntax_variables	runtime/syntax/zsh.vim	/^  let s:zsh_syntax_variables = 'all'$/;"	v
s:zsh_syntax_variables	runtime/syntax/zsh.vim	/^  let s:zsh_syntax_variables = g:zsh_syntax_variables$/;"	v
s_bStatus	src/glbl_ime.cpp	/^static BOOL s_bStatus = FALSE; \/* for evacuate *\/$/;"	v	file:
s_brush	src/gui_w48.c	/^static HBRUSH	s_brush = NULL;$/;"	v	file:
s_busy_processing	src/gui_w48.c	/^static int		s_busy_processing = FALSE;$/;"	v	file:
s_button_pending	src/gui_w48.c	/^static int		s_button_pending = -1;$/;"	v	file:
s_cursor_visible	src/os_win32.c	/^static int s_cursor_visible = TRUE;$/;"	v	file:
s_dlgfntheight	src/gui_w48.c	/^static WORD		s_dlgfntheight;		\/* height of the dialog font *\/$/;"	v	file:
s_dlgfntwidth	src/gui_w48.c	/^static WORD		s_dlgfntwidth;		\/* width of the dialog font *\/$/;"	v	file:
s_dont_use_vimrun	src/os_win32.c	/^static int s_dont_use_vimrun = TRUE;$/;"	v	file:
s_findrep_hwnd	src/gui_w48.c	/^static HWND		s_findrep_hwnd = NULL;$/;"	v	file:
s_findrep_is_find	src/gui_w48.c	/^static int		s_findrep_is_find;	\/* TRUE for find dialog, FALSE$/;"	v	file:
s_findrep_msg	src/gui_w48.c	/^static UINT		s_findrep_msg = 0;	\/* set in gui_w[16\/32].c *\/$/;"	v	file:
s_findrep_struct	src/gui_w48.c	/^static FINDREPLACE	s_findrep_struct;$/;"	v	file:
s_findrep_struct_w	src/gui_w48.c	/^static FINDREPLACEW	s_findrep_struct_w;$/;"	v	file:
s_getting_focus	src/gui_w48.c	/^static int		s_getting_focus = FALSE;$/;"	v	file:
s_hWnd	src/glbl_ime.cpp	/^static HWND s_hWnd = NULL;$/;"	v	file:
s_hdc	src/gui_w48.c	/^static HDC		s_hdc = NULL;$/;"	v	file:
s_hinst	src/gui_w48.c	/^static HINSTANCE	s_hinst = NULL;$/;"	v	file:
s_htearbitmap	src/gui_w48.c	/^static HBITMAP	s_htearbitmap;	    \/* bitmap used to indicate tearoff *\/$/;"	v	file:
s_hwnd	src/gui_w48.c	/^HWND			s_hwnd = NULL;$/;"	v	file:
s_hwnd	src/os_mswin.c	/^static HWND s_hwnd = 0;	    \/* console window handle, set by GetConsoleHwnd() *\/$/;"	v	file:
s_kFlags_pending	src/gui_w48.c	/^static UINT		s_kFlags_pending;$/;"	v	file:
s_lParam	src/gui_w48.c	/^static LPARAM		s_lParam = 0;$/;"	v	file:
s_lfDefault	src/os_mswin.c	/^static const LOGFONT s_lfDefault =$/;"	v	file:
s_menuBar	src/gui_w48.c	/^static HMENU		s_menuBar = NULL;$/;"	v	file:
s_menu_id	src/gui_w16.c	/^static UINT	s_menu_id = 100;$/;"	v	file:
s_menu_id	src/gui_w32.c	/^static UINT	s_menu_id = 100;$/;"	v	file:
s_need_activate	src/gui_w48.c	/^static int		s_need_activate = FALSE;$/;"	v	file:
s_pfnGetConsoleKeyboardLayoutName	src/os_win32.c	/^static PFNGCKLN    s_pfnGetConsoleKeyboardLayoutName = NULL;$/;"	v	file:
s_tabhwnd	src/gui_w48.c	/^static HWND		s_tabhwnd = NULL;$/;"	v	file:
s_tearoffs	src/menu.c	/^static int s_tearoffs = FALSE;$/;"	v	file:
s_textArea	src/gui_w48.c	/^static HWND		s_textArea = NULL;$/;"	v	file:
s_textfield	src/gui_w48.c	/^static char_u		*s_textfield; \/* Used by dialogs to pass back strings *\/$/;"	v	file:
s_timed_out	src/gui_w48.c	/^static int		s_timed_out = FALSE;$/;"	v	file:
s_title	src/swis.s	/^s_title:$/;"	l
s_toolbarhwnd	src/gui_w48.c	/^static HWND		s_toolbarhwnd = NULL;$/;"	v	file:
s_uMsg	src/gui_w48.c	/^static UINT		s_uMsg = 0;$/;"	v	file:
s_usenewlook	src/gui_w32.c	/^static int	s_usenewlook;	    \/* emulate W95\/NT4 non-bold dialogs *\/$/;"	v	file:
s_wParam	src/gui_w48.c	/^static WPARAM		s_wParam = 0;$/;"	v	file:
s_wait_timer	src/gui_w48.c	/^static UINT		s_wait_timer = 0;   \/* Timer for get char from user *\/$/;"	v	file:
s_x_pending	src/gui_w48.c	/^static int		s_x_pending;$/;"	v	file:
s_y_pending	src/gui_w48.c	/^static int		s_y_pending;$/;"	v	file:
safe_vgetc	src/getchar.c	/^safe_vgetc()$/;"	f
sal_to_bool	src/spell.c	/^sal_to_bool(s)$/;"	f	file:
sal_to_bool	src/spell.c	/^static int sal_to_bool __ARGS((char_u *s));$/;"	p	file:	signature:(char_u *s)
salfirst_T	src/spell.c	/^typedef int salfirst_T;$/;"	t	file:
salfirst_T	src/spell.c	/^typedef short salfirst_T;$/;"	t	file:
salitem_S	src/spell.c	/^typedef struct salitem_S$/;"	s	file:
salitem_S::sm_lead	src/spell.c	/^    char_u	*sm_lead;	\/* leading letters *\/$/;"	m	struct:salitem_S	file:	access:public
salitem_S::sm_lead_w	src/spell.c	/^    int		*sm_lead_w;	\/* wide character copy of "sm_lead" *\/$/;"	m	struct:salitem_S	file:	access:public
salitem_S::sm_leadlen	src/spell.c	/^    int		sm_leadlen;	\/* length of "sm_lead" *\/$/;"	m	struct:salitem_S	file:	access:public
salitem_S::sm_oneof	src/spell.c	/^    char_u	*sm_oneof;	\/* letters from () or NULL *\/$/;"	m	struct:salitem_S	file:	access:public
salitem_S::sm_oneof_w	src/spell.c	/^    int		*sm_oneof_w;	\/* wide character copy of "sm_oneof" *\/$/;"	m	struct:salitem_S	file:	access:public
salitem_S::sm_rules	src/spell.c	/^    char_u	*sm_rules;	\/* rules like ^, $, priority *\/$/;"	m	struct:salitem_S	file:	access:public
salitem_S::sm_to	src/spell.c	/^    char_u	*sm_to;		\/* replacement. *\/$/;"	m	struct:salitem_S	file:	access:public
salitem_S::sm_to_w	src/spell.c	/^    int		*sm_to_w;	\/* wide character copy of "sm_to" *\/$/;"	m	struct:salitem_S	file:	access:public
salitem_T	src/spell.c	/^} salitem_T;$/;"	t	typeref:struct:salitem_S	file:
salt	src/blowfish.c	/^    char_u   salt[9];$/;"	m	struct:__anon122	file:	access:public
same_directory	src/misc2.c	/^same_directory(f1, f2)$/;"	f
same_leader	src/ops.c	/^same_leader(lnum, leader1_len, leader1_flags, leader2_len, leader2_flags)$/;"	f	file:
same_leader	src/ops.c	/^static int	same_leader __ARGS((linenr_T lnum, int, char_u *, int, char_u *));$/;"	p	file:	signature:(linenr_T lnum, int, char_u *, int, char_u *)
sample	src/gui_xmdlg.c	/^    Widget	sample;$/;"	m	struct:_SharedFontSelData	file:	access:public
sandbox	src/globals.h	/^EXTERN int	sandbox INIT(= 0);$/;"	v
sandbox_check	src/if_mzsch.c	/^sandbox_check(void)$/;"	f	file:	signature:(void)
sandbox_check	src/if_mzsch.c	/^static void sandbox_check(void);$/;"	p	file:	signature:(void)
sandbox_file_guard	src/if_mzsch.c	/^sandbox_file_guard(int argc UNUSED, Scheme_Object **argv)$/;"	f	file:	signature:(int argc UNUSED, Scheme_Object **argv)
sandbox_file_guard	src/if_mzsch.c	/^static Scheme_Object *sandbox_file_guard(int, Scheme_Object **);$/;"	p	file:	signature:(int, Scheme_Object **)
sandbox_network_guard	src/if_mzsch.c	/^sandbox_network_guard(int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:	signature:(int argc UNUSED, Scheme_Object **argv UNUSED)
sandbox_network_guard	src/if_mzsch.c	/^static Scheme_Object *sandbox_network_guard(int, Scheme_Object **);$/;"	p	file:	signature:(int, Scheme_Object **)
sattr_T	src/vim.h	/^typedef unsigned char sattr_T;$/;"	t
sattr_T	src/vim.h	/^typedef unsigned short sattr_T;$/;"	t
save	src/netbeans.c	/^save(char_u *buf, int len)$/;"	f	file:	signature:(char_u *buf, int len)
saveRedobuff	src/getchar.c	/^saveRedobuff()$/;"	f
save_after	src/regexp.c	/^    regsave_T	save_after;$/;"	m	struct:regbehind_S	file:	access:public
save_behind	src/regexp.c	/^    regsave_T	save_behind;$/;"	m	struct:regbehind_S	file:	access:public
save_cmdline	src/ex_getln.c	/^save_cmdline(ccp)$/;"	f	file:
save_cmdline	src/ex_getln.c	/^static void	save_cmdline __ARGS((struct cmdline_info *ccp));$/;"	p	file:	signature:(struct cmdline_info *ccp)
save_cmdline_alloc	src/ex_getln.c	/^save_cmdline_alloc()$/;"	f
save_curbuf	src/structs.h	/^    buf_T	*save_curbuf;	\/* saved curbuf *\/$/;"	m	struct:__anon57	access:public
save_curwin	src/structs.h	/^    win_T	*save_curwin;	\/* saved curwin *\/$/;"	m	struct:__anon57	access:public
save_dbg_stuff	src/ex_docmd.c	/^save_dbg_stuff(dsp)$/;"	f	file:
save_dbg_stuff	src/ex_docmd.c	/^static void save_dbg_stuff __ARGS((struct dbg_stuff *dsp));$/;"	p	file:	signature:(struct dbg_stuff *dsp)
save_ei	src/structs.h	/^    char_u	*save_ei;		\/* saved value of 'eventignore' *\/$/;"	m	struct:__anon42	access:public
save_end	src/regexp.c	/^    save_se_T   save_end[NSUBEXP];$/;"	m	struct:regbehind_S	file:	access:public
save_file_ff	src/option.c	/^save_file_ff(buf)$/;"	f
save_files	src/integration.c	/^Boolean save_files = True;		\/* When true, save all files before build actions *\/$/;"	v
save_funccal	src/eval.c	/^save_funccal()$/;"	f
save_inputbuf	src/structs.h	/^    char_u		*save_inputbuf;$/;"	m	struct:__anon50	access:public
save_level	src/getchar.c	/^static int save_level = 0;$/;"	v	file:
save_level	src/search.c	/^static int save_level = 0;$/;"	v	file:
save_need_clear_subexpr	src/regexp.c	/^    int		save_need_clear_subexpr;$/;"	m	struct:regbehind_S	file:	access:public
save_ofb_buffer	src/blowfish.c	/^static char_u save_ofb_buffer[BF_OFB_LEN];$/;"	v	file:
save_old_redobuff	src/getchar.c	/^static struct buffheader save_old_redobuff = {{NULL, {NUL}}, NULL, 0, 0};$/;"	v	typeref:struct:buffheader	file:
save_p_ls	src/globals.h	/^EXTERN int  save_p_ls INIT(= -1);	\/* Save 'laststatus' setting *\/$/;"	v
save_p_wmh	src/globals.h	/^EXTERN int  save_p_wmh INIT(= -1);	\/* Save 'winminheight' setting *\/$/;"	v
save_patterns	src/os_unix.c	/^save_patterns(num_pat, pat, num_file, file)$/;"	f	file:
save_patterns	src/os_unix.c	/^static int save_patterns __ARGS((int num_pat, char_u **pat, int *num_file, char_u ***file));$/;"	p	file:	signature:(int num_pat, char_u **pat, int *num_file, char_u ***file)
save_pax	src/blowfish.c	/^static UINT32_T save_pax[18];$/;"	v	file:
save_randbyte_offset	src/blowfish.c	/^static int save_randbyte_offset;$/;"	v	file:
save_re_pat	src/search.c	/^save_re_pat(idx, pat, magic)$/;"	f	file:
save_re_pat	src/search.c	/^static void save_re_pat __ARGS((int idx, char_u *pat, int magic));$/;"	p	file:	signature:(int idx, char_u *pat, int magic)
save_redobuff	src/getchar.c	/^static struct buffheader save_redobuff = {{NULL, {NUL}}, NULL, 0, 0};$/;"	v	typeref:struct:buffheader	file:
save_reply	src/os_mswin.c	/^save_reply(HWND server, char_u *reply, int expr)$/;"	f	file:	signature:(HWND server, char_u *reply, int expr)
save_reply	src/os_mswin.c	/^static int save_reply(HWND server, char_u *reply, int expr);$/;"	p	file:	signature:(HWND server, char_u *reply, int expr)
save_sbx	src/blowfish.c	/^static UINT32_T save_sbx[4][256];$/;"	v	file:
save_se	src/regexp.c	3124;"	d	file:
save_se_T	src/regexp.c	/^} save_se_T;$/;"	t	typeref:struct:__anon101	file:
save_se_multi	src/regexp.c	/^save_se_multi(savep, posp)$/;"	f	file:
save_se_multi	src/regexp.c	/^static void	save_se_multi __ARGS((save_se_T *savep, lpos_T *posp));$/;"	p	file:	signature:(save_se_T *savep, lpos_T *posp)
save_se_one	src/regexp.c	/^save_se_one(savep, pp)$/;"	f	file:
save_se_one	src/regexp.c	/^static void	save_se_one __ARGS((save_se_T *savep, char_u **pp));$/;"	p	file:	signature:(save_se_T *savep, char_u **pp)
save_search_patterns	src/search.c	/^save_search_patterns()$/;"	f
save_start	src/regexp.c	/^    save_se_T   save_start[NSUBEXP];$/;"	m	struct:regbehind_S	file:	access:public
save_stuffbuff	src/structs.h	/^    struct buffheader	save_stuffbuff;$/;"	m	struct:__anon50	typeref:struct:__anon50::buffheader	access:public
save_subexpr	src/regexp.c	/^save_subexpr(bp)$/;"	f	file:
save_subexpr	src/regexp.c	/^static void	save_subexpr __ARGS((regbehind_T *bp));$/;"	p	file:	signature:(regbehind_T *bp)
save_typeahead	src/getchar.c	/^save_typeahead(tp)$/;"	f
save_typebuf	src/getchar.c	/^save_typebuf()$/;"	f
save_typebuf	src/structs.h	/^    typebuf_T		save_typebuf;$/;"	m	struct:__anon50	access:public
save_update_offset	src/blowfish.c	/^static int save_update_offset;$/;"	v	file:
save_window	src/gui_riscos.c	/^int save_window = -1;		\/* Save As window handle *\/$/;"	v
save_yourself	src/os_unix.c	/^    Bool save_yourself;     \/* If we're in the middle of a save_yourself *\/$/;"	m	struct:__anon65	file:	access:public
save_yourself_atom	src/gui_gtk_x11.c	/^static GdkAtom save_yourself_atom = GDK_NONE;$/;"	v	file:
saved	src/gui_mac.c	/^    short saved; \/\/ set this to zero when replying, unused$/;"	m	struct:ModificationInfo	file:	access:public
saved_crypt_method	src/misc2.c	/^static int saved_crypt_method;$/;"	v	file:
saved_cursor	src/globals.h	/^EXTERN pos_T	saved_cursor		\/* w_cursor before formatting text. *\/$/;"	v
saved_emsg_silent	src/structs.h	/^    int		saved_emsg_silent;	\/* saved value of "emsg_silent" *\/$/;"	m	struct:eslist_elem	access:public
saved_gpath	src/testdir/test49.vim	/^	let saved_gpath = &g:path$/;"	v
saved_keys	src/misc2.c	/^static ulg saved_keys[3];$/;"	v	file:
saved_last_idx	src/search.c	/^static int	    saved_last_idx = 0;$/;"	v	file:
saved_lpath	src/testdir/test49.vim	/^	let saved_lpath = &l:path$/;"	v
saved_no_hlsearch	src/search.c	/^static int	    saved_no_hlsearch = 0;$/;"	v	file:
saved_python_thread	src/if_python.c	/^static PyThreadState *saved_python_thread = NULL;$/;"	v	file:
saved_spats	src/search.c	/^static struct spat  saved_spats[2];$/;"	v	typeref:struct:spat	file:
saved_typebuf	src/getchar.c	/^static typebuf_T saved_typebuf[NSCRIPT];$/;"	v	file:
sb_attr	src/message.c	/^    int		sb_attr;	\/* text attributes *\/$/;"	m	struct:msgchunk_S	file:	access:public
sb_data	src/spell.c	/^    char_u	sb_data[1];	\/* data, actually longer *\/$/;"	m	struct:sblock_S	file:	access:public
sb_eol	src/message.c	/^    char	sb_eol;		\/* TRUE when line ends after this text *\/$/;"	m	struct:msgchunk_S	file:	access:public
sb_msg_col	src/message.c	/^    int		sb_msg_col;	\/* column in which text starts *\/$/;"	m	struct:msgchunk_S	file:	access:public
sb_next	src/message.c	/^    msgchunk_T	*sb_next;$/;"	m	struct:msgchunk_S	file:	access:public
sb_next	src/spell.c	/^    sblock_T	*sb_next;	\/* next block in list *\/$/;"	m	struct:sblock_S	file:	access:public
sb_prev	src/message.c	/^    msgchunk_T	*sb_prev;$/;"	m	struct:msgchunk_S	file:	access:public
sb_text	src/message.c	/^    char_u	sb_text[1];	\/* text to be displayed, actually longer *\/$/;"	m	struct:msgchunk_S	file:	access:public
sb_used	src/spell.c	/^    int		sb_used;	\/* nr of bytes already in use *\/$/;"	m	struct:sblock_S	file:	access:public
sbi	src/blowfish.c	/^static UINT32_T sbi[4][256] = {$/;"	v	file:
sblock_S	src/spell.c	/^struct sblock_S$/;"	s	file:
sblock_S::sb_data	src/spell.c	/^    char_u	sb_data[1];	\/* data, actually longer *\/$/;"	m	struct:sblock_S	file:	access:public
sblock_S::sb_next	src/spell.c	/^    sblock_T	*sb_next;	\/* next block in list *\/$/;"	m	struct:sblock_S	file:	access:public
sblock_S::sb_used	src/spell.c	/^    int		sb_used;	\/* nr of bytes already in use *\/$/;"	m	struct:sblock_S	file:	access:public
sblock_T	src/spell.c	/^typedef struct sblock_S sblock_T;$/;"	t	typeref:struct:sblock_S	file:
sbx	src/blowfish.c	/^static UINT32_T sbx[4][256];$/;"	v	file:
sc_charsets	src/hardcopy.c	/^static struct prt_ps_charset_S sc_charsets[] =$/;"	v	typeref:struct:prt_ps_charset_S	file:
sc_col	src/globals.h	/^EXTERN int	sc_col;		\/* column for shown command *\/$/;"	v
sc_encodings	src/hardcopy.c	/^static struct prt_ps_encoding_S sc_encodings[] =$/;"	v	typeref:struct:prt_ps_encoding_S	file:
scancode	src/os_msdos.c	/^    char_u	scancode;$/;"	m	struct:__anon81	file:	access:public
schar_T	src/vim.h	/^typedef char_u schar_T;$/;"	t
scheme_add_global	src/if_mzsch.c	354;"	d	file:
scheme_add_global_symbol	src/if_mzsch.c	355;"	d	file:
scheme_apply	src/if_mzsch.c	356;"	d	file:
scheme_basic_env	src/if_mzsch.c	357;"	d	file:
scheme_builtin_value	src/if_mzsch.c	358;"	d	file:
scheme_byte_string_to_char_string	src/if_mzsch.c	360;"	d	file:
scheme_byte_string_to_char_string	src/if_mzsch.h	47;"	d
scheme_char_string_to_byte_string	src/if_mzsch.c	422;"	d	file:
scheme_char_string_to_path	src/if_mzsch.c	424;"	d	file:
scheme_check_threads	src/if_mzsch.c	362;"	d	file:
scheme_close_input_port	src/if_mzsch.c	363;"	d	file:
scheme_config	src/if_mzsch.h	24;"	d
scheme_console_output	src/if_mzsch.c	347;"	d	file:
scheme_console_printf	src/if_mzsch.c	346;"	d	file:
scheme_count_lines	src/if_mzsch.c	364;"	d	file:
scheme_current_config	src/if_mzsch.c	421;"	d	file:
scheme_current_continuation_marks	src/if_mzsch.c	365;"	d	file:
scheme_current_thread	src/if_mzsch.c	345;"	d	file:
scheme_display	src/if_mzsch.c	367;"	d	file:
scheme_display_to_string	src/if_mzsch.c	368;"	d	file:
scheme_do_eval	src/if_mzsch.c	369;"	d	file:
scheme_dont_gc_ptr	src/if_mzsch.c	370;"	d	file:
scheme_eof	src/if_mzsch.c	338;"	d	file:
scheme_eq	src/if_mzsch.c	371;"	d	file:
scheme_eval	src/if_mzsch.c	372;"	d	file:
scheme_eval_string	src/if_mzsch.c	373;"	d	file:
scheme_eval_string_all	src/if_mzsch.c	374;"	d	file:
scheme_false	src/if_mzsch.c	339;"	d	file:
scheme_finish_primitive_module	src/if_mzsch.c	375;"	d	file:
scheme_format	src/if_mzsch.c	377;"	d	file:
scheme_format	src/if_mzsch.h	37;"	d
scheme_format	src/if_mzsch.h	39;"	d
scheme_format_utf8	src/if_mzsch.c	379;"	d	file:
scheme_gc_ptr_ok	src/if_mzsch.c	381;"	d	file:
scheme_get_param	src/if_mzsch.c	387;"	d	file:
scheme_get_sized_byte_string_output	src/if_mzsch.c	385;"	d	file:
scheme_get_sized_string_output	src/if_mzsch.c	383;"	d	file:
scheme_get_sized_string_output	src/if_mzsch.h	27;"	d
scheme_hash_get	src/if_mzsch.c	429;"	d	file:
scheme_hash_set	src/if_mzsch.c	428;"	d	file:
scheme_intern_symbol	src/if_mzsch.c	389;"	d	file:
scheme_lookup_global	src/if_mzsch.c	390;"	d	file:
scheme_make_byte_string	src/if_mzsch.c	399;"	d	file:
scheme_make_byte_string_output_port	src/if_mzsch.c	400;"	d	file:
scheme_make_closed_prim_w_arity	src/if_mzsch.c	391;"	d	file:
scheme_make_double	src/if_mzsch.c	430;"	d	file:
scheme_make_hash_table	src/if_mzsch.c	427;"	d	file:
scheme_make_integer_value	src/if_mzsch.c	392;"	d	file:
scheme_make_pair	src/if_mzsch.c	393;"	d	file:
scheme_make_prim_w_arity	src/if_mzsch.c	394;"	d	file:
scheme_make_sized_byte_string	src/if_mzsch.c	432;"	d	file:
scheme_make_sized_string	src/if_mzsch.h	29;"	d
scheme_make_string	src/if_mzsch.c	396;"	d	file:
scheme_make_string	src/if_mzsch.h	25;"	d
scheme_make_string_output_port	src/if_mzsch.c	397;"	d	file:
scheme_make_string_output_port	src/if_mzsch.h	26;"	d
scheme_make_struct_instance	src/if_mzsch.c	403;"	d	file:
scheme_make_struct_names	src/if_mzsch.c	404;"	d	file:
scheme_make_struct_type	src/if_mzsch.c	405;"	d	file:
scheme_make_struct_values	src/if_mzsch.c	406;"	d	file:
scheme_make_type	src/if_mzsch.c	407;"	d	file:
scheme_make_vector	src/if_mzsch.c	408;"	d	file:
scheme_malloc_fail_ok	src/if_mzsch.c	409;"	d	file:
scheme_namespace_require	src/if_mzsch.c	433;"	d	file:
scheme_notify_multithread	src/if_mzsch.c	348;"	d	file:
scheme_null	src/if_mzsch.c	341;"	d	file:
scheme_open_input_file	src/if_mzsch.c	410;"	d	file:
scheme_primitive_module	src/if_mzsch.c	411;"	d	file:
scheme_proper_list_length	src/if_mzsch.c	412;"	d	file:
scheme_raise	src/if_mzsch.c	413;"	d	file:
scheme_read	src/if_mzsch.c	414;"	d	file:
scheme_register_static	src/if_mzsch.c	415;"	d	file:
scheme_set_param	src/if_mzsch.c	420;"	d	file:
scheme_set_stack_base	src/if_mzsch.c	416;"	d	file:
scheme_signal_error	src/if_mzsch.c	417;"	d	file:
scheme_true	src/if_mzsch.c	342;"	d	file:
scheme_void	src/if_mzsch.c	340;"	d	file:
scheme_write_string	src/if_mzsch.h	28;"	d
scheme_wrong_type	src/if_mzsch.c	418;"	d	file:
scid_T	src/structs.h	/^typedef int			scid_T;		\/* script ID *\/$/;"	t
scl_list	src/syntax.c	/^    short	    *scl_list;	    \/* IDs in this syntax cluster *\/$/;"	m	struct:syn_cluster_S	file:	access:public
scl_name	src/syntax.c	/^    char_u	    *scl_name;	    \/* syntax cluster name *\/$/;"	m	struct:syn_cluster_S	file:	access:public
scl_name_u	src/syntax.c	/^    char_u	    *scl_name_u;    \/* uppercase of scl_name *\/$/;"	m	struct:syn_cluster_S	file:	access:public
score	src/spell.c	/^    int		score;$/;"	m	struct:__anon18	file:	access:public
score_combine	src/spell.c	/^score_combine(su)$/;"	f	file:
score_combine	src/spell.c	/^static void score_combine __ARGS((suginfo_T *su));$/;"	p	file:	signature:(suginfo_T *su)
score_comp_sal	src/spell.c	/^score_comp_sal(su)$/;"	f	file:
score_comp_sal	src/spell.c	/^static void score_comp_sal __ARGS((suginfo_T *su));$/;"	p	file:	signature:(suginfo_T *su)
score_wordcount_adj	src/spell.c	/^score_wordcount_adj(slang, score, word, split)$/;"	f	file:
score_wordcount_adj	src/spell.c	/^static int score_wordcount_adj __ARGS((slang_T *slang, int score, char_u *word, int split));$/;"	p	file:	signature:(slang_T *slang, int score, char_u *word, int split)
screen_Columns	src/globals.h	/^EXTERN int	screen_Columns INIT(= 0);   \/* actual size of ScreenLines[] *\/$/;"	v
screen_Rows	src/globals.h	/^EXTERN int	screen_Rows INIT(= 0);	    \/* actual size of ScreenLines[] *\/$/;"	v
screen_attr	src/screen.c	/^static int	screen_attr = 0;$/;"	v	file:
screen_char	src/screen.c	/^screen_char(off, row, col)$/;"	f	file:
screen_char	src/screen.c	/^static void screen_char __ARGS((unsigned off, int row, int col));$/;"	p	file:	signature:(unsigned off, int row, int col)
screen_char_2	src/screen.c	/^screen_char_2(off, row, col)$/;"	f	file:
screen_char_2	src/screen.c	/^static void screen_char_2 __ARGS((unsigned off, int row, int col));$/;"	p	file:	signature:(unsigned off, int row, int col)
screen_char_attr	src/screen.c	/^static int screen_char_attr = 0;$/;"	v	file:
screen_cleared	src/globals.h	/^EXTERN int	screen_cleared INIT(= FALSE);	\/* screen has been cleared *\/$/;"	v
screen_comp_differs	src/screen.c	/^screen_comp_differs(off, u8cc)$/;"	f	file:
screen_comp_differs	src/screen.c	/^static int screen_comp_differs __ARGS((int, int*));$/;"	p	file:	signature:(int, int*)
screen_cur_col	src/screen.c	/^static int	screen_cur_row, screen_cur_col;	\/* last known cursor position *\/$/;"	v	file:
screen_cur_row	src/screen.c	/^static int	screen_cur_row, screen_cur_col;	\/* last known cursor position *\/$/;"	v	file:
screen_del_lines	src/screen.c	/^screen_del_lines(off, row, line_count, end, force, wp)$/;"	f
screen_draw_rectangle	src/screen.c	/^screen_draw_rectangle(row, col, height, width, invert)$/;"	f
screen_fill	src/screen.c	/^screen_fill(start_row, end_row, start_col, end_col, c1, c2, attr)$/;"	f
screen_getbytes	src/screen.c	/^screen_getbytes(row, col, bytes, attrp)$/;"	f
screen_height	src/gui_beval.h	/^    Dimension		screen_height;	\/* screen height in pixels *\/$/;"	m	struct:BalloonEvalStruct	access:public
screen_ins_lines	src/screen.c	/^screen_ins_lines(off, row, line_count, end, wp)$/;"	f
screen_line	src/screen.c	/^screen_line(row, coloff, endcol, clear_width$/;"	f	file:
screen_line	src/screen.c	/^static void screen_line __ARGS((int row, int coloff, int endcol, int clear_width));$/;"	p	file:	signature:(int row, int coloff, int endcol, int clear_width)
screen_line	src/screen.c	/^static void screen_line __ARGS((int row, int coloff, int endcol, int clear_width, int rlflag));$/;"	p	file:	signature:(int row, int coloff, int endcol, int clear_width, int rlflag)
screen_putchar	src/screen.c	/^screen_putchar(c, row, col, attr)$/;"	f
screen_puts	src/screen.c	/^screen_puts(text, row, col, attr)$/;"	f
screen_puts_len	src/screen.c	/^screen_puts_len(text, len, row, col, attr)$/;"	f
screen_puts_mbyte	src/message.c	/^screen_puts_mbyte(s, l, attr)$/;"	f	file:
screen_puts_mbyte	src/message.c	/^static char_u *screen_puts_mbyte __ARGS((char_u *s, int l, int attr));$/;"	p	file:	signature:(char_u *s, int l, int attr)
screen_start	src/screen.c	/^screen_start()$/;"	f
screen_start_highlight	src/screen.c	/^screen_start_highlight(attr)$/;"	f	file:
screen_start_highlight	src/screen.c	/^static void screen_start_highlight __ARGS((int attr));$/;"	p	file:	signature:(int attr)
screen_stop_highlight	src/screen.c	/^screen_stop_highlight()$/;"	f
screen_valid	src/screen.c	/^screen_valid(clear)$/;"	f
screen_width	src/gui_beval.h	/^    Dimension		screen_width;	\/* screen width in pixels *\/$/;"	m	struct:BalloonEvalStruct	access:public
screenalloc	src/screen.c	/^screenalloc(clear)$/;"	f
screenclear	src/screen.c	/^screenclear()$/;"	f
screenclear2	src/screen.c	/^screenclear2()$/;"	f	file:
screenclear2	src/screen.c	/^static void screenclear2 __ARGS((void));$/;"	p	file:	signature:(void)
scriptC	src/testdir/test49.vim	/^let scriptC = MakeScript("C")			" X: 1 + 4 + 8$/;"	v
scriptException	src/testdir/test49.vim	/^let scriptException  = MakeScript("FuncException")$/;"	v
scriptF	src/testdir/test49.vim	/^    let scriptF = MakeScript("F")$/;"	v
scriptF	src/testdir/test49.vim	/^let scriptF = MakeScript("F")			" X: 1 + 2 + 8 + 32$/;"	v
scriptF	src/testdir/test49.vim	/^let scriptF = MakeScript("F", scriptG)$/;"	v
scriptG	src/testdir/test49.vim	/^let scriptG = MakeScript("G", scriptF)		" X: 128 + 512 + 1024$/;"	v
scriptG	src/testdir/test49.vim	/^let scriptG = MakeScript("G", scriptT)$/;"	v
scriptH	src/testdir/test49.vim	/^let scriptH = MakeScript("H", scriptG)		" X: 4096 + 8192 + 16384$/;"	v
scriptID	src/fileio.c	/^    scid_T	    scriptID;		\/* script ID where defined *\/$/;"	m	struct:AutoCmd	file:	access:public
scriptID	src/option.c	/^    scid_T	scriptID;	\/* script in which the option was last set *\/$/;"	m	struct:vimoption	file:	access:public
scriptT	src/testdir/test49.vim	/^let scriptT = MakeScript("T")$/;"	v
scriptT1	src/testdir/test49.vim	/^let scriptT1 = MakeScript("T1")			" X: 16 + 64 + 16*16 + 64*16$/;"	v
scriptT2	src/testdir/test49.vim	/^let scriptT2 = MakeScript("T2", scriptT1)	" X: 4096 + 16384$/;"	v
scriptThrowPoint	src/testdir/test49.vim	/^let scriptThrowPoint = MakeScript("FuncThrowpoint")$/;"	v
script_autoload	src/eval.c	/^script_autoload(name, reload)$/;"	f	file:
script_autoload	src/eval.c	/^static int script_autoload __ARGS((char_u *name, int reload));$/;"	p	file:	signature:(char_u *name, int reload)
script_do_profile	src/ex_cmds2.c	/^script_do_profile(si)$/;"	f	file:
script_do_profile	src/ex_cmds2.c	/^static void script_do_profile __ARGS((scriptitem_T *si));$/;"	p	file:	signature:(scriptitem_T *si)
script_dump_profile	src/ex_cmds2.c	/^script_dump_profile(fd)$/;"	f	file:
script_dump_profile	src/ex_cmds2.c	/^static void script_dump_profile __ARGS((FILE *fd));$/;"	p	file:	signature:(FILE *fd)
script_get	src/ex_getln.c	/^script_get(eap, cmd)$/;"	f
script_items	src/ex_cmds2.c	/^static garray_T script_items = {0, 0, sizeof(scriptitem_T), 4, NULL};$/;"	v	file:
script_line_end	src/ex_cmds2.c	/^script_line_end()$/;"	f
script_line_exec	src/ex_cmds2.c	/^script_line_exec()$/;"	f
script_line_start	src/ex_cmds2.c	/^script_line_start()$/;"	f
script_prof_restore	src/ex_cmds2.c	/^script_prof_restore(tm)$/;"	f
script_prof_save	src/ex_cmds2.c	/^script_prof_save(tm)$/;"	f
scriptin	src/globals.h	/^EXTERN FILE	*scriptin[NSCRIPT];	    \/* streams to read script from *\/$/;"	v
scriptitem_S	src/ex_cmds2.c	/^typedef struct scriptitem_S$/;"	s	file:
scriptitem_S::sn_dev	src/ex_cmds2.c	/^    dev_t	sn_dev;$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_dev_valid	src/ex_cmds2.c	/^    int		sn_dev_valid;$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_ino	src/ex_cmds2.c	/^    ino_t	sn_ino;$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_name	src/ex_cmds2.c	/^    char_u	*sn_name;$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_pr_child	src/ex_cmds2.c	/^    proftime_T	sn_pr_child;	\/* time set when going into first child *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_pr_children	src/ex_cmds2.c	/^    proftime_T	sn_pr_children; \/* time in children after script start *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_pr_count	src/ex_cmds2.c	/^    int		sn_pr_count;	\/* nr of times sourced *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_pr_force	src/ex_cmds2.c	/^    int		sn_pr_force;	\/* forceit: profile functions in this script *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_pr_nest	src/ex_cmds2.c	/^    int		sn_pr_nest;	\/* nesting for sn_pr_child *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_pr_self	src/ex_cmds2.c	/^    proftime_T	sn_pr_self;	\/* time spent in script itself *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_pr_start	src/ex_cmds2.c	/^    proftime_T	sn_pr_start;	\/* time at script start *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_pr_total	src/ex_cmds2.c	/^    proftime_T	sn_pr_total;	\/* time spent in script + children *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_prl_children	src/ex_cmds2.c	/^    proftime_T	sn_prl_children; \/* time spent in children for this line *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_prl_execed	src/ex_cmds2.c	/^    int		sn_prl_execed;	\/* line being timed was executed *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_prl_ga	src/ex_cmds2.c	/^    garray_T	sn_prl_ga;	\/* things stored for every line *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_prl_idx	src/ex_cmds2.c	/^    int		sn_prl_idx;	\/* index of line being timed; -1 if none *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_prl_start	src/ex_cmds2.c	/^    proftime_T	sn_prl_start;	\/* start time for current line *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_prl_wait	src/ex_cmds2.c	/^    proftime_T	sn_prl_wait;	\/* wait start time for current line *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_S::sn_prof_on	src/ex_cmds2.c	/^    int		sn_prof_on;	\/* TRUE when script is\/was profiled *\/$/;"	m	struct:scriptitem_S	file:	access:public
scriptitem_T	src/ex_cmds2.c	/^} scriptitem_T;$/;"	t	typeref:struct:scriptitem_S	file:
scriptnames_slash_adjust	src/ex_cmds2.c	/^scriptnames_slash_adjust()$/;"	f
scriptout	src/globals.h	/^EXTERN FILE	*scriptout  INIT(= NULL);   \/* stream to write script to *\/$/;"	v
scriptvar_T	src/eval.c	/^} scriptvar_T;$/;"	t	typeref:struct:__anon139	file:
scroll	src/os_win32.c	/^scroll(unsigned cLines)$/;"	f	file:	signature:(unsigned cLines)
scroll	src/os_win32.c	/^static void scroll(unsigned cLines);$/;"	p	file:	signature:(unsigned cLines)
scrollProc	src/gui_at_sb.h	/^    XtCallbackList scrollProc;	\/* proportional scroll *\/$/;"	m	struct:__anon31	access:public
scroll_bg_pixel	src/gui.h	/^    guicolor_T	scroll_bg_pixel;	\/* Same in Pixel format *\/$/;"	m	struct:Gui	access:public
scroll_cb	src/gui_motif.c	/^scroll_cb(w, client_data, call_data)$/;"	f	file:
scroll_cb	src/gui_motif.c	/^static void scroll_cb __ARGS((Widget w, XtPointer client_data, XtPointer call_data));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XtPointer call_data)
scroll_cursor_bot	src/move.c	/^scroll_cursor_bot(min_scroll, set_topbot)$/;"	f
scroll_cursor_halfway	src/move.c	/^scroll_cursor_halfway(atend)$/;"	f
scroll_cursor_top	src/move.c	/^scroll_cursor_top(min_scroll, always)$/;"	f
scroll_def_bg_pixel	src/gui.h	/^    guicolor_T	scroll_def_bg_pixel;  \/* Default scrollbar background *\/$/;"	m	struct:Gui	access:public
scroll_def_fg_pixel	src/gui.h	/^    guicolor_T	scroll_def_fg_pixel;  \/* Default scrollbar foreground *\/$/;"	m	struct:Gui	access:public
scroll_event	src/gui_gtk_x11.c	/^scroll_event(GtkWidget *widget,$/;"	f	file:	signature:(GtkWidget *widget, GdkEventScroll *event, gpointer data UNUSED)
scroll_fg_pixel	src/gui.h	/^    guicolor_T	scroll_fg_pixel;	\/* Same in Pixel format *\/$/;"	m	struct:Gui	access:public
scroll_line_len	src/gui.c	/^scroll_line_len(lnum)$/;"	f	file:
scroll_line_len	src/gui.c	/^static colnr_T scroll_line_len __ARGS((linenr_T lnum));$/;"	p	file:	signature:(linenr_T lnum)
scroll_mode	src/gui_at_sb.h	/^    char	  scroll_mode;	\/* see below *\/$/;"	m	struct:__anon31	access:public
scroll_off	src/gui_at_sb.h	/^    float	  scroll_off;	\/* offset from event to top of thumb *\/$/;"	m	struct:__anon31	access:public
scroll_redraw	src/normal.c	/^scroll_redraw(up, count)$/;"	f
scroll_region	src/globals.h	/^EXTERN int	scroll_region INIT(= FALSE); \/* term supports scroll region *\/$/;"	v
scroll_region_bot	src/gui.h	/^    int		scroll_region_bot;  \/* Bottom (last) line of scroll region *\/$/;"	m	struct:Gui	access:public
scroll_region_left	src/gui.h	/^    int		scroll_region_left;  \/* Left (first) column of scroll region *\/$/;"	m	struct:Gui	access:public
scroll_region_reset	src/term.c	/^scroll_region_reset()$/;"	f
scroll_region_right	src/gui.h	/^    int		scroll_region_right;  \/* Right (last) col. of scroll region *\/$/;"	m	struct:Gui	access:public
scroll_region_set	src/term.c	/^scroll_region_set(wp, off)$/;"	f
scroll_region_top	src/gui.h	/^    int		scroll_region_top;  \/* Top (first) line of scroll region *\/$/;"	m	struct:Gui	access:public
scroll_shift	src/gui.h	/^    int		scroll_shift;	\/* The scrollbar stuff can handle only up to$/;"	m	struct:GuiScrollbar	access:public
scroll_start	src/term.c	/^scroll_start()$/;"	f
scroll_to	src/gui_riscos.c	/^scroll_to(line, sb)$/;"	f
scrollbar	src/gui_at_sb.h	/^    ScrollbarPart	scrollbar;$/;"	m	struct:_ScrollbarRec	access:public
scrollbar_T	src/gui.h	/^} scrollbar_T;$/;"	t	typeref:struct:GuiScrollbar
scrollbar_class	src/gui_at_sb.h	/^    ScrollbarClassPart		scrollbar_class;$/;"	m	struct:_ScrollbarClassRec	access:public
scrollbar_height	src/gui.h	/^    int		scrollbar_height;   \/* Height of horizontal scrollbar *\/$/;"	m	struct:Gui	access:public
scrollbar_value	src/globals.h	/^EXTERN long_u	scrollbar_value;$/;"	v
scrollbar_width	src/gui.h	/^    int		scrollbar_width;    \/* Width of vertical scrollbars *\/$/;"	m	struct:Gui	access:public
scrolldown	src/move.c	/^scrolldown(line_count, byfold)$/;"	f
scrolldown_clamp	src/move.c	/^scrolldown_clamp()$/;"	f
scrolljump_value	src/move.c	/^scrolljump_value()$/;"	f	file:
scrolljump_value	src/move.c	/^static int scrolljump_value __ARGS((void));$/;"	p	file:	signature:(void)
scrollup	src/move.c	/^scrollup(line_count, byfold)$/;"	f
scrollup_clamp	src/move.c	/^scrollup_clamp()$/;"	f
sd	src/integration.c	/^static int sd = -1;$/;"	v	file:
se_u	src/regexp.c	/^    } se_u;$/;"	m	struct:__anon101	typeref:union:__anon101::__anon102	file:	access:public
search_cmn	src/eval.c	/^search_cmn(argvars, match_pos, flagsp)$/;"	f	file:
search_cmn	src/eval.c	/^static int search_cmn __ARGS((typval_T *argvars, pos_T *match_pos, int *flagsp));$/;"	p	file:	signature:(typval_T *argvars, pos_T *match_pos, int *flagsp)
search_for_exact_line	src/search.c	/^search_for_exact_line(buf, pos, dir, pat)$/;"	f
search_hl	src/screen.c	/^static match_T search_hl;	\/* used for 'hlsearch' highlight matching *\/$/;"	v	file:
search_match_endcol	src/globals.h	/^EXTERN colnr_T	search_match_endcol;		\/* col nr of match end *\/$/;"	v
search_match_lines	src/globals.h	/^EXTERN linenr_T	search_match_lines;		\/* lines of of matched string *\/$/;"	v
search_regcomp	src/search.c	/^search_regcomp(pat, pat_save, pat_use, options, regmatch)$/;"	f
searchbuf	src/structs.h	/^    char_u	*searchbuf;	\/* return: pointer to search pattern or NULL *\/$/;"	m	struct:cmdarg_S	access:public
searchc	src/search.c	/^searchc(cap, t_cmd)$/;"	f
searchcmdlen	src/globals.h	/^EXTERN int	searchcmdlen;		    \/* length of previous search cmd *\/$/;"	v
searchit	src/search.c	/^searchit(win, buf, pos, dir, pat, count, options, pat_use, stop_lnum, tm)$/;"	f
searchpair_cmn	src/eval.c	/^searchpair_cmn(argvars, match_pos)$/;"	f	file:
searchpair_cmn	src/eval.c	/^static int searchpair_cmn __ARGS((typval_T *argvars, pos_T *match_pos));$/;"	p	file:	signature:(typval_T *argvars, pos_T *match_pos)
searchpath	src/GvimExt/gvimext.cpp	/^searchpath(char *name)$/;"	f	file:	signature:(char *name)
searchpath	src/GvimExt/gvimext.cpp	/^static char *searchpath(char *name);$/;"	p	file:	signature:(char *name)
searchpath	src/dosinst.h	/^char *searchpath(char *name);$/;"	p	signature:(char *name)
searchpath	src/dosinst.h	/^searchpath(char *name)$/;"	f	signature:(char *name)
searchpath_save	src/dosinst.h	/^searchpath_save(char *name)$/;"	f	signature:(char *name)
searchsyn	runtime/ftplugin/ruby.vim	/^function! s:searchsyn(pattern,syn,flags,mode)$/;"	f
secure	src/globals.h	/^EXTERN int	secure INIT(= FALSE);$/;"	v
sed_delimiter	runtime/syntax/sed.vim	/^    let __sed_delimiter = escape(nr2char(__sed_i), __sed_metacharacters)$/;"	v
sed_i	runtime/syntax/sed.vim	/^	let __sed_i = __sed_i + 1$/;"	v
sed_i	runtime/syntax/sed.vim	/^    let __sed_i = __sed_i + 1$/;"	v
sed_i	runtime/syntax/sed.vim	/^    let __sed_i = char2nr(" ") " ASCII: 32, EBCDIC: 64$/;"	v
sed_i	runtime/syntax/sed.vim	/^let __sed_i = char2nr(" ") " ASCII: 32, EBCDIC: 64$/;"	v
sed_last	runtime/syntax/sed.vim	/^    let __sed_last = 126$/;"	v
sed_last	runtime/syntax/sed.vim	/^    let __sed_last = 255$/;"	v
sed_metacharacters	runtime/syntax/sed.vim	/^let __sed_metacharacters = '$*.\\^[~'$/;"	v
see_opt	runtime/doc/makehtml.awk	/^function see_opt() {$/;"	f
see_tag	runtime/doc/makehtml.awk	/^function see_tag() {$/;"	f
seen_b_u_curhead	src/undo.c	/^static int seen_b_u_curhead;$/;"	v	file:
seen_b_u_newhead	src/undo.c	/^static int seen_b_u_newhead;$/;"	v	file:
sel	src/gui_xmdlg.c	/^    String	sel[NONE];	\/* selection category *\/$/;"	m	struct:_SharedFontSelData	file:	access:public
selFile	src/gui_at_fs.c	/^static Widget	selFile,$/;"	v	file:
selFileCancel	src/gui_at_fs.c	/^		selFileCancel,$/;"	v	file:
selFileField	src/gui_at_fs.c	/^		selFileField,$/;"	v	file:
selFileForm	src/gui_at_fs.c	/^		selFileForm,$/;"	v	file:
selFileHScroll	src/gui_at_fs.c	/^		selFileHScroll,$/;"	v	file:
selFileHScrolls	src/gui_at_fs.c	/^		selFileHScrolls[3],$/;"	v	file:
selFileLists	src/gui_at_fs.c	/^		selFileLists[3],$/;"	v	file:
selFileOK	src/gui_at_fs.c	/^		selFileOK,$/;"	v	file:
selFilePrompt	src/gui_at_fs.c	/^		selFilePrompt,$/;"	v	file:
selFileVScrolls	src/gui_at_fs.c	/^		selFileVScrolls[3];$/;"	v	file:
sel_atom	src/vim.h	/^    Atom	sel_atom;	\/* PRIMARY\/CLIPBOARD selection ID *\/$/;"	m	struct:VimClipboard	access:public
select	src/os_unix.c	/^extern int   select __ARGS((int, fd_set *, fd_set *, fd_set *, struct timeval *));$/;"	p	file:	signature:(int, fd_set *, fd_set *, fd_set *, struct timeval *)
select	src/os_unix.c	29;"	d	file:
select	src/os_unix.c	53;"	d	file:
select	src/os_unix.c	55;"	d	file:
selection_clear_event	src/gui_gtk_x11.c	/^selection_clear_event(GtkWidget		*widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GdkEventSelection *event, gpointer user_data UNUSED)
selection_get_cb	src/gui_gtk_x11.c	/^selection_get_cb(GtkWidget	    *widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GtkSelectionData *selection_data, guint info, guint time_ UNUSED, gpointer user_data UNUSED)
selection_received_cb	src/gui_gtk_x11.c	/^selection_received_cb(GtkWidget		*widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GtkSelectionData *data, guint time_ UNUSED, gpointer user_data UNUSED)
selection_targets	src/gui_gtk_x11.c	/^static const GtkTargetEntry selection_targets[] =$/;"	v	file:
selinux_enabled	src/os_unix.c	/^static int selinux_enabled = -1;$/;"	v	file:
sem_id	src/os_beos.c	22;"	d	file:
sendToVim	runtime/tools/xcmdsrv_client.c	/^char * sendToVim __ARGS((Display *dpy, char *name, char *cmd, int asKeys, int *code));$/;"	p	file:	signature:(Display *dpy, char *name, char *cmd, int asKeys, int *code)
sendToVim	runtime/tools/xcmdsrv_client.c	/^sendToVim(dpy, name, cmd, asKeys, code)$/;"	f
send_tabline_event	src/gui.c	/^send_tabline_event(nr)$/;"	f
send_tabline_menu_event	src/gui.c	/^send_tabline_menu_event(tabidx, event)$/;"	f
sense	src/integration.h	/^	Boolean		sense;$/;"	m	struct:__anon70	access:public
sensitive	src/structs.h	/^    int		sensitive;	    \/* turn button on\/off *\/$/;"	m	struct:VimMenu	access:public
separate_nextcmd	src/ex_docmd.c	/^separate_nextcmd(eap)$/;"	f
seq	src/structs.h	/^	long	   seq;$/;"	m	union:u_header::__anon38	access:public
seq	src/structs.h	/^	long	   seq;$/;"	m	union:u_header::__anon39	access:public
seq	src/structs.h	/^	long	   seq;$/;"	m	union:u_header::__anon40	access:public
seq	src/structs.h	/^	long	   seq;$/;"	m	union:u_header::__anon41	access:public
serial	src/if_xcmdsrv.c	/^    int	    serial;	\/* Serial number expected in result. *\/$/;"	m	struct:PendingCommand	file:	access:public
serialize_header	src/undo.c	/^serialize_header(fp, buf, hash)$/;"	f	file:
serialize_header	src/undo.c	/^static int serialize_header __ARGS((FILE *fp, buf_T *buf, char_u *hash));$/;"	p	file:	signature:(FILE *fp, buf_T *buf, char_u *hash)
serialize_pos	src/undo.c	/^serialize_pos(pos, fp)$/;"	f	file:
serialize_pos	src/undo.c	/^static void serialize_pos __ARGS((pos_T pos, FILE *fp));$/;"	p	file:	signature:(pos_T pos, FILE *fp)
serialize_uep	src/undo.c	/^serialize_uep(fp, buf, uep)$/;"	f	file:
serialize_uep	src/undo.c	/^static int serialize_uep __ARGS((FILE *fp, buf_T *buf, u_entry_T *uep));$/;"	p	file:	signature:(FILE *fp, buf_T *buf, u_entry_T *uep)
serialize_uhp	src/undo.c	/^serialize_uhp(fp, buf, uhp)$/;"	f	file:
serialize_uhp	src/undo.c	/^static int serialize_uhp __ARGS((FILE *fp, buf_T *buf, u_header_T *uhp));$/;"	p	file:	signature:(FILE *fp, buf_T *buf, u_header_T *uhp)
serialize_visualinfo	src/undo.c	/^serialize_visualinfo(info, fp)$/;"	f	file:
serialize_visualinfo	src/undo.c	/^static void serialize_visualinfo __ARGS((visualinfo_T *info, FILE *fp));$/;"	p	file:	signature:(visualinfo_T *info, FILE *fp)
server	src/os_mswin.c	/^    HWND	server;		\/* server window *\/$/;"	m	struct:__anon20	file:	access:public
serverArg	src/main.c	/^    int		serverArg;		\/* TRUE when argument for a server *\/$/;"	m	struct:__anon9	file:	access:public
serverChangeRegisteredWindow	src/if_xcmdsrv.c	/^serverChangeRegisteredWindow(dpy, newwin)$/;"	f
serverConvert	src/main.c	/^serverConvert(client_enc, data, tofree)$/;"	f
serverDelayedStartName	src/globals.h	/^EXTERN char_u	*serverDelayedStartName INIT(= NULL);$/;"	v
serverEventProc	src/if_xcmdsrv.c	/^serverEventProc(dpy, eventPtr)$/;"	f
serverForeground	src/os_mswin.c	/^serverForeground(name)$/;"	f
serverGetReply	src/os_mswin.c	/^serverGetReply(HWND server, int *expr_res, int remove, int wait)$/;"	f	signature:(HWND server, int *expr_res, int remove, int wait)
serverGetVimNames	src/if_xcmdsrv.c	/^serverGetVimNames(dpy)$/;"	f
serverGetVimNames	src/os_mswin.c	/^serverGetVimNames(void)$/;"	f	signature:(void)
serverInitMessaging	src/os_mswin.c	/^serverInitMessaging(void)$/;"	f	signature:(void)
serverMakeName	src/main.c	/^serverMakeName(arg, cmd)$/;"	f	file:
serverMakeName	src/main.c	/^static char_u *serverMakeName __ARGS((char_u *arg, char *cmd));$/;"	p	file:	signature:(char_u *arg, char *cmd)
serverName	src/globals.h	/^EXTERN char_u	*serverName INIT(= NULL);	\/* name of the server *\/$/;"	v
serverName_arg	src/main.c	/^    char_u	*serverName_arg;	\/* cmdline arg for server name *\/$/;"	m	struct:__anon9	file:	access:public
serverPeekReply	src/if_xcmdsrv.c	/^serverPeekReply(dpy, win, str)$/;"	f
serverProcessPendingMessages	src/os_mswin.c	/^serverProcessPendingMessages(void)$/;"	f	signature:(void)
serverReadReply	src/if_xcmdsrv.c	/^serverReadReply(dpy, win, str, localLoop)$/;"	f
serverRegisterName	src/if_xcmdsrv.c	/^serverRegisterName(dpy, name)$/;"	f
serverReply	src/if_xcmdsrv.c	/^static garray_T serverReply = { 0, 0, 0, 0, 0 };$/;"	v	file:
serverSendEnc	src/os_mswin.c	/^serverSendEnc(HWND target)$/;"	f	file:	signature:(HWND target)
serverSendReply	src/if_xcmdsrv.c	/^serverSendReply(name, str)$/;"	f
serverSendReply	src/os_mswin.c	/^serverSendReply(name, reply)$/;"	f
serverSendToVim	src/if_xcmdsrv.c	/^serverSendToVim(dpy, name, cmd,  result, server, asExpr, localLoop, silent)$/;"	f
serverSendToVim	src/os_mswin.c	/^serverSendToVim(name, cmd, result, ptarget, asExpr, silent)$/;"	f
serverSetName	src/os_mswin.c	/^serverSetName(char_u *name)$/;"	f	signature:(char_u *name)
serverStr	src/main.c	/^    char_u	*serverStr;		\/* remote server command *\/$/;"	m	struct:__anon9	file:	access:public
serverStrEnc	src/main.c	/^    char_u	*serverStrEnc;		\/* encoding of serverStr *\/$/;"	m	struct:__anon9	file:	access:public
serverStrToWin	src/if_xcmdsrv.c	/^serverStrToWin(str)$/;"	f
server_id	src/os_mswin.c	/^struct server_id$/;"	s	file:
server_id::hwnd	src/os_mswin.c	/^    HWND hwnd;$/;"	m	struct:server_id	file:	access:public
server_id::name	src/os_mswin.c	/^    char_u *name;$/;"	m	struct:server_id	file:	access:public
server_to_input_buf	src/main.c	/^server_to_input_buf(str)$/;"	f
servername	src/main.c	/^    char_u	*servername;		\/* allocated name for our server *\/$/;"	m	struct:__anon9	file:	access:public
ses_arglist	src/ex_docmd.c	/^ses_arglist(fd, cmd, gap, fullname, flagp)$/;"	f	file:
ses_arglist	src/ex_docmd.c	/^static int ses_arglist __ARGS((FILE *fd, char *cmd, garray_T *gap, int fullname, unsigned *flagp));$/;"	p	file:	signature:(FILE *fd, char *cmd, garray_T *gap, int fullname, unsigned *flagp)
ses_do_frame	src/ex_docmd.c	/^ses_do_frame(fr)$/;"	f	file:
ses_do_frame	src/ex_docmd.c	/^static int ses_do_frame __ARGS((frame_T *fr));$/;"	p	file:	signature:(frame_T *fr)
ses_do_win	src/ex_docmd.c	/^ses_do_win(wp)$/;"	f	file:
ses_do_win	src/ex_docmd.c	/^static int ses_do_win __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
ses_fname	src/ex_docmd.c	/^ses_fname(fd, buf, flagp)$/;"	f	file:
ses_fname	src/ex_docmd.c	/^static int ses_fname __ARGS((FILE *fd, buf_T *buf, unsigned *flagp));$/;"	p	file:	signature:(FILE *fd, buf_T *buf, unsigned *flagp)
ses_put_fname	src/ex_docmd.c	/^ses_put_fname(fd, name, flagp)$/;"	f	file:
ses_put_fname	src/ex_docmd.c	/^static int ses_put_fname __ARGS((FILE *fd, char_u *name, unsigned *flagp));$/;"	p	file:	signature:(FILE *fd, char_u *name, unsigned *flagp)
ses_skipframe	src/ex_docmd.c	/^ses_skipframe(fr)$/;"	f	file:
ses_skipframe	src/ex_docmd.c	/^static frame_T *ses_skipframe __ARGS((frame_T *fr));$/;"	p	file:	signature:(frame_T *fr)
ses_win_rec	src/ex_docmd.c	/^ses_win_rec(fd, fr)$/;"	f	file:
ses_win_rec	src/ex_docmd.c	/^static int ses_win_rec __ARGS((FILE *fd, frame_T *fr));$/;"	p	file:	signature:(FILE *fd, frame_T *fr)
ses_winsizes	src/ex_docmd.c	/^ses_winsizes(fd, restore_size, tab_firstwin)$/;"	f	file:
ses_winsizes	src/ex_docmd.c	/^static int ses_winsizes __ARGS((FILE *fd, int restore_size,$/;"	p	file:	signature:(FILE *fd, int restore_size, win_T *tab_firstwin)
sesave	src/regexp.c	/^	save_se_T  sesave;$/;"	m	union:regitem_S::__anon103	file:	access:public
setDollarVim	src/workshop.c	/^setDollarVim($/;"	f	file:	signature:( char *rundir)
setFoldRepeat	src/fold.c	/^setFoldRepeat(lnum, count, do_open)$/;"	f	file:
setFoldRepeat	src/fold.c	/^static void setFoldRepeat __ARGS((linenr_T lnum, long count, int do_open));$/;"	p	file:	signature:(linenr_T lnum, long count, int do_open)
setManualFold	src/fold.c	/^setManualFold(lnum, opening, recurse, donep)$/;"	f	file:
setManualFold	src/fold.c	/^static linenr_T setManualFold __ARGS((linenr_T lnum, int opening, int recurse, int *donep));$/;"	p	file:	signature:(linenr_T lnum, int opening, int recurse, int *donep)
setManualFoldWin	src/fold.c	/^setManualFoldWin(wp, lnum, opening, recurse, donep)$/;"	f	file:
setManualFoldWin	src/fold.c	/^static linenr_T setManualFoldWin __ARGS((win_T *wp, linenr_T lnum, int opening, int recurse, int *donep));$/;"	p	file:	signature:(win_T *wp, linenr_T lnum, int opening, int recurse, int *donep)
setSmallMaybe	src/fold.c	/^setSmallMaybe(gap)$/;"	f	file:
setSmallMaybe	src/fold.c	/^static void setSmallMaybe __ARGS((garray_T *gap));$/;"	p	file:	signature:(garray_T *gap)
set_alist_count	src/os_win32.c	/^set_alist_count(void)$/;"	f	signature:(void)
set_arglist	src/ex_cmds2.c	/^set_arglist(str)$/;"	f
set_b0_dir_flag	src/memline.c	/^set_b0_dir_flag(b0p, buf)$/;"	f	file:
set_b0_dir_flag	src/memline.c	/^static void set_b0_dir_flag __ARGS((ZERO_BL *b0p, buf_T *buf));$/;"	p	file:	signature:(ZERO_BL *b0p, buf_T *buf)
set_b0_fname	src/memline.c	/^set_b0_fname(b0p, buf)$/;"	f	file:
set_b0_fname	src/memline.c	/^static void set_b0_fname __ARGS((ZERO_BL *, buf_T *buf));$/;"	p	file:	signature:(ZERO_BL *, buf_T *buf)
set_bat_text	src/dosinst.c	/^set_bat_text(int idx, char *batpath, char *name)$/;"	f	file:	signature:(int idx, char *batpath, char *name)
set_bool_option	src/option.c	/^set_bool_option(opt_idx, varp, value, opt_flags)$/;"	f	file:
set_bool_option	src/option.c	/^static char_u *set_bool_option __ARGS((int opt_idx, char_u *varp, int value, int opt_flags));$/;"	p	file:	signature:(int opt_idx, char_u *varp, int value, int opt_flags)
set_buffer_line	src/if_mzsch.c	/^set_buffer_line(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
set_buffer_line	src/if_mzsch.c	/^static Scheme_Object *set_buffer_line(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
set_buffer_line	src/if_ruby.c	/^static VALUE set_buffer_line(buf_T *buf, linenr_T n, VALUE str)$/;"	f	file:	signature:(buf_T *buf, linenr_T n, VALUE str)
set_buffer_line_list	src/if_mzsch.c	/^set_buffer_line_list(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
set_buffer_line_list	src/if_mzsch.c	/^static Scheme_Object *set_buffer_line_list(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
set_buflisted	src/buffer.c	/^set_buflisted(on)$/;"	f
set_chars_option	src/option.c	/^set_chars_option(varp)$/;"	f	file:
set_chars_option	src/option.c	/^static char_u *set_chars_option __ARGS((char_u **varp));$/;"	p	file:	signature:(char_u **varp)
set_cmd_context	src/ex_getln.c	/^set_cmd_context(xp, str, len, col)$/;"	f
set_cmdarg	src/eval.c	/^set_cmdarg(eap, oldarg)$/;"	f
set_cmdline_pos	src/ex_getln.c	/^set_cmdline_pos(pos)$/;"	f
set_cmdspos	src/ex_getln.c	/^set_cmdspos()$/;"	f	file:
set_cmdspos	src/ex_getln.c	/^static void	set_cmdspos __ARGS((void));$/;"	p	file:	signature:(void)
set_cmdspos_cursor	src/ex_getln.c	/^set_cmdspos_cursor()$/;"	f	file:
set_cmdspos_cursor	src/ex_getln.c	/^static void	set_cmdspos_cursor __ARGS((void));$/;"	p	file:	signature:(void)
set_color_count	src/term.c	/^set_color_count(nr)$/;"	f	file:
set_color_count	src/term.c	/^static void set_color_count __ARGS((int nr));$/;"	p	file:	signature:(int nr)
set_completion	src/edit.c	/^set_completion(startcol, list)$/;"	f
set_compression	runtime/autoload/gzip.vim	/^fun s:set_compression(line)$/;"	f
set_context_for_expression	src/eval.c	/^set_context_for_expression(xp, arg, cmdidx)$/;"	f
set_context_in_autocmd	src/fileio.c	/^set_context_in_autocmd(xp, arg, doautocmd)$/;"	f
set_context_in_cscope_cmd	src/if_cscope.c	/^set_context_in_cscope_cmd(xp, arg, cmdidx)$/;"	f
set_context_in_echohl_cmd	src/syntax.c	/^set_context_in_echohl_cmd(xp, arg)$/;"	f
set_context_in_highlight_cmd	src/syntax.c	/^set_context_in_highlight_cmd(xp, arg)$/;"	f
set_context_in_map_cmd	src/getchar.c	/^set_context_in_map_cmd(xp, cmd, arg, forceit, isabbrev, isunmap, cmdidx)$/;"	f
set_context_in_menu_cmd	src/menu.c	/^set_context_in_menu_cmd(xp, cmd, arg, forceit)$/;"	f
set_context_in_profile_cmd	src/ex_cmds2.c	/^set_context_in_profile_cmd(xp, arg)$/;"	f
set_context_in_set_cmd	src/option.c	/^set_context_in_set_cmd(xp, arg, opt_flags)$/;"	f
set_context_in_sign_cmd	src/ex_cmds.c	/^set_context_in_sign_cmd(xp, arg)$/;"	f
set_context_in_syntax_cmd	src/syntax.c	/^set_context_in_syntax_cmd(xp, arg)$/;"	f
set_crypt_method	src/misc2.c	/^set_crypt_method(buf, method)$/;"	f
set_curbuf	src/buffer.c	/^set_curbuf(buf, action)$/;"	f
set_current_line	src/if_ruby.c	/^static VALUE set_current_line(VALUE self UNUSED, VALUE str)$/;"	f	file:	signature:(VALUE self UNUSED, VALUE str)
set_cursor	src/if_mzsch.c	/^set_cursor(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
set_cursor	src/if_mzsch.c	/^static Scheme_Object *set_cursor(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
set_directories_text	src/dosinst.c	/^set_directories_text(int idx)$/;"	f	file:	signature:(int idx)
set_empty_rows	src/move.c	/^set_empty_rows(wp, used)$/;"	f
set_errorlist	src/quickfix.c	/^set_errorlist(wp, list, action, title)$/;"	f
set_expand_context	src/ex_getln.c	/^set_expand_context(xp)$/;"	f	file:
set_expand_context	src/ex_getln.c	/^static void	set_expand_context __ARGS((expand_T *xp));$/;"	p	file:	signature:(expand_T *xp)
set_expr_line	src/ops.c	/^set_expr_line(new_line)$/;"	f
set_file_time	src/fileio.c	/^set_file_time(fname, atime, mtime)$/;"	f	file:
set_file_time	src/fileio.c	/^static void set_file_time __ARGS((char_u *fname, time_t atime, time_t mtime));$/;"	p	file:	signature:(char_u *fname, time_t atime, time_t mtime)
set_fileformat	src/misc2.c	/^set_fileformat(t, opt_flags)$/;"	f
set_fontlist	src/gui_motif.c	/^set_fontlist(id)$/;"	f	file:
set_fontlist	src/gui_motif.c	/^static void set_fontlist __ARGS((Widget wg));$/;"	p	file:	signature:(Widget wg)
set_group_colors	src/syntax.c	/^set_group_colors(name, fgp, bgp, do_menu, use_norm, do_tooltip)$/;"	f	file:
set_group_colors	src/syntax.c	/^static int  set_group_colors __ARGS((char_u *name, guicolor_T *fgp, guicolor_T *bgp, int do_menu, int use_norm, int do_tooltip));$/;"	p	file:	signature:(char_u *name, guicolor_T *fgp, guicolor_T *bgp, int do_menu, int use_norm, int do_tooltip)
set_guifontwide	src/gui.c	/^set_guifontwide(name)$/;"	f	file:
set_guifontwide	src/gui.c	/^static void set_guifontwide __ARGS((char_u *font_name));$/;"	p	file:	signature:(char_u *font_name)
set_helplang_default	src/option.c	/^set_helplang_default(lang)$/;"	f
set_hl_attr	src/syntax.c	/^set_hl_attr(idx)$/;"	f	file:
set_hl_attr	src/syntax.c	/^static void set_hl_attr __ARGS((int idx));$/;"	p	file:	signature:(int idx)
set_iminsert_global	src/option.c	/^set_iminsert_global()$/;"	f
set_imsearch_global	src/option.c	/^set_imsearch_global()$/;"	f
set_indent	src/misc1.c	/^set_indent(size, flags)$/;"	f
set_init_1	src/option.c	/^set_init_1()$/;"	f
set_init_2	src/option.c	/^set_init_2()$/;"	f
set_init_3	src/option.c	/^set_init_3()$/;"	f
set_input_buf	src/ui.c	/^set_input_buf(p)$/;"	f
set_internal_string_var	src/eval.c	/^set_internal_string_var(name, value)$/;"	f
set_interrupts	src/os_msdos.c	/^set_interrupts(int on)$/;"	f	file:	signature:(int on)
set_keep_msg	src/message.c	/^set_keep_msg(s, attr)$/;"	f
set_keep_msg_from_hist	src/message.c	/^set_keep_msg_from_hist()$/;"	f
set_label	src/gui_motif.c	/^set_label(w, label)$/;"	f	file:
set_lang_var	src/ex_cmds2.c	/^set_lang_var()$/;"	f
set_last_cursor	src/mark.c	/^set_last_cursor(win)$/;"	f
set_last_insert	src/edit.c	/^set_last_insert(c)$/;"	f
set_last_search_pat	src/search.c	/^set_last_search_pat(s, idx, magic, setlast)$/;"	f
set_map_str	src/spell.c	/^set_map_str(lp, map)$/;"	f	file:
set_map_str	src/spell.c	/^static void set_map_str __ARGS((slang_T *lp, char_u *map));$/;"	p	file:	signature:(slang_T *lp, char_u *map)
set_mouse_termcode	src/term.c	/^set_mouse_termcode(n, s)$/;"	f
set_mouse_topline	src/term.c	/^set_mouse_topline(wp)$/;"	f
set_normal_colors	src/syntax.c	/^set_normal_colors()$/;"	f
set_num_option	src/option.c	/^set_num_option(opt_idx, varp, value, errbuf, errbuflen, opt_flags)$/;"	f	file:
set_num_option	src/option.c	/^static char_u *set_num_option __ARGS((int opt_idx, char_u *varp, long value, char_u *errbuf, size_t errbuflen, int opt_flags));$/;"	p	file:	signature:(int opt_idx, char_u *varp, long value, char_u *errbuf, size_t errbuflen, int opt_flags)
set_number_default	src/option.c	/^set_number_default(name, val)$/;"	f
set_one_cmd_context	src/ex_docmd.c	/^set_one_cmd_context(xp, buff)$/;"	f
set_op_var	src/normal.c	/^set_op_var(optype)$/;"	f	file:
set_op_var	src/normal.c	/^static void	set_op_var __ARGS((int optype));$/;"	p	file:	signature:(int optype)
set_option	src/if_mzsch.c	/^set_option(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
set_option	src/if_mzsch.c	/^static Scheme_Object *set_option(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
set_option_default	src/option.c	/^set_option_default(opt_idx, opt_flags, compatible)$/;"	f	file:
set_option_default	src/option.c	/^static void set_option_default __ARGS((int, int opt_flags, int compatible));$/;"	p	file:	signature:(int, int opt_flags, int compatible)
set_option_scriptID_idx	src/option.c	/^set_option_scriptID_idx(opt_idx, opt_flags, id)$/;"	f	file:
set_option_scriptID_idx	src/option.c	/^static void set_option_scriptID_idx __ARGS((int opt_idx, int opt_flags, int id));$/;"	p	file:	signature:(int opt_idx, int opt_flags, int id)
set_option_value	src/option.c	/^set_option_value(name, number, string, opt_flags)$/;"	f
set_options_bin	src/option.c	/^set_options_bin(oldval, newval, opt_flags)$/;"	f
set_options_default	src/option.c	/^set_options_default(opt_flags)$/;"	f	file:
set_options_default	src/option.c	/^static void set_options_default __ARGS((int opt_flags));$/;"	p	file:	signature:(int opt_flags)
set_pixmap	src/gui_xmebw.c	/^set_pixmap(XmEnhancedButtonWidget eb)$/;"	f	file:	signature:(XmEnhancedButtonWidget eb)
set_predefined_fontlist	src/gui_motif.c	/^set_predefined_fontlist(parent, name)$/;"	f	file:
set_predefined_label	src/gui_motif.c	/^set_predefined_label(parent, name, new_label)$/;"	f	file:
set_predefined_label	src/gui_motif.c	/^static void set_predefined_label __ARGS((Widget parent, String name, char *new_label));$/;"	p	file:	signature:(Widget parent, String name, char *new_label)
set_printable_label_text	src/gui_beval.c	/^set_printable_label_text(GtkLabel *label, char_u *text)$/;"	f	file:	signature:(GtkLabel *label, char_u *text)
set_qf_ll_list	src/eval.c	/^set_qf_ll_list(wp, list_arg, action_arg, rettv)$/;"	f	file:
set_qf_ll_list	src/eval.c	/^static void set_qf_ll_list __ARGS((win_T *wp, typval_T *list_arg, typval_T *action_arg, typval_T *rettv));$/;"	p	file:	signature:(win_T *wp, typval_T *list_arg, typval_T *action_arg, typval_T *rettv)
set_ref_in_ht	src/eval.c	/^set_ref_in_ht(ht, copyID)$/;"	f	file:
set_ref_in_ht	src/eval.c	/^static void set_ref_in_ht __ARGS((hashtab_T *ht, int copyID));$/;"	p	file:	signature:(hashtab_T *ht, int copyID)
set_ref_in_item	src/eval.c	/^set_ref_in_item(tv, copyID)$/;"	f	file:
set_ref_in_item	src/eval.c	/^static void set_ref_in_item __ARGS((typval_T *tv, int copyID));$/;"	p	file:	signature:(typval_T *tv, int copyID)
set_ref_in_list	src/eval.c	/^set_ref_in_list(l, copyID)$/;"	f	file:
set_ref_in_list	src/eval.c	/^static void set_ref_in_list __ARGS((list_T *l, int copyID));$/;"	p	file:	signature:(list_T *l, int copyID)
set_reg_var	src/eval.c	/^set_reg_var(c)$/;"	f
set_rw_fname	src/fileio.c	/^set_rw_fname(fname, sfname)$/;"	f	file:
set_rw_fname	src/fileio.c	/^static int set_rw_fname __ARGS((char_u *fname, char_u *sfname));$/;"	p	file:	signature:(char_u *fname, char_u *sfname)
set_sal_first	src/spell.c	/^set_sal_first(lp)$/;"	f	file:
set_sal_first	src/spell.c	/^static void set_sal_first __ARGS((slang_T *lp));$/;"	p	file:	signature:(slang_T *lp)
set_scroll_region	src/os_win32.c	/^set_scroll_region($/;"	f	file:	signature:( unsigned left, unsigned top, unsigned right, unsigned bottom)
set_scroll_region	src/os_win32.c	/^static void set_scroll_region(unsigned left, unsigned top,$/;"	p	file:	signature:(unsigned left, unsigned top, unsigned right, unsigned bottom)
set_search_direction	src/search.c	/^set_search_direction(cdir)$/;"	f
set_shellsize	src/term.c	/^set_shellsize(width, height, mustset)$/;"	f
set_signals	src/os_unix.c	/^set_signals()$/;"	f	file:
set_signals	src/os_unix.c	/^static void set_signals __ARGS((void));$/;"	p	file:	signature:(void)
set_size	src/gui_xmebw.c	/^set_size(XmEnhancedButtonWidget newtb)$/;"	f	file:	signature:(XmEnhancedButtonWidget newtb)
set_sofo	src/spell.c	/^set_sofo(lp, from, to)$/;"	f	file:
set_sofo	src/spell.c	/^static int set_sofo __ARGS((slang_T *lp, char_u *from, char_u *to));$/;"	p	file:	signature:(slang_T *lp, char_u *from, char_u *to)
set_spell_charflags	src/spell.c	/^set_spell_charflags(flags, cnt, fol)$/;"	f	file:
set_spell_charflags	src/spell.c	/^static void set_spell_charflags __ARGS((char_u *flags, int cnt, char_u *upp));$/;"	p	file:	signature:(char_u *flags, int cnt, char_u *upp)
set_spell_chartab	src/spell.c	/^set_spell_chartab(fol, low, upp)$/;"	f	file:
set_spell_chartab	src/spell.c	/^static int set_spell_chartab __ARGS((char_u *fol, char_u *low, char_u *upp));$/;"	p	file:	signature:(char_u *fol, char_u *low, char_u *upp)
set_spell_finish	src/spell.c	/^set_spell_finish(new_st)$/;"	f	file:
set_spell_finish	src/spell.c	/^static int set_spell_finish __ARGS((spelltab_T	*new_st));$/;"	p	file:	signature:(spelltab_T *new_st)
set_string_default	src/option.c	/^set_string_default(name, val)$/;"	f
set_string_option	src/option.c	/^set_string_option(opt_idx, value, opt_flags)$/;"	f	file:
set_string_option	src/option.c	/^static void set_string_option __ARGS((int opt_idx, char_u *value, int opt_flags));$/;"	p	file:	signature:(int opt_idx, char_u *value, int opt_flags)
set_string_option_direct	src/option.c	/^set_string_option_direct(name, opt_idx, val, opt_flags, set_sid)$/;"	f
set_string_option_global	src/option.c	/^set_string_option_global(opt_idx, varp)$/;"	f	file:
set_string_option_global	src/option.c	/^static void set_string_option_global __ARGS((int opt_idx, char_u **varp));$/;"	p	file:	signature:(int opt_idx, char_u **varp)
set_sys_cursor	src/os_msdos.c	/^set_sys_cursor(void)$/;"	f	file:	signature:(void)
set_tabline_font	src/gui_w32.c	/^set_tabline_font(void)$/;"	f	file:	signature:(void)
set_term_defaults	src/option.c	/^set_term_defaults()$/;"	f
set_term_option_alloced	src/option.c	/^set_term_option_alloced(p)$/;"	f
set_termname	src/term.c	/^set_termname(term)$/;"	f
set_title_defaults	src/option.c	/^set_title_defaults()$/;"	f
set_toolbar_style	src/gui_gtk_x11.c	/^set_toolbar_style(GtkToolbar *toolbar)$/;"	f	file:	signature:(GtkToolbar *toolbar)
set_topline	src/move.c	/^set_topline(wp, lnum)$/;"	f
set_tty	src/os_vms.c	/^set_tty(int row, int col)$/;"	f	file:	signature:(int row, int col)
set_tty	src/os_vms.c	/^static void	set_tty __ARGS((int row, int col));$/;"	p	file:	signature:(int row, int col)
set_var	src/eval.c	/^set_var(name, tv, copy)$/;"	f	file:
set_var	src/eval.c	/^static void set_var __ARGS((char_u *name, typval_T *varp, int copy));$/;"	p	file:	signature:(char_u *name, typval_T *varp, int copy)
set_var_lval	src/eval.c	/^set_var_lval(lp, endp, rettv, copy, op)$/;"	f	file:
set_var_lval	src/eval.c	/^static void set_var_lval __ARGS((lval_T *lp, char_u *endp, typval_T *rettv, int copy, char_u *op));$/;"	p	file:	signature:(lval_T *lp, char_u *endp, typval_T *rettv, int copy, char_u *op)
set_vcount	src/eval.c	/^set_vcount(count, count1, set_prevcount)$/;"	f
set_vim_var_char	src/eval.c	/^set_vim_var_char(c)$/;"	f
set_vim_var_list	src/eval.c	/^set_vim_var_list(idx, val)$/;"	f
set_vim_var_nr	src/eval.c	/^set_vim_var_nr(idx, val)$/;"	f
set_vim_var_string	src/eval.c	/^set_vim_var_string(idx, val, len)$/;"	f
set_vv_searchforward	src/search.c	/^set_vv_searchforward()$/;"	f	file:
set_vv_searchforward	src/search.c	/^static void set_vv_searchforward __ARGS((void));$/;"	p	file:	signature:(void)
set_window	src/os_msdos.c	/^set_window(void)$/;"	f	file:	signature:(void)
set_window_height	src/if_mzsch.c	/^set_window_height(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
set_window_height	src/if_mzsch.c	/^static Scheme_Object *set_window_height(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
set_window_title	src/gui_w48.c	/^set_window_title(HWND hwnd, char *title)$/;"	f	file:	signature:(HWND hwnd, char *title)
set_window_width	src/if_mzsch.c	/^set_window_width(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
set_window_width	src/if_mzsch.c	/^static Scheme_Object *set_window_width(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
set_x11_icon	src/os_unix.c	/^set_x11_icon(icon)$/;"	f	file:
set_x11_icon	src/os_unix.c	/^static void set_x11_icon __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
set_x11_title	src/os_unix.c	/^set_x11_title(title)$/;"	f	file:
set_x11_title	src/os_unix.c	/^static void set_x11_title __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
setaltfname	src/buffer.c	/^setaltfname(ffname, sfname, lnum)$/;"	f
setblankbuffer	src/os_msdos.c	/^setblankbuffer(unsigned short uiValue)$/;"	f	file:	signature:(unsigned short uiValue)
setcursor	src/screen.c	/^setcursor()$/;"	f
setenv	src/os_amiga.h	/^int setenv(const char *, const char *);$/;"	p	signature:(const char *, const char *)
setfname	src/buffer.c	/^setfname(buf, ffname, sfname, message)$/;"	f
setlocale	src/os_msdos.c	2132;"	d	file:
setlocale	src/os_msdos.h	63;"	d
setmark	src/mark.c	/^setmark(c)$/;"	f
setmark_pos	src/mark.c	/^setmark_pos(c, pos, fnum)$/;"	f
setmouse	src/term.c	/^setmouse()$/;"	f
setpcmark	src/mark.c	/^setpcmark()$/;"	f
settmode	src/term.c	/^settmode(tmode)$/;"	f
setup_choices	src/dosinst.c	/^setup_choices(void)$/;"	f	file:	signature:(void)
setup_save_yourself	src/gui_gtk_x11.c	/^setup_save_yourself(void)$/;"	f	file:	signature:(void)
setup_term_clip	src/os_unix.c	/^setup_term_clip()$/;"	f
setup_timer	src/if_mzsch.c	/^setup_timer(void)$/;"	f	file:	signature:(void)
setup_timer	src/if_mzsch.c	/^static void setup_timer(void);$/;"	p	file:	signature:(void)
setup_zero_width_cluster	src/gui_gtk_x11.c	/^setup_zero_width_cluster(PangoItem *item, PangoGlyphInfo *glyph,$/;"	f	file:	signature:(PangoItem *item, PangoGlyphInfo *glyph, int last_cellcount, int last_cluster_width, int last_glyph_rbearing)
setwinvar	src/eval.c	/^setwinvar(argvars, rettv, off)$/;"	f	file:
setwinvar	src/eval.c	/^static void setwinvar __ARGS((typval_T *argvars, typval_T *rettv, int off));$/;"	p	file:	signature:(typval_T *argvars, typval_T *rettv, int off)
sfdcnewvim	src/if_perlsfio.c	/^sfdcnewvim()$/;"	f
sfile	src/testdir/test49.vim	/^    let sfile = expand("<sfile>")$/;"	v
sfname	src/fileio.c	/^    char_u	*sfname;	\/* sfname to match with *\/$/;"	m	struct:AutoPatCmd	file:	access:public
sft_score	src/spell.c	/^    short	sft_score;	\/* lowest score used *\/$/;"	m	struct:__anon17	file:	access:public
sft_word	src/spell.c	/^    char_u	sft_word[1];    \/* soundfolded word, actually longer *\/$/;"	m	struct:__anon17	file:	access:public
sftword_T	src/spell.c	/^} sftword_T;$/;"	t	typeref:struct:__anon17	file:
sfvimwrite	src/if_perlsfio.c	/^sfvimwrite(f, buf, n, disc)$/;"	f	file:
sg_cterm	src/syntax.c	/^    int		sg_cterm;	\/* "cterm=" highlighting attr *\/$/;"	m	struct:hl_group	file:	access:public
sg_cterm_attr	src/syntax.c	/^    int		sg_cterm_attr;	\/* Screen attr for color term mode *\/$/;"	m	struct:hl_group	file:	access:public
sg_cterm_bg	src/syntax.c	/^    int		sg_cterm_bg;	\/* terminal bg color number + 1 *\/$/;"	m	struct:hl_group	file:	access:public
sg_cterm_bold	src/syntax.c	/^    int		sg_cterm_bold;	\/* bold attr was set for light color *\/$/;"	m	struct:hl_group	file:	access:public
sg_cterm_fg	src/syntax.c	/^    int		sg_cterm_fg;	\/* terminal fg color number + 1 *\/$/;"	m	struct:hl_group	file:	access:public
sg_font	src/syntax.c	/^    GuiFont	sg_font;	\/* GUI font handle *\/$/;"	m	struct:hl_group	file:	access:public
sg_font_name	src/syntax.c	/^    char_u	*sg_font_name;  \/* GUI font or fontset name *\/$/;"	m	struct:hl_group	file:	access:public
sg_fontset	src/syntax.c	/^    GuiFontset	sg_fontset;	\/* GUI fontset handle *\/$/;"	m	struct:hl_group	file:	access:public
sg_gui	src/syntax.c	/^    int		sg_gui;		\/* "gui=" highlighting attributes *\/$/;"	m	struct:hl_group	file:	access:public
sg_gui_attr	src/syntax.c	/^    int		sg_gui_attr;    \/* Screen attr for GUI mode *\/$/;"	m	struct:hl_group	file:	access:public
sg_gui_bg	src/syntax.c	/^    guicolor_T	sg_gui_bg;	\/* GUI background color handle *\/$/;"	m	struct:hl_group	file:	access:public
sg_gui_bg_name	src/syntax.c	/^    char_u	*sg_gui_bg_name;\/* GUI background color name *\/$/;"	m	struct:hl_group	file:	access:public
sg_gui_fg	src/syntax.c	/^    guicolor_T	sg_gui_fg;	\/* GUI foreground color handle *\/$/;"	m	struct:hl_group	file:	access:public
sg_gui_fg_name	src/syntax.c	/^    char_u	*sg_gui_fg_name;\/* GUI foreground color name *\/$/;"	m	struct:hl_group	file:	access:public
sg_gui_sp	src/syntax.c	/^    guicolor_T	sg_gui_sp;	\/* GUI special color handle *\/$/;"	m	struct:hl_group	file:	access:public
sg_gui_sp_name	src/syntax.c	/^    char_u	*sg_gui_sp_name;\/* GUI special color name *\/$/;"	m	struct:hl_group	file:	access:public
sg_link	src/syntax.c	/^    int		sg_link;	\/* link to this highlight group ID *\/$/;"	m	struct:hl_group	file:	access:public
sg_name	src/syntax.c	/^    char_u	*sg_name;	\/* highlight group name *\/$/;"	m	struct:hl_group	file:	access:public
sg_name_u	src/syntax.c	/^    char_u	*sg_name_u;	\/* uppercase of sg_name *\/$/;"	m	struct:hl_group	file:	access:public
sg_scriptID	src/syntax.c	/^    scid_T	sg_scriptID;	\/* script in which the group was last set *\/$/;"	m	struct:hl_group	file:	access:public
sg_set	src/syntax.c	/^    int		sg_set;		\/* combination of SG_* flags *\/$/;"	m	struct:hl_group	file:	access:public
sg_start	src/syntax.c	/^    char_u	*sg_start;	\/* terminal string for start highl *\/$/;"	m	struct:hl_group	file:	access:public
sg_stop	src/syntax.c	/^    char_u	*sg_stop;	\/* terminal string for stop highl *\/$/;"	m	struct:hl_group	file:	access:public
sg_term	src/syntax.c	/^    int		sg_term;	\/* "term=" highlighting attributes *\/$/;"	m	struct:hl_group	file:	access:public
sg_term_attr	src/syntax.c	/^    int		sg_term_attr;	\/* Screen attr for term mode *\/$/;"	m	struct:hl_group	file:	access:public
sh_maxlines	runtime/syntax/sh.vim	/^  let sh_maxlines = 2 * sh_minlines$/;"	v
sh_minlines	runtime/syntax/sh.vim	/^  let sh_minlines = 200$/;"	v
sha256_bytes	src/sha256.c	/^sha256_bytes(buf, buf_len, salt, salt_len)$/;"	f	file:
sha256_bytes	src/sha256.c	/^static char_u *sha256_bytes __ARGS((char_u *buf, int buf_len, char_u *salt, int salt_len));$/;"	p	file:	signature:(char_u *buf, int buf_len, char_u *salt, int salt_len)
sha256_finish	src/sha256.c	/^sha256_finish(ctx, digest)$/;"	f
sha256_key	src/sha256.c	/^sha256_key(buf, salt, salt_len)$/;"	f
sha256_padding	src/sha256.c	/^static char_u sha256_padding[64] = {$/;"	v	file:
sha256_process	src/sha256.c	/^sha256_process(ctx, data)$/;"	f	file:
sha256_process	src/sha256.c	/^static void sha256_process __ARGS((context_sha256_T *ctx, char_u data[64]));$/;"	p	file:	signature:(context_sha256_T *ctx, char_u data[64])
sha256_self_test	src/sha256.c	/^sha256_self_test()$/;"	f
sha256_start	src/sha256.c	/^sha256_start(ctx)$/;"	f
sha256_update	src/sha256.c	/^sha256_update(ctx, input, length)$/;"	f
sha2_seed	src/sha256.c	/^sha2_seed(header, header_len, salt, salt_len)$/;"	f
sha_self_test_msg	src/sha256.c	/^static char *sha_self_test_msg[] = {$/;"	v	file:
sha_self_test_vector	src/sha256.c	/^static char *sha_self_test_vector[] = {$/;"	v	file:
shadow_width	src/gui_at_sb.h	/^    Dimension	shadow_width;$/;"	m	struct:__anon31	access:public
shape	src/structs.h	/^    int		shape;		\/* one of the SHAPE_ defines *\/$/;"	m	struct:cursor_entry	access:public
shape_table	src/misc2.c	/^cursorentry_T shape_table[SHAPE_IDX_COUNT] =$/;"	v
shellRectangle	src/gui_x11.c	/^shellRectangle(Widget shell, XRectangle *r)$/;"	f	file:	signature:(Widget shell, XRectangle *r)
shellWidgetClass	src/gui_gtk_vms.h	670;"	d
shell_created	src/gui.h	/^    int		shell_created;	    \/* Has the shell been created yet? *\/$/;"	m	struct:Gui	access:public
shell_new_columns	src/window.c	/^shell_new_columns()$/;"	f
shell_new_rows	src/window.c	/^shell_new_rows()$/;"	f
shell_resized	src/term.c	/^shell_resized()$/;"	f
shell_resized_check	src/term.c	/^shell_resized_check()$/;"	f
shift_block	src/ops.c	/^shift_block(oap, amount)$/;"	f	file:
shift_block	src/ops.c	/^static void shift_block __ARGS((oparg_T *oap, int amount));$/;"	p	file:	signature:(oparg_T *oap, int amount)
shift_line	src/ops.c	/^shift_line(left, round, amount, call_changed_bytes)$/;"	f
shl_load	src/auto/configure	/^			shl_load();$/;"	f
shl_load	src/auto/configure	/^		shl_load();$/;"	f
short_u	src/structs.h	/^typedef unsigned short	short_u;$/;"	t
short_u	src/vim.h	/^typedef unsigned short	short_u;$/;"	t
shorten_dir	src/misc1.c	/^shorten_dir(str)$/;"	f
shorten_filenames	src/fileio.c	/^shorten_filenames(fnames, count)$/;"	f
shorten_fname	src/fileio.c	/^shorten_fname(full_path, dir_name)$/;"	f
shorten_fname1	src/fileio.c	/^shorten_fname1(full_path)$/;"	f
shorten_fnames	src/fileio.c	/^shorten_fnames(force)$/;"	f
shortmess	src/option.c	/^shortmess(x)$/;"	f
shortname	src/option.c	/^    char	*shortname;	\/* permissible abbreviation *\/$/;"	m	struct:vimoption	file:	access:public
shortpath_for_invalid_fname	src/eval.c	/^shortpath_for_invalid_fname(fname, bufp, fnamelen)$/;"	f	file:
shortpath_for_invalid_fname	src/eval.c	/^static int shortpath_for_invalid_fname __ARGS((char_u **fname, char_u **bufp, int *fnamelen));$/;"	p	file:	signature:(char_u **fname, char_u **bufp, int *fnamelen)
shortpath_for_partial	src/eval.c	/^shortpath_for_partial(fnamep, bufp, fnamelen)$/;"	f	file:
shortpath_for_partial	src/eval.c	/^static int shortpath_for_partial __ARGS((char_u **fnamep, char_u **bufp, int *fnamelen));$/;"	p	file:	signature:(char_u **fnamep, char_u **bufp, int *fnamelen)
should_abort	src/ex_eval.c	/^should_abort(retcode)$/;"	f
showState	src/gui_beval.h	/^    BeState		showState;	\/* tells us whats currently going on *\/$/;"	m	struct:BalloonEvalStruct	access:public
show_autocmd	src/fileio.c	/^show_autocmd(ap, event)$/;"	f	file:
show_autocmd	src/fileio.c	/^static void show_autocmd __ARGS((AutoPat *ap, event_T event));$/;"	p	file:	signature:(AutoPat *ap, event_T event)
show_help	src/dosinst.c	/^show_help(void)$/;"	f	file:	signature:(void)
show_menus	src/menu.c	/^show_menus(path_name, modes)$/;"	f	file:
show_menus	src/menu.c	/^static int show_menus __ARGS((char_u *, int));$/;"	p	file:	signature:(char_u *, int)
show_menus_recursive	src/menu.c	/^show_menus_recursive(menu, modes, depth)$/;"	f	file:
show_menus_recursive	src/menu.c	/^static void show_menus_recursive __ARGS((vimmenu_T *, int, int));$/;"	p	file:	signature:(vimmenu_T *, int, int)
show_mouse	src/os_msdos.c	/^show_mouse(int on)$/;"	f	file:	signature:(int on)
show_one_mark	src/mark.c	/^show_one_mark(c, arg, p, name, current)$/;"	f	file:
show_one_mark	src/mark.c	/^static void show_one_mark __ARGS((int, char_u *, pos_T *, char_u *, int current));$/;"	p	file:	signature:(int, char_u *, pos_T *, char_u *, int current)
show_one_termcode	src/term.c	/^show_one_termcode(name, code, printit)$/;"	f
show_pat_in_path	src/search.c	/^show_pat_in_path(line, type, did_show, action, fp, lnum, count)$/;"	f	file:
show_pat_in_path	src/search.c	/^static void show_pat_in_path __ARGS((char_u *, int,$/;"	p	file:	signature:(char_u *, int, int, int, FILE *, linenr_T *, long)
show_sb_text	src/message.c	/^show_sb_text()$/;"	f
show_shell_mess	src/os_unix.c	/^static int	show_shell_mess = TRUE;$/;"	v	file:
show_tabline_popup_menu	src/gui_w48.c	/^show_tabline_popup_menu(void)$/;"	f	file:	signature:(void)
show_termcodes	src/term.c	/^show_termcodes()$/;"	f
show_utf8	src/mbyte.c	/^show_utf8()$/;"	f
showcmd_buf	src/normal.c	/^static char_u	showcmd_buf[SHOWCMD_BUFLEN];$/;"	v	file:
showcmd_is_clear	src/normal.c	/^static int	showcmd_is_clear = TRUE;$/;"	v	file:
showcmd_visual	src/normal.c	/^static int	showcmd_visual = FALSE;$/;"	v	file:
showing_tabline	src/gui_motif.c	/^static int	showing_tabline = 0;$/;"	v	file:
showing_tabline	src/gui_w48.c	/^static int		showing_tabline = 0;$/;"	v	file:
showmap	src/getchar.c	/^showmap(mp, local)$/;"	f	file:
showmap	src/getchar.c	/^static void	showmap __ARGS((mapblock_T *mp, int local));$/;"	p	file:	signature:(mapblock_T *mp, int local)
showmatch	src/search.c	/^showmatch(c)$/;"	f
showmatches	src/ex_getln.c	/^showmatches(xp, wildmenu)$/;"	f	file:
showmatches	src/ex_getln.c	/^static int	showmatches __ARGS((expand_T *xp, int wildmenu));$/;"	p	file:	signature:(expand_T *xp, int wildmenu)
showmode	src/screen.c	/^showmode()$/;"	f
shown	src/gui_at_fs.c	/^    char	*shown;$/;"	m	struct:__anon113	file:	access:public
shown	src/gui_at_sb.h	/^    float	  shown;	\/* What percent is shown in the win *\/$/;"	m	struct:__anon31	access:public
shownLength	src/gui_at_sb.h	/^    Dimension	  shownLength;	\/* Num pixels corresponding to shown *\/$/;"	m	struct:__anon31	access:public
showoneopt	src/option.c	/^showoneopt(p, opt_flags)$/;"	f	file:
showoneopt	src/option.c	/^static void showoneopt __ARGS((struct vimoption *, int opt_flags));$/;"	p	file:	signature:(struct vimoption *, int opt_flags)
showoptions	src/option.c	/^showoptions(all, opt_flags)$/;"	f	file:
showoptions	src/option.c	/^static void showoptions __ARGS((int all, int opt_flags));$/;"	p	file:	signature:(int all, int opt_flags)
showruler	src/screen.c	/^showruler(always)$/;"	f
shutdown	src/os_unix.c	/^    Bool shutdown;	    \/* If we're in shutdown mode *\/$/;"	m	struct:__anon65	file:	access:public
si_add	src/spell.c	/^    int		si_add;		\/* addition file *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_ascii	src/spell.c	/^    int		si_ascii;	\/* handling only ASCII words *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_attr	src/syntax.c	/^    int		si_attr;		\/* attributes in this state *\/$/;"	m	struct:state_item	file:	access:public
si_blocks	src/spell.c	/^    sblock_T	*si_blocks;	\/* memory blocks used *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_blocks_cnt	src/spell.c	/^    long	si_blocks_cnt;	\/* memory blocks allocated *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_cchar	src/syntax.c	/^    int		si_cchar;		\/* substitution character for conceal *\/$/;"	m	struct:state_item	file:	access:public
si_clear_chartab	src/spell.c	/^    int		si_clear_chartab;   \/* when TRUE clear char tables *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_collapse	src/spell.c	/^    int		si_collapse;	\/* soundsalike: ? *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_commonwords	src/spell.c	/^    hashtab_T	si_commonwords;	\/* hashtable for common words *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_compflags	src/spell.c	/^    char_u	*si_compflags;	\/* flags used for compounding *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_compmax	src/spell.c	/^    int		si_compmax;	\/* max nr of words for compounding *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_compminlen	src/spell.c	/^    int		si_compminlen;	\/* minimal length for compounding *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_compoptions	src/spell.c	/^    int		si_compoptions;	\/* COMP_ flags *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_comppat	src/spell.c	/^    garray_T	si_comppat;	\/* CHECKCOMPOUNDPATTERN items, each stored as$/;"	m	struct:spellinfo_S	file:	access:public
si_compress_cnt	src/spell.c	/^    long	si_compress_cnt;    \/* words to add before lowering$/;"	m	struct:spellinfo_S	file:	access:public
si_compsylmax	src/spell.c	/^    int		si_compsylmax;	\/* max nr of syllables for compounding *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_cont_list	src/syntax.c	/^    short	*si_cont_list;		\/* list of contained groups *\/$/;"	m	struct:state_item	file:	access:public
si_conv	src/spell.c	/^    vimconv_T	si_conv;	\/* for conversion to 'encoding' *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_end_idx	src/syntax.c	/^    int		si_end_idx;		\/* group ID for end pattern or zero *\/$/;"	m	struct:state_item	file:	access:public
si_ends	src/syntax.c	/^    int		si_ends;		\/* if match ends before si_m_endpos *\/$/;"	m	struct:state_item	file:	access:public
si_eoe_pos	src/syntax.c	/^    lpos_T	si_eoe_pos;		\/* end position of end pattern *\/$/;"	m	struct:state_item	file:	access:public
si_extmatch	src/syntax.c	/^    reg_extmatch_T *si_extmatch;	\/* \\z(...\\) matches from start$/;"	m	struct:state_item	file:	access:public
si_first_free	src/spell.c	/^    wordnode_T	*si_first_free; \/* List of nodes that have been freed during$/;"	m	struct:spellinfo_S	file:	access:public
si_flags	src/syntax.c	/^    long	si_flags;		\/* HL_HAS_EOL flag in this state, and$/;"	m	struct:state_item	file:	access:public
si_foldroot	src/spell.c	/^    wordnode_T	*si_foldroot;	\/* tree with case-folded words *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_foldwcount	src/spell.c	/^    long	si_foldwcount;	\/* nr of words in si_foldroot *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_followup	src/spell.c	/^    int		si_followup;	\/* soundsalike: ? *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_free_count	src/spell.c	/^    long	si_free_count;	\/* number of nodes in si_first_free *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_h_endpos	src/syntax.c	/^    lpos_T	si_h_endpos;		\/* end position of the highlighting *\/$/;"	m	struct:state_item	file:	access:public
si_h_startpos	src/syntax.c	/^    lpos_T	si_h_startpos;		\/* start position of the highlighting *\/$/;"	m	struct:state_item	file:	access:public
si_id	src/syntax.c	/^    int		si_id;			\/* highlight group ID for keywords *\/$/;"	m	struct:state_item	file:	access:public
si_idx	src/syntax.c	/^    int		si_idx;			\/* index of syntax pattern or$/;"	m	struct:state_item	file:	access:public
si_info	src/spell.c	/^    char_u	*si_info;	\/* info text chars or NULL  *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_keeproot	src/spell.c	/^    wordnode_T	*si_keeproot;	\/* tree with keep-case words *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_keepwcount	src/spell.c	/^    long	si_keepwcount;	\/* nr of words in si_keeproot *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_m_endpos	src/syntax.c	/^    lpos_T	si_m_endpos;		\/* just after end posn of the match *\/$/;"	m	struct:state_item	file:	access:public
si_m_lnum	src/syntax.c	/^    int		si_m_lnum;		\/* lnum of the match *\/$/;"	m	struct:state_item	file:	access:public
si_m_startcol	src/syntax.c	/^    int		si_m_startcol;		\/* starting column of the match *\/$/;"	m	struct:state_item	file:	access:public
si_map	src/spell.c	/^    garray_T	si_map;		\/* MAP info concatenated *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_memtot	src/spell.c	/^    int		si_memtot;	\/* runtime memory used *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_midword	src/spell.c	/^    char_u	*si_midword;	\/* MIDWORD chars or NULL  *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_msg_count	src/spell.c	/^    int		si_msg_count;	\/* number of words added since last message *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_newcompID	src/spell.c	/^    int		si_newcompID;	\/* current value for compound ID *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_newprefID	src/spell.c	/^    int		si_newprefID;	\/* current value for ah_newID *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_next_list	src/syntax.c	/^    short	*si_next_list;		\/* nextgroup IDs after this item ends *\/$/;"	m	struct:state_item	file:	access:public
si_nobreak	src/spell.c	/^    char_u	si_nobreak;	\/* NOBREAK *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_nosplitsugs	src/spell.c	/^    int		si_nosplitsugs;	\/* NOSPLITSUGS item found *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_nosugfile	src/spell.c	/^    int		si_nosugfile;	\/* NOSUGFILE item found *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_prefcond	src/spell.c	/^    garray_T	si_prefcond;	\/* table with conditions for postponed$/;"	m	struct:spellinfo_S	file:	access:public
si_prefroot	src/spell.c	/^    wordnode_T	*si_prefroot;	\/* tree with postponed prefixes *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_region	src/spell.c	/^    int		si_region;	\/* region mask *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_region_count	src/spell.c	/^    int		si_region_count; \/* number of regions supported (1 when there$/;"	m	struct:spellinfo_S	file:	access:public
si_region_name	src/spell.c	/^    char_u	si_region_name[16]; \/* region names; used only if$/;"	m	struct:spellinfo_S	file:	access:public
si_rem_accents	src/spell.c	/^    int		si_rem_accents;	\/* soundsalike: remove accents *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_rep	src/spell.c	/^    garray_T	si_rep;		\/* list of fromto_T entries from REP lines *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_repsal	src/spell.c	/^    garray_T	si_repsal;	\/* list of fromto_T entries from REPSAL lines *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_sal	src/spell.c	/^    garray_T	si_sal;		\/* list of fromto_T entries from SAL lines *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_seqnr	src/syntax.c	/^    int		si_seqnr;		\/* sequence number *\/$/;"	m	struct:state_item	file:	access:public
si_sofofr	src/spell.c	/^    char_u	*si_sofofr;	\/* SOFOFROM text *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_sofoto	src/spell.c	/^    char_u	*si_sofoto;	\/* SOFOTO text *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_spellbuf	src/spell.c	/^    buf_T	*si_spellbuf;	\/* buffer used to store soundfold word table *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_sugtime	src/spell.c	/^    time_t	si_sugtime;	\/* timestamp for .sug file *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_sugtree	src/spell.c	/^    long	si_sugtree;	\/* creating the soundfolding trie *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_syllable	src/spell.c	/^    char_u	*si_syllable;	\/* syllable string *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_trans_id	src/syntax.c	/^    int		si_trans_id;		\/* idem, transparency removed *\/$/;"	m	struct:state_item	file:	access:public
si_verbose	src/spell.c	/^    int		si_verbose;	\/* verbose messages *\/$/;"	m	struct:spellinfo_S	file:	access:public
si_wordnode_nr	src/spell.c	/^    int		si_wordnode_nr;	\/* sequence nr for nodes *\/$/;"	m	struct:spellinfo_S	file:	access:public
sig	src/os_unix.c	/^    int	    sig;	\/* Signal number, eg. SIGSEGV etc *\/$/;"	m	struct:signalinfo	file:	access:public
sig_alarm_called	src/os_unix.c	/^static volatile int sig_alarm_called;$/;"	v	file:
sigcont_received	src/os_unix.c	/^static volatile int sigcont_received;$/;"	v	file:
sign	src/ex_cmds.c	/^struct sign$/;"	s	file:
sign::sn_icon	src/ex_cmds.c	/^    char_u	*sn_icon;	\/* name of pixmap *\/$/;"	m	struct:sign	file:	access:public
sign::sn_image	src/ex_cmds.c	/^    void	*sn_image;	\/* icon image *\/$/;"	m	struct:sign	file:	access:public
sign::sn_line_hl	src/ex_cmds.c	/^    int		sn_line_hl;	\/* highlight ID for line *\/$/;"	m	struct:sign	file:	access:public
sign::sn_name	src/ex_cmds.c	/^    char_u	*sn_name;	\/* name of sign *\/$/;"	m	struct:sign	file:	access:public
sign::sn_next	src/ex_cmds.c	/^    sign_T	*sn_next;	\/* next sign in list *\/$/;"	m	struct:sign	file:	access:public
sign::sn_text	src/ex_cmds.c	/^    char_u	*sn_text;	\/* text used instead of pixmap *\/$/;"	m	struct:sign	file:	access:public
sign::sn_text_hl	src/ex_cmds.c	/^    int		sn_text_hl;	\/* highlight ID for text *\/$/;"	m	struct:sign	file:	access:public
sign::sn_typenr	src/ex_cmds.c	/^    int		sn_typenr;	\/* type number of sign (negative if not equal$/;"	m	struct:sign	file:	access:public
sign_T	src/ex_cmds.c	/^typedef struct sign sign_T;$/;"	t	typeref:struct:sign	file:
sign_cmd_idx	src/ex_cmds.c	/^sign_cmd_idx(begin_cmd, end_cmd)$/;"	f	file:
sign_cmd_idx	src/ex_cmds.c	/^static int sign_cmd_idx __ARGS((char_u *begin_cmd, char_u *end_cmd));$/;"	p	file:	signature:(char_u *begin_cmd, char_u *end_cmd)
sign_get_attr	src/ex_cmds.c	/^sign_get_attr(typenr, line)$/;"	f
sign_get_image	src/ex_cmds.c	/^sign_get_image(typenr)$/;"	f
sign_get_text	src/ex_cmds.c	/^sign_get_text(typenr)$/;"	f
sign_gui_started	src/ex_cmds.c	/^sign_gui_started()$/;"	f
sign_list_defined	src/ex_cmds.c	/^sign_list_defined(sp)$/;"	f	file:
sign_list_defined	src/ex_cmds.c	/^static void sign_list_defined __ARGS((sign_T *sp));$/;"	p	file:	signature:(sign_T *sp)
sign_list_placed	src/buffer.c	/^sign_list_placed(rbuf)$/;"	f
sign_mark_adjust	src/buffer.c	/^sign_mark_adjust(line1, line2, amount, amount_after)$/;"	f
sign_typenr2name	src/ex_cmds.c	/^sign_typenr2name(typenr)$/;"	f
sign_undefine	src/ex_cmds.c	/^sign_undefine(sp, sp_prev)$/;"	f	file:
sign_undefine	src/ex_cmds.c	/^static void sign_undefine __ARGS((sign_T *sp, sign_T *sp_prev));$/;"	p	file:	signature:(sign_T *sp, sign_T *sp_prev)
signal	src/os_riscos.h	147;"	d
signal	src/os_unixx.h	17;"	d
signal_info	src/os_unix.c	/^} signal_info[] =$/;"	v	typeref:struct:signalinfo	file:
signal_stack	src/os_unix.c	/^static char *signal_stack;$/;"	v	file:
signalinfo	src/os_unix.c	/^static struct signalinfo$/;"	s	file:
signalinfo::deadly	src/os_unix.c	/^    char    deadly;	\/* Catch as a deadly signal? *\/$/;"	m	struct:signalinfo	file:	access:public
signalinfo::name	src/os_unix.c	/^    char    *name;	\/* Signal name (not char_u!). *\/$/;"	m	struct:signalinfo	file:	access:public
signalinfo::sig	src/os_unix.c	/^    int	    sig;	\/* Signal number, eg. SIGSEGV etc *\/$/;"	m	struct:signalinfo	file:	access:public
signicon_t	src/gui_w32.c	/^} signicon_t;$/;"	t	typeref:struct:_signicon_t	file:
signlist	src/structs.h	/^struct signlist$/;"	s
signlist::id	src/structs.h	/^    int		id;		\/* unique identifier for each placed sign *\/$/;"	m	struct:signlist	access:public
signlist::lnum	src/structs.h	/^    linenr_T	lnum;		\/* line number which has this sign *\/$/;"	m	struct:signlist	access:public
signlist::next	src/structs.h	/^    signlist_T	*next;		\/* next signlist entry *\/$/;"	m	struct:signlist	access:public
signlist::prev	src/structs.h	/^    signlist_T  *prev;		\/* previous entry -- for easy reordering *\/$/;"	m	struct:signlist	access:public
signlist::typenr	src/structs.h	/^    int		typenr;		\/* typenr of sign *\/$/;"	m	struct:signlist	access:public
signlist_T	src/structs.h	/^typedef struct signlist signlist_T;$/;"	t	typeref:struct:signlist
signmap	src/netbeans.c	/^    int			*signmap;$/;"	m	struct:nbbuf_struct	file:	access:public
signmaplen	src/netbeans.c	/^    short_u		 signmaplen;$/;"	m	struct:nbbuf_struct	file:	access:public
signmapused	src/netbeans.c	/^    short_u		 signmapused;$/;"	m	struct:nbbuf_struct	file:	access:public
sigsetjmp	src/auto/osdef.h	/^extern int	sigsetjmp __ARGS((sigjmp_buf, int));$/;"	p	signature:(sigjmp_buf, int)
sigstk	src/os_unix.c	/^static stack_t sigstk;			\/* for sigaltstack() *\/$/;"	v	file:
sigstk	src/os_unix.c	/^static struct sigstack sigstk;		\/* for sigstack() *\/$/;"	v	typeref:struct:sigstack	file:
silent	src/structs.h	/^    char	silent[MENU_MODES]; \/* A silent flag for each mode *\/$/;"	m	struct:VimMenu	access:public
silent_mode	src/globals.h	/^EXTERN int	silent_mode INIT(= FALSE);$/;"	v
similar_chars	src/spell.c	/^similar_chars(slang, c1, c2)$/;"	f	file:
similar_chars	src/spell.c	/^static int similar_chars __ARGS((slang_T *slang, int c1, int c2));$/;"	p	file:	signature:(slang_T *slang, int c1, int c2)
simple	src/gui_at_sb.h	/^    SimplePart		simple;$/;"	m	struct:_ScrollbarRec	access:public
simple_class	src/gui_at_sb.h	/^    SimpleClassPart		simple_class;$/;"	m	struct:_ScrollbarClassRec	access:public
simplify_filename	src/tag.c	/^simplify_filename(filename)$/;"	f
simplify_key	src/misc2.c	/^simplify_key(key, modifiers)$/;"	f
single_input	src/if_python.c	87;"	d	file:
size	src/gui.h	/^    long	size;		\/* Size of scrollbar thumb *\/$/;"	m	struct:GuiScrollbar	access:public
size	src/gui_mac.c	/^    FMFontSize size;$/;"	m	struct:__anon128	file:	access:public
size_callback	src/gui_xmdlg.c	/^size_callback(Widget w,$/;"	f	file:	signature:(Widget w, SharedFontSelData *data, XmListCallbackStruct *call_data)
size_part	src/gui_xmdlg.c	/^size_part(char *font, char *buf, int inPixels)$/;"	f	file:	signature:(char *font, char *buf, int inPixels)
size_set	src/os_amiga.c	/^int			size_set = FALSE;   \/* set to TRUE if window size was set *\/$/;"	v
size_t	src/os_os2_cfg.h	73;"	d
skip	src/ex_cmds.h	/^    int		skip;		\/* don't execute the command, only parse it *\/$/;"	m	struct:exarg	access:public
skip_anyof	src/regexp.c	/^skip_anyof(p)$/;"	f	file:
skip_anyof	src/regexp.c	/^static char_u	*skip_anyof __ARGS((char_u *p));$/;"	p	file:	signature:(char_u *p)
skip_chars	src/search.c	/^skip_chars(cclass, dir)$/;"	f	file:
skip_chars	src/search.c	/^static int skip_chars __ARGS((int, int));$/;"	p	file:	signature:(int, int)
skip_cmd_arg	src/ex_docmd.c	/^skip_cmd_arg(p, rembs)$/;"	f	file:
skip_cmd_arg	src/ex_docmd.c	/^static char_u	*skip_cmd_arg __ARGS((char_u *p, int rembs));$/;"	p	file:	signature:(char_u *p, int rembs)
skip_expr	src/eval.c	/^skip_expr(pp)$/;"	f
skip_grep_pat	src/ex_docmd.c	/^skip_grep_pat(eap)$/;"	f	file:
skip_grep_pat	src/ex_docmd.c	/^static char_u	*skip_grep_pat __ARGS((exarg_T *eap));$/;"	p	file:	signature:(exarg_T *eap)
skip_label	src/misc1.c	/^skip_label(lnum, pp, ind_maxcomment)$/;"	f	file:
skip_label	src/misc1.c	/^static int	skip_label __ARGS((linenr_T, char_u **pp, int ind_maxcomment));$/;"	p	file:	signature:(linenr_T, char_u **pp, int ind_maxcomment)
skip_range	src/ex_docmd.c	/^skip_range(cmd, ctx)$/;"	f
skip_redraw	src/globals.h	/^EXTERN int	skip_redraw INIT(= FALSE);  \/* skip redraw once *\/$/;"	v
skip_regexp	src/regexp.c	/^skip_regexp(startp, dirc, magic, newp)$/;"	f
skip_status_match_char	src/screen.c	/^skip_status_match_char(xp, s)$/;"	f	file:
skip_status_match_char	src/screen.c	/^static int skip_status_match_char __ARGS((expand_T *xp, char_u *s));$/;"	p	file:	signature:(expand_T *xp, char_u *s)
skip_string	src/misc1.c	/^skip_string(p)$/;"	f	file:
skip_string	src/misc1.c	/^static char_u	*skip_string __ARGS((char_u *p));$/;"	p	file:	signature:(char_u *p)
skip_to_option_part	src/misc1.c	/^skip_to_option_part(p)$/;"	f
skip_var_list	src/eval.c	/^skip_var_list(arg, var_count, semicolon)$/;"	f	file:
skip_var_list	src/eval.c	/^static char_u *skip_var_list __ARGS((char_u *arg, int *var_count, int *semicolon));$/;"	p	file:	signature:(char_u *arg, int *var_count, int *semicolon)
skip_var_one	src/eval.c	/^skip_var_one(arg)$/;"	f	file:
skip_var_one	src/eval.c	/^static char_u *skip_var_one __ARGS((char_u *arg));$/;"	p	file:	signature:(char_u *arg)
skip_vimgrep_pat	src/quickfix.c	/^skip_vimgrep_pat(p, s, flags)$/;"	f
skipchr	src/regexp.c	/^skipchr()$/;"	f	file:
skipchr	src/regexp.c	/^static void	skipchr __ARGS((void));$/;"	p	file:	signature:(void)
skipchr_keepstart	src/regexp.c	/^skipchr_keepstart()$/;"	f	file:
skipchr_keepstart	src/regexp.c	/^static void	skipchr_keepstart __ARGS((void));$/;"	p	file:	signature:(void)
skipdigits	src/charset.c	/^skipdigits(q)$/;"	f
skiphex	src/charset.c	/^skiphex(q)$/;"	f
skiptodigit	src/charset.c	/^skiptodigit(q)$/;"	f
skiptohex	src/charset.c	/^skiptohex(q)$/;"	f
skiptowhite	src/charset.c	/^skiptowhite(p)$/;"	f
skiptowhite_esc	src/charset.c	/^skiptowhite_esc(p)$/;"	f
skipwhite	src/charset.c	/^skipwhite(q)$/;"	f
sl_add	src/spell.c	/^    int		sl_add;		\/* TRUE if it's a .add file. *\/$/;"	m	struct:slang_S	file:	access:public
sl_collapse	src/spell.c	/^    int		sl_collapse;	\/* SAL collapse_result *\/$/;"	m	struct:slang_S	file:	access:public
sl_compallflags	src/spell.c	/^    char_u	*sl_compallflags; \/* all flags for compound words *\/$/;"	m	struct:slang_S	file:	access:public
sl_compmax	src/spell.c	/^    int		sl_compmax;	\/* COMPOUNDWORDMAX (default: MAXWLEN) *\/$/;"	m	struct:slang_S	file:	access:public
sl_compminlen	src/spell.c	/^    int		sl_compminlen;	\/* COMPOUNDMIN (default: 0) *\/$/;"	m	struct:slang_S	file:	access:public
sl_compoptions	src/spell.c	/^    int		sl_compoptions;	\/* COMP_* flags *\/$/;"	m	struct:slang_S	file:	access:public
sl_comppat	src/spell.c	/^    garray_T	sl_comppat;	\/* CHECKCOMPOUNDPATTERN items *\/$/;"	m	struct:slang_S	file:	access:public
sl_compprog	src/spell.c	/^    regprog_T	*sl_compprog;	\/* COMPOUNDRULE turned into a regexp progrm$/;"	m	struct:slang_S	file:	access:public
sl_comprules	src/spell.c	/^    char_u	*sl_comprules;	\/* all COMPOUNDRULE concatenated (or NULL) *\/$/;"	m	struct:slang_S	file:	access:public
sl_compstartflags	src/spell.c	/^    char_u	*sl_compstartflags; \/* flags for first compound word *\/$/;"	m	struct:slang_S	file:	access:public
sl_compsylmax	src/spell.c	/^    int		sl_compsylmax;	\/* COMPOUNDSYLMAX (default: MAXWLEN) *\/$/;"	m	struct:slang_S	file:	access:public
sl_fbyts	src/spell.c	/^    char_u	*sl_fbyts;	\/* case-folded word bytes *\/$/;"	m	struct:slang_S	file:	access:public
sl_fidxs	src/spell.c	/^    idx_T	*sl_fidxs;	\/* case-folded word indexes *\/$/;"	m	struct:slang_S	file:	access:public
sl_fname	src/spell.c	/^    char_u	*sl_fname;	\/* name of .spl file *\/$/;"	m	struct:slang_S	file:	access:public
sl_followup	src/spell.c	/^    int		sl_followup;	\/* SAL followup *\/$/;"	m	struct:slang_S	file:	access:public
sl_has_map	src/spell.c	/^    int		sl_has_map;	\/* TRUE if there is a MAP line *\/$/;"	m	struct:slang_S	file:	access:public
sl_info	src/spell.c	/^    char_u	*sl_info;	\/* infotext string or NULL *\/$/;"	m	struct:slang_S	file:	access:public
sl_kbyts	src/spell.c	/^    char_u	*sl_kbyts;	\/* keep-case word bytes *\/$/;"	m	struct:slang_S	file:	access:public
sl_kidxs	src/spell.c	/^    idx_T	*sl_kidxs;	\/* keep-case word indexes *\/$/;"	m	struct:slang_S	file:	access:public
sl_lang	src/spell.c	/^    char_u  sl_lang[MAXWLEN + 1];	\/* language name *\/$/;"	m	struct:spelload_S	file:	access:public
sl_map_array	src/spell.c	/^    char_u	sl_map_array[256]; \/* MAP for first 256 chars *\/$/;"	m	struct:slang_S	file:	access:public
sl_map_array	src/spell.c	/^    int		sl_map_array[256]; \/* MAP for first 256 chars *\/$/;"	m	struct:slang_S	file:	access:public
sl_map_hash	src/spell.c	/^    hashtab_T	sl_map_hash;	\/* MAP for multi-byte chars *\/$/;"	m	struct:slang_S	file:	access:public
sl_midword	src/spell.c	/^    char_u	*sl_midword;	\/* MIDWORD string or NULL *\/$/;"	m	struct:slang_S	file:	access:public
sl_name	src/spell.c	/^    char_u	*sl_name;	\/* language name "en", "en.rare", "nl", etc. *\/$/;"	m	struct:slang_S	file:	access:public
sl_next	src/spell.c	/^    slang_T	*sl_next;	\/* next language *\/$/;"	m	struct:slang_S	file:	access:public
sl_nobreak	src/spell.c	/^    char_u	sl_nobreak;	\/* When TRUE: no spaces between words *\/$/;"	m	struct:slang_S	file:	access:public
sl_nobreak	src/spell.c	/^    int	    sl_nobreak;			\/* NOBREAK language found *\/$/;"	m	struct:spelload_S	file:	access:public
sl_nosplitsugs	src/spell.c	/^    int		sl_nosplitsugs;	\/* don't suggest splitting a word *\/$/;"	m	struct:slang_S	file:	access:public
sl_pbyts	src/spell.c	/^    char_u	*sl_pbyts;	\/* prefix tree word bytes *\/$/;"	m	struct:slang_S	file:	access:public
sl_pidxs	src/spell.c	/^    idx_T	*sl_pidxs;	\/* prefix tree word indexes *\/$/;"	m	struct:slang_S	file:	access:public
sl_prefixcnt	src/spell.c	/^    int		sl_prefixcnt;	\/* number of items in "sl_prefprog" *\/$/;"	m	struct:slang_S	file:	access:public
sl_prefprog	src/spell.c	/^    regprog_T	**sl_prefprog;	\/* table with regprogs for prefixes *\/$/;"	m	struct:slang_S	file:	access:public
sl_regions	src/spell.c	/^    char_u	sl_regions[17];	\/* table with up to 8 region names plus NUL *\/$/;"	m	struct:slang_S	file:	access:public
sl_rem_accents	src/spell.c	/^    int		sl_rem_accents;	\/* SAL remove_accents *\/$/;"	m	struct:slang_S	file:	access:public
sl_rep	src/spell.c	/^    garray_T	sl_rep;		\/* list of fromto_T entries from REP lines *\/$/;"	m	struct:slang_S	file:	access:public
sl_rep_first	src/spell.c	/^    short	sl_rep_first[256];  \/* indexes where byte first appears, -1 if$/;"	m	struct:slang_S	file:	access:public
sl_repsal	src/spell.c	/^    garray_T	sl_repsal;	\/* list of fromto_T entries from REPSAL lines *\/$/;"	m	struct:slang_S	file:	access:public
sl_repsal_first	src/spell.c	/^    short	sl_repsal_first[256];  \/* sl_rep_first for REPSAL lines *\/$/;"	m	struct:slang_S	file:	access:public
sl_sal	src/spell.c	/^    garray_T	sl_sal;		\/* list of salitem_T entries from SAL lines *\/$/;"	m	struct:slang_S	file:	access:public
sl_sal_first	src/spell.c	/^    salfirst_T	sl_sal_first[256];  \/* indexes where byte first appears, -1 if$/;"	m	struct:slang_S	file:	access:public
sl_sbyts	src/spell.c	/^    char_u	*sl_sbyts;	\/* soundfolded word bytes *\/$/;"	m	struct:slang_S	file:	access:public
sl_sidxs	src/spell.c	/^    idx_T	*sl_sidxs;	\/* soundfolded word indexes *\/$/;"	m	struct:slang_S	file:	access:public
sl_slang	src/spell.c	/^    slang_T *sl_slang;			\/* resulting slang_T struct *\/$/;"	m	struct:spelload_S	file:	access:public
sl_sofo	src/spell.c	/^    int		sl_sofo;	\/* SOFOFROM and SOFOTO instead of SAL items:$/;"	m	struct:slang_S	file:	access:public
sl_sounddone	src/spell.c	/^    hashtab_T	sl_sounddone;	\/* table with soundfolded words that have$/;"	m	struct:slang_S	file:	access:public
sl_sugbuf	src/spell.c	/^    buf_T	*sl_sugbuf;	\/* buffer with word number table *\/$/;"	m	struct:slang_S	file:	access:public
sl_sugloaded	src/spell.c	/^    int		sl_sugloaded;	\/* TRUE when .sug file was loaded or failed to$/;"	m	struct:slang_S	file:	access:public
sl_sugtime	src/spell.c	/^    time_t	sl_sugtime;	\/* timestamp for .sug file *\/$/;"	m	struct:slang_S	file:	access:public
sl_syl_items	src/spell.c	/^    garray_T	sl_syl_items;	\/* syllable items *\/$/;"	m	struct:slang_S	file:	access:public
sl_syllable	src/spell.c	/^    char_u	*sl_syllable;	\/* SYLLABLE repeatable chars or NULL *\/$/;"	m	struct:slang_S	file:	access:public
sl_wordcount	src/spell.c	/^    hashtab_T	sl_wordcount;	\/* hashtable with word count, wordcount_T *\/$/;"	m	struct:slang_S	file:	access:public
slang_S	src/spell.c	/^struct slang_S$/;"	s	file:
slang_S::sl_add	src/spell.c	/^    int		sl_add;		\/* TRUE if it's a .add file. *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_collapse	src/spell.c	/^    int		sl_collapse;	\/* SAL collapse_result *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_compallflags	src/spell.c	/^    char_u	*sl_compallflags; \/* all flags for compound words *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_compmax	src/spell.c	/^    int		sl_compmax;	\/* COMPOUNDWORDMAX (default: MAXWLEN) *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_compminlen	src/spell.c	/^    int		sl_compminlen;	\/* COMPOUNDMIN (default: 0) *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_compoptions	src/spell.c	/^    int		sl_compoptions;	\/* COMP_* flags *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_comppat	src/spell.c	/^    garray_T	sl_comppat;	\/* CHECKCOMPOUNDPATTERN items *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_compprog	src/spell.c	/^    regprog_T	*sl_compprog;	\/* COMPOUNDRULE turned into a regexp progrm$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_comprules	src/spell.c	/^    char_u	*sl_comprules;	\/* all COMPOUNDRULE concatenated (or NULL) *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_compstartflags	src/spell.c	/^    char_u	*sl_compstartflags; \/* flags for first compound word *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_compsylmax	src/spell.c	/^    int		sl_compsylmax;	\/* COMPOUNDSYLMAX (default: MAXWLEN) *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_fbyts	src/spell.c	/^    char_u	*sl_fbyts;	\/* case-folded word bytes *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_fidxs	src/spell.c	/^    idx_T	*sl_fidxs;	\/* case-folded word indexes *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_fname	src/spell.c	/^    char_u	*sl_fname;	\/* name of .spl file *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_followup	src/spell.c	/^    int		sl_followup;	\/* SAL followup *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_has_map	src/spell.c	/^    int		sl_has_map;	\/* TRUE if there is a MAP line *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_info	src/spell.c	/^    char_u	*sl_info;	\/* infotext string or NULL *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_kbyts	src/spell.c	/^    char_u	*sl_kbyts;	\/* keep-case word bytes *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_kidxs	src/spell.c	/^    idx_T	*sl_kidxs;	\/* keep-case word indexes *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_map_array	src/spell.c	/^    char_u	sl_map_array[256]; \/* MAP for first 256 chars *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_map_array	src/spell.c	/^    int		sl_map_array[256]; \/* MAP for first 256 chars *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_map_hash	src/spell.c	/^    hashtab_T	sl_map_hash;	\/* MAP for multi-byte chars *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_midword	src/spell.c	/^    char_u	*sl_midword;	\/* MIDWORD string or NULL *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_name	src/spell.c	/^    char_u	*sl_name;	\/* language name "en", "en.rare", "nl", etc. *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_next	src/spell.c	/^    slang_T	*sl_next;	\/* next language *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_nobreak	src/spell.c	/^    char_u	sl_nobreak;	\/* When TRUE: no spaces between words *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_nosplitsugs	src/spell.c	/^    int		sl_nosplitsugs;	\/* don't suggest splitting a word *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_pbyts	src/spell.c	/^    char_u	*sl_pbyts;	\/* prefix tree word bytes *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_pidxs	src/spell.c	/^    idx_T	*sl_pidxs;	\/* prefix tree word indexes *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_prefixcnt	src/spell.c	/^    int		sl_prefixcnt;	\/* number of items in "sl_prefprog" *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_prefprog	src/spell.c	/^    regprog_T	**sl_prefprog;	\/* table with regprogs for prefixes *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_regions	src/spell.c	/^    char_u	sl_regions[17];	\/* table with up to 8 region names plus NUL *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_rem_accents	src/spell.c	/^    int		sl_rem_accents;	\/* SAL remove_accents *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_rep	src/spell.c	/^    garray_T	sl_rep;		\/* list of fromto_T entries from REP lines *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_rep_first	src/spell.c	/^    short	sl_rep_first[256];  \/* indexes where byte first appears, -1 if$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_repsal	src/spell.c	/^    garray_T	sl_repsal;	\/* list of fromto_T entries from REPSAL lines *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_repsal_first	src/spell.c	/^    short	sl_repsal_first[256];  \/* sl_rep_first for REPSAL lines *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_sal	src/spell.c	/^    garray_T	sl_sal;		\/* list of salitem_T entries from SAL lines *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_sal_first	src/spell.c	/^    salfirst_T	sl_sal_first[256];  \/* indexes where byte first appears, -1 if$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_sbyts	src/spell.c	/^    char_u	*sl_sbyts;	\/* soundfolded word bytes *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_sidxs	src/spell.c	/^    idx_T	*sl_sidxs;	\/* soundfolded word indexes *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_sofo	src/spell.c	/^    int		sl_sofo;	\/* SOFOFROM and SOFOTO instead of SAL items:$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_sounddone	src/spell.c	/^    hashtab_T	sl_sounddone;	\/* table with soundfolded words that have$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_sugbuf	src/spell.c	/^    buf_T	*sl_sugbuf;	\/* buffer with word number table *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_sugloaded	src/spell.c	/^    int		sl_sugloaded;	\/* TRUE when .sug file was loaded or failed to$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_sugtime	src/spell.c	/^    time_t	sl_sugtime;	\/* timestamp for .sug file *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_syl_items	src/spell.c	/^    garray_T	sl_syl_items;	\/* syllable items *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_syllable	src/spell.c	/^    char_u	*sl_syllable;	\/* SYLLABLE repeatable chars or NULL *\/$/;"	m	struct:slang_S	file:	access:public
slang_S::sl_wordcount	src/spell.c	/^    hashtab_T	sl_wordcount;	\/* hashtable with word count, wordcount_T *\/$/;"	m	struct:slang_S	file:	access:public
slang_T	src/spell.c	/^typedef struct slang_S slang_T;$/;"	t	typeref:struct:slang_S	file:
slang_alloc	src/spell.c	/^slang_alloc(lang)$/;"	f	file:
slang_alloc	src/spell.c	/^static slang_T *slang_alloc __ARGS((char_u *lang));$/;"	p	file:	signature:(char_u *lang)
slang_clear	src/spell.c	/^slang_clear(lp)$/;"	f	file:
slang_clear	src/spell.c	/^static void slang_clear __ARGS((slang_T *lp));$/;"	p	file:	signature:(slang_T *lp)
slang_clear_sug	src/spell.c	/^slang_clear_sug(lp)$/;"	f	file:
slang_clear_sug	src/spell.c	/^static void slang_clear_sug __ARGS((slang_T *lp));$/;"	p	file:	signature:(slang_T *lp)
slang_free	src/spell.c	/^slang_free(lp)$/;"	f	file:
slang_free	src/spell.c	/^static void slang_free __ARGS((slang_T *lp));$/;"	p	file:	signature:(slang_T *lp)
slash_adjust	src/os_msdos.c	/^slash_adjust(char_u *p)$/;"	f	signature:(char_u *p)
slash_adjust	src/os_mswin.c	/^slash_adjust(p)$/;"	f
slash_adjust	src/os_unix.c	/^slash_adjust(p)$/;"	f
sleep	src/dosinst.h	67;"	d
sleep	src/netbeans.c	47;"	d	file:
sm_client_check_changed_any	src/gui_gtk_x11.c	/^sm_client_check_changed_any(GnomeClient	    *client UNUSED,$/;"	f	file:	signature:(GnomeClient *client UNUSED, gint key, GnomeDialogType type UNUSED, gpointer data UNUSED)
sm_client_die	src/gui_gtk_x11.c	/^sm_client_die(GnomeClient *client UNUSED, gpointer data UNUSED)$/;"	f	file:	signature:(GnomeClient *client UNUSED, gpointer data UNUSED)
sm_client_save_yourself	src/gui_gtk_x11.c	/^sm_client_save_yourself(GnomeClient	    *client,$/;"	f	file:	signature:(GnomeClient *client, gint phase UNUSED, GnomeSaveStyle save_style UNUSED, gboolean shutdown UNUSED, GnomeInteractStyle interact_style, gboolean fast UNUSED, gpointer data UNUSED)
sm_gettail	src/ex_getln.c	/^sm_gettail(s)$/;"	f
sm_lead	src/spell.c	/^    char_u	*sm_lead;	\/* leading letters *\/$/;"	m	struct:salitem_S	file:	access:public
sm_lead_w	src/spell.c	/^    int		*sm_lead_w;	\/* wide character copy of "sm_lead" *\/$/;"	m	struct:salitem_S	file:	access:public
sm_leadlen	src/spell.c	/^    int		sm_leadlen;	\/* length of "sm_lead" *\/$/;"	m	struct:salitem_S	file:	access:public
sm_oneof	src/spell.c	/^    char_u	*sm_oneof;	\/* letters from () or NULL *\/$/;"	m	struct:salitem_S	file:	access:public
sm_oneof_w	src/spell.c	/^    int		*sm_oneof_w;	\/* wide character copy of "sm_oneof" *\/$/;"	m	struct:salitem_S	file:	access:public
sm_rules	src/spell.c	/^    char_u	*sm_rules;	\/* rules like ^, $, priority *\/$/;"	m	struct:salitem_S	file:	access:public
sm_to	src/spell.c	/^    char_u	*sm_to;		\/* replacement. *\/$/;"	m	struct:salitem_S	file:	access:public
sm_to_w	src/spell.c	/^    int		*sm_to_w;	\/* wide character copy of "sm_to" *\/$/;"	m	struct:salitem_S	file:	access:public
smcconn	src/os_unix.c	/^    SmcConn smcconn;	    \/* The SM connection ID *\/$/;"	m	struct:__anon65	file:	access:public
smsg	src/message.c	/^smsg __ARGS((char_u *, long, long, long,$/;"	p	file:	signature:(char_u *, long, long, long, long, long, long, long, long, long, long)
smsg	src/message.c	/^smsg(char_u *s, ...)$/;"	f	signature:(char_u *s, ...)
smsg	src/message.c	/^smsg(s, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10)$/;"	f
smsg	src/proto.h	/^smsg __ARGS((char_u *, ...));$/;"	p	signature:(char_u *, ...)
smsg_attr	src/message.c	/^smsg_attr __ARGS((int, char_u *, long, long, long,$/;"	p	file:	signature:(int, char_u *, long, long, long, long, long, long, long, long, long, long)
smsg_attr	src/message.c	/^smsg_attr(attr, s, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10)$/;"	f
smsg_attr	src/message.c	/^smsg_attr(int attr, char_u *s, ...)$/;"	f	signature:(int attr, char_u *s, ...)
smsg_attr	src/proto.h	/^smsg_attr __ARGS((int, char_u *, ...));$/;"	p	signature:(int, char_u *, ...)
sn_cmd	src/if_sniff.c	/^struct sn_cmd$/;"	s	file:
sn_cmd::cmd_code	src/if_sniff.c	/^    char cmd_code;$/;"	m	struct:sn_cmd	file:	access:public
sn_cmd::cmd_msg	src/if_sniff.c	/^    char *cmd_msg;$/;"	m	struct:sn_cmd	file:	access:public
sn_cmd::cmd_name	src/if_sniff.c	/^    char *cmd_name;$/;"	m	struct:sn_cmd	file:	access:public
sn_cmd::cmd_type	src/if_sniff.c	/^    int  cmd_type;$/;"	m	struct:sn_cmd	file:	access:public
sn_cmd_list	src/if_sniff.c	/^struct sn_cmd_list$/;"	s	file:
sn_cmd_list::next_cmd	src/if_sniff.c	/^    struct sn_cmd_list* next_cmd;$/;"	m	struct:sn_cmd_list	typeref:struct:sn_cmd_list::sn_cmd_list	file:	access:public
sn_cmd_list::sniff_cmd	src/if_sniff.c	/^    struct sn_cmd* sniff_cmd;$/;"	m	struct:sn_cmd_list	typeref:struct:sn_cmd_list::sn_cmd	file:	access:public
sn_dev	src/ex_cmds2.c	/^    dev_t	sn_dev;$/;"	m	struct:scriptitem_S	file:	access:public
sn_dev_valid	src/ex_cmds2.c	/^    int		sn_dev_valid;$/;"	m	struct:scriptitem_S	file:	access:public
sn_icon	src/ex_cmds.c	/^    char_u	*sn_icon;	\/* name of pixmap *\/$/;"	m	struct:sign	file:	access:public
sn_image	src/ex_cmds.c	/^    void	*sn_image;	\/* icon image *\/$/;"	m	struct:sign	file:	access:public
sn_ino	src/ex_cmds2.c	/^    ino_t	sn_ino;$/;"	m	struct:scriptitem_S	file:	access:public
sn_line_hl	src/ex_cmds.c	/^    int		sn_line_hl;	\/* highlight ID for line *\/$/;"	m	struct:sign	file:	access:public
sn_name	src/ex_cmds.c	/^    char_u	*sn_name;	\/* name of sign *\/$/;"	m	struct:sign	file:	access:public
sn_name	src/ex_cmds2.c	/^    char_u	*sn_name;$/;"	m	struct:scriptitem_S	file:	access:public
sn_next	src/ex_cmds.c	/^    sign_T	*sn_next;	\/* next sign in list *\/$/;"	m	struct:sign	file:	access:public
sn_pr_child	src/ex_cmds2.c	/^    proftime_T	sn_pr_child;	\/* time set when going into first child *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_pr_children	src/ex_cmds2.c	/^    proftime_T	sn_pr_children; \/* time in children after script start *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_pr_count	src/ex_cmds2.c	/^    int		sn_pr_count;	\/* nr of times sourced *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_pr_force	src/ex_cmds2.c	/^    int		sn_pr_force;	\/* forceit: profile functions in this script *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_pr_nest	src/ex_cmds2.c	/^    int		sn_pr_nest;	\/* nesting for sn_pr_child *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_pr_self	src/ex_cmds2.c	/^    proftime_T	sn_pr_self;	\/* time spent in script itself *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_pr_start	src/ex_cmds2.c	/^    proftime_T	sn_pr_start;	\/* time at script start *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_pr_total	src/ex_cmds2.c	/^    proftime_T	sn_pr_total;	\/* time spent in script + children *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_prl_S	src/ex_cmds2.c	/^typedef struct sn_prl_S$/;"	s	file:
sn_prl_S::sn_prl_self	src/ex_cmds2.c	/^    proftime_T	sn_prl_self;	\/* time spent in a line itself *\/$/;"	m	struct:sn_prl_S	file:	access:public
sn_prl_S::sn_prl_total	src/ex_cmds2.c	/^    proftime_T	sn_prl_total;	\/* time spent in a line + children *\/$/;"	m	struct:sn_prl_S	file:	access:public
sn_prl_S::snp_count	src/ex_cmds2.c	/^    int		snp_count;	\/* nr of times line was executed *\/$/;"	m	struct:sn_prl_S	file:	access:public
sn_prl_T	src/ex_cmds2.c	/^} sn_prl_T;$/;"	t	typeref:struct:sn_prl_S	file:
sn_prl_children	src/ex_cmds2.c	/^    proftime_T	sn_prl_children; \/* time spent in children for this line *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_prl_execed	src/ex_cmds2.c	/^    int		sn_prl_execed;	\/* line being timed was executed *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_prl_ga	src/ex_cmds2.c	/^    garray_T	sn_prl_ga;	\/* things stored for every line *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_prl_idx	src/ex_cmds2.c	/^    int		sn_prl_idx;	\/* index of line being timed; -1 if none *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_prl_self	src/ex_cmds2.c	/^    proftime_T	sn_prl_self;	\/* time spent in a line itself *\/$/;"	m	struct:sn_prl_S	file:	access:public
sn_prl_start	src/ex_cmds2.c	/^    proftime_T	sn_prl_start;	\/* start time for current line *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_prl_total	src/ex_cmds2.c	/^    proftime_T	sn_prl_total;	\/* time spent in a line + children *\/$/;"	m	struct:sn_prl_S	file:	access:public
sn_prl_wait	src/ex_cmds2.c	/^    proftime_T	sn_prl_wait;	\/* wait start time for current line *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_prof_on	src/ex_cmds2.c	/^    int		sn_prof_on;	\/* TRUE when script is\/was profiled *\/$/;"	m	struct:scriptitem_S	file:	access:public
sn_text	src/ex_cmds.c	/^    char_u	*sn_text;	\/* text used instead of pixmap *\/$/;"	m	struct:sign	file:	access:public
sn_text_hl	src/ex_cmds.c	/^    int		sn_text_hl;	\/* highlight ID for text *\/$/;"	m	struct:sign	file:	access:public
sn_typenr	src/ex_cmds.c	/^    int		sn_typenr;	\/* type number of sign (negative if not equal$/;"	m	struct:sign	file:	access:public
sniffBufEnd	src/if_sniff.c	/^static struct sniffBufNode *sniffBufEnd=NULL;$/;"	v	typeref:struct:sniffBufNode	file:
sniffBufNode	src/if_sniff.c	/^struct sniffBufNode$/;"	s	file:
sniffBufNode::buf	src/if_sniff.c	/^    char   buf[MAX_REQUEST_LEN];$/;"	m	struct:sniffBufNode	file:	access:public
sniffBufNode::bufLen	src/if_sniff.c	/^    int    bufLen;$/;"	m	struct:sniffBufNode	file:	access:public
sniffBufNode::next	src/if_sniff.c	/^    struct sniffBufNode *next;$/;"	m	struct:sniffBufNode	typeref:struct:sniffBufNode::sniffBufNode	file:	access:public
sniffBufStart	src/if_sniff.c	/^static struct sniffBufNode *sniffBufStart=NULL;$/;"	v	typeref:struct:sniffBufNode	file:
sniff_cmd	src/if_sniff.c	/^    struct sn_cmd* sniff_cmd;$/;"	m	struct:sn_cmd_list	typeref:struct:sn_cmd_list::sn_cmd	file:	access:public
sniff_cmd_ext	src/if_sniff.c	/^static struct sn_cmd_list *sniff_cmd_ext = NULL;$/;"	v	typeref:struct:sn_cmd_list	file:
sniff_cmds	src/if_sniff.c	/^static struct sn_cmd sniff_cmds[] =$/;"	v	typeref:struct:sn_cmd	file:
sniff_connect	src/if_sniff.c	/^sniff_connect()$/;"	f	file:
sniff_connect	src/if_sniff.c	/^static void sniff_connect __ARGS((void));$/;"	p	file:	signature:(void)
sniff_connected	src/if_sniff.c	/^int sniff_connected = 0;$/;"	v
sniff_disconnect	src/if_sniff.c	/^sniff_disconnect(immediately)$/;"	f
sniff_disconnect	src/if_sniff.h	/^extern void sniff_disconnect __ARGS((int immediately));$/;"	p	signature:(int immediately)
sniff_request_cb	src/gui_gtk_x11.c	/^sniff_request_cb($/;"	f	file:	signature:( gpointer data, gint source_fd, GdkInputCondition condition)
sniff_request_processed	src/if_sniff.c	/^static int  sniff_request_processed=1;$/;"	v	file:
sniff_request_waiting	src/if_sniff.c	/^int sniff_request_waiting = 0;$/;"	v
sniff_rq_sep	src/if_sniff.c	/^static char sniff_rq_sep[] = " ";$/;"	v	file:
sniff_will_disconnect	src/if_sniff.c	/^static int sniff_will_disconnect = 0;$/;"	v	file:
sniffemacs_handle	src/if_sniff.c	/^static HANDLE sniffemacs_handle=NULL;$/;"	v	file:
sniffemacs_pid	src/if_sniff.c	/^static int sniffemacs_pid;$/;"	v	file:
snp_count	src/ex_cmds2.c	/^    int		snp_count;	\/* nr of times line was executed *\/$/;"	m	struct:sn_prl_S	file:	access:public
so	src/if_mzsch.c	/^    Scheme_Object   so;$/;"	m	struct:__anon24	file:	access:public
so	src/if_mzsch.c	/^    Scheme_Object   so;$/;"	m	struct:__anon25	file:	access:public
sock_close	src/netbeans.c	46;"	d	file:
sock_close	src/netbeans.c	63;"	d	file:
sock_read	src/netbeans.c	45;"	d	file:
sock_read	src/netbeans.c	62;"	d	file:
sock_write	src/netbeans.c	44;"	d	file:
sock_write	src/netbeans.c	61;"	d	file:
soffset	src/search.c	/^struct soffset$/;"	s	file:
soffset::dir	src/search.c	/^    int		dir;		\/* search direction, '\/' or '?' *\/$/;"	m	struct:soffset	file:	access:public
soffset::end	src/search.c	/^    int		end;		\/* search set cursor at end *\/$/;"	m	struct:soffset	file:	access:public
soffset::line	src/search.c	/^    int		line;		\/* search has line offset *\/$/;"	m	struct:soffset	file:	access:public
soffset::off	src/search.c	/^    long	off;		\/* line or char offset *\/$/;"	m	struct:soffset	file:	access:public
softspace	src/if_py_both.h	/^    long softspace;$/;"	m	struct:__anon10	access:public
sortFunctions	src/eval.c	/^sortFunctions()$/;"	f	file:
sortFunctions	src/eval.c	/^static void sortFunctions __ARGS(());$/;"	p	file:	signature:()
sort_abort	src/ex_cmds.c	/^static int	sort_abort;		\/* flag to indicate if sorting has been interrupted *\/$/;"	v	file:
sort_compare	src/ex_cmds.c	/^sort_compare __ARGS((const void *s1, const void *s2));$/;"	p	file:	signature:(const void *s1, const void *s2)
sort_compare	src/ex_cmds.c	/^sort_compare(s1, s2)$/;"	f	file:
sort_compare	src/misc2.c	/^sort_compare __ARGS((const void *s1, const void *s2));$/;"	p	file:	signature:(const void *s1, const void *s2)
sort_compare	src/misc2.c	/^sort_compare(s1, s2)$/;"	f	file:
sort_ic	src/ex_cmds.c	/^static int	sort_ic;		\/* ignore case *\/$/;"	v	file:
sort_nr	src/ex_cmds.c	/^static int	sort_nr;		\/* sort on number *\/$/;"	v	file:
sort_rx	src/ex_cmds.c	/^static int	sort_rx;		\/* sort on regex instead of skipping it *\/$/;"	v	file:
sort_strings	src/misc2.c	/^sort_strings(files, count)$/;"	f
sortbuf1	src/ex_cmds.c	/^static char_u	*sortbuf1;$/;"	v	file:
sortbuf2	src/ex_cmds.c	/^static char_u	*sortbuf2;$/;"	v	file:
sortcmp	src/os_amiga.c	/^sortcmp(a, b)$/;"	f	file:
sortcmp	src/os_amiga.c	/^static int sortcmp __ARGS((const void *a, const void *b));$/;"	p	file:	signature:(const void *a, const void *b)
sorti_T	src/ex_cmds.c	/^} sorti_T;$/;"	t	typeref:struct:__anon66	file:
soundalike_score	src/spell.c	/^soundalike_score(goodstart, badstart)$/;"	f	file:
soundalike_score	src/spell.c	/^static int soundalike_score __ARGS((char_u *goodsound, char_u *badsound));$/;"	p	file:	signature:(char_u *goodsound, char_u *badsound)
soundfold_find	src/spell.c	/^soundfold_find(slang, word)$/;"	f	file:
soundfold_find	src/spell.c	/^static int soundfold_find __ARGS((slang_T *slang, char_u *word));$/;"	p	file:	signature:(slang_T *slang, char_u *word)
source_breakpoint	src/ex_cmds2.c	/^source_breakpoint(cookie)$/;"	f
source_callback	src/ex_cmds2.c	/^source_callback(fname, cookie)$/;"	f	file:
source_callback	src/ex_cmds2.c	/^static void source_callback __ARGS((char_u *fname, void *cookie));$/;"	p	file:	signature:(char_u *fname, void *cookie)
source_cookie	src/ex_cmds2.c	/^struct source_cookie$/;"	s	file:
source_cookie::breakpoint	src/ex_cmds2.c	/^    linenr_T	breakpoint;	\/* next line with breakpoint or zero *\/$/;"	m	struct:source_cookie	file:	access:public
source_cookie::conv	src/ex_cmds2.c	/^    vimconv_T	conv;		\/* type of conversion *\/$/;"	m	struct:source_cookie	file:	access:public
source_cookie::dbg_tick	src/ex_cmds2.c	/^    int		dbg_tick;	\/* debug_tick when breakpoint was set *\/$/;"	m	struct:source_cookie	file:	access:public
source_cookie::error	src/ex_cmds2.c	/^    int		error;		\/* TRUE if LF found after CR-LF *\/$/;"	m	struct:source_cookie	file:	access:public
source_cookie::fileformat	src/ex_cmds2.c	/^    int		fileformat;	\/* EOL_UNKNOWN, EOL_UNIX or EOL_DOS *\/$/;"	m	struct:source_cookie	file:	access:public
source_cookie::finished	src/ex_cmds2.c	/^    int		finished;	\/* ":finish" used *\/$/;"	m	struct:source_cookie	file:	access:public
source_cookie::fname	src/ex_cmds2.c	/^    char_u	*fname;		\/* name of sourced file *\/$/;"	m	struct:source_cookie	file:	access:public
source_cookie::fp	src/ex_cmds2.c	/^    FILE	*fp;		\/* opened file for sourcing *\/$/;"	m	struct:source_cookie	file:	access:public
source_cookie::level	src/ex_cmds2.c	/^    int		level;		\/* top nesting level of sourced file *\/$/;"	m	struct:source_cookie	file:	access:public
source_cookie::nextline	src/ex_cmds2.c	/^    char_u      *nextline;      \/* if not NULL: line that was read ahead *\/$/;"	m	struct:source_cookie	file:	access:public
source_dbg_tick	src/ex_cmds2.c	/^source_dbg_tick(cookie)$/;"	f
source_finished	src/ex_cmds2.c	/^source_finished(fgetline, cookie)$/;"	f
source_level	src/ex_cmds2.c	/^source_level(cookie)$/;"	f
source_runtime	src/ex_cmds2.c	/^source_runtime(name, all)$/;"	f
source_startup_scripts	src/main.c	/^source_startup_scripts(parmp)$/;"	f	file:
source_startup_scripts	src/main.c	/^static void source_startup_scripts __ARGS((mparm_T *parmp));$/;"	p	file:	signature:(mparm_T *parmp)
sourcing_lnum	src/globals.h	/^EXTERN linenr_T	sourcing_lnum INIT(= 0);    \/* line number of the source file *\/$/;"	v
sourcing_name	src/globals.h	/^EXTERN char_u	*sourcing_name INIT( = NULL);\/* name of error message source *\/$/;"	v
sp	src/hangulin.c	/^static int sp=0;$/;"	v	file:
sp_cchar	src/syntax.c	/^    int		 sp_cchar;		\/* conceal substitute character *\/$/;"	m	struct:syn_pattern	file:	access:public
sp_color	src/structs.h	/^	    guicolor_T	    sp_color;	\/* special color handle *\/$/;"	m	struct:attr_entry::__anon45::__anon48	access:public
sp_cont_list	src/syntax.c	/^    short	*sp_cont_list;		\/* cont. group IDs, if non-zero *\/$/;"	m	struct:syn_pattern	file:	access:public
sp_flags	src/syntax.c	/^    int		 sp_flags;		\/* see HL_ defines below *\/$/;"	m	struct:syn_pattern	file:	access:public
sp_ic	src/syntax.c	/^    int		 sp_ic;			\/* ignore-case flag for sp_prog *\/$/;"	m	struct:syn_pattern	file:	access:public
sp_line_id	src/syntax.c	/^    int		 sp_line_id;		\/* ID of last line where tried *\/$/;"	m	struct:syn_pattern	file:	access:public
sp_next_list	src/syntax.c	/^    short	*sp_next_list;		\/* next group IDs, if non-zero *\/$/;"	m	struct:syn_pattern	file:	access:public
sp_off_flags	src/syntax.c	/^    short	 sp_off_flags;		\/* see below *\/$/;"	m	struct:syn_pattern	file:	access:public
sp_offsets	src/syntax.c	/^    int		 sp_offsets[SPO_COUNT];	\/* offsets *\/$/;"	m	struct:syn_pattern	file:	access:public
sp_pattern	src/syntax.c	/^    char_u	*sp_pattern;		\/* regexp to match, pattern *\/$/;"	m	struct:syn_pattern	file:	access:public
sp_prog	src/syntax.c	/^    regprog_T	*sp_prog;		\/* regexp to match, program *\/$/;"	m	struct:syn_pattern	file:	access:public
sp_startcol	src/syntax.c	/^    int		 sp_startcol;		\/* next match in sp_line_id line *\/$/;"	m	struct:syn_pattern	file:	access:public
sp_syn	src/structs.h	/^struct sp_syn$/;"	s
sp_syn	src/syntax.c	/^    struct sp_syn sp_syn;		\/* struct passed to in_id_list() *\/$/;"	m	struct:syn_pattern	typeref:struct:syn_pattern::sp_syn	file:	access:public
sp_syn::cont_in_list	src/structs.h	/^    short	*cont_in_list;	\/* cont.in group IDs, if non-zero *\/$/;"	m	struct:sp_syn	access:public
sp_syn::id	src/structs.h	/^    short	id;		\/* highlight group ID of item *\/$/;"	m	struct:sp_syn	access:public
sp_syn::inc_tag	src/structs.h	/^    int		inc_tag;	\/* ":syn include" unique tag *\/$/;"	m	struct:sp_syn	access:public
sp_syn_match_id	src/syntax.c	/^    short	 sp_syn_match_id;	\/* highlight group ID of pattern *\/$/;"	m	struct:syn_pattern	file:	access:public
sp_sync_idx	src/syntax.c	/^    int		 sp_sync_idx;		\/* sync item index (syncing only) *\/$/;"	m	struct:syn_pattern	file:	access:public
sp_syncing	src/syntax.c	/^    char	 sp_syncing;		\/* this item used for syncing *\/$/;"	m	struct:syn_pattern	file:	access:public
sp_type	src/syntax.c	/^    char	 sp_type;		\/* see SPTYPE_ defines below *\/$/;"	m	struct:syn_pattern	file:	access:public
spacing	src/gui_xmebwp.h	/^    Dimension spacing;$/;"	m	struct:_XmEnhancedButtonPart	access:public
spat	src/search.c	/^struct spat$/;"	s	file:
spat::magic	src/search.c	/^    int		    magic;	\/* magicness of the pattern *\/$/;"	m	struct:spat	file:	access:public
spat::no_scs	src/search.c	/^    int		    no_scs;	\/* no smarcase for this pattern *\/$/;"	m	struct:spat	file:	access:public
spat::off	src/search.c	/^    struct soffset  off;$/;"	m	struct:spat	typeref:struct:spat::soffset	file:	access:public
spat::pat	src/search.c	/^    char_u	    *pat;	\/* the pattern (in allocated memory) or NULL *\/$/;"	m	struct:spat	file:	access:public
spats	src/search.c	/^static struct spat spats[2] =$/;"	v	typeref:struct:spat	file:
spcolor	src/gui.h	/^    GdkColor	*spcolor;	    \/* GDK-styled special color *\/$/;"	m	struct:Gui	access:public
specialColor	src/gui_mac.c	/^RGBColor specialColor;$/;"	v
special_key	src/gui_gtk_x11.c	/^static struct special_key$/;"	s	file:
special_key::code0	src/gui_gtk_x11.c	/^    char_u code0;$/;"	m	struct:special_key	file:	access:public
special_key::code1	src/gui_gtk_x11.c	/^    char_u code1;$/;"	m	struct:special_key	file:	access:public
special_key::key_sym	src/gui_gtk_x11.c	/^    guint key_sym;$/;"	m	struct:special_key	file:	access:public
special_keys	src/gui_gtk_x11.c	/^const special_keys[] =$/;"	v	file:
special_keys	src/gui_mac.c	/^} special_keys[] =$/;"	v	typeref:struct:__anon129	file:
special_keys	src/gui_photon.c	/^} special_keys[] =$/;"	v	typeref:struct:__anon7	file:
special_keys	src/gui_w48.c	/^} special_keys[] =$/;"	v	typeref:struct:__anon145	file:
special_keys	src/gui_x11.c	/^} special_keys[] =$/;"	v	typeref:struct:specialkey	file:
special_keys	src/netbeans.c	/^special_keys(char_u *args)$/;"	f	file:	signature:(char_u *args)
special_keys	src/netbeans.c	/^static void special_keys __ARGS((char_u *args));$/;"	p	file:	signature:(char_u *args)
specialkey	src/gui_x11.c	/^static struct specialkey$/;"	s	file:
specialkey::key_sym	src/gui_x11.c	/^    KeySym  key_sym;$/;"	m	struct:specialkey	file:	access:public
specialkey::vim_code0	src/gui_x11.c	/^    char_u  vim_code0;$/;"	m	struct:specialkey	file:	access:public
specialkey::vim_code1	src/gui_x11.c	/^    char_u  vim_code1;$/;"	m	struct:specialkey	file:	access:public
spell_add_word	src/spell.c	/^spell_add_word(word, len, bad, idx, undo)$/;"	f
spell_back_to_badword	src/edit.c	/^spell_back_to_badword()$/;"	f	file:
spell_back_to_badword	src/edit.c	/^static void spell_back_to_badword __ARGS((void));$/;"	p	file:	signature:(void)
spell_bad_len	src/edit.c	/^static int  spell_bad_len = 0;	\/* length of located bad word *\/$/;"	v	file:
spell_casefold	src/spell.c	/^spell_casefold(str, len, buf, buflen)$/;"	f	file:
spell_casefold	src/spell.c	/^static int spell_casefold __ARGS((char_u *p, int len, char_u *buf, int buflen));$/;"	p	file:	signature:(char_u *p, int len, char_u *buf, int buflen)
spell_cat_line	src/spell.c	/^spell_cat_line(buf, line, maxlen)$/;"	f
spell_check	src/spell.c	/^spell_check(wp, ptr, attrp, capcol, docount)$/;"	f
spell_check_msm	src/spell.c	/^spell_check_msm()$/;"	f
spell_check_sps	src/spell.c	/^spell_check_sps()$/;"	f
spell_clear_flags	src/spell.c	/^spell_clear_flags(wordnode_T *node)$/;"	f	file:	signature:(wordnode_T *node)
spell_dump_compl	src/spell.c	/^spell_dump_compl(pat, ic, dir, dumpflags_arg)$/;"	f
spell_edit_score	src/spell.c	/^spell_edit_score(slang, badword, goodword)$/;"	f	file:
spell_edit_score	src/spell.c	/^static int spell_edit_score __ARGS((slang_T *slang, char_u *badword, char_u *goodword));$/;"	p	file:	signature:(slang_T *slang, char_u *badword, char_u *goodword)
spell_edit_score_limit	src/spell.c	/^spell_edit_score_limit(slang, badword, goodword, limit)$/;"	f	file:
spell_edit_score_limit	src/spell.c	/^static int spell_edit_score_limit __ARGS((slang_T *slang, char_u *badword, char_u *goodword, int limit));$/;"	p	file:	signature:(slang_T *slang, char_u *badword, char_u *goodword, int limit)
spell_edit_score_limit_w	src/spell.c	/^spell_edit_score_limit_w(slang, badword, goodword, limit)$/;"	f	file:
spell_edit_score_limit_w	src/spell.c	/^static int spell_edit_score_limit_w __ARGS((slang_T *slang, char_u *badword, char_u *goodword, int limit));$/;"	p	file:	signature:(slang_T *slang, char_u *badword, char_u *goodword, int limit)
spell_enc	src/spell.c	/^spell_enc()$/;"	f	file:
spell_enc	src/spell.c	/^static char_u *spell_enc __ARGS((void));$/;"	p	file:	signature:(void)
spell_expand_check_cap	src/spell.c	/^spell_expand_check_cap(col)$/;"	f
spell_expand_need_cap	src/spell.c	/^static int spell_expand_need_cap;$/;"	v	file:
spell_find_cleanup	src/spell.c	/^spell_find_cleanup(su)$/;"	f	file:
spell_find_cleanup	src/spell.c	/^static void spell_find_cleanup __ARGS((suginfo_T *su));$/;"	p	file:	signature:(suginfo_T *su)
spell_find_suggest	src/spell.c	/^spell_find_suggest(badptr, badlen, su, maxcount, banbadword, need_cap, interactive)$/;"	f	file:
spell_find_suggest	src/spell.c	/^static void spell_find_suggest __ARGS((char_u *badptr, int badlen, suginfo_T *su, int maxcount, int banbadword, int need_cap, int interactive));$/;"	p	file:	signature:(char_u *badptr, int badlen, suginfo_T *su, int maxcount, int banbadword, int need_cap, int interactive)
spell_free_aff	src/spell.c	/^spell_free_aff(aff)$/;"	f	file:
spell_free_aff	src/spell.c	/^static void spell_free_aff __ARGS((afffile_T *aff));$/;"	p	file:	signature:(afffile_T *aff)
spell_free_all	src/spell.c	/^spell_free_all()$/;"	f
spell_info_item	src/spell.c	/^spell_info_item(s)$/;"	f	file:
spell_info_item	src/spell.c	/^static int spell_info_item __ARGS((char_u *s));$/;"	p	file:	signature:(char_u *s)
spell_iswordp	src/spell.c	/^spell_iswordp(p, wp)$/;"	f	file:
spell_iswordp	src/spell.c	/^static int spell_iswordp __ARGS((char_u *p, win_T *wp));$/;"	p	file:	signature:(char_u *p, win_T *wp)
spell_iswordp_nmw	src/spell.c	/^spell_iswordp_nmw(p)$/;"	f	file:
spell_iswordp_nmw	src/spell.c	/^static int spell_iswordp_nmw __ARGS((char_u *p));$/;"	p	file:	signature:(char_u *p)
spell_iswordp_w	src/spell.c	/^spell_iswordp_w(p, wp)$/;"	f	file:
spell_iswordp_w	src/spell.c	/^static int spell_iswordp_w __ARGS((int *p, win_T *wp));$/;"	p	file:	signature:(int *p, win_T *wp)
spell_load_cb	src/spell.c	/^spell_load_cb(fname, cookie)$/;"	f	file:
spell_load_cb	src/spell.c	/^static void spell_load_cb __ARGS((char_u *fname, void *cookie));$/;"	p	file:	signature:(char_u *fname, void *cookie)
spell_load_file	src/spell.c	/^spell_load_file(fname, lang, old_lp, silent)$/;"	f	file:
spell_load_file	src/spell.c	/^static slang_T *spell_load_file __ARGS((char_u *fname, char_u *lang, slang_T *old_lp, int silent));$/;"	p	file:	signature:(char_u *fname, char_u *lang, slang_T *old_lp, int silent)
spell_load_lang	src/spell.c	/^spell_load_lang(lang)$/;"	f	file:
spell_load_lang	src/spell.c	/^static void spell_load_lang __ARGS((char_u *lang));$/;"	p	file:	signature:(char_u *lang)
spell_make_sugfile	src/spell.c	/^spell_make_sugfile(spin, wfname)$/;"	f	file:
spell_make_sugfile	src/spell.c	/^static void spell_make_sugfile __ARGS((spellinfo_T *spin, char_u *wfname));$/;"	p	file:	signature:(spellinfo_T *spin, char_u *wfname)
spell_mb_isword_class	src/spell.c	/^spell_mb_isword_class(cl)$/;"	f	file:
spell_mb_isword_class	src/spell.c	/^static int spell_mb_isword_class __ARGS((int cl));$/;"	p	file:	signature:(int cl)
spell_message	src/spell.c	/^spell_message(spin, str)$/;"	f	file:
spell_message	src/spell.c	/^static void spell_message __ARGS((spellinfo_T *spin, char_u *str));$/;"	p	file:	signature:(spellinfo_T *spin, char_u *str)
spell_move_to	src/spell.c	/^spell_move_to(wp, dir, allwords, curline, attrp)$/;"	f
spell_print_node	src/spell.c	/^spell_print_node(wordnode_T *node, int depth)$/;"	f	file:	signature:(wordnode_T *node, int depth)
spell_print_tree	src/spell.c	/^spell_print_tree(wordnode_T *root)$/;"	f	file:	signature:(wordnode_T *root)
spell_read_aff	src/spell.c	/^spell_read_aff(spin, fname)$/;"	f	file:
spell_read_aff	src/spell.c	/^static afffile_T *spell_read_aff __ARGS((spellinfo_T *spin, char_u *fname));$/;"	p	file:	signature:(spellinfo_T *spin, char_u *fname)
spell_read_dic	src/spell.c	/^spell_read_dic(spin, fname, affile)$/;"	f	file:
spell_read_dic	src/spell.c	/^static int spell_read_dic __ARGS((spellinfo_T *spin, char_u *fname, afffile_T *affile));$/;"	p	file:	signature:(spellinfo_T *spin, char_u *fname, afffile_T *affile)
spell_read_tree	src/spell.c	/^spell_read_tree(fd, bytsp, idxsp, prefixtree, prefixcnt)$/;"	f	file:
spell_read_tree	src/spell.c	/^static int spell_read_tree __ARGS((FILE *fd, char_u **bytsp, idx_T **idxsp, int prefixtree, int prefixcnt));$/;"	p	file:	signature:(FILE *fd, char_u **bytsp, idx_T **idxsp, int prefixtree, int prefixcnt)
spell_read_wordfile	src/spell.c	/^spell_read_wordfile(spin, fname)$/;"	f	file:
spell_read_wordfile	src/spell.c	/^static int spell_read_wordfile __ARGS((spellinfo_T *spin, char_u *fname));$/;"	p	file:	signature:(spellinfo_T *spin, char_u *fname)
spell_redraw_lnum	src/globals.h	/^EXTERN linenr_T		spell_redraw_lnum INIT(= 0);$/;"	v
spell_reload	src/spell.c	/^spell_reload()$/;"	f
spell_reload_one	src/spell.c	/^spell_reload_one(fname, added_word)$/;"	f	file:
spell_reload_one	src/spell.c	/^static void spell_reload_one __ARGS((char_u *fname, int added_word));$/;"	p	file:	signature:(char_u *fname, int added_word)
spell_soundfold	src/spell.c	/^spell_soundfold(slang, inword, folded, res)$/;"	f	file:
spell_soundfold	src/spell.c	/^static void spell_soundfold __ARGS((slang_T *slang, char_u *inword, int folded, char_u *res));$/;"	p	file:	signature:(slang_T *slang, char_u *inword, int folded, char_u *res)
spell_soundfold_sal	src/spell.c	/^spell_soundfold_sal(slang, inword, res)$/;"	f	file:
spell_soundfold_sal	src/spell.c	/^static void spell_soundfold_sal __ARGS((slang_T *slang, char_u *inword, char_u *res));$/;"	p	file:	signature:(slang_T *slang, char_u *inword, char_u *res)
spell_soundfold_sofo	src/spell.c	/^spell_soundfold_sofo(slang, inword, res)$/;"	f	file:
spell_soundfold_sofo	src/spell.c	/^static void spell_soundfold_sofo __ARGS((slang_T *slang, char_u *inword, char_u *res));$/;"	p	file:	signature:(slang_T *slang, char_u *inword, char_u *res)
spell_soundfold_wsal	src/spell.c	/^spell_soundfold_wsal(slang, inword, res)$/;"	f	file:
spell_soundfold_wsal	src/spell.c	/^static void spell_soundfold_wsal __ARGS((slang_T *slang, char_u *inword, char_u *res));$/;"	p	file:	signature:(slang_T *slang, char_u *inword, char_u *res)
spell_suggest	src/spell.c	/^spell_suggest(count)$/;"	f
spell_suggest_expr	src/spell.c	/^spell_suggest_expr(su, expr)$/;"	f	file:
spell_suggest_expr	src/spell.c	/^static void spell_suggest_expr __ARGS((suginfo_T *su, char_u *expr));$/;"	p	file:	signature:(suginfo_T *su, char_u *expr)
spell_suggest_file	src/spell.c	/^spell_suggest_file(su, fname)$/;"	f	file:
spell_suggest_file	src/spell.c	/^static void spell_suggest_file __ARGS((suginfo_T *su, char_u *fname));$/;"	p	file:	signature:(suginfo_T *su, char_u *fname)
spell_suggest_intern	src/spell.c	/^spell_suggest_intern(su, interactive)$/;"	f	file:
spell_suggest_intern	src/spell.c	/^static void spell_suggest_intern __ARGS((suginfo_T *su, int interactive));$/;"	p	file:	signature:(suginfo_T *su, int interactive)
spell_suggest_list	src/spell.c	/^spell_suggest_list(gap, word, maxcount, need_cap, interactive)$/;"	f
spell_to_word_end	src/spell.c	/^spell_to_word_end(start, win)$/;"	f
spell_valid_case	src/spell.c	/^spell_valid_case(wordflags, treeflags)$/;"	f	file:
spell_valid_case	src/spell.c	/^static int spell_valid_case __ARGS((int wordflags, int treeflags));$/;"	p	file:	signature:(int wordflags, int treeflags)
spell_word_start	src/spell.c	/^spell_word_start(startcol)$/;"	f
spellfile#GetDirChoices	runtime/autoload/spellfile.vim	/^function! spellfile#GetDirChoices()$/;"	f
spellfile#LoadFile	runtime/autoload/spellfile.vim	/^function! spellfile#LoadFile(lang)$/;"	f
spellfile#Nread	runtime/autoload/spellfile.vim	/^function! spellfile#Nread(fname)$/;"	f
spellfile#WritableSpellDir	runtime/autoload/spellfile.vim	/^function! spellfile#WritableSpellDir()$/;"	f
spellinfo_S	src/spell.c	/^typedef struct spellinfo_S$/;"	s	file:
spellinfo_S::si_add	src/spell.c	/^    int		si_add;		\/* addition file *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_ascii	src/spell.c	/^    int		si_ascii;	\/* handling only ASCII words *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_blocks	src/spell.c	/^    sblock_T	*si_blocks;	\/* memory blocks used *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_blocks_cnt	src/spell.c	/^    long	si_blocks_cnt;	\/* memory blocks allocated *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_clear_chartab	src/spell.c	/^    int		si_clear_chartab;   \/* when TRUE clear char tables *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_collapse	src/spell.c	/^    int		si_collapse;	\/* soundsalike: ? *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_commonwords	src/spell.c	/^    hashtab_T	si_commonwords;	\/* hashtable for common words *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_compflags	src/spell.c	/^    char_u	*si_compflags;	\/* flags used for compounding *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_compmax	src/spell.c	/^    int		si_compmax;	\/* max nr of words for compounding *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_compminlen	src/spell.c	/^    int		si_compminlen;	\/* minimal length for compounding *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_compoptions	src/spell.c	/^    int		si_compoptions;	\/* COMP_ flags *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_comppat	src/spell.c	/^    garray_T	si_comppat;	\/* CHECKCOMPOUNDPATTERN items, each stored as$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_compress_cnt	src/spell.c	/^    long	si_compress_cnt;    \/* words to add before lowering$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_compsylmax	src/spell.c	/^    int		si_compsylmax;	\/* max nr of syllables for compounding *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_conv	src/spell.c	/^    vimconv_T	si_conv;	\/* for conversion to 'encoding' *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_first_free	src/spell.c	/^    wordnode_T	*si_first_free; \/* List of nodes that have been freed during$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_foldroot	src/spell.c	/^    wordnode_T	*si_foldroot;	\/* tree with case-folded words *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_foldwcount	src/spell.c	/^    long	si_foldwcount;	\/* nr of words in si_foldroot *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_followup	src/spell.c	/^    int		si_followup;	\/* soundsalike: ? *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_free_count	src/spell.c	/^    long	si_free_count;	\/* number of nodes in si_first_free *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_info	src/spell.c	/^    char_u	*si_info;	\/* info text chars or NULL  *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_keeproot	src/spell.c	/^    wordnode_T	*si_keeproot;	\/* tree with keep-case words *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_keepwcount	src/spell.c	/^    long	si_keepwcount;	\/* nr of words in si_keeproot *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_map	src/spell.c	/^    garray_T	si_map;		\/* MAP info concatenated *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_memtot	src/spell.c	/^    int		si_memtot;	\/* runtime memory used *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_midword	src/spell.c	/^    char_u	*si_midword;	\/* MIDWORD chars or NULL  *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_msg_count	src/spell.c	/^    int		si_msg_count;	\/* number of words added since last message *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_newcompID	src/spell.c	/^    int		si_newcompID;	\/* current value for compound ID *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_newprefID	src/spell.c	/^    int		si_newprefID;	\/* current value for ah_newID *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_nobreak	src/spell.c	/^    char_u	si_nobreak;	\/* NOBREAK *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_nosplitsugs	src/spell.c	/^    int		si_nosplitsugs;	\/* NOSPLITSUGS item found *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_nosugfile	src/spell.c	/^    int		si_nosugfile;	\/* NOSUGFILE item found *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_prefcond	src/spell.c	/^    garray_T	si_prefcond;	\/* table with conditions for postponed$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_prefroot	src/spell.c	/^    wordnode_T	*si_prefroot;	\/* tree with postponed prefixes *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_region	src/spell.c	/^    int		si_region;	\/* region mask *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_region_count	src/spell.c	/^    int		si_region_count; \/* number of regions supported (1 when there$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_region_name	src/spell.c	/^    char_u	si_region_name[16]; \/* region names; used only if$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_rem_accents	src/spell.c	/^    int		si_rem_accents;	\/* soundsalike: remove accents *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_rep	src/spell.c	/^    garray_T	si_rep;		\/* list of fromto_T entries from REP lines *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_repsal	src/spell.c	/^    garray_T	si_repsal;	\/* list of fromto_T entries from REPSAL lines *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_sal	src/spell.c	/^    garray_T	si_sal;		\/* list of fromto_T entries from SAL lines *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_sofofr	src/spell.c	/^    char_u	*si_sofofr;	\/* SOFOFROM text *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_sofoto	src/spell.c	/^    char_u	*si_sofoto;	\/* SOFOTO text *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_spellbuf	src/spell.c	/^    buf_T	*si_spellbuf;	\/* buffer used to store soundfold word table *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_sugtime	src/spell.c	/^    time_t	si_sugtime;	\/* timestamp for .sug file *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_sugtree	src/spell.c	/^    long	si_sugtree;	\/* creating the soundfolding trie *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_syllable	src/spell.c	/^    char_u	*si_syllable;	\/* syllable string *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_verbose	src/spell.c	/^    int		si_verbose;	\/* verbose messages *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_S::si_wordnode_nr	src/spell.c	/^    int		si_wordnode_nr;	\/* sequence nr for nodes *\/$/;"	m	struct:spellinfo_S	file:	access:public
spellinfo_T	src/spell.c	/^} spellinfo_T;$/;"	t	typeref:struct:spellinfo_S	file:
spelload_S	src/spell.c	/^typedef struct spelload_S$/;"	s	file:
spelload_S::sl_lang	src/spell.c	/^    char_u  sl_lang[MAXWLEN + 1];	\/* language name *\/$/;"	m	struct:spelload_S	file:	access:public
spelload_S::sl_nobreak	src/spell.c	/^    int	    sl_nobreak;			\/* NOBREAK language found *\/$/;"	m	struct:spelload_S	file:	access:public
spelload_S::sl_slang	src/spell.c	/^    slang_T *sl_slang;			\/* resulting slang_T struct *\/$/;"	m	struct:spelload_S	file:	access:public
spelload_T	src/spell.c	/^} spelload_T;$/;"	t	typeref:struct:spelload_S	file:
spelltab	src/spell.c	/^static spelltab_T   spelltab;$/;"	v	file:
spelltab_S	src/spell.c	/^typedef struct spelltab_S$/;"	s	file:
spelltab_S::st_fold	src/spell.c	/^    char_u  st_fold[256];	\/* chars: folded case *\/$/;"	m	struct:spelltab_S	file:	access:public
spelltab_S::st_isu	src/spell.c	/^    char_u  st_isu[256];	\/* flags: is uppercase char *\/$/;"	m	struct:spelltab_S	file:	access:public
spelltab_S::st_isw	src/spell.c	/^    char_u  st_isw[256];	\/* flags: is word char *\/$/;"	m	struct:spelltab_S	file:	access:public
spelltab_S::st_upper	src/spell.c	/^    char_u  st_upper[256];	\/* chars: upper case *\/$/;"	m	struct:spelltab_S	file:	access:public
spelltab_T	src/spell.c	/^} spelltab_T;$/;"	t	typeref:struct:spelltab_S	file:
split	src/structs.h	/^    int		split;			\/* flags for win_split() *\/$/;"	m	struct:__anon42	access:public
split_button_string	src/gui_gtk.c	/^split_button_string(char_u *button_string, int *n_buttons)$/;"	f	file:	signature:(char_u *button_string, int *n_buttons)
split_button_translation	src/gui_gtk.c	/^split_button_translation(const char *message)$/;"	f	file:	signature:(const char *message)
spo_name_tab	src/syntax.c	/^static char *(spo_name_tab[SPO_COUNT]) =$/;"	v	file:
sps_flags	src/spell.c	/^static int sps_flags = SPS_BEST;	\/* flags from 'spellsuggest' *\/$/;"	v	file:
sps_limit	src/spell.c	/^static int sps_limit = 9999;		\/* max nr of suggestions given *\/$/;"	v	file:
sqlcomplete#Complete	runtime/autoload/sqlcomplete.vim	/^function! sqlcomplete#Complete(findstart, base)$/;"	f
sqlcomplete#DrillIntoTable	runtime/autoload/sqlcomplete.vim	/^function! sqlcomplete#DrillIntoTable()$/;"	f
sqlcomplete#DrillOutOfColumns	runtime/autoload/sqlcomplete.vim	/^function! sqlcomplete#DrillOutOfColumns()$/;"	f
sqlcomplete#Map	runtime/autoload/sqlcomplete.vim	/^function! sqlcomplete#Map(type)$/;"	f
sqlcomplete#PreCacheSyntax	runtime/autoload/sqlcomplete.vim	/^function! sqlcomplete#PreCacheSyntax(...)$/;"	f
sqlcomplete#ResetCacheSyntax	runtime/autoload/sqlcomplete.vim	/^function! sqlcomplete#ResetCacheSyntax(...)$/;"	f
srcdir	src/Makefile	/^	-@srcdir=`pwd`; cd $(HELPSOURCE); $(MAKE) VIMEXE=$$srcdir\/$(VIMTARGET) vimtags$/;"	m
srcdir	src/Makefile	/^	srcdir=`pwd`; $(MAKE) -f Makefile installruntime \\$/;"	m
srcdir	src/auto/config.mk	/^srcdir		= .$/;"	m
ssop_flags	src/option.h	/^EXTERN unsigned	ssop_flags;$/;"	v
sst_change_lnum	src/structs.h	/^    linenr_T	sst_change_lnum;\/* when non-zero, change in this line$/;"	m	struct:syn_state	access:public
sst_ga	src/structs.h	/^	garray_T	sst_ga;	\/* growarray for long state stack *\/$/;"	m	union:syn_state::__anon44	access:public
sst_lnum	src/structs.h	/^    linenr_T	sst_lnum;	\/* line number for this state *\/$/;"	m	struct:syn_state	access:public
sst_next	src/structs.h	/^    synstate_T	*sst_next;	\/* next entry in used or free list *\/$/;"	m	struct:syn_state	access:public
sst_next_flags	src/structs.h	/^    int		sst_next_flags;	\/* flags for sst_next_list *\/$/;"	m	struct:syn_state	access:public
sst_next_list	src/structs.h	/^    short	*sst_next_list;	\/* "nextgroup" list in this state$/;"	m	struct:syn_state	access:public
sst_stack	src/structs.h	/^	bufstate_T	sst_stack[SST_FIX_STATES]; \/* short state stack *\/$/;"	m	union:syn_state::__anon44	access:public
sst_stacksize	src/structs.h	/^    int		sst_stacksize;	\/* number of states on the stack *\/$/;"	m	struct:syn_state	access:public
sst_tick	src/structs.h	/^    disptick_T	sst_tick;	\/* tick when last displayed *\/$/;"	m	struct:syn_state	access:public
sst_union	src/structs.h	/^    } sst_union;$/;"	m	struct:syn_state	typeref:union:syn_state::__anon44	access:public
st_altscore	src/spell.c	/^    int		st_altscore;	\/* used when st_score compares equal *\/$/;"	m	struct:suggest_S	file:	access:public
st_dev	src/if_cscope.h	/^    dev_t	    st_dev;	\/* ID of dev containing cscope db *\/$/;"	m	struct:csi	access:public
st_fold	src/spell.c	/^    char_u  st_fold[256];	\/* chars: folded case *\/$/;"	m	struct:spelltab_S	file:	access:public
st_had_bonus	src/spell.c	/^    int		st_had_bonus;	\/* bonus already included in score *\/$/;"	m	struct:suggest_S	file:	access:public
st_ino	src/if_cscope.h	/^    ino_t	    st_ino;	\/* inode number of cscope db *\/$/;"	m	struct:csi	access:public
st_isu	src/spell.c	/^    char_u  st_isu[256];	\/* flags: is uppercase char *\/$/;"	m	struct:spelltab_S	file:	access:public
st_isw	src/spell.c	/^    char_u  st_isw[256];	\/* flags: is word char *\/$/;"	m	struct:spelltab_S	file:	access:public
st_orglen	src/spell.c	/^    int		st_orglen;	\/* length of replaced text *\/$/;"	m	struct:suggest_S	file:	access:public
st_salscore	src/spell.c	/^    int		st_salscore;	\/* st_score is for soundalike *\/$/;"	m	struct:suggest_S	file:	access:public
st_score	src/spell.c	/^    int		st_score;	\/* lower is better *\/$/;"	m	struct:suggest_S	file:	access:public
st_slang	src/spell.c	/^    slang_T	*st_slang;	\/* language used for sound folding *\/$/;"	m	struct:suggest_S	file:	access:public
st_upper	src/spell.c	/^    char_u  st_upper[256];	\/* chars: upper case *\/$/;"	m	struct:spelltab_S	file:	access:public
st_word	src/spell.c	/^    char_u	*st_word;	\/* suggested word, allocated string *\/$/;"	m	struct:suggest_S	file:	access:public
st_wordlen	src/spell.c	/^    int		st_wordlen;	\/* STRLEN(st_word) *\/$/;"	m	struct:suggest_S	file:	access:public
stack	src/hangulin.c	/^static char_u stack[20] = {0};$/;"	v	file:
stack_base	src/if_mzsch.c	/^static void *stack_base = NULL;$/;"	v	file:
stack_grows_downwards	src/os_unix.c	/^static int stack_grows_downwards;$/;"	v	file:
stack_limit	src/os_unix.c	/^static char *stack_limit = NULL;$/;"	v	file:
standend	src/os_win32.c	/^standend(void)$/;"	f	file:	signature:(void)
standend	src/os_win32.c	/^static void standend(void);$/;"	p	file:	signature:(void)
standout	src/os_win32.c	/^standout(void)$/;"	f	file:	signature:(void)
standout	src/os_win32.c	/^static void standout(void);$/;"	p	file:	signature:(void)
start	src/fold.c	/^    int		start;		\/* number of folds that are forced to start at$/;"	m	struct:__anon98	file:	access:public
start	src/if_py_both.h	/^    PyInt start;$/;"	m	struct:__anon13	access:public
start	src/structs.h	/^	    char_u	    *start;	\/* start escape sequence *\/$/;"	m	struct:attr_entry::__anon45::__anon46	access:public
start	src/structs.h	/^    char_u	*start;$/;"	m	struct:stl_hlrec	access:public
start	src/structs.h	/^    pos_T	start;		\/* start of the operator *\/$/;"	m	struct:oparg_S	access:public
start	src/vim.h	/^    pos_T	start;		\/* Start of selected area *\/$/;"	m	struct:VimClipboard	access:public
startPS	src/search.c	/^startPS(lnum, para, both)$/;"	f
startRange	src/gui_mac.c	/^    long startRange; \/\/ start of selection range (if line < 0)$/;"	m	struct:SelectionRange	file:	access:public
start_arrow	src/edit.c	/^start_arrow(end_insert_pos)$/;"	f	file:
start_arrow	src/edit.c	/^static void start_arrow __ARGS((pos_T *end_insert_pos));$/;"	p	file:	signature:(pos_T *end_insert_pos)
start_char_vcols	src/ops.c	/^    colnr_T	start_char_vcols; \/* number of vcols of pre-block char *\/$/;"	m	struct:block_def	file:	access:public
start_col_nr	src/ex_cmds.c	/^    long	start_col_nr;		\/* starting column number or number *\/$/;"	m	struct:__anon66	file:	access:public
start_redo	src/getchar.c	/^start_redo(count, old_redo)$/;"	f
start_redo_ins	src/getchar.c	/^start_redo_ins()$/;"	f
start_search_hl	src/screen.c	/^start_search_hl()$/;"	f	file:
start_search_hl	src/screen.c	/^static void start_search_hl __ARGS((void));$/;"	p	file:	signature:(void)
start_selection	src/normal.c	/^start_selection()$/;"	f
start_stuff	src/getchar.c	/^start_stuff()$/;"	f	file:
start_stuff	src/getchar.c	/^static void	start_stuff __ARGS((void));$/;"	p	file:	signature:(void)
start_vcol	src/ops.c	/^    colnr_T	start_vcol;	\/* start col of 1st char wholly inside block *\/$/;"	m	struct:block_def	file:	access:public
start_vcol	src/structs.h	/^    colnr_T	start_vcol;	\/* start col for block mode operator *\/$/;"	m	struct:oparg_S	access:public
start_xterm_trace	src/os_unix.c	/^start_xterm_trace(button)$/;"	f
startcol	src/structs.h	/^    colnr_T	startcol; \/* in win_line() points to char where HL starts *\/$/;"	m	struct:__anon56	access:public
starting	src/globals.h	/^EXTERN int	starting INIT(= NO_SCREEN);$/;"	v
starting	src/gui.h	/^    int		starting;	    \/* GUI will start in a little while *\/$/;"	m	struct:Gui	access:public
startline	src/po/check.vim	/^let startline = line('.')$/;"	v
startp	src/regexp.h	/^    char_u		*startp[NSUBEXP];$/;"	m	struct:__anon72	access:public
startpos	src/regexp.h	/^    lpos_T		startpos[NSUBEXP];$/;"	m	struct:__anon73	access:public
startspaces	src/ops.c	/^    int		startspaces;	\/* 'extra' cols before first char *\/$/;"	m	struct:block_def	file:	access:public
starttermcap	src/term.c	/^starttermcap()$/;"	f
starttime	src/globals.h	/^EXTERN time_t starttime;$/;"	v
startup_mzscheme	src/if_mzsch.c	/^startup_mzscheme(void)$/;"	f	file:	signature:(void)
startup_mzscheme	src/if_mzsch.c	/^static void startup_mzscheme(void);$/;"	p	file:	signature:(void)
stat	src/vim.h	1915;"	d
statDone	src/gui_at_fs.c	/^    int		statDone;$/;"	m	struct:__anon113	file:	access:public
state	src/gui_beval.h	/^    unsigned int	state;		\/* Button\/Modifier key state *\/$/;"	m	struct:BalloonEvalStruct	access:public
state	src/structs.h	/^  UINT32_T state[8];$/;"	m	struct:__anon63	access:public
state	src/vim.h	/^    short_u	state;		\/* Current selection state *\/$/;"	m	struct:VimClipboard	access:public
state_T	src/spell.c	/^} state_T;$/;"	t	typeref:enum:__anon14	file:
state_item	src/syntax.c	/^typedef struct state_item$/;"	s	file:
state_item::si_attr	src/syntax.c	/^    int		si_attr;		\/* attributes in this state *\/$/;"	m	struct:state_item	file:	access:public
state_item::si_cchar	src/syntax.c	/^    int		si_cchar;		\/* substitution character for conceal *\/$/;"	m	struct:state_item	file:	access:public
state_item::si_cont_list	src/syntax.c	/^    short	*si_cont_list;		\/* list of contained groups *\/$/;"	m	struct:state_item	file:	access:public
state_item::si_end_idx	src/syntax.c	/^    int		si_end_idx;		\/* group ID for end pattern or zero *\/$/;"	m	struct:state_item	file:	access:public
state_item::si_ends	src/syntax.c	/^    int		si_ends;		\/* if match ends before si_m_endpos *\/$/;"	m	struct:state_item	file:	access:public
state_item::si_eoe_pos	src/syntax.c	/^    lpos_T	si_eoe_pos;		\/* end position of end pattern *\/$/;"	m	struct:state_item	file:	access:public
state_item::si_extmatch	src/syntax.c	/^    reg_extmatch_T *si_extmatch;	\/* \\z(...\\) matches from start$/;"	m	struct:state_item	file:	access:public
state_item::si_flags	src/syntax.c	/^    long	si_flags;		\/* HL_HAS_EOL flag in this state, and$/;"	m	struct:state_item	file:	access:public
state_item::si_h_endpos	src/syntax.c	/^    lpos_T	si_h_endpos;		\/* end position of the highlighting *\/$/;"	m	struct:state_item	file:	access:public
state_item::si_h_startpos	src/syntax.c	/^    lpos_T	si_h_startpos;		\/* start position of the highlighting *\/$/;"	m	struct:state_item	file:	access:public
state_item::si_id	src/syntax.c	/^    int		si_id;			\/* highlight group ID for keywords *\/$/;"	m	struct:state_item	file:	access:public
state_item::si_idx	src/syntax.c	/^    int		si_idx;			\/* index of syntax pattern or$/;"	m	struct:state_item	file:	access:public
state_item::si_m_endpos	src/syntax.c	/^    lpos_T	si_m_endpos;		\/* just after end posn of the match *\/$/;"	m	struct:state_item	file:	access:public
state_item::si_m_lnum	src/syntax.c	/^    int		si_m_lnum;		\/* lnum of the match *\/$/;"	m	struct:state_item	file:	access:public
state_item::si_m_startcol	src/syntax.c	/^    int		si_m_startcol;		\/* starting column of the match *\/$/;"	m	struct:state_item	file:	access:public
state_item::si_next_list	src/syntax.c	/^    short	*si_next_list;		\/* nextgroup IDs after this item ends *\/$/;"	m	struct:state_item	file:	access:public
state_item::si_seqnr	src/syntax.c	/^    int		si_seqnr;		\/* sequence number *\/$/;"	m	struct:state_item	file:	access:public
state_item::si_trans_id	src/syntax.c	/^    int		si_trans_id;		\/* idem, transparency removed *\/$/;"	m	struct:state_item	file:	access:public
stateitem_T	src/syntax.c	/^} stateitem_T;$/;"	t	typeref:struct:state_item	file:
static	src/gui_gtk_x11.c	2325;"	d	file:
static	src/gui_gtk_x11.c	2335;"	d	file:
status_area_enabled	src/mbyte.c	/^static int	status_area_enabled = TRUE;$/;"	v	file:
status_height	src/gui.h	/^    int		status_height;	\/* Height of status line *\/$/;"	m	struct:GuiScrollbar	access:public
status_match_len	src/screen.c	/^static int status_match_len __ARGS((expand_T *xp, char_u *s));$/;"	p	file:	signature:(expand_T *xp, char_u *s)
status_match_len	src/screen.c	/^status_match_len(xp, s)$/;"	f	file:
status_redraw_all	src/screen.c	/^status_redraw_all()$/;"	f
status_redraw_curbuf	src/screen.c	/^status_redraw_curbuf()$/;"	f
stdout_isatty	src/main.c	/^    int		stdout_isatty;		\/* is stdout a terminal? *\/$/;"	m	struct:__anon9	file:	access:public
step	src/mbyte.c	/^    int step;$/;"	m	struct:__anon136	file:	access:public
stepmatch	runtime/ftplugin/cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
steps	runtime/ftplugin/cucumber.vim	/^function! s:steps(lnum)$/;"	f
stipple_bitmap	src/gui_xmebwp.h	/^    Pixmap stipple_bitmap;$/;"	m	struct:_XmEnhancedButtonClassPart	access:public
stipple_bits	src/gui_xmebw.c	/^static char stipple_bits[] = { 0x0a, 0x05, 0x0a, 0x05 };$/;"	v	file:
stipple_height	src/gui_xmebw.c	106;"	d	file:
stipple_width	src/gui_xmebw.c	105;"	d	file:
stl_connected	src/screen.c	/^stl_connected(wp)$/;"	f
stl_hlrec	src/structs.h	/^struct stl_hlrec$/;"	s
stl_hlrec::start	src/structs.h	/^    char_u	*start;$/;"	m	struct:stl_hlrec	access:public
stl_hlrec::userhl	src/structs.h	/^    int		userhl;		\/* 0: no HL, 1-9: User HL, < 0 for syn ID *\/$/;"	m	struct:stl_hlrec	access:public
stl_syntax	src/globals.h	/^EXTERN int      stl_syntax INIT(= 0);$/;"	v
stock_vim_build_tags	pixmaps/stock_icons.h	/^static const guint8 stock_vim_build_tags[] =$/;"	v
stock_vim_find_help	pixmaps/stock_icons.h	/^static const guint8 stock_vim_find_help[] =$/;"	v
stock_vim_save_all	pixmaps/stock_icons.h	/^static const guint8 stock_vim_save_all[] =$/;"	v
stock_vim_session_load	pixmaps/stock_icons.h	/^static const guint8 stock_vim_session_load[] =$/;"	v
stock_vim_session_new	pixmaps/stock_icons.h	/^static const guint8 stock_vim_session_new[] =$/;"	v
stock_vim_session_save	pixmaps/stock_icons.h	/^static const guint8 stock_vim_session_save[] =$/;"	v
stock_vim_shell	pixmaps/stock_icons.h	/^static const guint8 stock_vim_shell[] =$/;"	v
stock_vim_window_maximize	pixmaps/stock_icons.h	/^static const guint8 stock_vim_window_maximize[] =$/;"	v
stock_vim_window_maximize_width	pixmaps/stock_icons.h	/^static const guint8 stock_vim_window_maximize_width[] =$/;"	v
stock_vim_window_minimize	pixmaps/stock_icons.h	/^static const guint8 stock_vim_window_minimize[] =$/;"	v
stock_vim_window_minimize_width	pixmaps/stock_icons.h	/^static const guint8 stock_vim_window_minimize_width[] =$/;"	v
stock_vim_window_split	pixmaps/stock_icons.h	/^static const guint8 stock_vim_window_split[] =$/;"	v
stock_vim_window_split_vertical	pixmaps/stock_icons.h	/^static const guint8 stock_vim_window_split_vertical[] =$/;"	v
stoggle_callback	src/gui_xmdlg.c	/^stoggle_callback(Widget w UNUSED,$/;"	f	file:	signature:(Widget w UNUSED, SharedFontSelData *data, XmToggleButtonCallbackStruct *call_data)
stop	src/structs.h	/^	    char_u	    *stop;	\/* stop escape sequence *\/$/;"	m	struct:attr_entry::__anon45::__anon46	access:public
stop_arrow	src/edit.c	/^stop_arrow()$/;"	f
stop_insert	src/edit.c	/^static void stop_insert __ARGS((pos_T *end_insert_pos, int esc));$/;"	p	file:	signature:(pos_T *end_insert_pos, int esc)
stop_insert	src/edit.c	/^stop_insert(end_insert_pos, esc)$/;"	f	file:
stop_insert_mode	src/globals.h	/^EXTERN int	stop_insert_mode;	\/* for ":stopinsert" and 'insertmode' *\/$/;"	v
stop_redo_ins	src/getchar.c	/^stop_redo_ins()$/;"	f
stop_xterm_trace	src/os_unix.c	/^stop_xterm_trace()$/;"	f
stoptermcap	src/term.c	/^stoptermcap()$/;"	f
store_aff_word	src/spell.c	/^static int store_aff_word __ARGS((spellinfo_T *spin, char_u *word, char_u *afflist, afffile_T *affile, hashtab_T *ht, hashtab_T *xht, int condit, int flags, char_u *pfxlist, int pfxlen));$/;"	p	file:	signature:(spellinfo_T *spin, char_u *word, char_u *afflist, afffile_T *affile, hashtab_T *ht, hashtab_T *xht, int condit, int flags, char_u *pfxlist, int pfxlen)
store_aff_word	src/spell.c	/^store_aff_word(spin, word, afflist, affile, ht, xht, condit, flags,$/;"	f	file:
store_current_state	src/syntax.c	/^static synstate_T *store_current_state __ARGS((void));$/;"	p	file:	signature:(void)
store_current_state	src/syntax.c	/^store_current_state()$/;"	f	file:
store_loop_line	src/ex_docmd.c	/^static int	store_loop_line __ARGS((garray_T *gap, char_u *line));$/;"	p	file:	signature:(garray_T *gap, char_u *line)
store_loop_line	src/ex_docmd.c	/^store_loop_line(gap, line)$/;"	f	file:
store_sb_text	src/message.c	/^static void store_sb_text __ARGS((char_u **sb_str, char_u *s, int attr, int *sb_col, int finish));$/;"	p	file:	signature:(char_u **sb_str, char_u *s, int attr, int *sb_col, int finish)
store_sb_text	src/message.c	/^store_sb_text(sb_str, s, attr, sb_col, finish)$/;"	f	file:
store_session_globals	src/eval.c	/^store_session_globals(fd)$/;"	f
store_word	src/spell.c	/^static int store_word __ARGS((spellinfo_T *spin, char_u *word, int flags, int region, char_u *pfxlist, int need_affix));$/;"	p	file:	signature:(spellinfo_T *spin, char_u *word, int flags, int region, char_u *pfxlist, int need_affix)
store_word	src/spell.c	/^store_word(spin, word, flags, region, pfxlist, need_affix)$/;"	f	file:
stp_sal_score	src/spell.c	/^static int stp_sal_score __ARGS((suggest_T *stp, suginfo_T *su, slang_T *slang, char_u *badsound));$/;"	p	file:	signature:(suggest_T *stp, suginfo_T *su, slang_T *slang, char_u *badsound)
stp_sal_score	src/spell.c	/^stp_sal_score(stp, su, slang, badsound)$/;"	f	file:
str	src/testdir/test60.vim	/^let str = "script"$/;"	v
str2special	src/message.c	/^str2special(sp, from)$/;"	f
str2specialbuf	src/message.c	/^str2specialbuf(sp, buf, len)$/;"	f
str_equal	src/spell.c	/^static int str_equal __ARGS((char_u *s1, char_u	*s2));$/;"	p	file:	signature:(char_u *s1, char_u *s2)
str_equal	src/spell.c	/^str_equal(s1, s2)$/;"	f	file:
str_foldcase	src/charset.c	/^str_foldcase(str, orglen, buf, buflen)$/;"	f
str_to_reg	src/ops.c	/^static void	str_to_reg __ARGS((struct yankreg *y_ptr, int type, char_u *str, long len, long blocklen));$/;"	p	file:	signature:(struct yankreg *y_ptr, int type, char_u *str, long len, long blocklen)
str_to_reg	src/ops.c	/^str_to_reg(y_ptr, type, str, len, blocklen)$/;"	f	file:
streq	src/netbeans.c	1376;"	d	file:
strerror	src/os_unix.c	/^static char *strerror __ARGS((int));$/;"	p	file:	signature:(int)
strerror	src/os_unix.c	/^strerror(err)$/;"	f	file:
string	src/hardcopy.c	/^    char	*string;$/;"	m	struct:prt_dsc_comment_S	file:	access:public
string	src/hardcopy.c	/^    char_u	*string;$/;"	m	struct:prt_dsc_line_S	file:	access:public
string	src/os_vms.c	/^    ITEM	string;$/;"	m	struct:__anon80	file:	access:public
string	src/structs.h	/^    char_u	*string;	\/* points into option string *\/$/;"	m	struct:__anon58	access:public
string2float	src/eval.c	/^static int string2float __ARGS((char_u *text, float_T *value));$/;"	p	file:	signature:(char_u *text, float_T *value)
string2float	src/eval.c	/^string2float(text, value)$/;"	f	file:
string_convert	src/mbyte.c	/^string_convert(vcp, ptr, lenp)$/;"	f
string_convert_ext	src/mbyte.c	/^string_convert_ext(vcp, ptr, lenp, unconvlenp)$/;"	f
string_quote	src/eval.c	/^static char_u *string_quote __ARGS((char_u *str, int function));$/;"	p	file:	signature:(char_u *str, int function)
string_quote	src/eval.c	/^string_quote(str, function)$/;"	f	file:
string_to_key	src/option.c	/^static int string_to_key __ARGS((char_u *arg));$/;"	p	file:	signature:(char_u *arg)
string_to_key	src/option.c	/^string_to_key(arg)$/;"	f	file:
string_to_line	src/if_mzsch.c	/^static char *string_to_line(Scheme_Object *obj);$/;"	p	file:	signature:(Scheme_Object *obj)
string_to_line	src/if_mzsch.c	/^string_to_line(Scheme_Object *obj)$/;"	f	file:	signature:(Scheme_Object *obj)
strings	src/if_xcmdsrv.c	/^    garray_T strings;$/;"	m	struct:ServerReply	file:	access:public
strings	src/structs.h	/^    char_u	*strings[MENU_MODES]; \/* Mapped string for each mode *\/$/;"	m	struct:VimMenu	access:public
strip	runtime/indent/bst.vim	/^function! s:strip(lnum)$/;"	f
stripped	runtime/indent/cobol.vim	/^function! s:stripped(lnum)$/;"	f
strlen	src/structs.h	/^    int		strlen;$/;"	m	struct:__anon58	access:public
strtol	src/xxd/xxd.c	/^extern long int strtol();$/;"	p	file:
struct_bf_test_data	src/blowfish.c	/^} struct_bf_test_data;$/;"	t	typeref:struct:__anon122	file:
strup_save	src/misc2.c	/^strup_save(orig)$/;"	f
stubs_initialized	src/if_tcl.c	/^static int stubs_initialized = FALSE;$/;"	v	file:
stuffReadbuff	src/getchar.c	/^stuffReadbuff(s)$/;"	f
stuffReadbuffLen	src/getchar.c	/^stuffReadbuffLen(s, len)$/;"	f
stuffReadbuffSpec	src/getchar.c	/^stuffReadbuffSpec(s)$/;"	f
stuff_empty	src/getchar.c	/^stuff_empty()$/;"	f
stuff_inserted	src/edit.c	/^stuff_inserted(c, count, no_esc)$/;"	f
stuff_yank	src/ops.c	/^static int	stuff_yank __ARGS((int, char_u *));$/;"	p	file:	signature:(int, char_u *)
stuff_yank	src/ops.c	/^stuff_yank(regname, p)$/;"	f	file:
stuffbuff	src/globals.h	/^EXTERN struct buffheader stuffbuff	\/* stuff buffer *\/$/;"	v	typeref:struct:buffheader
stuffcharReadbuff	src/getchar.c	/^stuffcharReadbuff(c)$/;"	f
stuffescaped	src/ops.c	/^static void	stuffescaped __ARGS((char_u *arg, int literally));$/;"	p	file:	signature:(char_u *arg, int literally)
stuffescaped	src/ops.c	/^stuffescaped(arg, literally)$/;"	f	file:
stuffnumReadbuff	src/getchar.c	/^stuffnumReadbuff(n)$/;"	f
style	src/gui_mac.c	/^    FMFontStyle style;$/;"	m	struct:__anon128	file:	access:public
style_callback	src/gui_xmdlg.c	/^style_callback(Widget w,$/;"	f	file:	signature:(Widget w, SharedFontSelData *data, XmListCallbackStruct *call_data)
style_part	src/gui_xmdlg.c	/^style_part(char *font, char *buf)$/;"	f	file:	signature:(char *font, char *buf)
su_badflags	src/spell.c	/^    int		su_badflags;	    \/* caps flags for bad word *\/$/;"	m	struct:suginfo_S	file:	access:public
su_badlen	src/spell.c	/^    int		su_badlen;	    \/* length of detected bad word in line *\/$/;"	m	struct:suginfo_S	file:	access:public
su_badptr	src/spell.c	/^    char_u	*su_badptr;	    \/* start of bad word in line *\/$/;"	m	struct:suginfo_S	file:	access:public
su_badword	src/spell.c	/^    char_u	su_badword[MAXWLEN]; \/* bad word truncated at su_badlen *\/$/;"	m	struct:suginfo_S	file:	access:public
su_banned	src/spell.c	/^    hashtab_T	su_banned;	    \/* table with banned words *\/$/;"	m	struct:suginfo_S	file:	access:public
su_fbadword	src/spell.c	/^    char_u	su_fbadword[MAXWLEN]; \/* su_badword case-folded *\/$/;"	m	struct:suginfo_S	file:	access:public
su_ga	src/spell.c	/^    garray_T	su_ga;		    \/* suggestions, contains "suggest_T" *\/$/;"	m	struct:suginfo_S	file:	access:public
su_maxcount	src/spell.c	/^    int		su_maxcount;	    \/* max. number of suggestions displayed *\/$/;"	m	struct:suginfo_S	file:	access:public
su_maxscore	src/spell.c	/^    int		su_maxscore;	    \/* maximum score for adding to su_ga *\/$/;"	m	struct:suginfo_S	file:	access:public
su_sal_badword	src/spell.c	/^    char_u	su_sal_badword[MAXWLEN]; \/* su_badword soundfolded *\/$/;"	m	struct:suginfo_S	file:	access:public
su_sallang	src/spell.c	/^    slang_T	*su_sallang;	    \/* default language for sound folding *\/$/;"	m	struct:suginfo_S	file:	access:public
su_sfmaxscore	src/spell.c	/^    int		su_sfmaxscore;	    \/* idem, for when doing soundfold words *\/$/;"	m	struct:suginfo_S	file:	access:public
su_sga	src/spell.c	/^    garray_T	su_sga;		    \/* like su_ga, sound-folded scoring *\/$/;"	m	struct:suginfo_S	file:	access:public
sub_nlines	src/globals.h	/^EXTERN linenr_T	sub_nlines;	\/* total number of lines changed *\/$/;"	v
sub_nsubs	src/globals.h	/^EXTERN long	sub_nsubs;	\/* total number of substitutions *\/$/;"	v
subcommand	src/syntax.c	/^struct subcommand$/;"	s	file:
subcommand::func	src/syntax.c	/^    void    (*func)__ARGS((exarg_T *, int));	\/* function to call *\/$/;"	m	struct:subcommand	file:	access:public
subcommand::name	src/syntax.c	/^    char    *name;				\/* subcommand name *\/$/;"	m	struct:subcommand	file:	access:public
subcommands	src/syntax.c	/^static struct subcommand subcommands[] =$/;"	v	typeref:struct:subcommand	file:
submatch_firstlnum	src/regexp.c	/^static linenr_T		submatch_firstlnum;$/;"	v	file:
submatch_match	src/regexp.c	/^static regmatch_T	*submatch_match;$/;"	v	file:
submatch_maxline	src/regexp.c	/^static linenr_T		submatch_maxline;$/;"	v	file:
submatch_mmatch	src/regexp.c	/^static regmmatch_T	*submatch_mmatch;$/;"	v	file:
submenu_change	src/gui_motif.c	/^static void submenu_change __ARGS((vimmenu_T *mp, int colors));$/;"	p	file:	signature:(vimmenu_T *mp, int colors)
submenu_change	src/gui_motif.c	/^submenu_change(menu, colors)$/;"	f	file:
submenu_handle	src/structs.h	/^    MenuHandle	submenu_handle;$/;"	m	struct:VimMenu	access:public
submenu_id	src/structs.h	/^    GtkWidget	*submenu_id;	    \/* If this is submenu, add children here *\/$/;"	m	struct:VimMenu	access:public
submenu_id	src/structs.h	/^    HMENU	submenu_id;	    \/* If this is submenu, add children here *\/$/;"	m	struct:VimMenu	access:public
submenu_id	src/structs.h	/^    PtWidget_t	*submenu_id;$/;"	m	struct:VimMenu	access:public
submenu_id	src/structs.h	/^    Widget	submenu_id;	    \/* If this is submenu, add children here *\/$/;"	m	struct:VimMenu	access:public
submenu_id	src/structs.h	/^    short	submenu_id;	    \/* the menu id of the children (could be$/;"	m	struct:VimMenu	access:public
submenu_widget	src/gui_athena.c	/^static Widget	submenu_widget __ARGS((Widget));$/;"	p	file:	signature:(Widget)
submenu_widget	src/gui_athena.c	/^submenu_widget(widget)$/;"	f	file:
substitute_items	runtime/ftplugin/changelog.vim	/^  function! s:substitute_items(str, date, user)$/;"	f
sug_compare	src/spell.c	/^sug_compare __ARGS((const void *s1, const void *s2));$/;"	p	file:	signature:(const void *s1, const void *s2)
sug_compare	src/spell.c	/^sug_compare(s1, s2)$/;"	f	file:
sug_filltable	src/spell.c	/^static int sug_filltable __ARGS((spellinfo_T *spin, wordnode_T *node, int startwordnr, garray_T *gap));$/;"	p	file:	signature:(spellinfo_T *spin, wordnode_T *node, int startwordnr, garray_T *gap)
sug_filltable	src/spell.c	/^sug_filltable(spin, node, startwordnr, gap)$/;"	f	file:
sug_filltree	src/spell.c	/^static int sug_filltree __ARGS((spellinfo_T *spin, slang_T *slang));$/;"	p	file:	signature:(spellinfo_T *spin, slang_T *slang)
sug_filltree	src/spell.c	/^sug_filltree(spin, slang)$/;"	f	file:
sug_maketable	src/spell.c	/^static int sug_maketable __ARGS((spellinfo_T *spin));$/;"	p	file:	signature:(spellinfo_T *spin)
sug_maketable	src/spell.c	/^sug_maketable(spin)$/;"	f	file:
sug_write	src/spell.c	/^static void sug_write __ARGS((spellinfo_T *spin, char_u *fname));$/;"	p	file:	signature:(spellinfo_T *spin, char_u *fname)
sug_write	src/spell.c	/^sug_write(spin, fname)$/;"	f	file:
suggest_S	src/spell.c	/^typedef struct suggest_S$/;"	s	file:
suggest_S::st_altscore	src/spell.c	/^    int		st_altscore;	\/* used when st_score compares equal *\/$/;"	m	struct:suggest_S	file:	access:public
suggest_S::st_had_bonus	src/spell.c	/^    int		st_had_bonus;	\/* bonus already included in score *\/$/;"	m	struct:suggest_S	file:	access:public
suggest_S::st_orglen	src/spell.c	/^    int		st_orglen;	\/* length of replaced text *\/$/;"	m	struct:suggest_S	file:	access:public
suggest_S::st_salscore	src/spell.c	/^    int		st_salscore;	\/* st_score is for soundalike *\/$/;"	m	struct:suggest_S	file:	access:public
suggest_S::st_score	src/spell.c	/^    int		st_score;	\/* lower is better *\/$/;"	m	struct:suggest_S	file:	access:public
suggest_S::st_slang	src/spell.c	/^    slang_T	*st_slang;	\/* language used for sound folding *\/$/;"	m	struct:suggest_S	file:	access:public
suggest_S::st_word	src/spell.c	/^    char_u	*st_word;	\/* suggested word, allocated string *\/$/;"	m	struct:suggest_S	file:	access:public
suggest_S::st_wordlen	src/spell.c	/^    int		st_wordlen;	\/* STRLEN(st_word) *\/$/;"	m	struct:suggest_S	file:	access:public
suggest_T	src/spell.c	/^} suggest_T;$/;"	t	typeref:struct:suggest_S	file:
suggest_load_files	src/spell.c	/^static void suggest_load_files __ARGS((void));$/;"	p	file:	signature:(void)
suggest_load_files	src/spell.c	/^suggest_load_files()$/;"	f	file:
suggest_trie_walk	src/spell.c	/^static void suggest_trie_walk __ARGS((suginfo_T *su, langp_T *lp, char_u *fword, int soundfold));$/;"	p	file:	signature:(suginfo_T *su, langp_T *lp, char_u *fword, int soundfold)
suggest_trie_walk	src/spell.c	/^suggest_trie_walk(su, lp, fword, soundfold)$/;"	f	file:
suggest_try_change	src/spell.c	/^static void suggest_try_change __ARGS((suginfo_T *su));$/;"	p	file:	signature:(suginfo_T *su)
suggest_try_change	src/spell.c	/^suggest_try_change(su)$/;"	f	file:
suggest_try_soundalike	src/spell.c	/^static void suggest_try_soundalike __ARGS((suginfo_T *su));$/;"	p	file:	signature:(suginfo_T *su)
suggest_try_soundalike	src/spell.c	/^suggest_try_soundalike(su)$/;"	f	file:
suggest_try_soundalike_finish	src/spell.c	/^static void suggest_try_soundalike_finish __ARGS((void));$/;"	p	file:	signature:(void)
suggest_try_soundalike_finish	src/spell.c	/^suggest_try_soundalike_finish()$/;"	f	file:
suggest_try_soundalike_prep	src/spell.c	/^static void suggest_try_soundalike_prep __ARGS((void));$/;"	p	file:	signature:(void)
suggest_try_soundalike_prep	src/spell.c	/^suggest_try_soundalike_prep()$/;"	f	file:
suggest_try_special	src/spell.c	/^static void suggest_try_special __ARGS((suginfo_T *su));$/;"	p	file:	signature:(suginfo_T *su)
suggest_try_special	src/spell.c	/^suggest_try_special(su)$/;"	f	file:
suginfo_S	src/spell.c	/^typedef struct suginfo_S$/;"	s	file:
suginfo_S::su_badflags	src/spell.c	/^    int		su_badflags;	    \/* caps flags for bad word *\/$/;"	m	struct:suginfo_S	file:	access:public
suginfo_S::su_badlen	src/spell.c	/^    int		su_badlen;	    \/* length of detected bad word in line *\/$/;"	m	struct:suginfo_S	file:	access:public
suginfo_S::su_badptr	src/spell.c	/^    char_u	*su_badptr;	    \/* start of bad word in line *\/$/;"	m	struct:suginfo_S	file:	access:public
suginfo_S::su_badword	src/spell.c	/^    char_u	su_badword[MAXWLEN]; \/* bad word truncated at su_badlen *\/$/;"	m	struct:suginfo_S	file:	access:public
suginfo_S::su_banned	src/spell.c	/^    hashtab_T	su_banned;	    \/* table with banned words *\/$/;"	m	struct:suginfo_S	file:	access:public
suginfo_S::su_fbadword	src/spell.c	/^    char_u	su_fbadword[MAXWLEN]; \/* su_badword case-folded *\/$/;"	m	struct:suginfo_S	file:	access:public
suginfo_S::su_ga	src/spell.c	/^    garray_T	su_ga;		    \/* suggestions, contains "suggest_T" *\/$/;"	m	struct:suginfo_S	file:	access:public
suginfo_S::su_maxcount	src/spell.c	/^    int		su_maxcount;	    \/* max. number of suggestions displayed *\/$/;"	m	struct:suginfo_S	file:	access:public
suginfo_S::su_maxscore	src/spell.c	/^    int		su_maxscore;	    \/* maximum score for adding to su_ga *\/$/;"	m	struct:suginfo_S	file:	access:public
suginfo_S::su_sal_badword	src/spell.c	/^    char_u	su_sal_badword[MAXWLEN]; \/* su_badword soundfolded *\/$/;"	m	struct:suginfo_S	file:	access:public
suginfo_S::su_sallang	src/spell.c	/^    slang_T	*su_sallang;	    \/* default language for sound folding *\/$/;"	m	struct:suginfo_S	file:	access:public
suginfo_S::su_sfmaxscore	src/spell.c	/^    int		su_sfmaxscore;	    \/* idem, for when doing soundfold words *\/$/;"	m	struct:suginfo_S	file:	access:public
suginfo_S::su_sga	src/spell.c	/^    garray_T	su_sga;		    \/* like su_ga, sound-folded scoring *\/$/;"	m	struct:suginfo_S	file:	access:public
suginfo_T	src/spell.c	/^} suginfo_T;$/;"	t	typeref:struct:suginfo_S	file:
sum	src/testdir/test49.vim	/^		let sum = sum + 1$/;"	v
sum	src/testdir/test49.vim	/^	    let sum = sum + 2$/;"	v
sum	src/testdir/test49.vim	/^	    let sum = sum - R("interrupt", -128)$/;"	v
sum	src/testdir/test49.vim	/^	    let sum = sum - R("throw", -256)$/;"	v
sum	src/testdir/test49.vim	/^	let sum = sum + 4$/;"	v
sum	src/testdir/test49.vim	/^	let sum = sum - R("error", -64)$/;"	v
sum	src/testdir/test49.vim	/^    let sum =  -R("continue", -8)$/;"	v
sum	src/testdir/test49.vim	/^    let sum = sum + 16$/;"	v
sum	src/testdir/test49.vim	/^    let sum = sum + 8$/;"	v
sum	src/testdir/test49.vim	/^    let sum = sum - R("break", -16)$/;"	v
sum	src/testdir/test49.vim	/^    let sum = sum - R("return", -32)$/;"	v
sum	src/testdir/test49.vim	/^let sum	     = F() + G() + H()  + I()   + J() + K() + L()     + M()$/;"	v
sum	src/testdir/test49.vim	/^let sum	     = sum      + N()      + O()$/;"	v
sum	src/testdir/test49.vim	/^let sum = (F() + 1) - 4*G() - 8*H()$/;"	v
sum	src/testdir/test49.vim	/^let sum = 0$/;"	v
supermenuTrans	src/gui_athena.c	/^static XtTranslations	popupTrans, parentTrans, menuTrans, supermenuTrans;$/;"	v	file:
support_jisx0213	runtime/lang/menu_ja_jp.euc-jp.vim	/^  let support_jisx0213 = (iconv("\\x87\\x64\\x87\\x6a", 'cp932', 'euc-jisx0213') ==# "\\xad\\xc5\\xad\\xcb") ? 1 : 0$/;"	v
support_jisx0213	runtime/lang/menu_ja_jp.utf-8.vim	/^  let support_jisx0213 = (iconv("\\x87\\x64\\x87\\x6a", 'cp932', 'euc-jisx0213') ==# "\\xad\\xc5\\xad\\xcb") ? 1 : 0$/;"	v
support_jisx0213	runtime/lang/menu_japanese_japan.932.vim	/^  let support_jisx0213 = (iconv("\\x87\\x64\\x87\\x6a", 'cp932', 'euc-jisx0213') ==# "\\xad\\xc5\\xad\\xcb") ? 1 : 0$/;"	v
suppress_alternate_input	src/globals.h	/^EXTERN int	suppress_alternate_input INIT(= FALSE);$/;"	v
suppress_dialog_mnemonics	src/gui_motif.c	/^suppress_dialog_mnemonics(Widget dialog)$/;"	f	file:	signature:(Widget dialog)
suppress_errthrow	src/globals.h	/^EXTERN int suppress_errthrow INIT(= FALSE);$/;"	v
suppress_winsize	src/os_win32.c	/^static int suppress_winsize = 1;	\/* don't fiddle with console *\/$/;"	v	file:
suspend_shell	src/ui.c	/^suspend_shell()$/;"	f
sv_dict	src/eval.c	/^    dict_T	sv_dict;$/;"	m	struct:__anon139	file:	access:public
sv_var	src/eval.c	/^    dictitem_T	sv_var;$/;"	m	struct:__anon139	file:	access:public
swap_exists_action	src/globals.h	/^EXTERN int	swap_exists_action INIT(= SEA_NONE);$/;"	v
swap_exists_did_quit	src/globals.h	/^EXTERN int	swap_exists_did_quit INIT(= FALSE);$/;"	v
swap_me	src/os_mswin.c	/^swap_me(COLORREF colorref)$/;"	f	file:	signature:(COLORREF colorref)
swapchar	src/ops.c	/^swapchar(op_type, pos)$/;"	f
swapchars	src/ops.c	/^static int swapchars __ARGS((int op_type, pos_T *pos, int length));$/;"	p	file:	signature:(int op_type, pos_T *pos, int length)
swapchars	src/ops.c	/^swapchars(op_type, pos, length)$/;"	f	file:
swapfile_info	src/memline.c	/^static time_t swapfile_info __ARGS((char_u *));$/;"	p	file:	signature:(char_u *)
swapfile_info	src/memline.c	/^swapfile_info(fname)$/;"	f	file:
swapping_screen	src/term.c	/^swapping_screen()$/;"	f
swb_flags	src/option.h	/^EXTERN unsigned	swb_flags;$/;"	v
swi	src/os_riscos.h	/^void swi(int swinum, ...);      \/* Handles errors itself *\/$/;"	p	signature:(int swinum, ...)
swi	src/swis.s	/^swi:$/;"	l
switch_to_8bit	src/term.c	/^static void switch_to_8bit __ARGS((void));$/;"	p	file:	signature:(void)
switch_to_8bit	src/term.c	/^switch_to_8bit()$/;"	f	file:
sy_chars	src/spell.c	/^    char_u	sy_chars[SY_MAXLEN];	    \/* the sequence of chars *\/$/;"	m	struct:syl_item_S	file:	access:public
sy_len	src/spell.c	/^    int		sy_len;$/;"	m	struct:syl_item_S	file:	access:public
syl_item_S	src/spell.c	/^typedef struct syl_item_S$/;"	s	file:
syl_item_S::sy_chars	src/spell.c	/^    char_u	sy_chars[SY_MAXLEN];	    \/* the sequence of chars *\/$/;"	m	struct:syl_item_S	file:	access:public
syl_item_S::sy_len	src/spell.c	/^    int		sy_len;$/;"	m	struct:syl_item_S	file:	access:public
syl_item_T	src/spell.c	/^} syl_item_T;$/;"	t	typeref:struct:syl_item_S	file:
symbol_from_dll	src/if_lua.c	49;"	d	file:
symbol_from_dll	src/if_lua.c	53;"	d	file:
symbol_from_dll	src/if_python.c	111;"	d	file:
symbol_from_dll	src/if_python.c	115;"	d	file:
symbol_from_dll	src/if_python3.c	89;"	d	file:
symbol_from_dll	src/if_python3.c	93;"	d	file:
syn	runtime/indent/cucumber.vim	/^function! s:syn(lnum)$/;"	f
syn_add_cluster	src/syntax.c	/^static int syn_add_cluster __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
syn_add_cluster	src/syntax.c	/^syn_add_cluster(name)$/;"	f	file:
syn_add_end_off	src/syntax.c	/^static void syn_add_end_off __ARGS((lpos_T *result, regmmatch_T *regmatch, synpat_T *spp, int idx, int extra));$/;"	p	file:	signature:(lpos_T *result, regmmatch_T *regmatch, synpat_T *spp, int idx, int extra)
syn_add_end_off	src/syntax.c	/^syn_add_end_off(result, regmatch, spp, idx, extra)$/;"	f	file:
syn_add_group	src/syntax.c	/^static int syn_add_group __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
syn_add_group	src/syntax.c	/^syn_add_group(name)$/;"	f	file:
syn_add_start_off	src/syntax.c	/^static void syn_add_start_off __ARGS((lpos_T *result, regmmatch_T *regmatch, synpat_T *spp, int idx, int extra));$/;"	p	file:	signature:(lpos_T *result, regmmatch_T *regmatch, synpat_T *spp, int idx, int extra)
syn_add_start_off	src/syntax.c	/^syn_add_start_off(result, regmatch, spp, idx, extra)$/;"	f	file:
syn_attr2attr	src/syntax.c	/^syn_attr2attr(attr)$/;"	f
syn_block	src/syntax.c	/^static synblock_T *syn_block;		\/* current buffer for highlighting *\/$/;"	v	file:
syn_buf	src/syntax.c	/^static buf_T	*syn_buf;		\/* current buffer for highlighting *\/$/;"	v	file:
syn_check_cluster	src/syntax.c	/^static int syn_check_cluster __ARGS((char_u *pp, int len));$/;"	p	file:	signature:(char_u *pp, int len)
syn_check_cluster	src/syntax.c	/^syn_check_cluster(pp, len)$/;"	f	file:
syn_check_group	src/syntax.c	/^syn_check_group(pp, len)$/;"	f
syn_clear_cluster	src/syntax.c	/^static void syn_clear_cluster __ARGS((synblock_T *block, int i));$/;"	p	file:	signature:(synblock_T *block, int i)
syn_clear_cluster	src/syntax.c	/^syn_clear_cluster(block, i)$/;"	f	file:
syn_clear_keyword	src/syntax.c	/^static void syn_clear_keyword __ARGS((int id, hashtab_T *ht));$/;"	p	file:	signature:(int id, hashtab_T *ht)
syn_clear_keyword	src/syntax.c	/^syn_clear_keyword(id, ht)$/;"	f	file:
syn_clear_one	src/syntax.c	/^static void syn_clear_one __ARGS((int id, int syncing));$/;"	p	file:	signature:(int id, int syncing)
syn_clear_one	src/syntax.c	/^syn_clear_one(id, syncing)$/;"	f	file:
syn_clear_pattern	src/syntax.c	/^static void syn_clear_pattern __ARGS((synblock_T *block, int i));$/;"	p	file:	signature:(synblock_T *block, int i)
syn_clear_pattern	src/syntax.c	/^syn_clear_pattern(block, i)$/;"	f	file:
syn_cluster_S	src/syntax.c	/^typedef struct syn_cluster_S$/;"	s	file:
syn_cluster_S::scl_list	src/syntax.c	/^    short	    *scl_list;	    \/* IDs in this syntax cluster *\/$/;"	m	struct:syn_cluster_S	file:	access:public
syn_cluster_S::scl_name	src/syntax.c	/^    char_u	    *scl_name;	    \/* syntax cluster name *\/$/;"	m	struct:syn_cluster_S	file:	access:public
syn_cluster_S::scl_name_u	src/syntax.c	/^    char_u	    *scl_name_u;    \/* uppercase of scl_name *\/$/;"	m	struct:syn_cluster_S	file:	access:public
syn_cluster_T	src/syntax.c	/^} syn_cluster_T;$/;"	t	typeref:struct:syn_cluster_S	file:
syn_cmd_case	src/syntax.c	/^static void syn_cmd_case __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_case	src/syntax.c	/^syn_cmd_case(eap, syncing)$/;"	f	file:
syn_cmd_clear	src/syntax.c	/^static void syn_cmd_clear __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_clear	src/syntax.c	/^syn_cmd_clear(eap, syncing)$/;"	f	file:
syn_cmd_cluster	src/syntax.c	/^static void syn_cmd_cluster __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_cluster	src/syntax.c	/^syn_cmd_cluster(eap, syncing)$/;"	f	file:
syn_cmd_conceal	src/syntax.c	/^static void syn_cmd_conceal __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_conceal	src/syntax.c	/^syn_cmd_conceal(eap, syncing)$/;"	f	file:
syn_cmd_enable	src/syntax.c	/^static void syn_cmd_enable __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_enable	src/syntax.c	/^syn_cmd_enable(eap, syncing)$/;"	f	file:
syn_cmd_include	src/syntax.c	/^static void syn_cmd_include __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_include	src/syntax.c	/^syn_cmd_include(eap, syncing)$/;"	f	file:
syn_cmd_keyword	src/syntax.c	/^static void syn_cmd_keyword __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_keyword	src/syntax.c	/^syn_cmd_keyword(eap, syncing)$/;"	f	file:
syn_cmd_list	src/syntax.c	/^static void syn_cmd_list __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_list	src/syntax.c	/^syn_cmd_list(eap, syncing)$/;"	f	file:
syn_cmd_manual	src/syntax.c	/^static void syn_cmd_manual __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_manual	src/syntax.c	/^syn_cmd_manual(eap, syncing)$/;"	f	file:
syn_cmd_match	src/syntax.c	/^static void syn_cmd_match __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_match	src/syntax.c	/^syn_cmd_match(eap, syncing)$/;"	f	file:
syn_cmd_off	src/syntax.c	/^static void syn_cmd_off __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_off	src/syntax.c	/^syn_cmd_off(eap, syncing)$/;"	f	file:
syn_cmd_on	src/syntax.c	/^static void syn_cmd_on __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_on	src/syntax.c	/^syn_cmd_on(eap, syncing)$/;"	f	file:
syn_cmd_onoff	src/syntax.c	/^static void syn_cmd_onoff __ARGS((exarg_T *eap, char *name));$/;"	p	file:	signature:(exarg_T *eap, char *name)
syn_cmd_onoff	src/syntax.c	/^syn_cmd_onoff(eap, name)$/;"	f	file:
syn_cmd_region	src/syntax.c	/^static void syn_cmd_region __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_region	src/syntax.c	/^syn_cmd_region(eap, syncing)$/;"	f	file:
syn_cmd_reset	src/syntax.c	/^static void syn_cmd_reset __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_reset	src/syntax.c	/^syn_cmd_reset(eap, syncing)$/;"	f	file:
syn_cmd_spell	src/syntax.c	/^static void syn_cmd_spell __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_spell	src/syntax.c	/^syn_cmd_spell(eap, syncing)$/;"	f	file:
syn_cmd_sync	src/syntax.c	/^static void syn_cmd_sync __ARGS((exarg_T *eap, int syncing));$/;"	p	file:	signature:(exarg_T *eap, int syncing)
syn_cmd_sync	src/syntax.c	/^syn_cmd_sync(eap, syncing)$/;"	f	file:
syn_cmdlinep	src/syntax.c	/^static char_u **syn_cmdlinep;$/;"	v	file:
syn_combine_list	src/syntax.c	/^static void syn_combine_list __ARGS((short **clstr1, short **clstr2, int list_op));$/;"	p	file:	signature:(short **clstr1, short **clstr2, int list_op)
syn_combine_list	src/syntax.c	/^syn_combine_list(clstr1, clstr2, list_op)$/;"	f	file:
syn_compare_stub	src/syntax.c	/^static int _RTLENTRYF syn_compare_stub __ARGS((const void *v1, const void *v2));$/;"	p	file:	signature:(const void *v1, const void *v2)
syn_compare_stub	src/syntax.c	/^static int syn_compare_stub __ARGS((const void *v1, const void *v2));$/;"	p	file:	signature:(const void *v1, const void *v2)
syn_compare_stub	src/syntax.c	/^syn_compare_stub(v1, v2)$/;"	f	file:
syn_cterm_attr2entry	src/syntax.c	/^syn_cterm_attr2entry(attr)$/;"	f
syn_current_attr	src/syntax.c	/^static int syn_current_attr __ARGS((int syncing, int displaying, int *can_spell, int keep_state));$/;"	p	file:	signature:(int syncing, int displaying, int *can_spell, int keep_state)
syn_current_attr	src/syntax.c	/^syn_current_attr(syncing, displaying, can_spell, keep_state)$/;"	f	file:
syn_finish_line	src/syntax.c	/^static int syn_finish_line __ARGS((int syncing));$/;"	p	file:	signature:(int syncing)
syn_finish_line	src/syntax.c	/^syn_finish_line(syncing)$/;"	f	file:
syn_get_final_id	src/syntax.c	/^syn_get_final_id(hl_id)$/;"	f
syn_get_foldlevel	src/syntax.c	/^syn_get_foldlevel(wp, lnum)$/;"	f
syn_get_id	src/syntax.c	/^syn_get_id(wp, lnum, col, trans, spellp, keep_state)$/;"	f
syn_get_stack_item	src/syntax.c	/^syn_get_stack_item(i)$/;"	f
syn_get_sub_char	src/syntax.c	/^syn_get_sub_char()$/;"	f
syn_getcurline	src/syntax.c	/^static char_u *syn_getcurline __ARGS((void));$/;"	p	file:	signature:(void)
syn_getcurline	src/syntax.c	/^syn_getcurline()$/;"	f	file:
syn_gui_attr2entry	src/syntax.c	/^syn_gui_attr2entry(attr)$/;"	f
syn_id2attr	src/syntax.c	/^syn_id2attr(hl_id)$/;"	f
syn_id2colors	src/syntax.c	/^syn_id2colors(hl_id, fgp, bgp)$/;"	f
syn_id2name	src/syntax.c	/^syn_id2name(id)$/;"	f
syn_incl_toplevel	src/syntax.c	/^static void syn_incl_toplevel __ARGS((int id, int *flagsp));$/;"	p	file:	signature:(int id, int *flagsp)
syn_incl_toplevel	src/syntax.c	/^syn_incl_toplevel(id, flagsp)$/;"	f	file:
syn_lines_msg	src/syntax.c	/^static void syn_lines_msg __ARGS((void));$/;"	p	file:	signature:(void)
syn_lines_msg	src/syntax.c	/^syn_lines_msg()$/;"	f	file:
syn_list_cluster	src/syntax.c	/^static void syn_list_cluster __ARGS((int id));$/;"	p	file:	signature:(int id)
syn_list_cluster	src/syntax.c	/^syn_list_cluster(id)$/;"	f	file:
syn_list_flags	src/syntax.c	/^static void syn_list_flags __ARGS((struct name_list *nl, int flags, int attr));$/;"	p	file:	signature:(struct name_list *nl, int flags, int attr)
syn_list_flags	src/syntax.c	/^syn_list_flags(nl, flags, attr)$/;"	f	file:
syn_list_header	src/syntax.c	/^static int syn_list_header __ARGS((int did_header, int outlen, int id));$/;"	p	file:	signature:(int did_header, int outlen, int id)
syn_list_header	src/syntax.c	/^syn_list_header(did_header, outlen, id)$/;"	f	file:
syn_list_keywords	src/syntax.c	/^static int syn_list_keywords __ARGS((int id, hashtab_T *ht, int did_header, int attr));$/;"	p	file:	signature:(int id, hashtab_T *ht, int did_header, int attr)
syn_list_keywords	src/syntax.c	/^syn_list_keywords(id, ht, did_header, attr)$/;"	f	file:
syn_list_one	src/syntax.c	/^static void syn_list_one __ARGS((int id, int syncing, int link_only));$/;"	p	file:	signature:(int id, int syncing, int link_only)
syn_list_one	src/syntax.c	/^syn_list_one(id, syncing, link_only)$/;"	f	file:
syn_match_linecont	src/syntax.c	/^static int syn_match_linecont __ARGS((linenr_T lnum));$/;"	p	file:	signature:(linenr_T lnum)
syn_match_linecont	src/syntax.c	/^syn_match_linecont(lnum)$/;"	f	file:
syn_match_msg	src/syntax.c	/^static void syn_match_msg __ARGS((void));$/;"	p	file:	signature:(void)
syn_match_msg	src/syntax.c	/^syn_match_msg()$/;"	f	file:
syn_name2id	src/syntax.c	/^syn_name2id(name)$/;"	f
syn_namen2id	src/syntax.c	/^syn_namen2id(linep, len)$/;"	f
syn_opt_arg_T	src/syntax.c	/^} syn_opt_arg_T;$/;"	t	typeref:struct:__anon82	file:
syn_pattern	src/syntax.c	/^typedef struct syn_pattern$/;"	s	file:
syn_pattern::sp_cchar	src/syntax.c	/^    int		 sp_cchar;		\/* conceal substitute character *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_pattern::sp_cont_list	src/syntax.c	/^    short	*sp_cont_list;		\/* cont. group IDs, if non-zero *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_pattern::sp_flags	src/syntax.c	/^    int		 sp_flags;		\/* see HL_ defines below *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_pattern::sp_ic	src/syntax.c	/^    int		 sp_ic;			\/* ignore-case flag for sp_prog *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_pattern::sp_line_id	src/syntax.c	/^    int		 sp_line_id;		\/* ID of last line where tried *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_pattern::sp_next_list	src/syntax.c	/^    short	*sp_next_list;		\/* next group IDs, if non-zero *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_pattern::sp_off_flags	src/syntax.c	/^    short	 sp_off_flags;		\/* see below *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_pattern::sp_offsets	src/syntax.c	/^    int		 sp_offsets[SPO_COUNT];	\/* offsets *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_pattern::sp_pattern	src/syntax.c	/^    char_u	*sp_pattern;		\/* regexp to match, pattern *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_pattern::sp_prog	src/syntax.c	/^    regprog_T	*sp_prog;		\/* regexp to match, program *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_pattern::sp_startcol	src/syntax.c	/^    int		 sp_startcol;		\/* next match in sp_line_id line *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_pattern::sp_syn	src/syntax.c	/^    struct sp_syn sp_syn;		\/* struct passed to in_id_list() *\/$/;"	m	struct:syn_pattern	typeref:struct:syn_pattern::sp_syn	file:	access:public
syn_pattern::sp_syn_match_id	src/syntax.c	/^    short	 sp_syn_match_id;	\/* highlight group ID of pattern *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_pattern::sp_sync_idx	src/syntax.c	/^    int		 sp_sync_idx;		\/* sync item index (syncing only) *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_pattern::sp_syncing	src/syntax.c	/^    char	 sp_syncing;		\/* this item used for syncing *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_pattern::sp_type	src/syntax.c	/^    char	 sp_type;		\/* see SPTYPE_ defines below *\/$/;"	m	struct:syn_pattern	file:	access:public
syn_regexec	src/syntax.c	/^static int syn_regexec __ARGS((regmmatch_T *rmp, linenr_T lnum, colnr_T col));$/;"	p	file:	signature:(regmmatch_T *rmp, linenr_T lnum, colnr_T col)
syn_regexec	src/syntax.c	/^syn_regexec(rmp, lnum, col)$/;"	f	file:
syn_remove_pattern	src/syntax.c	/^static void syn_remove_pattern __ARGS((synblock_T *block, int idx));$/;"	p	file:	signature:(synblock_T *block, int idx)
syn_remove_pattern	src/syntax.c	/^syn_remove_pattern(block, idx)$/;"	f	file:
syn_scl_name2id	src/syntax.c	/^static int syn_scl_name2id __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
syn_scl_name2id	src/syntax.c	/^syn_scl_name2id(name)$/;"	f	file:
syn_scl_namen2id	src/syntax.c	/^static int syn_scl_namen2id __ARGS((char_u *linep, int len));$/;"	p	file:	signature:(char_u *linep, int len)
syn_scl_namen2id	src/syntax.c	/^syn_scl_namen2id(linep, len)$/;"	f	file:
syn_stack_alloc	src/syntax.c	/^static void syn_stack_alloc __ARGS((void));$/;"	p	file:	signature:(void)
syn_stack_alloc	src/syntax.c	/^syn_stack_alloc()$/;"	f	file:
syn_stack_apply_changes	src/syntax.c	/^syn_stack_apply_changes(buf)$/;"	f
syn_stack_apply_changes_block	src/syntax.c	/^static void syn_stack_apply_changes_block __ARGS((synblock_T *block, buf_T *buf));$/;"	p	file:	signature:(synblock_T *block, buf_T *buf)
syn_stack_apply_changes_block	src/syntax.c	/^syn_stack_apply_changes_block(block, buf)$/;"	f	file:
syn_stack_cleanup	src/syntax.c	/^static int syn_stack_cleanup __ARGS((void));$/;"	p	file:	signature:(void)
syn_stack_cleanup	src/syntax.c	/^syn_stack_cleanup()$/;"	f	file:
syn_stack_equal	src/syntax.c	/^static int syn_stack_equal __ARGS((synstate_T *sp));$/;"	p	file:	signature:(synstate_T *sp)
syn_stack_equal	src/syntax.c	/^syn_stack_equal(sp)$/;"	f	file:
syn_stack_find_entry	src/syntax.c	/^static synstate_T *syn_stack_find_entry __ARGS((linenr_T lnum));$/;"	p	file:	signature:(linenr_T lnum)
syn_stack_find_entry	src/syntax.c	/^syn_stack_find_entry(lnum)$/;"	f	file:
syn_stack_free_all	src/syntax.c	/^syn_stack_free_all(block)$/;"	f
syn_stack_free_block	src/syntax.c	/^static void syn_stack_free_block __ARGS((synblock_T *block));$/;"	p	file:	signature:(synblock_T *block)
syn_stack_free_block	src/syntax.c	/^syn_stack_free_block(block)$/;"	f	file:
syn_stack_free_entry	src/syntax.c	/^static void syn_stack_free_entry __ARGS((synblock_T *block, synstate_T *p));$/;"	p	file:	signature:(synblock_T *block, synstate_T *p)
syn_stack_free_entry	src/syntax.c	/^syn_stack_free_entry(block, p)$/;"	f	file:
syn_start_line	src/syntax.c	/^static void syn_start_line __ARGS((void));$/;"	p	file:	signature:(void)
syn_start_line	src/syntax.c	/^syn_start_line()$/;"	f	file:
syn_state	src/structs.h	/^struct syn_state$/;"	s
syn_state::__anon44::sst_ga	src/structs.h	/^	garray_T	sst_ga;	\/* growarray for long state stack *\/$/;"	m	union:syn_state::__anon44	access:public
syn_state::__anon44::sst_stack	src/structs.h	/^	bufstate_T	sst_stack[SST_FIX_STATES]; \/* short state stack *\/$/;"	m	union:syn_state::__anon44	access:public
syn_state::sst_change_lnum	src/structs.h	/^    linenr_T	sst_change_lnum;\/* when non-zero, change in this line$/;"	m	struct:syn_state	access:public
syn_state::sst_lnum	src/structs.h	/^    linenr_T	sst_lnum;	\/* line number for this state *\/$/;"	m	struct:syn_state	access:public
syn_state::sst_next	src/structs.h	/^    synstate_T	*sst_next;	\/* next entry in used or free list *\/$/;"	m	struct:syn_state	access:public
syn_state::sst_next_flags	src/structs.h	/^    int		sst_next_flags;	\/* flags for sst_next_list *\/$/;"	m	struct:syn_state	access:public
syn_state::sst_next_list	src/structs.h	/^    short	*sst_next_list;	\/* "nextgroup" list in this state$/;"	m	struct:syn_state	access:public
syn_state::sst_stacksize	src/structs.h	/^    int		sst_stacksize;	\/* number of states on the stack *\/$/;"	m	struct:syn_state	access:public
syn_state::sst_tick	src/structs.h	/^    disptick_T	sst_tick;	\/* tick when last displayed *\/$/;"	m	struct:syn_state	access:public
syn_state::sst_union	src/structs.h	/^    } sst_union;$/;"	m	struct:syn_state	typeref:union:syn_state::__anon44	access:public
syn_sync	src/syntax.c	/^static void syn_sync __ARGS((win_T *wp, linenr_T lnum, synstate_T *last_valid));$/;"	p	file:	signature:(win_T *wp, linenr_T lnum, synstate_T *last_valid)
syn_sync	src/syntax.c	/^syn_sync(wp, start_lnum, last_valid)$/;"	f	file:
syn_term_attr2entry	src/syntax.c	/^syn_term_attr2entry(attr)$/;"	f
syn_unadd_group	src/syntax.c	/^static void syn_unadd_group __ARGS((void));$/;"	p	file:	signature:(void)
syn_unadd_group	src/syntax.c	/^syn_unadd_group()$/;"	f	file:
syn_update_ends	src/syntax.c	/^static void syn_update_ends __ARGS((int startofline));$/;"	p	file:	signature:(int startofline)
syn_update_ends	src/syntax.c	/^syn_update_ends(startofline)$/;"	f	file:
syn_win	src/syntax.c	/^static win_T	*syn_win;		\/* current window for highlighting *\/$/;"	v	file:
synblock_T	src/structs.h	/^} synblock_T;$/;"	t	typeref:struct:__anon55
sync_idx	src/syntax.c	/^    int		*sync_idx;	\/* syntax item for "grouphere" argument, NULL$/;"	m	struct:__anon82	file:	access:public
synname	runtime/ftplugin/ruby.vim	/^function! s:synname()$/;"	f
synpat_T	src/syntax.c	/^} synpat_T;$/;"	t	typeref:struct:syn_pattern	file:
synstate_T	src/structs.h	/^typedef struct syn_state synstate_T;$/;"	t	typeref:struct:syn_state
syntax_check_changed	src/syntax.c	/^syntax_check_changed(lnum)$/;"	f
syntax_clear	src/syntax.c	/^syntax_clear(block)$/;"	f
syntax_end_parsing	src/syntax.c	/^syntax_end_parsing(lnum)$/;"	f
syntax_manual	runtime/syntax/manual.vim	/^let syntax_manual = 1$/;"	v
syntax_on	runtime/syntax/synload.vim	/^let syntax_on = 1$/;"	v
syntax_present	src/syntax.c	/^syntax_present(win)$/;"	f
syntax_start	src/syntax.c	/^syntax_start(wp, lnum)$/;"	f
syntax_sync_clear	src/syntax.c	/^static void syntax_sync_clear __ARGS((void));$/;"	p	file:	signature:(void)
syntax_sync_clear	src/syntax.c	/^syntax_sync_clear()$/;"	f	file:
syntaxcomplete#Complete	runtime/autoload/syntaxcomplete.vim	/^function! syntaxcomplete#Complete(findstart, base)$/;"	f
syntaxcomplete#OmniSyntaxList	runtime/autoload/syntaxcomplete.vim	/^function! syntaxcomplete#OmniSyntaxList(...)$/;"	f
syntaxset	runtime/syntax/nosyntax.vim	/^augroup syntaxset$/;"	a
syntaxset	runtime/syntax/syntax.vim	/^augroup syntaxset$/;"	a
sys	src/dehqx.py	/^import sys$/;"	i
sys_menu	src/globals.h	/^EXTERN int	sys_menu INIT(= FALSE);$/;"	v
sysdrive	src/dosinst.h	/^char	*sysdrive;		\/* system drive or "c:\\" *\/$/;"	v
sysmouse_close	src/os_unix.c	/^static void sysmouse_close __ARGS((void));$/;"	p	file:	signature:(void)
sysmouse_close	src/os_unix.c	/^sysmouse_close()$/;"	f	file:
sysmouse_open	src/os_unix.c	/^static int sysmouse_open __ARGS((void));$/;"	p	file:	signature:(void)
sysmouse_open	src/os_unix.c	/^sysmouse_open()$/;"	f	file:
system_with_default	runtime/ftplugin/changelog.vim	/^  function! s:system_with_default(command, default)$/;"	f
szAppName	src/os_mswin.c	/^static char_u		szAppName[] = TEXT("VIM");$/;"	v	file:
szDescription	src/vimtbar.h	/^    char szDescription[1];$/;"	m	struct:tagADJUSTINFO	access:public
szText	src/gui_w32.c	/^    WCHAR	szText[80];$/;"	m	struct:tagNMTTDISPINFOW	file:	access:public
szText	src/gui_w32.c	/^    char	szText[80];$/;"	m	struct:tagNMTTDISPINFOA	file:	access:public
szText	src/gui_w32.c	/^    char       szText[80];$/;"	m	struct:tagNMTTDISPINFO_NEW	file:	access:public
t	runtime/macros/hanoi/hanoi.vim	/^map t 7$/;"	m
t	runtime/macros/hanoi/hanoi.vim	/^map! t 7$/;"	m
t	src/Makefile	/^	echo "\/* vim: set ft=c : *\/" >> proto\/$@$/;"	m
t	src/testdir/test49.vim	/^	let t = 1$/;"	v
t_colors	src/globals.h	/^EXTERN int	t_colors INIT(= 0);	    \/* int value of T_CCO *\/$/;"	v
t_puts	src/message.c	/^static void t_puts __ARGS((int *t_col, char_u *t_s, char_u *s, int attr));$/;"	p	file:	signature:(int *t_col, char_u *t_s, char_u *s, int attr)
t_puts	src/message.c	/^t_puts(t_col, t_s, s, attr)$/;"	f	file:
ta_len	src/ui.c	/^static int ta_len;	\/* length of ta_str when it's not NULL*\/$/;"	v	file:
ta_off	src/ui.c	/^static int ta_off;	\/* offset for next char to use when ta_str != NULL *\/$/;"	v	file:
ta_str	src/ui.c	/^static char_u *ta_str = NULL;$/;"	v	file:
tab	src/structs.h	/^    int		tab;			\/* > 0 when ":tab" was used *\/$/;"	m	struct:__anon42	access:public
tabLabels	src/gui_mac.c	/^static CFStringRef *tabLabels = NULL;$/;"	v	file:
tabLabelsSize	src/gui_mac.c	/^static int tabLabelsSize = 0;$/;"	v	file:
tabLine	src/gui_motif.c	/^static Widget	tabLine;$/;"	v	file:
tabLine_menu	src/gui_motif.c	/^static Widget	tabLine_menu = 0;$/;"	v	file:
tabline	src/gui.h	/^    GtkWidget	*tabline;	    \/* tab pages line handle *\/$/;"	m	struct:Gui	access:public
tabline_balloon_cb	src/gui_motif.c	/^static void tabline_balloon_cb __ARGS((BalloonEval *beval, int state));$/;"	p	file:	signature:(BalloonEval *beval, int state)
tabline_balloon_cb	src/gui_motif.c	/^tabline_balloon_cb(beval, state)$/;"	f	file:
tabline_button_cb	src/gui_motif.c	/^static void tabline_button_cb __ARGS((Widget w, XtPointer client_data, XtPointer call_data));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XtPointer call_data)
tabline_button_cb	src/gui_motif.c	/^tabline_button_cb(w, client_data, call_data)$/;"	f	file:
tabline_cb	src/gui_motif.c	/^static void tabline_cb __ARGS((Widget w, XtPointer client_data, XtPointer call_data));$/;"	p	file:	signature:(Widget w, XtPointer client_data, XtPointer call_data)
tabline_cb	src/gui_motif.c	/^tabline_cb(w, client_data, call_data)$/;"	f	file:
tabline_height	src/gui.h	/^    int		tabline_height;$/;"	m	struct:Gui	access:public
tabline_height	src/window.c	/^tabline_height()$/;"	f
tabline_menu	src/gui_gtk_x11.c	/^static GtkWidget *tabline_menu;$/;"	v	file:
tabline_menu_cb	src/gui_motif.c	/^static void tabline_menu_cb __ARGS((Widget w, XtPointer	closure, XEvent	*e, Boolean *continue_dispatch));$/;"	p	file:	signature:(Widget w, XtPointer closure, XEvent *e, Boolean *continue_dispatch)
tabline_menu_cb	src/gui_motif.c	/^tabline_menu_cb(w, closure, e, continue_dispatch)$/;"	f	file:
tabline_menu_handler	src/gui_gtk_x11.c	/^tabline_menu_handler(GtkMenuItem *item UNUSED, gpointer user_data)$/;"	f	file:	signature:(GtkMenuItem *item UNUSED, gpointer user_data)
tabline_scroller_clicked	src/gui_motif.c	/^tabline_scroller_clicked(scroller_name, event)$/;"	f	file:
tabline_tooltip	src/gui_gtk_x11.c	/^static GtkTooltips *tabline_tooltip;$/;"	v	file:
tabpage_S	src/structs.h	/^struct tabpage_S$/;"	s
tabpage_S::tp_ch_used	src/structs.h	/^    long	    tp_ch_used;	    \/* value of 'cmdheight' when frame size$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_curwin	src/structs.h	/^    win_T	    *tp_curwin;	    \/* current window in this Tab page *\/$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_diff_invalid	src/structs.h	/^    int		    tp_diff_invalid;	\/* list of diffs is outdated *\/$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_diffbuf	src/structs.h	/^    buf_T	    *(tp_diffbuf[DB_COUNT]);$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_first_diff	src/structs.h	/^    diff_T	    *tp_first_diff;$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_firstwin	src/structs.h	/^    win_T	    *tp_firstwin;   \/* first window in this Tab page *\/$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_lastwin	src/structs.h	/^    win_T	    *tp_lastwin;    \/* last window in this Tab page *\/$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_next	src/structs.h	/^    tabpage_T	    *tp_next;	    \/* next tabpage or NULL *\/$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_old_Columns	src/structs.h	/^    long	    tp_old_Columns; \/* Columns when Tab page was left *\/$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_old_Rows	src/structs.h	/^    long	    tp_old_Rows;    \/* Rows when Tab page was left *\/$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_prev_which_scrollbars	src/structs.h	/^    int		    tp_prev_which_scrollbars[3];$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_prevwin	src/structs.h	/^    win_T	    *tp_prevwin;    \/* previous window in this Tab page *\/$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_snapshot	src/structs.h	/^    frame_T	    *(tp_snapshot[SNAP_COUNT]);  \/* window layout snapshots *\/$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_topframe	src/structs.h	/^    frame_T	    *tp_topframe;   \/* topframe for the windows *\/$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_vars	src/structs.h	/^    dict_T	    tp_vars;	    \/* internal variables, local to tab page *\/$/;"	m	struct:tabpage_S	access:public
tabpage_S::tp_winvar	src/structs.h	/^    dictitem_T	    tp_winvar;	    \/* variable for "t:" Dictionary *\/$/;"	m	struct:tabpage_S	access:public
tabpage_T	src/structs.h	/^typedef struct tabpage_S tabpage_T;$/;"	t	typeref:struct:tabpage_S
tabpage_close	src/ex_docmd.c	/^tabpage_close(forceit)$/;"	f
tabpage_close_other	src/ex_docmd.c	/^tabpage_close_other(tp, forceit)$/;"	f
tabpage_index	src/window.c	/^tabpage_index(ftp)$/;"	f
tabpage_move	src/window.c	/^tabpage_move(nr)$/;"	f
tabpage_new	src/ex_docmd.c	/^tabpage_new()$/;"	f
tads_minlines	runtime/syntax/tads.vim	/^  let tads_minlines = 15$/;"	v
tads_sync_dist	runtime/syntax/tads.vim	/^  let tads_sync_dist = 100$/;"	v
tagADJUSTINFO	src/vimtbar.h	/^typedef struct tagADJUSTINFO$/;"	s
tagADJUSTINFO::szDescription	src/vimtbar.h	/^    char szDescription[1];$/;"	m	struct:tagADJUSTINFO	access:public
tagADJUSTINFO::tbButton	src/vimtbar.h	/^    TBBUTTON tbButton;$/;"	m	struct:tagADJUSTINFO	access:public
tagCOMPOSITIONFORM	src/gui_w32.c	/^typedef struct tagCOMPOSITIONFORM {$/;"	s	file:
tagCOMPOSITIONFORM::dwStyle	src/gui_w32.c	/^    DWORD dwStyle;$/;"	m	struct:tagCOMPOSITIONFORM	file:	access:public
tagCOMPOSITIONFORM::ptCurrentPos	src/gui_w32.c	/^    POINT ptCurrentPos;$/;"	m	struct:tagCOMPOSITIONFORM	file:	access:public
tagCOMPOSITIONFORM::rcArea	src/gui_w32.c	/^    RECT  rcArea;$/;"	m	struct:tagCOMPOSITIONFORM	file:	access:public
tagNMTTDISPINFOA	src/gui_w32.c	/^typedef struct tagNMTTDISPINFOA {$/;"	s	file:
tagNMTTDISPINFOA::hdr	src/gui_w32.c	/^    NMHDR	hdr;$/;"	m	struct:tagNMTTDISPINFOA	file:	access:public
tagNMTTDISPINFOA::hinst	src/gui_w32.c	/^    HINSTANCE	hinst;$/;"	m	struct:tagNMTTDISPINFOA	file:	access:public
tagNMTTDISPINFOA::lParam	src/gui_w32.c	/^    LPARAM	lParam;$/;"	m	struct:tagNMTTDISPINFOA	file:	access:public
tagNMTTDISPINFOA::lpszText	src/gui_w32.c	/^    LPSTR	lpszText;$/;"	m	struct:tagNMTTDISPINFOA	file:	access:public
tagNMTTDISPINFOA::szText	src/gui_w32.c	/^    char	szText[80];$/;"	m	struct:tagNMTTDISPINFOA	file:	access:public
tagNMTTDISPINFOA::uFlags	src/gui_w32.c	/^    UINT	uFlags;$/;"	m	struct:tagNMTTDISPINFOA	file:	access:public
tagNMTTDISPINFOW	src/gui_w32.c	/^typedef struct tagNMTTDISPINFOW {$/;"	s	file:
tagNMTTDISPINFOW::hdr	src/gui_w32.c	/^    NMHDR	hdr;$/;"	m	struct:tagNMTTDISPINFOW	file:	access:public
tagNMTTDISPINFOW::hinst	src/gui_w32.c	/^    HINSTANCE	hinst;$/;"	m	struct:tagNMTTDISPINFOW	file:	access:public
tagNMTTDISPINFOW::lParam	src/gui_w32.c	/^    LPARAM	lParam;$/;"	m	struct:tagNMTTDISPINFOW	file:	access:public
tagNMTTDISPINFOW::lpszText	src/gui_w32.c	/^    LPWSTR	lpszText;$/;"	m	struct:tagNMTTDISPINFOW	file:	access:public
tagNMTTDISPINFOW::szText	src/gui_w32.c	/^    WCHAR	szText[80];$/;"	m	struct:tagNMTTDISPINFOW	file:	access:public
tagNMTTDISPINFOW::uFlags	src/gui_w32.c	/^    UINT	uFlags;$/;"	m	struct:tagNMTTDISPINFOW	file:	access:public
tagNMTTDISPINFO_NEW	src/gui_w32.c	/^typedef struct tagNMTTDISPINFO_NEW$/;"	s	file:
tagNMTTDISPINFO_NEW::hdr	src/gui_w32.c	/^    NMHDR      hdr;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:	access:public
tagNMTTDISPINFO_NEW::hinst	src/gui_w32.c	/^    HINSTANCE  hinst;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:	access:public
tagNMTTDISPINFO_NEW::lParam	src/gui_w32.c	/^    LPARAM     lParam;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:	access:public
tagNMTTDISPINFO_NEW::lpszText	src/gui_w32.c	/^    LPSTR      lpszText;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:	access:public
tagNMTTDISPINFO_NEW::szText	src/gui_w32.c	/^    char       szText[80];$/;"	m	struct:tagNMTTDISPINFO_NEW	file:	access:public
tagNMTTDISPINFO_NEW::uFlags	src/gui_w32.c	/^    UINT       uFlags;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:	access:public
tagTBBUTTON	src/vimtbar.h	/^typedef struct tagTBBUTTON$/;"	s
tagTBBUTTON::fsState	src/vimtbar.h	/^    BYTE fsState;	 \/\/ button's state$/;"	m	struct:tagTBBUTTON	access:public
tagTBBUTTON::fsStyle	src/vimtbar.h	/^    BYTE fsStyle;	 \/\/ button's style$/;"	m	struct:tagTBBUTTON	access:public
tagTBBUTTON::iBitmap	src/vimtbar.h	/^    int  iBitmap;	 \/\/ index into bitmap of this button's picture$/;"	m	struct:tagTBBUTTON	access:public
tagTBBUTTON::idCommand	src/vimtbar.h	/^    int  idCommand;	 \/\/ WM_COMMAND menu ID that this button sends$/;"	m	struct:tagTBBUTTON	access:public
tagTOOLINFOA_NEW	src/gui_w32.c	/^typedef struct tagTOOLINFOA_NEW$/;"	s	file:
tagTOOLINFOA_NEW::cbSize	src/gui_w32.c	/^	UINT cbSize;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
tagTOOLINFOA_NEW::hinst	src/gui_w32.c	/^	HINSTANCE hinst;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
tagTOOLINFOA_NEW::hwnd	src/gui_w32.c	/^	HWND hwnd;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
tagTOOLINFOA_NEW::lParam	src/gui_w32.c	/^	LPARAM lParam;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
tagTOOLINFOA_NEW::lpszText	src/gui_w32.c	/^	LPSTR lpszText;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
tagTOOLINFOA_NEW::rect	src/gui_w32.c	/^	RECT rect;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
tagTOOLINFOA_NEW::uFlags	src/gui_w32.c	/^	UINT uFlags;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
tagTOOLINFOA_NEW::uId	src/gui_w32.c	/^	UINT_PTR uId;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
tag_fgets	src/diff.c	56;"	d	file:
tag_fgets	src/fileio.c	/^tag_fgets(buf, size, fp)$/;"	f
tag_fgets	src/tag.c	1153;"	d	file:
tag_fname	src/tag.c	/^    char_u	*tag_fname;	\/* file name of the tags file *\/$/;"	m	struct:tag_pointers	file:	access:public
tag_fnames	src/tag.c	/^static garray_T tag_fnames = GA_EMPTY;$/;"	v	file:
tag_freematch	src/tag.c	/^tag_freematch()$/;"	f
tag_full_fname	src/tag.c	/^static char_u *tag_full_fname __ARGS((tagptrs_T *tagp));$/;"	p	file:	signature:(tagptrs_T *tagp)
tag_full_fname	src/tag.c	/^tag_full_fname(tagp)$/;"	f	file:
tag_pointers	src/tag.c	/^typedef struct tag_pointers$/;"	s	file:
tag_pointers::command	src/tag.c	/^    char_u	*command;	\/* first char of command *\/$/;"	m	struct:tag_pointers	file:	access:public
tag_pointers::command_end	src/tag.c	/^    char_u	*command_end;	\/* first char after command *\/$/;"	m	struct:tag_pointers	file:	access:public
tag_pointers::fname	src/tag.c	/^    char_u	*fname;		\/* first char of file name *\/$/;"	m	struct:tag_pointers	file:	access:public
tag_pointers::fname_end	src/tag.c	/^    char_u	*fname_end;	\/* char after file name *\/$/;"	m	struct:tag_pointers	file:	access:public
tag_pointers::is_etag	src/tag.c	/^    int		is_etag;	\/* TRUE for emacs tag *\/$/;"	m	struct:tag_pointers	file:	access:public
tag_pointers::tag_fname	src/tag.c	/^    char_u	*tag_fname;	\/* file name of the tags file *\/$/;"	m	struct:tag_pointers	file:	access:public
tag_pointers::tagkind	src/tag.c	/^    char_u	*tagkind;	\/* "kind:" value *\/$/;"	m	struct:tag_pointers	file:	access:public
tag_pointers::tagkind_end	src/tag.c	/^    char_u	*tagkind_end;	\/* end of tagkind *\/$/;"	m	struct:tag_pointers	file:	access:public
tag_pointers::tagname	src/tag.c	/^    char_u	*tagname;	\/* start of tag name (skip "file:") *\/$/;"	m	struct:tag_pointers	file:	access:public
tag_pointers::tagname_end	src/tag.c	/^    char_u	*tagname_end;	\/* char after tag name *\/$/;"	m	struct:tag_pointers	file:	access:public
tag_strnicmp	src/tag.c	/^static int tag_strnicmp __ARGS((char_u *s1, char_u *s2, size_t len));$/;"	p	file:	signature:(char_u *s1, char_u *s2, size_t len)
tag_strnicmp	src/tag.c	/^tag_strnicmp(s1, s2, len)$/;"	f	file:
taggy	src/structs.h	/^typedef struct taggy$/;"	s
taggy::cur_fnum	src/structs.h	/^    int		cur_fnum;	\/* buffer number used for cur_match *\/$/;"	m	struct:taggy	access:public
taggy::cur_match	src/structs.h	/^    int		cur_match;	\/* match number *\/$/;"	m	struct:taggy	access:public
taggy::fmark	src/structs.h	/^    fmark_T	fmark;		\/* cursor position BEFORE ":tag" *\/$/;"	m	struct:taggy	access:public
taggy::tagname	src/structs.h	/^    char_u	*tagname;	\/* tag name *\/$/;"	m	struct:taggy	access:public
taggy_T	src/structs.h	/^} taggy_T;$/;"	t	typeref:struct:taggy
tagkind	src/tag.c	/^    char_u	*tagkind;	\/* "kind:" value *\/$/;"	m	struct:tag_pointers	file:	access:public
tagkind_end	src/tag.c	/^    char_u	*tagkind_end;	\/* end of tagkind *\/$/;"	m	struct:tag_pointers	file:	access:public
taglen_advance	src/tag.c	/^static void taglen_advance __ARGS((int l));$/;"	p	file:	signature:(int l)
taglen_advance	src/tag.c	/^taglen_advance(l)$/;"	f	file:
tagmatchname	src/tag.c	/^static char_u	*tagmatchname = NULL;	\/* name of last used tag *\/$/;"	v	file:
tagname	src/main.c	/^    char_u	*tagname;		\/* tag from -t argument *\/$/;"	m	struct:__anon9	file:	access:public
tagname	src/structs.h	/^    char_u	*tagname;	\/* tag name *\/$/;"	m	struct:taggy	access:public
tagname	src/tag.c	/^    char_u	*tagname;	\/* start of tag name (skip "file:") *\/$/;"	m	struct:tag_pointers	file:	access:public
tagname_T	src/structs.h	/^} tagname_T;$/;"	t	typeref:struct:__anon62
tagname_end	src/tag.c	/^    char_u	*tagname_end;	\/* char after tag name *\/$/;"	m	struct:tag_pointers	file:	access:public
tagname_free	src/tag.c	/^tagname_free(tnp)$/;"	f
tagptrs_T	src/tag.c	/^} tagptrs_T;$/;"	t	typeref:struct:tag_pointers	file:
tail	src/fileio.c	/^    char_u	*tail;		\/* tail of fname *\/$/;"	m	struct:AutoPatCmd	file:	access:public
taken	src/testdir/test49.vim	/^    let taken = ""$/;"	v
taken	src/testdir/test49.vim	/^let taken = ""$/;"	v
tar	runtime/plugin/tarPlugin.vim	/^augroup tar$/;"	a
tar#Browse	runtime/autoload/tar.vim	/^fun! tar#Browse(tarfile)$/;"	f
tar#Read	runtime/autoload/tar.vim	/^fun! tar#Read(fname,mode)$/;"	f
tar#Vimuntar	runtime/autoload/tar.vim	/^fun! tar#Vimuntar(...)$/;"	f
tar#Write	runtime/autoload/tar.vim	/^fun! tar#Write(fname)$/;"	f
target	src/gui_beval.h	/^    GtkWidget		*target;	\/* widget we are monitoring *\/$/;"	m	struct:BalloonEvalStruct	access:public
target_event_cb	src/gui_beval.c	/^static gint target_event_cb __ARGS((GtkWidget *, GdkEvent *, gpointer));$/;"	p	file:	signature:(GtkWidget *, GdkEvent *, gpointer)
target_event_cb	src/gui_beval.c	/^target_event_cb(GtkWidget *widget, GdkEvent *event, gpointer data)$/;"	f	file:	signature:(GtkWidget *widget, GdkEvent *event, gpointer data)
targets	src/dosinst.h	/^} targets[TARGET_COUNT] =$/;"	v	typeref:struct:__anon138
targets_atom	src/ui.c	/^static Atom	targets_atom;$/;"	v	file:
tasave_T	src/structs.h	/^} tasave_T;$/;"	t	typeref:struct:__anon50
task_handle	src/gui_riscos.c	/^int task_handle = 0;		\/* Zero means we are not yet a Wimp task *\/$/;"	v
tbButton	src/vimtbar.h	/^    TBBUTTON tbButton;$/;"	m	struct:tagADJUSTINFO	access:public
tb_buf	src/structs.h	/^    char_u	*tb_buf;	\/* buffer for typed characters *\/$/;"	m	struct:__anon49	access:public
tb_buflen	src/structs.h	/^    int		tb_buflen;	\/* size of tb_buf[] *\/$/;"	m	struct:__anon49	access:public
tb_change_cnt	src/structs.h	/^    int		tb_change_cnt;	\/* nr of time tb_buf was changed; never zero *\/$/;"	m	struct:__anon49	access:public
tb_len	src/structs.h	/^    int		tb_len;		\/* number of valid bytes in tb_buf[] *\/$/;"	m	struct:__anon49	access:public
tb_maplen	src/structs.h	/^    int		tb_maplen;	\/* nr of mapped bytes in tb_buf[] *\/$/;"	m	struct:__anon49	access:public
tb_no_abbr_cnt	src/structs.h	/^    int		tb_no_abbr_cnt; \/* nr of bytes without abbrev. in tb_buf[] *\/$/;"	m	struct:__anon49	access:public
tb_noremap	src/structs.h	/^    char_u	*tb_noremap;	\/* mapping flags for characters in tb_buf[] *\/$/;"	m	struct:__anon49	access:public
tb_off	src/structs.h	/^    int		tb_off;		\/* current position in tb_buf[] *\/$/;"	m	struct:__anon49	access:public
tb_silent	src/structs.h	/^    int		tb_silent;	\/* nr of silently mapped bytes in tb_buf[] *\/$/;"	m	struct:__anon49	access:public
tbis_flags	src/option.h	/^EXTERN unsigned tbis_flags;$/;"	v
tbpri	src/workshop.c	/^static int	 tbpri;			\/* ToolBar priority *\/$/;"	v	file:
tc_charsets	src/hardcopy.c	/^static struct prt_ps_charset_S tc_charsets[] =$/;"	v	typeref:struct:prt_ps_charset_S	file:
tc_encodings	src/hardcopy.c	/^static struct prt_ps_encoding_S tc_encodings[] =$/;"	v	typeref:struct:prt_ps_encoding_S	file:
tc_len	src/term.c	/^static int  tc_len = 0;	    \/* current number of entries in termcodes[] *\/$/;"	v	file:
tc_max_len	src/term.c	/^static int  tc_max_len = 0; \/* number of entries that termcodes[] can hold *\/$/;"	v	file:
tcl_buffer_free	src/if_tcl.c	/^tcl_buffer_free(buf)$/;"	f
tcl_enabled	src/if_tcl.c	/^tcl_enabled(verbose)$/;"	f
tcl_end	src/if_tcl.c	/^tcl_end()$/;"	f
tcl_funcname_table	src/if_tcl.c	/^} tcl_funcname_table[] = {$/;"	v	typeref:struct:__anon124	file:
tcl_info	src/if_tcl.c	/^} tcl_info;$/;"	t	typeref:struct:__anon123	file:
tcl_runtime_link_init	src/if_tcl.c	/^tcl_runtime_link_init(char *libname, int verbose)$/;"	f	file:	signature:(char *libname, int verbose)
tcl_window_free	src/if_tcl.c	/^tcl_window_free(win)$/;"	f
tcldelallrefs	src/if_tcl.c	/^tcldelallrefs(ref)$/;"	f	file:
tcldelthisinterp	src/if_tcl.c	/^static void tcldelthisinterp _ANSI_ARGS_ ((void));$/;"	p	file:	signature:(void)
tcldelthisinterp	src/if_tcl.c	/^tcldelthisinterp()$/;"	f	file:
tcldoexcommand	src/if_tcl.c	/^static int tcldoexcommand _ANSI_ARGS_ ((Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[], int objn));$/;"	p	file:	signature:(Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[], int objn)
tcldoexcommand	src/if_tcl.c	/^tcldoexcommand(interp, objc, objv, objn)$/;"	f	file:
tclerrmsg	src/if_tcl.c	/^static void tclerrmsg _ANSI_ARGS_((char *text));$/;"	p	file:	signature:(char *text)
tclerrmsg	src/if_tcl.c	/^tclerrmsg(text)$/;"	f	file:
tclexit	src/if_tcl.c	/^tclexit(error)$/;"	f	file:
tclfindwin	src/if_tcl.c	/^static win_T *tclfindwin _ANSI_ARGS_ ((buf_T *buf));$/;"	p	file:	signature:(buf_T *buf)
tclfindwin	src/if_tcl.c	/^tclfindwin(buf)$/;"	f	file:
tclgetbuffer	src/if_tcl.c	/^static char * tclgetbuffer _ANSI_ARGS_((Tcl_Interp *interp, buf_T *buf));$/;"	p	file:	signature:(Tcl_Interp *interp, buf_T *buf)
tclgetbuffer	src/if_tcl.c	/^tclgetbuffer(interp, buf)$/;"	f	file:
tclgetlinenum	src/if_tcl.c	/^static int tclgetlinenum _ANSI_ARGS_ ((Tcl_Interp *interp, Tcl_Obj *obj, int *valueP, buf_T *buf));$/;"	p	file:	signature:(Tcl_Interp *interp, Tcl_Obj *obj, int *valueP, buf_T *buf)
tclgetlinenum	src/if_tcl.c	/^tclgetlinenum(interp, obj, valueP, buf)$/;"	f	file:
tclgetref	src/if_tcl.c	/^tclgetref(interp, refstartP, prefix, vimobj, proc)$/;"	f	file:
tclgetwindow	src/if_tcl.c	/^static char * tclgetwindow _ANSI_ARGS_((Tcl_Interp *interp, win_T *win));$/;"	p	file:	signature:(Tcl_Interp *interp, win_T *win)
tclgetwindow	src/if_tcl.c	/^tclgetwindow(interp, win)$/;"	f	file:
tclinfo	src/if_tcl.c	/^static tcl_info tclinfo = { NULL, 0, 0, 0, NULL, NULL };$/;"	v	file:
tclinit	src/if_tcl.c	/^tclinit(eap)$/;"	f	file:
tclmsg	src/if_tcl.c	/^static void tclmsg _ANSI_ARGS_((char *text));$/;"	p	file:	signature:(char *text)
tclmsg	src/if_tcl.c	/^tclmsg(text)$/;"	f	file:
tclsetdelcmd	src/if_tcl.c	/^static int tclsetdelcmd _ANSI_ARGS_((Tcl_Interp *interp, struct ref *reflist, void *vimobj, Tcl_Obj *delcmd));$/;"	p	file:	signature:(Tcl_Interp *interp, struct ref *reflist, void *vimobj, Tcl_Obj *delcmd)
tclsetdelcmd	src/if_tcl.c	/^tclsetdelcmd(interp, reflist, vimobj, delcmd)$/;"	f	file:
tclsetoption	src/if_tcl.c	/^static int tclsetoption _ANSI_ARGS_ ((Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[], int objn));$/;"	p	file:	signature:(Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[], int objn)
tclsetoption	src/if_tcl.c	/^tclsetoption(interp, objc, objv, objn)$/;"	f	file:
tclupdatevars	src/if_tcl.c	/^static void tclupdatevars _ANSI_ARGS_((void));$/;"	p	file:	signature:(void)
tclupdatevars	src/if_tcl.c	/^tclupdatevars()$/;"	f	file:
tclvimexpr	src/if_tcl.c	/^static int tclvimexpr _ANSI_ARGS_ ((Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[], int objn));$/;"	p	file:	signature:(Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[], int objn)
tclvimexpr	src/if_tcl.c	/^tclvimexpr(interp, objc, objv, objn)$/;"	f	file:
tearoff_callback	src/gui_w32.c	/^static LRESULT APIENTRY tearoff_callback(HWND, UINT, WPARAM, LPARAM);$/;"	p	file:
tearoff_callback	src/gui_w32.c	/^tearoff_callback($/;"	f	file:	signature:( HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)
tearoff_handle	src/structs.h	/^    GtkWidget	*tearoff_handle;$/;"	m	struct:VimMenu	access:public
tearoff_handle	src/structs.h	/^    HWND	tearoff_handle;	    \/* hWnd of tearoff if created *\/$/;"	m	struct:VimMenu	access:public
tearoff_val	src/gui_motif.c	/^static int tearoff_val = (int)XmTEAR_OFF_ENABLED;$/;"	v	file:
temp_count	src/fileio.c	/^static long	temp_count = 0;		\/* Temp filename counter. *\/$/;"	v	file:
tempname	runtime/autoload/gzip.vim	/^fun s:tempname(name)$/;"	f
tent	src/termlib.c	/^char	*tent;		      \/* Pointer to terminal entry, set by tgetent *\/$/;"	v
term	src/main.c	/^    char_u	*term;			\/* specified terminal name *\/$/;"	m	struct:__anon9	file:	access:public
term	src/structs.h	/^	} term;$/;"	m	union:attr_entry::__anon45	typeref:struct:attr_entry::__anon45::__anon46	access:public
term_7to8bit	src/term.c	/^static int term_7to8bit __ARGS((char_u *p));$/;"	p	file:	signature:(char_u *p)
term_7to8bit	src/term.c	/^term_7to8bit(p)$/;"	f	file:
term_append_lines	src/term.c	/^term_append_lines(line_count)$/;"	f
term_attr_table	src/syntax.c	/^static garray_T	term_attr_table = {0, 0, 0, 0, NULL};$/;"	v	file:
term_bg_color	src/term.c	/^term_bg_color(n)$/;"	f
term_bg_default	src/option.c	/^static char_u *term_bg_default __ARGS((void));$/;"	p	file:	signature:(void)
term_bg_default	src/option.c	/^term_bg_default()$/;"	f	file:
term_color	src/term.c	/^static void term_color __ARGS((char_u *s, int n));$/;"	p	file:	signature:(char_u *s, int n)
term_color	src/term.c	/^term_color(s, n)$/;"	f	file:
term_console	src/globals.h	/^EXTERN int	term_console INIT(= FALSE); \/* set to TRUE when console used *\/$/;"	v
term_cursor_right	src/term.c	/^term_cursor_right(i)$/;"	f
term_cursor_shape	src/term.c	/^term_cursor_shape()$/;"	f
term_delete_lines	src/term.c	/^term_delete_lines(line_count)$/;"	f
term_fg_color	src/term.c	/^term_fg_color(n)$/;"	f
term_is_8bit	src/term.c	/^term_is_8bit(name)$/;"	f
term_is_builtin	src/term.c	/^static int term_is_builtin __ARGS((char_u *name));$/;"	p	file:	signature:(char_u *name)
term_is_builtin	src/term.c	/^term_is_builtin(name)$/;"	f	file:
term_is_gui	src/term.c	/^term_is_gui(name)$/;"	f
term_is_xterm	src/globals.h	/^EXTERN int	term_is_xterm INIT(= FALSE);	\/* xterm-like 'term' *\/$/;"	v
term_set_winpos	src/term.c	/^term_set_winpos(x, y)$/;"	f
term_set_winsize	src/term.c	/^term_set_winsize(width, height)$/;"	f
term_settitle	src/term.c	/^term_settitle(title)$/;"	f
term_str	src/vim.h	1657;"	d
term_strings	src/term.c	/^char_u *(term_strings[(int)KS_LAST + 1]);$/;"	v
term_windgoto	src/term.c	/^term_windgoto(row, col)$/;"	f
termcap_active	src/globals.h	/^EXTERN int	termcap_active INIT(= FALSE);	\/* set by starttermcap() *\/$/;"	v
termcap_mode_end	src/os_win32.c	/^static void termcap_mode_end(void);$/;"	p	file:	signature:(void)
termcap_mode_end	src/os_win32.c	/^termcap_mode_end(void)$/;"	f	file:	signature:(void)
termcap_mode_start	src/os_win32.c	/^static void termcap_mode_start(void);$/;"	p	file:	signature:(void)
termcap_mode_start	src/os_win32.c	/^termcap_mode_start(void)$/;"	f	file:	signature:(void)
termcapinit	src/term.c	/^termcapinit(name)$/;"	f
termcode	src/term.c	/^static struct termcode$/;"	s	file:
termcode::code	src/term.c	/^    char_u  *code;	    \/* terminal code (in allocated memory) *\/$/;"	m	struct:termcode	file:	access:public
termcode::len	src/term.c	/^    int	    len;	    \/* STRLEN(code) *\/$/;"	m	struct:termcode	file:	access:public
termcode::modlen	src/term.c	/^    int	    modlen;	    \/* length of part before ";*~". *\/$/;"	m	struct:termcode	file:	access:public
termcode::name	src/term.c	/^    char_u  name[2];	    \/* termcap name of entry *\/$/;"	m	struct:termcode	file:	access:public
termcode_star	src/term.c	/^static int termcode_star __ARGS((char_u *code, int len));$/;"	p	file:	signature:(char_u *code, int len)
termcode_star	src/term.c	/^termcode_star(code, len)$/;"	f	file:
termcodes	src/term.c	/^} *termcodes = NULL;$/;"	v	typeref:struct:termcode	file:
termleader	src/term.c	/^static char_u	termleader[256 + 1];	    \/* for check_termcode() *\/$/;"	v	file:
test_for_current	src/tag.c	/^static int test_for_current __ARGS((char_u *, char_u *, char_u *, char_u *));$/;"	p	file:	signature:(char_u *, char_u *, char_u *, char_u *)
test_for_current	src/tag.c	/^static int test_for_current __ARGS((int, char_u *, char_u *, char_u *, char_u *));$/;"	p	file:	signature:(int, char_u *, char_u *, char_u *, char_u *)
test_for_current	src/tag.c	/^test_for_current(is_etag, fname, fname_end, tag_fname, buf_ffname)$/;"	f	file:
test_for_static	src/tag.c	/^static int test_for_static __ARGS((tagptrs_T *));$/;"	p	file:	signature:(tagptrs_T *)
test_for_static	src/tag.c	/^test_for_static(tagp)$/;"	f	file:
test_sig	src/auto/configure	/^test_sig()$/;"	f
test_x11_window	src/os_unix.c	/^static int test_x11_window __ARGS((Display *dpy));$/;"	p	file:	signature:(Display *dpy)
test_x11_window	src/os_unix.c	/^test_x11_window(dpy)$/;"	f	file:
text	src/dosinst.c	/^    char    *text;			\/* text displayed for this choice *\/$/;"	m	struct:choice	file:	access:public
textArea	src/gui_athena.c	/^Widget textArea = (Widget)0;$/;"	v
textArea	src/gui_motif.c	/^Widget textArea;$/;"	v
textAreaForm	src/gui_motif.c	/^static Widget textAreaForm;$/;"	v	file:
textResources	src/gui_at_fs.c	/^static XtResource textResources[] =$/;"	v	file:
text_atom	src/ui.c	/^static Atom	text_atom;$/;"	v	file:
text_bg	src/os_riscos.c	/^text_bg(bg)$/;"	f	file:
text_context	src/gui.h	/^    PangoContext     *text_context; \/* the context used for all text *\/$/;"	m	struct:Gui	access:public
text_fg	src/os_riscos.c	/^text_fg(fg)$/;"	f	file:
text_gc	src/gui.h	/^    GC		text_gc;$/;"	m	struct:Gui	access:public
text_gc	src/gui.h	/^    GdkGC	*text_gc;	    \/* cached GC for normal text *\/$/;"	m	struct:Gui	access:public
text_locked	src/ex_getln.c	/^text_locked()$/;"	f
text_locked_msg	src/ex_getln.c	/^text_locked_msg()$/;"	f
textattr	src/os_win32.c	/^static void textattr(WORD wAttr);$/;"	p	file:	signature:(WORD wAttr)
textattr	src/os_win32.c	/^textattr(WORD wAttr)$/;"	f	file:	signature:(WORD wAttr)
textbackground	src/os_win32.c	/^static void textbackground(WORD wAttr);$/;"	p	file:	signature:(WORD wAttr)
textbackground	src/os_win32.c	/^textbackground(WORD wAttr)$/;"	f	file:	signature:(WORD wAttr)
textcol	src/ops.c	/^    colnr_T	textcol;	\/* index of chars (partially) in block *\/$/;"	m	struct:block_def	file:	access:public
textcolor	src/os_win32.c	/^static void textcolor(WORD wAttr);$/;"	p	file:	signature:(WORD wAttr)
textcolor	src/os_win32.c	/^textcolor(WORD wAttr)$/;"	f	file:	signature:(WORD wAttr)
textdomain	src/gui_gtk.c	51;"	d	file:
textdomain	src/gui_gtk_x11.c	35;"	d	file:
textdomain	src/vim.h	579;"	d
textdomain	src/vim.h	601;"	d
textdomain	src/vim.h	603;"	d
textlen	src/ops.c	/^    int		textlen;	\/* chars in block *\/$/;"	m	struct:block_def	file:	access:public
textlock	src/globals.h	/^EXTERN int	textlock INIT(= 0);$/;"	v
textstart	src/ops.c	/^    char_u	*textstart;	\/* pointer to 1st char (partially) in block *\/$/;"	m	struct:block_def	file:	access:public
tgetch	src/os_win32.c	/^static char_u tgetch(int *pmodifiers, char_u *pch2);$/;"	p	file:	signature:(int *pmodifiers, char_u *pch2)
tgetch	src/os_win32.c	/^tgetch(int *pmodifiers, char_u *pch2)$/;"	f	file:	signature:(int *pmodifiers, char_u *pch2)
tgetent	src/termlib.c	/^tgetent(tbuf, term)$/;"	f
tgetent_error	src/term.c	/^static char_u *tgetent_error __ARGS((char_u *, char_u *));$/;"	p	file:	signature:(char_u *, char_u *)
tgetent_error	src/term.c	/^tgetent_error(tbuf, term)$/;"	f	file:
tgetflag	src/termlib.c	/^tgetflag(id)$/;"	f
tgetnum	src/termlib.c	/^tgetnum(id)$/;"	f
tgetstr	src/term.c	/^char		*tgetstr __ARGS((char *, char **));$/;"	p	file:	signature:(char *, char **)
tgetstr	src/term.c	25;"	d	file:
tgetstr	src/term.c	51;"	d	file:
tgetstr	src/termlib.c	/^tgetstr(id, buf)$/;"	f
tgoto	src/term.c	/^static char *tgoto __ARGS((char *, int, int));$/;"	p	file:	signature:(char *, int, int)
tgoto	src/term.c	/^tgoto(cm, x, y)$/;"	f	file:
tgoto	src/termlib.c	/^tgoto(cm, col, line)$/;"	f
theApp	src/VisVim/VisVim.cpp	/^CVisVimApp theApp;$/;"	v
theDate	src/gui_mac.c	/^    long *theDate;  \/* where to put the modification date\/time *\/$/;"	m	struct:CW_GetText	file:	access:public
theDate	src/gui_mac.c	/^    long *theDate; \/\/ where to put the modification date\/time$/;"	m	struct:WindowSearch	file:	access:public
theDate	src/gui_mac.c	/^    long theDate; \/\/ modification date\/time$/;"	m	struct:SelectionRange	file:	access:public
theDate	src/gui_mac.c	/^    long theDate; \/\/ the date\/time the file was last modified$/;"	m	struct:ModificationInfo	file:	access:public
theFile	src/gui_mac.c	/^    FSSpec theFile; \/* identifies the file *\/$/;"	m	struct:CW_GetText	file:	access:public
theFile	src/gui_mac.c	/^    FSSpec theFile; \/\/ identifies the file$/;"	m	struct:ModificationInfo	file:	access:public
theFile	src/gui_mac.c	/^    FSSpec theFile; \/\/ identifies the file$/;"	m	struct:WindowSearch	file:	access:public
theText	src/gui_mac.c	/^    Handle theText; \/* the location where you return the text (must be resized properly) *\/$/;"	m	struct:CW_GetText	file:	access:public
thickness	src/gui_at_sb.h	/^    Dimension	  thickness;	\/* either width or height *\/$/;"	m	struct:__anon31	access:public
thread_id	src/os_beos.c	23;"	d	file:
thrmsg	src/testdir/test49.vim	/^	    let thrmsg = ""$/;"	v
thrmsg	src/testdir/test49.vim	/^	    let thrmsg = substitute(v:exception, '^Vim\\((\\a\\+)\\)\\=:', '', "")$/;"	v
throw_exception	src/ex_eval.c	/^static int	throw_exception __ARGS((void *, int, char_u *));$/;"	p	file:	signature:(void *, int, char_u *)
throw_exception	src/ex_eval.c	/^throw_exception(value, type, cmdname)$/;"	f	file:
throw_lnum	src/structs.h	/^    linenr_T		throw_lnum;	\/* line number of the throw point *\/$/;"	m	struct:vim_exception	access:public
throw_msg	src/structs.h	/^    char_u		*throw_msg;	\/* msg to throw: usually original one *\/$/;"	m	struct:msglist	access:public
throw_name	src/structs.h	/^    char_u		*throw_name;	\/* name of the throw point *\/$/;"	m	struct:vim_exception	access:public
throwcount	src/testdir/test49.vim	/^let throwcount = 0$/;"	v
throwpoint	src/testdir/test49.vim	/^		let throwpoint = v:throwpoint$/;"	v
throwpoint	src/testdir/test49.vim	/^	    let throwpoint = v:throwpoint$/;"	v
throwpoint	src/testdir/test49.vim	/^	let throwpoint = v:throwpoint$/;"	v
throwpoint	src/testdir/test49.vim	/^    let throwpoint = v:throwpoint$/;"	v
thumb	src/gui_at_sb.h	/^    Pixmap	  thumb;	\/* thumb color *\/$/;"	m	struct:__anon31	access:public
thumbProc	src/gui_at_sb.h	/^    XtCallbackList thumbProc;	\/* jump (to position) scroll *\/$/;"	m	struct:__anon31	access:public
ti_change	src/buffer.c	/^static int	ti_change __ARGS((char_u *str, char_u **last));$/;"	p	file:	signature:(char_u *str, char_u **last)
ti_change	src/buffer.c	/^ti_change(str, last)$/;"	f	file:
tilde_replace	src/ex_getln.c	/^tilde_replace(orig_pat, num_files, files)$/;"	f
time_diff	src/main.c	/^static void time_diff __ARGS((struct timeval *then, struct timeval *now));$/;"	p	file:	signature:(struct timeval *then, struct timeval *now)
time_diff	src/main.c	/^time_diff(then, now)$/;"	f	file:
time_differs	src/fileio.c	/^static int time_differs __ARGS((long t1, long t2));$/;"	p	file:	signature:(long t1, long t2)
time_differs	src/fileio.c	/^time_differs(t1, t2)$/;"	f	file:
time_fd	src/globals.h	/^EXTERN FILE *time_fd INIT(= NULL);  \/* where to write startup timing *\/$/;"	v
time_msg	src/main.c	/^time_msg(mesg, tv_start)$/;"	f
time_of_last_poll	src/swis.s	/^time_of_last_poll:  dcd	0$/;"	l
time_pop	src/main.c	/^time_pop(tp)$/;"	f
time_push	src/main.c	/^time_push(tv_rel, tv_start)$/;"	f
timeout_cb	src/gui_beval.c	/^static gint timeout_cb __ARGS((gpointer));$/;"	p	file:	signature:(gpointer)
timeout_cb	src/gui_beval.c	/^timeout_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
timer	src/gui_athena.c	/^static XtIntervalId timer = 0;	    \/* 0 = expired, otherwise active *\/$/;"	v	file:
timerID	src/gui_beval.h	/^    unsigned int	timerID;	\/* timer for run *\/$/;"	m	struct:BalloonEvalStruct	access:public
timerRoutine	src/gui_beval.c	/^static void timerRoutine __ARGS((XtPointer, XtIntervalId *));$/;"	p	file:	signature:(XtPointer, XtIntervalId *)
timerRoutine	src/gui_beval.c	/^timerRoutine(dx, id)$/;"	f	file:
timerUPP	src/if_mzsch.c	/^static EventLoopTimerUPP timerUPP;$/;"	v	file:
timer_id	src/gui_at_sb.h	/^    XtIntervalId  timer_id;	\/* autorepeat timer; remove on destruction *\/$/;"	m	struct:__anon31	access:public
timer_id	src/if_mzsch.c	/^static EventLoopTimerRef timer_id = NULL;$/;"	v	file:
timer_id	src/if_mzsch.c	/^static UINT timer_id = 0;$/;"	v	file:
timer_id	src/if_mzsch.c	/^static XtIntervalId timer_id = (XtIntervalId)0;$/;"	v	file:
timer_id	src/if_mzsch.c	/^static guint timer_id = 0;$/;"	v	file:
timer_proc	src/if_mzsch.c	/^pascal void timer_proc(EventLoopTimerRef, void *);$/;"	p	file:	signature:(EventLoopTimerRef, void *)
timer_proc	src/if_mzsch.c	/^static gint timer_proc(gpointer);$/;"	p	file:
timer_proc	src/if_mzsch.c	/^static void CALLBACK timer_proc(HWND, UINT, UINT, DWORD);$/;"	p	file:
timer_proc	src/if_mzsch.c	/^static void timer_proc(XtPointer, XtIntervalId *);$/;"	p	file:	signature:(XtPointer, XtIntervalId *)
timer_proc	src/if_mzsch.c	/^timer_proc(HWND hwnd UNUSED, UINT uMsg UNUSED, UINT idEvent UNUSED, DWORD dwTime UNUSED)$/;"	f	file:	signature:(HWND hwnd UNUSED, UINT uMsg UNUSED, UINT idEvent UNUSED, DWORD dwTime UNUSED)
timestamp_atom	src/ui.c	/^static Atom	timestamp_atom;	\/* Used to get a timestamp *\/$/;"	v	file:
tip	src/structs.h	/^    BalloonEval *tip;		    \/* tooltip for this menu item *\/$/;"	m	struct:VimMenu	access:public
title	src/hardcopy.c	/^    char_u  title[256];$/;"	m	struct:prt_ps_resource_S	file:	access:public
tltoa	src/term.c	/^tltoa(i)$/;"	f
tm	src/structs.h	/^    proftime_T	tm;	\/* for a time limit *\/$/;"	m	struct:__anon56	access:public
tmpfile	src/testdir/test49.vim	/^	    let tmpfile = tempname()$/;"	v
tmpfile	src/testdir/test49.vim	/^	let tmpfile = tempname()$/;"	v
tn_did_filefind_init	src/structs.h	/^    int		tn_did_filefind_init;$/;"	m	struct:__anon62	access:public
tn_hf_idx	src/structs.h	/^    int		tn_hf_idx;$/;"	m	struct:__anon62	access:public
tn_np	src/structs.h	/^    char_u	*tn_np;		\/* current position in tn_tags *\/$/;"	m	struct:__anon62	access:public
tn_search_ctx	src/structs.h	/^    void	*tn_search_ctx;$/;"	m	struct:__anon62	access:public
tn_tags	src/structs.h	/^    char_u	*tn_tags;	\/* value of 'tags' when starting *\/$/;"	m	struct:__anon62	access:public
to	src/digraph.c	/^    char_u	*to;$/;"	m	struct:__anon125	file:	access:public
to	src/menu.c	/^    char_u	*to;		\/* translated name *\/$/;"	m	struct:__anon68	file:	access:public
to	src/option.c	/^    int     to;$/;"	m	struct:__anon2	file:	access:public
toF_Rjoin	src/farsi.c	/^static int toF_Rjoin __ARGS((int c));$/;"	p	file:	signature:(int c)
toF_Rjoin	src/farsi.c	/^toF_Rjoin(c)$/;"	f	file:
toF_TyA	src/farsi.c	/^toF_TyA(c)$/;"	f
toF_TyB	src/farsi.c	/^static int toF_TyB __ARGS((int c));$/;"	p	file:	signature:(int c)
toF_TyB	src/farsi.c	/^toF_TyB(c)$/;"	f	file:
toF_Xor_X_	src/farsi.c	/^static int toF_Xor_X_ __ARGS((int c));$/;"	p	file:	signature:(int c)
toF_Xor_X_	src/farsi.c	/^toF_Xor_X_(c)$/;"	f	file:
toF_ending	src/farsi.c	/^static int toF_ending __ARGS((int c));$/;"	p	file:	signature:(int c)
toF_ending	src/farsi.c	/^toF_ending(c)$/;"	f	file:
toF_leading	src/farsi.c	/^static int toF_leading __ARGS((int c));$/;"	p	file:	signature:(int c)
toF_leading	src/farsi.c	/^toF_leading(c)$/;"	f	file:
toLower	src/mbyte.c	/^static convertStruct toLower[] =$/;"	v	file:
toUpper	src/mbyte.c	/^static convertStruct toUpper[] =$/;"	v	file:
to_device_units	src/hardcopy.c	/^static float to_device_units __ARGS((int idx, double physsize, int def_number));$/;"	p	file:	signature:(int idx, double physsize, int def_number)
to_device_units	src/hardcopy.c	/^to_device_units(idx, physsize, def_number)$/;"	f	file:
to_device_units	src/os_mswin.c	/^to_device_units(int idx, int dpi, int physsize, int offset, int def_number)$/;"	f	file:	signature:(int idx, int dpi, int physsize, int offset, int def_number)
to_fp	src/if_cscope.h	/^    FILE *	    to_fp;	\/* to cscope: FILE. *\/$/;"	m	struct:csi	access:public
toend	runtime/ftplugin/cobol.vim	/^function! s:toend(direction)$/;"	f
toggle_Magic	src/regexp.c	/^static int toggle_Magic __ARGS((int x));$/;"	p	file:	signature:(int x)
toggle_Magic	src/regexp.c	/^toggle_Magic(x)$/;"	f	file:
toggle_bat_choice	src/dosinst.c	/^toggle_bat_choice(int idx)$/;"	f	file:	signature:(int idx)
toggle_shortcut_choice	src/dosinst.c	/^toggle_shortcut_choice(int idx)$/;"	f	signature:(int idx)
toggle_startmenu_choice	src/dosinst.c	/^toggle_startmenu_choice(int idx)$/;"	f	file:	signature:(int idx)
toggle_tearoff	src/gui_motif.c	/^static void toggle_tearoff __ARGS((Widget wid));$/;"	p	file:	signature:(Widget wid)
toggle_tearoff	src/gui_motif.c	/^toggle_tearoff(wid)$/;"	f	file:
tohtml#Convert2HTML	runtime/autoload/tohtml.vim	/^func! tohtml#Convert2HTML(line1, line2)$/;"	f
tohtml#Diff2HTML	runtime/autoload/tohtml.vim	/^func! tohtml#Diff2HTML(win_list, buf_list)$/;"	f
tohtml#GetOption	runtime/autoload/tohtml.vim	/^func! tohtml#GetOption(settings, option, default)$/;"	f
tohtml#GetUserSettings	runtime/autoload/tohtml.vim	/^func! tohtml#GetUserSettings()$/;"	f
toline	src/po/check.vim	/^    let toline = GetMline()$/;"	v
tolower_tab	src/globals.h	/^EXTERN char_u	tolower_tab[256];	\/* table for tolower() *\/$/;"	v
toolBar	src/gui_athena.c	/^static Widget toolBar = (Widget)0;$/;"	v	file:
toolBar	src/gui_motif.c	/^static Widget toolBar;$/;"	v	file:
toolBarFrame	src/gui_motif.c	/^static Widget toolBarFrame;$/;"	v	file:
toolbar	src/gui.h	/^    GtkWidget	*toolbar;	    \/* toolbar *\/$/;"	m	struct:Gui	access:public
toolbar_button_focus_in_event	src/gui_gtk.c	/^toolbar_button_focus_in_event(GtkWidget *widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GdkEventFocus *event UNUSED, gpointer data UNUSED)
toolbar_flags	src/option.h	/^EXTERN unsigned toolbar_flags;$/;"	v
toolbar_h	src/gui.h	/^    GtkWidget	*toolbar_h;	    \/* toolbar handle *\/$/;"	m	struct:Gui	access:public
toolbar_height	src/gui.h	/^    int		toolbar_height;	    \/* height of the toolbar *\/$/;"	m	struct:Gui	access:public
toolbar_height	src/gui.h	/^    int		toolbar_height;$/;"	m	struct:Gui	access:public
toolbar_names	src/menu.c	/^static const char *toolbar_names[] =$/;"	v	file:
toolbarbutton_enter_cb	src/gui_motif.c	/^static void toolbarbutton_enter_cb __ARGS((Widget, XtPointer, XEvent *, Boolean *));$/;"	p	file:	signature:(Widget, XtPointer, XEvent *, Boolean *)
toolbarbutton_enter_cb	src/gui_motif.c	/^toolbarbutton_enter_cb(w, client_data, event, cont)$/;"	f	file:
toolbarbutton_leave_cb	src/gui_motif.c	/^static void toolbarbutton_leave_cb __ARGS((Widget, XtPointer, XEvent *, Boolean *));$/;"	p	file:	signature:(Widget, XtPointer, XEvent *, Boolean *)
toolbarbutton_leave_cb	src/gui_motif.c	/^toolbarbutton_leave_cb(w, client_data, event, cont)$/;"	f	file:
tooltip_bg_pixel	src/gui.h	/^    guicolor_T	tooltip_bg_pixel;	\/* tooltip background color *\/$/;"	m	struct:Gui	access:public
tooltip_fg_pixel	src/gui.h	/^    guicolor_T	tooltip_fg_pixel;	\/* tooltip foreground color *\/$/;"	m	struct:Gui	access:public
tooltip_fontset	src/gui.h	/^    XFontSet	tooltip_fontset;	\/* tooltip fontset *\/$/;"	m	struct:Gui	access:public
top	src/gui.h	/^    int		top;		\/* Top of scroll bar (chars from row 0) *\/$/;"	m	struct:GuiScrollbar	access:public
top	src/gui_at_sb.h	/^    float	  top;		\/* What percent is above the win's top *\/$/;"	m	struct:__anon31	access:public
topLeft	src/gui_mac.c	126;"	d	file:
topLevelShellClassRec	src/gui_gtk_vms.h	671;"	d
topLevelShellWidgetClass	src/gui_gtk_vms.h	672;"	d
topLoc	src/gui_at_sb.h	/^    Position	  topLoc;	\/* Pixel that corresponds to top *\/$/;"	m	struct:__anon31	access:public
top_bot_msg	src/globals.h	/^EXTERN char top_bot_msg[] INIT(= N_("search hit TOP, continuing at BOTTOM"));$/;"	v
top_file_num	src/buffer.c	/^static int  top_file_num = 1;		\/* highest file number *\/$/;"	v	file:
top_shadow_GC	src/gui_at_sb.h	/^    GC		top_shadow_GC;$/;"	m	struct:__anon31	access:public
top_shadow_contrast	src/gui_at_sb.h	/^    int		top_shadow_contrast;$/;"	m	struct:__anon31	access:public
top_shadow_pixel	src/gui_at_sb.h	/^    Pixel	top_shadow_pixel;$/;"	m	struct:__anon31	access:public
topback	runtime/doc/makehtml.awk	/^function topback () {$/;"	f
topback	runtime/doc/maketags.awk	/^function topback () {$/;"	f
topframe	src/globals.h	/^EXTERN frame_T	*topframe;	\/* top of the window frame tree *\/$/;"	v
topindent	runtime/ftplugin/ocaml.vim	/^function s:topindent(lnum)$/;"	f
topline_back	src/move.c	/^static void topline_back __ARGS((lineoff_T *lp));$/;"	p	file:	signature:(lineoff_T *lp)
topline_back	src/move.c	/^topline_back(lp)$/;"	f	file:
topline_botline	src/move.c	/^static void topline_botline __ARGS((lineoff_T *lp));$/;"	p	file:	signature:(lineoff_T *lp)
topline_botline	src/move.c	/^topline_botline(lp)$/;"	f	file:
topmsg	src/tag.c	/^static char_u *topmsg = (char_u *)N_("E556: at top of tag stack");$/;"	v	file:
total	src/structs.h	/^  UINT32_T total[2];$/;"	m	struct:__anon63	access:public
total_mem_used	src/memfile.c	/^static long_u	total_mem_used = 0;	\/* total memory used for memfiles *\/$/;"	v	file:
toupper_tab	src/globals.h	/^EXTERN char_u	toupper_tab[256];	\/* table for toupper() *\/$/;"	v
tp_ch_used	src/structs.h	/^    long	    tp_ch_used;	    \/* value of 'cmdheight' when frame size$/;"	m	struct:tabpage_S	access:public
tp_curwin	src/structs.h	/^    win_T	    *tp_curwin;	    \/* current window in this Tab page *\/$/;"	m	struct:tabpage_S	access:public
tp_diff_invalid	src/structs.h	/^    int		    tp_diff_invalid;	\/* list of diffs is outdated *\/$/;"	m	struct:tabpage_S	access:public
tp_diffbuf	src/structs.h	/^    buf_T	    *(tp_diffbuf[DB_COUNT]);$/;"	m	struct:tabpage_S	access:public
tp_first_diff	src/structs.h	/^    diff_T	    *tp_first_diff;$/;"	m	struct:tabpage_S	access:public
tp_firstwin	src/structs.h	/^    win_T	    *tp_firstwin;   \/* first window in this Tab page *\/$/;"	m	struct:tabpage_S	access:public
tp_lastwin	src/structs.h	/^    win_T	    *tp_lastwin;    \/* last window in this Tab page *\/$/;"	m	struct:tabpage_S	access:public
tp_next	src/structs.h	/^    tabpage_T	    *tp_next;	    \/* next tabpage or NULL *\/$/;"	m	struct:tabpage_S	access:public
tp_old_Columns	src/structs.h	/^    long	    tp_old_Columns; \/* Columns when Tab page was left *\/$/;"	m	struct:tabpage_S	access:public
tp_old_Rows	src/structs.h	/^    long	    tp_old_Rows;    \/* Rows when Tab page was left *\/$/;"	m	struct:tabpage_S	access:public
tp_prev_which_scrollbars	src/structs.h	/^    int		    tp_prev_which_scrollbars[3];$/;"	m	struct:tabpage_S	access:public
tp_prevwin	src/structs.h	/^    win_T	    *tp_prevwin;    \/* previous window in this Tab page *\/$/;"	m	struct:tabpage_S	access:public
tp_snapshot	src/structs.h	/^    frame_T	    *(tp_snapshot[SNAP_COUNT]);  \/* window layout snapshots *\/$/;"	m	struct:tabpage_S	access:public
tp_topframe	src/structs.h	/^    frame_T	    *tp_topframe;   \/* topframe for the windows *\/$/;"	m	struct:tabpage_S	access:public
tp_vars	src/structs.h	/^    dict_T	    tp_vars;	    \/* internal variables, local to tab page *\/$/;"	m	struct:tabpage_S	access:public
tp_winvar	src/structs.h	/^    dictitem_T	    tp_winvar;	    \/* variable for "t:" Dictionary *\/$/;"	m	struct:tabpage_S	access:public
tputs	src/termlib.c	/^tputs(cp, affcnt, outc)$/;"	f
trans_characters	src/charset.c	/^trans_characters(buf, bufsize)$/;"	f
trans_function_name	src/eval.c	/^static char_u *trans_function_name __ARGS((char_u **pp, int skip, int flags, funcdict_T *fd));$/;"	p	file:	signature:(char_u **pp, int skip, int flags, funcdict_T *fd)
trans_function_name	src/eval.c	/^trans_function_name(pp, skip, flags, fdp)$/;"	f	file:
trans_special	src/misc2.c	/^trans_special(srcp, dst, keycode)$/;"	f
transchar	src/charset.c	/^transchar(c)$/;"	f
transchar_buf	src/charset.c	/^static char_u	transchar_buf[7];$/;"	v	file:
transchar_byte	src/charset.c	/^transchar_byte(c)$/;"	f
transchar_byte	src/vim.h	1936;"	d
transchar_hex	src/charset.c	/^transchar_hex(buf, c)$/;"	f
transchar_nonprint	src/charset.c	/^transchar_nonprint(buf, c)$/;"	f
transientShellWidgetClass	src/gui_gtk_vms.h	673;"	d
translate_altkeys	src/os_msdos.c	/^translate_altkeys(int rawkey)$/;"	f	file:	signature:(int rawkey)
translate_mapping	src/term.c	/^translate_mapping(str, expmap)$/;"	f
translate_mnemonic_tag	src/gui_gtk.c	/^translate_mnemonic_tag(char_u *name, int use_mnemonic)$/;"	f	file:	signature:(char_u *name, int use_mnemonic)
translate_pango_attributes	src/mbyte.c	/^translate_pango_attributes(PangoAttrIterator *iter)$/;"	f	file:	signature:(PangoAttrIterator *iter)
transstr	src/charset.c	/^transstr(s)$/;"	f
trash_input_buf	src/ui.c	/^trash_input_buf()$/;"	f
tree_add_word	src/spell.c	/^static int tree_add_word __ARGS((spellinfo_T *spin, char_u *word, wordnode_T *tree, int flags, int region, int affixID));$/;"	p	file:	signature:(spellinfo_T *spin, char_u *word, wordnode_T *tree, int flags, int region, int affixID)
tree_add_word	src/spell.c	/^tree_add_word(spin, word, root, flags, region, affixID)$/;"	f	file:
tree_count_words	src/spell.c	/^static void tree_count_words __ARGS((char_u *byts, idx_T *idxs));$/;"	p	file:	signature:(char_u *byts, idx_T *idxs)
tree_count_words	src/spell.c	/^tree_count_words(byts, idxs)$/;"	f	file:
trigger_cursorhold	src/fileio.c	/^trigger_cursorhold()$/;"	f
trimmed_system_with_default	runtime/ftplugin/changelog.vim	/^  function! s:trimmed_system_with_default(command, default)$/;"	f
trunc_string	src/message.c	/^trunc_string(s, buf, room)$/;"	f
truncate_line	src/misc1.c	/^truncate_line(fixpos)$/;"	f
truncate_spaces	src/edit.c	/^truncate_spaces(line)$/;"	f
try_reading_file	runtime/ftplugin/changelog.vim	/^  function! s:try_reading_file(path)$/;"	f
trylevel	src/ex_docmd.c	/^    int		trylevel;$/;"	m	struct:dbg_stuff	file:	access:public
trylevel	src/globals.h	/^EXTERN int trylevel INIT(= 0);$/;"	v
trystate_S	src/spell.c	/^typedef struct trystate_S$/;"	s	file:
trystate_S::ts_arridx	src/spell.c	/^    idx_T	ts_arridx;	\/* index in tree array, start of node *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_complen	src/spell.c	/^    char_u	ts_complen;	\/* nr of compound words used *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_compsplit	src/spell.c	/^    char_u	ts_compsplit;	\/* index for "compflags" where word was spit *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_curi	src/spell.c	/^    short	ts_curi;	\/* index in list of child nodes *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_delidx	src/spell.c	/^    char_u	ts_delidx;	\/* index in fword for char that was deleted,$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_fcharstart	src/spell.c	/^    char_u	ts_fcharstart;	\/* index in fword where badword char started *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_fidx	src/spell.c	/^    char_u	ts_fidx;	\/* index in fword[], case-folded bad word *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_fidxtry	src/spell.c	/^    char_u	ts_fidxtry;	\/* ts_fidx at which bytes may be changed *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_flags	src/spell.c	/^    char_u	ts_flags;	\/* TSF_ flags *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_isdiff	src/spell.c	/^    char_u	ts_isdiff;	\/* DIFF_ values *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_prefixdepth	src/spell.c	/^    char_u	ts_prefixdepth;	\/* stack depth for end of prefix or$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_prewordlen	src/spell.c	/^    char_u	ts_prewordlen;	\/* length of word in "preword[]" *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_save_badflags	src/spell.c	/^    char_u	ts_save_badflags;   \/* su_badflags saved here *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_score	src/spell.c	/^    int		ts_score;	\/* score *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_splitfidx	src/spell.c	/^    char_u	ts_splitfidx;	\/* "ts_fidx" at word split *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_splitoff	src/spell.c	/^    char_u	ts_splitoff;	\/* index in "tword" after last split *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_state	src/spell.c	/^    state_T	ts_state;	\/* state at this level, STATE_ *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_tcharidx	src/spell.c	/^    char_u	ts_tcharidx;	\/* current byte index in tword character *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_tcharlen	src/spell.c	/^    char_u	ts_tcharlen;	\/* number of bytes in tword character *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_S::ts_twordlen	src/spell.c	/^    char_u	ts_twordlen;	\/* valid length of tword[] *\/$/;"	m	struct:trystate_S	file:	access:public
trystate_T	src/spell.c	/^} trystate_T;$/;"	t	typeref:struct:trystate_S	file:
ts	src/gui_beval.h	/^    int			ts;		\/* tabstop setting for this buffer *\/$/;"	m	struct:BalloonEvalStruct	access:public
ts_arridx	src/spell.c	/^    idx_T	ts_arridx;	\/* index in tree array, start of node *\/$/;"	m	struct:trystate_S	file:	access:public
ts_complen	src/spell.c	/^    char_u	ts_complen;	\/* nr of compound words used *\/$/;"	m	struct:trystate_S	file:	access:public
ts_compsplit	src/spell.c	/^    char_u	ts_compsplit;	\/* index for "compflags" where word was spit *\/$/;"	m	struct:trystate_S	file:	access:public
ts_curi	src/spell.c	/^    short	ts_curi;	\/* index in list of child nodes *\/$/;"	m	struct:trystate_S	file:	access:public
ts_delidx	src/spell.c	/^    char_u	ts_delidx;	\/* index in fword for char that was deleted,$/;"	m	struct:trystate_S	file:	access:public
ts_fcharstart	src/spell.c	/^    char_u	ts_fcharstart;	\/* index in fword where badword char started *\/$/;"	m	struct:trystate_S	file:	access:public
ts_fidx	src/spell.c	/^    char_u	ts_fidx;	\/* index in fword[], case-folded bad word *\/$/;"	m	struct:trystate_S	file:	access:public
ts_fidxtry	src/spell.c	/^    char_u	ts_fidxtry;	\/* ts_fidx at which bytes may be changed *\/$/;"	m	struct:trystate_S	file:	access:public
ts_flags	src/spell.c	/^    char_u	ts_flags;	\/* TSF_ flags *\/$/;"	m	struct:trystate_S	file:	access:public
ts_isdiff	src/spell.c	/^    char_u	ts_isdiff;	\/* DIFF_ values *\/$/;"	m	struct:trystate_S	file:	access:public
ts_prefixdepth	src/spell.c	/^    char_u	ts_prefixdepth;	\/* stack depth for end of prefix or$/;"	m	struct:trystate_S	file:	access:public
ts_prewordlen	src/spell.c	/^    char_u	ts_prewordlen;	\/* length of word in "preword[]" *\/$/;"	m	struct:trystate_S	file:	access:public
ts_save_badflags	src/spell.c	/^    char_u	ts_save_badflags;   \/* su_badflags saved here *\/$/;"	m	struct:trystate_S	file:	access:public
ts_score	src/spell.c	/^    int		ts_score;	\/* score *\/$/;"	m	struct:trystate_S	file:	access:public
ts_splitfidx	src/spell.c	/^    char_u	ts_splitfidx;	\/* "ts_fidx" at word split *\/$/;"	m	struct:trystate_S	file:	access:public
ts_splitoff	src/spell.c	/^    char_u	ts_splitoff;	\/* index in "tword" after last split *\/$/;"	m	struct:trystate_S	file:	access:public
ts_state	src/spell.c	/^    state_T	ts_state;	\/* state at this level, STATE_ *\/$/;"	m	struct:trystate_S	file:	access:public
ts_tcharidx	src/spell.c	/^    char_u	ts_tcharidx;	\/* current byte index in tword character *\/$/;"	m	struct:trystate_S	file:	access:public
ts_tcharlen	src/spell.c	/^    char_u	ts_tcharlen;	\/* number of bytes in tword character *\/$/;"	m	struct:trystate_S	file:	access:public
ts_twordlen	src/spell.c	/^    char_u	ts_twordlen;	\/* valid length of tword[] *\/$/;"	m	struct:trystate_S	file:	access:public
ttest	src/term.c	/^ttest(pairs)$/;"	f
ttym_flags	src/option.h	/^EXTERN unsigned ttym_flags;$/;"	v
tv2string	src/eval.c	/^static char_u *tv2string __ARGS((typval_T *tv, char_u **tofree, char_u *numbuf, int copyID));$/;"	p	file:	signature:(typval_T *tv, char_u **tofree, char_u *numbuf, int copyID)
tv2string	src/eval.c	/^tv2string(tv, tofree, numbuf, copyID)$/;"	f	file:
tv_check_lock	src/eval.c	/^static int tv_check_lock __ARGS((int lock, char_u *name));$/;"	p	file:	signature:(int lock, char_u *name)
tv_check_lock	src/eval.c	/^tv_check_lock(lock, name)$/;"	f	file:
tv_equal	src/eval.c	/^static int tv_equal __ARGS((typval_T *tv1, typval_T *tv2, int ic));$/;"	p	file:	signature:(typval_T *tv1, typval_T *tv2, int ic)
tv_equal	src/eval.c	/^tv_equal(tv1, tv2, ic)$/;"	f	file:
tv_float	src/message.c	/^static double tv_float __ARGS((typval_T *tvs, int *idxp));$/;"	p	file:	signature:(typval_T *tvs, int *idxp)
tv_float	src/message.c	/^tv_float(tvs, idxp)$/;"	f	file:
tv_islocked	src/eval.c	/^static int tv_islocked __ARGS((typval_T *tv));$/;"	p	file:	signature:(typval_T *tv)
tv_islocked	src/eval.c	/^tv_islocked(tv)$/;"	f	file:
tv_nr	src/message.c	/^static long tv_nr __ARGS((typval_T *tvs, int *idxp));$/;"	p	file:	signature:(typval_T *tvs, int *idxp)
tv_nr	src/message.c	/^tv_nr(tvs, idxp)$/;"	f	file:
tv_op	src/eval.c	/^static int tv_op __ARGS((typval_T *tv1, typval_T *tv2, char_u  *op));$/;"	p	file:	signature:(typval_T *tv1, typval_T *tv2, char_u *op)
tv_op	src/eval.c	/^tv_op(tv1, tv2, op)$/;"	f	file:
tv_str	src/message.c	/^static char *tv_str __ARGS((typval_T *tvs, int *idxp));$/;"	p	file:	signature:(typval_T *tvs, int *idxp)
tv_str	src/message.c	/^tv_str(tvs, idxp)$/;"	f	file:
tw	runtime/doc/Makefile	/^	sed -e 's\/[ 	]*\\*[-a-zA-Z0-9.]*\\*\/\/g' -e 's\/vim:tw=78:\/\/' \\$/;"	m
txtlen	src/os_mswin.c	/^    int txtlen;		\/* length of CF_TEXT in bytes *\/$/;"	m	struct:__anon19	file:	access:public
type	src/gui.h	/^    int		type;		\/* one of SBAR_{LEFT,RIGHT,BOTTOM} *\/$/;"	m	struct:GuiScrollbar	access:public
type	src/hardcopy.c	/^    int		type;$/;"	m	struct:prt_dsc_comment_S	file:	access:public
type	src/hardcopy.c	/^    int		type;$/;"	m	struct:prt_dsc_line_S	file:	access:public
type	src/hardcopy.c	/^    int     type;$/;"	m	struct:prt_ps_resource_S	file:	access:public
type	src/os_mswin.c	/^    int type;		\/* MCHAR, MBLOCK or MLINE *\/$/;"	m	struct:__anon19	file:	access:public
type	src/os_vms.c	/^    char	type;$/;"	m	struct:__anon75	file:	access:public
type	src/structs.h	/^    int			type;		\/* exception type *\/$/;"	m	struct:vim_exception	access:public
typeahead_char	src/getchar.c	/^static int typeahead_char = 0;		\/* typeahead char that's not flushed *\/$/;"	v	file:
typeahead_noflush	src/getchar.c	/^typeahead_noflush(c)$/;"	f
typebuf	src/globals.h	/^EXTERN typebuf_T typebuf		\/* typeahead buffer *\/$/;"	v
typebuf_T	src/structs.h	/^} typebuf_T;$/;"	t	typeref:struct:__anon49
typebuf_changed	src/getchar.c	/^typebuf_changed(tb_change_cnt)$/;"	f
typebuf_init	src/getchar.c	/^static char_u	typebuf_init[TYPELEN_INIT];	\/* initial typebuf.tb_buf *\/$/;"	v	file:
typebuf_maplen	src/getchar.c	/^typebuf_maplen()$/;"	f
typebuf_typed	src/getchar.c	/^typebuf_typed()$/;"	f
typebuf_valid	src/structs.h	/^    int			typebuf_valid;	    \/* TRUE when save_typebuf valid *\/$/;"	m	struct:__anon50	access:public
typebuf_was_filled	src/globals.h	/^EXTERN int	typebuf_was_filled INIT(= FALSE); \/* received text from client$/;"	v
typeinfo	src/if_ole.cpp	/^    ITypeInfo *typeinfo;$/;"	m	class:CVim	file:	access:private
typenr	src/structs.h	/^    int		typenr;		\/* typenr of sign *\/$/;"	m	struct:signlist	access:public
typval_T	src/structs.h	/^} typval_T;$/;"	t	typeref:struct:__anon53
u	runtime/macros/less.vim	/^noremap <script> u <C-U><SID>L$/;"	m
u8char_T	src/vim.h	/^typedef unsigned int u8char_T;	    \/* int is 32 bits *\/$/;"	t
u8char_T	src/vim.h	/^typedef unsigned long u8char_T;	    \/* long should be 32 bits or more *\/$/;"	t
u8char_T	src/vim.h	/^typedef unsigned short u8char_T;    \/* short should be 16 bits *\/$/;"	t
uFlags	src/gui_w32.c	/^	UINT uFlags;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
uFlags	src/gui_w32.c	/^    UINT	uFlags;$/;"	m	struct:tagNMTTDISPINFOA	file:	access:public
uFlags	src/gui_w32.c	/^    UINT	uFlags;$/;"	m	struct:tagNMTTDISPINFOW	file:	access:public
uFlags	src/gui_w32.c	/^    UINT       uFlags;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:	access:public
uId	src/gui_w32.c	/^	UINT_PTR uId;$/;"	m	struct:tagTOOLINFOA_NEW	file:	access:public
uType	src/gui_w32.c	/^    UINT	uType;$/;"	m	struct:_signicon_t	file:	access:public
u_add_time	src/undo.c	/^static void u_add_time __ARGS((char_u *buf, size_t buflen, time_t tt));$/;"	p	file:	signature:(char_u *buf, size_t buflen, time_t tt)
u_add_time	src/undo.c	/^u_add_time(buf, buflen, tt)$/;"	f	file:
u_blockfree	src/undo.c	/^u_blockfree(buf)$/;"	f
u_check	src/undo.c	/^u_check(int newhead_may_be_NULL)$/;"	f	file:	signature:(int newhead_may_be_NULL)
u_check_tree	src/undo.c	/^u_check_tree(u_header_T *uhp,$/;"	f	file:	signature:(u_header_T *uhp, u_header_T *exp_uh_next, u_header_T *exp_uh_alt_prev)
u_clearall	src/undo.c	/^u_clearall(buf)$/;"	f
u_clearline	src/undo.c	/^u_clearline()$/;"	f
u_compute_hash	src/undo.c	/^u_compute_hash(hash)$/;"	f
u_doit	src/undo.c	/^static void u_doit __ARGS((int count));$/;"	p	file:	signature:(int count)
u_doit	src/undo.c	/^u_doit(startcount)$/;"	f	file:
u_entry	src/structs.h	/^struct u_entry$/;"	s
u_entry::ue_array	src/structs.h	/^    char_u	**ue_array;	\/* array of lines in undo block *\/$/;"	m	struct:u_entry	access:public
u_entry::ue_bot	src/structs.h	/^    linenr_T	ue_bot;		\/* number of line below undo block *\/$/;"	m	struct:u_entry	access:public
u_entry::ue_lcount	src/structs.h	/^    linenr_T	ue_lcount;	\/* linecount when u_save called *\/$/;"	m	struct:u_entry	access:public
u_entry::ue_magic	src/structs.h	/^    int		ue_magic;	\/* magic number to check allocation *\/$/;"	m	struct:u_entry	access:public
u_entry::ue_next	src/structs.h	/^    u_entry_T	*ue_next;	\/* pointer to next entry in list *\/$/;"	m	struct:u_entry	access:public
u_entry::ue_size	src/structs.h	/^    long	ue_size;	\/* number of lines in ue_array *\/$/;"	m	struct:u_entry	access:public
u_entry::ue_top	src/structs.h	/^    linenr_T	ue_top;		\/* number of line above undo block *\/$/;"	m	struct:u_entry	access:public
u_entry_T	src/structs.h	/^typedef struct u_entry u_entry_T;$/;"	t	typeref:struct:u_entry
u_eval_tree	src/undo.c	/^u_eval_tree(first_uhp, list)$/;"	f
u_find_first_changed	src/undo.c	/^u_find_first_changed()$/;"	f
u_free_uhp	src/undo.c	/^static void u_free_uhp __ARGS((u_header_T *uhp));$/;"	p	file:	signature:(u_header_T *uhp)
u_free_uhp	src/undo.c	/^u_free_uhp(uhp)$/;"	f	file:
u_freebranch	src/undo.c	/^static void u_freebranch __ARGS((buf_T *buf, u_header_T *uhp, u_header_T **uhpp));$/;"	p	file:	signature:(buf_T *buf, u_header_T *uhp, u_header_T **uhpp)
u_freebranch	src/undo.c	/^u_freebranch(buf, uhp, uhpp)$/;"	f	file:
u_freeentries	src/undo.c	/^static void u_freeentries __ARGS((buf_T *buf, u_header_T *uhp, u_header_T **uhpp));$/;"	p	file:	signature:(buf_T *buf, u_header_T *uhp, u_header_T **uhpp)
u_freeentries	src/undo.c	/^u_freeentries(buf, uhp, uhpp)$/;"	f	file:
u_freeentry	src/undo.c	/^static void u_freeentry __ARGS((u_entry_T *, long));$/;"	p	file:	signature:(u_entry_T *, long)
u_freeentry	src/undo.c	/^u_freeentry(uep, n)$/;"	f	file:
u_freeheader	src/undo.c	/^static void u_freeheader __ARGS((buf_T *buf, u_header_T *uhp, u_header_T **uhpp));$/;"	p	file:	signature:(buf_T *buf, u_header_T *uhp, u_header_T **uhpp)
u_freeheader	src/undo.c	/^u_freeheader(buf, uhp, uhpp)$/;"	f	file:
u_get_headentry	src/undo.c	/^static u_entry_T *u_get_headentry __ARGS((void));$/;"	p	file:	signature:(void)
u_get_headentry	src/undo.c	/^u_get_headentry()$/;"	f	file:
u_get_undo_file_name	src/undo.c	/^u_get_undo_file_name(buf_ffname, reading)$/;"	f
u_getbot	src/undo.c	/^static void u_getbot __ARGS((void));$/;"	p	file:	signature:(void)
u_getbot	src/undo.c	/^u_getbot()$/;"	f	file:
u_header	src/structs.h	/^struct u_header$/;"	s
u_header::__anon38::ptr	src/structs.h	/^	u_header_T *ptr;	\/* pointer to next undo header in list *\/$/;"	m	union:u_header::__anon38	access:public
u_header::__anon38::seq	src/structs.h	/^	long	   seq;$/;"	m	union:u_header::__anon38	access:public
u_header::__anon39::ptr	src/structs.h	/^	u_header_T *ptr;	\/* pointer to previous header in list *\/$/;"	m	union:u_header::__anon39	access:public
u_header::__anon39::seq	src/structs.h	/^	long	   seq;$/;"	m	union:u_header::__anon39	access:public
u_header::__anon40::ptr	src/structs.h	/^	u_header_T *ptr;	\/* pointer to next header for alt. redo *\/$/;"	m	union:u_header::__anon40	access:public
u_header::__anon40::seq	src/structs.h	/^	long	   seq;$/;"	m	union:u_header::__anon40	access:public
u_header::__anon41::ptr	src/structs.h	/^	u_header_T *ptr;	\/* pointer to previous header for alt. redo *\/$/;"	m	union:u_header::__anon41	access:public
u_header::__anon41::seq	src/structs.h	/^	long	   seq;$/;"	m	union:u_header::__anon41	access:public
u_header::uh_alt_next	src/structs.h	/^    } uh_alt_next;$/;"	m	struct:u_header	typeref:union:u_header::__anon40	access:public
u_header::uh_alt_prev	src/structs.h	/^    } uh_alt_prev;$/;"	m	struct:u_header	typeref:union:u_header::__anon41	access:public
u_header::uh_cursor	src/structs.h	/^    pos_T	uh_cursor;	\/* cursor position before saving *\/$/;"	m	struct:u_header	access:public
u_header::uh_cursor_vcol	src/structs.h	/^    long	uh_cursor_vcol;$/;"	m	struct:u_header	access:public
u_header::uh_entry	src/structs.h	/^    u_entry_T	*uh_entry;	\/* pointer to first entry *\/$/;"	m	struct:u_header	access:public
u_header::uh_flags	src/structs.h	/^    int		uh_flags;	\/* see below *\/$/;"	m	struct:u_header	access:public
u_header::uh_getbot_entry	src/structs.h	/^    u_entry_T	*uh_getbot_entry; \/* pointer to where ue_bot must be set *\/$/;"	m	struct:u_header	access:public
u_header::uh_magic	src/structs.h	/^    int		uh_magic;	\/* magic number to check allocation *\/$/;"	m	struct:u_header	access:public
u_header::uh_namedm	src/structs.h	/^    pos_T	uh_namedm[NMARKS];	\/* marks before undo\/after redo *\/$/;"	m	struct:u_header	access:public
u_header::uh_next	src/structs.h	/^    } uh_next;$/;"	m	struct:u_header	typeref:union:u_header::__anon38	access:public
u_header::uh_prev	src/structs.h	/^    } uh_prev;$/;"	m	struct:u_header	typeref:union:u_header::__anon39	access:public
u_header::uh_save_nr	src/structs.h	/^    long	uh_save_nr;	\/* set when the file was saved after the$/;"	m	struct:u_header	access:public
u_header::uh_seq	src/structs.h	/^    long	uh_seq;		\/* sequence number, higher == newer undo *\/$/;"	m	struct:u_header	access:public
u_header::uh_time	src/structs.h	/^    time_t	uh_time;	\/* timestamp when the change was made *\/$/;"	m	struct:u_header	access:public
u_header::uh_visual	src/structs.h	/^    visualinfo_T uh_visual;	\/* Visual areas before undo\/after redo *\/$/;"	m	struct:u_header	access:public
u_header::uh_walk	src/structs.h	/^    int		uh_walk;	\/* used by undo_time() *\/$/;"	m	struct:u_header	access:public
u_header_T	src/structs.h	/^typedef struct u_header u_header_T;$/;"	t	typeref:struct:u_header
u_inssub	src/undo.c	/^u_inssub(lnum)$/;"	f
u_newcount	src/undo.c	/^static long	u_newcount, u_oldcount;$/;"	v	file:
u_oldcount	src/undo.c	/^static long	u_newcount, u_oldcount;$/;"	v	file:
u_read_undo	src/undo.c	/^u_read_undo(name, hash, orig_name)$/;"	f
u_redo	src/undo.c	/^u_redo(count)$/;"	f
u_save	src/undo.c	/^u_save(top, bot)$/;"	f
u_save_cursor	src/undo.c	/^u_save_cursor()$/;"	f
u_save_line	src/undo.c	/^static char_u *u_save_line __ARGS((linenr_T));$/;"	p	file:	signature:(linenr_T)
u_save_line	src/undo.c	/^u_save_line(lnum)$/;"	f	file:
u_savecommon	src/undo.c	/^u_savecommon(top, bot, newbot, reload)$/;"	f
u_savedel	src/undo.c	/^u_savedel(lnum, nlines)$/;"	f
u_saveline	src/undo.c	/^u_saveline(lnum)$/;"	f
u_savesub	src/undo.c	/^u_savesub(lnum)$/;"	f
u_sync	src/undo.c	/^u_sync(force)$/;"	f
u_unch_branch	src/undo.c	/^static void u_unch_branch __ARGS((u_header_T *uhp));$/;"	p	file:	signature:(u_header_T *uhp)
u_unch_branch	src/undo.c	/^u_unch_branch(uhp)$/;"	f	file:
u_unchanged	src/undo.c	/^u_unchanged(buf)$/;"	f
u_undo	src/undo.c	/^u_undo(count)$/;"	f
u_undo_end	src/undo.c	/^static void u_undo_end __ARGS((int did_undo, int absolute));$/;"	p	file:	signature:(int did_undo, int absolute)
u_undo_end	src/undo.c	/^u_undo_end(did_undo, absolute)$/;"	f	file:
u_undoline	src/undo.c	/^u_undoline()$/;"	f
u_undoredo	src/undo.c	/^static void u_undoredo __ARGS((int undo));$/;"	p	file:	signature:(int undo)
u_undoredo	src/undo.c	/^u_undoredo(undo)$/;"	f	file:
u_update_save_nr	src/undo.c	/^u_update_save_nr(buf)$/;"	f
u_write_undo	src/undo.c	/^u_write_undo(name, forceit, buf, hash)$/;"	f
uc	src/blowfish.c	/^    char_u   uc[8];$/;"	m	union:__anon121	file:	access:public
uc_add_command	src/ex_docmd.c	/^static int	uc_add_command __ARGS((char_u *name, size_t name_len, char_u *rep, long argt, long def, int flags, int compl, char_u *compl_arg, int force));$/;"	p	file:	signature:(char_u *name, size_t name_len, char_u *rep, long argt, long def, int flags, int compl, char_u *compl_arg, int force)
uc_add_command	src/ex_docmd.c	/^uc_add_command(name, name_len, rep, argt, def, flags, compl, compl_arg, force)$/;"	f	file:
uc_argt	src/ex_docmd.c	/^    long_u	uc_argt;	\/* The argument type *\/$/;"	m	struct:ucmd	file:	access:public
uc_check_code	src/ex_docmd.c	/^static size_t	uc_check_code __ARGS((char_u *code, size_t len, char_u *buf, ucmd_T *cmd, exarg_T *eap, char_u **split_buf, size_t *split_len));$/;"	p	file:	signature:(char_u *code, size_t len, char_u *buf, ucmd_T *cmd, exarg_T *eap, char_u **split_buf, size_t *split_len)
uc_check_code	src/ex_docmd.c	/^uc_check_code(code, len, buf, cmd, eap, split_buf, split_len)$/;"	f	file:
uc_clear	src/ex_docmd.c	/^uc_clear(gap)$/;"	f
uc_compl	src/ex_docmd.c	/^    int		uc_compl;	\/* completion type *\/$/;"	m	struct:ucmd	file:	access:public
uc_compl_arg	src/ex_docmd.c	/^    char_u	*uc_compl_arg;	\/* completion argument if any *\/$/;"	m	struct:ucmd	file:	access:public
uc_def	src/ex_docmd.c	/^    long	uc_def;		\/* The default value for a range\/count *\/$/;"	m	struct:ucmd	file:	access:public
uc_fun_cmd	src/ex_docmd.c	/^static char_u	*uc_fun_cmd __ARGS((void));$/;"	p	file:	signature:(void)
uc_fun_cmd	src/ex_docmd.c	/^uc_fun_cmd()$/;"	f	file:
uc_list	src/ex_docmd.c	/^static void	uc_list __ARGS((char_u *name, size_t name_len));$/;"	p	file:	signature:(char_u *name, size_t name_len)
uc_list	src/ex_docmd.c	/^uc_list(name, name_len)$/;"	f	file:
uc_minlines	runtime/syntax/uc.vim	/^  let uc_minlines = 10$/;"	v
uc_name	src/ex_docmd.c	/^    char_u	*uc_name;	\/* The command name *\/$/;"	m	struct:ucmd	file:	access:public
uc_rep	src/ex_docmd.c	/^    char_u	*uc_rep;	\/* The command's replacement string *\/$/;"	m	struct:ucmd	file:	access:public
uc_scan_attr	src/ex_docmd.c	/^static int	uc_scan_attr __ARGS((char_u *attr, size_t len, long *argt, long *def, int *flags, int *compl, char_u **compl_arg));$/;"	p	file:	signature:(char_u *attr, size_t len, long *argt, long *def, int *flags, int *compl, char_u **compl_arg)
uc_scan_attr	src/ex_docmd.c	/^uc_scan_attr(attr, len, argt, def, flags, compl, compl_arg)$/;"	f	file:
uc_scriptID	src/ex_docmd.c	/^    scid_T	uc_scriptID;	\/* SID where the command was defined *\/$/;"	m	struct:ucmd	file:	access:public
uc_split_args	src/ex_docmd.c	/^static char_u	*uc_split_args __ARGS((char_u *arg, size_t *lenp));$/;"	p	file:	signature:(char_u *arg, size_t *lenp)
uc_split_args	src/ex_docmd.c	/^uc_split_args(arg, lenp)$/;"	f	file:
ucmd	src/ex_docmd.c	/^typedef struct ucmd$/;"	s	file:
ucmd::uc_argt	src/ex_docmd.c	/^    long_u	uc_argt;	\/* The argument type *\/$/;"	m	struct:ucmd	file:	access:public
ucmd::uc_compl	src/ex_docmd.c	/^    int		uc_compl;	\/* completion type *\/$/;"	m	struct:ucmd	file:	access:public
ucmd::uc_compl_arg	src/ex_docmd.c	/^    char_u	*uc_compl_arg;	\/* completion argument if any *\/$/;"	m	struct:ucmd	file:	access:public
ucmd::uc_def	src/ex_docmd.c	/^    long	uc_def;		\/* The default value for a range\/count *\/$/;"	m	struct:ucmd	file:	access:public
ucmd::uc_name	src/ex_docmd.c	/^    char_u	*uc_name;	\/* The command name *\/$/;"	m	struct:ucmd	file:	access:public
ucmd::uc_rep	src/ex_docmd.c	/^    char_u	*uc_rep;	\/* The command's replacement string *\/$/;"	m	struct:ucmd	file:	access:public
ucmd::uc_scriptID	src/ex_docmd.c	/^    scid_T	uc_scriptID;	\/* SID where the command was defined *\/$/;"	m	struct:ucmd	file:	access:public
ucmd_T	src/ex_docmd.c	/^} ucmd_T;$/;"	t	typeref:struct:ucmd	file:
ucmds	src/ex_docmd.c	/^static garray_T ucmds = {0, 0, sizeof(ucmd_T), 4, NULL};$/;"	v	file:
ucs2bytes	src/fileio.c	/^static int ucs2bytes __ARGS((unsigned c, char_u **pp, int flags));$/;"	p	file:	signature:(unsigned c, char_u **pp, int flags)
ucs2bytes	src/fileio.c	/^ucs2bytes(c, pp, flags)$/;"	f	file:
ucslen	src/os_mswin.c	/^    int ucslen;		\/* length of CF_UNICODETEXT in words *\/$/;"	m	struct:__anon19	file:	access:public
ue_array	src/structs.h	/^    char_u	**ue_array;	\/* array of lines in undo block *\/$/;"	m	struct:u_entry	access:public
ue_bot	src/structs.h	/^    linenr_T	ue_bot;		\/* number of line below undo block *\/$/;"	m	struct:u_entry	access:public
ue_lcount	src/structs.h	/^    linenr_T	ue_lcount;	\/* linecount when u_save called *\/$/;"	m	struct:u_entry	access:public
ue_magic	src/structs.h	/^    int		ue_magic;	\/* magic number to check allocation *\/$/;"	m	struct:u_entry	access:public
ue_next	src/structs.h	/^    u_entry_T	*ue_next;	\/* pointer to next entry in list *\/$/;"	m	struct:u_entry	access:public
ue_size	src/structs.h	/^    long	ue_size;	\/* number of lines in ue_array *\/$/;"	m	struct:u_entry	access:public
ue_top	src/structs.h	/^    linenr_T	ue_top;		\/* number of line above undo block *\/$/;"	m	struct:u_entry	access:public
uf_args	src/eval.c	/^    garray_T	uf_args;	\/* arguments *\/$/;"	m	struct:ufunc	file:	access:public
uf_calls	src/eval.c	/^    int		uf_calls;	\/* nr of active calls *\/$/;"	m	struct:ufunc	file:	access:public
uf_flags	src/eval.c	/^    int		uf_flags;$/;"	m	struct:ufunc	file:	access:public
uf_lines	src/eval.c	/^    garray_T	uf_lines;	\/* function lines *\/$/;"	m	struct:ufunc	file:	access:public
uf_name	src/eval.c	/^    char_u	uf_name[1];	\/* name of function (actually longer); can$/;"	m	struct:ufunc	file:	access:public
uf_profiling	src/eval.c	/^    int		uf_profiling;	\/* TRUE when func is being profiled *\/$/;"	m	struct:ufunc	file:	access:public
uf_refcount	src/eval.c	/^    int		uf_refcount;	\/* for numbered function: reference count *\/$/;"	m	struct:ufunc	file:	access:public
uf_script_ID	src/eval.c	/^    scid_T	uf_script_ID;	\/* ID of script where function was defined,$/;"	m	struct:ufunc	file:	access:public
uf_tm_children	src/eval.c	/^    proftime_T	uf_tm_children;	\/* time spent in children this call *\/$/;"	m	struct:ufunc	file:	access:public
uf_tm_count	src/eval.c	/^    int		uf_tm_count;	\/* nr of calls *\/$/;"	m	struct:ufunc	file:	access:public
uf_tm_self	src/eval.c	/^    proftime_T	uf_tm_self;	\/* time spent in function itself *\/$/;"	m	struct:ufunc	file:	access:public
uf_tm_total	src/eval.c	/^    proftime_T	uf_tm_total;	\/* time spent in function + children *\/$/;"	m	struct:ufunc	file:	access:public
uf_tml_children	src/eval.c	/^    proftime_T	uf_tml_children; \/* time spent in children for this line *\/$/;"	m	struct:ufunc	file:	access:public
uf_tml_count	src/eval.c	/^    int		*uf_tml_count;	\/* nr of times line was executed *\/$/;"	m	struct:ufunc	file:	access:public
uf_tml_execed	src/eval.c	/^    int		uf_tml_execed;	\/* line being timed was executed *\/$/;"	m	struct:ufunc	file:	access:public
uf_tml_idx	src/eval.c	/^    int		uf_tml_idx;	\/* index of line being timed; -1 if none *\/$/;"	m	struct:ufunc	file:	access:public
uf_tml_self	src/eval.c	/^    proftime_T	*uf_tml_self;	\/* time spent in a line itself *\/$/;"	m	struct:ufunc	file:	access:public
uf_tml_start	src/eval.c	/^    proftime_T	uf_tml_start;	\/* start time for current line *\/$/;"	m	struct:ufunc	file:	access:public
uf_tml_total	src/eval.c	/^    proftime_T	*uf_tml_total;	\/* time spent in a line + children *\/$/;"	m	struct:ufunc	file:	access:public
uf_tml_wait	src/eval.c	/^    proftime_T	uf_tml_wait;	\/* start wait time for current line *\/$/;"	m	struct:ufunc	file:	access:public
uf_varargs	src/eval.c	/^    int		uf_varargs;	\/* variable nr of arguments *\/$/;"	m	struct:ufunc	file:	access:public
ufunc	src/eval.c	/^struct ufunc$/;"	s	file:
ufunc::uf_args	src/eval.c	/^    garray_T	uf_args;	\/* arguments *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_calls	src/eval.c	/^    int		uf_calls;	\/* nr of active calls *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_flags	src/eval.c	/^    int		uf_flags;$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_lines	src/eval.c	/^    garray_T	uf_lines;	\/* function lines *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_name	src/eval.c	/^    char_u	uf_name[1];	\/* name of function (actually longer); can$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_profiling	src/eval.c	/^    int		uf_profiling;	\/* TRUE when func is being profiled *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_refcount	src/eval.c	/^    int		uf_refcount;	\/* for numbered function: reference count *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_script_ID	src/eval.c	/^    scid_T	uf_script_ID;	\/* ID of script where function was defined,$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_tm_children	src/eval.c	/^    proftime_T	uf_tm_children;	\/* time spent in children this call *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_tm_count	src/eval.c	/^    int		uf_tm_count;	\/* nr of calls *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_tm_self	src/eval.c	/^    proftime_T	uf_tm_self;	\/* time spent in function itself *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_tm_total	src/eval.c	/^    proftime_T	uf_tm_total;	\/* time spent in function + children *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_tml_children	src/eval.c	/^    proftime_T	uf_tml_children; \/* time spent in children for this line *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_tml_count	src/eval.c	/^    int		*uf_tml_count;	\/* nr of times line was executed *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_tml_execed	src/eval.c	/^    int		uf_tml_execed;	\/* line being timed was executed *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_tml_idx	src/eval.c	/^    int		uf_tml_idx;	\/* index of line being timed; -1 if none *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_tml_self	src/eval.c	/^    proftime_T	*uf_tml_self;	\/* time spent in a line itself *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_tml_start	src/eval.c	/^    proftime_T	uf_tml_start;	\/* start time for current line *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_tml_total	src/eval.c	/^    proftime_T	*uf_tml_total;	\/* time spent in a line + children *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_tml_wait	src/eval.c	/^    proftime_T	uf_tml_wait;	\/* start wait time for current line *\/$/;"	m	struct:ufunc	file:	access:public
ufunc::uf_varargs	src/eval.c	/^    int		uf_varargs;	\/* variable nr of arguments *\/$/;"	m	struct:ufunc	file:	access:public
ufunc_T	src/eval.c	/^typedef struct ufunc ufunc_T;$/;"	t	typeref:struct:ufunc	file:
uh_alt_next	src/structs.h	/^    } uh_alt_next;$/;"	m	struct:u_header	typeref:union:u_header::__anon40	access:public
uh_alt_prev	src/structs.h	/^    } uh_alt_prev;$/;"	m	struct:u_header	typeref:union:u_header::__anon41	access:public
uh_cursor	src/structs.h	/^    pos_T	uh_cursor;	\/* cursor position before saving *\/$/;"	m	struct:u_header	access:public
uh_cursor_vcol	src/structs.h	/^    long	uh_cursor_vcol;$/;"	m	struct:u_header	access:public
uh_entry	src/structs.h	/^    u_entry_T	*uh_entry;	\/* pointer to first entry *\/$/;"	m	struct:u_header	access:public
uh_flags	src/structs.h	/^    int		uh_flags;	\/* see below *\/$/;"	m	struct:u_header	access:public
uh_getbot_entry	src/structs.h	/^    u_entry_T	*uh_getbot_entry; \/* pointer to where ue_bot must be set *\/$/;"	m	struct:u_header	access:public
uh_magic	src/structs.h	/^    int		uh_magic;	\/* magic number to check allocation *\/$/;"	m	struct:u_header	access:public
uh_namedm	src/structs.h	/^    pos_T	uh_namedm[NMARKS];	\/* marks before undo\/after redo *\/$/;"	m	struct:u_header	access:public
uh_next	src/structs.h	/^    } uh_next;$/;"	m	struct:u_header	typeref:union:u_header::__anon38	access:public
uh_prev	src/structs.h	/^    } uh_prev;$/;"	m	struct:u_header	typeref:union:u_header::__anon39	access:public
uh_save_nr	src/structs.h	/^    long	uh_save_nr;	\/* set when the file was saved after the$/;"	m	struct:u_header	access:public
uh_seq	src/structs.h	/^    long	uh_seq;		\/* sequence number, higher == newer undo *\/$/;"	m	struct:u_header	access:public
uh_time	src/structs.h	/^    time_t	uh_time;	\/* timestamp when the change was made *\/$/;"	m	struct:u_header	access:public
uh_visual	src/structs.h	/^    visualinfo_T uh_visual;	\/* Visual areas before undo\/after redo *\/$/;"	m	struct:u_header	access:public
uh_walk	src/structs.h	/^    int		uh_walk;	\/* used by undo_time() *\/$/;"	m	struct:u_header	access:public
ui_breakcheck	src/ui.c	/^ui_breakcheck()$/;"	f
ui_char_avail	src/ui.c	/^ui_char_avail()$/;"	f
ui_cursor_shape	src/ui.c	/^ui_cursor_shape()$/;"	f
ui_delay	src/ui.c	/^ui_delay(msec, ignoreinput)$/;"	f
ui_focus_change	src/ui.c	/^ui_focus_change(in_focus)$/;"	f
ui_get_shellsize	src/ui.c	/^ui_get_shellsize()$/;"	f
ui_inchar	src/ui.c	/^ui_inchar(buf, maxlen, wtime, tb_change_cnt)$/;"	f
ui_inchar_undo	src/ui.c	/^ui_inchar_undo(s, len)$/;"	f
ui_new_shellsize	src/ui.c	/^ui_new_shellsize()$/;"	f
ui_set_shellsize	src/ui.c	/^ui_set_shellsize(mustset)$/;"	f
ui_suspend	src/ui.c	/^ui_suspend()$/;"	f
ui_write	src/ui.c	/^ui_write(s, len)$/;"	f
uid_t	src/os_os2_cfg.h	76;"	d
ul	src/blowfish.c	/^    UINT32_T ul[2];$/;"	m	union:__anon121	file:	access:public
ulg	src/misc2.c	/^typedef unsigned long  ulg;	\/* unsigned 32-bit value *\/$/;"	t	file:
uline_offset	src/hardcopy.c	/^    int		uline_offset;$/;"	m	struct:prt_ps_font_S	file:	access:public
uline_width	src/hardcopy.c	/^    int		uline_width;$/;"	m	struct:prt_ps_font_S	file:	access:public
un_Magic	src/regexp.c	241;"	d	file:
unadjust_for_sel	src/normal.c	/^static int	unadjust_for_sel __ARGS((void));$/;"	p	file:	signature:(void)
unadjust_for_sel	src/normal.c	/^unadjust_for_sel()$/;"	f	file:
unblock_autocmds	src/fileio.c	/^unblock_autocmds()$/;"	f
unchanged	src/misc1.c	/^unchanged(buf, ff)$/;"	f
undercurl	src/structs.h	/^    int		undercurl;$/;"	m	struct:__anon59	access:public
underline	src/structs.h	/^    int		underline;$/;"	m	struct:__anon59	access:public
undisplay_dollar	src/edit.c	/^static void undisplay_dollar __ARGS((void));$/;"	p	file:	signature:(void)
undisplay_dollar	src/edit.c	/^undisplay_dollar()$/;"	f	file:
undo	src/gui_motif.c	/^    Widget undo;	\/* 'Undo' action button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
undo_allowed	src/undo.c	/^undo_allowed()$/;"	f
undo_off	src/globals.h	/^EXTERN int	undo_off INIT(= FALSE);	    \/* undo switched off for now *\/$/;"	v
undo_time	src/undo.c	/^undo_time(step, sec, file, absolute)$/;"	f
undo_undoes	src/undo.c	/^static int	undo_undoes = FALSE;$/;"	v	file:
undrawBalloon	src/gui_beval.c	/^static void undrawBalloon __ARGS((BalloonEval *beval));$/;"	p	file:	signature:(BalloonEval *beval)
undrawBalloon	src/gui_beval.c	/^undrawBalloon(BalloonEval *beval)$/;"	f	file:	signature:(BalloonEval *beval)
undrawBalloon	src/gui_beval.c	/^undrawBalloon(beval)$/;"	f	file:
ungetchr	src/regexp.c	/^static void	ungetchr __ARGS((void));$/;"	p	file:	signature:(void)
ungetchr	src/regexp.c	/^ungetchr()$/;"	f	file:
uninstall_check	src/dosinst.c	/^uninstall_check(int skip_question)$/;"	f	file:	signature:(int skip_question)
uniquefy_paths	src/misc1.c	/^static void uniquefy_paths __ARGS((garray_T *gap, char_u *pattern));$/;"	p	file:	signature:(garray_T *gap, char_u *pattern)
uniquefy_paths	src/misc1.c	/^uniquefy_paths(gap, pattern)$/;"	f	file:
unix_expandpath	src/misc1.c	/^unix_expandpath(gap, path, wildoff, flags, didstar)$/;"	f
unload	runtime/optwin.vim	/^fun! <SID>unload()$/;"	f
unload_dummy_buffer	src/quickfix.c	/^static void	unload_dummy_buffer __ARGS((buf_T *buf));$/;"	p	file:	signature:(buf_T *buf)
unload_dummy_buffer	src/quickfix.c	/^unload_dummy_buffer(buf)$/;"	f	file:
unputcmdline	src/ex_getln.c	/^unputcmdline()$/;"	f
unrecognised_message	src/integration.c	/^static void unrecognised_message(char *);$/;"	p	file:	signature:(char *)
unrecognised_message	src/integration.c	/^unrecognised_message($/;"	f	signature:( char *cmd)
unref_extmatch	src/regexp.c	/^unref_extmatch(em)$/;"	f
unserialize_pos	src/undo.c	/^static void unserialize_pos __ARGS((pos_T *pos, FILE *fp));$/;"	p	file:	signature:(pos_T *pos, FILE *fp)
unserialize_pos	src/undo.c	/^unserialize_pos(pos, fp)$/;"	f	file:
unserialize_uep	src/undo.c	/^static u_entry_T *unserialize_uep __ARGS((FILE *fp, int *error, char_u *file_name));$/;"	p	file:	signature:(FILE *fp, int *error, char_u *file_name)
unserialize_uep	src/undo.c	/^unserialize_uep(fp, error, file_name)$/;"	f	file:
unserialize_uhp	src/undo.c	/^static u_header_T *unserialize_uhp __ARGS((FILE *fp, char_u *file_name));$/;"	p	file:	signature:(FILE *fp, char_u *file_name)
unserialize_uhp	src/undo.c	/^unserialize_uhp(fp, file_name)$/;"	f	file:
unserialize_visualinfo	src/undo.c	/^static void unserialize_visualinfo __ARGS((visualinfo_T *info, FILE *fp));$/;"	p	file:	signature:(visualinfo_T *info, FILE *fp)
unserialize_visualinfo	src/undo.c	/^unserialize_visualinfo(info, fp)$/;"	f	file:
unshift_special	src/normal.c	/^static void	unshift_special __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
unshift_special	src/normal.c	/^unshift_special(cap)$/;"	f	file:
unshowmode	src/screen.c	/^unshowmode(force)$/;"	f
unused	src/gui_mac.c	/^    long *unused;   \/* 0 (not used) *\/$/;"	m	struct:CW_GetText	file:	access:public
unused1	src/gui_mac.c	/^    short unused1; \/\/ 0 (not used)$/;"	m	struct:SelectionRange	file:	access:public
unused2	src/gui_mac.c	/^    long unused2; \/\/ 0 (not used)$/;"	m	struct:SelectionRange	file:	access:public
up	src/gui_gtk.c	/^    GtkWidget *up;	\/* search direction 'Up' radio button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
up	src/gui_motif.c	/^    Widget up;		\/* search direction 'Up' radio button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
upd_block0_T	src/memline.c	/^} upd_block0_T;$/;"	t	typeref:enum:__anon30	file:
updatePriority	src/workshop.c	/^static void	 updatePriority(Boolean);$/;"	p	file:
updatePriority	src/workshop.c	/^updatePriority($/;"	f	file:	signature:( Boolean subMenu)
updateWindow	src/screen.c	/^updateWindow(wp)$/;"	f
update_curbuf	src/screen.c	/^update_curbuf(type)$/;"	f
update_curswant	src/move.c	/^update_curswant()$/;"	f
update_debug_sign	src/screen.c	/^update_debug_sign(buf, lnum)$/;"	f
update_finish	src/screen.c	/^static void update_finish __ARGS((void));$/;"	p	file:	signature:(void)
update_finish	src/screen.c	/^update_finish()$/;"	f	file:
update_force_abort	src/ex_eval.c	/^update_force_abort()$/;"	f
update_mouseshape	src/misc2.c	/^update_mouseshape(shape_idx)$/;"	f
update_offset	src/blowfish.c	/^static int update_offset = 0;$/;"	v	file:
update_prepare	src/screen.c	/^static void update_prepare __ARGS((void));$/;"	p	file:	signature:(void)
update_prepare	src/screen.c	/^update_prepare()$/;"	f	file:
update_screen	src/screen.c	/^update_screen(type)$/;"	f
update_si_attr	src/syntax.c	/^static void update_si_attr __ARGS((int idx));$/;"	p	file:	signature:(int idx)
update_si_attr	src/syntax.c	/^update_si_attr(idx)$/;"	f	file:
update_si_end	src/syntax.c	/^static void update_si_end __ARGS((stateitem_T *sip, int startcol, int force));$/;"	p	file:	signature:(stateitem_T *sip, int startcol, int force)
update_si_end	src/syntax.c	/^update_si_end(sip, startcol, force)$/;"	f	file:
update_single_line	src/screen.c	/^update_single_line(wp, lnum)$/;"	f
update_tcap	src/term.c	/^update_tcap(attr)$/;"	f
update_topline	src/move.c	/^update_topline()$/;"	f
update_topline_cursor	src/ex_docmd.c	/^update_topline_cursor()$/;"	f
update_topline_redraw	src/move.c	/^update_topline_redraw()$/;"	f
update_window_manager_hints	src/gui_gtk_x11.c	/^update_window_manager_hints(int force_width, int force_height)$/;"	f	file:	signature:(int force_width, int force_height)
updatescript	src/getchar.c	/^updatescript(c)$/;"	f
updating_screen	src/globals.h	/^EXTERN int	updating_screen INIT(= FALSE);$/;"	v
usage	runtime/doc/vim2html.pl	/^sub usage$/;"	s
usage	runtime/doc/vim2html.pl	/^usage:$/;"	l
usage	runtime/tools/efm_perl.pl	/^sub usage {$/;"	s
usage	runtime/tools/shtags.pl	/^sub usage$/;"	s
usage	src/if_cscope.h	/^    char *  usage;$/;"	m	struct:__anon86	access:public
usage	src/main.c	/^static void usage __ARGS((void));$/;"	p	file:	signature:(void)
usage	src/main.c	/^usage()$/;"	f	file:
usage	src/tee/tee.c	/^void usage(void)$/;"	f	signature:(void)
useAntialias_cached	src/gui_mac.c	/^UInt32      useAntialias_cached = 0x0;$/;"	v
use_aucmd_win	src/structs.h	/^    int		use_aucmd_win;	\/* using aucmd_win *\/$/;"	m	struct:__anon57	access:public
use_crypt_method	src/globals.h	/^EXTERN int      use_crypt_method INIT(= 0);$/;"	v
use_debug_break_level	src/main.c	/^    int		use_debug_break_level;$/;"	m	struct:__anon9	file:	access:public
use_ef	src/main.c	/^    char_u	*use_ef;		\/* 'errorfile' from -q argument *\/$/;"	m	struct:__anon9	file:	access:public
use_gui	vimtutor.bat	/^:use_gui$/;"	l
use_gvimrc	src/globals.h	/^EXTERN char_u	*use_gvimrc INIT(= NULL);	\/* "-U" cmdline argument *\/$/;"	v
use_midword	src/spell.c	/^static void use_midword __ARGS((slang_T *lp, win_T *buf));$/;"	p	file:	signature:(slang_T *lp, win_T *buf)
use_midword	src/spell.c	/^use_midword(lp, wp)$/;"	f	file:
use_multibytecode	src/regexp.c	/^static int	use_multibytecode __ARGS((int c));$/;"	p	file:	signature:(int c)
use_multibytecode	src/regexp.c	/^use_multibytecode(c)$/;"	f	file:
use_reg_one	src/structs.h	/^    int		use_reg_one;	\/* TRUE if delete uses reg 1 even when not$/;"	m	struct:oparg_S	access:public
use_vim	vimtutor.bat	/^:use_vim$/;"	l
use_viminfo	src/globals.h	/^EXTERN char_u	*use_viminfo INIT(= NULL);  \/* name of viminfo file to use *\/$/;"	v
use_vimrc	src/main.c	/^    char_u	*use_vimrc;		\/* vimrc from -u argument *\/$/;"	m	struct:__anon9	file:	access:public
use_xterm_like_mouse	src/os_unix.c	/^use_xterm_like_mouse(name)$/;"	f
use_xterm_mouse	src/os_unix.c	/^use_xterm_mouse()$/;"	f
used_alist_count	src/os_win32.c	/^static int	used_alist_count = 0;$/;"	v	file:
used_file_arg	src/os_win32.c	/^used_file_arg(char *name, int literal, int full_path, int diff_mode)$/;"	f	signature:(char *name, int literal, int full_path, int diff_mode)
used_file_argc	src/os_win32.c	/^static int	used_file_argc = 0;	\/* last argument in global_argv[] used$/;"	v	file:
used_file_count	src/os_win32.c	/^static int	used_file_count = 0;	\/* nr of entries in used_file_indexes *\/$/;"	v	file:
used_file_diff_mode	src/os_win32.c	/^static int	used_file_diff_mode = FALSE;  \/* file name was with diff mode *\/$/;"	v	file:
used_file_full_path	src/os_win32.c	/^static int	used_file_full_path = FALSE;  \/* file name was full path *\/$/;"	v	file:
used_file_indexes	src/os_win32.c	/^static int	*used_file_indexes = NULL; \/* indexes in global_argv[] for$/;"	v	file:
used_file_literal	src/os_win32.c	/^static int	used_file_literal = FALSE;  \/* take file names literally *\/$/;"	v	file:
used_for	src/structs.h	/^    char	used_for;	\/* SHAPE_MOUSE and\/or SHAPE_CURSOR *\/$/;"	m	struct:cursor_entry	access:public
usefilter	src/ex_cmds.h	/^    int		usefilter;	\/* TRUE with ":w !command" and ":r!command" *\/$/;"	m	struct:exarg	access:public
user32_lib	src/gui_w32.c	/^static HANDLE		    user32_lib = NULL;$/;"	v	file:
user_abort	src/structs.h	/^    int		user_abort;$/;"	m	struct:__anon60	access:public
user_digraphs	src/digraph.c	/^static garray_T	user_digraphs = {0, 0, (int)sizeof(digr_T), 10, NULL};$/;"	v	file:
userhl	src/structs.h	/^    int		userhl;		\/* 0: no HL, 1-9: User HL, < 0 for syn ID *\/$/;"	m	struct:stl_hlrec	access:public
useridx	src/ex_cmds.h	/^    int		useridx;	\/* user command index *\/$/;"	m	struct:exarg	access:public
username	runtime/ftplugin/changelog.vim	/^  function! s:username()$/;"	f
username	src/misc2.c	/^static char_u	*username = NULL; \/* cached result of mch_get_user_name() *\/$/;"	v	file:
ush	src/misc2.c	/^typedef unsigned short ush;	\/* unsigned 16-bit value *\/$/;"	t	file:
usingSunWorkShop	src/workshop.c	/^int		 usingSunWorkShop = 0;	\/* set if -ws flag is used *\/$/;"	v
using_gnome	src/gui_gtk_x11.c	/^static int using_gnome = 0;$/;"	v	file:
using_gnome	src/gui_gtk_x11.c	386;"	d	file:
using_script	src/getchar.c	/^using_script()$/;"	f
utf16_to_enc	src/os_mswin.c	/^utf16_to_enc(short_u *str, int *lenp)$/;"	f	signature:(short_u *str, int *lenp)
utf16_to_utf8	src/os_mswin.c	/^utf16_to_utf8(short_u *instr, int inlen, char_u *outstr)$/;"	f	signature:(short_u *instr, int inlen, char_u *outstr)
utf8_string_atom	src/gui_gtk_x11.c	/^static GdkAtom utf8_string_atom = GDK_NONE;$/;"	v	file:
utf8_to_utf16	src/os_mswin.c	/^utf8_to_utf16(char_u *instr, int inlen, short_u *outstr, int *unconvlenp)$/;"	f	signature:(char_u *instr, int inlen, short_u *outstr, int *unconvlenp)
utf8len_tab	src/mbyte.c	/^static char utf8len_tab[256] =$/;"	v	file:
utf8len_tab_zero	src/mbyte.c	/^static char utf8len_tab_zero[256] =$/;"	v	file:
utf_byte2len	src/mbyte.c	/^utf_byte2len(b)$/;"	f
utf_char2bytes	src/mbyte.c	/^utf_char2bytes(c, buf)$/;"	f
utf_char2cells	src/mbyte.c	/^utf_char2cells(c)$/;"	f
utf_char2len	src/mbyte.c	/^utf_char2len(c)$/;"	f
utf_class	src/mbyte.c	/^utf_class(c)$/;"	f
utf_composinglike	src/mbyte.c	/^utf_composinglike(p1, p2)$/;"	f
utf_convert	src/mbyte.c	/^static int utf_convert(int a, convertStruct table[], int tableSize);$/;"	p	file:	signature:(int a, convertStruct table[], int tableSize)
utf_convert	src/mbyte.c	/^utf_convert(a, table, tableSize)$/;"	f	file:
utf_find_illegal	src/mbyte.c	/^utf_find_illegal()$/;"	f
utf_fold	src/mbyte.c	/^utf_fold(a)$/;"	f
utf_head_off	src/mbyte.c	/^utf_head_off(base, p)$/;"	f
utf_iscomposing	src/mbyte.c	/^utf_iscomposing(c)$/;"	f
utf_islower	src/mbyte.c	/^utf_islower(a)$/;"	f
utf_isupper	src/mbyte.c	/^utf_isupper(a)$/;"	f
utf_off2cells	src/mbyte.c	/^utf_off2cells(off, max_off)$/;"	f
utf_printable	src/mbyte.c	/^utf_printable(c)$/;"	f
utf_ptr2cells	src/mbyte.c	/^utf_ptr2cells(p)$/;"	f
utf_ptr2cells_len	src/mbyte.c	/^static int utf_ptr2cells_len __ARGS((char_u *p, int size));$/;"	p	file:	signature:(char_u *p, int size)
utf_ptr2cells_len	src/mbyte.c	/^utf_ptr2cells_len(p, size)$/;"	f	file:
utf_ptr2char	src/mbyte.c	/^utf_ptr2char(p)$/;"	f
utf_ptr2len	src/mbyte.c	/^utf_ptr2len(p)$/;"	f
utf_ptr2len_len	src/mbyte.c	/^utf_ptr2len_len(p, size)$/;"	f
utf_tolower	src/mbyte.c	/^utf_tolower(a)$/;"	f
utf_toupper	src/mbyte.c	/^utf_toupper(a)$/;"	f
utf_valid_string	src/mbyte.c	/^utf_valid_string(s, end)$/;"	f
utfc_char2bytes	src/mbyte.c	/^utfc_char2bytes(off, buf)$/;"	f
utfc_ptr2char	src/mbyte.c	/^utfc_ptr2char(p, pcc)$/;"	f
utfc_ptr2char_len	src/mbyte.c	/^utfc_ptr2char_len(p, pcc, maxlen)$/;"	f
utfc_ptr2len	src/mbyte.c	/^utfc_ptr2len(p)$/;"	f
utfc_ptr2len_len	src/mbyte.c	/^utfc_ptr2len_len(p, size)$/;"	f
v	runtime/macros/less.vim	/^map v :silent call <SID>End()<CR>$/;"	m
v	src/testdir/test49.vim	/^		    let v{ERR(t) + CONT(t)} = 0$/;"	v
v	src/testdir/test49.vim	/^		    let v{ERR(t) + CONT(t)}$/;"	v
v	src/testdir/test49.vim	/^		    let v{novar + CONT(t)} = 0$/;"	v
v	src/testdir/test49.vim	/^		    let v{novar + CONT(t)}$/;"	v
vOrigin	src/gui_at_fs.c	/^    int		vOrigin;$/;"	m	struct:__anon114	file:	access:public
v_dict	src/structs.h	/^	dict_T		*v_dict;	\/* dict value (can be NULL!) *\/$/;"	m	union:__anon53::__anon54	access:public
v_exception	src/eval.c	/^v_exception(oldval)$/;"	f
v_flag	src/os_riscos.h	153;"	d
v_float	src/structs.h	/^	float_T		v_float;	\/* floating number value *\/$/;"	m	union:__anon53::__anon54	access:public
v_list	src/structs.h	/^	list_T		*v_list;	\/* list value (can be NULL!) *\/$/;"	m	union:__anon53::__anon54	access:public
v_lock	src/structs.h	/^    char	v_lock;	    \/* see below: VAR_LOCKED, VAR_FIXED *\/$/;"	m	struct:__anon53	access:public
v_number	src/structs.h	/^	varnumber_T	v_number;	\/* number value *\/$/;"	m	union:__anon53::__anon54	access:public
v_string	src/structs.h	/^	char_u		*v_string;	\/* string value (can be NULL!) *\/$/;"	m	union:__anon53::__anon54	access:public
v_swap_corners	src/normal.c	/^static void	v_swap_corners __ARGS((int cmdchar));$/;"	p	file:	signature:(int cmdchar)
v_swap_corners	src/normal.c	/^v_swap_corners(cmdchar)$/;"	f	file:
v_throwpoint	src/eval.c	/^v_throwpoint(oldval)$/;"	f
v_type	src/structs.h	/^    char	v_type;	    \/* see below: VAR_NUMBER, VAR_STRING, etc. *\/$/;"	m	struct:__anon53	access:public
v_visop	src/normal.c	/^static void	v_visop __ARGS((cmdarg_T *cap));$/;"	p	file:	signature:(cmdarg_T *cap)
v_visop	src/normal.c	/^v_visop(cap)$/;"	f	file:
valid_tabpage	src/window.c	/^valid_tabpage(tpc)$/;"	f
valid_word_prefix	src/spell.c	/^static int valid_word_prefix __ARGS((int totprefcnt, int arridx, int flags, char_u *word, slang_T *slang, int cond_req));$/;"	p	file:	signature:(int totprefcnt, int arridx, int flags, char_u *word, slang_T *slang, int cond_req)
valid_word_prefix	src/spell.c	/^valid_word_prefix(totprefcnt, arridx, flags, word, slang, cond_req)$/;"	f	file:
valid_yank_reg	src/ops.c	/^valid_yank_reg(regname, writing)$/;"	f
validate_botline	src/move.c	/^validate_botline()$/;"	f
validate_botline_win	src/move.c	/^static void validate_botline_win __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
validate_botline_win	src/move.c	/^validate_botline_win(wp)$/;"	f	file:
validate_cheight	src/move.c	/^static void validate_cheight __ARGS((void));$/;"	p	file:	signature:(void)
validate_cheight	src/move.c	/^validate_cheight()$/;"	f	file:
validate_cline_row	src/move.c	/^validate_cline_row()$/;"	f
validate_current_state	src/syntax.c	/^static void validate_current_state __ARGS((void));$/;"	p	file:	signature:(void)
validate_current_state	src/syntax.c	/^validate_current_state()$/;"	f	file:
validate_cursor	src/move.c	/^validate_cursor()$/;"	f
validate_cursor_col	src/move.c	/^validate_cursor_col()$/;"	f
validate_maphash	src/getchar.c	/^static void	validate_maphash __ARGS((void));$/;"	p	file:	signature:(void)
validate_maphash	src/getchar.c	/^validate_maphash()$/;"	f	file:
validate_virtcol	src/move.c	/^validate_virtcol()$/;"	f
validate_virtcol_win	src/move.c	/^validate_virtcol_win(wp)$/;"	f
value	src/gui.h	/^    long	value;		\/* Represents top line number visible *\/$/;"	m	struct:GuiScrollbar	access:public
value	src/structs.h	/^    char_u		*value;		\/* exception value *\/$/;"	m	struct:vim_exception	access:public
value_table_for_3	src/hangulin.c	/^static char_u value_table_for_3[] =$/;"	v	file:
var	src/eval.c	/^	dictitem_T	var;		\/* variable (without room for name) *\/$/;"	m	struct:funccall_S::__anon140	file:	access:public
var	src/option.c	/^    char_u	*var;		\/* global option: pointer to variable;$/;"	m	struct:vimoption	file:	access:public
var	src/testdir/test49.vim	/^		    let var = exists('v{ERR(t) + CONT(t)}')$/;"	v
var	src/testdir/test49.vim	/^		    let var = exists('v{novar + CONT(t)}')$/;"	v
var	src/testdir/test49.vim	/^	let var = F(4712, "return-var", 2)$/;"	v
var	src/testdir/test49.vim	/^	let var = G("except3", "throw3", 5)$/;"	v
var	src/testdir/test49.vim	/^	let var = substitute("not", "sub", '\\=THROW("substitute()n", 11)', '')$/;"	v
var	src/testdir/test49.vim	/^	let var = substitute("sub", "sub", '\\=THROW("substitute()y", 10)', '')$/;"	v
var	src/testdir/test49.vim	/^	let var{THROW("var3")} = 4711$/;"	v
var	src/testdir/test49.vim	/^	let var{THROW("var4")} var{ADDPATH("T2")} | call ADDPATH("T3")$/;"	v
var1	src/testdir/test49.vim	/^		let var1 = {NAME(THROW("name", 1), 1)}(ARG(4711, 1), 1)$/;"	v
var1	src/testdir/test49.vim	/^	let var1 = "let(" . THROW("var1") . ")"$/;"	v
var2	src/testdir/test49.vim	/^		let var2 = {NAME("F", 2)}(ARG(THROW("arg", 2), 2), 2)$/;"	v
var2	src/testdir/test49.vim	/^	let var2 = "let(" . THROW("var2"). ")"$/;"	v
var2	src/testdir/test49.vim	/^	let var2 = "old_value"$/;"	v
var2fpos	src/eval.c	/^static pos_T *var2fpos __ARGS((typval_T *varp, int dollar_lnum, int *fnum));$/;"	p	file:	signature:(typval_T *varp, int dollar_lnum, int *fnum)
var2fpos	src/eval.c	/^var2fpos(varp, dollar_lnum, fnum)$/;"	f	file:
var3	src/testdir/test49.vim	/^		let var3 = {NAME("THROW", 3)}(ARG("call", 3), 3)$/;"	v
var4	src/testdir/test49.vim	/^		let var4 = {NAME("F", 4)}(ARG(4711, 4), 4)$/;"	v
var_check_fixed	src/eval.c	/^static int var_check_fixed __ARGS((int flags, char_u *name));$/;"	p	file:	signature:(int flags, char_u *name)
var_check_fixed	src/eval.c	/^var_check_fixed(flags, name)$/;"	f	file:
var_check_ro	src/eval.c	/^static int var_check_ro __ARGS((int flags, char_u *name));$/;"	p	file:	signature:(int flags, char_u *name)
var_check_ro	src/eval.c	/^var_check_ro(flags, name)$/;"	f	file:
var_flavour	src/eval.c	/^static var_flavour_T var_flavour __ARGS((char_u *varname));$/;"	p	file:	signature:(char_u *varname)
var_flavour	src/eval.c	/^var_flavour(varname)$/;"	f	file:
var_flavour_T	src/eval.c	/^} var_flavour_T;$/;"	t	typeref:enum:__anon144	file:
var_redir_start	src/eval.c	/^var_redir_start(name, append)$/;"	f
var_redir_stop	src/eval.c	/^var_redir_stop()$/;"	f
var_redir_str	src/eval.c	/^var_redir_str(value, value_len)$/;"	f
varnamebuf	src/eval.c	/^static char_u	*varnamebuf = NULL;$/;"	v	file:
varnamebuflen	src/eval.c	/^static int	varnamebuflen = 0;$/;"	v	file:
varnumber_T	src/structs.h	/^typedef int	varnumber_T;$/;"	t
varnumber_T	src/structs.h	/^typedef long	varnumber_T;$/;"	t
vars_clear	src/eval.c	/^vars_clear(ht)$/;"	f
vars_clear_ext	src/eval.c	/^static void vars_clear_ext __ARGS((hashtab_T *ht, int free_val));$/;"	p	file:	signature:(hashtab_T *ht, int free_val)
vars_clear_ext	src/eval.c	/^vars_clear_ext(ht, free_val)$/;"	f	file:
vc_cpfrom	src/structs.h	/^    int		vc_cpfrom;	\/* codepage to convert from (CONV_CODEPAGE) *\/$/;"	m	struct:__anon51	access:public
vc_cpto	src/structs.h	/^    int		vc_cpto;	\/* codepage to convert to (CONV_CODEPAGE) *\/$/;"	m	struct:__anon51	access:public
vc_factor	src/structs.h	/^    int		vc_factor;	\/* max. expansion factor *\/$/;"	m	struct:__anon51	access:public
vc_fail	src/structs.h	/^    int		vc_fail;	\/* fail for invalid char, don't use '?' *\/$/;"	m	struct:__anon51	access:public
vc_fd	src/structs.h	/^    iconv_t	vc_fd;		\/* for CONV_ICONV *\/$/;"	m	struct:__anon51	access:public
vc_type	src/structs.h	/^    int		vc_type;	\/* zero or one of the CONV_ values *\/$/;"	m	struct:__anon51	access:public
vcol2col	src/ui.c	/^vcol2col(wp, lnum, vcol)$/;"	f
ve_flags	src/option.h	/^EXTERN unsigned ve_flags;$/;"	v
vendorShellClassRec	src/gui_gtk_vms.h	674;"	d
vendorShellWidgetClass	src/gui_gtk_vms.h	675;"	d
vera_comment_strings	runtime/syntax/vera.vim	/^let vera_comment_strings = 1$/;"	v
verb	src/integration.h	/^	char		*verb;$/;"	m	struct:__anon70	access:public
verb	src/workshop.c	/^    char	*verb;			\/* menu verb *\/$/;"	m	struct:__anon106	file:	access:public
verb_msg	src/message.c	/^verb_msg(s)$/;"	f
verbose_did_open	src/message.c	/^static int  verbose_did_open = FALSE;$/;"	v	file:
verbose_enter	src/message.c	/^verbose_enter()$/;"	f
verbose_enter_scroll	src/message.c	/^verbose_enter_scroll()$/;"	f
verbose_fd	src/message.c	/^static FILE *verbose_fd = NULL;$/;"	v	file:
verbose_leave	src/message.c	/^verbose_leave()$/;"	f
verbose_leave_scroll	src/message.c	/^verbose_leave_scroll()$/;"	f
verbose_open	src/message.c	/^verbose_open()$/;"	f
verbose_stop	src/message.c	/^verbose_stop()$/;"	f
verbose_write	src/message.c	/^static void verbose_write __ARGS((char_u *s, int maxlen));$/;"	p	file:	signature:(char_u *s, int maxlen)
verbose_write	src/message.c	/^verbose_write(str, maxlen)$/;"	f	file:
version	runtime/tools/shtags.pl	/^sub version$/;"	s
version	src/hardcopy.c	/^    char_u  version[256];$/;"	m	struct:prt_ps_resource_S	file:	access:public
version	src/xxd/xxd.c	/^char version[] = "xxd V1.10 27oct98 by Juergen Weigert";$/;"	v
version_msg	src/version.c	/^static void version_msg __ARGS((char *s));$/;"	p	file:	signature:(char *s)
version_msg	src/version.c	/^version_msg(s)$/;"	f	file:
vgetc	src/getchar.c	/^vgetc()$/;"	f
vgetc_busy	src/globals.h	/^EXTERN int	vgetc_busy INIT(= 0);	    \/* when inside vgetc() then > 0 *\/$/;"	v
vgetc_im_active	src/globals.h	/^EXTERN int	vgetc_im_active;	\/* Input Method was active for last$/;"	v
vgetorpeek	src/getchar.c	/^static int	vgetorpeek __ARGS((int));$/;"	p	file:	signature:(int)
vgetorpeek	src/getchar.c	/^vgetorpeek(advance)$/;"	f	file:
vgmDlgItm	src/gui_mac.c	/^} vgmDlgItm; \/* Vim Gui_Mac.c Dialog Item *\/$/;"	t	typeref:struct:__anon130	file:
vi_buffer_name	src/if_sniff.c	/^static char *vi_buffer_name __ARGS((void));$/;"	p	file:	signature:(void)
vi_buffer_name	src/if_sniff.c	/^vi_buffer_name()$/;"	f	file:
vi_cursor_pos	src/if_sniff.c	/^static long vi_cursor_pos __ARGS((void));$/;"	p	file:	signature:(void)
vi_cursor_pos	src/if_sniff.c	/^vi_cursor_pos()$/;"	f	file:
vi_curswant	src/structs.h	/^    colnr_T	vi_curswant;	\/* MAXCOL from w_curswant *\/$/;"	m	struct:__anon37	access:public
vi_end	src/structs.h	/^    pos_T	vi_end;		\/* end position of last VIsual *\/$/;"	m	struct:__anon37	access:public
vi_error_msg	src/if_sniff.c	/^static void vi_error_msg __ARGS((char *));$/;"	p	file:	signature:(char *)
vi_error_msg	src/if_sniff.c	/^vi_error_msg(str)$/;"	f	file:
vi_exec_cmd	src/if_sniff.c	/^static void vi_exec_cmd __ARGS((char *));$/;"	p	file:	signature:(char *)
vi_exec_cmd	src/if_sniff.c	/^vi_exec_cmd(vicmd)$/;"	f	file:
vi_find_buffer	src/if_sniff.c	/^static buf_T *vi_find_buffer __ARGS((char *));$/;"	p	file:	signature:(char *)
vi_find_buffer	src/if_sniff.c	/^vi_find_buffer(fname)$/;"	f	file:
vi_mode	src/structs.h	/^    int		vi_mode;	\/* VIsual_mode of last VIsual *\/$/;"	m	struct:__anon37	access:public
vi_msg	src/if_sniff.c	/^static void vi_msg __ARGS((char *));$/;"	p	file:	signature:(char *)
vi_msg	src/if_sniff.c	/^vi_msg(str)$/;"	f	file:
vi_open_file	src/if_sniff.c	/^static void vi_open_file __ARGS((char *));$/;"	p	file:	signature:(char *)
vi_open_file	src/if_sniff.c	/^vi_open_file(fname)$/;"	f	file:
vi_set_cursor_pos	src/if_sniff.c	/^static void vi_set_cursor_pos __ARGS((long char_nr));$/;"	p	file:	signature:(long char_nr)
vi_set_cursor_pos	src/if_sniff.c	/^vi_set_cursor_pos(char_pos)$/;"	f	file:
vi_start	src/structs.h	/^    pos_T	vi_start;	\/* start pos of last VIsual *\/$/;"	m	struct:__anon37	access:public
vi_symbol_under_cursor	src/if_sniff.c	/^static char *vi_symbol_under_cursor __ARGS((void));$/;"	p	file:	signature:(void)
vi_symbol_under_cursor	src/if_sniff.c	/^vi_symbol_under_cursor()$/;"	f	file:
vim2html	runtime/doc/vim2html.pl	/^sub vim2html$/;"	s
vimContainer	src/gui.h	/^    PtWidget_t	*vimContainer;		\/* PtPanel *\/$/;"	m	struct:Gui	access:public
vimForm	src/gui_athena.c	/^static Widget vimForm = (Widget)0;$/;"	v	file:
vimForm	src/gui_motif.c	/^static Widget vimForm;$/;"	v	file:
vimMenuBar	src/gui.h	/^    PtWidget_t	*vimMenuBar;$/;"	m	struct:Gui	access:public
vimProperty	src/if_xcmdsrv.c	/^static Atom	vimProperty = None;$/;"	v	file:
vimShell	src/gui_x11.c	/^Widget vimShell = (Widget)0;$/;"	v
vimTextArea	src/gui.h	/^    PtWidget_t	*vimTextArea;		\/* PtRaw *\/$/;"	m	struct:Gui	access:public
vimToolBar	src/gui.h	/^    PtWidget_t	*vimToolBar;$/;"	m	struct:Gui	access:public
vimToolBarGroup	src/gui.h	/^    PtWidget_t	*vimToolBarGroup;$/;"	m	struct:Gui	access:public
vimWindow	src/gui.h	/^    PtWidget_t	*vimWindow;		\/* PtWindow *\/$/;"	m	struct:Gui	access:public
vim_FullName	src/window.c	/^vim_FullName(fname, buf, len, force)$/;"	f
vim_SelFile	src/gui_at_fs.c	/^vim_SelFile(toplevel, prompt, init_path, show_entry, x, y, fg, bg, scroll_fg, scroll_bg)$/;"	f
vim_SelFile	src/proto.h	/^extern char *vim_SelFile __ARGS((Widget toplevel, char *prompt, char *init_path, int (*show_entry)(), int x, int y, guicolor_T fg, guicolor_T bg, guicolor_T scroll_fg, guicolor_T scroll_bg));$/;"	p	signature:(Widget toplevel, char *prompt, char *init_path, int (*show_entry)(), int x, int y, guicolor_T fg, guicolor_T bg, guicolor_T scroll_fg, guicolor_T scroll_bg)
vim_WindowProc	src/gui_w48.c	/^vim_WindowProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	signature:(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)
vim_XawScrollbarSetThumb	src/gui_at_sb.c	/^vim_XawScrollbarSetThumb(w, top, shown, max)$/;"	f
vim_XawScrollbarSetThumb	src/gui_at_sb.h	/^extern void vim_XawScrollbarSetThumb __ARGS((Widget, double, double, double));$/;"	p	signature:(Widget, double, double, double)
vim_acl_T	src/vim.h	/^typedef void	    *vim_acl_T;		\/* dummy to pass an ACL to a function *\/$/;"	t
vim_acl_solaris_T	src/os_unix.c	/^typedef struct vim_acl_solaris_T {$/;"	s	file:
vim_acl_solaris_T	src/os_unix.c	/^} vim_acl_solaris_T;$/;"	t	typeref:struct:vim_acl_solaris_T	file:
vim_acl_solaris_T::acl_cnt	src/os_unix.c	/^    int acl_cnt;$/;"	m	struct:vim_acl_solaris_T	file:	access:public
vim_acl_solaris_T::acl_entry	src/os_unix.c	/^    aclent_t *acl_entry;$/;"	m	struct:vim_acl_solaris_T	file:	access:public
vim_atom	src/gui_gtk_x11.c	/^static GdkAtom vim_atom = GDK_NONE;	\/* Vim's own special selection format *\/$/;"	v	file:
vim_atom	src/ui.c	/^static Atom	vim_atom;	\/* Vim's own special selection format *\/$/;"	v	file:
vim_backtick	src/misc1.c	/^static int vim_backtick __ARGS((char_u *p));$/;"	p	file:	signature:(char_u *p)
vim_backtick	src/misc1.c	/^vim_backtick(p)$/;"	f	file:
vim_beep	src/misc1.c	/^vim_beep()$/;"	f
vim_buffer_validp	src/if_mzsch.c	/^static Scheme_Object *vim_buffer_validp(void *data, int, Scheme_Object **);$/;"	p	file:	signature:(void *data, int, Scheme_Object **)
vim_buffer_validp	src/if_mzsch.c	/^vim_buffer_validp(void *data UNUSED, int argc UNUSED, Scheme_Object **argv)$/;"	f	file:	signature:(void *data UNUSED, int argc UNUSED, Scheme_Object **argv)
vim_bufferp	src/if_mzsch.c	/^static Scheme_Object *vim_bufferp(void *data, int, Scheme_Object **);$/;"	p	file:	signature:(void *data, int, Scheme_Object **)
vim_bufferp	src/if_mzsch.c	/^vim_bufferp(void *data UNUSED, int argc UNUSED, Scheme_Object **argv)$/;"	f	file:	signature:(void *data UNUSED, int argc UNUSED, Scheme_Object **argv)
vim_chdir	src/misc2.c	/^vim_chdir(new_dir)$/;"	f
vim_chdirfile	src/misc2.c	/^vim_chdirfile(fname)$/;"	f
vim_chmod	src/os_msdos.c	/^vim_chmod(char_u *name)$/;"	f	file:	signature:(char_u *name)
vim_code0	src/gui_mac.c	/^    char_u  vim_code0;$/;"	m	struct:__anon129	file:	access:public
vim_code0	src/gui_photon.c	/^    char_u  vim_code0;$/;"	m	struct:__anon7	file:	access:public
vim_code0	src/gui_w48.c	/^    char_u  vim_code0;$/;"	m	struct:__anon145	file:	access:public
vim_code0	src/gui_x11.c	/^    char_u  vim_code0;$/;"	m	struct:specialkey	file:	access:public
vim_code1	src/gui_mac.c	/^    char_u  vim_code1;$/;"	m	struct:__anon129	file:	access:public
vim_code1	src/gui_photon.c	/^    char_u  vim_code1;$/;"	m	struct:__anon7	file:	access:public
vim_code1	src/gui_w48.c	/^    char_u  vim_code1;$/;"	m	struct:__anon145	file:	access:public
vim_code1	src/gui_x11.c	/^    char_u  vim_code1;$/;"	m	struct:specialkey	file:	access:public
vim_command	src/if_mzsch.c	/^static Scheme_Object *vim_command(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
vim_command	src/if_mzsch.c	/^vim_command(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
vim_command	src/if_ruby.c	/^static VALUE vim_command(VALUE self UNUSED, VALUE str)$/;"	f	file:	signature:(VALUE self UNUSED, VALUE str)
vim_deltempdir	src/fileio.c	/^vim_deltempdir()$/;"	f
vim_dialog_yesno	src/message.c	/^vim_dialog_yesno(type, title, message, dflt)$/;"	f
vim_dialog_yesnoallcancel	src/message.c	/^vim_dialog_yesnoallcancel(type, title, message, dflt)$/;"	f
vim_dialog_yesnocancel	src/message.c	/^vim_dialog_yesnocancel(type, title, message, dflt)$/;"	f
vim_error_check	src/if_mzsch.c	/^static int vim_error_check(void);$/;"	p	file:	signature:(void)
vim_error_check	src/if_mzsch.c	/^vim_error_check(void)$/;"	f	file:	signature:(void)
vim_eval	src/if_mzsch.c	/^static Scheme_Object *vim_eval(void *, int, Scheme_Object **);$/;"	p	file:	signature:(void *, int, Scheme_Object **)
vim_eval	src/if_mzsch.c	/^vim_eval(void *data, int argc, Scheme_Object **argv)$/;"	f	file:	signature:(void *data, int argc, Scheme_Object **argv)
vim_evaluate	src/if_ruby.c	/^static VALUE vim_evaluate(VALUE self UNUSED, VALUE str)$/;"	f	file:	signature:(VALUE self UNUSED, VALUE str)
vim_exception	src/structs.h	/^struct vim_exception$/;"	s
vim_exception::caught	src/structs.h	/^    except_T		*caught;	\/* next exception on the caught stack *\/$/;"	m	struct:vim_exception	access:public
vim_exception::messages	src/structs.h	/^    struct msglist	*messages;	\/* message(s) causing error exception *\/$/;"	m	struct:vim_exception	typeref:struct:vim_exception::msglist	access:public
vim_exception::throw_lnum	src/structs.h	/^    linenr_T		throw_lnum;	\/* line number of the throw point *\/$/;"	m	struct:vim_exception	access:public
vim_exception::throw_name	src/structs.h	/^    char_u		*throw_name;	\/* name of the throw point *\/$/;"	m	struct:vim_exception	access:public
vim_exception::type	src/structs.h	/^    int			type;		\/* exception type *\/$/;"	m	struct:vim_exception	access:public
vim_exception::value	src/structs.h	/^    char_u		*value;		\/* exception value *\/$/;"	m	struct:vim_exception	access:public
vim_exn	src/if_mzsch.c	/^static Scheme_Object *vim_exn = NULL; \/* Vim Error exception *\/$/;"	v	file:
vim_fexists	src/misc1.c	/^vim_fexists(fname)$/;"	f
vim_fgets	src/fileio.c	/^vim_fgets(buf, size, fp)$/;"	f
vim_findfile	src/misc2.c	/^vim_findfile(search_ctx_arg)$/;"	f
vim_findfile_cleanup	src/misc2.c	/^vim_findfile_cleanup(ctx)$/;"	f
vim_findfile_free_visited	src/misc2.c	/^vim_findfile_free_visited(search_ctx_arg)$/;"	f
vim_findfile_free_visited_list	src/misc2.c	/^static void vim_findfile_free_visited_list __ARGS((ff_visited_list_hdr_T **list_headp));$/;"	p	file:	signature:(ff_visited_list_hdr_T **list_headp)
vim_findfile_free_visited_list	src/misc2.c	/^vim_findfile_free_visited_list(list_headp)$/;"	f	file:
vim_findfile_init	src/misc2.c	/^vim_findfile_init(path, filename, stopdirs, level, free_visited, find_what,$/;"	f
vim_findfile_stopdir	src/misc2.c	/^vim_findfile_stopdir(buf)$/;"	f
vim_fnamecmp	src/misc1.c	/^vim_fnamecmp(x, y)$/;"	f
vim_fnamencmp	src/misc1.c	/^vim_fnamencmp(x, y, len)$/;"	f
vim_free	src/misc2.c	/^vim_free(x)$/;"	f
vim_free_in_input_buf	src/ui.c	/^vim_free_in_input_buf()$/;"	f
vim_getenv	src/misc1.c	/^vim_getenv(name, mustfree)$/;"	f
vim_handle_signal	src/os_unix.c	/^vim_handle_signal(sig)$/;"	f
vim_handle_signal	src/vim.h	2162;"	d
vim_isAbsName	src/window.c	/^vim_isAbsName(name)$/;"	f
vim_isIDc	src/charset.c	/^vim_isIDc(c)$/;"	f
vim_is_ctrl_x_key	src/edit.c	/^vim_is_ctrl_x_key(c)$/;"	f
vim_is_fastterm	src/os_unix.c	/^vim_is_fastterm(name)$/;"	f
vim_is_input_buf_empty	src/ui.c	/^vim_is_input_buf_empty()$/;"	f
vim_is_input_buf_full	src/ui.c	/^vim_is_input_buf_full()$/;"	f
vim_is_iris	src/os_unix.c	/^vim_is_iris(name)$/;"	f
vim_is_vt300	src/os_unix.c	/^vim_is_vt300(name)$/;"	f
vim_is_xterm	src/os_unix.c	/^vim_is_xterm(name)$/;"	f
vim_isblankline	src/charset.c	/^vim_isblankline(lbuf)$/;"	f
vim_isbreak	src/macros.h	161;"	d
vim_isdigit	src/charset.c	/^vim_isdigit(c)$/;"	f
vim_isfilec	src/charset.c	/^vim_isfilec(c)$/;"	f
vim_isfilec_or_wc	src/charset.c	/^vim_isfilec_or_wc(c)$/;"	f
vim_islower	src/charset.c	/^vim_islower(c)$/;"	f
vim_ispathlistsep	src/misc1.c	/^vim_ispathlistsep(c)$/;"	f
vim_ispathsep	src/misc1.c	/^vim_ispathsep(c)$/;"	f
vim_isprintc	src/charset.c	/^vim_isprintc(c)$/;"	f
vim_isprintc_strict	src/charset.c	/^vim_isprintc_strict(c)$/;"	f
vim_isspace	src/misc2.c	/^vim_isspace(x)$/;"	f
vim_isupper	src/charset.c	/^vim_isupper(c)$/;"	f
vim_iswhite	src/vim.h	1663;"	d
vim_iswordc	src/charset.c	/^vim_iswordc(c)$/;"	f
vim_iswordc_buf	src/charset.c	/^vim_iswordc_buf(p, buf)$/;"	f
vim_iswordp	src/charset.c	/^vim_iswordp(p)$/;"	f
vim_isxdigit	src/charset.c	/^vim_isxdigit(c)$/;"	f
vim_kbhit	src/os_msdos.c	/^vim_kbhit(void)$/;"	f	file:	signature:(void)
vim_mem_profile_dump	src/misc2.c	/^vim_mem_profile_dump()$/;"	f
vim_memcmp	src/misc2.c	/^vim_memcmp(b1, b2, len)$/;"	f
vim_memcmp	src/vim.h	/^int vim_memcmp __ARGS((void *, void *, size_t));$/;"	p	signature:(void *, void *, size_t)
vim_memcmp	src/vim.h	1628;"	d
vim_memcmp	src/vim.h	1631;"	d
vim_memset	src/misc2.c	/^vim_memset(ptr, c, size)$/;"	f
vim_memset	src/vim.h	/^void *vim_memset __ARGS((void *, int, size_t));$/;"	p	signature:(void *, int, size_t)
vim_memset	src/vim.h	1622;"	d
vim_message	src/if_ruby.c	/^static VALUE vim_message(VALUE self UNUSED, VALUE str)$/;"	f	file:	signature:(VALUE self UNUSED, VALUE str)
vim_mkdir	src/dosinst.h	57;"	d
vim_mkdir	src/dosinst.h	60;"	d
vim_mkdir	src/dosinst.h	62;"	d
vim_mkdir	src/os_amiga.h	213;"	d
vim_mkdir	src/os_msdos.h	101;"	d
vim_mkdir	src/os_msdos.h	103;"	d
vim_mkdir	src/os_unix.h	104;"	d
vim_mkdir	src/os_unix.h	98;"	d
vim_mkdir	src/os_win32.h	192;"	d
vim_mkdir	src/os_win32.h	194;"	d
vim_mkdir_emsg	src/ex_docmd.c	/^vim_mkdir_emsg(name, prot)$/;"	f
vim_mz_buffer	src/if_mzsch.c	/^} vim_mz_buffer;$/;"	t	typeref:struct:__anon24	file:
vim_mz_window	src/if_mzsch.c	/^} vim_mz_window;$/;"	t	typeref:struct:__anon25	file:
vim_open_clipboard	src/os_mswin.c	/^vim_open_clipboard(void)$/;"	f	file:	signature:(void)
vim_parent_hwnd	src/gui_w32.c	/^HWND vim_parent_hwnd = NULL;$/;"	v
vim_read	src/vim.h	1646;"	d
vim_read	src/vim.h	1649;"	d
vim_realloc	src/vim.h	2000;"	d
vim_realloc	src/vim.h	2002;"	d
vim_regcomp	src/regexp.c	/^vim_regcomp(expr, re_flags)$/;"	f
vim_regcomp_had_eol	src/regexp.c	/^vim_regcomp_had_eol()$/;"	f
vim_regexec	src/regexp.c	/^vim_regexec(rmp, line, col)$/;"	f
vim_regexec_both	src/regexp.c	/^static long	vim_regexec_both __ARGS((char_u *line, colnr_T col, proftime_T *tm));$/;"	p	file:	signature:(char_u *line, colnr_T col, proftime_T *tm)
vim_regexec_both	src/regexp.c	/^vim_regexec_both(line, col, tm)$/;"	f	file:
vim_regexec_multi	src/regexp.c	/^vim_regexec_multi(rmp, win, buf, lnum, col, tm)$/;"	f
vim_regexec_nl	src/regexp.c	/^vim_regexec_nl(rmp, line, col)$/;"	f
vim_regsub	src/regexp.c	/^vim_regsub(rmp, source, dest, copy, magic, backslash)$/;"	f
vim_regsub_both	src/regexp.c	/^static int vim_regsub_both __ARGS((char_u *source, char_u *dest, int copy, int magic, int backslash));$/;"	p	file:	signature:(char_u *source, char_u *dest, int copy, int magic, int backslash)
vim_regsub_both	src/regexp.c	/^vim_regsub_both(source, dest, copy, magic, backslash)$/;"	f	file:
vim_regsub_multi	src/regexp.c	/^vim_regsub_multi(rmp, lnum, source, dest, copy, magic, backslash)$/;"	f
vim_rename	src/fileio.c	/^vim_rename(from, to)$/;"	f
vim_resources	src/gui_x11.c	/^static XtResource vim_resources[] =$/;"	v	file:
vim_scrollbarClassRec	src/gui_at_sb.c	/^ScrollbarClassRec vim_scrollbarClassRec =$/;"	v
vim_scrollbarWidgetClass	src/gui_at_sb.c	/^WidgetClass vim_scrollbarWidgetClass = (WidgetClass)&vim_scrollbarClassRec;$/;"	v
vim_set_option	src/if_ruby.c	/^static VALUE vim_set_option(VALUE self UNUSED, VALUE str)$/;"	f	file:	signature:(VALUE self UNUSED, VALUE str)
vim_setenv	src/misc1.c	/^vim_setenv(name, val)$/;"	f
vim_settempdir	src/fileio.c	/^static void vim_settempdir __ARGS((char_u *tempdir));$/;"	p	file:	signature:(char_u *tempdir)
vim_settempdir	src/fileio.c	/^vim_settempdir(tempdir)$/;"	f	file:
vim_snprintf	src/message.c	/^int vim_snprintf __ARGS((char *, size_t, char *, long, long, long,$/;"	p	file:	signature:(char *, size_t, char *, long, long, long, long, long, long, long, long, long, long)
vim_snprintf	src/message.c	/^int vim_snprintf(char *str, size_t str_m, char *fmt, ...);$/;"	p	file:	signature:(char *str, size_t str_m, char *fmt, ...)
vim_snprintf	src/message.c	/^vim_snprintf(char *str, size_t str_m, char *fmt, ...)$/;"	f	signature:(char *str, size_t str_m, char *fmt, ...)
vim_snprintf	src/proto.h	/^vim_snprintf __ARGS((char *, size_t, char *, ...));$/;"	p	signature:(char *, size_t, char *, ...)
vim_snprintf_add	src/message.c	/^vim_snprintf_add(char *str, size_t str_m, char *fmt, ...)$/;"	f	signature:(char *str, size_t str_m, char *fmt, ...)
vim_snprintf_add	src/message.c	/^vim_snprintf_add(str, str_m, fmt, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10)$/;"	f
vim_snprintf_add	src/proto.h	/^vim_snprintf_add __ARGS((char *, size_t, char *, ...));$/;"	p	signature:(char *, size_t, char *, ...)
vim_stat	src/os_mswin.c	/^vim_stat(const char *name, struct stat *stp)$/;"	f	signature:(const char *name, struct stat *stp)
vim_str2nr	src/charset.c	/^vim_str2nr(start, hexp, len, dooct, dohex, nptr, unptr)$/;"	f
vim_str2rb_enc_str	src/if_ruby.c	/^vim_str2rb_enc_str(const char *s)$/;"	f	file:	signature:(const char *s)
vim_strbyte	src/misc2.c	/^vim_strbyte(string, c)$/;"	f
vim_strchr	src/misc2.c	/^vim_strchr(string, c)$/;"	f
vim_stricmp	src/misc2.c	/^vim_stricmp(s1, s2)$/;"	f
vim_strncpy	src/misc2.c	/^vim_strncpy(to, from, len)$/;"	f
vim_strnicmp	src/misc2.c	/^vim_strnicmp(s1, s2, len)$/;"	f
vim_strnsave	src/misc2.c	/^vim_strnsave(string, len)$/;"	f
vim_strnsave_up	src/misc2.c	/^vim_strnsave_up(string, len)$/;"	f
vim_strnsize	src/charset.c	/^vim_strnsize(s, len)$/;"	f
vim_strpbrk	src/misc2.c	/^vim_strpbrk(s, charset)$/;"	f
vim_strpbrk	src/misc2.c	1935;"	d	file:
vim_strpbrk	src/proto.h	/^char_u *vim_strpbrk __ARGS((char_u *s, char_u *charset));$/;"	p	signature:(char_u *s, char_u *charset)
vim_strpbrk	src/vim.h	1535;"	d
vim_strrchr	src/misc2.c	/^vim_strrchr(string, c)$/;"	f
vim_strsave	src/misc2.c	/^vim_strsave(string)$/;"	f
vim_strsave_escape_csi	src/getchar.c	/^vim_strsave_escape_csi(p)$/;"	f
vim_strsave_escaped	src/misc2.c	/^vim_strsave_escaped(string, esc_chars)$/;"	f
vim_strsave_escaped_ext	src/misc2.c	/^vim_strsave_escaped_ext(string, esc_chars, cc, bsl)$/;"	f
vim_strsave_fnameescape	src/ex_getln.c	/^vim_strsave_fnameescape(fname, shell)$/;"	f
vim_strsave_shellescape	src/misc2.c	/^vim_strsave_shellescape(string, do_special)$/;"	f
vim_strsave_up	src/misc2.c	/^vim_strsave_up(string)$/;"	f
vim_strsize	src/charset.c	/^vim_strsize(s)$/;"	f
vim_strup	src/misc2.c	/^vim_strup(p)$/;"	f
vim_tcl_init	src/if_tcl.c	/^vim_tcl_init(arg)$/;"	f
vim_tempdir	src/globals.h	/^EXTERN char_u	*vim_tempdir INIT(= NULL); \/* Name of Vim's own temp dir.$/;"	v
vim_tempname	src/fileio.c	/^vim_tempname(extra_char)$/;"	f
vim_tgetstr	src/term.c	/^static char_u *vim_tgetstr __ARGS((char *s, char_u **pp));$/;"	p	file:	signature:(char *s, char_u **pp)
vim_tgetstr	src/term.c	/^vim_tgetstr(s, pp)$/;"	f	file:
vim_to_mzscheme	src/if_mzsch.c	/^static Scheme_Object *vim_to_mzscheme(typval_T *vim_value, int depth,$/;"	p	file:	signature:(typval_T *vim_value, int depth, Scheme_Hash_Table *visited)
vim_to_mzscheme	src/if_mzsch.c	/^vim_to_mzscheme(typval_T *vim_value, int depth, Scheme_Hash_Table *visited)$/;"	f	file:	signature:(typval_T *vim_value, int depth, Scheme_Hash_Table *visited)
vim_to_ruby	src/if_ruby.c	/^static VALUE vim_to_ruby(typval_T *tv)$/;"	f	file:	signature:(typval_T *tv)
vim_tolower	src/charset.c	/^vim_tolower(c)$/;"	f
vim_toupper	src/charset.c	/^vim_toupper(c)$/;"	f
vim_unescape_csi	src/getchar.c	/^vim_unescape_csi(p)$/;"	f
vim_used_in_input_buf	src/ui.c	/^vim_used_in_input_buf()$/;"	f
vim_version_dir	src/misc1.c	/^static char_u *vim_version_dir __ARGS((char_u *vimdir));$/;"	p	file:	signature:(char_u *vimdir)
vim_version_dir	src/misc1.c	/^vim_version_dir(vimdir)$/;"	f	file:
vim_vsnprintf	src/message.c	/^vim_vsnprintf(str, str_m, fmt, ap, tvs)$/;"	f
vim_vsnprintf	src/proto.h	/^int vim_vsnprintf(char *str, size_t str_m, char *fmt, va_list ap, typval_T *tvs);$/;"	p	signature:(char *str, size_t str_m, char *fmt, va_list ap, typval_T *tvs)
vim_window_validp	src/if_mzsch.c	/^static Scheme_Object *vim_window_validp(void *data, int, Scheme_Object **);$/;"	p	file:	signature:(void *data, int, Scheme_Object **)
vim_window_validp	src/if_mzsch.c	/^vim_window_validp(void *data UNUSED, int argc UNUSED, Scheme_Object **argv)$/;"	f	file:	signature:(void *data UNUSED, int argc UNUSED, Scheme_Object **argv)
vim_windowp	src/if_mzsch.c	/^static Scheme_Object *vim_windowp(void *data, int, Scheme_Object **);$/;"	p	file:	signature:(void *data, int, Scheme_Object **)
vim_windowp	src/if_mzsch.c	/^vim_windowp(void *data UNUSED, int argc UNUSED, Scheme_Object **argv)$/;"	f	file:	signature:(void *data UNUSED, int argc UNUSED, Scheme_Object **argv)
vim_write	src/vim.h	1647;"	d
vim_write	src/vim.h	1650;"	d
vimball#Decompress	runtime/autoload/vimball.vim	/^fun! vimball#Decompress(fname,...)$/;"	f
vimball#MkVimball	runtime/autoload/vimball.vim	/^fun! vimball#MkVimball(line1,line2,writelevel,...) range$/;"	f
vimball#RestoreSettings	runtime/autoload/vimball.vim	/^fun! vimball#RestoreSettings()$/;"	f
vimball#RmVimball	runtime/autoload/vimball.vim	/^fun! vimball#RmVimball(...)$/;"	f
vimball#SaveSettings	runtime/autoload/vimball.vim	/^fun! vimball#SaveSettings()$/;"	f
vimball#ShowMesg	runtime/autoload/vimball.vim	/^fun! vimball#ShowMesg(level,msg)$/;"	f
vimball#Vimball	runtime/autoload/vimball.vim	/^fun! vimball#Vimball(really,...)$/;"	f
vimball#VimballHome	runtime/autoload/vimball.vim	/^fun! vimball#VimballHome()$/;"	f
vimconv_T	src/structs.h	/^} vimconv_T;$/;"	t	typeref:struct:__anon51
vimdllobj	src/Make_bc5.mak	/^vimdllobj = $(vimobj)$/;"	m
vimenc_atom	src/gui_gtk_x11.c	/^static GdkAtom vimenc_atom = GDK_NONE;	\/* Vim's extended selection format *\/$/;"	v	file:
vimenc_atom	src/ui.c	/^static Atom	vimenc_atom;	\/* Vim's extended selection format *\/$/;"	v	file:
vimerror	src/if_tcl.c	/^static int vimerror _ANSI_ARGS_((Tcl_Interp *interp));$/;"	p	file:	signature:(Tcl_Interp *interp)
vimerror	src/if_tcl.c	/^vimerror(interp)$/;"	f	file:
vimfiles_dir_choice	src/dosinst.c	/^static int     vimfiles_dir_choice;$/;"	v	file:
vimfiles_dir_choices	src/dosinst.c	/^static char    *(vimfiles_dir_choices[]) =$/;"	v	file:
vimfiles_dir_home	src/dosinst.c	/^    vimfiles_dir_home$/;"	e	enum:__anon120	file:
vimfiles_dir_none	src/dosinst.c	/^    vimfiles_dir_none = 1,$/;"	e	enum:__anon120	file:
vimfiles_dir_vim	src/dosinst.c	/^    vimfiles_dir_vim,$/;"	e	enum:__anon120	file:
vimfiles_subdirs	src/dosinst.c	/^static char	*(vimfiles_subdirs[]) =$/;"	v	file:
viminfo_add_at_front	src/ex_getln.c	/^static int	viminfo_add_at_front = FALSE;$/;"	v	file:
viminfo_encoding	src/ex_cmds.c	/^static int viminfo_encoding __ARGS((vir_T *virp));$/;"	p	file:	signature:(vir_T *virp)
viminfo_encoding	src/ex_cmds.c	/^viminfo_encoding(virp)$/;"	f	file:
viminfo_errcnt	src/ex_cmds.c	/^static int  viminfo_errcnt;$/;"	v	file:
viminfo_error	src/ex_cmds.c	/^viminfo_error(errnum, message, line)$/;"	f
viminfo_filename	src/ex_cmds.c	/^static char_u *viminfo_filename __ARGS((char_u	*));$/;"	p	file:	signature:(char_u *)
viminfo_filename	src/ex_cmds.c	/^viminfo_filename(file)$/;"	f	file:
viminfo_hisidx	src/ex_getln.c	/^static int	viminfo_hisidx[HIST_COUNT] = {0, 0, 0, 0};$/;"	v	file:
viminfo_hislen	src/ex_getln.c	/^static int	viminfo_hislen[HIST_COUNT] = {0, 0, 0, 0};$/;"	v	file:
viminfo_history	src/ex_getln.c	/^static char_u **viminfo_history[HIST_COUNT] = {NULL, NULL, NULL, NULL};$/;"	v	file:
viminfo_readline	src/ex_cmds.c	/^viminfo_readline(virp)$/;"	f
viminfo_readstring	src/ex_cmds.c	/^viminfo_readstring(virp, off, convert)$/;"	f
viminfo_writestring	src/ex_cmds.c	/^viminfo_writestring(fd, p)$/;"	f
vimmain	src/Make_bc5.mak	/^vimmain = \\$/;"	m
vimmenu_T	src/structs.h	/^typedef int vimmenu_T;$/;"	t
vimmenu_T	src/structs.h	/^typedef struct VimMenu vimmenu_T;$/;"	t	typeref:struct:VimMenu
vimmodule	src/if_python3.c	/^static struct PyModuleDef vimmodule;$/;"	v	typeref:struct:PyModuleDef	file:
vimobj	src/Make_bc5.mak	/^vimobj =  \\$/;"	m
vimobj	src/Make_bc5.mak	/^vimobj = $(vimobj) \\$/;"	m
vimobj	src/if_tcl.c	/^    void	*vimobj;    \/* Vim window or buffer (win_T* or buf_T*) *\/$/;"	m	struct:ref	file:	access:public
vimoption	src/option.c	/^struct vimoption$/;"	s	file:
vimoption::def_val	src/option.c	/^    char_u	*def_val[2];	\/* default values for variable (vi and vim) *\/$/;"	m	struct:vimoption	file:	access:public
vimoption::flags	src/option.c	/^    long_u	flags;		\/* see below *\/$/;"	m	struct:vimoption	file:	access:public
vimoption::fullname	src/option.c	/^    char	*fullname;	\/* full option name *\/$/;"	m	struct:vimoption	file:	access:public
vimoption::indir	src/option.c	/^    idopt_T	indir;		\/* global option: PV_NONE;$/;"	m	struct:vimoption	file:	access:public
vimoption::scriptID	src/option.c	/^    scid_T	scriptID;	\/* script in which the option was last set *\/$/;"	m	struct:vimoption	file:	access:public
vimoption::shortname	src/option.c	/^    char	*shortname;	\/* permissible abbreviation *\/$/;"	m	struct:vimoption	file:	access:public
vimoption::var	src/option.c	/^    char_u	*var;		\/* global option: pointer to variable;$/;"	m	struct:vimoption	file:	access:public
vimpty_getenv	src/misc2.c	/^vimpty_getenv(string)$/;"	f
vimpty_getenv	src/proto.h	/^extern char_u *vimpty_getenv __ARGS((const char_u *string));	\/* from pty.c *\/$/;"	p	signature:(const char_u *string)
vimrc	src/dosinst.c	/^char	vimrc[BUFSIZE];		\/* name of vimrc file to create *\/$/;"	v
vimrcEx	runtime/vimrc_example.vim	/^  augroup vimrcEx$/;"	a
vimrc_found	src/option.c	/^vimrc_found(fname, envname)$/;"	f
vimrun_path	src/os_win32.c	/^static char *vimrun_path = "vimrun ";$/;"	v	file:
vimvar	src/eval.c	/^static struct vimvar$/;"	s	file:
vimvar::vv_di	src/eval.c	/^    dictitem_T	vv_di;		\/* value and name for key *\/$/;"	m	struct:vimvar	file:	access:public
vimvar::vv_filler	src/eval.c	/^    char	vv_filler[16];	\/* space for LONGEST name below!!! *\/$/;"	m	struct:vimvar	file:	access:public
vimvar::vv_flags	src/eval.c	/^    char	vv_flags;	\/* VV_COMPAT, VV_RO, VV_RO_SBX *\/$/;"	m	struct:vimvar	file:	access:public
vimvar::vv_name	src/eval.c	/^    char	*vv_name;	\/* name of variable, without v: *\/$/;"	m	struct:vimvar	file:	access:public
vimvardict	src/eval.c	/^static dict_T		vimvardict;$/;"	v	file:
vimvarht	src/eval.c	381;"	d	file:
vimvars	src/eval.c	/^} vimvars[VV_LEN] =$/;"	v	typeref:struct:vimvar	file:
vimvars_var	src/eval.c	/^static dictitem_T	vimvars_var;$/;"	v	file:
vimwinmain	src/Make_bc5.mak	/^vimwinmain = \\$/;"	m
vir_T	src/structs.h	/^} vir_T;$/;"	t	typeref:struct:__anon52
vir_conv	src/structs.h	/^    vimconv_T	vir_conv;	\/* encoding conversion *\/$/;"	m	struct:__anon52	access:public
vir_fd	src/structs.h	/^    FILE	*vir_fd;	\/* file descriptor *\/$/;"	m	struct:__anon52	access:public
vir_line	src/structs.h	/^    char_u	*vir_line;	\/* text of the current line *\/$/;"	m	struct:__anon52	access:public
virtual_active	src/misc2.c	/^virtual_active()$/;"	f
virtual_active	src/vim.h	1953;"	d
virtual_op	src/globals.h	/^EXTERN int	virtual_op INIT(= MAYBE);$/;"	v
virtual_op	src/vim.h	1954;"	d
visibility	src/gui.h	/^    int		visibility;	    \/* Is shell partially\/fully obscured? *\/$/;"	m	struct:Gui	access:public
visibility	src/gui.h	/^    int		visibility;	    \/* Is window partially\/fully obscured? *\/$/;"	m	struct:Gui	access:public
visibility	src/gui_gtk_f.h	/^    GdkVisibilityState visibility;$/;"	m	struct:_GtkForm	access:public
visibility_event	src/gui_gtk_x11.c	/^visibility_event(GtkWidget *widget UNUSED,$/;"	f	file:	signature:(GtkWidget *widget UNUSED, GdkEventVisibility *event, gpointer data UNUSED)
visual_bell	src/os_win32.c	/^static void visual_bell(void);$/;"	p	file:	signature:(void)
visual_bell	src/os_win32.c	/^visual_bell(void)$/;"	f	file:	signature:(void)
visualinfo_T	src/structs.h	/^} visualinfo_T;$/;"	t	typeref:struct:__anon37
vk_Clr	src/gui_mac.c	205;"	d	file:
vk_Copy	src/gui_mac.c	228;"	d	file:
vk_Cut	src/gui_mac.c	227;"	d	file:
vk_Delete	src/gui_mac.c	212;"	d	file:
vk_Down	src/gui_mac.c	222;"	d	file:
vk_End	src/gui_mac.c	218;"	d	file:
vk_Enter	src/gui_mac.c	206;"	d	file:
vk_Esc	src/gui_mac.c	187;"	d	file:
vk_F1	src/gui_mac.c	189;"	d	file:
vk_F10	src/gui_mac.c	198;"	d	file:
vk_F11	src/gui_mac.c	199;"	d	file:
vk_F12	src/gui_mac.c	200;"	d	file:
vk_F13	src/gui_mac.c	201;"	d	file:
vk_F14	src/gui_mac.c	202;"	d	file:
vk_F15	src/gui_mac.c	203;"	d	file:
vk_F2	src/gui_mac.c	190;"	d	file:
vk_F3	src/gui_mac.c	191;"	d	file:
vk_F4	src/gui_mac.c	192;"	d	file:
vk_F5	src/gui_mac.c	193;"	d	file:
vk_F6	src/gui_mac.c	194;"	d	file:
vk_F7	src/gui_mac.c	195;"	d	file:
vk_F8	src/gui_mac.c	196;"	d	file:
vk_F9	src/gui_mac.c	197;"	d	file:
vk_FwdDelete	src/gui_mac.c	217;"	d	file:
vk_Help	src/gui_mac.c	214;"	d	file:
vk_Home	src/gui_mac.c	215;"	d	file:
vk_Insert	src/gui_mac.c	234;"	d	file:
vk_Left	src/gui_mac.c	223;"	d	file:
vk_NumLock	src/gui_mac.c	233;"	d	file:
vk_PageDown	src/gui_mac.c	219;"	d	file:
vk_PageUp	src/gui_mac.c	216;"	d	file:
vk_Paste	src/gui_mac.c	229;"	d	file:
vk_Pause	src/gui_mac.c	232;"	d	file:
vk_PrintScreen	src/gui_mac.c	230;"	d	file:
vk_Return	src/gui_mac.c	210;"	d	file:
vk_Right	src/gui_mac.c	224;"	d	file:
vk_SCrollLock	src/gui_mac.c	231;"	d	file:
vk_Space	src/gui_mac.c	208;"	d	file:
vk_Tab	src/gui_mac.c	209;"	d	file:
vk_Undo	src/gui_mac.c	226;"	d	file:
vk_Up	src/gui_mac.c	221;"	d	file:
vmode	src/vim.h	/^    int		vmode;		\/* Visual mode character *\/$/;"	m	struct:VimClipboard	access:public
vms_fixfilename	src/os_vms.c	/^vms_fixfilename(void *instring)$/;"	f	signature:(void *instring)
vms_fmatch	src/os_vms.c	/^static char_u **vms_fmatch = NULL;$/;"	v	file:
vms_fspec_proc	src/os_vms.c	/^vms_fspec_proc(char *fil, int val)$/;"	f	file:	signature:(char *fil, int val)
vms_match_free	src/os_vms.c	/^static int vms_match_free = 0;$/;"	v	file:
vms_match_num	src/os_vms.c	/^static int vms_match_num = 0;$/;"	v	file:
vms_read	src/os_vms.c	/^vms_read(char *inbuf, size_t nbytes)$/;"	f	signature:(char *inbuf, size_t nbytes)
vms_remove_version	src/os_vms.c	/^vms_remove_version(void * fname)$/;"	f	signature:(void * fname)
vms_sys	src/os_vms.c	/^vms_sys(char *cmd, char *out, char *inp)$/;"	f	signature:(char *cmd, char *out, char *inp)
vms_sys_status	src/os_vms.c	/^vms_sys_status(int status)$/;"	f	signature:(int status)
vms_unix_mixed_filespec	src/os_vms.c	/^vms_unix_mixed_filespec(char *in, char *out)$/;"	f	file:	signature:(char *in, char *out)
vms_wproc	src/os_vms.c	/^vms_wproc(char *name, int val)$/;"	f	file:	signature:(char *name, int val)
vop_flags	src/option.h	/^EXTERN unsigned	vop_flags;	\/* uses SSOP_ flags *\/$/;"	v
vow	src/hangulin.c	/^vow(c)$/;"	f	file:
vpeekc	src/getchar.c	/^vpeekc()$/;"	f
vpeekc_any	src/getchar.c	/^vpeekc_any()$/;"	f
vpeekc_nomap	src/getchar.c	/^vpeekc_nomap()$/;"	f
vr_lines_changed	src/globals.h	/^EXTERN int	vr_lines_changed INIT(= 0); \/* #Lines changed by "gR" so far *\/$/;"	v
vul_desc	src/os_vms.c	/^vul_desc(DESC *des, char *str)$/;"	f	file:	signature:(DESC *des, char *str)
vul_item	src/os_vms.c	/^vul_item(ITEM *itm, short len, short cod, char *adr, int *ret)$/;"	f	file:	signature:(ITEM *itm, short len, short cod, char *adr, int *ret)
vungetc	src/getchar.c	/^vungetc(c)	\/* unget one character (can only be done once!) *\/$/;"	f
vv_di	src/eval.c	/^    dictitem_T	vv_di;		\/* value and name for key *\/$/;"	m	struct:vimvar	file:	access:public
vv_exception	src/ex_docmd.c	/^    char_u	*vv_exception;$/;"	m	struct:dbg_stuff	file:	access:public
vv_filler	src/eval.c	/^    char	vv_filler[16];	\/* space for LONGEST name below!!! *\/$/;"	m	struct:vimvar	file:	access:public
vv_flags	src/eval.c	/^    char	vv_flags;	\/* VV_COMPAT, VV_RO, VV_RO_SBX *\/$/;"	m	struct:vimvar	file:	access:public
vv_float	src/eval.c	370;"	d	file:
vv_list	src/eval.c	372;"	d	file:
vv_name	src/eval.c	/^    char	*vv_name;	\/* name of variable, without v: *\/$/;"	m	struct:vimvar	file:	access:public
vv_nr	src/eval.c	369;"	d	file:
vv_str	src/eval.c	371;"	d	file:
vv_throwpoint	src/ex_docmd.c	/^    char_u	*vv_throwpoint;$/;"	m	struct:dbg_stuff	file:	access:public
vv_tv	src/eval.c	373;"	d	file:
vv_type	src/eval.c	368;"	d	file:
vval	src/structs.h	/^    }		vval;$/;"	m	struct:__anon53	typeref:union:__anon53::__anon54	access:public
w	runtime/macros/less.vim	/^map w b$/;"	m
w	runtime/tutor/tutor.cs	/^       objekt - udává rozsah pøíkazu, napøíklad  w  (slovo),$/;"	m	signature:(slovo)
w	runtime/tutor/tutor.cs	/^  2. Objekty jsou také shodné, jako napø.: w (slovo), $ (konec øádku), atd.$/;"	m	signature:(slovo)
wVirtKey	src/os_win32.c	/^    WORD    wVirtKey;$/;"	m	struct:__anon89	file:	access:public
w_alist	src/structs.h	/^    alist_T	*w_alist;	    \/* pointer to arglist for this window *\/$/;"	m	struct:window_S	access:public
w_allbuf_opt	src/structs.h	/^    winopt_T	w_allbuf_opt;$/;"	m	struct:window_S	access:public
w_alt_fnum	src/structs.h	/^    int		w_alt_fnum;	    \/* alternate file (for # and CTRL-^) *\/$/;"	m	struct:window_S	access:public
w_arg_idx	src/structs.h	/^    int		w_arg_idx;	    \/* current index in argument list (can be$/;"	m	struct:window_S	access:public
w_arg_idx_invalid	src/structs.h	/^    int		w_arg_idx_invalid;  \/* editing another file than w_arg_idx *\/$/;"	m	struct:window_S	access:public
w_botfill	src/structs.h	/^    int		w_botfill;	    \/* TRUE when filler lines are actually$/;"	m	struct:window_S	access:public
w_botline	src/structs.h	/^    linenr_T	w_botline;	    \/* number of the line below the bottom of$/;"	m	struct:window_S	access:public
w_buffer	src/structs.h	/^    buf_T	*w_buffer;	    \/* buffer we are a window into (used$/;"	m	struct:window_S	access:public
w_changelistidx	src/structs.h	/^    int		w_changelistidx;	\/* current position in b_changelist *\/$/;"	m	struct:window_S	access:public
w_cline_folded	src/structs.h	/^    int		w_cline_folded;	    \/* cursor line is folded *\/$/;"	m	struct:window_S	access:public
w_cline_height	src/structs.h	/^    int		w_cline_height;	    \/* current size of cursor line *\/$/;"	m	struct:window_S	access:public
w_cline_row	src/structs.h	/^    int		w_cline_row;	    \/* starting row of the cursor line *\/$/;"	m	struct:window_S	access:public
w_cursor	src/structs.h	/^    pos_T	w_cursor;	    \/* cursor position in buffer *\/$/;"	m	struct:window_S	access:public
w_curswant	src/structs.h	/^    colnr_T	w_curswant;	    \/* The column we'd like to be at.  This is$/;"	m	struct:window_S	access:public
w_empty_rows	src/structs.h	/^    int		w_empty_rows;	    \/* number of ~ rows in window *\/$/;"	m	struct:window_S	access:public
w_farsi	src/structs.h	/^    int		w_farsi;	\/* for the window dependent Farsi functions *\/$/;"	m	struct:window_S	access:public
w_filler_rows	src/structs.h	/^    int		w_filler_rows;	    \/* number of filler rows at the end of the$/;"	m	struct:window_S	access:public
w_fold_manual	src/structs.h	/^    char	w_fold_manual;	    \/* when TRUE: some folds are opened\/closed$/;"	m	struct:window_S	access:public
w_foldinvalid	src/structs.h	/^    char	w_foldinvalid;	    \/* when TRUE: folding needs to be$/;"	m	struct:window_S	access:public
w_folds	src/structs.h	/^    garray_T	w_folds;	    \/* array of nested folds *\/$/;"	m	struct:window_S	access:public
w_fraction	src/structs.h	/^    int		w_fraction;$/;"	m	struct:window_S	access:public
w_frame	src/structs.h	/^    frame_T	*w_frame;	    \/* frame containing this window *\/$/;"	m	struct:window_S	access:public
w_height	src/structs.h	/^    int		w_height;	    \/* number of rows in window, excluding$/;"	m	struct:window_S	access:public
w_jumplist	src/structs.h	/^    xfmark_T	w_jumplist[JUMPLISTSIZE];$/;"	m	struct:window_S	access:public
w_jumplistidx	src/structs.h	/^    int		w_jumplistidx;		\/* current position *\/$/;"	m	struct:window_S	access:public
w_jumplistlen	src/structs.h	/^    int		w_jumplistlen;		\/* number of active entries *\/$/;"	m	struct:window_S	access:public
w_leftcol	src/structs.h	/^    colnr_T	w_leftcol;	    \/* window column number of the left most$/;"	m	struct:window_S	access:public
w_line	src/structs.h	/^typedef struct w_line$/;"	s
w_line::wl_folded	src/structs.h	/^    char	wl_folded;	\/* TRUE when this is a range of folded lines *\/$/;"	m	struct:w_line	access:public
w_line::wl_lastlnum	src/structs.h	/^    linenr_T	wl_lastlnum;	\/* last buffer line number for logical line *\/$/;"	m	struct:w_line	access:public
w_line::wl_lnum	src/structs.h	/^    linenr_T	wl_lnum;	\/* buffer line number for logical line *\/$/;"	m	struct:w_line	access:public
w_line::wl_size	src/structs.h	/^    short_u	wl_size;	\/* height in screen lines *\/$/;"	m	struct:w_line	access:public
w_line::wl_valid	src/structs.h	/^    char	wl_valid;	\/* TRUE values are valid for text in buffer *\/$/;"	m	struct:w_line	access:public
w_lines	src/structs.h	/^    wline_T	*w_lines;$/;"	m	struct:window_S	access:public
w_lines_valid	src/structs.h	/^    int		w_lines_valid;	    \/* number of valid entries *\/$/;"	m	struct:window_S	access:public
w_llist	src/structs.h	/^    qf_info_T	*w_llist;		\/* Location list for this window *\/$/;"	m	struct:window_S	access:public
w_llist_ref	src/structs.h	/^    qf_info_T	*w_llist_ref;$/;"	m	struct:window_S	access:public
w_localdir	src/structs.h	/^    char_u	*w_localdir;	    \/* absolute path of local directory or$/;"	m	struct:window_S	access:public
w_match_head	src/structs.h	/^    matchitem_T	*w_match_head;		\/* head of match list *\/$/;"	m	struct:window_S	access:public
w_mzscheme_ref	src/structs.h	/^    void	*w_mzscheme_ref;	\/* The MzScheme value for this window *\/$/;"	m	struct:window_S	access:public
w_next	src/structs.h	/^    win_T	*w_next;	    \/* link to next window *\/$/;"	m	struct:window_S	access:public
w_next_match_id	src/structs.h	/^    int		w_next_match_id;	\/* next match ID *\/$/;"	m	struct:window_S	access:public
w_nrwidth	src/structs.h	/^    int		w_nrwidth;	    \/* width of 'number' and 'relativenumber'$/;"	m	struct:window_S	access:public
w_nrwidth_line_count	src/structs.h	/^    linenr_T	w_nrwidth_line_count;	\/* line count when ml_nrwidth_width$/;"	m	struct:window_S	access:public
w_nrwidth_width	src/structs.h	/^    int		w_nrwidth_width;	\/* nr of chars to print line count. *\/$/;"	m	struct:window_S	access:public
w_old_botfill	src/structs.h	/^    int		w_old_botfill;	    \/* w_botfill at last redraw *\/$/;"	m	struct:window_S	access:public
w_old_cursor_fcol	src/structs.h	/^    colnr_T	w_old_cursor_fcol;  \/* first column for block visual part *\/$/;"	m	struct:window_S	access:public
w_old_cursor_lcol	src/structs.h	/^    colnr_T	w_old_cursor_lcol;  \/* last column for block visual part *\/$/;"	m	struct:window_S	access:public
w_old_cursor_lnum	src/structs.h	/^    linenr_T	w_old_cursor_lnum;  \/* last known end of visual part *\/$/;"	m	struct:window_S	access:public
w_old_curswant	src/structs.h	/^    colnr_T	w_old_curswant;	    \/* last known value of Curswant *\/$/;"	m	struct:window_S	access:public
w_old_topfill	src/structs.h	/^    int		w_old_topfill;	    \/* w_topfill at last redraw *\/$/;"	m	struct:window_S	access:public
w_old_visual_col	src/structs.h	/^    colnr_T	w_old_visual_col;   \/* last known start of visual part *\/$/;"	m	struct:window_S	access:public
w_old_visual_lnum	src/structs.h	/^    linenr_T	w_old_visual_lnum;  \/* last known start of visual part *\/$/;"	m	struct:window_S	access:public
w_old_visual_mode	src/structs.h	/^    char	w_old_visual_mode;  \/* last known VIsual_mode *\/$/;"	m	struct:window_S	access:public
w_onebuf_opt	src/structs.h	/^    winopt_T	w_onebuf_opt;$/;"	m	struct:window_S	access:public
w_p_arab	src/structs.h	134;"	d
w_p_cc	src/structs.h	206;"	d
w_p_cc_cols	src/structs.h	/^    int		*w_p_cc_cols;	    \/* array of columns to highlight or NULL *\/$/;"	m	struct:window_S	access:public
w_p_cocu	src/structs.h	220;"	d
w_p_cole	src/structs.h	222;"	d
w_p_crb	src/structs.h	226;"	d
w_p_cuc	src/structs.h	202;"	d
w_p_cul	src/structs.h	204;"	d
w_p_diff	src/structs.h	138;"	d
w_p_fdc	src/structs.h	142;"	d
w_p_fde	src/structs.h	157;"	d
w_p_fde_flags	src/structs.h	/^    long_u	w_p_fde_flags;	    \/* flags for 'foldexpr' *\/$/;"	m	struct:window_S	access:public
w_p_fdi	src/structs.h	146;"	d
w_p_fdl	src/structs.h	148;"	d
w_p_fdm	src/structs.h	150;"	d
w_p_fdn	src/structs.h	154;"	d
w_p_fdt	src/structs.h	159;"	d
w_p_fdt_flags	src/structs.h	/^    long_u	w_p_fdt_flags;	    \/* flags for 'foldtext' *\/$/;"	m	struct:window_S	access:public
w_p_fen	src/structs.h	144;"	d
w_p_fml	src/structs.h	152;"	d
w_p_fmr	src/structs.h	162;"	d
w_p_lbr	src/structs.h	166;"	d
w_p_list	src/structs.h	169;"	d
w_p_nu	src/structs.h	171;"	d
w_p_nuw	src/structs.h	176;"	d
w_p_pvw	src/structs.h	186;"	d
w_p_rl	src/structs.h	190;"	d
w_p_rlc	src/structs.h	192;"	d
w_p_rnu	src/structs.h	173;"	d
w_p_scb	src/structs.h	214;"	d
w_p_scr	src/structs.h	195;"	d
w_p_scriptID	src/structs.h	231;"	d
w_p_spell	src/structs.h	198;"	d
w_p_stl	src/structs.h	210;"	d
w_p_stl_flags	src/structs.h	/^    long_u	w_p_stl_flags;	    \/* flags for 'statusline' *\/$/;"	m	struct:window_S	access:public
w_p_wfh	src/structs.h	180;"	d
w_p_wfw	src/structs.h	182;"	d
w_p_wrap	src/structs.h	217;"	d
w_pcmark	src/structs.h	/^    pos_T	w_pcmark;	\/* previous context mark *\/$/;"	m	struct:window_S	access:public
w_perl_private	src/structs.h	/^    void	*w_perl_private;$/;"	m	struct:window_S	access:public
w_prev	src/structs.h	/^    win_T	*w_prev;	    \/* link to previous window *\/$/;"	m	struct:window_S	access:public
w_prev_fraction_row	src/structs.h	/^    int		w_prev_fraction_row;$/;"	m	struct:window_S	access:public
w_prev_pcmark	src/structs.h	/^    pos_T	w_prev_pcmark;	\/* previous w_pcmark *\/$/;"	m	struct:window_S	access:public
w_python3_ref	src/structs.h	/^    void	*w_python3_ref;		\/* The Python value for this window *\/$/;"	m	struct:window_S	access:public
w_python_ref	src/structs.h	/^    void	*w_python_ref;		\/* The Python value for this window *\/$/;"	m	struct:window_S	access:public
w_redr_status	src/structs.h	/^    int		w_redr_status;	    \/* if TRUE status line must be redrawn *\/$/;"	m	struct:window_S	access:public
w_redr_type	src/structs.h	/^    int		w_redr_type;	    \/* type of redraw to be performed on win *\/$/;"	m	struct:window_S	access:public
w_redraw_bot	src/structs.h	/^    linenr_T	w_redraw_bot;	    \/* when != 0: last line needing redraw *\/$/;"	m	struct:window_S	access:public
w_redraw_top	src/structs.h	/^    linenr_T	w_redraw_top;	    \/* when != 0: first line needing redraw *\/$/;"	m	struct:window_S	access:public
w_ru_cursor	src/structs.h	/^    pos_T	w_ru_cursor;	    \/* cursor position shown in ruler *\/$/;"	m	struct:window_S	access:public
w_ru_empty	src/structs.h	/^    char	w_ru_empty;	    \/* TRUE if ruler shows 0-1 (empty line) *\/$/;"	m	struct:window_S	access:public
w_ru_line_count	src/structs.h	/^    linenr_T	w_ru_line_count;    \/* line count used for ruler *\/$/;"	m	struct:window_S	access:public
w_ru_topfill	src/structs.h	/^    int		w_ru_topfill;	    \/* topfill shown in ruler *\/$/;"	m	struct:window_S	access:public
w_ru_topline	src/structs.h	/^    linenr_T	w_ru_topline;	    \/* topline shown in ruler *\/$/;"	m	struct:window_S	access:public
w_ru_virtcol	src/structs.h	/^    colnr_T	w_ru_virtcol;	    \/* virtcol shown in ruler *\/$/;"	m	struct:window_S	access:public
w_ruby_ref	src/structs.h	/^    void	*w_ruby_ref;$/;"	m	struct:window_S	access:public
w_s	src/structs.h	/^    synblock_T	*w_s;$/;"	m	struct:window_S	access:public
w_scbind_pos	src/structs.h	/^    long	w_scbind_pos;$/;"	m	struct:window_S	access:public
w_scrollbars	src/structs.h	/^    scrollbar_T	w_scrollbars[2];	\/* vert. Scrollbars for this window *\/$/;"	m	struct:window_S	access:public
w_set_curswant	src/structs.h	/^    int		w_set_curswant;	    \/* If set, then update w_curswant the next$/;"	m	struct:window_S	access:public
w_skipcol	src/structs.h	/^    colnr_T	w_skipcol;	    \/* starting column when a single line$/;"	m	struct:window_S	access:public
w_status_height	src/structs.h	/^    int		w_status_height;    \/* number of status lines (0 or 1) *\/$/;"	m	struct:window_S	access:public
w_tagstack	src/structs.h	/^    taggy_T	w_tagstack[TAGSTACKSIZE];	\/* the tag stack *\/$/;"	m	struct:window_S	access:public
w_tagstackidx	src/structs.h	/^    int		w_tagstackidx;		\/* idx just below active entry *\/$/;"	m	struct:window_S	access:public
w_tagstacklen	src/structs.h	/^    int		w_tagstacklen;		\/* number of tags on stack *\/$/;"	m	struct:window_S	access:public
w_tcl_ref	src/structs.h	/^    void	*w_tcl_ref;$/;"	m	struct:window_S	access:public
w_topfill	src/structs.h	/^    int		w_topfill;	    \/* number of filler lines above w_topline *\/$/;"	m	struct:window_S	access:public
w_topline	src/structs.h	/^    linenr_T	w_topline;	    \/* buffer line number of the line at the$/;"	m	struct:window_S	access:public
w_topline_was_set	src/structs.h	/^    char	w_topline_was_set;  \/* flag set to TRUE when topline is set,$/;"	m	struct:window_S	access:public
w_upd_rows	src/structs.h	/^    int		w_upd_rows;	    \/* number of window lines to update when$/;"	m	struct:window_S	access:public
w_valid	src/structs.h	/^    int		w_valid;$/;"	m	struct:window_S	access:public
w_valid_cursor	src/structs.h	/^    pos_T	w_valid_cursor;	    \/* last known position of w_cursor, used$/;"	m	struct:window_S	access:public
w_valid_leftcol	src/structs.h	/^    colnr_T	w_valid_leftcol;    \/* last known w_leftcol *\/$/;"	m	struct:window_S	access:public
w_vars	src/structs.h	/^    dict_T	w_vars;		\/* internal variables, local to window *\/$/;"	m	struct:window_S	access:public
w_virtcol	src/structs.h	/^    colnr_T	w_virtcol;	    \/* column number of the cursor in the$/;"	m	struct:window_S	access:public
w_vsep_width	src/structs.h	/^    int		w_vsep_width;	    \/* Number of separator columns (0 or 1).$/;"	m	struct:window_S	access:public
w_wcol	src/structs.h	/^    int		w_wrow, w_wcol;	    \/* cursor position in window *\/$/;"	m	struct:window_S	access:public
w_width	src/structs.h	/^    int		w_width;	    \/* Width of window, excluding separation.$/;"	m	struct:window_S	access:public
w_wincol	src/structs.h	/^    int		w_wincol;	    \/* Leftmost column of window in screen.$/;"	m	struct:window_S	access:public
w_winrow	src/structs.h	/^    int		w_winrow;	    \/* first row of window in screen *\/$/;"	m	struct:window_S	access:public
w_winvar	src/structs.h	/^    dictitem_T	w_winvar;	\/* variable for "w:" Dictionary *\/$/;"	m	struct:window_S	access:public
w_wrow	src/structs.h	/^    int		w_wrow, w_wcol;	    \/* cursor position in window *\/$/;"	m	struct:window_S	access:public
wait_return	src/message.c	/^wait_return(redraw)$/;"	f
want_full_screen	src/main.c	/^    int		want_full_screen;$/;"	m	struct:__anon9	file:	access:public
want_garbage_collect	src/globals.h	/^EXTERN int	want_garbage_collect INIT(= FALSE);$/;"	v
want_sniff_request	src/if_sniff.c	/^int want_sniff_request = 0;$/;"	v
warp_to_pc	src/workshop.c	/^static void	 warp_to_pc(int);$/;"	p	file:	signature:(int)
warp_to_pc	src/workshop.c	/^warp_to_pc($/;"	f	file:	signature:( int lnum)
was_set_insecurely	src/option.c	/^was_set_insecurely(opt, opt_flags)$/;"	f
wb_window	src/os_amiga.c	/^static struct Window	*wb_window;$/;"	v	typeref:struct:Window	file:
wc_count	src/spell.c	/^    short_u	wc_count;	    \/* nr of times word was seen *\/$/;"	m	struct:wordcount_S	file:	access:public
wc_use_keyname	src/option.c	/^static int wc_use_keyname __ARGS((char_u *varp, long *wcp));$/;"	p	file:	signature:(char_u *varp, long *wcp)
wc_use_keyname	src/option.c	/^wc_use_keyname(varp, wcp)$/;"	f	file:
wc_word	src/spell.c	/^    char_u	wc_word[1];	    \/* word, actually longer *\/$/;"	m	struct:wordcount_S	file:	access:public
wcmd_T	src/ex_docmd.c	/^} wcmd_T;$/;"	t	typeref:struct:__anon4	file:
wcsicmp	src/os_win32.c	154;"	d	file:
what	src/gui_gtk.c	/^    GtkWidget *what;	\/* 'Find what' entry text widget *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
what	src/gui_motif.c	/^    Widget what;	\/* 'Find what' entry text widget *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
where_paste_started	src/globals.h	/^EXTERN pos_T	where_paste_started;$/;"	v
which_scrollbars	src/gui.h	/^    int		which_scrollbars[3];\/* Which scrollbar boxes are active? *\/$/;"	m	struct:Gui	access:public
wi_fold_manual	src/structs.h	/^    int		wi_fold_manual;	\/* copy of w_fold_manual *\/$/;"	m	struct:wininfo_S	access:public
wi_folds	src/structs.h	/^    garray_T	wi_folds;	\/* clone of w_folds *\/$/;"	m	struct:wininfo_S	access:public
wi_fpos	src/structs.h	/^    pos_T	wi_fpos;	\/* last cursor position in the file *\/$/;"	m	struct:wininfo_S	access:public
wi_next	src/structs.h	/^    wininfo_T	*wi_next;	\/* next entry or NULL for last entry *\/$/;"	m	struct:wininfo_S	access:public
wi_opt	src/structs.h	/^    winopt_T	wi_opt;		\/* local window options *\/$/;"	m	struct:wininfo_S	access:public
wi_optset	src/structs.h	/^    int		wi_optset;	\/* TRUE when wi_opt has useful values *\/$/;"	m	struct:wininfo_S	access:public
wi_prev	src/structs.h	/^    wininfo_T	*wi_prev;	\/* previous entry or NULL for first entry *\/$/;"	m	struct:wininfo_S	access:public
wi_win	src/structs.h	/^    win_T	*wi_win;	\/* pointer to window that did set wi_fpos *\/$/;"	m	struct:wininfo_S	access:public
wid	src/gui.h	/^    Window	wid;		    \/* Window id of text area *\/$/;"	m	struct:Gui	access:public
wid	src/gui.h	/^    WindowPtr	wid;		    \/* Window id of text area *\/$/;"	m	struct:Gui	access:public
wide_WindowProc	src/globals.h	/^EXTERN int	wide_WindowProc INIT(= FALSE);	\/* use wide WindowProc() *\/$/;"	v
wide_font	src/gui.h	/^    GuiFont	wide_font;	    \/* 'guifontwide' font *\/$/;"	m	struct:Gui	access:public
widget	src/gui_gtk_f.c	/^    GtkWidget *widget;$/;"	m	struct:_GtkFormChild	file:	access:public
widgetIsIconified	src/integration.c	/^widgetIsIconified($/;"	f	file:	signature:( Widget w)
width	src/gui.h	/^    int		width;		\/* Current width of scroll bar in cols *\/$/;"	m	struct:GuiScrollbar	access:public
width	src/gui_gtk_f.h	/^    guint width;$/;"	m	struct:_GtkForm	access:public
width	src/gui_mac.c	/^    short   width;	\/* Size of the text in pixel *\/$/;"	m	struct:__anon130	file:	access:public
width	src/hardcopy.c	/^    float	width;		\/* width and height in points for portrait *\/$/;"	m	struct:prt_mediasize_S	file:	access:public
width	src/os_vms.c	/^    short	width;$/;"	m	struct:__anon75	file:	access:public
wild	src/gui_xmdlg.c	/^static char wild[3] = "*";$/;"	v	file:
wild_menu_showing	src/globals.h	/^EXTERN int  wild_menu_showing INIT(= 0);$/;"	v
wim_flags	src/globals.h	/^EXTERN char_u	wim_flags[4];$/;"	v
wimp_menu	src/gui_riscos.c	/^int *wimp_menu = (int *) -1;	\/* Pointer to a Wimp menu structure (or -1) *\/$/;"	v
wimp_poll	src/gui_riscos.h	/^int wimp_poll(int mask, int *block);$/;"	p	signature:(int mask, int *block)
wimp_poll	src/swis.s	/^wimp_poll:$/;"	l
wimp_poll_idle	src/gui_riscos.h	/^int wimp_poll_idle(int mask, int *block, int end_time);$/;"	p	signature:(int mask, int *block, int end_time)
wimp_pollidle	src/swis.s	/^wimp_pollidle:$/;"	l
wimp_strsave	src/gui_riscos.c	/^wimp_strsave(str)$/;"	f
win	src/if_mzsch.c	/^    win_T	    *win;$/;"	m	struct:__anon25	file:	access:public
win	src/if_py_both.h	/^    win_T	*win;$/;"	m	struct:__anon12	access:public
win32_kbd_patch_key	src/os_win32.c	/^win32_kbd_patch_key($/;"	f	file:	signature:( KEY_EVENT_RECORD *pker)
win32_set_foreground	src/os_mswin.c	/^win32_set_foreground()$/;"	f
win32ssynch_cb	src/os_win32.c	/^win32ssynch_cb(HWND hwnd, LPARAM lparam)$/;"	f	file:	signature:(HWND hwnd, LPARAM lparam)
winEventHandlerUPP	src/gui_mac.c	/^static EventHandlerUPP winEventHandlerUPP = NULL;$/;"	v	file:
win_T	src/structs.h	/^typedef struct window_S		win_T;$/;"	t	typeref:struct:window_S
win_alloc	src/window.c	/^static win_T *win_alloc __ARGS((win_T *after, int hidden));$/;"	p	file:	signature:(win_T *after, int hidden)
win_alloc	src/window.c	/^win_alloc(after, hidden)$/;"	f	file:
win_alloc_aucmd_win	src/window.c	/^win_alloc_aucmd_win()$/;"	f
win_alloc_first	src/window.c	/^win_alloc_first()$/;"	f
win_alloc_firstwin	src/window.c	/^static int win_alloc_firstwin __ARGS((win_T *oldwin));$/;"	p	file:	signature:(win_T *oldwin)
win_alloc_firstwin	src/window.c	/^win_alloc_firstwin(oldwin)$/;"	f	file:
win_alloc_lines	src/window.c	/^win_alloc_lines(wp)$/;"	f
win_altframe	src/window.c	/^static frame_T *win_altframe __ARGS((win_T *win, tabpage_T *tp));$/;"	p	file:	signature:(win_T *win, tabpage_T *tp)
win_altframe	src/window.c	/^win_altframe(win, tp)$/;"	f	file:
win_append	src/window.c	/^win_append(after, wp)$/;"	f
win_chartabsize	src/charset.c	/^static int win_chartabsize __ARGS((win_T *wp, char_u *p, colnr_T col));$/;"	p	file:	signature:(win_T *wp, char_u *p, colnr_T col)
win_chartabsize	src/charset.c	/^win_chartabsize(wp, p, col)$/;"	f	file:
win_close	src/window.c	/^win_close(win, free_buf)$/;"	f
win_close_othertab	src/window.c	/^win_close_othertab(win, free_buf, tp)$/;"	f
win_col_off	src/move.c	/^win_col_off(wp)$/;"	f
win_col_off2	src/move.c	/^win_col_off2(wp)$/;"	f
win_comp_pos	src/window.c	/^win_comp_pos()$/;"	f
win_comp_scroll	src/window.c	/^win_comp_scroll(wp)$/;"	f
win_copy_options	src/option.c	/^win_copy_options(wp_from, wp_to)$/;"	f
win_count	src/window.c	/^win_count()$/;"	f
win_del_lines	src/screen.c	/^win_del_lines(wp, row, line_count, invalid, mayclear)$/;"	f
win_do_lines	src/screen.c	/^static int win_do_lines __ARGS((win_T *wp, int row, int line_count, int mayclear, int del));$/;"	p	file:	signature:(win_T *wp, int row, int line_count, int mayclear, int del)
win_do_lines	src/screen.c	/^win_do_lines(wp, row, line_count, mayclear, del)$/;"	f	file:
win_drag_status_line	src/window.c	/^win_drag_status_line(dragwin, offset)$/;"	f
win_drag_vsep_line	src/window.c	/^win_drag_vsep_line(dragwin, offset)$/;"	f
win_draw_end	src/screen.c	/^static void win_draw_end __ARGS((win_T *wp, int c1, int c2, int row, int endrow, hlf_T hl));$/;"	p	file:	signature:(win_T *wp, int c1, int c2, int row, int endrow, hlf_T hl)
win_draw_end	src/screen.c	/^win_draw_end(wp, c1, c2, row, endrow, hl)$/;"	f	file:
win_enter	src/window.c	/^win_enter(wp, undo_sync)$/;"	f
win_enter_ext	src/window.c	/^static void win_enter_ext __ARGS((win_T *wp, int undo_sync, int no_curwin));$/;"	p	file:	signature:(win_T *wp, int undo_sync, int no_curwin)
win_enter_ext	src/window.c	/^win_enter_ext(wp, undo_sync, curwin_invalid)$/;"	f	file:
win_equal	src/window.c	/^win_equal(next_curwin, current, dir)$/;"	f
win_equal_rec	src/window.c	/^static void win_equal_rec __ARGS((win_T *next_curwin, int current, frame_T *topfr, int dir, int col, int row, int width, int height));$/;"	p	file:	signature:(win_T *next_curwin, int current, frame_T *topfr, int dir, int col, int row, int width, int height)
win_equal_rec	src/window.c	/^win_equal_rec(next_curwin, current, topfr, dir, col, row, width, height)$/;"	f	file:
win_exchange	src/window.c	/^static void win_exchange __ARGS((long));$/;"	p	file:	signature:(long)
win_exchange	src/window.c	/^win_exchange(Prenum)$/;"	f	file:
win_find_nr	src/window.c	/^win_find_nr(winnr)$/;"	f
win_foldinfo	src/screen.c	/^static foldinfo_T win_foldinfo;	\/* info for 'foldcolumn' *\/$/;"	v	file:
win_free	src/window.c	/^static void win_free __ARGS((win_T *wp, tabpage_T *tp));$/;"	p	file:	signature:(win_T *wp, tabpage_T *tp)
win_free	src/window.c	/^win_free(wp, tp)$/;"	f	file:
win_free_all	src/window.c	/^win_free_all()$/;"	f
win_free_lsize	src/window.c	/^win_free_lsize(wp)$/;"	f
win_free_mem	src/window.c	/^static win_T *win_free_mem __ARGS((win_T *win, int *dirp, tabpage_T *tp));$/;"	p	file:	signature:(win_T *win, int *dirp, tabpage_T *tp)
win_free_mem	src/window.c	/^win_free_mem(win, dirp, tp)$/;"	f	file:
win_goto	src/window.c	/^win_goto(wp)$/;"	f
win_goto_hor	src/window.c	/^static void win_goto_hor __ARGS((int left, long count));$/;"	p	file:	signature:(int left, long count)
win_goto_hor	src/window.c	/^win_goto_hor(left, count)$/;"	f	file:
win_goto_ver	src/window.c	/^static void win_goto_ver __ARGS((int up, long count));$/;"	p	file:	signature:(int up, long count)
win_goto_ver	src/window.c	/^win_goto_ver(up, count)$/;"	f	file:
win_hasvertsplit	src/window.c	/^win_hasvertsplit()$/;"	f
win_init	src/window.c	/^static void win_init __ARGS((win_T *newp, win_T *oldp, int flags));$/;"	p	file:	signature:(win_T *newp, win_T *oldp, int flags)
win_init	src/window.c	/^win_init(newp, oldp, flags)$/;"	f	file:
win_init_empty	src/window.c	/^win_init_empty(wp)$/;"	f
win_init_size	src/window.c	/^win_init_size()$/;"	f
win_init_some	src/window.c	/^static void win_init_some __ARGS((win_T *newp, win_T *oldp));$/;"	p	file:	signature:(win_T *newp, win_T *oldp)
win_init_some	src/window.c	/^win_init_some(newp, oldp)$/;"	f	file:
win_ins_lines	src/screen.c	/^win_ins_lines(wp, row, line_count, invalid, mayclear)$/;"	f
win_lbr_chartabsize	src/charset.c	/^win_lbr_chartabsize(wp, s, col, headp)$/;"	f
win_line	src/screen.c	/^static int win_line __ARGS((win_T *, linenr_T, int, int, int nochange));$/;"	p	file:	signature:(win_T *, linenr_T, int, int, int nochange)
win_line	src/screen.c	/^win_line(wp, lnum, startrow, endrow, nochange)$/;"	f	file:
win_linetabsize	src/charset.c	/^win_linetabsize(wp, p, len)$/;"	f
win_move_after	src/window.c	/^win_move_after(win1, win2)$/;"	f
win_new_height	src/window.c	/^static void win_new_height __ARGS((win_T *, int));$/;"	p	file:	signature:(win_T *, int)
win_new_height	src/window.c	/^win_new_height(wp, height)$/;"	f	file:
win_new_shellsize	src/term.c	/^win_new_shellsize()$/;"	f
win_new_tabpage	src/window.c	/^win_new_tabpage(after)$/;"	f
win_new_width	src/window.c	/^static void win_new_width __ARGS((win_T *wp, int width));$/;"	p	file:	signature:(win_T *wp, int width)
win_new_width	src/window.c	/^win_new_width(wp, width)$/;"	f	file:
win_nolbr_chartabsize	src/charset.c	/^static int win_nolbr_chartabsize __ARGS((win_T *wp, char_u *s, colnr_T col, int *headp));$/;"	p	file:	signature:(win_T *wp, char_u *s, colnr_T col, int *headp)
win_nolbr_chartabsize	src/charset.c	/^win_nolbr_chartabsize(wp, s, col, headp)$/;"	f	file:
win_redr_custom	src/screen.c	/^static void win_redr_custom __ARGS((win_T *wp, int draw_ruler));$/;"	p	file:	signature:(win_T *wp, int draw_ruler)
win_redr_custom	src/screen.c	/^win_redr_custom(wp, draw_ruler)$/;"	f	file:
win_redr_ruler	src/screen.c	/^static void win_redr_ruler __ARGS((win_T *wp, int always));$/;"	p	file:	signature:(win_T *wp, int always)
win_redr_ruler	src/screen.c	/^win_redr_ruler(wp, always)$/;"	f	file:
win_redr_status	src/screen.c	/^win_redr_status(wp)$/;"	f
win_redr_status_matches	src/screen.c	/^win_redr_status_matches(xp, num_matches, matches, match, showtail)$/;"	f
win_redraw_last_status	src/screen.c	/^win_redraw_last_status(frp)$/;"	f
win_remove	src/window.c	/^win_remove(wp, tp)$/;"	f
win_resize_off	src/os_amiga.c	/^win_resize_off()$/;"	f
win_resize_on	src/os_amiga.c	/^win_resize_on()$/;"	f
win_rest_invalid	src/screen.c	/^static void win_rest_invalid __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
win_rest_invalid	src/screen.c	/^win_rest_invalid(wp)$/;"	f	file:
win_rotate	src/window.c	/^static void win_rotate __ARGS((int, int));$/;"	p	file:	signature:(int, int)
win_rotate	src/window.c	/^win_rotate(upwards, count)$/;"	f	file:
win_setheight	src/window.c	/^win_setheight(height)$/;"	f
win_setheight_win	src/window.c	/^win_setheight_win(height, win)$/;"	f
win_setminheight	src/window.c	/^win_setminheight()$/;"	f
win_setwidth	src/window.c	/^win_setwidth(width)$/;"	f
win_setwidth_win	src/window.c	/^win_setwidth_win(width, wp)$/;"	f
win_size_restore	src/window.c	/^win_size_restore(gap)$/;"	f
win_size_save	src/window.c	/^win_size_save(gap)$/;"	f
win_socket_id	src/globals.h	/^EXTERN long_u	win_socket_id INIT(= 0);$/;"	v
win_split	src/window.c	/^win_split(size, flags)$/;"	f
win_split_ins	src/window.c	/^win_split_ins(size, flags, newwin, dir)$/;"	f
win_totop	src/window.c	/^static void win_totop __ARGS((int size, int flags));$/;"	p	file:	signature:(int size, int flags)
win_totop	src/window.c	/^win_totop(size, flags)$/;"	f	file:
win_update	src/screen.c	/^static void win_update __ARGS((win_T *wp));$/;"	p	file:	signature:(win_T *wp)
win_update	src/screen.c	/^win_update(wp)$/;"	f	file:
win_valid	src/window.c	/^win_valid(win)$/;"	f
windgoto	src/screen.c	/^windgoto(row, col)$/;"	f
window	src/gui_gtk_f.c	/^    GdkWindow *window;$/;"	m	struct:_GtkFormChild	file:	access:public
window_S	src/structs.h	/^struct window_S$/;"	s
window_S::w_alist	src/structs.h	/^    alist_T	*w_alist;	    \/* pointer to arglist for this window *\/$/;"	m	struct:window_S	access:public
window_S::w_allbuf_opt	src/structs.h	/^    winopt_T	w_allbuf_opt;$/;"	m	struct:window_S	access:public
window_S::w_alt_fnum	src/structs.h	/^    int		w_alt_fnum;	    \/* alternate file (for # and CTRL-^) *\/$/;"	m	struct:window_S	access:public
window_S::w_arg_idx	src/structs.h	/^    int		w_arg_idx;	    \/* current index in argument list (can be$/;"	m	struct:window_S	access:public
window_S::w_arg_idx_invalid	src/structs.h	/^    int		w_arg_idx_invalid;  \/* editing another file than w_arg_idx *\/$/;"	m	struct:window_S	access:public
window_S::w_botfill	src/structs.h	/^    int		w_botfill;	    \/* TRUE when filler lines are actually$/;"	m	struct:window_S	access:public
window_S::w_botline	src/structs.h	/^    linenr_T	w_botline;	    \/* number of the line below the bottom of$/;"	m	struct:window_S	access:public
window_S::w_buffer	src/structs.h	/^    buf_T	*w_buffer;	    \/* buffer we are a window into (used$/;"	m	struct:window_S	access:public
window_S::w_changelistidx	src/structs.h	/^    int		w_changelistidx;	\/* current position in b_changelist *\/$/;"	m	struct:window_S	access:public
window_S::w_cline_folded	src/structs.h	/^    int		w_cline_folded;	    \/* cursor line is folded *\/$/;"	m	struct:window_S	access:public
window_S::w_cline_height	src/structs.h	/^    int		w_cline_height;	    \/* current size of cursor line *\/$/;"	m	struct:window_S	access:public
window_S::w_cline_row	src/structs.h	/^    int		w_cline_row;	    \/* starting row of the cursor line *\/$/;"	m	struct:window_S	access:public
window_S::w_cursor	src/structs.h	/^    pos_T	w_cursor;	    \/* cursor position in buffer *\/$/;"	m	struct:window_S	access:public
window_S::w_curswant	src/structs.h	/^    colnr_T	w_curswant;	    \/* The column we'd like to be at.  This is$/;"	m	struct:window_S	access:public
window_S::w_empty_rows	src/structs.h	/^    int		w_empty_rows;	    \/* number of ~ rows in window *\/$/;"	m	struct:window_S	access:public
window_S::w_farsi	src/structs.h	/^    int		w_farsi;	\/* for the window dependent Farsi functions *\/$/;"	m	struct:window_S	access:public
window_S::w_filler_rows	src/structs.h	/^    int		w_filler_rows;	    \/* number of filler rows at the end of the$/;"	m	struct:window_S	access:public
window_S::w_fold_manual	src/structs.h	/^    char	w_fold_manual;	    \/* when TRUE: some folds are opened\/closed$/;"	m	struct:window_S	access:public
window_S::w_foldinvalid	src/structs.h	/^    char	w_foldinvalid;	    \/* when TRUE: folding needs to be$/;"	m	struct:window_S	access:public
window_S::w_folds	src/structs.h	/^    garray_T	w_folds;	    \/* array of nested folds *\/$/;"	m	struct:window_S	access:public
window_S::w_fraction	src/structs.h	/^    int		w_fraction;$/;"	m	struct:window_S	access:public
window_S::w_frame	src/structs.h	/^    frame_T	*w_frame;	    \/* frame containing this window *\/$/;"	m	struct:window_S	access:public
window_S::w_height	src/structs.h	/^    int		w_height;	    \/* number of rows in window, excluding$/;"	m	struct:window_S	access:public
window_S::w_jumplist	src/structs.h	/^    xfmark_T	w_jumplist[JUMPLISTSIZE];$/;"	m	struct:window_S	access:public
window_S::w_jumplistidx	src/structs.h	/^    int		w_jumplistidx;		\/* current position *\/$/;"	m	struct:window_S	access:public
window_S::w_jumplistlen	src/structs.h	/^    int		w_jumplistlen;		\/* number of active entries *\/$/;"	m	struct:window_S	access:public
window_S::w_leftcol	src/structs.h	/^    colnr_T	w_leftcol;	    \/* window column number of the left most$/;"	m	struct:window_S	access:public
window_S::w_lines	src/structs.h	/^    wline_T	*w_lines;$/;"	m	struct:window_S	access:public
window_S::w_lines_valid	src/structs.h	/^    int		w_lines_valid;	    \/* number of valid entries *\/$/;"	m	struct:window_S	access:public
window_S::w_llist	src/structs.h	/^    qf_info_T	*w_llist;		\/* Location list for this window *\/$/;"	m	struct:window_S	access:public
window_S::w_llist_ref	src/structs.h	/^    qf_info_T	*w_llist_ref;$/;"	m	struct:window_S	access:public
window_S::w_localdir	src/structs.h	/^    char_u	*w_localdir;	    \/* absolute path of local directory or$/;"	m	struct:window_S	access:public
window_S::w_match_head	src/structs.h	/^    matchitem_T	*w_match_head;		\/* head of match list *\/$/;"	m	struct:window_S	access:public
window_S::w_mzscheme_ref	src/structs.h	/^    void	*w_mzscheme_ref;	\/* The MzScheme value for this window *\/$/;"	m	struct:window_S	access:public
window_S::w_next	src/structs.h	/^    win_T	*w_next;	    \/* link to next window *\/$/;"	m	struct:window_S	access:public
window_S::w_next_match_id	src/structs.h	/^    int		w_next_match_id;	\/* next match ID *\/$/;"	m	struct:window_S	access:public
window_S::w_nrwidth	src/structs.h	/^    int		w_nrwidth;	    \/* width of 'number' and 'relativenumber'$/;"	m	struct:window_S	access:public
window_S::w_nrwidth_line_count	src/structs.h	/^    linenr_T	w_nrwidth_line_count;	\/* line count when ml_nrwidth_width$/;"	m	struct:window_S	access:public
window_S::w_nrwidth_width	src/structs.h	/^    int		w_nrwidth_width;	\/* nr of chars to print line count. *\/$/;"	m	struct:window_S	access:public
window_S::w_old_botfill	src/structs.h	/^    int		w_old_botfill;	    \/* w_botfill at last redraw *\/$/;"	m	struct:window_S	access:public
window_S::w_old_cursor_fcol	src/structs.h	/^    colnr_T	w_old_cursor_fcol;  \/* first column for block visual part *\/$/;"	m	struct:window_S	access:public
window_S::w_old_cursor_lcol	src/structs.h	/^    colnr_T	w_old_cursor_lcol;  \/* last column for block visual part *\/$/;"	m	struct:window_S	access:public
window_S::w_old_cursor_lnum	src/structs.h	/^    linenr_T	w_old_cursor_lnum;  \/* last known end of visual part *\/$/;"	m	struct:window_S	access:public
window_S::w_old_curswant	src/structs.h	/^    colnr_T	w_old_curswant;	    \/* last known value of Curswant *\/$/;"	m	struct:window_S	access:public
window_S::w_old_topfill	src/structs.h	/^    int		w_old_topfill;	    \/* w_topfill at last redraw *\/$/;"	m	struct:window_S	access:public
window_S::w_old_visual_col	src/structs.h	/^    colnr_T	w_old_visual_col;   \/* last known start of visual part *\/$/;"	m	struct:window_S	access:public
window_S::w_old_visual_lnum	src/structs.h	/^    linenr_T	w_old_visual_lnum;  \/* last known start of visual part *\/$/;"	m	struct:window_S	access:public
window_S::w_old_visual_mode	src/structs.h	/^    char	w_old_visual_mode;  \/* last known VIsual_mode *\/$/;"	m	struct:window_S	access:public
window_S::w_onebuf_opt	src/structs.h	/^    winopt_T	w_onebuf_opt;$/;"	m	struct:window_S	access:public
window_S::w_p_cc_cols	src/structs.h	/^    int		*w_p_cc_cols;	    \/* array of columns to highlight or NULL *\/$/;"	m	struct:window_S	access:public
window_S::w_p_fde_flags	src/structs.h	/^    long_u	w_p_fde_flags;	    \/* flags for 'foldexpr' *\/$/;"	m	struct:window_S	access:public
window_S::w_p_fdt_flags	src/structs.h	/^    long_u	w_p_fdt_flags;	    \/* flags for 'foldtext' *\/$/;"	m	struct:window_S	access:public
window_S::w_p_stl_flags	src/structs.h	/^    long_u	w_p_stl_flags;	    \/* flags for 'statusline' *\/$/;"	m	struct:window_S	access:public
window_S::w_pcmark	src/structs.h	/^    pos_T	w_pcmark;	\/* previous context mark *\/$/;"	m	struct:window_S	access:public
window_S::w_perl_private	src/structs.h	/^    void	*w_perl_private;$/;"	m	struct:window_S	access:public
window_S::w_prev	src/structs.h	/^    win_T	*w_prev;	    \/* link to previous window *\/$/;"	m	struct:window_S	access:public
window_S::w_prev_fraction_row	src/structs.h	/^    int		w_prev_fraction_row;$/;"	m	struct:window_S	access:public
window_S::w_prev_pcmark	src/structs.h	/^    pos_T	w_prev_pcmark;	\/* previous w_pcmark *\/$/;"	m	struct:window_S	access:public
window_S::w_python3_ref	src/structs.h	/^    void	*w_python3_ref;		\/* The Python value for this window *\/$/;"	m	struct:window_S	access:public
window_S::w_python_ref	src/structs.h	/^    void	*w_python_ref;		\/* The Python value for this window *\/$/;"	m	struct:window_S	access:public
window_S::w_redr_status	src/structs.h	/^    int		w_redr_status;	    \/* if TRUE status line must be redrawn *\/$/;"	m	struct:window_S	access:public
window_S::w_redr_type	src/structs.h	/^    int		w_redr_type;	    \/* type of redraw to be performed on win *\/$/;"	m	struct:window_S	access:public
window_S::w_redraw_bot	src/structs.h	/^    linenr_T	w_redraw_bot;	    \/* when != 0: last line needing redraw *\/$/;"	m	struct:window_S	access:public
window_S::w_redraw_top	src/structs.h	/^    linenr_T	w_redraw_top;	    \/* when != 0: first line needing redraw *\/$/;"	m	struct:window_S	access:public
window_S::w_ru_cursor	src/structs.h	/^    pos_T	w_ru_cursor;	    \/* cursor position shown in ruler *\/$/;"	m	struct:window_S	access:public
window_S::w_ru_empty	src/structs.h	/^    char	w_ru_empty;	    \/* TRUE if ruler shows 0-1 (empty line) *\/$/;"	m	struct:window_S	access:public
window_S::w_ru_line_count	src/structs.h	/^    linenr_T	w_ru_line_count;    \/* line count used for ruler *\/$/;"	m	struct:window_S	access:public
window_S::w_ru_topfill	src/structs.h	/^    int		w_ru_topfill;	    \/* topfill shown in ruler *\/$/;"	m	struct:window_S	access:public
window_S::w_ru_topline	src/structs.h	/^    linenr_T	w_ru_topline;	    \/* topline shown in ruler *\/$/;"	m	struct:window_S	access:public
window_S::w_ru_virtcol	src/structs.h	/^    colnr_T	w_ru_virtcol;	    \/* virtcol shown in ruler *\/$/;"	m	struct:window_S	access:public
window_S::w_ruby_ref	src/structs.h	/^    void	*w_ruby_ref;$/;"	m	struct:window_S	access:public
window_S::w_s	src/structs.h	/^    synblock_T	*w_s;$/;"	m	struct:window_S	access:public
window_S::w_scbind_pos	src/structs.h	/^    long	w_scbind_pos;$/;"	m	struct:window_S	access:public
window_S::w_scrollbars	src/structs.h	/^    scrollbar_T	w_scrollbars[2];	\/* vert. Scrollbars for this window *\/$/;"	m	struct:window_S	access:public
window_S::w_set_curswant	src/structs.h	/^    int		w_set_curswant;	    \/* If set, then update w_curswant the next$/;"	m	struct:window_S	access:public
window_S::w_skipcol	src/structs.h	/^    colnr_T	w_skipcol;	    \/* starting column when a single line$/;"	m	struct:window_S	access:public
window_S::w_status_height	src/structs.h	/^    int		w_status_height;    \/* number of status lines (0 or 1) *\/$/;"	m	struct:window_S	access:public
window_S::w_tagstack	src/structs.h	/^    taggy_T	w_tagstack[TAGSTACKSIZE];	\/* the tag stack *\/$/;"	m	struct:window_S	access:public
window_S::w_tagstackidx	src/structs.h	/^    int		w_tagstackidx;		\/* idx just below active entry *\/$/;"	m	struct:window_S	access:public
window_S::w_tagstacklen	src/structs.h	/^    int		w_tagstacklen;		\/* number of tags on stack *\/$/;"	m	struct:window_S	access:public
window_S::w_tcl_ref	src/structs.h	/^    void	*w_tcl_ref;$/;"	m	struct:window_S	access:public
window_S::w_topfill	src/structs.h	/^    int		w_topfill;	    \/* number of filler lines above w_topline *\/$/;"	m	struct:window_S	access:public
window_S::w_topline	src/structs.h	/^    linenr_T	w_topline;	    \/* buffer line number of the line at the$/;"	m	struct:window_S	access:public
window_S::w_topline_was_set	src/structs.h	/^    char	w_topline_was_set;  \/* flag set to TRUE when topline is set,$/;"	m	struct:window_S	access:public
window_S::w_upd_rows	src/structs.h	/^    int		w_upd_rows;	    \/* number of window lines to update when$/;"	m	struct:window_S	access:public
window_S::w_valid	src/structs.h	/^    int		w_valid;$/;"	m	struct:window_S	access:public
window_S::w_valid_cursor	src/structs.h	/^    pos_T	w_valid_cursor;	    \/* last known position of w_cursor, used$/;"	m	struct:window_S	access:public
window_S::w_valid_leftcol	src/structs.h	/^    colnr_T	w_valid_leftcol;    \/* last known w_leftcol *\/$/;"	m	struct:window_S	access:public
window_S::w_vars	src/structs.h	/^    dict_T	w_vars;		\/* internal variables, local to window *\/$/;"	m	struct:window_S	access:public
window_S::w_virtcol	src/structs.h	/^    colnr_T	w_virtcol;	    \/* column number of the cursor in the$/;"	m	struct:window_S	access:public
window_S::w_vsep_width	src/structs.h	/^    int		w_vsep_width;	    \/* Number of separator columns (0 or 1).$/;"	m	struct:window_S	access:public
window_S::w_wcol	src/structs.h	/^    int		w_wrow, w_wcol;	    \/* cursor position in window *\/$/;"	m	struct:window_S	access:public
window_S::w_width	src/structs.h	/^    int		w_width;	    \/* Width of window, excluding separation.$/;"	m	struct:window_S	access:public
window_S::w_wincol	src/structs.h	/^    int		w_wincol;	    \/* Leftmost column of window in screen.$/;"	m	struct:window_S	access:public
window_S::w_winrow	src/structs.h	/^    int		w_winrow;	    \/* first row of window in screen *\/$/;"	m	struct:window_S	access:public
window_S::w_winvar	src/structs.h	/^    dictitem_T	w_winvar;	\/* variable for "w:" Dictionary *\/$/;"	m	struct:window_S	access:public
window_S::w_wrow	src/structs.h	/^    int		w_wrow, w_wcol;	    \/* cursor position in window *\/$/;"	m	struct:window_S	access:public
window_buffer	src/if_ruby.c	/^static VALUE window_buffer(VALUE self)$/;"	f	file:	signature:(VALUE self)
window_cb	src/dosinst.c	/^window_cb(HWND hwnd, LPARAM lparam)$/;"	f	file:	signature:(HWND hwnd, LPARAM lparam)
window_count	src/main.c	/^    int		window_count;		\/* number of windows to use *\/$/;"	m	struct:__anon9	file:	access:public
window_cursor	src/if_ruby.c	/^static VALUE window_cursor(VALUE self)$/;"	f	file:	signature:(VALUE self)
window_fixup_proc	src/if_mzsch.c	/^static int window_fixup_proc(void *obj)$/;"	f	file:	signature:(void *obj)
window_handle	src/gui.h	/^    int		window_handle;$/;"	m	struct:Gui	access:public
window_height	src/if_ruby.c	/^static VALUE window_height(VALUE self)$/;"	f	file:	signature:(VALUE self)
window_layout	src/main.c	/^    int		window_layout;		\/* 0, WIN_HOR, WIN_VER or WIN_TABS *\/$/;"	m	struct:__anon9	file:	access:public
window_mark_proc	src/if_mzsch.c	/^static int window_mark_proc(void *obj)$/;"	f	file:	signature:(void *obj)
window_new	src/if_mzsch.c	/^static Scheme_Object *window_new(win_T *win);$/;"	p	file:	signature:(win_T *win)
window_new	src/if_mzsch.c	/^window_new(win_T *win)$/;"	f	file:	signature:(win_T *win)
window_new	src/if_ruby.c	/^static VALUE window_new(win_T *win)$/;"	f	file:	signature:(win_T *win)
window_s_aref	src/if_ruby.c	/^static VALUE window_s_aref(VALUE self UNUSED, VALUE num)$/;"	f	file:	signature:(VALUE self UNUSED, VALUE num)
window_s_count	src/if_ruby.c	/^static VALUE window_s_count()$/;"	f	file:
window_s_current	src/if_ruby.c	/^static VALUE window_s_current()$/;"	f	file:
window_set_cursor	src/if_ruby.c	/^static VALUE window_set_cursor(VALUE self, VALUE pos)$/;"	f	file:	signature:(VALUE self, VALUE pos)
window_set_height	src/if_ruby.c	/^static VALUE window_set_height(VALUE self, VALUE height)$/;"	f	file:	signature:(VALUE self, VALUE height)
window_set_width	src/if_ruby.c	/^static VALUE window_set_width(VALUE self, VALUE width)$/;"	f	file:	signature:(VALUE self, VALUE width)
window_size_proc	src/if_mzsch.c	/^static int window_size_proc(void *obj UNUSED)$/;"	f	file:	signature:(void *obj UNUSED)
window_title	src/gui.h	/^    char_u	*window_title;$/;"	m	struct:Gui	access:public
window_title_size	src/gui.h	/^    int		window_title_size;$/;"	m	struct:Gui	access:public
window_width	src/if_ruby.c	/^static VALUE window_width(VALUE self)$/;"	f	file:	signature:(VALUE self)
windowcmd	src/if_tcl.c	/^windowcmd(dummy, interp, objc, objv)$/;"	f	file:
windowed	src/os_riscos.c	/^int windowed;		\/* Flag - are we running inside a text window? *\/$/;"	v
winframe_remove	src/window.c	/^winframe_remove(win, dirp, tp)$/;"	f
wininfo_S	src/structs.h	/^struct wininfo_S$/;"	s
wininfo_S::wi_fold_manual	src/structs.h	/^    int		wi_fold_manual;	\/* copy of w_fold_manual *\/$/;"	m	struct:wininfo_S	access:public
wininfo_S::wi_folds	src/structs.h	/^    garray_T	wi_folds;	\/* clone of w_folds *\/$/;"	m	struct:wininfo_S	access:public
wininfo_S::wi_fpos	src/structs.h	/^    pos_T	wi_fpos;	\/* last cursor position in the file *\/$/;"	m	struct:wininfo_S	access:public
wininfo_S::wi_next	src/structs.h	/^    wininfo_T	*wi_next;	\/* next entry or NULL for last entry *\/$/;"	m	struct:wininfo_S	access:public
wininfo_S::wi_opt	src/structs.h	/^    winopt_T	wi_opt;		\/* local window options *\/$/;"	m	struct:wininfo_S	access:public
wininfo_S::wi_optset	src/structs.h	/^    int		wi_optset;	\/* TRUE when wi_opt has useful values *\/$/;"	m	struct:wininfo_S	access:public
wininfo_S::wi_prev	src/structs.h	/^    wininfo_T	*wi_prev;	\/* previous entry or NULL for first entry *\/$/;"	m	struct:wininfo_S	access:public
wininfo_S::wi_win	src/structs.h	/^    win_T	*wi_win;	\/* pointer to window that did set wi_fpos *\/$/;"	m	struct:wininfo_S	access:public
wininfo_T	src/structs.h	/^typedef struct wininfo_S	wininfo_T;$/;"	t	typeref:struct:wininfo_S
wininfo_other_tab_diff	src/buffer.c	/^static int wininfo_other_tab_diff __ARGS((wininfo_T *wip));$/;"	p	file:	signature:(wininfo_T *wip)
wininfo_other_tab_diff	src/buffer.c	/^wininfo_other_tab_diff(wip)$/;"	f	file:
winopt_T	src/structs.h	/^} winopt_T;$/;"	t	typeref:struct:__anon36
winselfcmd	src/if_tcl.c	/^winselfcmd(ref, interp, objc, objv)$/;"	f	file:
wipe_buffer	src/buffer.c	/^wipe_buffer(buf, aucmd)$/;"	f
wipe_dummy_buffer	src/quickfix.c	/^static void	wipe_dummy_buffer __ARGS((buf_T *buf));$/;"	p	file:	signature:(buf_T *buf)
wipe_dummy_buffer	src/quickfix.c	/^wipe_dummy_buffer(buf)$/;"	f	file:
with	src/gui_gtk.c	/^    GtkWidget *with;	\/* 'Replace with' entry text widget *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
with	src/gui_motif.c	/^    Widget with;	\/* 'Replace with' entry text widget *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
wl_folded	src/structs.h	/^    char	wl_folded;	\/* TRUE when this is a range of folded lines *\/$/;"	m	struct:w_line	access:public
wl_lastlnum	src/structs.h	/^    linenr_T	wl_lastlnum;	\/* last buffer line number for logical line *\/$/;"	m	struct:w_line	access:public
wl_lnum	src/structs.h	/^    linenr_T	wl_lnum;	\/* buffer line number for logical line *\/$/;"	m	struct:w_line	access:public
wl_size	src/structs.h	/^    short_u	wl_size;	\/* height in screen lines *\/$/;"	m	struct:w_line	access:public
wl_valid	src/structs.h	/^    char	wl_valid;	\/* TRUE values are valid for text in buffer *\/$/;"	m	struct:w_line	access:public
wline_T	src/structs.h	/^} wline_T;$/;"	t	typeref:struct:w_line
wmDeleteWindowTranslation	src/gui_at_fs.c	/^static char *wmDeleteWindowTranslation = "\\$/;"	v	file:
wmShellWidgetClass	src/gui_gtk_vms.h	676;"	d
wm_atoms	src/gui_x11.c	/^static Atom   wm_atoms[2];	\/* Window Manager Atoms *\/$/;"	v	file:
wm_protocols_atom	src/gui_gtk_x11.c	/^static GdkAtom wm_protocols_atom = GDK_NONE;$/;"	v	file:
wn_affixID	src/spell.c	/^    char_u	wn_affixID;	\/* supported\/required prefix ID or 0 *\/$/;"	m	struct:wordnode_S	file:	access:public
wn_byte	src/spell.c	/^    char_u	wn_byte;	\/* Byte for this node. NUL for word end *\/$/;"	m	struct:wordnode_S	file:	access:public
wn_child	src/spell.c	/^    wordnode_T	*wn_child;	\/* child (next byte in word) *\/$/;"	m	struct:wordnode_S	file:	access:public
wn_flags	src/spell.c	/^    short_u	wn_flags;	\/* WF_ flags *\/$/;"	m	struct:wordnode_S	file:	access:public
wn_nr	src/spell.c	/^    int		wn_nr;		\/* sequence nr for printing *\/$/;"	m	struct:wordnode_S	file:	access:public
wn_refs	src/spell.c	/^    int		wn_refs;	\/* Nr. of references to this node.  Only$/;"	m	struct:wordnode_S	file:	access:public
wn_region	src/spell.c	/^    short	wn_region;	\/* region mask *\/$/;"	m	struct:wordnode_S	file:	access:public
wn_sibling	src/spell.c	/^    wordnode_T  *wn_sibling;	\/* next sibling (alternate byte in word,$/;"	m	struct:wordnode_S	file:	access:public
wn_u1	src/spell.c	/^    } wn_u1;$/;"	m	struct:wordnode_S	typeref:union:wordnode_S::__anon15	file:	access:public
wn_u2	src/spell.c	/^    } wn_u2;$/;"	m	struct:wordnode_S	typeref:union:wordnode_S::__anon16	file:	access:public
wnode	src/spell.c	/^	wordnode_T *wnode;	\/* parent node that will write this node *\/$/;"	m	union:wordnode_S::__anon16	file:	access:public
wo_arab	src/structs.h	/^    int		wo_arab;$/;"	m	struct:__anon36	access:public
wo_cc	src/structs.h	/^    char_u	*wo_cc;$/;"	m	struct:__anon36	access:public
wo_cocu	src/structs.h	/^    char_u	*wo_cocu;		\/* 'concealcursor' *\/$/;"	m	struct:__anon36	access:public
wo_cole	src/structs.h	/^    long	wo_cole;		\/* 'conceallevel' *\/$/;"	m	struct:__anon36	access:public
wo_crb	src/structs.h	/^    int		wo_crb;$/;"	m	struct:__anon36	access:public
wo_cuc	src/structs.h	/^    int		wo_cuc;$/;"	m	struct:__anon36	access:public
wo_cul	src/structs.h	/^    int		wo_cul;$/;"	m	struct:__anon36	access:public
wo_diff	src/structs.h	/^    int		wo_diff;$/;"	m	struct:__anon36	access:public
wo_fdc	src/structs.h	/^    long	wo_fdc;$/;"	m	struct:__anon36	access:public
wo_fde	src/structs.h	/^    char_u	*wo_fde;$/;"	m	struct:__anon36	access:public
wo_fdi	src/structs.h	/^    char_u	*wo_fdi;$/;"	m	struct:__anon36	access:public
wo_fdl	src/structs.h	/^    long	wo_fdl;$/;"	m	struct:__anon36	access:public
wo_fdm	src/structs.h	/^    char_u	*wo_fdm;$/;"	m	struct:__anon36	access:public
wo_fdn	src/structs.h	/^    long	wo_fdn;$/;"	m	struct:__anon36	access:public
wo_fdt	src/structs.h	/^    char_u	*wo_fdt;$/;"	m	struct:__anon36	access:public
wo_fen	src/structs.h	/^    int		wo_fen;$/;"	m	struct:__anon36	access:public
wo_fml	src/structs.h	/^    long	wo_fml;$/;"	m	struct:__anon36	access:public
wo_fmr	src/structs.h	/^    char_u	*wo_fmr;$/;"	m	struct:__anon36	access:public
wo_lbr	src/structs.h	/^    int		wo_lbr;$/;"	m	struct:__anon36	access:public
wo_list	src/structs.h	/^    int		wo_list;$/;"	m	struct:__anon36	access:public
wo_nu	src/structs.h	/^    int		wo_nu;$/;"	m	struct:__anon36	access:public
wo_nuw	src/structs.h	/^    long	wo_nuw;$/;"	m	struct:__anon36	access:public
wo_pvw	src/structs.h	/^    int		wo_pvw;$/;"	m	struct:__anon36	access:public
wo_rl	src/structs.h	/^    int		wo_rl;$/;"	m	struct:__anon36	access:public
wo_rlc	src/structs.h	/^    char_u	*wo_rlc;$/;"	m	struct:__anon36	access:public
wo_rnu	src/structs.h	/^    int		wo_rnu;$/;"	m	struct:__anon36	access:public
wo_scb	src/structs.h	/^    int		wo_scb;$/;"	m	struct:__anon36	access:public
wo_scr	src/structs.h	/^    long	wo_scr;$/;"	m	struct:__anon36	access:public
wo_scriptID	src/structs.h	/^    int		wo_scriptID[WV_COUNT];	\/* SIDs for window-local options *\/$/;"	m	struct:__anon36	access:public
wo_spell	src/structs.h	/^    int		wo_spell;$/;"	m	struct:__anon36	access:public
wo_stl	src/structs.h	/^    char_u	*wo_stl;$/;"	m	struct:__anon36	access:public
wo_wfh	src/structs.h	/^    int		wo_wfh;$/;"	m	struct:__anon36	access:public
wo_wfw	src/structs.h	/^    int		wo_wfw;$/;"	m	struct:__anon36	access:public
wo_wrap	src/structs.h	/^    int		wo_wrap;$/;"	m	struct:__anon36	access:public
word	runtime/spell/fixdup.vim	/^  let word = getline(lnum)$/;"	v
word_end_col	src/vim.h	/^    short_u	word_end_col;$/;"	m	struct:VimClipboard	access:public
word_start_col	src/vim.h	/^    short_u	word_start_col;$/;"	m	struct:VimClipboard	access:public
wordcount_S	src/spell.c	/^typedef struct wordcount_S$/;"	s	file:
wordcount_S::wc_count	src/spell.c	/^    short_u	wc_count;	    \/* nr of times word was seen *\/$/;"	m	struct:wordcount_S	file:	access:public
wordcount_S::wc_word	src/spell.c	/^    char_u	wc_word[1];	    \/* word, actually longer *\/$/;"	m	struct:wordcount_S	file:	access:public
wordcount_T	src/spell.c	/^} wordcount_T;$/;"	t	typeref:struct:wordcount_S	file:
wordnode_S	src/spell.c	/^struct wordnode_S$/;"	s	file:
wordnode_S::__anon15::hashkey	src/spell.c	/^	char_u	hashkey[6];	\/* the hash key, only used while compressing *\/$/;"	m	union:wordnode_S::__anon15	file:	access:public
wordnode_S::__anon15::index	src/spell.c	/^	int	index;		\/* index in written nodes (valid after first$/;"	m	union:wordnode_S::__anon15	file:	access:public
wordnode_S::__anon16::next	src/spell.c	/^	wordnode_T *next;	\/* next node with same hash key *\/$/;"	m	union:wordnode_S::__anon16	file:	access:public
wordnode_S::__anon16::wnode	src/spell.c	/^	wordnode_T *wnode;	\/* parent node that will write this node *\/$/;"	m	union:wordnode_S::__anon16	file:	access:public
wordnode_S::wn_affixID	src/spell.c	/^    char_u	wn_affixID;	\/* supported\/required prefix ID or 0 *\/$/;"	m	struct:wordnode_S	file:	access:public
wordnode_S::wn_byte	src/spell.c	/^    char_u	wn_byte;	\/* Byte for this node. NUL for word end *\/$/;"	m	struct:wordnode_S	file:	access:public
wordnode_S::wn_child	src/spell.c	/^    wordnode_T	*wn_child;	\/* child (next byte in word) *\/$/;"	m	struct:wordnode_S	file:	access:public
wordnode_S::wn_flags	src/spell.c	/^    short_u	wn_flags;	\/* WF_ flags *\/$/;"	m	struct:wordnode_S	file:	access:public
wordnode_S::wn_nr	src/spell.c	/^    int		wn_nr;		\/* sequence nr for printing *\/$/;"	m	struct:wordnode_S	file:	access:public
wordnode_S::wn_refs	src/spell.c	/^    int		wn_refs;	\/* Nr. of references to this node.  Only$/;"	m	struct:wordnode_S	file:	access:public
wordnode_S::wn_region	src/spell.c	/^    short	wn_region;	\/* region mask *\/$/;"	m	struct:wordnode_S	file:	access:public
wordnode_S::wn_sibling	src/spell.c	/^    wordnode_T  *wn_sibling;	\/* next sibling (alternate byte in word,$/;"	m	struct:wordnode_S	file:	access:public
wordnode_S::wn_u1	src/spell.c	/^    } wn_u1;$/;"	m	struct:wordnode_S	typeref:union:wordnode_S::__anon15	file:	access:public
wordnode_S::wn_u2	src/spell.c	/^    } wn_u2;$/;"	m	struct:wordnode_S	typeref:union:wordnode_S::__anon16	file:	access:public
wordnode_T	src/spell.c	/^typedef struct wordnode_S wordnode_T;$/;"	t	typeref:struct:wordnode_S	file:
wordtree_alloc	src/spell.c	/^static wordnode_T *wordtree_alloc __ARGS((spellinfo_T *spin));$/;"	p	file:	signature:(spellinfo_T *spin)
wordtree_alloc	src/spell.c	/^wordtree_alloc(spin)$/;"	f	file:
wordtree_compress	src/spell.c	/^static void wordtree_compress __ARGS((spellinfo_T *spin, wordnode_T *root));$/;"	p	file:	signature:(spellinfo_T *spin, wordnode_T *root)
wordtree_compress	src/spell.c	/^wordtree_compress(spin, root)$/;"	f	file:
workshopHotKeysEnabled	src/workshop.c	/^static Boolean	 workshopHotKeysEnabled = False;$/;"	v	file:
workshopInitDone	src/workshop.c	/^static Boolean	 workshopInitDone = False;$/;"	v	file:
workshop_add_balloon_eval_area	src/integration.h	/^void workshop_add_balloon_eval_area(void *frame, void *window, Widget widget);$/;"	p	signature:(void *frame, void *window, Widget widget)
workshop_add_frame	src/integration.h	/^void *workshop_add_frame(void *frame, Widget form,$/;"	p	signature:(void *frame, Widget form, Widget top, Widget bottom, Widget footer, Widget menu)
workshop_add_mark_type	src/integration.h	/^void workshop_add_mark_type(int idx, char *colorspec, char *sign);$/;"	p	signature:(int idx, char *colorspec, char *sign)
workshop_add_mark_type	src/workshop.c	/^workshop_add_mark_type($/;"	f	signature:( int idx, char *colorspec, char *sign)
workshop_balloon_delay	src/workshop.c	/^workshop_balloon_delay($/;"	f	signature:( int delay)
workshop_balloon_mode	src/workshop.c	/^workshop_balloon_mode($/;"	f	signature:( Boolean on)
workshop_beval_cb	src/workshop.c	/^void		 workshop_beval_cb(BalloonEval *, int);$/;"	p	file:	signature:(BalloonEval *, int)
workshop_beval_cb	src/workshop.c	/^workshop_beval_cb($/;"	f	signature:( BalloonEval *beval, int state)
workshop_change_mark_type	src/integration.h	/^void workshop_change_mark_type(char *filename, int markId, int type);$/;"	p	signature:(char *filename, int markId, int type)
workshop_change_mark_type	src/workshop.c	/^workshop_change_mark_type($/;"	f	signature:( char *filename, int markId, int idx)
workshop_connect	src/integration.c	/^void	workshop_connect(XtAppContext context)$/;"	f	signature:(XtAppContext context)
workshop_connect	src/integration.h	/^void workshop_connect(XtAppContext context);$/;"	p	signature:(XtAppContext context)
workshop_connection_closed	src/integration.c	/^static void workshop_connection_closed(void);$/;"	p	file:	signature:(void)
workshop_connection_closed	src/integration.c	/^workshop_connection_closed(void)$/;"	f	signature:(void)
workshop_delete_frame	src/integration.h	/^void workshop_delete_frame(void *handle);$/;"	p	signature:(void *handle)
workshop_delete_mark	src/integration.h	/^void workshop_delete_mark(char *filename, int markId);$/;"	p	signature:(char *filename, int markId)
workshop_delete_mark	src/workshop.c	/^workshop_delete_mark($/;"	f	signature:( char *filename, int markId)
workshop_disconnect	src/integration.c	/^static void workshop_disconnect(void);$/;"	p	file:	signature:(void)
workshop_disconnect	src/integration.c	/^void	workshop_disconnect()$/;"	f
workshop_file_closed_lineno	src/integration.c	/^void workshop_file_closed_lineno(char *filename, int lineno)$/;"	f	signature:(char *filename, int lineno)
workshop_file_closed_lineno	src/integration.h	/^void workshop_file_closed_lineno(char *filename, int line);$/;"	p	signature:(char *filename, int line)
workshop_file_opened	src/integration.c	/^void workshop_file_opened(char *filename, int readOnly)$/;"	f	signature:(char *filename, int readOnly)
workshop_file_opened	src/integration.h	/^void workshop_file_opened(char *filename, int readOnly);$/;"	p	signature:(char *filename, int readOnly)
workshop_file_saved	src/integration.c	/^void workshop_file_saved(char *filename)$/;"	f	signature:(char *filename)
workshop_file_saved	src/integration.h	/^void workshop_file_saved(char *filename);$/;"	p	signature:(char *filename)
workshop_footer_message	src/integration.h	/^void workshop_footer_message(char *message, int severity);$/;"	p	signature:(char *message, int severity)
workshop_footer_message	src/workshop.c	/^workshop_footer_message($/;"	f	signature:( char *message, int severity UNUSED)
workshop_frame_moved	src/integration.c	/^void workshop_frame_moved(int new_x, int new_y, int new_w, int new_h)$/;"	f	signature:(int new_x, int new_y, int new_w, int new_h)
workshop_frame_moved	src/integration.h	/^void workshop_frame_moved(int new_x, int new_y, int new_w, int new_h);$/;"	p	signature:(int new_x, int new_y, int new_w, int new_h)
workshop_frame_sensitivities	src/workshop.c	/^workshop_frame_sensitivities($/;"	f	signature:( VerbSense *vs)
workshop_front_file	src/integration.h	/^void workshop_front_file(char *filename);$/;"	p	signature:(char *filename)
workshop_front_file	src/workshop.c	/^workshop_front_file($/;"	f	signature:( char *filename UNUSED)
workshop_get_balloon_text	src/integration.h	/^int workshop_get_balloon_text(Position x, Position y,$/;"	p	signature:(Position x, Position y, void *frame, void *window, char **filename, int *line, char **text, int *mouseIndex)
workshop_get_editor_name	src/integration.h	/^char *workshop_get_editor_name();$/;"	p	signature:()
workshop_get_editor_name	src/workshop.c	/^workshop_get_editor_name()$/;"	f
workshop_get_editor_version	src/integration.h	/^char *workshop_get_editor_version();$/;"	p	signature:()
workshop_get_editor_version	src/workshop.c	/^workshop_get_editor_version()$/;"	f
workshop_get_font_height	src/integration.h	/^int workshop_get_font_height(void);$/;"	p	signature:(void)
workshop_get_font_height	src/workshop.c	/^workshop_get_font_height()$/;"	f
workshop_get_mark_lineno	src/integration.h	/^int workshop_get_mark_lineno(char *filename, int markId);$/;"	p	signature:(char *filename, int markId)
workshop_get_mark_lineno	src/workshop.c	/^workshop_get_mark_lineno($/;"	f	signature:( char *filename, int markId)
workshop_get_positions	src/integration.h	/^int workshop_get_positions(void *frame,$/;"	p	signature:(void *frame, char **filename, int *curLine, int *curCol, int *selStartLine, int *selStartCol, int *selEndLine, int *selEndCol, int *selLength, char **selection)
workshop_get_positions	src/workshop.c	/^workshop_get_positions($/;"	f	signature:( void *clientData UNUSED, char **filename, int *curLine, int *curCol, int *selStartLine, int *selStartCol, int *selEndLine, int *selEndCol, int *selLength, char **selection)
workshop_get_width_height	src/integration.c	/^Boolean workshop_get_width_height(int *width, int *height)$/;"	f	signature:(int *width, int *height)
workshop_get_width_height	src/integration.h	/^Boolean workshop_get_width_height(int *, int *);$/;"	p	signature:(int *, int *)
workshop_goto_line	src/integration.h	/^void workshop_goto_line(char *filename, int lineno);$/;"	p	signature:(char *filename, int lineno)
workshop_goto_line	src/workshop.c	/^workshop_goto_line($/;"	f	signature:( char *filename, int lineno)
workshop_goto_mark	src/integration.h	/^void workshop_goto_mark(char *filename, int markId, char *message);$/;"	p	signature:(char *filename, int markId, char *message)
workshop_goto_mark	src/workshop.c	/^workshop_goto_mark($/;"	f	signature:( char *filename, int markId, char *message)
workshop_hotkey_pressed	src/integration.h	/^void workshop_hotkey_pressed(void *frame, void *clientData);$/;"	p	signature:(void *frame, void *clientData)
workshop_hotkeys	src/workshop.c	/^void		 workshop_hotkeys(Boolean);$/;"	p	file:
workshop_hotkeys	src/workshop.c	/^workshop_hotkeys($/;"	f	signature:( Boolean on)
workshop_init	src/workshop.c	/^workshop_init()$/;"	f
workshop_load_file	src/integration.h	/^void workshop_load_file(char *filename, int line, char *frameid);$/;"	p	signature:(char *filename, int line, char *frameid)
workshop_load_file	src/workshop.c	/^workshop_load_file($/;"	f	signature:( char *filename, int line, char *frameid UNUSED)
workshop_mark_batch_begin	src/integration.h	/^void workshop_mark_batch_begin();$/;"	p	signature:()
workshop_mark_batch_end	src/integration.h	/^void workshop_mark_batch_end();$/;"	p	signature:()
workshop_maximize	src/integration.h	/^void workshop_maximize();$/;"	p	signature:()
workshop_maximize	src/workshop.c	/^workshop_maximize()$/;"	f
workshop_maximize_shell	src/integration.c	/^void workshop_maximize_shell(Widget shell)$/;"	f	signature:(Widget shell)
workshop_maximize_shell	src/integration.h	/^void workshop_maximize_shell(Widget shell);$/;"	p	signature:(Widget shell)
workshop_menu_begin	src/workshop.c	/^workshop_menu_begin($/;"	f	signature:( char *label)
workshop_menu_end	src/workshop.c	/^workshop_menu_end()$/;"	f
workshop_menu_item	src/workshop.c	/^workshop_menu_item($/;"	f	signature:( char *label, char *verb, char *accelerator UNUSED, char *acceleratorText, char *name UNUSED, char *filepos UNUSED, char *sensitive)
workshop_minimize	src/integration.h	/^void workshop_minimize();$/;"	p	signature:()
workshop_minimize	src/workshop.c	/^workshop_minimize()$/;"	f
workshop_minimize_shell	src/integration.c	/^workshop_minimize_shell(Widget shell)$/;"	f	signature:(Widget shell)
workshop_minimize_shell	src/integration.h	/^void workshop_minimize_shell(Widget shell);$/;"	p	signature:(Widget shell)
workshop_moved_marks	src/integration.h	/^void workshop_moved_marks(char *filename);$/;"	p	signature:(char *filename)
workshop_moved_marks	src/workshop.c	/^workshop_moved_marks(char *filename UNUSED)$/;"	f	signature:(char *filename UNUSED)
workshop_perform_verb	src/integration.c	/^void workshop_perform_verb(char *verb, void *clientData)$/;"	f	signature:(char *verb, void *clientData)
workshop_perform_verb	src/integration.h	/^void workshop_perform_verb(char *verb, void *clientData);$/;"	p	signature:(char *verb, void *clientData)
workshop_postinit	src/workshop.c	/^workshop_postinit()$/;"	f
workshop_quit	src/integration.h	/^void workshop_quit();$/;"	p	signature:()
workshop_quit	src/workshop.c	/^workshop_quit()$/;"	f
workshop_reconfigure_frame	src/integration.h	/^void workshop_reconfigure_frame(void *frame);$/;"	p	signature:(void *frame)
workshop_register_hotkey	src/integration.h	/^void workshop_register_hotkey(Modifiers modifiers, KeySym keysym,$/;"	p	signature:(Modifiers modifiers, KeySym keysym, void *clientData)
workshop_reload_file	src/integration.h	/^void workshop_reload_file(char *filename, int line);$/;"	p	signature:(char *filename, int line)
workshop_reload_file	src/workshop.c	/^workshop_reload_file($/;"	f	signature:( char *filename, int line)
workshop_remove_balloon_eval_area	src/integration.h	/^void workshop_remove_balloon_eval_area(void *frame, void *window, Widget widget);$/;"	p	signature:(void *frame, void *window, Widget widget)
workshop_save_file	src/integration.h	/^void workshop_save_file(char *filename);$/;"	p	signature:(char *filename)
workshop_save_file	src/workshop.c	/^workshop_save_file($/;"	f	signature:( char *filename)
workshop_save_files	src/integration.h	/^void workshop_save_files();$/;"	p	signature:()
workshop_save_files	src/workshop.c	/^workshop_save_files()$/;"	f
workshop_save_sensitivity	src/workshop.c	/^workshop_save_sensitivity(char *filename UNUSED)$/;"	f	signature:(char *filename UNUSED)
workshop_send_message	src/integration.c	/^void workshop_send_message(char *buf)$/;"	f	signature:(char *buf)
workshop_send_message	src/integration.h	/^void workshop_send_message(char *buf);$/;"	p	signature:(char *buf)
workshop_sensitivity	src/integration.c	/^static void workshop_sensitivity(int num, char *table);$/;"	p	file:	signature:(int num, char *table)
workshop_sensitivity	src/integration.c	/^void workshop_sensitivity(int num, char *table)$/;"	f	signature:(int num, char *table)
workshop_set_mark	src/integration.h	/^void workshop_set_mark(char *filename, int lineno, int markId, int type);$/;"	p	signature:(char *filename, int lineno, int markId, int type)
workshop_set_mark	src/workshop.c	/^workshop_set_mark($/;"	f	signature:( char *filename, int lineno, int markId, int idx)
workshop_set_option	src/integration.h	/^void workshop_set_option(char *name, char *value);$/;"	p	signature:(char *name, char *value)
workshop_set_option	src/workshop.c	/^workshop_set_option($/;"	f	signature:( char *option, char *value)
workshop_set_option_first	src/integration.c	/^static void workshop_set_option_first(char *name, char *value);$/;"	p	file:	signature:(char *name, char *value)
workshop_set_option_first	src/integration.c	/^void workshop_set_option_first(char *name, char *value)$/;"	f	signature:(char *name, char *value)
workshop_show_balloon_tip	src/workshop.c	/^workshop_show_balloon_tip($/;"	f	signature:( char *tip)
workshop_show_file	src/integration.h	/^void workshop_show_file(char *filename);$/;"	p	signature:(char *filename)
workshop_show_file	src/workshop.c	/^workshop_show_file($/;"	f	signature:( char *filename)
workshop_submenu_begin	src/workshop.c	/^workshop_submenu_begin($/;"	f	signature:( char *label)
workshop_submenu_end	src/workshop.c	/^workshop_submenu_end()$/;"	f
workshop_test_getcurrentfile	src/integration.h	/^char *workshop_test_getcurrentfile();$/;"	p	signature:()
workshop_test_getcurrentfile	src/workshop.c	/^workshop_test_getcurrentfile()$/;"	f
workshop_test_getcursorcol	src/integration.h	/^int workshop_test_getcursorcol();$/;"	p	signature:()
workshop_test_getcursorcol	src/workshop.c	/^workshop_test_getcursorcol()$/;"	f
workshop_test_getcursorrow	src/integration.h	/^int workshop_test_getcursorrow();$/;"	p	signature:()
workshop_test_getcursorrow	src/workshop.c	/^workshop_test_getcursorrow()$/;"	f
workshop_test_getcursorrowtext	src/integration.h	/^char *workshop_test_getcursorrowtext();$/;"	p	signature:()
workshop_test_getcursorrowtext	src/workshop.c	/^workshop_test_getcursorrowtext()$/;"	f
workshop_test_getselectedtext	src/integration.h	/^char *workshop_test_getselectedtext();$/;"	p	signature:()
workshop_test_getselectedtext	src/workshop.c	/^workshop_test_getselectedtext()$/;"	f
workshop_toolbar_begin	src/workshop.c	/^workshop_toolbar_begin()$/;"	f
workshop_toolbar_button	src/workshop.c	/^workshop_toolbar_button($/;"	f	signature:( char *label, char *verb, char *senseVerb UNUSED, char *filepos UNUSED, char *help, char *sense, char *file, char *left)
workshop_toolbar_end	src/workshop.c	/^workshop_toolbar_end()$/;"	f
workshop_unregister_hotkey	src/integration.h	/^void workshop_unregister_hotkey(Modifiers modifiers, KeySym keysym,$/;"	p	signature:(Modifiers modifiers, KeySym keysym, void *clientData)
wp	src/fold.c	/^    win_T	*wp;		\/* window *\/$/;"	m	struct:__anon98	file:	access:public
wp	src/gui.h	/^    win_T	*wp;		\/* Scrollbar's window, NULL for bottom *\/$/;"	m	struct:GuiScrollbar	access:public
wpisanie	runtime/tutor/tutor.pl	/^     wpisanie:		:set ic$/;"	l
wpisz	runtime/tutor/tutor.pl	/^     wpisz  :%s\/stare\/nowe\/g   by zmieniæ wszystkie wyst±pienia w ca³ym pliku.$/;"	l
wpisz	runtime/tutor/tutor.pl	/^     wpisz  :%s\/stare\/nowe\/gc  by zmieniæ wszystkie wyst±pienia w ca³ym$/;"	l
wpisz	runtime/tutor/tutor.pl	/^     wpisz:			:wq<ENTER>$/;"	l
wpisz	runtime/tutor/tutor.pl	/^     wpisz: :#,#s\/stare\/nowe\/g gdzie #,# s± numerami linii ograniczaj±cych$/;"	l
wpisz	runtime/tutor/tutor.pl	/^  wpisz :q<ENTER>        aby zamkn±æ okno pomocy.$/;"	l
writeCSS	runtime/doc/vim2html.pl	/^sub writeCSS$/;"	s
writeToBuffer	src/if_sniff.c	/^writeToBuffer(char *msg, int len)$/;"	f	file:	signature:(char *msg, int len)
write_chars	src/os_win32.c	/^static BOOL write_chars(LPCSTR pchBuf, DWORD cchToWrite);$/;"	p	file:	signature:(LPCSTR pchBuf, DWORD cchToWrite)
write_chars	src/os_win32.c	/^write_chars($/;"	f	file:	signature:( LPCSTR pchBuf, DWORD cchToWrite)
write_lnum_adjust	src/fileio.c	/^write_lnum_adjust(offset)$/;"	f
write_no_eol_lnum	src/globals.h	/^EXTERN linenr_T	write_no_eol_lnum INIT(= 0); \/* non-zero lnum when last line$/;"	v
write_one_filemark	src/mark.c	/^static void write_one_filemark __ARGS((FILE *fp, xfmark_T *fm, int c1, int c2));$/;"	p	file:	signature:(FILE *fp, xfmark_T *fm, int c1, int c2)
write_one_filemark	src/mark.c	/^write_one_filemark(fp, fm, c1, c2)$/;"	f	file:
write_one_mark	src/mark.c	/^static void write_one_mark __ARGS((FILE *fp_out, int c, pos_T *pos));$/;"	p	file:	signature:(FILE *fp_out, int c, pos_T *pos)
write_one_mark	src/mark.c	/^write_one_mark(fp_out, c, pos)$/;"	f	file:
write_reg_contents	src/ops.c	/^write_reg_contents(name, str, maxlen, must_append)$/;"	f
write_reg_contents_ex	src/ops.c	/^write_reg_contents_ex(name, str, maxlen, must_append, yank_type, block_len)$/;"	f
write_session_file	src/gui_gtk_x11.c	/^write_session_file(char_u *filename)$/;"	f	file:	signature:(char_u *filename)
write_spell_prefcond	src/spell.c	/^static int write_spell_prefcond __ARGS((FILE *fd, garray_T *gap));$/;"	p	file:	signature:(FILE *fd, garray_T *gap)
write_spell_prefcond	src/spell.c	/^write_spell_prefcond(fd, gap)$/;"	f	file:
write_vim_spell	src/spell.c	/^static int write_vim_spell __ARGS((spellinfo_T *spin, char_u *fname));$/;"	p	file:	signature:(spellinfo_T *spin, char_u *fname)
write_vim_spell	src/spell.c	/^write_vim_spell(spin, fname)$/;"	f	file:
write_viminfo	src/ex_cmds.c	/^write_viminfo(file, forceit)$/;"	f
write_viminfo_bufferlist	src/buffer.c	/^write_viminfo_bufferlist(fp)$/;"	f
write_viminfo_filemarks	src/mark.c	/^write_viminfo_filemarks(fp)$/;"	f
write_viminfo_history	src/ex_getln.c	/^write_viminfo_history(fp)$/;"	f
write_viminfo_marks	src/mark.c	/^write_viminfo_marks(fp_out)$/;"	f
write_viminfo_registers	src/ops.c	/^write_viminfo_registers(fp)$/;"	f
write_viminfo_search_pattern	src/search.c	/^write_viminfo_search_pattern(fp)$/;"	f
write_viminfo_sub_string	src/ex_cmds.c	/^write_viminfo_sub_string(fp)$/;"	f
write_viminfo_varlist	src/eval.c	/^write_viminfo_varlist(fp)$/;"	f
writefn	src/if_py_both.h	/^typedef void (*writefn)(char_u *);$/;"	t
writer	src/if_py_both.h	/^static void writer(writefn fn, char_u *str, PyInt n);$/;"	p	signature:(writefn fn, char_u *str, PyInt n)
writer	src/if_py_both.h	/^writer(writefn fn, char_u *str, PyInt n)$/;"	f	signature:(writefn fn, char_u *str, PyInt n)
ws_debug	src/wsdebug.c	/^FILE		*ws_debug = NULL;$/;"	v
ws_dlevel	src/wsdebug.c	/^u_int		 ws_dlevel = 0;		\/* ws_debug verbosity level *\/$/;"	v
wsdebug	src/wsdebug.c	/^void		 wsdebug(char *, ...);$/;"	p	file:	signature:(char *, ...)
wsdebug	src/wsdebug.c	/^wsdebug($/;"	f	signature:( char *fmt, ...)
wsdebug	src/wsdebug.h	/^void		 wsdebug(char *, ...);$/;"	p	signature:(char *, ...)
wsdebug	src/wsdebug.h	/^wsdebug($/;"	f	signature:( char *fmt, ...)
wsdebug_log_init	src/wsdebug.c	/^wsdebug_log_init($/;"	f	signature:( char *log_var, char *level_var)
wsdebug_wait	src/wsdebug.c	/^void wsdebug_wait($/;"	f	signature:( u_int wait_flags, char *wait_var, u_int wait_secs)
wstrace	src/wsdebug.c	/^void		 wstrace(char *, ...);$/;"	p	file:	signature:(char *, ...)
wstrace	src/wsdebug.c	/^wstrace($/;"	f	signature:( char *fmt, ...)
wstrace	src/wsdebug.h	/^void		 wstrace(char *, ...);$/;"	p	signature:(char *, ...)
wstrace	src/wsdebug.h	/^wstrace($/;"	f	signature:( char *fmt, ...)
wvsp_one	src/search.c	/^static void wvsp_one __ARGS((FILE *fp, int idx, char *s, int sc));$/;"	p	file:	signature:(FILE *fp, int idx, char *s, int sc)
wvsp_one	src/search.c	/^wvsp_one(fp, idx, s, sc)$/;"	f	file:
wword	src/gui_gtk.c	/^    GtkWidget *wword;	\/* 'Whole word only' check button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
wword	src/gui_motif.c	/^    Widget wword;	\/* 'Exact match' check button *\/$/;"	m	struct:_SharedFindReplace	file:	access:public
wx	src/hardcopy.c	/^    int		wx;$/;"	m	struct:prt_ps_font_S	file:	access:public
x	src/gui_beval.h	/^    int			x;$/;"	m	struct:BalloonEvalStruct	access:public
x	src/gui_gtk_f.c	/^    gint x;		\/* relative subwidget x position *\/$/;"	m	struct:_GtkFormChild	file:	access:public
x	src/iid_ole.c	/^    unsigned long x;$/;"	m	struct:_IID	file:	access:public
x	src/os_vms.c	/^    }	x;$/;"	m	struct:__anon75	typeref:union:__anon75::__anon76	file:	access:public
x	src/testdir/test49.vim	/^	    let x = "a"$/;"	v
x	src/testdir/test49.vim	/^	    let x = x . "b" . append(1, "s") . H()$/;"	v
x	src/testdir/test49.vim	/^	let x = novar	" error E121\/E15; exception: E121$/;"	v
x11_display	src/os_unix.c	/^Display	    *x11_display = NULL;$/;"	v
x11_export_final_selection	src/ops.c	/^x11_export_final_selection()$/;"	f
x11_setup_atoms	src/ui.c	/^x11_setup_atoms(dpy)$/;"	f
x11_setup_selection	src/ui.c	/^x11_setup_selection(w)$/;"	f
x11_window	src/os_unix.c	/^Window	    x11_window = 0;$/;"	v
x_IOerror_check	src/os_unix.c	/^static int x_IOerror_check __ARGS((Display *dpy));$/;"	p	file:	signature:(Display *dpy)
x_IOerror_check	src/os_unix.c	/^x_IOerror_check(dpy)$/;"	f	file:
x_IOerror_handler	src/os_unix.c	/^static int x_IOerror_handler __ARGS((Display *dpy));$/;"	p	file:	signature:(Display *dpy)
x_IOerror_handler	src/os_unix.c	/^x_IOerror_handler(dpy)$/;"	f	file:
x_connect_to_server	src/os_unix.c	/^static int x_connect_to_server __ARGS((void));$/;"	p	file:	signature:(void)
x_connect_to_server	src/os_unix.c	/^x_connect_to_server()$/;"	f	file:
x_eigen_factor	src/gui_riscos.c	/^int x_eigen_factor;$/;"	v
x_error_check	runtime/tools/xcmdsrv_client.c	/^static int	x_error_check __ARGS((Display *dpy, XErrorEvent *error_event));$/;"	p	file:	signature:(Display *dpy, XErrorEvent *error_event)
x_error_check	runtime/tools/xcmdsrv_client.c	/^x_error_check(dpy, error_event)$/;"	f	file:
x_error_check	src/if_xcmdsrv.c	/^static int	x_error_check __ARGS((Display *dpy, XErrorEvent *error_event));$/;"	p	file:	signature:(Display *dpy, XErrorEvent *error_event)
x_error_check	src/if_xcmdsrv.c	/^x_error_check(dpy, error_event)$/;"	f	file:
x_error_check	src/os_unix.c	/^static int x_error_check __ARGS((Display *dpy, XErrorEvent *error_event));$/;"	p	file:	signature:(Display *dpy, XErrorEvent *error_event)
x_error_check	src/os_unix.c	/^x_error_check(dpy, error_event)$/;"	f	file:
x_error_handler	src/os_unix.c	/^static int x_error_handler __ARGS((Display *dpy, XErrorEvent *error_event));$/;"	p	file:	signature:(Display *dpy, XErrorEvent *error_event)
x_error_handler	src/os_unix.c	/^x_error_handler(dpy, error_event)$/;"	f	file:
x_force_connect	src/globals.h	/^EXTERN int	x_force_connect INIT(= FALSE); \/* Do connect to X server.$/;"	v
x_jump_env	src/globals.h	/^EXTERN JMP_BUF x_jump_env;$/;"	v
x_no_connect	src/globals.h	/^EXTERN int	x_no_connect INIT(= FALSE); \/* don't connect to X server *\/$/;"	v
xfilemark	src/structs.h	/^typedef struct xfilemark$/;"	s
xfilemark::fmark	src/structs.h	/^    fmark_T	fmark;$/;"	m	struct:xfilemark	access:public
xfilemark::fname	src/structs.h	/^    char_u	*fname;		\/* file name, used when fnum == 0 *\/$/;"	m	struct:xfilemark	access:public
xfmark_T	src/structs.h	/^} xfmark_T;$/;"	t	typeref:struct:xfilemark
xic	src/globals.h	/^EXTERN GtkIMContext	*xic INIT(= NULL);$/;"	v
xic	src/globals.h	/^EXTERN XIC		xic INIT(= NULL);$/;"	v
xim_bg_color	src/globals.h	/^EXTERN guicolor_T	xim_bg_color INIT(= INVALCOLOR);$/;"	v
xim_changed_while_preediting	src/globals.h	/^EXTERN int		xim_changed_while_preediting INIT(= FALSE);$/;"	v
xim_destroy_cb	src/mbyte.c	/^static void xim_destroy_cb __ARGS((XIM im, XPointer client_data, XPointer call_data));$/;"	p	file:	signature:(XIM im, XPointer client_data, XPointer call_data)
xim_destroy_cb	src/mbyte.c	/^xim_destroy_cb(im, client_data, call_data)$/;"	f	file:
xim_expected_char	src/mbyte.c	/^static int xim_expected_char = NUL;$/;"	v	file:
xim_fg_color	src/globals.h	/^EXTERN guicolor_T	xim_fg_color INIT(= INVALCOLOR);$/;"	v
xim_get_status_area_height	src/mbyte.c	/^xim_get_status_area_height()$/;"	f
xim_has_focus	src/mbyte.c	/^static int	xim_has_focus = FALSE;	\/* XIM is really being used for Vim *\/$/;"	v	file:
xim_has_preediting	src/mbyte.c	/^static int xim_has_preediting INIT(= FALSE);  \/* IM current status *\/$/;"	v	file:
xim_ignored_char	src/mbyte.c	/^static int xim_ignored_char = FALSE;$/;"	v	file:
xim_init	src/mbyte.c	/^xim_init()$/;"	f
xim_init	src/mbyte.c	/^xim_init(void)$/;"	f	signature:(void)
xim_instantiate_cb	src/mbyte.c	/^static void xim_instantiate_cb __ARGS((Display *display, XPointer client_data, XPointer	call_data));$/;"	p	file:	signature:(Display *display, XPointer client_data, XPointer call_data)
xim_instantiate_cb	src/mbyte.c	/^xim_instantiate_cb(display, client_data, call_data)$/;"	f	file:
xim_is_active	src/mbyte.c	/^static int	xim_is_active = FALSE;  \/* XIM should be active in the current$/;"	v	file:
xim_log	src/mbyte.c	/^xim_log(char *s, ...)$/;"	f	file:	signature:(char *s, ...)
xim_queue_key_press_event	src/mbyte.c	/^xim_queue_key_press_event(GdkEventKey *event, int down)$/;"	f	signature:(GdkEventKey *event, int down)
xim_real_init	src/mbyte.c	/^static int xim_real_init __ARGS((Window x11_window, Display *x11_display));$/;"	p	file:	signature:(Window x11_window, Display *x11_display)
xim_real_init	src/mbyte.c	/^xim_real_init(x11_window, x11_display)$/;"	f	file:
xim_reset	src/mbyte.c	/^xim_reset(void)$/;"	f	signature:(void)
xim_set_focus	src/mbyte.c	/^xim_set_focus(focus)$/;"	f
xim_set_focus	src/mbyte.c	/^xim_set_focus(int focus)$/;"	f	signature:(int focus)
xim_set_preedit	src/mbyte.c	/^xim_set_preedit()$/;"	f
xim_set_status_area	src/mbyte.c	/^xim_set_status_area()$/;"	f
xmArrowButtonWidgetClass	src/gui_gtk_vms.h	677;"	d
xmCascadeButtonClassRec	src/gui_gtk_vms.h	678;"	d
xmCascadeButtonGadgetClass	src/gui_gtk_vms.h	679;"	d
xmCascadeButtonWidgetClass	src/gui_gtk_vms.h	680;"	d
xmDialogShellWidgetClass	src/gui_gtk_vms.h	681;"	d
xmDrawingAreaWidgetClass	src/gui_gtk_vms.h	682;"	d
xmDrawnButtonWidgetClass	src/gui_gtk_vms.h	683;"	d
xmEnhancedButtonClassRec	src/gui_xmebw.c	/^XmEnhancedButtonClassRec xmEnhancedButtonClassRec =$/;"	v
xmEnhancedButtonPrimClassExtRec	src/gui_xmebw.c	/^XmPrimitiveClassExtRec xmEnhancedButtonPrimClassExtRec =$/;"	v
xmEnhancedButtonWidgetClass	src/gui_xmebw.c	/^WidgetClass xmEnhancedButtonWidgetClass =$/;"	v
xmFileSelectionBoxWidgetClass	src/gui_gtk_vms.h	684;"	d
xmFormWidgetClass	src/gui_gtk_vms.h	685;"	d
xmFrameWidgetClass	src/gui_gtk_vms.h	686;"	d
xmGadgetClass	src/gui_gtk_vms.h	687;"	d
xmLabelGadgetClass	src/gui_gtk_vms.h	688;"	d
xmLabelWidgetClass	src/gui_gtk_vms.h	689;"	d
xmListWidgetClass	src/gui_gtk_vms.h	690;"	d
xmMainWindowWidgetClass	src/gui_gtk_vms.h	691;"	d
xmManagerClassRec	src/gui_gtk_vms.h	692;"	d
xmManagerWidgetClass	src/gui_gtk_vms.h	693;"	d
xmMenuShellWidgetClass	src/gui_gtk_vms.h	694;"	d
xmMessageBoxWidgetClass	src/gui_gtk_vms.h	695;"	d
xmPrimitiveClassRec	src/gui_gtk_vms.h	696;"	d
xmPrimitiveWidgetClass	src/gui_gtk_vms.h	697;"	d
xmPushButtonClassRec	src/gui_gtk_vms.h	698;"	d
xmPushButtonGadgetClass	src/gui_gtk_vms.h	699;"	d
xmPushButtonWidgetClass	src/gui_gtk_vms.h	700;"	d
xmRowColumnWidgetClass	src/gui_gtk_vms.h	701;"	d
xmSashWidgetClass	src/gui_gtk_vms.h	702;"	d
xmScrollBarWidgetClass	src/gui_gtk_vms.h	703;"	d
xmScrolledWindowClassRec	src/gui_gtk_vms.h	704;"	d
xmScrolledWindowWidgetClass	src/gui_gtk_vms.h	705;"	d
xmSeparatorGadgetClass	src/gui_gtk_vms.h	706;"	d
xmSeparatorWidgetClass	src/gui_gtk_vms.h	707;"	d
xmTextFieldWidgetClass	src/gui_gtk_vms.h	708;"	d
xmTextWidgetClass	src/gui_gtk_vms.h	709;"	d
xmToggleButtonGadgetClass	src/gui_gtk_vms.h	710;"	d
xmToggleButtonWidgetClass	src/gui_gtk_vms.h	711;"	d
xmlcomplete#CompleteTags	runtime/autoload/xmlcomplete.vim	/^function! xmlcomplete#CompleteTags(findstart, base)$/;"	f
xmlcomplete#CreateConnection	runtime/autoload/xmlcomplete.vim	/^function! xmlcomplete#CreateConnection(canonical, ...) " {{{$/;"	f
xmlcomplete#CreateEntConnection	runtime/autoload/xmlcomplete.vim	/^function! xmlcomplete#CreateEntConnection(...) " {{{$/;"	f
xmlcomplete#GetLastOpenTag	runtime/autoload/xmlcomplete.vim	/^function! xmlcomplete#GetLastOpenTag(unaryTagsStack)$/;"	f
xopen_message	src/os_unix.c	/^static void xopen_message __ARGS((struct timeval *tvp));$/;"	p	file:	signature:(struct timeval *tvp)
xopen_message	src/os_unix.c	/^xopen_message(tvp)$/;"	f	file:
xp_arg	src/ex_getln.c	/^    char_u	*xp_arg;	\/* user-defined expansion arg *\/$/;"	m	struct:cmdline_info	file:	access:public
xp_arg	src/structs.h	/^    char_u	*xp_arg;		\/* completion function *\/$/;"	m	struct:expand	access:public
xp_backslash	src/structs.h	/^    int		xp_backslash;		\/* one of the XP_BS_ values *\/$/;"	m	struct:expand	access:public
xp_context	src/ex_getln.c	/^    int		xp_context;	\/* type of expansion *\/$/;"	m	struct:cmdline_info	file:	access:public
xp_context	src/structs.h	/^    int		xp_context;		\/* type of expansion *\/$/;"	m	struct:expand	access:public
xp_files	src/structs.h	/^    char_u	**xp_files;		\/* list of files *\/$/;"	m	struct:expand	access:public
xp_numfiles	src/structs.h	/^    int		xp_numfiles;		\/* number of files found by$/;"	m	struct:expand	access:public
xp_pattern	src/structs.h	/^    char_u	*xp_pattern;		\/* start of item to expand *\/$/;"	m	struct:expand	access:public
xp_pattern_len	src/structs.h	/^    int		xp_pattern_len;		\/* bytes in xp_pattern before cursor *\/$/;"	m	struct:expand	access:public
xp_scriptID	src/structs.h	/^    int		xp_scriptID;		\/* SID for completion function *\/$/;"	m	struct:expand	access:public
xp_shell	src/structs.h	/^    int		xp_shell;		\/* TRUE for a shell command, more$/;"	m	struct:expand	access:public
xpc	src/ex_getln.c	/^    expand_T	*xpc;		\/* struct being used for expansion, xp_pattern$/;"	m	struct:cmdline_info	file:	access:public
xpm	src/structs.h	/^    char	**xpm;		    \/* pixmap data *\/$/;"	m	struct:VimMenu	access:public
xpm_fname	src/structs.h	/^    char	*xpm_fname;	    \/* file with pixmap data *\/$/;"	m	struct:VimMenu	access:public
xsmp	src/os_unix.c	/^static xsmp_config_T xsmp;$/;"	v	file:
xsmp_close	src/os_unix.c	/^xsmp_close()$/;"	f
xsmp_config_T	src/os_unix.c	/^} xsmp_config_T;$/;"	t	typeref:struct:__anon65	file:
xsmp_die	src/os_unix.c	/^static void xsmp_die __ARGS((SmcConn smc_conn, SmPointer client_data));$/;"	p	file:	signature:(SmcConn smc_conn, SmPointer client_data)
xsmp_die	src/os_unix.c	/^xsmp_die(smc_conn, client_data)$/;"	f	file:
xsmp_handle_interaction	src/os_unix.c	/^static void xsmp_handle_interaction __ARGS((SmcConn smc_conn, SmPointer client_data));$/;"	p	file:	signature:(SmcConn smc_conn, SmPointer client_data)
xsmp_handle_interaction	src/os_unix.c	/^xsmp_handle_interaction(smc_conn, client_data)$/;"	f	file:
xsmp_handle_requests	src/os_unix.c	/^xsmp_handle_requests()$/;"	f
xsmp_handle_save_yourself	src/os_unix.c	/^static void xsmp_handle_save_yourself __ARGS((SmcConn smc_conn, SmPointer client_data, int save_type, Bool shutdown, int interact_style, Bool fast));$/;"	p	file:	signature:(SmcConn smc_conn, SmPointer client_data, int save_type, Bool shutdown, int interact_style, Bool fast)
xsmp_handle_save_yourself	src/os_unix.c	/^xsmp_handle_save_yourself(smc_conn, client_data, save_type,$/;"	f	file:
xsmp_ice_connection	src/os_unix.c	/^static void xsmp_ice_connection __ARGS((IceConn iceConn, IcePointer clientData, Bool opening, IcePointer *watchData));$/;"	p	file:	signature:(IceConn iceConn, IcePointer clientData, Bool opening, IcePointer *watchData)
xsmp_ice_connection	src/os_unix.c	/^xsmp_ice_connection(iceConn, clientData, opening, watchData)$/;"	f	file:
xsmp_icefd	src/globals.h	/^EXTERN int xsmp_icefd INIT(= -1);   \/* The actual connection *\/$/;"	v
xsmp_init	src/os_unix.c	/^xsmp_init(void)$/;"	f	signature:(void)
xsmp_save_complete	src/os_unix.c	/^static void xsmp_save_complete __ARGS((SmcConn smc_conn, SmPointer client_data));$/;"	p	file:	signature:(SmcConn smc_conn, SmPointer client_data)
xsmp_save_complete	src/os_unix.c	/^xsmp_save_complete(smc_conn, client_data)$/;"	f	file:
xsmp_shutdown_cancelled	src/os_unix.c	/^static void xsmp_shutdown_cancelled __ARGS((SmcConn smc_conn, SmPointer	client_data));$/;"	p	file:	signature:(SmcConn smc_conn, SmPointer client_data)
xsmp_shutdown_cancelled	src/os_unix.c	/^xsmp_shutdown_cancelled(smc_conn, client_data)$/;"	f	file:
xswi	src/os_riscos.h	/^int xswi(int swinum, ...);      \/* Returns errors using v flag *\/$/;"	p	signature:(int swinum, ...)
xswi	src/swis.s	/^xswi:$/;"	l
xt_index_in	src/term.c	/^static int xt_index_in = 0;$/;"	v	file:
xt_index_out	src/term.c	/^static int xt_index_out = 0;$/;"	v	file:
xterm_Shell	src/os_unix.c	/^static Widget	xterm_Shell = (Widget)0;$/;"	v	file:
xterm_button	src/os_unix.c	/^static int	xterm_button;$/;"	v	file:
xterm_display	src/globals.h	/^EXTERN char	*xterm_display INIT(= NULL);	\/* xterm display name; points$/;"	v
xterm_dpy	src/globals.h	/^EXTERN Display	*xterm_dpy INIT(= NULL);	\/* xterm display pointer *\/$/;"	v
xterm_trace	src/os_unix.c	/^static int	xterm_trace = -1;	\/* default: disabled *\/$/;"	v	file:
xterm_update	src/os_unix.c	/^static void xterm_update __ARGS((void));$/;"	p	file:	signature:(void)
xterm_update	src/os_unix.c	/^xterm_update()$/;"	f	file:
xxdline	src/xxd/xxd.c	/^static void xxdline __P((FILE *, char *, int));$/;"	p	file:	signature:(FILE *, char *, int)
xxdline	src/xxd/xxd.c	/^xxdline(fp, l, nz)$/;"	f	file:
xy2win	src/gui.c	/^static win_T *xy2win __ARGS((int x, int y));$/;"	p	file:	signature:(int x, int y)
xy2win	src/gui.c	/^xy2win(x, y)$/;"	f	file:
y	runtime/macros/less.vim	/^map y k$/;"	m
y	src/gui_beval.h	/^    int			y;$/;"	m	struct:BalloonEvalStruct	access:public
y	src/gui_gtk_f.c	/^    gint y;		\/* relative subwidget y position *\/$/;"	m	struct:_GtkFormChild	file:	access:public
y	src/os_vms.c	/^	}	y;$/;"	m	union:__anon75::__anon76	typeref:struct:__anon75::__anon76::__anon77	file:	access:public
y_append	src/ops.c	/^static int		y_append;	    \/* TRUE when appending *\/$/;"	v	file:
y_array	src/ops.c	/^    char_u	**y_array;	\/* pointer to array of line pointers *\/$/;"	m	struct:yankreg	file:	access:public
y_current	src/ops.c	/^static struct yankreg	*y_current;	    \/* ptr to current yankreg *\/$/;"	v	typeref:struct:yankreg	file:
y_eigen_factor	src/gui_riscos.c	/^int y_eigen_factor;$/;"	v
y_previous	src/ops.c	/^static struct yankreg	*y_previous = NULL; \/* ptr to last written yankreg *\/$/;"	v	typeref:struct:yankreg	file:
y_regs	src/ops.c	/^} y_regs[NUM_REGISTERS];$/;"	v	typeref:struct:yankreg	file:
y_size	src/ops.c	/^    linenr_T	y_size;		\/* number of lines in y_array *\/$/;"	m	struct:yankreg	file:	access:public
y_type	src/ops.c	/^    char_u	y_type;		\/* MLINE, MCHAR or MBLOCK *\/$/;"	m	struct:yankreg	file:	access:public
y_width	src/ops.c	/^    colnr_T	y_width;	\/* only set if y_type == MBLOCK *\/$/;"	m	struct:yankreg	file:	access:public
yank_copy_line	src/ops.c	/^static int	yank_copy_line __ARGS((struct block_def *bd, long y_idx));$/;"	p	file:	signature:(struct block_def *bd, long y_idx)
yank_copy_line	src/ops.c	/^yank_copy_line(bd, y_idx)$/;"	f	file:
yank_cut_buffer0	src/ui.c	/^yank_cut_buffer0(dpy, cbd)$/;"	f
yank_register_mline	src/ops.c	/^yank_register_mline(regname)$/;"	f
yankreg	src/ops.c	/^static struct yankreg$/;"	s	file:
yankreg::y_array	src/ops.c	/^    char_u	**y_array;	\/* pointer to array of line pointers *\/$/;"	m	struct:yankreg	file:	access:public
yankreg::y_size	src/ops.c	/^    linenr_T	y_size;		\/* number of lines in y_array *\/$/;"	m	struct:yankreg	file:	access:public
yankreg::y_type	src/ops.c	/^    char_u	y_type;		\/* MLINE, MCHAR or MBLOCK *\/$/;"	m	struct:yankreg	file:	access:public
yankreg::y_width	src/ops.c	/^    colnr_T	y_width;	\/* only set if y_type == MBLOCK *\/$/;"	m	struct:yankreg	file:	access:public
z	runtime/macros/less.vim	/^map z <Space>$/;"	m
z	runtime/macros/life/life.vim	/^map z ,^,&,*,&<1,*<2$/;"	m
z_flag	src/os_riscos.h	151;"	d
zap_caddr	src/gui_riscos.c	/^static char	*zap_caddr[ZAP_STYLES] = {NULL, NULL, NULL, NULL};$/;"	v	file:
zap_file	src/gui_riscos.c	/^static char	*zap_file[ZAP_STYLES] = {NULL, NULL, NULL, NULL};$/;"	v	file:
zap_load_file	src/gui_riscos.c	/^zap_load_file(name, style)$/;"	f
zap_load_font	src/gui_riscos.c	/^zap_load_font(name)$/;"	f
zap_redraw	src/gui_riscos.c	/^int zap_redraw	    = FALSE;$/;"	v
zap_redraw_block	src/gui_riscos.c	/^zap_redraw_block;$/;"	v	typeref:struct:__anon8	file:
zap_redraw_colours	src/gui_riscos.c	/^static int	zap_redraw_colours[2];$/;"	v	file:
zap_redraw_initialised	src/gui_riscos.c	/^static int	zap_redraw_initialised = FALSE;$/;"	v	file:
zap_redraw_palette	src/gui_riscos.c	/^static int	zap_redraw_palette[16];$/;"	v	file:
zap_redraw_update_colours	src/gui_riscos.c	/^static int	zap_redraw_update_colours;$/;"	v	file:
zip	runtime/plugin/zipPlugin.vim	/^augroup zip$/;"	a
zip#Browse	runtime/autoload/zip.vim	/^fun! zip#Browse(zipfile)$/;"	f
zip#Read	runtime/autoload/zip.vim	/^fun! zip#Read(fname,mode)$/;"	f
zip#Write	runtime/autoload/zip.vim	/^fun! zip#Write(fname)$/;"	f
zt	runtime/syntax/2html.vim	/^  norm! zt$/;"	m
~CCommands	src/VisVim/Commands.cpp	/^CCommands::~CCommands()$/;"	f	class:CCommands	signature:()
~CCommands	src/VisVim/Commands.h	/^	~CCommands ();$/;"	p	class:CCommands	access:public	signature:()
~COleAutomationControl	src/VisVim/OleAut.cpp	/^COleAutomationControl::~COleAutomationControl ()$/;"	f	class:COleAutomationControl	signature:()
~COleAutomationControl	src/VisVim/OleAut.h	/^	~COleAutomationControl ();$/;"	p	class:COleAutomationControl	access:public	signature:()
~CShellExt	src/GvimExt/gvimext.cpp	/^CShellExt::~CShellExt()$/;"	f	class:CShellExt	signature:()
~CShellExt	src/GvimExt/gvimext.h	/^    ~CShellExt();$/;"	p	class:CShellExt	access:public	signature:()
~CShellExtClassFactory	src/GvimExt/gvimext.cpp	/^CShellExtClassFactory::~CShellExtClassFactory()$/;"	f	class:CShellExtClassFactory	signature:()
~CShellExtClassFactory	src/GvimExt/gvimext.h	/^	~CShellExtClassFactory();$/;"	p	class:CShellExtClassFactory	access:public	signature:()
~CVim	src/if_ole.cpp	/^    ~CVim();$/;"	p	class:CVim	file:	access:public	signature:()
~CVim	src/if_ole.cpp	/^CVim::~CVim()$/;"	f	class:CVim	signature:()
ã®	runtime/keymap/kana.vim	/^no ã®$/;"	m
